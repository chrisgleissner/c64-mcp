name: Release NPM Package

on:
  push:
    tags:
      - '*.*.*'
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository_owner }}/mcp-builder:latest
    permissions:
      contents: write
      packages: read
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    outputs:
      pkg_version: ${{ steps.version.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine tag version
        id: version
        run: |
          TAG="${GITHUB_REF_NAME}"
          CLEAN="${TAG#v}"
          echo "version=$CLEAN" >> "$GITHUB_OUTPUT"

      - name: Install dependencies
        run: npm ci

      - name: Run release-prepare
        run: |
          npm run release:prepare -- "${{ steps.version.outputs.version }}"

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push release preparation changes
        run: |
          git add package.json mcp.json CHANGELOG.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: prepare release ${{ steps.version.outputs.version }}"
            git push origin HEAD:main
          fi

      - name: Verify local package
        run: npm run check:package

      - name: Extract changelog entry
        id: changelog
        run: |
          ENTRY=$(node scripts/extract-changelog-entry.mjs "${{ steps.version.outputs.version }}")
          echo "entry<<EOF" >> "$GITHUB_OUTPUT"
          echo "$ENTRY" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Update GitHub release notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! gh release edit "${{ github.ref_name }}" --notes "${{ steps.changelog.outputs.entry }}"; then
            echo "::warning::Failed to update release notes for ${{ github.ref_name }}. The release may not exist yet or there may be a permissions issue."
            echo "You can manually update the release notes at: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
          fi

      - name: Build project
        run: npm run build

      - name: Publish to npm
        run: |
          if [ -z "${NPM_TOKEN:-}" ]; then
            echo "NPM_TOKEN secret not set" >&2
            exit 1
          fi
          npm config set //registry.npmjs.org/:_authToken "$NPM_TOKEN"
          npm publish --access public

  verify_npm:
    needs:
      - release
    uses: ./.github/workflows/package-check.yaml
    with:
      package_source: npm
      package_version: ${{ needs.release.outputs.pkg_version }}
