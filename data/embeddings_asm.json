{"dim":384,"model":"LocalMiniHashEmbedding","records":[{"name":"effects/sinewave.asm","language":"asm","vector":[0,0,0,0,-0.11585688591003418,0,0,0,0,0,0,0,0,0,0,-0.23171377182006836,0,0,0,0.05792844295501709,0,0,-0.11585688591003418,0,0,0,0,0,0,0,0,0,0,0,-0.17378532886505127,0,0,0.05792844295501709,0,0,0,0,0.4634275436401367,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.05792844295501709,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11585688591003418,0,0,0,0,0,-0.05792844295501709,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.05792844295501709,0,0,0.23171377182006836,0,0,0,0,0,0,0,0,-0.05792844295501709,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.23171377182006836,0,0,0,0,0,-0.23171377182006836,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.23171377182006836,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.23171377182006836,0,0,0.23171377182006836,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.05792844295501709,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.23171377182006836,0.11585688591003418,0,0,0,0,0,0,0,0,-0.11585688591003418,0,0,0,0,0,-0.11585688591003418,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.11585688591003418,0,-0.23171377182006836,0,0,0,0,0,0,0,0,0,0,0,0,-0.11585688591003418,0,0,0.11585688591003418,0,-0.23171377182006836,0,0,0,0,0,0,0,0,0,0,0,-0.23171377182006836,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.11585688591003418,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.05792844295501709,0,0,0,0,0,-0.05792844295501709,0],"text":"        *= $0801\n        LDA #$00\nLOOP    STA $D020\n        ADC #$01\n        JMP LOOP\n","sourcePath":"data/assembly/examples/effects/sinewave.asm","sourceMtimeMs":1760978194728.8384},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.071.small_memory_fill.asm","language":"asm","vector":[0,0.001488431473262608,0,0,-0.002976862946525216,0,0.005953725893050432,0.009674804285168648,0,0,-0.004465294536203146,0,0.002976862946525216,0,0,-0.002976862946525216,-0.000744215736631304,0,0.0267917662858963,0.006697941571474075,0,-0.002976862946525216,-0.001488431473262608,0,0.002976862946525216,0.002976862946525216,0,0,-0.003721078624948859,0,0.002976862946525216,0.005209510214626789,0,0,-0.000744215736631304,0,0,0.002232647268101573,0,0,0,0,0,0,0,-0.002976862946525216,-0.002976862946525216,0,0,0,0,-0.002976862946525216,-0.002232647268101573,0,0.008930589072406292,0,0,-0.014884314499795437,-0.008930589072406292,0,0,0.001488431473262608,0,0,-0.000744215736631304,0,0.011907451786100864,0.000744215736631304,0,0,-0.009674804285168648,0,0,0.000744215736631304,0,0,-0.004465294536203146,0,0,0.003721078624948859,0,-0.005953725893050432,-0.002976862946525216,0,0,0.005209510214626789,0,-0.008930589072406292,-0.010419020429253578,0,0,0,0,-0.005953725893050432,0,0,0,0,0,-0.005953725893050432,-0.000744215736631304,0,0.017861178144812584,0.004465294536203146,0,-0.005953725893050432,0,0,0,0.002232647268101573,0,0,-0.001488431473262608,0,0,0.01339588314294815,0,-0.008930589072406292,-0.002232647268101573,0,0,0.002976862946525216,0,-0.005953725893050432,-0.002232647268101573,0,0.017861178144812584,0.001488431473262608,0,-0.008930589072406292,0,0,0,0.002232647268101573,0,-0.002976862946525216,0,0,0,0.000744215736631304,0,0,-0.002232647268101573,0,0.005953725893050432,0.000744215736631304,0,-0.002976862946525216,-0.001488431473262608,0,0.8692439794540405,0.004465294536203146,0,0,-0.007442157249897718,0,0,0,0,0,-0.000744215736631304,0,0.014884314499795437,0.005953725893050432,0,0,-0.000744215736631304,0,0.002976862946525216,0,0,-0.017861178144812584,-0.004465294536203146,0,0.005953725893050432,0.000744215736631304,0,-0.005953725893050432,-0.002976862946525216,0,0.0267917662858963,0,0,0,-0.008930589072406292,0,0,0,0,-0.002976862946525216,-0.005209510214626789,0,0.008930589072406292,0.001488431473262608,0,-0.005953725893050432,-0.004465294536203146,0,0.005953725893050432,0.011163235642015934,0,-0.008930589072406292,-0.007442157249897718,0,0.014884314499795437,0,0,-0.002976862946525216,0,0,0.008930589072406292,0,0,0,-0.004465294536203146,0,0,0.001488431473262608,0,-0.005953725893050432,-0.002976862946525216,0,0,0.009674804285168648,0,-0.002976862946525216,-0.005209510214626789,0,0,0.006697941571474075,0,0,-0.002232647268101573,0,0,0.000744215736631304,0,-0.002976862946525216,0,0,0.002976862946525216,0.003721078624948859,0,-0.002976862946525216,-0.001488431473262608,0,0.002976862946525216,0.43462198972702026,0,0,0,0,0.002976862946525216,0,0,0,-0.000744215736631304,0,0.002976862946525216,0.007442157249897718,0,-0.005953725893050432,-0.000744215736631304,0,0,0.003721078624948859,0,0,-0.012651667930185795,0,0,0.002976862946525216,0,-0.002976862946525216,-0.002976862946525216,0,0.005953725893050432,0.016372745856642723,0,0,0,0,0.002976862946525216,0,0,0,-0.001488431473262608,0,0,0.004465294536203146,0,-0.002976862946525216,-0.004465294536203146,0,0.005953725893050432,0.002976862946525216,0,-0.008930589072406292,-0.006697941571474075,0,0,0.007442157249897718,0,0,-0.002976862946525216,0,0.008930589072406292,0.004465294536203146,0,0,-0.001488431473262608,0,0.002976862946525216,0.004465294536203146,0,-0.002976862946525216,-0.004465294536203146,0,0.002976862946525216,0,0,0,-0.001488431473262608,0,0,0,0,0,-0.002232647268101573,0,0,0,0,-0.002976862946525216,-0.002976862946525216,0,0,0.005953725893050432,0,-0.002976862946525216,-0.003721078624948859,0,0,0.001488431473262608,0,-0.017861178144812584,-0.000744215736631304,0,0.002976862946525216,0.001488431473262608,0,0,0,0,0,0.002976862946525216,0,-0.017861178144812584,-0.003721078624948859,0,0,0.21731099486351013,0,-0.008930589072406292,0,0,0.005953725893050432,0,0,-0.005953725893050432,-0.001488431473262608,0,0.008930589072406292,0.006697941571474075,0,-0.017861178144812584,0,0,0,0.002232647268101573,0,0,-0.004465294536203146,0],"text":"BasicUpstart2(main)\n\n// Constants ///////////////////////////////////////////////////////////////////\n\n.const SCREEN_LOCATION = $0400\n.const SCREEN_WIDTH    = 40\n\n.const START_ADDR = SCREEN_LOCATION\n.const FILL_COUNT = SCREEN_WIDTH * 6\n\n// Routine params //////////////////////////////////////////////////////////////\n\n* = ($100 - 1) virtual\n\nfill_count: .byte 0\n\n// Main ////////////////////////////////////////////////////////////////////////\n\n* = $080e\n\nmain:\n          lda #0                  // start filling with 0\n\n!loop:\n          ldx #FILL_COUNT\n          jsr small_mem_fill\n\n          clc\n          adc #1\n\n          clc\n          bcc !loop-\n\n// Routine /////////////////////////////////////////////////////////////////////\n\n// Note that this routine does not support filling with a zero count (see below).\n//\nsmall_mem_fill:\n\n!loop:\n          sta START_ADDR - 1, x\n          dex\n          bne !loop-\n\n          rts\n\n// This version of the routine supports a zero count:\n\nsmall_mem_fill_supports_zero:\n          ldx #1\n          beq exit              // In x86, typically this would be a jump; here, we take advantage of\n                                // the fact that ldx affects the zero flag, and fall through if X is 0!\n!loop:\n          sta START_ADDR - 1, x\n          dex\n          bne !loop-\n\nexit:\n          rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.071.small_memory_fill.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.071.small_memory_fill.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.076.delays.asm","language":"asm","vector":[0,0.0013811480021104217,0,0,-0.0020717219449579716,0,0,0.013120905496180058,0,0,-0.0027622960042208433,0,0,0.0013811480021104217,0,-0.0027622960042208433,0,0,0.030385255813598633,0.004143443889915943,0,0,0,0,0,0,0,0,-0.0013811480021104217,0,0,0.0006905740010552108,0,0,-0.0006905740010552108,0,0,0.0006905740010552108,0,0,-0.0034528698306530714,0,0,0.0013811480021104217,0,-0.0027622960042208433,-0.005524592008441687,0,0.0027622960042208433,0.0013811480021104217,0,0,-0.005524592008441687,0,0,0.0013811480021104217,0,-0.019336070865392685,0,0,0,0.0013811480021104217,0,0,0,0,0,0.0027622960042208433,0,0,-0.016573775559663773,0,0,0.0027622960042208433,0,0,-0.020026644691824913,0,0,0.0013811480021104217,0,-0.0027622960042208433,-0.004143443889915943,0,0,0.013811479322612286,0,-0.013811479322612286,-0.006905739661306143,0,0,0,0,-0.008286887779831886,-0.0006905740010552108,0,0,0.004143443889915943,0,0,0,0,0.02762295864522457,0,0,-0.0027622960042208433,0,0,0.0027622960042208433,0,0,0,-0.0013811480021104217,0,0,0.015192627906799316,0,-0.005524592008441687,0,0,0.0027622960042208433,0.0034528698306530714,0,0,-0.0013811480021104217,0,0.022098368033766747,0.0006905740010552108,0,-0.011049184016883373,0,0,0.005524592008441687,0.0013811480021104217,0,-0.005524592008441687,0,0,0.011049184016883373,0,0,0,-0.0020717219449579716,0,0.0027622960042208433,0.0013811480021104217,0,0,0,0,0.8673608899116516,0,0,-0.016573775559663773,-0.011049184016883373,0,0.0027622960042208433,0.0006905740010552108,0,0,-0.0027622960042208433,0,0.008286887779831886,0.0006905740010552108,0,-0.005524592008441687,-0.0027622960042208433,0,0,0.0006905740010552108,0,-0.008286887779831886,0,0,0.005524592008441687,0.0006905740010552108,0,-0.008286887779831886,-0.0013811480021104217,0,0.02486066333949566,0,0,0,-0.013811479322612286,0,0,0,0,0,-0.013811479322612286,0,0.005524592008441687,0.0006905740010552108,0,0,-0.0020717219449579716,0,0,0.02071721851825714,0,0,-0.004834017716348171,0,0.0027622960042208433,0.0013811480021104217,0,-0.0027622960042208433,0,0,0.0027622960042208433,0,0,-0.0027622960042208433,-0.0027622960042208433,0,0,0.0013811480021104217,0,0,0,0,0,0.011049184016883373,0,0,-0.006215165834873915,0,0,0.01035860925912857,0,0,-0.0027622960042208433,0,0,0.005524592008441687,0,0,0,0,0.011049184016883373,0.0013811480021104217,0,-0.011049184016883373,0,0,0.011049184016883373,0.4336804449558258,0,-0.0027622960042208433,-0.008286887779831886,0,0,0.0013811480021104217,0,0,-0.0006905740010552108,0,0,0.004834017716348171,0,0,-0.0027622960042208433,0,0,0,0,-0.0027622960042208433,-0.008977461606264114,0,0.016573775559663773,0.0027622960042208433,0,0,-0.004143443889915943,0,0,0.01243033166974783,0,0,0,0,0,0,0,0,0,0,0,0.0027622960042208433,0,0,-0.0006905740010552108,0,0.013811479322612286,0,0,-0.005524592008441687,-0.0034528698306530714,0,0.0027622960042208433,0.0013811480021104217,0,0,-0.0034528698306530714,0,0.005524592008441687,0.0013811480021104217,0,0,-0.0013811480021104217,0,0,0.006905739661306143,0,-0.0027622960042208433,-0.0006905740010552108,0,0,0.0006905740010552108,0,0,0,0,0,0,0,-0.005524592008441687,-0.0013811480021104217,0,0.0027622960042208433,0.0006905740010552108,0,-0.011049184016883373,0,0,0.0027622960042208433,0.011049184016883373,0,-0.011049184016883373,-0.008286887779831886,0,0.0027622960042208433,0.006905739661306143,0,0,-0.0027622960042208433,0,0.0027622960042208433,0.0027622960042208433,0,0,0,0,0,0.0006905740010552108,0,-0.02762295864522457,0,0,0,0.2168402224779129,0,-0.03867214173078537,-0.005524592008441687,0,0.0027622960042208433,0.008977461606264114,0,-0.008286887779831886,0,0,0.02762295864522457,0.0020717219449579716,0,-0.013811479322612286,-0.0013811480021104217,0,0,0,0,0,-0.0020717219449579716,0],"text":"BasicUpstart2(main)\n\n// Routine params //////////////////////////////////////////////////////////////\n\n* = ($100 - 2) virtual\n\np_delay_count_lo: .byte $FF\np_delay_count_hi: .byte $FF\n\n// Main variables //////////////////////////////////////////////////////////////\n\n* = $080d\n\nv_delay_count_lo: .byte $FF\nv_delay_count_hi: .byte $FF\n\n// Main ////////////////////////////////////////////////////////////////////////\n\nmain:\n          lda v_delay_count_lo\n          sta p_delay_count_lo\n          lda v_delay_count_hi\n          sta p_delay_count_hi\n\n          jsr delay_16_bit_direct\n\n          ldx p_delay_count_lo\n\n          jsr delay_8_bit\n\n          ldy #0                     // optional (not present in the original) - makes the count exact\n          ldx p_delay_count_hi\n          jsr delay_16_bit_multiples\n\n          clc\n          bcc main\n\n// Routines ////////////////////////////////////////////////////////////////////\n\n// A very direct 16 bit decrease and comparison.\n//\ndelay_16_bit_direct:\n!loop:\n          lda p_delay_count_lo  // 16-bit decrease\n          sec                   // ^\n          sbc #1                // ^\n          sta p_delay_count_lo  // ^\n          lda p_delay_count_hi  // ^\n          sbc #0                // ^\n          sta p_delay_count_hi  // ^\n\n          lda p_delay_count_lo  // 16-bit comparison (against 0)\n          cmp #0                // ^\n          bne !loop-            // ^\n          lda p_delay_count_hi  // ^\n          cmp #0                // ^\n          bne !loop-            // ^\n\n          rts\n\n// An 8-bit decrease loop.\n//\ndelay_8_bit:\n!loop:\n          dex\n          bne !loop-\n          rts\n\n// A 16 bits loop that works on multiples of 256.\n//\ndelay_16_bit_multiples:\n!loop:\n          dey\n          bne !loop-\n          dex\n          bne !loop-\n          rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.076.delays.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.076.delays.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.081.hail_of_barbs.asm","language":"asm","vector":[0,0,0,0,0,0,0.03980542719364166,0.03980542719364166,0,0,-0.04975678771734238,0,0.07961085438728333,0,0,0,-0.029854072257876396,0,0.07961085438728333,0.07961085438728333,0,-0.03980542719364166,0,0,0,0,0,0,-0.11941628903150558,0,0,0.06965950131416321,0,0,0,0,0,0,0,-0.03980542719364166,-0.009951356798410416,0,0,0,0,0,-0.01990271359682083,0,0,0.01990271359682083,0,0,0,0,0,0,0,-0.07961085438728333,0,0,0,0.01990271359682083,0,0,0,0,0,0.009951356798410416,0,-0.03980542719364166,-0.01990271359682083,0,0,0.04975678771734238,0,0,-0.009951356798410416,0,0.07961085438728333,0.009951356798410416,0,0,-0.01990271359682083,0,0,0.21892985701560974,0,-0.23883257806301117,-0.05970814451575279,0,0.03980542719364166,0,0,0,-0.01990271359682083,0,0.03980542719364166,0,0,0,0,0,0.07961085438728333,0.01990271359682083,0,0,-0.01990271359682083,0,0,0.03980542719364166,0,0,0,0,0,0.03980542719364166,0,0,-0.01990271359682083,0,0,0.01990271359682083,0,0,-0.009951356798410416,0,0.07961085438728333,0,0,-0.23883257806301117,0,0,0,0.03980542719364166,0,0,-0.01990271359682083,0,0,0,0,0,-0.05970814451575279,0,0,0,0,0,0,0,0.27863800525665283,0,0,0,-0.03980542719364166,0,0.11941628903150558,0,0,0,0,0,0.1990271508693695,0.009951356798410416,0,-0.07961085438728333,-0.01990271359682083,0,0,0,0,0,0,0,0,0.04975678771734238,0,0,0,0,0,0,0,-0.11941628903150558,-0.1293676495552063,0,0,0.029854072257876396,0,-0.11941628903150558,0,0,0,0.01990271359682083,0,0,-0.009951356798410416,0,0,0.14927035570144653,0,0,-0.029854072257876396,0,0.27863800525665283,0,0,0,-0.009951356798410416,0,0,0,0,-0.03980542719364166,0,0,0,0.009951356798410416,0,-0.07961085438728333,0,0,0,0.05970814451575279,0,0,-0.11941628903150558,0,0,0.01990271359682083,0,0,-0.009951356798410416,0,0,0,0,0,0,0,0.03980542719364166,0,0,0,0,0,0.11941628903150558,0.13931900262832642,0,-0.03980542719364166,-0.009951356798410416,0,0.03980542719364166,0.05970814451575279,0,0,0,0,0,0.09951357543468475,0,0,-0.03980542719364166,0,0,0,0,0,-0.01990271359682083,0,0,0,0,0,0,0,0,0,0,-0.07961085438728333,-0.06965950131416321,0,0,0,0,0,-0.05970814451575279,0,0,0.01990271359682083,0,0,0,0,0.07961085438728333,0,0,-0.03980542719364166,-0.05970814451575279,0,0,0.14927035570144653,0,0,0,0,0.15922170877456665,0.009951356798410416,0,0,-0.01990271359682083,0,0,0.01990271359682083,0,-0.23883257806301117,-0.03980542719364166,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.03980542719364166,0.03980542719364166,0,0,-0.05970814451575279,0,0,0.05970814451575279,0,0,-0.01990271359682083,0,0.03980542719364166,0.01990271359682083,0,0,0,0,0,0,0,-0.03980542719364166,0,0,0.03980542719364166,0.06965950131416321,0,0,0,0,0,0.029854072257876396,0,-0.03980542719364166,0,0,0.4378597140312195,0.04975678771734238,0,-0.11941628903150558,-0.05970814451575279,0,0,0,0,-0.03980542719364166,0,0],"text":"// This is \"Fundamental Bomb Update\", with the (negligible) difference below.\n\n      sta $fb\n      lda #$07\n      sta $fc\nl033c:\n      ldy #0       // in the reference routine, this is outside (above) the loop, as it's\n                   // not necessary to update it.\n      lda ($fb), y\n      cmp #$24\n      bne l034e\n      ldy #$28\n      sta ($fb), y\n      ldy #0\n      lda #$20\n      sta ($fb), y\n\nl034e:\n      lda $fb\n      sec\n      sbc #1\n      sta $fb\n      lda $fc\n      sbc #0\n      sta $fc\n      cmp #3\n      bne l033c\n\n      rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.081.hail_of_barbs.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.081.hail_of_barbs.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.086.scroll_into_lower_memory.asm","language":"asm","vector":[0,0.000738473900128156,0,0,-0.001476947800256312,0,0.008861687034368515,0.008123212493956089,0,0,-0.0044308435171842575,0,0.01772337406873703,0.001476947800256312,0,0,-0.002953895600512624,0,0.03544674813747406,0.015507951378822327,0,-0.002953895600512624,-0.0022154217585921288,0,0,0.003692369442433119,0,0,-0.001476947800256312,0,0,0.0044308435171842575,0,0,-0.005907791201025248,0,0.002953895600512624,0.0022154217585921288,0,-0.002953895600512624,0,0,0,0.001476947800256312,0,-0.005907791201025248,-0.011077108792960644,0,0,0,0,-0.005907791201025248,-0.000738473900128156,0,0.002953895600512624,0.001476947800256312,0,-0.008861687034368515,-0.007384738884866238,0,0,0.005169317126274109,0,-0.005907791201025248,0,0,0.011815582402050495,0,0,-0.002953895600512624,-0.007384738884866238,0,0.011815582402050495,0.000738473900128156,0,0,-0.006646265275776386,0,0,0.001476947800256312,0,0,-0.002953895600512624,0,0.002953895600512624,0.019200321286916733,0,-0.011815582402050495,-0.013292530551552773,0,0,0,0,-0.005907791201025248,-0.007384738884866238,0,0.008861687034368515,0,0,0,0,0,0.011815582402050495,0.005169317126274109,0,0,0,0,0.008861687034368515,0.008861687034368515,0,-0.005907791201025248,0,0,0,0.01772337406873703,0,-0.002953895600512624,-0.001476947800256312,0,0.002953895600512624,0.002953895600512624,0,0,-0.0022154217585921288,0,0.032492849975824356,0.000738473900128156,0,-0.011815582402050495,0,0,0,0.008123212493956089,0,-0.002953895600512624,-0.001476947800256312,0,0.005907791201025248,0,0,0,-0.003692369442433119,0,0.02363116480410099,0,0,0,-0.005169317126274109,0,0.8654913902282715,0.001476947800256312,0,-0.002953895600512624,-0.0044308435171842575,0,0,0.000738473900128156,0,0,-0.007384738884866238,0,0.008861687034368515,0.005907791201025248,0,0,-0.001476947800256312,0,0,0.006646265275776386,0,-0.026585061103105545,-0.0022154217585921288,0,0.002953895600512624,0.0022154217585921288,0,-0.005907791201025248,0,0,0.008861687034368515,0.001476947800256312,0,0,-0.005907791201025248,0,0,0,0,-0.011815582402050495,-0.005907791201025248,0,0.008861687034368515,0.005169317126274109,0,-0.008861687034368515,-0.001476947800256312,0,0.014769477769732475,0.015507951378822327,0,0,-0.006646265275776386,0,0.01772337406873703,0.0044308435171842575,0,-0.005907791201025248,-0.0044308435171842575,0,0.008861687034368515,0,0,0,-0.001476947800256312,0,0,0.003692369442433119,0,-0.008861687034368515,0,0,0,0.020677268505096436,0,-0.002953895600512624,-0.005907791201025248,0,0,0.008861687034368515,0,-0.011815582402050495,-0.0022154217585921288,0,0.002953895600512624,0.002953895600512624,0,0,0,0,0,0.011815582402050495,0,-0.02953895553946495,0,0,0.002953895600512624,0.43348416686058044,0,-0.002953895600512624,-0.0022154217585921288,0,0,0,0,0,-0.001476947800256312,0,0,0.0044308435171842575,0,0,-0.001476947800256312,0,0,0.000738473900128156,0,-0.01772337406873703,-0.015507951378822327,0,0,0.001476947800256312,0,0,-0.0044308435171842575,0,0.002953895600512624,0.007384738884866238,0,0,-0.000738473900128156,0,0,0.002953895600512624,0,0,-0.005907791201025248,0,0,0.0044308435171842575,0,0,-0.0044308435171842575,0,0.011815582402050495,0.008123212493956089,0,-0.008861687034368515,-0.002953895600512624,0,0.002953895600512624,0.008861687034368515,0,0,-0.0044308435171842575,0,0.026585061103105545,0.006646265275776386,0,0,0,0,0,0.002953895600512624,0,-0.002953895600512624,-0.0044308435171842575,0,0,0.0022154217585921288,0,-0.008861687034368515,-0.002953895600512624,0,0,0,0,0,-0.006646265275776386,0,0.002953895600512624,0.0022154217585921288,0,-0.01772337406873703,0,0,0,0.008123212493956089,0,0,-0.01772337406873703,0,0.002953895600512624,0.001476947800256312,0,-0.008861687034368515,-0.0022154217585921288,0,0.008861687034368515,0.001476947800256312,0,0,0,0,0,0.005907791201025248,0,0,0,0,0,0.21637284755706787,0,-0.011815582402050495,-0.009600160643458366,0,0.002953895600512624,0,0,-0.005907791201025248,0,0,0.038400642573833466,0.003692369442433119,0,-0.026585061103105545,0,0,0,0,0,-0.005907791201025248,-0.006646265275776386,0],"text":"BasicUpstart2(main)\n\n.const SCREEN_LOCATION = $0400\n.const START_POSITION = SCREEN_LOCATION\n.const STOP_POSITION = SCREEN_LOCATION + 40 * 25 - 1 // see note below\n\n// Routine variables ///////////////////////////////////////////////////////////\n\n* = ($100 - 6) virtual\n\ncurrent_position_lo: .byte 0\ncurrent_position_hi: .byte 0\n\n// Routine params //////////////////////////////////////////////////////////////\n\nstart_position_lo: .byte 0\nstart_position_hi: .byte 0\nstop_position_lo:  .byte 0 // This is the last position copied lower\nstop_position_hi:  .byte 0\n\n// Main ////////////////////////////////////////////////////////////////////////\n\n* = $080d\n\nmain:\n          lda #<START_POSITION\n          sta start_position_lo\n          lda #>START_POSITION\n          sta start_position_hi\n          lda #<STOP_POSITION\n          sta stop_position_lo\n          lda #>STOP_POSITION\n          sta stop_position_hi\n\n          jsr scroll_into_lower_memory\n\nhalt:\n          clc\n          bcc halt\n\n// Routines ////////////////////////////////////////////////////////////////////\n\n// This is similar to `continuous_scroll_256b_left`, with the differences:\n//\n// 1. in order to scroll more than 256 bytes, it increases the start position instead of the Y register\n// 2. it doesn't wrap around, because there is no Y register wraparound\n\nscroll_into_lower_memory:\n          ldy #0\n\nrotate_bytes_to_left:\n          iny                         // read from the following position\n          lda (start_position_lo), y\n          dey                         // write to the current position\n          sta (start_position_lo), y\n\n          inc start_position_lo       // 16-bit increment\n          bne !+                      // ^\n          inc start_position_hi       // ^\n!:\n          lda start_position_lo       // 16-bit comparison with stop position\n          cmp stop_position_lo\n          bne rotate_bytes_to_left\n          lda start_position_hi\n          cmp stop_position_hi\n          bne rotate_bytes_to_left\n\n          rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.086.scroll_into_lower_memory.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.086.scroll_into_lower_memory.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.087.line_blank.asm","language":"asm","vector":[0,0,0,0,-0.0014160872669890523,0,0.005664349067956209,0.004248261451721191,0,0,-0.0028321745339781046,0,0.01416087243705988,0.0028321745339781046,0,0,-0.0028321745339781046,0,0.02832174487411976,0.014868916012346745,0,0,-0.0028321745339781046,0,0,0.004956305492669344,0,0,0,0,0,0.004248261451721191,0,0,-0.0007080436334945261,0,0,0.0007080436334945261,0,0,-0.0014160872669890523,0,0.0028321745339781046,0,0,-0.0028321745339781046,-0.008496522903442383,0,0,0,0,-0.0028321745339781046,0,0,0.0028321745339781046,0,0,-0.008496522903442383,-0.0028321745339781046,0,0,0.0014160872669890523,0,0,0,0,0.011328698135912418,0.0007080436334945261,0,0,-0.007788479793816805,0,0.008496522903442383,0.0014160872669890523,0,0,-0.018409134820103645,0,0.0028321745339781046,0.0014160872669890523,0,0,-0.0028321745339781046,0,0,0.03823435679078102,0,-0.011328698135912418,-0.008496522903442383,0,0,0,0,-0.005664349067956209,-0.004956305492669344,0,0,0,0,0,-0.0007080436334945261,0,0.008496522903442383,0.005664349067956209,0,0,0,0,0.0028321745339781046,0.00708043621852994,0,0,0,0,0.0028321745339781046,0.01416087243705988,0,0,0,0,0,0.0021241307258605957,0,0,-0.0014160872669890523,0,0.03115391917526722,0.0014160872669890523,0,-0.011328698135912418,0,0,0.0028321745339781046,0.004956305492669344,0,-0.0028321745339781046,-0.0007080436334945261,0,0.005664349067956209,0.0014160872669890523,0,0,-0.0014160872669890523,0,0.01416087243705988,0.0007080436334945261,0,0,-0.0014160872669890523,0,0.8638132214546204,0.0014160872669890523,0,-0.01416087243705988,-0.004956305492669344,0,0,0,0,0,-0.004248261451721191,0,0.008496522903442383,0.005664349067956209,0,0,0,0,0,0.004248261451721191,0,-0.03398609161376953,-0.0014160872669890523,0,0,0.0021241307258605957,0,-0.005664349067956209,0,0,0,0,0,0,-0.005664349067956209,0,0,0,0,-0.011328698135912418,-0.012036741711199284,0,0.019825221970677376,0.0007080436334945261,0,-0.005664349067956209,-0.0014160872669890523,0,0.019825221970677376,0.023365439847111702,0,0,-0.004248261451721191,0,0.011328698135912418,0.0014160872669890523,0,-0.0028321745339781046,-0.0014160872669890523,0,0.0028321745339781046,0.0014160872669890523,0,0,0,0,0,0.0014160872669890523,0,0,0,0,0,0.01911717839539051,0,0,-0.005664349067956209,0,0,0.008496522903442383,0,0,-0.0014160872669890523,0,0,0.0028321745339781046,0,0,0,0,0.0028321745339781046,0.00708043621852994,0,-0.03115391917526722,0,0,0.005664349067956209,0.4319066107273102,0,0,-0.00708043621852994,0,0,0.0007080436334945261,0,0,-0.0007080436334945261,0,0,0.004248261451721191,0,0,-0.0007080436334945261,0,0,0.0007080436334945261,0,-0.008496522903442383,-0.01911717839539051,0,0,0,0,-0.0028321745339781046,-0.0028321745339781046,0,0.011328698135912418,0.0028321745339781046,0,0,0,0,0,0.0021241307258605957,0,0,-0.005664349067956209,0,0,0.010620654560625553,0,0,-0.0028321745339781046,0,0.008496522903442383,0.009912610985338688,0,-0.005664349067956209,-0.0028321745339781046,0,0.005664349067956209,0.005664349067956209,0,0,-0.0028321745339781046,0,0.019825221970677376,0.0014160872669890523,0,-0.0028321745339781046,0,0,0,0.0021241307258605957,0,0,0,0,0.0028321745339781046,0.0007080436334945261,0,0,0,0,0,0.0007080436334945261,0,-0.0028321745339781046,0,0,0,0,0,-0.016993045806884766,0,0,0,0.009204567410051823,0,0,-0.018409134820103645,0,0,0.00354021810926497,0,-0.005664349067956209,-0.0007080436334945261,0,0.0028321745339781046,0.0014160872669890523,0,0,0,0,0,0.00354021810926497,0,0,0,0,0,0.2159533053636551,0,-0.03681826964020729,-0.007788479793816805,0,0.0028321745339781046,0,0,-0.005664349067956209,-0.0014160872669890523,0,0.07646871358156204,0.007788479793816805,0,-0.016993045806884766,0,0,0,0,0,-0.005664349067956209,-0.008496522903442383,0],"text":"BasicUpstart2(main)\n\n.const SCREEN_LOCATION = $0400\n.const START_POSITION = SCREEN_LOCATION + 1\n.const STOP_POSITION = START_POSITION + 25 * 40 // see note below\n.const BLANK_CHAR = $20                         // space\n\n// Routine variables ///////////////////////////////////////////////////////////\n\n* = ($100 - 6) virtual\n\ncurrent_position_lo: .byte 0\ncurrent_position_hi: .byte 0\n\n// Routine params //////////////////////////////////////////////////////////////\n\nstart_position_lo: .byte 0\nstart_position_hi: .byte 0\nstop_position_lo:  .byte 0 // Must = start_position + 40 * lines\nstop_position_hi:  .byte 0\n\n// Main ////////////////////////////////////////////////////////////////////////\n\n* = $080d\n\nmain:\n          lda #<START_POSITION\n          sta start_position_lo\n          lda #>START_POSITION\n          sta start_position_hi\n          lda #<STOP_POSITION\n          sta stop_position_lo\n          lda #>STOP_POSITION\n          sta stop_position_hi\n\n          jsr line_blank\n\nhalt:\n          clc\n          bcc halt\n\n// Routines ////////////////////////////////////////////////////////////////////\n\n// The routine blanks a *vertical* line.\n\nline_blank:\n          lda start_position_lo\n          sta current_position_lo\n          lda start_position_hi\n          sta current_position_hi\n\n          ldy #0\nblank_cycle:\n          lda #BLANK_CHAR              // blank the current position\n          sta (current_position_lo), y // ^\n\n          clc                          // 16-bit addition of 40 (go to the position below)\n          lda current_position_lo      // ^\n          adc #40                      // ^\n          sta current_position_lo      // ^\n          lda current_position_hi      // ^\n          adc #0                       // ^\n          sta current_position_hi      // ^\n\n          lda current_position_lo      // 16-bit comparison with the end position\n          cmp stop_position_lo         // ^\n          bne blank_cycle              // ^\n          lda current_position_hi      // ^\n          cmp stop_position_hi         // ^\n          bne blank_cycle\n\n          rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.087.line_blank.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.087.line_blank.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.090.joystick_handling.asm","language":"asm","vector":[0.00500463554635644,0.00125115888658911,0,0,-0.006255794316530228,0,0,0.00125115888658911,0,0,-0.003753476543352008,0,0.01000927109271288,0.00250231777317822,0,-0.01000927109271288,-0.00500463554635644,0,0.02001854218542576,0.05129751190543175,0,0,0,0,0.00500463554635644,0.015013906173408031,0,0,-0.008758111856877804,0,0,0.043790560215711594,0,0,-0.00125115888658911,0,0,0.00250231777317822,0,0,-0.00125115888658911,0,0.00500463554635644,0.00250231777317822,0,-0.00500463554635644,-0.008758111856877804,0,0,0,0,-0.00500463554635644,0,0,0,0,0,-0.01000927109271288,-0.02252085879445076,0,0.00500463554635644,0.008758111856877804,0,0,0,0,0.015013906173408031,0,0,0,-0.00125115888658911,0,0,0.00250231777317822,0,0,-0.012511588633060455,0,0,0,0,-0.015013906173408031,0,0,0,0.015013906173408031,0,-0.02001854218542576,-0.012511588633060455,0,0,0.00500463554635644,0,0,-0.003753476543352008,0,0.00500463554635644,0.00250231777317822,0,0,0,0,0.00500463554635644,0,0,-0.00500463554635644,0,0,0.04504171758890152,0.00500463554635644,0,0,-0.00500463554635644,0,0,0.01000927109271288,0,0,-0.00125115888658911,0,0,0.00250231777317822,0,0,-0.00125115888658911,0,0.04003708437085152,0.00125115888658911,0,-0.02001854218542576,0,0,0,0.02502317726612091,0,-0.00500463554635644,0,0,0.00500463554635644,0.006255794316530228,0,0,-0.00500463554635644,0,0,0.00125115888658911,0,0,-0.00250231777317822,0,0.8407787084579468,0,0,-0.015013906173408031,-0.00500463554635644,0,0,0.003753476543352008,0,0,-0.003753476543352008,0,0.02001854218542576,0.007506953086704016,0,0,0,0,0.015013906173408031,0,0,-0.02502317726612091,-0.01126042939722538,0,0.00500463554635644,0.00125115888658911,0,-0.015013906173408031,-0.007506953086704016,0,0.00500463554635644,0,0,-0.00500463554635644,-0.01000927109271288,0,0,0,0,-0.02001854218542576,-0.006255794316530228,0,0.00500463554635644,0.00250231777317822,0,0,0,0,0.030027812346816063,0.008758111856877804,0,-0.015013906173408031,-0.008758111856877804,0,0.16515296697616577,0.023772018030285835,0,-0.00500463554635644,0,0,0.01000927109271288,0.00125115888658911,0,-0.00500463554635644,0,0,0,0,0,-0.00500463554635644,0,0,0,0.02252085879445076,0,0,-0.012511588633060455,0,0,0.00500463554635644,0,0,-0.00250231777317822,0,0.02502317726612091,0.003753476543352008,0,0,0,0,0,0,0,-0.00500463554635644,0,0,0.01000927109271288,0.4203893542289734,0,0,-0.007506953086704016,0,0,0.00125115888658911,0,0,-0.00125115888658911,0,0.01000927109271288,0.01000927109271288,0,0,-0.00125115888658911,0,0.01000927109271288,0.007506953086704016,0,-0.015013906173408031,-0.015013906173408031,0,0,0.003753476543352008,0,0,-0.007506953086704016,0,0,0.006255794316530228,0,0,-0.00250231777317822,0,0,0,0,0,-0.01000927109271288,0,0,0.00250231777317822,0,-0.00500463554635644,-0.003753476543352008,0,0,0.015013906173408031,0,-0.00500463554635644,-0.012511588633060455,0,0.00500463554635644,0.08257648348808289,0,0,-0.00250231777317822,0,0.10009270906448364,0.006255794316530228,0,0,-0.00250231777317822,0,0.015013906173408031,0.00125115888658911,0,-0.01000927109271288,-0.003753476543352008,0,0.00500463554635644,0.01126042939722538,0,0,0,0,0,0,0,0,0,0,0.00500463554635644,0.012511588633060455,0,-0.015013906173408031,0,0,0,0.01000927109271288,0,0,-0.007506953086704016,0,0,0.00500463554635644,0,-0.04504171758890152,-0.00125115888658911,0,0.00500463554635644,0.00125115888658911,0,0,0,0,0,0.00500463554635644,0,0,0,0,0,0.2151993215084076,0,-0.02502317726612091,-0.01126042939722538,0,0,0,0,0,0,0,0.02502317726612091,0.00500463554635644,0,-0.02502317726612091,0,0,0.00500463554635644,0.003753476543352008,0,0,-0.006255794316530228,0],"text":"BasicUpstart2(main)\n\n.const JOY_1_POS_ADDR  = $dc01\n.const SPRITE_0_X_ADDR = $d000\n.const SPRITE_0_Y_ADDR = $d001\n\n// Main ////////////////////////////////////////////////////////////////////////\n\n* = $080d\n\n// 16 pairs; each pair represents the (x, y) displacement (255 = -1).\n// The first 5 and last 1 couples are never used.\n//\njoystick_mapping: .byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n                  .byte 1, 1, 1, 255, 1, 0, 0, 0, 255, 1, 255, 255, 255, 0, 0, 0, 0, 1, 0, 255\n                  .byte 0, 0\n\nmain:\n          jsr handle_joystick       // Best hooked to interrupt\n\n          clc\n          bcc main\n\n// Routines ////////////////////////////////////////////////////////////////////\n\nhandle_joystick:\n\n        lda JOY_1_POS_ADDR          // get joystick #1 position\n        and #15                     // isolate meaningful bytes\n        asl                         // multiply by 2 (each position is associated to two values)\n        tax\n\n        lda joystick_mapping, x     // lookup x displacement\n        clc\n        adc SPRITE_0_X_ADDR         // add displacement to sprite #0 x\n        sta SPRITE_0_X_ADDR\n\n        lda joystick_mapping + 1, x // lookup y displacement\n        clc\n        adc SPRITE_0_Y_ADDR         // add displacement to sprite #0 y\n        sta SPRITE_0_Y_ADDR\n\n        rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.090.joystick_handling.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.090.joystick_handling.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.115.window_projection.asm","language":"asm","vector":[0.008061387576162815,0.007053713779896498,0,0,0,0,0.008061387576162815,0.005038367118686438,0,-0.0040306937880814075,-0.0040306937880814075,0,0.02418416179716587,0.005038367118686438,0,0,-0.0020153468940407038,0,0.03224555030465126,0.014107427559792995,0,0,0,0,0,0,0,0,0,0,0,0.0020153468940407038,0,0,0,0,0,0.0020153468940407038,0,-0.008061387576162815,-0.0040306937880814075,0,0,0,0,-0.0040306937880814075,-0.008061387576162815,0,0,0.0020153468940407038,0,0,-0.0040306937880814075,0,0,0.0040306937880814075,0,-0.008061387576162815,-0.0020153468940407038,0,0,0,0,0,0,0,0.012092080898582935,0,0,0,-0.0040306937880814075,0,0,0.003023020224645734,0,0,-0.012092080898582935,0,0,0,0,0,0,0,0,0.02015346847474575,0,-0.02418416179716587,-0.006046040449291468,0,0,0,0,-0.02015346847474575,0,0,0,0.006046040449291468,0,0,0,0,0.008061387576162815,0.0040306937880814075,0,0,-0.0020153468940407038,0,0,0.012092080898582935,0,0,0,0,0,0.019145794212818146,0,-0.008061387576162815,0,0,0,0.0020153468940407038,0,0,-0.0010076734470203519,0,0.03224555030465126,0.0020153468940407038,0,-0.02015346847474575,0,0,0,0.006046040449291468,0,0,-0.0040306937880814075,0,0.008061387576162815,0,0,0,-0.0020153468940407038,0,0.012092080898582935,0,0,0,0,0,0.8665991425514221,0,0,0,-0.006046040449291468,0,0,0,0,0,-0.0040306937880814075,0,0.02015346847474575,0.007053713779896498,0,0,0,0,0.0040306937880814075,0.0020153468940407038,0,-0.02015346847474575,-0.0010076734470203519,0,0.0040306937880814075,0,0,0,0,0,0.0040306937880814075,0,0,-0.008061387576162815,-0.012092080898582935,0,0.0040306937880814075,0,0,-0.008061387576162815,-0.0151151018217206,0,0.008061387576162815,0,0,0,0,0,0,0.014107427559792995,0,0,-0.003023020224645734,0,0.008061387576162815,0,0,0,0,0,0.008061387576162815,0.0020153468940407038,0,0,-0.0040306937880814075,0,0,0.0020153468940407038,0,0,-0.0010076734470203519,0,0,0.02216881513595581,0,-0.01612277515232563,-0.010076734237372875,0,0,0.008061387576162815,0,0,0,0,0,0.0040306937880814075,0,0,0,0,0,0.006046040449291468,0,-0.01612277515232563,0,0,0.012092080898582935,0.43329957127571106,0,-0.008061387576162815,-0.0020153468940407038,0,0,0,0,0,-0.0010076734470203519,0,0,0.010076734237372875,0,0,0,0,0,0.0020153468940407038,0,0,-0.012092080898582935,0,0.008061387576162815,0.0020153468940407038,0,0,0,0,0,0.005038367118686438,0,0,-0.0040306937880814075,0,0,0.0020153468940407038,0,0,-0.0040306937880814075,0,0.012092080898582935,0.0040306937880814075,0,0,0,0,0.008061387576162815,0,0,-0.0040306937880814075,-0.006046040449291468,0,0.008061387576162815,0.0040306937880814075,0,0,-0.005038367118686438,0,0.02418416179716587,0.0040306937880814075,0,0,0,0,0,0.0020153468940407038,0,0,0,0,0,0,0,0,-0.008061387576162815,0,0,0,0,-0.008061387576162815,-0.0020153468940407038,0,0,0,0,-0.01612277515232563,0,0,0.0040306937880814075,0.008061387576162815,0,0,-0.013099754229187965,0,0.008061387576162815,0.006046040449291468,0,-0.0040306937880814075,-0.0040306937880814075,0,0,0.0020153468940407038,0,0,0,0,0,0.003023020224645734,0,0,0,0,0,0.21664978563785553,0,-0.02015346847474575,0,0,0,0.0040306937880814075,0,0,0,0,0.0403069369494915,0.005038367118686438,0,-0.012092080898582935,0,0,0,0.0010076734470203519,0,0,-0.005038367118686438,0],"text":"BasicUpstart2(main)\n\n.const WINDOW_HEIGHT  = 25\n.const WINDOW_WIDTH   = 40\n.const UNIVERSE_WIDTH = 400\n\n// Variables ///////////////////////////////////////////////////////////////////\n\n* = 251 virtual\n\nuniverse_pointer_lo: .byte 0\nuniverse_pointer_hi: .byte 0\nwindow_pointer_lo:   .byte 0\nwindow_pointer_hi:   .byte 0\n\n// Data/Main ///////////////////////////////////////////////////////////////////\n\n* = $081d\n\nmain:\n        // jsr window_projection\n        rts\n\n// Core routine ////////////////////////////////////////////////////////////////\n\nwindow_projection:\n        ldx #WINDOW_HEIGHT\ncopy_rows:\n        ldy #0\ncopy_row:\n        lda (universe_pointer_lo), y\n        sta (window_pointer_lo), y\n        iny\n        cpy WINDOW_WIDTH\n        bne copy_row\n\n        clc                     // Add (universe) row size to universe pointer\n        lda universe_pointer_lo // ^16-bit addition\n        adc #UNIVERSE_WIDTH\n        sta universe_pointer_lo\n        lda universe_pointer_hi\n        adc #0\n        sta universe_pointer_hi\n\n        clc                     // Add (window) row size to window pointer\n        lda window_pointer_lo   // ^16-bit addition\n        adc #WINDOW_WIDTH\n        sta window_pointer_lo\n        lda window_pointer_hi\n        adc #0\n        sta window_pointer_hi\n\n        dex\n        bne copy_rows\n\n        rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.115.window_projection.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/10.115.window_projection.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.120.array_routines_1_plot_characters.asm","language":"asm","vector":[0,0.0015946261119097471,0,0,0,0,0,0.002391939051449299,0,-0.0031892522238194942,-0.002391939051449299,0,0.009567756205797195,0,0,0,0,0,0.03189252316951752,0.012757008895277977,0,-0.0063785044476389885,-0.0015946261119097471,0,0,0.0015946261119097471,0,0,0,0,0.0031892522238194942,0.005581191275268793,0,0,0,0,0,0,0,-0.0031892522238194942,0,0,0.0031892522238194942,0,0,-0.0031892522238194942,-0.0063785044476389885,0,0,0,0,-0.012757008895277977,0,0,0.0031892522238194942,0.0031892522238194942,0,-0.0063785044476389885,0,0,0,0.002391939051449299,0,0,-0.00398656539618969,0,0.012757008895277977,0.0015946261119097471,0,-0.0031892522238194942,-0.004783878102898598,0,0,0.0015946261119097471,0,0,-0.0063785044476389885,0,0,0,0,0,-0.007175817620009184,0,0,0.016743574291467667,0,-0.028703270480036736,-0.004783878102898598,0,0,0.0015946261119097471,0,-0.0031892522238194942,-0.0015946261119097471,0,0,0,0,0,-0.0007973130559548736,0,0.0031892522238194942,0.0007973130559548736,0,0,-0.002391939051449299,0,0,0.005581191275268793,0,0,-0.0015946261119097471,0,0,0.01594626158475876,0,-0.01913551241159439,-0.0031892522238194942,0,0,0.0007973130559548736,0,0,-0.0007973130559548736,0,0.03508177399635315,0.0015946261119097471,0,-0.022324765101075172,0,0,0,0.004783878102898598,0,-0.0031892522238194942,-0.0015946261119097471,0,0.0031892522238194942,0.0015946261119097471,0,0,-0.0015946261119097471,0,0,0.0007973130559548736,0,-0.0063785044476389885,-0.0063785044476389885,0,0.8674765825271606,0.0015946261119097471,0,0,-0.0031892522238194942,0,0,0,0,0,-0.0031892522238194942,0,0.022324765101075172,0.0063785044476389885,0,0,-0.0015946261119097471,0,0.0031892522238194942,0.0015946261119097471,0,-0.028703270480036736,0,0,0.0063785044476389885,0,0,0,-0.0007973130559548736,0,0.0031892522238194942,0,0,-0.0031892522238194942,-0.016743574291467667,0,0,0,0,0,-0.004783878102898598,0,0.012757008895277977,0,0,-0.0063785044476389885,-0.0031892522238194942,0,0.0063785044476389885,0.009567756205797195,0,0,-0.002391939051449299,0,0.01594626158475876,0.0007973130559548736,0,0,-0.0007973130559548736,0,0,0,0,0,-0.009567756205797195,0,0,0,0,0,-0.0007973130559548736,0,0,0.019932826980948448,0,0,-0.011162382550537586,0,0,0.00797313079237938,0,0,-0.0031892522238194942,0,0.009567756205797195,0.0015946261119097471,0,-0.009567756205797195,0,0,0.0063785044476389885,0.0007973130559548736,0,0,-0.0031892522238194942,0,0.0063785044476389885,0.4337382912635803,0,0,-0.0007973130559548736,0,0,0.0007973130559548736,0,-0.0031892522238194942,-0.0007973130559548736,0,0.0031892522238194942,0.011162382550537586,0,0,-0.0031892522238194942,0,0,0.002391939051449299,0,0,-0.01594626158475876,0,0,0.0031892522238194942,0,-0.0031892522238194942,0,0,0.0031892522238194942,0.004783878102898598,0,-0.0031892522238194942,-0.002391939051449299,0,0.0031892522238194942,0,0,-0.0063785044476389885,0,0,0,0.0063785044476389885,0,0,-0.0031892522238194942,0,0.0031892522238194942,0.0031892522238194942,0,-0.0031892522238194942,-0.007175817620009184,0,0,0.00797313079237938,0,0,-0.0007973130559548736,0,0.01913551241159439,0,0,0,0,0,0,0.0007973130559548736,0,0,0,0,0.0031892522238194942,0,0,0,0,0,0,0,0,0,-0.004783878102898598,0,0,0.004783878102898598,0,-0.012757008895277977,-0.004783878102898598,0,0,0.011959696188569069,0,0,-0.005581191275268793,0,0.0063785044476389885,0.0031892522238194942,0,0,-0.0007973130559548736,0,0,0.0007973130559548736,0,-0.0031892522238194942,-0.0015946261119097471,0,0,0.0015946261119097471,0,-0.009567756205797195,-0.0015946261119097471,0,0,0.21686914563179016,0,-0.012757008895277977,0,0,0,0,0,-0.012757008895277977,-0.0015946261119097471,0,0.03189252316951752,0.007175817620009184,0,-0.009567756205797195,-0.0015946261119097471,0,0.0031892522238194942,0.002391939051449299,0,-0.0031892522238194942,-0.010365069843828678,0],"text":"BasicUpstart2(main)\n\n.const SCREEN_ADDRESS = $0400\n\n.const CHARACTER = $2a\n\n// Variables ///////////////////////////////////////////////////////////////////\n\n* = 168 virtual\n\ntable_ptr_lo: .byte 0\ntable_ptr_hi: .byte 0\n\n* = 253 virtual\n\ncurrent_char_ptr_lo: .byte 0\ncurrent_char_ptr_hi: .byte 0\n\n// Data/Main ///////////////////////////////////////////////////////////////////\n\n* = $081d\n\ntable:      .word SCREEN_ADDRESS\n            .word SCREEN_ADDRESS + 2\n            .word SCREEN_ADDRESS + 4\ntable_end:\n\nmain:\n        lda #<(table)\n        sta table_ptr_lo\n        lda #>(table)\n        sta table_ptr_hi\n\n        jsr plot_characters\n\n        rts\n\n// Core routine ////////////////////////////////////////////////////////////////\n\nplot_characters:\n        ldy #0\n\nloop:\n        lda (table_ptr_lo), y\n        sta current_char_ptr_lo\n        iny\n        lda (table_ptr_lo), y\n        sta current_char_ptr_hi // In the original code, these two are inverted;\n        iny                     // ^while it works, it's a bit confusing.\n\n        tya\n        pha\n        jsr plot_character\n        pla\n        tay\n\n        cpy #(table_end - table)\n        bne loop\n\n        rts\n\n// Helper routines /////////////////////////////////////////////////////////////\n\nplot_character:\n        lda #CHARACTER\n        ldy #0\n        sta (current_char_ptr_lo), y\n\n        rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.120.array_routines_1_plot_characters.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/10.120.array_routines_1_plot_characters.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.121.array_routines_3_search_entry.asm","language":"asm","vector":[0.00586893642321229,0.0007336170529015362,0,-0.002934468211606145,-0.002934468211606145,0,0,0.007336170878261328,0,-0.00586893642321229,-0.002934468211606145,0,0.014672341756522655,0.0014672341058030725,0,-0.002934468211606145,-0.002934468211606145,0,0.0557548962533474,0.013205107301473618,0,-0.014672341756522655,0,0,0,0.0014672341058030725,0,-0.002934468211606145,-0.0022008512169122696,0,0.002934468211606145,0.008803404867649078,0,0,-0.0014672341058030725,0,0,0,0,0,0,0,0,0.0014672341058030725,0,-0.014672341756522655,-0.010270639322698116,0,0,0,0,-0.00586893642321229,0,0,0.008803404867649078,0,0,-0.017606809735298157,-0.0014672341058030725,0,0,0.0022008512169122696,0,0,-0.002934468211606145,0,0.008803404867649078,0,0,-0.00586893642321229,-0.003668085439130664,0,0.002934468211606145,0,0,0,-0.002934468211606145,0,0,0.004401702433824539,0,-0.01173787284642458,-0.01173787284642458,0,0,0.020541278645396233,0,-0.026410214602947235,-0.020541278645396233,0,0,0,0,-0.008803404867649078,-0.002934468211606145,0,0,0.002934468211606145,0,0,-0.0022008512169122696,0,0.014672341756522655,0.0014672341058030725,0,-0.00586893642321229,-0.002934468211606145,0,0.00586893642321229,0.007336170878261328,0,0,-0.0014672341058030725,0,0,0.0278774481266737,0,-0.03227915242314339,-0.008069788105785847,0,0,0.002934468211606145,0,0,-0.0022008512169122696,0,0.03227915242314339,0.0022008512169122696,0,-0.02934468351304531,-0.0007336170529015362,0,0.002934468211606145,0.005135319661349058,0,0,0,0,0.002934468211606145,0,0,0,-0.008069788105785847,0,0,0.0007336170529015362,0,-0.00586893642321229,-0.002934468211606145,0,0.8627336621284485,0.004401702433824539,0,-0.017606809735298157,-0.008803404867649078,0,0,0.0007336170529015362,0,-0.002934468211606145,-0.005135319661349058,0,0.03227915242314339,0.004401702433824539,0,0,-0.002934468211606145,0,0.014672341756522655,0.0014672341058030725,0,-0.017606809735298157,0,0,0.002934468211606145,0,0,-0.00586893642321229,-0.006602553650736809,0,0.00586893642321229,0,0,-0.00586893642321229,-0.014672341756522655,0,0,0,0,-0.00586893642321229,-0.00586893642321229,0,0.01173787284642458,0.0022008512169122696,0,0,-0.00586893642321229,0,0.00586893642321229,0.01687319204211235,0,-0.002934468211606145,-0.013205107301473618,0,0.02934468351304531,0.002934468211606145,0,-0.00586893642321229,-0.0014672341058030725,0,0,0.0014672341058030725,0,0,-0.01687319204211235,0,0,0,0,0,-0.0014672341058030725,0,0,0.019807660952210426,0,0,-0.015405958518385887,0,0,0.015405958518385887,0,-0.00586893642321229,-0.003668085439130664,0,0.008803404867649078,0.0014672341058030725,0,-0.00586893642321229,-0.0007336170529015362,0,0,0.0007336170529015362,0,-0.002934468211606145,-0.002934468211606145,0,0,0.43136683106422424,0,0,-0.008803404867649078,0,0,0,0,0,-0.005135319661349058,0,0.00586893642321229,0.016139576211571693,0,0,-0.0014672341058030725,0,0,0.00953702162951231,0,0,-0.013205107301473618,0,0,0.0014672341058030725,0,-0.002934468211606145,-0.002934468211606145,0,0.00586893642321229,0.005135319661349058,0,0,-0.004401702433824539,0,0,0.0007336170529015362,0,0,-0.002934468211606145,0,0,0.00586893642321229,0,-0.002934468211606145,-0.002934468211606145,0,0.01173787284642458,0.002934468211606145,0,-0.002934468211606145,-0.008069788105785847,0,0.002934468211606145,0.014672341756522655,0,-0.002934468211606145,-0.005135319661349058,0,0.020541278645396233,0,0,0,0,0,0,0.003668085439130664,0,-0.002934468211606145,-0.0014672341058030725,0,0.002934468211606145,0.0014672341058030725,0,0,0,0,0,0,0,0,-0.011004256084561348,0,0.002934468211606145,0.004401702433824539,0,-0.020541278645396233,-0.002934468211606145,0,0,0.008069788105785847,0,0,-0.008803404867649078,0,0,0.0007336170529015362,0,0,0,0,0,0.0007336170529015362,0,-0.002934468211606145,0,0,0,0.002934468211606145,0,-0.00586893642321229,-0.0014672341058030725,0,0,0.21568341553211212,0,-0.00586893642321229,-0.004401702433824539,0,0.008803404867649078,0,0,-0.02347574569284916,-0.0022008512169122696,0,0.03814808651804924,0.011004256084561348,0,-0.041082557290792465,0,0,0,0.003668085439130664,0,-0.00586893642321229,-0.004401702433824539,0],"text":"BasicUpstart2(main)\n\n// Variables ///////////////////////////////////////////////////////////////////\n\n* = 168 virtual\n\ntable_ptr_lo: .byte 0\ntable_ptr_hi: .byte 0\n\n* = 251 virtual\n\nsearch_pattern_lo: .byte 0\nsearch_pattern_hi: .byte 0\n\nfound_offset: .byte 0\n\n// Data/Main ///////////////////////////////////////////////////////////////////\n\n* = $081d\n\ntable:\n        .word $dead\n        .word $cafe\n        .word $b020\ntable_end:\n\nmain:\n        lda #<(table)\n        sta table_ptr_lo\n        lda #>(table)\n        sta table_ptr_hi\n\n        lda #$ca\n        sta search_pattern_hi\n        lda #$fe\n        sta search_pattern_lo\n\n        jsr search_entry_optimized\n\n        rts\n\n// Core routine ////////////////////////////////////////////////////////////////\n\nsearch_entry:\n        ldy #$00\n\ncompare_entry:\n        lda (table_ptr_lo), y // 16 bit compare against search_pattern\n        iny\n        cmp search_pattern_lo\n        bne inc_y_and_resume  // see comment\n        lda (table_ptr_lo), y\n        iny\n        cmp search_pattern_hi\n        bne compare_entry\n\n        dey                  // If found, we need to decrese the offset\n        dey\n        sty found_offset\n\n        rts\n\n// When the first byte doesn't match, we need to interrupt the loop and increase\n// Y. There's no super-clean way of structing the code; as equivalent alternative,\n// the logic can be interleaved:\n//\n//             beq compare_hi_byte\n//             iny\n//             clc\n//             bcc compare_entry\n//     compare_hi_byte:\n//             lda (table_ptr_lo), y\n//\n// However, a smarter placement of iny yield a faster and simpler routine - see\n// search_entry_optimized().\n//\ninc_y_and_resume:\n        iny\n        clc\n        bcc compare_entry\n\n// Core routine, optimized /////////////////////////////////////////////////////\n\nsearch_entry_optimized:\n        ldy #$ff\n\niny_and_compare_entry:\n        iny\n!compare_entry:\n        lda (table_ptr_lo), y\n        iny\n        cmp search_pattern_lo\n        bne iny_and_compare_entry\n        lda (table_ptr_lo), y\n        iny\n        cmp search_pattern_hi\n        bne !compare_entry-\n\n        dey\n        dey\n        sty found_offset\n\n        rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.121.array_routines_3_search_entry.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/10.121.array_routines_3_search_entry.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.124.random_numbers.asm","language":"asm","vector":[0.006349102593958378,0,0,0,0,0,0,0,0,0,-0.003174551296979189,0,0,0,0,-0.01904730685055256,-0.0015872756484895945,0,0.01904730685055256,0.00476182671263814,0,0,0,0,0,0,0,-0.006349102593958378,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.006349102593958378,0,0,0,0,0,0,0,0,0.006349102593958378,0.003174551296979189,0,-0.006349102593958378,0,0,0,0,0,0,0,0,0.006349102593958378,0,0,0,0,0,0,0,0,0,-0.006349102593958378,0,0,0,0,-0.006349102593958378,-0.006349102593958378,0,0,0.02063458226621151,0,-0.006349102593958378,0,0,0,0.003174551296979189,0,-0.006349102593958378,0,0,0,0.003174551296979189,0,0,0,0,0,0,0,-0.012698205187916756,0,0,0,0,0,0,-0.00952365342527628,0,0,0.00952365342527628,0,0,0,0,0,0,0,0,-0.00476182671263814,0,0.01904730685055256,0,0,-0.006349102593958378,0,0,0,0,0,-0.006349102593958378,0,0,0,0,0,0,-0.003174551296979189,0,0,0,0,0,0,0,0.8698270320892334,0.003174551296979189,0,0,-0.003174551296979189,0,0,0,0,-0.01904730685055256,0,0,0.01904730685055256,0.003174551296979189,0,0,0,0,0.006349102593958378,0.0015872756484895945,0,-0.01904730685055256,0,0,0,0,0,0,-0.003174551296979189,0,0,0,0,0,-0.003174551296979189,0,0,0,0,-0.006349102593958378,-0.006349102593958378,0,0.01904730685055256,0,0,0,-0.003174551296979189,0,0,0.00952365342527628,0,0,-0.006349102593958378,0,0,0.0015872756484895945,0,0,0,0,0,0.0015872756484895945,0,0,0,0,0,0,0,0,0,0,0,0.00952365342527628,0,0,-0.007936378009617329,0,0,0.00476182671263814,0,0,-0.003174551296979189,0,0,0,0,0,-0.0015872756484895945,0,0,0,0,0,0,0,0,0.4349135160446167,0,0,0,0,0,0,0,0,-0.01111092884093523,0,0.006349102593958378,0.00952365342527628,0,0,0,0,0,0.00476182671263814,0,0,-0.01111092884093523,0,0,0,0,0,0,0,0,0.0015872756484895945,0,0,0,0,0,0,0,0,-0.003174551296979189,0,0,0.00952365342527628,0,0,-0.0015872756484895945,0,0,0,0,-0.006349102593958378,-0.0015872756484895945,0,0,0,0,0,-0.0015872756484895945,0,0,0,0,0,0,0,0,0,0,0,-0.003174551296979189,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.00476182671263814,0,0,-0.0015872756484895945,0,0.006349102593958378,0,0,0,-0.0015872756484895945,0,0,0,0,0,0,0,0,0.003174551296979189,0,0,0,0,0,0.21745675802230835,0,-0.012698205187916756,0,0,0,0,0,-0.012698205187916756,-0.00476182671263814,0,0.03809461370110512,0.00476182671263814,0,0,0,0,0.006349102593958378,0.0015872756484895945,0,0,-0.00476182671263814,0],"text":"BasicUpstart2(main)\n\n.const RANDOM_NUMBER_ADDR = $d41b\n\n// Data/Main ///////////////////////////////////////////////////////////////////\n\n* = $081d\n\nmain:\n        jsr preset_rnd\n\n        lda RANDOM_NUMBER_ADDR\n\n        rts\n\n// Helper routines /////////////////////////////////////////////////////////////\n\npreset_rnd:\n        lda #$ff  // Set voice 3 to maximum frequency\n        sta $d40e\n        sta $d40f\n\n        lda #$80  // Voice 3: Disable output and enable noise\n        sta $d412\n\n        rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.124.random_numbers.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/10.124.random_numbers.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/cslarsen_c64-examples/black.asm","language":"asm","vector":[0,0,0,0,0,0,0,0.032478488981723785,0,0,-0.06495697796344757,0,0,0.032478488981723785,0,-0.12991395592689514,-0.06495697796344757,0,0,0.06495697796344757,0,0,0,0,0,0.16239245235919952,0,0,0,0,0,0.16239245235919952,0,0,-0.032478488981723785,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.06495697796344757,0,0.12991395592689514,0,0,0,0,0,0.12991395592689514,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.12991395592689514,0,0,0,0,0,-0.12991395592689514,0,0,0,0,0,0,0,0,0,0.032478488981723785,0,0,0,0,0,0,0,0,0,0,0.12991395592689514,0,0,0,-0.06495697796344757,0,0,0.032478488981723785,0,-0.12991395592689514,-0.06495697796344757,0,0,0,0,-0.12991395592689514,0,0,0,0,0,-0.2598279118537903,-0.032478488981723785,0,0.12991395592689514,0,0,0,0,0,0,0,0,0,0,0,0,0.06495697796344757,0,0,0,0,0.12991395592689514,0.06495697796344757,0,0,0,0,0,0.06495697796344757,0,0,0,0,0.12991395592689514,0.06495697796344757,0,0,0,0,0,0,0,0,-0.032478488981723785,0,0,0,0,0,-0.06495697796344757,0,0,0,0,0,-0.06495697796344757,0,0.12991395592689514,0,0,0,0,0,0.12991395592689514,0,0,-0.2598279118537903,0,0,0.2598279118537903,0,0,0,0,0,0.12991395592689514,0.06495697796344757,0,0,0,0,0.12991395592689514,0,0,-0.12991395592689514,-0.06495697796344757,0,0,0,0,0,-0.06495697796344757,0,0,0,0,0,-0.12991395592689514,0,0,0.06495697796344757,0,0,-0.032478488981723785,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.06495697796344757,0,0,0,0,0,0,0,0,0,0,0,0.06495697796344757,0,0,0,0,0,0,0,0,0,0,0.12991395592689514,0.032478488981723785,0,0,0,0,0,0.032478488981723785,0,0,0,0,0,0.06495697796344757,0,-0.2598279118537903,0,0,0.12991395592689514,0.06495697796344757,0,0,-0.16239245235919952,0,0,0.12991395592689514,0,0,-0.032478488981723785,0,0,0.06495697796344757,0,-0.12991395592689514,0,0,0,0.06495697796344757,0,0,-0.06495697796344757,0,0,0,0,0,0,0,0.2598279118537903,0.032478488981723785,0,0,0,0,0.2598279118537903,0,0,0,-0.032478488981723785,0,0,0,0,0,-0.032478488981723785,0,0,0,0,0,-0.06495697796344757,0,0,0.032478488981723785,0,-0.12991395592689514,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.032478488981723785,0,0,0,0,0,0.06495697796344757,0,0,0,0,0,0.032478488981723785,0,0,0,0,0,0,0,0,-0.12991395592689514,0,0,0.06495697796344757,0,0,0,0],"text":";; Sets background and border to black, then loops forever\n\n!source \"basic-boot.asm\"\n\n+start_at $0900\n\nldx #$00\nstx bocol\nstx bgcol\njmp *\n","sourcePath":"external/github.com/cslarsen_c64-examples/black.asm","sourceMtimeMs":1462575743000,"sourceUrl":"https://github.com/cslarsen/c64-examples/blob/master/black.asm","sourceRepoUrl":"https://github.com/cslarsen/c64-examples","license":"UNKNOWN","attribution":"Source: cslarsen/c64-examples (License unknown)"},{"name":"github.com/cslarsen_c64-examples/flicker-vsync.asm","language":"asm","vector":[0.04862884804606438,0,0,0,-0.02431442402303219,0,0.04862884804606438,0.02431442402303219,0,0,-0.012157212011516094,0,0,0.02431442402303219,0,-0.14588655531406403,-0.012157212011516094,0,0,0.060786060988903046,0,0,0,0,0,0.08510048687458038,0,-0.04862884804606438,-0.036471638828516006,0,0,0.036471638828516006,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.02431442402303219,0,0,0,0,0,0,0,0,0.02431442402303219,0,-0.1945153921842575,0,0,0.04862884804606438,0.04862884804606438,0,0,0,0,0,0.012157212011516094,0,0,-0.04862884804606438,0,0,0,0,-0.04862884804606438,-0.07294327765703201,0,0,0,0,-0.04862884804606438,0,0,0,0.24314424395561218,0,-0.1945153921842575,0,0,0,0.012157212011516094,0,-0.04862884804606438,-0.02431442402303219,0,0,0.02431442402303219,0,-0.04862884804606438,-0.012157212011516094,0,0.09725769609212875,0.02431442402303219,0,0,-0.02431442402303219,0,0.09725769609212875,0,0,0,-0.07294327765703201,0,0,0,0,-0.14588655531406403,0,0,0,0,0,-0.1945153921842575,-0.02431442402303219,0,0.34040194749832153,0,0,0,0,0,0,0.012157212011516094,0,0,0,0,0,0.036471638828516006,0,0,-0.012157212011516094,0,0.04862884804606438,0.012157212011516094,0,0,0,0,0.04862884804606438,0,0,-0.09725769609212875,-0.09725769609212875,0,0,0.02431442402303219,0,0,-0.012157212011516094,0,0,0,0,-0.09725769609212875,0,0,0,0.012157212011516094,0,-0.09725769609212875,-0.02431442402303219,0,0,0.02431442402303219,0,-0.09725769609212875,-0.02431442402303219,0,0.09725769609212875,0,0,-0.04862884804606438,-0.12157212197780609,0,0.09725769609212875,0,0,-0.04862884804606438,-0.060786060988903046,0,0.14588655531406403,0,0,0,-0.02431442402303219,0,0.04862884804606438,0.17020097374916077,0,-0.04862884804606438,0,0,0.04862884804606438,0.04862884804606438,0,0,-0.012157212011516094,0,0,0.012157212011516094,0,0,-0.07294327765703201,0,0,0.012157212011516094,0,0,-0.09725769609212875,0,0,0.17020097374916077,0,0,-0.036471638828516006,0,0,0,0,0,0,0,0,0,0,0,-0.012157212011516094,0,0.04862884804606438,0.02431442402303219,0,0,0,0,0,0.02431442402303219,0,0,-0.04862884804606438,0,0,0,0,0,0,0,0,0,0,0,-0.04862884804606438,0,0.04862884804606438,0,0,0,-0.09725769609212875,0,0,0.012157212011516094,0,-0.04862884804606438,-0.04862884804606438,0,0,0.04862884804606438,0,-0.09725769609212875,-0.02431442402303219,0,0,0.04862884804606438,0,0,-0.036471638828516006,0,0,0.07294327765703201,0,0,-0.012157212011516094,0,0,0.02431442402303219,0,0,-0.07294327765703201,0,0,0.02431442402303219,0,0,-0.012157212011516094,0,0.04862884804606438,0,0,0,-0.012157212011516094,0,0.14588655531406403,0.02431442402303219,0,-0.04862884804606438,0,0,0.04862884804606438,0.02431442402303219,0,0,0,0,0,0,0,0,-0.036471638828516006,0,0,0,0,-0.04862884804606438,-0.04862884804606438,0,0,0.10941491276025772,0,0,0,0,0.04862884804606438,0,0,0,0,0,0.09725769609212875,0,0,0,0,0,0,0.012157212011516094,0,-0.09725769609212875,0,0,0,0.036471638828516006,0,-0.14588655531406403,-0.02431442402303219,0,0,0,0,0,-0.02431442402303219,0,0.48628848791122437,0,0,0,-0.07294327765703201,0,0,0,0,-0.04862884804606438,-0.02431442402303219,0],"text":"!source \"basic-boot.asm\"\n\n+start_at $0900\n\nsei\nldx #$00\n\nldy #$7f\nsty $dc0d\nsty $dd0d\nlda $dc0d\nlda $dd0d\n\nlda #$01\nsta $d01a\n\nlda #<.flicker\nldx #>.flicker\nsta $314\nstx $315\n\n; Line number, would be better ot do this on retrace\nlda #$00\nsta $d012\n\nlda $d011\nand #$7f\nsta $d011\n\ncli\njmp *\n\n.flicker\n  dec $d019\n\n  ldx .color\n  stx bgcol\n  stx bocol\n  inx\n  stx .color\n\n  jmp $ea81\n\n.color\n  !byte $00\n","sourcePath":"external/github.com/cslarsen_c64-examples/flicker-vsync.asm","sourceMtimeMs":1462575743000,"sourceUrl":"https://github.com/cslarsen/c64-examples/blob/master/flicker-vsync.asm","sourceRepoUrl":"https://github.com/cslarsen/c64-examples","license":"UNKNOWN","attribution":"Source: cslarsen/c64-examples (License unknown)"},{"name":"github.com/cslarsen_c64-examples/flicker.asm","language":"asm","vector":[0,0,0,0,0,0,0,0.02562418393790722,0,0,-0.07687254995107651,0,0,0.02562418393790722,0,-0.10249673575162888,-0.05124836787581444,0,0,0.02562418393790722,0,0,0,0,0,0.17936928570270538,0,0,0,0,0,0.10249673575162888,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.10249673575162888,0,0,0,0,0,0,0,0.10249673575162888,0,0,0,0,0,0,0,0,0,-0.10249673575162888,0,0,0,0,-0.20499347150325775,0,0,0,0,0,-0.20499347150325775,0,0,0,0,0,0,0,0,0,0.02562418393790722,0,0,0,0,0,0,0,0,0,0,0.10249673575162888,0,0,0,-0.05124836787581444,0,0.20499347150325775,0.05124836787581444,0,0,-0.05124836787581444,0,0,0,0,-0.10249673575162888,0,0,0,0,0,-0.20499347150325775,-0.02562418393790722,0,0.30749019980430603,0,0,0,0,0,0,0,0,-0.10249673575162888,0,0,0,0.07687254995107651,0,0,0,0,0.10249673575162888,0.05124836787581444,0,0,0,0,0,0,0,0,0,0,0,0.05124836787581444,0,0,0,0,0,0,0,0,-0.05124836787581444,0,0,0,0,0,-0.10249673575162888,0,0,0,0,0,-0.10249673575162888,0,0.10249673575162888,0,0,-0.10249673575162888,-0.05124836787581444,0,0.10249673575162888,0,0,-0.20499347150325775,0,0,0.10249673575162888,0,0,0,0,0,0.10249673575162888,0.05124836787581444,0,0,0,0,0,0.10249673575162888,0,0,0,0,0,0,0,0,-0.05124836787581444,0,0,0,0,0,-0.10249673575162888,0,0,0.15374509990215302,0,0,-0.02562418393790722,0,0,0,0,0,-0.05124836787581444,0,0,0,0,0,0,0,0,0.05124836787581444,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10249673575162888,0,0,0,0,0,0,0.02562418393790722,0,0,0,0,0,0.05124836787581444,0,-0.20499347150325775,-0.05124836787581444,0,0.20499347150325775,0.05124836787581444,0,0,-0.15374509990215302,0,0,0.05124836787581444,0,0,-0.05124836787581444,0,0,0.05124836787581444,0,-0.10249673575162888,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.30749019980430603,0.02562418393790722,0,0,0,0,0.20499347150325775,0.05124836787581444,0,0,0,0,0,0,0,0,-0.02562418393790722,0,0,0,0,0,-0.05124836787581444,0,0,0.07687254995107651,0,-0.20499347150325775,0,0,0,0,0,0,-0.02562418393790722,0,0,0,0,0,0,0,0,0.02562418393790722,0,-0.20499347150325775,0,0,0,0.05124836787581444,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.10249673575162888,0,0,0.10249673575162888,0,0,0,0],"text":"!source \"basic-boot.asm\"\n\n+start_at $0900\n\n; Set background and border to black\nldx #$00\nstx bgcol\nstx bocol\n\n; Flicker border and background\n.loop\n  inc bgcol\n  inc bocol\n  jmp .loop\n","sourcePath":"external/github.com/cslarsen_c64-examples/flicker.asm","sourceMtimeMs":1462575743000,"sourceUrl":"https://github.com/cslarsen/c64-examples/blob/master/flicker.asm","sourceRepoUrl":"https://github.com/cslarsen/c64-examples","license":"UNKNOWN","attribution":"Source: cslarsen/c64-examples (License unknown)"},{"name":"github.com/cslarsen_c64-examples/raster.asm","language":"asm","vector":[0.031493134796619415,0,0,0,-0.015746567398309708,0,0.031493134796619415,0.015746567398309708,0,0,0,0,0,0.015746567398309708,0,-0.09447940438985825,-0.007873283699154854,0,0,0.03936641663312912,0,-0.06298626959323883,0,0,0,0.07085955142974854,0,-0.031493134796619415,-0.02361985109746456,0,0,0.03936641663312912,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.015746567398309708,0,0,0.015746567398309708,0,0,0,0,0,0.015746567398309708,0,-0.12597253918647766,0,0,0.031493134796619415,0.031493134796619415,0,0,0,0,0,0.015746567398309708,0,0,-0.04723970219492912,0,0,0,0,-0.09447940438985825,-0.04723970219492912,0,0,0,0,-0.031493134796619415,0,0,0,0.15746566653251648,0,-0.031493134796619415,0,0,0,0.007873283699154854,0,-0.031493134796619415,-0.015746567398309708,0,0,0.015746567398309708,0,-0.031493134796619415,-0.007873283699154854,0,0.06298626959323883,0.015746567398309708,0,0,-0.015746567398309708,0,0.06298626959323883,0,0,0,-0.04723970219492912,0,0,0,0,-0.15746566653251648,-0.031493134796619415,0,0,0,0,-0.6613557934761047,-0.015746567398309708,0,0.1889588087797165,0,0,0,0,0,0,0.007873283699154854,0,0,0,0,0,0.031493134796619415,0,0,-0.007873283699154854,0,0.031493134796619415,0.015746567398309708,0,0,0,0,0,0,0,-0.06298626959323883,-0.06298626959323883,0,0,0.015746567398309708,0,0,-0.007873283699154854,0,0,0.007873283699154854,0,-0.06298626959323883,0,0,0.06298626959323883,0.007873283699154854,0,-0.06298626959323883,-0.04723970219492912,0,0,0.015746567398309708,0,-0.06298626959323883,-0.015746567398309708,0,0.06298626959323883,0,0,0,-0.03936641663312912,0,0.06298626959323883,0,0,-0.031493134796619415,-0.03936641663312912,0,0.09447940438985825,0,0,0,-0.015746567398309708,0,0.031493134796619415,0.11022596806287766,0,-0.031493134796619415,0,0,0.031493134796619415,0.031493134796619415,0,0,-0.007873283699154854,0,0,0.007873283699154854,0,0,-0.07873283326625824,0,0,0.007873283699154854,0,0,-0.33067789673805237,0,0,0.09447940438985825,0,0,-0.02361985109746456,0,0,0,0,0,-0.015746567398309708,0,0,0,0,0,-0.007873283699154854,0,0.06298626959323883,0.015746567398309708,0,0,0,0,0,0,0,0,-0.031493134796619415,0,0,0,0,0,0,0,0,0,0,0,-0.031493134796619415,0,0.031493134796619415,0.031493134796619415,0,0,-0.06298626959323883,0,0,0.007873283699154854,0,-0.031493134796619415,-0.031493134796619415,0,0,0.031493134796619415,0,-0.06298626959323883,0,0,0,0.031493134796619415,0,0,-0.03936641663312912,0,0,0.04723970219492912,0,0,-0.007873283699154854,0,0,0.015746567398309708,0,0,-0.02361985109746456,0,0,0.015746567398309708,0,0,-0.007873283699154854,0,0.031493134796619415,0,0,0,-0.007873283699154854,0,0.12597253918647766,0.015746567398309708,0,-0.031493134796619415,0,0,0.06298626959323883,0.015746567398309708,0,0,0,0,0,0,0,0,-0.03936641663312912,0,0,0,0,-0.031493134796619415,-0.16533894836902618,0,0.031493134796619415,0.07873283326625824,0,0,0,0,0.031493134796619415,0,0,0,0,0,0.06298626959323883,0,0,0,0,0,0,0.007873283699154854,0,-0.09447940438985825,0,0,0,0.015746567398309708,0,-0.09447940438985825,-0.015746567398309708,0,0,0,0,0,-0.015746567398309708,0,0.31493133306503296,0,0,0,-0.04723970219492912,0,0,0.015746567398309708,0,-0.031493134796619415,-0.015746567398309708,0],"text":"!source \"basic-boot.asm\"\n\n+start_at $0900\n\nsei\nldx #$00\n\nldy #$7f\nsty $dc0d\nsty $dd0d\nlda $dc0d\nlda $dd0d\n\nlda #$01\nsta $d01a\n\nlda #<.flicker\nldx #>.flicker\nsta $314\nstx $315\n\n; Line number, would be better ot do this on retrace\nlda .ypos\nsta $d012\n\nlda $d011\nand #$7f\nsta $d011\n\nldx #00\nstx bocol\n\ncli\njmp * ; loop here\n\n.flicker\n  dec $d019\n\n  nop\n  nop\n  nop\n  nop\n\n  ldx #01\n  stx bgcol\n  stx bocol\n\n  nop\n  nop\n  nop\n  nop\n  nop\n  nop\n  nop\n  nop\n  nop\n  nop\n  nop\n\n  ldx #00\n  stx bgcol\n  stx bocol\n\n  jmp $ea81\n\n.ypos !byte 210\n","sourcePath":"external/github.com/cslarsen_c64-examples/raster.asm","sourceMtimeMs":1462575743000,"sourceUrl":"https://github.com/cslarsen/c64-examples/blob/master/raster.asm","sourceRepoUrl":"https://github.com/cslarsen/c64-examples","license":"UNKNOWN","attribution":"Source: cslarsen/c64-examples (License unknown)"},{"name":"github.com/cslarsen_c64-examples/ywobble.asm","language":"asm","vector":[0,0,0,0,-0.017105892300605774,0,0.03421178460121155,0.05987062305212021,0,0,-0.02565883845090866,0,0.03421178460121155,0.02565883845090866,0,-0.10263535380363464,-0.02565883845090866,0,0.03421178460121155,0.008552946150302887,0,-0.0684235692024231,0,0,0.03421178460121155,0.02565883845090866,0,0,-0.008552946150302887,0,0.03421178460121155,0.17105892300605774,0,0,0,0,0,0,0,0,-0.008552946150302887,0,0,0.07697651535272598,0,0,-0.05131767690181732,0,0.03421178460121155,0.008552946150302887,0,-0.0684235692024231,0,0,0.10263535380363464,0.008552946150302887,0,-0.0684235692024231,-0.017105892300605774,0,0.0684235692024231,0.008552946150302887,0,0,-0.02565883845090866,0,0.03421178460121155,0,0,-0.10263535380363464,-0.0684235692024231,0,0,0,0,0,-0.0684235692024231,0,0.03421178460121155,0,0,-0.10263535380363464,0,0,0,0.1368471384048462,0,-0.1368471384048462,-0.017105892300605774,0,0,0.008552946150302887,0,0,-0.017105892300605774,0,0,0,0,0,0,0,0.0684235692024231,0.017105892300605774,0,-0.0684235692024231,-0.03421178460121155,0,0.03421178460121155,0.017105892300605774,0,-0.03421178460121155,-0.05987062305212021,0,0.03421178460121155,0.017105892300605774,0,0,-0.03421178460121155,0,0.03421178460121155,0.03421178460121155,0,-0.0684235692024231,-0.008552946150302887,0,0.47896498441696167,0.017105892300605774,0,-0.0684235692024231,0,0,0.03421178460121155,0,0,0,0,0,0,0.008552946150302887,0,0,0,0,0.0684235692024231,0.09408240765333176,0,-0.03421178460121155,-0.03421178460121155,0,0,0.05131767690181732,0,0,-0.03421178460121155,0,0.03421178460121155,0.0684235692024231,0,0,-0.017105892300605774,0,0.0684235692024231,0.017105892300605774,0,-0.03421178460121155,-0.05131767690181732,0,0.2052707076072693,0,0,-0.0684235692024231,-0.008552946150302887,0,0,0.017105892300605774,0,-0.0684235692024231,-0.05987062305212021,0,0.10263535380363464,0,0,-0.03421178460121155,-0.10263535380363464,0,0.10263535380363464,0,0,-0.10263535380363464,-0.03421178460121155,0,0.03421178460121155,0,0,0,0,0,0.03421178460121155,0.10263535380363464,0,-0.03421178460121155,-0.042764730751514435,0,0.0684235692024231,0.017105892300605774,0,0,-0.02565883845090866,0,0,0.017105892300605774,0,-0.03421178460121155,0,0,0.03421178460121155,0.02565883845090866,0,-0.0684235692024231,-0.03421178460121155,0,0.03421178460121155,0.24803544580936432,0,0,-0.05987062305212021,0,0.03421178460121155,0.02565883845090866,0,0,-0.017105892300605774,0,0.03421178460121155,0.008552946150302887,0,-0.03421178460121155,0,0,0,0.042764730751514435,0,0,-0.017105892300605774,0,0,0,0,0,0,0,0,0.017105892300605774,0,0,0,0,0,0.042764730751514435,0,0,-0.03421178460121155,0,0.03421178460121155,0.1282941997051239,0,0,-0.05131767690181732,0,0,0.017105892300605774,0,0,-0.03421178460121155,0,0,0.05987062305212021,0,-0.1368471384048462,-0.042764730751514435,0,0,0.05131767690181732,0,-0.03421178460121155,-0.05131767690181732,0,0,0.02565883845090866,0,0,-0.02565883845090866,0,0.0684235692024231,0.017105892300605774,0,-0.03421178460121155,-0.05131767690181732,0,0,0.03421178460121155,0,0,0,0,0,0,0,0,-0.017105892300605774,0,0.03421178460121155,0.03421178460121155,0,0,-0.05131767690181732,0,0.30790606141090393,0.02565883845090866,0,0,-0.008552946150302887,0,0,0.02565883845090866,0,0,0,0,0.1368471384048462,0.02565883845090866,0,-0.0684235692024231,-0.03421178460121155,0,0,0.11974124610424042,0,0,-0.017105892300605774,0,0,0.008552946150302887,0,-0.03421178460121155,0,0,0,0,0,-0.03421178460121155,0,0,0,0.017105892300605774,0,-0.1368471384048462,-0.008552946150302887,0,0,0.017105892300605774,0,-0.1368471384048462,0,0,0,0.008552946150302887,0,0,0,0,0.2736942768096924,0.017105892300605774,0,-0.03421178460121155,-0.07697651535272598,0,0,0.05131767690181732,0,-0.03421178460121155,-0.03421178460121155,0],"text":"; \"wobbles\" (more like staccatos) screen's yscroll\n\n!source \"basic-boot.asm\"\n\n+start_at $0900\n\n  lda #$00\n.loop\n  ; Wait for vsync\n  cmp $d012\n  bne .loop\n\n  ; Only alter yscroll on every nth frame\n  dec .framecount\n  cmp .framecount\n  bne .loop\n\n  ; Reset counter\n  lda #$2a ; number of frames to skip\n  ; I've tried restarting every second, but without using IRQs, it's hard to get this\n  ; entirely correct\n  sta .framecount\n\n  ; Increment ypos\n  inc .ypos\n  lda .ypos\n  and #$07\n  sta .ypos\n\n  ; Only set last three bits of $d011 (control register 1)\n  lda $d011\n  and #$f8\n  ora .ypos\n  sta $d011\n\n  lda #$00\n  jmp .loop\n\n.ypos !byte $03\n.framecount !byte $00\n","sourcePath":"external/github.com/cslarsen_c64-examples/ywobble.asm","sourceMtimeMs":1462575743000,"sourceUrl":"https://github.com/cslarsen/c64-examples/blob/master/ywobble.asm","sourceRepoUrl":"https://github.com/cslarsen/c64-examples","license":"UNKNOWN","attribution":"Source: cslarsen/c64-examples (License unknown)"},{"name":"github.com/digitsensitive_c64/src/examples/binaryAddition.asm","language":"asm","vector":[0,0.0012714447220787406,0,0,0,0,0,0.0012714447220787406,0,0,-0.005085778888314962,0,0.005085778888314962,0,0,-0.02034311555325985,0,0,0,0.0038143342826515436,0,0,-0.0012714447220787406,0,0.005085778888314962,0.002542889444157481,0,0,-0.0012714447220787406,0,0.005085778888314962,0.03941478952765465,0,-0.005085778888314962,0,0,0,0.0012714447220787406,0,0,0,0,0,0,0,0,-0.0012714447220787406,0,0,0.0012714447220787406,0,-0.005085778888314962,-0.0038143342826515436,0,0,0,0,-0.005085778888314962,-0.006357223726809025,0,0,0,0,0,-0.0012714447220787406,0,0,0.002542889444157481,0,0,-0.005085778888314962,0,0.005085778888314962,0,0,0,-0.0012714447220787406,0,0,0,0,0,-0.002542889444157481,0,0.010171557776629925,0.005085778888314962,0,-0.010171557776629925,-0.00890011340379715,0,0,0,0,0,0,0,0.005085778888314962,0,0,0,0,0,0.6052076816558838,0.0012714447220787406,0,-0.010171557776629925,0,0,0.010171557776629925,0.002542889444157481,0,0,-0.010171557776629925,0,0,0,0,0,0,0,0,0.002542889444157481,0,-0.005085778888314962,-0.002542889444157481,0,0.010171557776629925,0.002542889444157481,0,-0.010171557776629925,-0.002542889444157481,0,0.010171557776629925,0.0012714447220787406,0,-0.010171557776629925,0,0,0,0,0,0,0,0,0,0.01907167211174965,0,0,-0.002542889444157481,0,0.005085778888314962,0,0,0,-0.002542889444157481,0,0,0,0,0,0,0,0.005085778888314962,0,0,0,-0.0012714447220787406,0,0,0.002542889444157481,0,-0.6204650402069092,-0.002542889444157481,0,0.005085778888314962,0,0,0,0,0,0.005085778888314962,0.006357223726809025,0,0,-0.007628668565303087,0,0,0,0,0,0,0,0.005085778888314962,0.002542889444157481,0,-0.005085778888314962,-0.0012714447220787406,0,0.010171557776629925,0.3051467537879944,0,-0.005085778888314962,-0.00890011340379715,0,0.005085778888314962,0.005085778888314962,0,0,0,0,0.005085778888314962,0,0,0,0,0,0,0,0,-0.005085778888314962,-0.002542889444157481,0,0.005085778888314962,0.006357223726809025,0,-0.005085778888314962,-0.010171557776629925,0,0,0.005085778888314962,0,-0.005085778888314962,-0.005085778888314962,0,0,0.0012714447220787406,0,-0.005085778888314962,0,0,0,0.0012714447220787406,0,0,-0.0012714447220787406,0,0,0.002542889444157481,0,-0.005085778888314962,0,0,0,0,0,0,0,0,0,0.002542889444157481,0,-0.005085778888314962,-0.0012714447220787406,0,0,0,0,0,-0.31150397658348083,0,0,0.002542889444157481,0,0,0,0,0.005085778888314962,0.002542889444157481,0,0,0,0,0,0.0012714447220787406,0,0,0,0,0,0.002542889444157481,0,0,-0.002542889444157481,0,0,0.007628668565303087,0,-0.010171557776629925,-0.005085778888314962,0,0,0.002542889444157481,0,0,0,0,0.005085778888314962,0.0038143342826515436,0,0,0,0,0,0.15130192041397095,0,0,-0.005085778888314962,0,0.0762866884469986,0.005085778888314962,0,0,-0.002542889444157481,0,0,0,0,0,-0.002542889444157481,0,0,0,0,0,-0.0038143342826515436,0,0,0.002542889444157481,0,-0.005085778888314962,-0.002542889444157481,0,0,0.002542889444157481,0,-0.010171557776629925,-0.005085778888314962,0,0,0,0,0,0,0,0.005085778888314962,0,0,-0.010171557776629925,-0.002542889444157481,0,0,0.0012714447220787406,0,0,0,0,0,0,0,-0.005085778888314962,0,0,0.010171557776629925,0.0038143342826515436,0,-0.015257337130606174,0,0,0,0,0,0,-0.1551162600517273,0],"text":"; ==========================================================\n; COMMODORE 64 - Examples in 6502 Assembly language\n; © Digitsensitive; digit.sensitivee@gmail.com\n; Binary Addition\n; ==========================================================\n\n; ----------------------------------------------------------\n; Main Loop\n; ----------------------------------------------------------\n\n        *=$02a7                 ; sys 679\n\ninit    jsr $e544               ; Clear the screen\n        lda #%0001              ; 0001 = decimal 1\n        clc                     ; Clear Carry flag\n        adc #%0010              ; Add with carry (1+2), so accumulator is 3 now\n        sta $0400               ; store the result (= 3)\n        rts\n","sourcePath":"external/github.com/digitsensitive_c64/src/examples/binaryAddition.asm","sourceMtimeMs":1701175250000,"sourceUrl":"https://github.com/digitsensitive/c64/blob/main/examples/binaryAddition.asm","sourceRepoUrl":"https://github.com/digitsensitive/c64","license":"UNKNOWN","attribution":"Source: digitsensitive/c64 (License unknown)"},{"name":"github.com/digitsensitive_c64/src/examples/decimalHexAndBinaryNumbers.asm","language":"asm","vector":[0,0.004912109114229679,0,0,-0.0008186848717741668,0,0.006549478974193335,0.0016373697435483336,0,-0.0032747394870966673,-0.0016373697435483336,0,0.006549478974193335,0,0,-0.0032747394870966673,0,0,0.009824218228459358,0.0024560545571148396,0,-0.0032747394870966673,0,0,0.006549478974193335,0.0008186848717741668,0,0,-0.0008186848717741668,0,0.006549478974193335,0.0409342423081398,0,-0.0032747394870966673,0,0,0,0,0,0,0,0,0.006549478974193335,0.004912109114229679,0,0,-0.007368163671344519,0,0,0.0008186848717741668,0,-0.0032747394870966673,-0.0024560545571148396,0,0.0032747394870966673,0.0008186848717741668,0,0,-0.0008186848717741668,0,0,0,0,0,-0.0008186848717741668,0,0.006549478974193335,0.004093424417078495,0,0,-0.0016373697435483336,0,0.0032747394870966673,0,0,0,-0.0016373697435483336,0,0,0.0016373697435483336,0,-0.006549478974193335,-0.0016373697435483336,0,0.01309895794838667,0.01309895794838667,0,-0.022923175245523453,-0.00818684883415699,0,0,0.0032747394870966673,0,0,-0.0016373697435483336,0,0.0032747394870966673,0.0008186848717741668,0,0,-0.0016373697435483336,0,0.7630142569541931,0.004912109114229679,0,-0.006549478974193335,-0.0032747394870966673,0,0,0.0032747394870966673,0,-0.006549478974193335,-0.0016373697435483336,0,0,0.007368163671344519,0,0,-0.0016373697435483336,0,0.0032747394870966673,0.0032747394870966673,0,0,-0.0008186848717741668,0,0.009824218228459358,0.0032747394870966673,0,-0.009824218228459358,-0.0016373697435483336,0,0.0032747394870966673,0.0008186848717741668,0,-0.0032747394870966673,0,0,0,0.0032747394870966673,0,0,0,0,0,0.019648436456918716,0,-0.0032747394870966673,-0.0016373697435483336,0,0.0032747394870966673,0.0016373697435483336,0,-0.0032747394870966673,0,0,0,0.0016373697435483336,0,0,-0.0024560545571148396,0,0.009824218228459358,0.0032747394870966673,0,0,-0.0008186848717741668,0,0,0.0016373697435483336,0,-0.40606769919395447,0,0,0,0,0,-0.0032747394870966673,-0.0032747394870966673,0,0.006549478974193335,0.007368163671344519,0,0,-0.01228027231991291,0,0,0,0,0,0,0,0.0032747394870966673,0.0024560545571148396,0,0,-0.0008186848717741668,0,0.0032747394870966673,0.38805660605430603,0,-0.0032747394870966673,-0.007368163671344519,0,0.006549478974193335,0.0008186848717741668,0,0,-0.004093424417078495,0,0,0,0,0,0,0,0.006549478974193335,0.0032747394870966673,0,-0.009824218228459358,-0.0008186848717741668,0,0.0032747394870966673,0.006549478974193335,0,-0.0032747394870966673,-0.005730793811380863,0,0.0032747394870966673,0.004093424417078495,0,-0.0032747394870966673,-0.0024560545571148396,0,0,0.0016373697435483336,0,-0.0032747394870966673,0,0,0.009824218228459358,0.0016373697435483336,0,0,-0.0024560545571148396,0,0,0.0016373697435483336,0,-0.006549478974193335,-0.0016373697435483336,0,0,0.0016373697435483336,0,0,0,0,0,0.004912109114229679,0,0,-0.0008186848717741668,0,0.006549478974193335,0.0008186848717741668,0,0,-0.20303384959697723,0,0.0032747394870966673,0,0,-0.006549478974193335,-0.0016373697435483336,0,0.006549478974193335,0.004912109114229679,0,-0.006549478974193335,0,0,0,0.0008186848717741668,0,0,0,0,0.009824218228459358,0.0016373697435483336,0,0,-0.0016373697435483336,0,0,0.004912109114229679,0,-0.0032747394870966673,-0.007368163671344519,0,0,0.0032747394870966673,0,0,0,0,0.0032747394870966673,0.0008186848717741668,0,0,0,0,0,0.19402830302715302,0,0,-0.006549478974193335,0,0.07859374582767487,0.0016373697435483336,0,0,-0.0032747394870966673,0,0,0.0016373697435483336,0,0,-0.0016373697435483336,0,0.006549478974193335,0.0008186848717741668,0,-0.009824218228459358,-0.0016373697435483336,0,0,0.007368163671344519,0,-0.0032747394870966673,-0.0024560545571148396,0,0,0.0008186848717741668,0,0,-0.004093424417078495,0,0,0,0,0,0,0,0.0032747394870966673,0,0,-0.0032747394870966673,-0.0008186848717741668,0,0,0.004093424417078495,0,0,-0.0008186848717741668,0,0.0032747394870966673,0.0016373697435483336,0,-0.0032747394870966673,-0.0032747394870966673,0,0.02619791589677334,0.005730793811380863,0,-0.01637369766831398,-0.0032747394870966673,0,0.0032747394870966673,0,0,-0.0032747394870966673,-0.10151692479848862,0],"text":"; ==========================================================\n; COMMODORE 64 - Examples in 6502 Assembly language\n; © Digitsensitive; digit.sensitivee@gmail.com\n; Decimal, Hexadecimal and Binary numbers\n; ==========================================================\n\n; ----------------------------------------------------------\n; A binary number is preceded by a percent sign (%)\n; Immediate addressing can be identified by the Hashpount (#)\n; The dollar sign ($) tells the assembler, that the number is in Hexadecimal.\n; Example:\n; The number 6 can be written as follows:\n; #6 = #$6 = #$06 = #%0110\n; ----------------------------------------------------------\n\n; ----------------------------------------------------------\n; Main Loop\n; ----------------------------------------------------------\n\n        *=$02a7                 ; sys 679\n\n; In this example we will display four times the letter \"F\"\ninit    lda #6                  ; decimal\n        sta $0400\n        lda #$6                 ; hexadecimal\n        sta $0401\n        lda #$06                ; hexadecimal\n        sta $0402\n        lda #%0110              ; binary\n        sta $0403\n        rts","sourcePath":"external/github.com/digitsensitive_c64/src/examples/decimalHexAndBinaryNumbers.asm","sourceMtimeMs":1701175250000,"sourceUrl":"https://github.com/digitsensitive/c64/blob/main/decimalHexAndBinaryNumbers.asm","sourceRepoUrl":"https://github.com/digitsensitive/c64","license":"UNKNOWN","attribution":"Source: digitsensitive/c64 (License unknown)"},{"name":"github.com/digitsensitive_c64/src/examples/drawACharacterAtScreenLocation.asm","language":"asm","vector":[0,0.001260063610970974,0,0,-0.002520127221941948,0,0.010080508887767792,0.002520127221941948,0,0,-0.007560381665825844,0,0.010080508887767792,0.005040254443883896,0,-0.020161017775535583,-0.003780190832912922,0,0,0.003780190832912922,0,-0.005040254443883896,0,0,0.005040254443883896,0.01260063610970974,0,0,-0.001260063610970974,0,0.010080508887767792,0.0667833685874939,0,-0.005040254443883896,0,0,0,0.002520127221941948,0,0,-0.003780190832912922,0,0,0,0,0,-0.002520127221941948,0,0,0.001260063610970974,0,-0.015120763331651688,-0.013860699720680714,0,0.010080508887767792,0,0,0,-0.01260063610970974,0,0,0,0,0,-0.001260063610970974,0,0.005040254443883896,0.002520127221941948,0,0,0,0,0.02520127221941948,0.005040254443883896,0,0,-0.007560381665825844,0,0.005040254443883896,0,0,-0.005040254443883896,-0.002520127221941948,0,0,0.02520127221941948,0,-0.010080508887767792,-0.001260063610970974,0,0,0.001260063610970974,0,0,-0.002520127221941948,0,0.005040254443883896,0,0,0,-0.001260063610970974,0,0.5947500467300415,0.005040254443883896,0,-0.005040254443883896,-0.002520127221941948,0,0.005040254443883896,0.010080508887767792,0,-0.005040254443883896,-0.010080508887767792,0,0,0,0,-0.005040254443883896,-0.002520127221941948,0,0.005040254443883896,0.003780190832912922,0,-0.015120763331651688,-0.003780190832912922,0,0.020161017775535583,0.007560381665825844,0,-0.030241526663303375,-0.002520127221941948,0,0.010080508887767792,0.001260063610970974,0,-0.005040254443883896,0,0,0,0,0,0,0,0,0,0.02268114499747753,0,0,-0.007560381665825844,0,0.020161017775535583,0.005040254443883896,0,0,-0.001260063610970974,0,0,0,0,0,0,0,0.005040254443883896,0.002520127221941948,0,0,-0.00630031805485487,0,0,0.01260063610970974,0,-0.6098707914352417,-0.002520127221941948,0,0.005040254443883896,0.002520127221941948,0,-0.010080508887767792,-0.002520127221941948,0,0,0.001260063610970974,0,0,-0.005040254443883896,0,0,0.002520127221941948,0,-0.015120763331651688,-0.002520127221941948,0,0.005040254443883896,0.002520127221941948,0,0,-0.001260063610970974,0,0.05040254443883896,0.30997565388679504,0,-0.005040254443883896,-0.002520127221941948,0,0.08568432182073593,0.002520127221941948,0,0,-0.003780190832912922,0,0.010080508887767792,0,0,-0.005040254443883896,-0.002520127221941948,0,0,0.005040254443883896,0,-0.010080508887767792,-0.007560381665825844,0,0.005040254443883896,0.01260063610970974,0,-0.005040254443883896,-0.020161017775535583,0,0,0.005040254443883896,0,-0.030241526663303375,-0.003780190832912922,0,0,0.001260063610970974,0,-0.005040254443883896,0,0,0,0.002520127221941948,0,0,-0.001260063610970974,0,0,0.010080508887767792,0,-0.010080508887767792,0,0,0,0,0,0,0,0,0,0.002520127221941948,0,-0.005040254443883896,-0.003780190832912922,0,0.005040254443883896,0.002520127221941948,0,0,-0.30493539571762085,0,0,0.002520127221941948,0,-0.005040254443883896,-0.005040254443883896,0,0,0.001260063610970974,0,-0.010080508887767792,0,0,0.020161017775535583,0.00630031805485487,0,0,-0.007560381665825844,0,0,0.003780190832912922,0,0,-0.001260063610970974,0,0.005040254443883896,0.02520127221941948,0,-0.015120763331651688,-0.005040254443883896,0,0.010080508887767792,0.042842160910367966,0,0,0,0,0.005040254443883896,0.00630031805485487,0,0,-0.002520127221941948,0,0,0.14868751168251038,0,0,-0.00630031805485487,0,0.09072457998991013,0.003780190832912922,0,0,-0.003780190832912922,0,0,0,0,-0.005040254443883896,-0.016380826011300087,0,0,0.001260063610970974,0,0,-0.00630031805485487,0,0,0.005040254443883896,0,-0.02520127221941948,-0.007560381665825844,0,0,0.002520127221941948,0,-0.010080508887767792,-0.00630031805485487,0,0,0,0,0,0,0,0.005040254443883896,0,0,0,-0.002520127221941948,0,0.010080508887767792,0.007560381665825844,0,-0.010080508887767792,0,0,0,0,0,-0.005040254443883896,-0.002520127221941948,0,0.05040254443883896,0.001260063610970974,0,0,-0.005040254443883896,0,0,0.010080508887767792,0,-0.005040254443883896,-0.15246769785881042,0],"text":"; ==========================================================\n; COMMODORE 64 - Examples in 6502 Assembly language\n; © Digitsensitive; digit.sensitivee@gmail.com\n; How to draw a character at a specific location on screen\n; ==========================================================\n\n.include \"src/include/macros-general.asm\"\n\n; ----------------------------------------------------------\n; Main Loop\n; ----------------------------------------------------------\n\n        *=$02a7                 ; sys 679\n\ninit    ldx #$00\n        stx $d020               ; Border color register\n        stx $d021               ; Background color\n\nclear   lda #$20                ; spacebar screen code\n        sta $0400,x             ; fill four areas of screen with 256 spacebar characters\n        sta $0500,x\n        sta $0600,x\n        sta $06e8,x\n        lda #$00                ; set foreground to black in Color Ram \n        sta $d800,x\n        sta $d900,x\n        sta $da00,x\n        sta $dae8,x\n        inx\n        bne clear\n\ndraw    #drawCharacterAt $51,$D,$06,$F  ; draw first character\n        #drawCharacterAt $58,$E,$06,$E  ; draw second character\n        #drawCharacterAt $5A,$F,$06,$D  ; draw third character\n        rts\n","sourcePath":"external/github.com/digitsensitive_c64/src/examples/drawACharacterAtScreenLocation.asm","sourceMtimeMs":1701175250000,"sourceUrl":"https://github.com/digitsensitive/c64/blob/main/drawACharacterAtScreenLocation.asm","sourceRepoUrl":"https://github.com/digitsensitive/c64","license":"UNKNOWN","attribution":"Source: digitsensitive/c64 (License unknown)"},{"name":"github.com/digitsensitive_c64/src/examples/selectColorFromIncludeFile.asm","language":"asm","vector":[0,0,0,0,-0.0008319438784383237,0,0,0,0,0,-0.0016638877568766475,0,0.009983326308429241,0,0,-0.003327775513753295,-0.0008319438784383237,0,0,0.0024958315771073103,0,-0.003327775513753295,0,0,0,0.003327775513753295,0,0,0,0,0,0.02163054049015045,0,-0.003327775513753295,-0.0008319438784383237,0,0,0,0,0,0,0,0,0,0,-0.003327775513753295,0,0,0,0.0008319438784383237,0,0,-0.0024958315771073103,0,0.003327775513753295,0,0,0,-0.0008319438784383237,0,0,0,0,0,-0.0008319438784383237,0,0,0.003327775513753295,0,0,-0.003327775513753295,0,0.003327775513753295,0,0,-0.003327775513753295,-0.0008319438784383237,0,0,0,0,0,-0.0016638877568766475,0,0,0.003327775513753295,0,-0.003327775513753295,0,0,0,0.0008319438784383237,0,0,-0.0016638877568766475,0,0.003327775513753295,0,0,0,0,0,0.7753716707229614,0,0,-0.003327775513753295,-0.0016638877568766475,0,0,0.00665555102750659,0,-0.003327775513753295,-0.0016638877568766475,0,0,0,0,0,-0.0016638877568766475,0,0,0,0,-0.003327775513753295,-0.0008319438784383237,0,0.01331110205501318,0,0,0,-0.0016638877568766475,0,0.003327775513753295,0.0008319438784383237,0,0,0,0,0,0.0008319438784383237,0,0,-0.0016638877568766475,0,0,0.010815270245075226,0,0,0,0,0.009983326308429241,0.0016638877568766475,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0008319438784383237,0,0,0.0016638877568766475,0,-0.3960052728652954,-0.0016638877568766475,0,0,0,0,-0.003327775513753295,0,0,0,0.0016638877568766475,0,0,-0.003327775513753295,0,0,0,0,-0.003327775513753295,0,0,0.003327775513753295,0.0016638877568766475,0,0,-0.0008319438784383237,0,0.00665555102750659,0.38934972882270813,0,0,-0.0016638877568766475,0,0,0,0,-0.003327775513753295,-0.0024958315771073103,0,0,0,0,0,0,0,0,0,0,0,-0.0016638877568766475,0,0.003327775513753295,0.009151382371783257,0,-0.003327775513753295,-0.0008319438784383237,0,0,0.0016638877568766475,0,-0.003327775513753295,-0.0008319438784383237,0,0,0,0,-0.003327775513753295,0,0,0,0,0,0,-0.0008319438784383237,0,0,0.004991663154214621,0,-0.003327775513753295,0,0,0,0,0,0,-0.0008319438784383237,0,0,0,0,0,0,0,0.003327775513753295,0.0008319438784383237,0,0,-0.1980026364326477,0,0,0,0,0,-0.0016638877568766475,0,0,0,0,-0.00665555102750659,0,0,0.00665555102750659,0.0008319438784383237,0,0,-0.0024958315771073103,0,0,0.0016638877568766475,0,0,0,0,0,0.003327775513753295,0,-0.003327775513753295,-0.0008319438784383237,0,0,0,0,0,-0.0016638877568766475,0,0.003327775513753295,0.0008319438784383237,0,0,0,0,0.003327775513753295,0.19384291768074036,0,0,-0.0008319438784383237,0,0.0432610809803009,0.0016638877568766475,0,0,-0.0024958315771073103,0,0,0,0,0,-0.0016638877568766475,0,0,0,0,0,-0.0024958315771073103,0,0,0.003327775513753295,0,-0.003327775513753295,0,0,0,0.0008319438784383237,0,0,-0.0016638877568766475,0,0,0,0,0,0,0,0.00665555102750659,0,0,-0.00665555102750659,0,0,0,0.004159719217568636,0,0,0,0,0,0,0,-0.003327775513753295,0,0,0.00665555102750659,0,0,0,-0.003327775513753295,0,0,0.003327775513753295,0,-0.003327775513753295,-0.09900131821632385,0],"text":"; ==========================================================\n; COMMODORE 64 - Examples in 6502 Assembly language\n; © Digitsensitive; digit.sensitivee@gmail.com\n; How to select a color from an include file\n; ==========================================================\n\n.include \"src/include/constants.asm\"\n\n; ----------------------------------------------------------\n; Labels\n; ----------------------------------------------------------\n\nborder = $d020\n\n; ----------------------------------------------------------\n; Main Loop\n; ----------------------------------------------------------\n\n        *=$02a7                 ; sys 679\n\nloop    lda #BLUE\n        sta border\n        jmp loop","sourcePath":"external/github.com/digitsensitive_c64/src/examples/selectColorFromIncludeFile.asm","sourceMtimeMs":1701175250000,"sourceUrl":"https://github.com/digitsensitive/c64/blob/main/selectColorFromIncludeFile.asm","sourceRepoUrl":"https://github.com/digitsensitive/c64","license":"UNKNOWN","attribution":"Source: digitsensitive/c64 (License unknown)"},{"name":"github.com/digitsensitive_c64/src/examples/setBorderColor.asm","language":"asm","vector":[0,0,0,0,-0.0008319283369928598,0,0,0,0,0,-0.0016638566739857197,0,0,0,0,-0.0033277133479714394,-0.0016638566739857197,0,0,0.0024957850109785795,0,0,0,0,0,0.0024957850109785795,0,0,0,0,0.0033277133479714394,0.0232939925044775,0,-0.0033277133479714394,0,0,0,0,0,0,0,0,0,0,0,-0.0033277133479714394,-0.0016638566739857197,0,0,0.0008319283369928598,0,0,-0.0024957850109785795,0,0,0,0,0,-0.0008319283369928598,0,0,0,0,0,-0.0008319283369928598,0,0,0.0016638566739857197,0,0,-0.0033277133479714394,0,0.0033277133479714394,0,0,-0.0033277133479714394,-0.0008319283369928598,0,0,0,0,0,-0.0016638566739857197,0,0,0.0033277133479714394,0,-0.006655426695942879,-0.0016638566739857197,0,0,0,0,0,0,0,0.0033277133479714394,0,0,0,0,0,0.775357186794281,0,0,-0.0033277133479714394,0,0,0,0.0033277133479714394,0,0,-0.0016638566739857197,0,0,0,0,0,0,0,0,0,0,-0.0033277133479714394,-0.0008319283369928598,0,0.006655426695942879,0.0016638566739857197,0,0,-0.0016638566739857197,0,0.0033277133479714394,0.0008319283369928598,0,0,0,0,0,0.0008319283369928598,0,0,-0.0016638566739857197,0,0,0.01164699625223875,0,0,0,0,0.0033277133479714394,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0008319283369928598,0,0,0.0016638566739857197,0,-0.39599788188934326,-0.0016638566739857197,0,0,0,0,-0.0033277133479714394,0,0,0,0.0008319283369928598,0,0,-0.004991570021957159,0,0,0,0,-0.006655426695942879,0,0,0.0033277133479714394,0.0016638566739857197,0,0,-0.0008319283369928598,0,0.0033277133479714394,0.38934245705604553,0,0,-0.0024957850109785795,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.006655426695942879,-0.0016638566739857197,0,0.0033277133479714394,0.0033277133479714394,0,-0.0033277133479714394,-0.0008319283369928598,0,0,0.0016638566739857197,0,-0.0033277133479714394,0,0,0,0,0,-0.0033277133479714394,0,0,0,0.0008319283369928598,0,0,-0.0008319283369928598,0,0,0.0016638566739857197,0,-0.0033277133479714394,0,0,0,0,0,0,-0.0008319283369928598,0,0,0,0,0,0,0,0,0,0,0,-0.19799894094467163,0,0,0,0,0,-0.0016638566739857197,0,0,0,0,0,0,0,0.013310853391885757,0.0008319283369928598,0,0,-0.0041596414521336555,0,0,0.0016638566739857197,0,0,0,0,0,0.0016638566739857197,0,-0.0033277133479714394,-0.0016638566739857197,0,0,0,0,0,0,0,0.0033277133479714394,0.0008319283369928598,0,0,0,0,0.0033277133479714394,0.19383929669857025,0,0,-0.0041596414521336555,0,0.046587985008955,0.0016638566739857197,0,0,-0.0016638566739857197,0,0,0,0,0,-0.0016638566739857197,0,0,0,0,0,-0.0024957850109785795,0,0,0.0016638566739857197,0,-0.0033277133479714394,0,0,0,0.0008319283369928598,0,0,-0.0016638566739857197,0,0,0,0,0,0,0,0.0033277133479714394,0,0,-0.006655426695942879,0,0,0,0.0008319283369928598,0,0,0,0,0,0,0,-0.0033277133479714394,0,0,0.006655426695942879,0,0,-0.0033277133479714394,0,0,0,0.006655426695942879,0,0,-0.09899947047233582,0],"text":"; ==========================================================\n; COMMODORE 64 - Examples in 6502 Assembly language\n; © Digitsensitive; digit.sensitivee@gmail.com\n; How to set the border color\n; ==========================================================\n\n; ----------------------------------------------------------\n; Labels\n; ----------------------------------------------------------\n\nborder = $d020\n\n; ----------------------------------------------------------\n; Main Loop\n; ----------------------------------------------------------\n\n        *=$02a7                 ; sys 679\n\nloop    lda #$04                ; set border color to purple\n        sta border\n        jmp loop","sourcePath":"external/github.com/digitsensitive_c64/src/examples/setBorderColor.asm","sourceMtimeMs":1701175250000,"sourceUrl":"https://github.com/digitsensitive/c64/blob/main/setBorderColor.asm","sourceRepoUrl":"https://github.com/digitsensitive/c64","license":"UNKNOWN","attribution":"Source: digitsensitive/c64 (License unknown)"},{"name":"github.com/digitsensitive_c64/src/examples/useOfAMacro.asm","language":"asm","vector":[0,0,0,0,-0.0024878145195543766,0,0,0,0,0,-0.001658543013036251,0,0.013268344104290009,0,0,-0.003317086026072502,-0.0008292715065181255,0,0,0.0024878145195543766,0,0,0,0,0,0.004146357532590628,0,0,0,0,0,0.022390330210328102,0,-0.003317086026072502,0,0,0,0,0,-0.003317086026072502,-0.001658543013036251,0,0,0,0,0,0,0,0,0.0008292715065181255,0,0,-0.004975629039108753,0,0.003317086026072502,0,0,0,-0.0008292715065181255,0,0,0,0,0,-0.0008292715065181255,0,0,0.001658543013036251,0,0,-0.003317086026072502,0,0.003317086026072502,0,0,-0.003317086026072502,-0.0008292715065181255,0,0,0,0,0,-0.001658543013036251,0,0,0,0,0,0,0,0,0.001658543013036251,0,0,-0.001658543013036251,0,0.003317086026072502,0,0,0,0,0,0.776198148727417,0,0,-0.003317086026072502,-0.003317086026072502,0,0,0.00746344355866313,0,0,-0.001658543013036251,0,0,0,0,0,-0.0008292715065181255,0,0.003317086026072502,0,0,-0.003317086026072502,-0.0008292715065181255,0,0.019902516156435013,0,0,0,-0.001658543013036251,0,0.003317086026072502,0.0008292715065181255,0,0,-0.001658543013036251,0,0,0.0008292715065181255,0,-0.003317086026072502,0,0,0,0.010780529119074345,0,0,0,0,0.01658543013036251,0.001658543013036251,0,0,-0.0008292715065181255,0,0,0,0,0,0,0,0,0,0,0,-0.001658543013036251,0,0,0.001658543013036251,0,-0.3947332203388214,-0.001658543013036251,0,0,0,0,-0.003317086026072502,0,0,0,0.0008292715065181255,0,0,-0.001658543013036251,0,0,0,0,-0.003317086026072502,0,0,0.003317086026072502,0.001658543013036251,0,0,-0.0008292715065181255,0,0.009951258078217506,0.3880990743637085,0,0,-0.001658543013036251,0,0.003317086026072502,0,0,0,-0.0008292715065181255,0,0,0,0,0,0,0,0,0.001658543013036251,0,0,-0.001658543013036251,0,0.003317086026072502,0.013268344104290009,0,-0.006634172052145004,-0.0008292715065181255,0,0,0.001658543013036251,0,-0.003317086026072502,0,0,0,0,0,-0.003317086026072502,-0.001658543013036251,0,0,0,0,0,-0.0008292715065181255,0,0,0.008292715065181255,0,-0.003317086026072502,-0.0008292715065181255,0,0,0,0,0,0,0,0,0,0,0,0,0,0.006634172052145004,0.0008292715065181255,0,0,-0.1973666101694107,0,0,0,0,0,-0.001658543013036251,0,0,0,0,-0.013268344104290009,0,0,0.003317086026072502,0.0008292715065181255,0,0,-0.0024878145195543766,0,0,0.001658543013036251,0,-0.003317086026072502,0,0,0,0.004975629039108753,0,-0.003317086026072502,0,0,0,0.001658543013036251,0,0,0,0,0.003317086026072502,0.0008292715065181255,0,0,0,0,0.003317086026072502,0.19404953718185425,0,0,-0.0008292715065181255,0,0.04312211647629738,0.001658543013036251,0,0,-0.003317086026072502,0,0,0,0,-0.003317086026072502,-0.001658543013036251,0,0,0.0008292715065181255,0,0,-0.0024878145195543766,0,0,0.004975629039108753,0,-0.006634172052145004,0,0,0,0.0008292715065181255,0,0,-0.001658543013036251,0,0,0,0,0,-0.0008292715065181255,0,0.003317086026072502,0,0,-0.006634172052145004,0,0,0,0.00746344355866313,0,0,0,0,0,0,0,-0.003317086026072502,0,0,0,0,0,0,-0.006634172052145004,0,0,0.001658543013036251,0,-0.003317086026072502,-0.09868330508470535,0],"text":"; ==========================================================\n; COMMODORE 64 - Examples in 6502 Assembly language\n; © Digitsensitive; digit.sensitivee@gmail.com\n; How to use a macro\n; ==========================================================\n\n.include \"src/include/constants.asm\"\n.include \"src/include/macros-general.asm\"\n\n; ----------------------------------------------------------\n; Labels\n; ----------------------------------------------------------\n\nborder = $d020\n\n; ----------------------------------------------------------\n; Main Loop\n; ----------------------------------------------------------\n\n        *=$02a7                 ; sys 679\n\nloop    #poke BORDER_COLOR_REGISTER,RED\n        jmp loop","sourcePath":"external/github.com/digitsensitive_c64/src/examples/useOfAMacro.asm","sourceMtimeMs":1701175250000,"sourceUrl":"https://github.com/digitsensitive/c64/blob/main/useOfAMacro.asm","sourceRepoUrl":"https://github.com/digitsensitive/c64","license":"UNKNOWN","attribution":"Source: digitsensitive/c64 (License unknown)"},{"name":"github.com/jarrodparkes_c64-examples/supernatural/step100/tiles.asm","language":"asm","vector":[0.039797548204660416,0.009949387051165104,0,0,0,0,0,0.07959509640932083,0,0,0,0,0,0,0,-0.07959509640932083,-0.019898774102330208,0,0,0,0,0,0,0,0,0,0,0,-0.019898774102330208,0,0,0.15919019281864166,0,0,0,0,0,0,0,0,0,0,0.039797548204660416,0.009949387051165104,0,0,-0.15919019281864166,0,0,0.009949387051165104,0,-0.19898773729801178,0,0,0.039797548204660416,0,0,0,-0.10944325476884842,0,0,0,0,0,0,0,0,0.019898774102330208,0,0,-0.019898774102330208,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.019898774102330208,0,0,0,0,0.039797548204660416,0.009949387051165104,0,0,0,0,0,0,0,0,-0.08954448252916336,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.009949387051165104,0,0,0,0,0,0,0,0,0.019898774102330208,0,0,-0.009949387051165104,0,0.039797548204660416,0,0,-0.039797548204660416,-0.09949386864900589,0,0,0.019898774102330208,0,0,0,0,0,0,0,0,-0.07959509640932083,0,0,0,0,0,0,0,0,0,0,0,-0.049746934324502945,0,0.039797548204660416,0,0,0,0,0,0.3183803856372833,0.009949387051165104,0,0,-0.009949387051165104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.019898774102330208,0,0,0,0,0.6367607712745667,0,0,0,0,0,0,0.009949387051165104,0,0,0,0,0.039797548204660416,0,0,0,0,0,0.039797548204660416,0,0,0,-0.019898774102330208,0,0,0,0,-0.039797548204660416,0,0,0,0,0,0,0,0,0,0.019898774102330208,0,0,-0.019898774102330208,0,0,0,0,0,0,0,0,0.009949387051165104,0,0,0,0,0,0,0,0,-0.049746934324502945,0,0,0.009949387051165104,0,0,0,0,0,0.019898774102330208,0,0,0,0,0.039797548204660416,0.15919019281864166,0,0,0,0,0,0,0,-0.19898773729801178,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3183803856372833,0,-0.039797548204660416,0,0,0,0,0,0,0,0,0,0.029848160222172737,0,-0.039797548204660416,0,0,0,0.019898774102330208,0,0,0,0,0,0,0,0,-0.019898774102330208,0,0,0,0,-0.3183803856372833,0,0,0,0,0,0,0,0,0,0,0,-0.19898773729801178,0,0,0,0,0,0,0,0,0.039797548204660416,0.009949387051165104,0,-0.039797548204660416,-0.009949387051165104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.019898774102330208,0,0,0,0,0,0,0,0,-0.09949386864900589,0],"text":"BLOCK_TABLE_UL_LOCATION0\r\n!byte 162,12,24\r\n\r\nBLOCK_TABLE_UL_COLOR_LOCATION0\r\n!byte 13,6,1\r\n\r\nBLOCK_TABLE_UR_LOCATION0\r\n!byte 163,13,25\r\n\r\nBLOCK_TABLE_UR_COLOR_LOCATION0\r\n!byte 13,6,1\r\n\r\nBLOCK_TABLE_LL_LOCATION0\r\n!byte 2,14,26\r\n\r\nBLOCK_TABLE_LL_COLOR_LOCATION0\r\n!byte 13,6,1\r\n\r\nBLOCK_TABLE_LR_LOCATION0\r\n!byte 3,15,27\r\n\r\nBLOCK_TABLE_LR_COLOR_LOCATION0\r\n!byte 13,6,1\r\n\r\n","sourcePath":"external/github.com/jarrodparkes_c64-examples/supernatural/step100/tiles.asm","sourceMtimeMs":1539612651000,"sourceUrl":"https://github.com/jarrodparkes/c64-examples/blob/master/tiles.asm","sourceRepoUrl":"https://github.com/jarrodparkes/c64-examples","license":"UNKNOWN","attribution":"Source: jarrodparkes/c64-examples (License unknown)"},{"name":"github.com/jarrodparkes_c64-examples/temp/colors.asm","language":"asm","vector":[0,0,0,0,-0.00179177091922611,0,0,0.002687656320631504,0,0,0,0,0,0,0,0,-0.000895885459613055,0,0,0.000895885459613055,0,0,0,0,0,0.00179177091922611,0,0,0,0,0,0.022397136315703392,0,0,0,0,0,0.002687656320631504,0,0,-0.00179177091922611,0,0,0.000895885459613055,0,-0.01433416735380888,0,0,0,0,0,-0.00716708367690444,-0.00179177091922611,0,0,0,0,0,0,0,0,0.00358354183845222,0,0,-0.00179177091922611,0,0.00358354183845222,0,0,0,-0.00179177091922611,0,0,0,0,0,-0.00179177091922611,0,0,0.000895885459613055,0,-0.00358354183845222,0,0,0,0,0,0,-0.008062968961894512,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.00179177091922611,0,0.00716708367690444,0.00179177091922611,0,0,0,0,0,0,0,0,0,0,0.00716708367690444,0,0,-0.00358354183845222,0,0,0.00716708367690444,0,0,0,0,0,0.00716708367690444,0,0,0,0,0,0,0.000895885459613055,0,0,-0.00716708367690444,0,0.010750625282526016,0.010750625282526016,0,-0.00358354183845222,-0.00358354183845222,0,0.00358354183845222,0,0,0,-0.000895885459613055,0,0,0,0,-0.01433416735380888,0,0,0,0.00179177091922611,0,0,-0.000895885459613055,0,0,0,0,-0.8708006739616394,0,0,0,0.000895885459613055,0,-0.00716708367690444,-0.002687656320631504,0,0.010750625282526016,0,0,0,-0.000895885459613055,0,0,0,0,-0.00358354183845222,-0.000895885459613055,0,0.00358354183845222,0,0,0,0,0,0,0,0,0,-0.00358354183845222,0,0.00358354183845222,0.00358354183845222,0,0,0,0,0.010750625282526016,0,0,0,0,0,0.00358354183845222,0.00358354183845222,0,0,-0.00179177091922611,0,0,0.00358354183845222,0,0,0,0,0,0.00358354183845222,0,0,0,0,0.00716708367690444,0,0,0,0,0,0,0.005375312641263008,0,0,-0.00179177091922611,0,0,0.00179177091922611,0,0,0,0,0.00358354183845222,0,0,0,-0.010750625282526016,0,0,0,0,-0.00358354183845222,-0.00179177091922611,0,0,0,0,0,-0.4354003369808197,0,0,0,0,0,-0.00358354183845222,0,0,0.00627119792625308,0,-0.00716708367690444,0,0,0.00716708367690444,0,0,0,-0.00179177091922611,0,0,0.00179177091922611,0,0,-0.000895885459613055,0,0,0,0,0,0,0,0,0.00179177091922611,0,0,0,0,0,0.005375312641263008,0,0,0,0,0.00358354183845222,0.00179177091922611,0,0,0,0,0.043002501130104065,0.00179177091922611,0,0,0,0,0,0,0,-0.00358354183845222,0,0,0,0.005375312641263008,0,0,-0.000895885459613055,0,0,0.00179177091922611,0,-0.00358354183845222,0,0,0,0.00179177091922611,0,0,0,0,0.00358354183845222,0.00179177091922611,0,-0.00358354183845222,0,0,0,0.002687656320631504,0,-0.00358354183845222,-0.002687656320631504,0,0,0.000895885459613055,0,-0.00358354183845222,0,0,0,0,0,0,-0.00358354183845222,0,0,0,0,-0.01433416735380888,-0.00358354183845222,0,0,0.00358354183845222,0,0,-0.21770016849040985,0],"text":";============================================================\n; specify output file\n;============================================================\n\n!cpu 6502\n!to \"build/colors.prg\",cbm    ; output file\n\n;============================================================\n; This program rapidly updates the colors\n; of the screen and the border.\n;============================================================\n\n*=$c000   ; starting address of the program\n\nBORDER = $d020\nSCREEN = $d021\n\nstart   inc SCREEN  ; increase screen colour\n        inc BORDER  ; increase border colour\n        jmp start   ; repeat\n","sourcePath":"external/github.com/jarrodparkes_c64-examples/temp/colors.asm","sourceMtimeMs":1539612651000,"sourceUrl":"https://github.com/jarrodparkes/c64-examples/blob/master/temp/colors.asm","sourceRepoUrl":"https://github.com/jarrodparkes/c64-examples","license":"UNKNOWN","attribution":"Source: jarrodparkes/c64-examples (License unknown)"},{"name":"github.com/kschuetz_c64-chip8/include/defines.s","language":"asm","vector":[0.027684809640049934,0,0,0,-0.006921202410012484,0,0,0.003460601205006242,0,0,0,0,0.013842404820024967,0.013842404820024967,0,-0.027684809640049934,0,0,0.013842404820024967,0.21801787614822388,0,0,-0.024224208667874336,0,0,0.006921202410012484,0,0,0,0,0,0.041527215391397476,0,-0.013842404820024967,0,0,0,0,0,0,0,0,0,0.013842404820024967,0,0,0,0,0,0.006921202410012484,0,0,0,0,0,0,0,0,-0.020763607695698738,0,0,0.003460601205006242,0,0,-0.006921202410012484,0,0,0.003460601205006242,0,-0.013842404820024967,-0.03460601344704628,0,0.013842404820024967,0,0,0,-0.006921202410012484,0,0,0.003460601205006242,0,0,-0.020763607695698738,0,0.013842404820024967,0,0,0,-0.013842404820024967,0,0,0.003460601205006242,0,-0.013842404820024967,-0.006921202410012484,0,0,0.01730300672352314,0,0,-0.003460601205006242,0,0.013842404820024967,0,0,0,-0.013842404820024967,0,0.013842404820024967,0.010381803847849369,0,0,-0.01730300672352314,0,0.12458164244890213,0.006921202410012484,0,0,-0.003460601205006242,0,0.013842404820024967,0,0,0,0,0,0.1799512654542923,0.006921202410012484,0,-0.013842404820024967,-0.006921202410012484,0,0.013842404820024967,0.010381803847849369,0,-0.013842404820024967,-0.006921202410012484,0,0,0.003460601205006242,0,-0.013842404820024967,0,0,0.013842404820024967,0.020763607695698738,0,-0.013842404820024967,0,0,0.027684809640049934,0,0,0,0,0,0,0.006921202410012484,0,0,0,0,0,0.003460601205006242,0,0,-0.006921202410012484,0,0,0.006921202410012484,0,-0.22147847712039948,-0.010381803847849369,0,0,0,0,0,-0.003460601205006242,0,0.013842404820024967,0.006921202410012484,0,0,-0.013842404820024967,0,0,0,0,0,-0.010381803847849369,0,0.7890170812606812,0,0,-0.041527215391397476,-0.010381803847849369,0,0,0.006921202410012484,0,0,-0.003460601205006242,0,0,0.006921202410012484,0,0,0,0,0,0.06921202689409256,0,0,0,0,0,0.006921202410012484,0,0,0,0,0,0.09343623369932175,0,0,-0.013842404820024967,0,0,0.010381803847849369,0,0,-0.006921202410012484,0,0.013842404820024967,0,0,0,-0.006921202410012484,0,0.013842404820024967,0.006921202410012484,0,-0.027684809640049934,-0.010381803847849369,0,0,0.013842404820024967,0,0,0,0,0.013842404820024967,0,0,0,0,0,0,0,0,-0.027684809640049934,0,0,0.013842404820024967,0,0,-0.027684809640049934,-0.11073923856019974,0,0.013842404820024967,0,0,-0.013842404820024967,0,0,0,0.006921202410012484,0,-0.05536961928009987,-0.003460601205006242,0,0.013842404820024967,0.003460601205006242,0,-0.013842404820024967,0,0,0,0.3945085406303406,0,-0.013842404820024967,-0.020763607695698738,0,0,0.003460601205006242,0,0,0,0,0.027684809640049934,0,0,0,-0.003460601205006242,0,0.041527215391397476,0,0,-0.027684809640049934,0,0,0.013842404820024967,0.003460601205006242,0,0,0,0,0.08305443078279495,0.003460601205006242,0,0,0,0,0,0.031145410612225533,0,0,0,0,0.027684809640049934,0.010381803847849369,0,0,0,0,0.013842404820024967,0.05190901830792427,0,0,-0.01730300672352314,0,0,0.003460601205006242,0,-0.041527215391397476,-0.003460601205006242,0,0,0.006921202410012484,0,-0.013842404820024967,-0.003460601205006242,0,0,0.003460601205006242,0,-0.05536961928009987,-0.01730300672352314,0,0,0.013842404820024967,0,-0.013842404820024967,-0.013842404820024967,0,0,0.006921202410012484,0,-0.041527215391397476,-0.006921202410012484,0,0,0,0,-0.013842404820024967,-0.027684809640049934,0,0,0.006921202410012484,0,0,-0.062290821224451065,0],"text":";; Using = where possible; using .define where ca65 complains\n\n.ifndef DEFINES_S\n\n.define DEFINES_S 1\n\n.include \"c64.inc\"\n\n; ************** not configurable *************\n\n.define guest_screen_physical_width 32\n.define guest_screen_physical_height 16\n.define guest_screen_offset_x 4\n.define guest_screen_offset_y 0\n.define chrome_height 8\nvic_bank_base = $c000\n\n; ************** configurable ****************\n\n.define title_length 16\n.define max_bundled_roms 100\n\ndefault_rom_index = 0\ndefault_pixel_style_index = 0\n\nchrome_bgcolor = BLACK\ndefault_screen_bgcolor = PURPLE\ndefault_screen_fgcolor = LIGHT_GREEN\nenabled_button_color = WHITE\ndisabled_button_color = DARK_GRAY\npaused_indicator_color = YELLOW\nindicator_on_color = GREEN\nindicator_off_color = RED\npixel_style_indicator_color = LIGHT_GREEN\nchrome_ui_key_color = LIGHT_GRAY\nchrome_text_color = WHITE\n\nkey_delay_frame_count = 18          ; ~ 1/3 second\n\n.endif\n","sourcePath":"external/github.com/kschuetz_c64-chip8/include/defines.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/defines.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/colors.s","language":"asm","vector":[0,0,0,0,-0.03320331126451492,0,0,0,0,0,0,0,0.06640662252902985,0,0,0,-0.06640662252902985,0,0.09960993379354477,0,0,-0.03320331126451492,0,0,0.06640662252902985,0.00830082781612873,0,0,0,0,0,0.1328132450580597,0,0,0,0,0,0,0,0,-0.01660165563225746,0,0,0,0,0,-0.01660165563225746,0,0,0.01660165563225746,0,0,0,0,0,0,0,0,-0.16601654887199402,0,0,0,0,0,0,0,0,0,0,0,-0.049804966896772385,0,0.09960993379354477,0.049804966896772385,0,0,-0.03320331126451492,0,0,0,0,0,0,0,0,0.06640662252902985,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.03320331126451492,0,0,0.041504137217998505,0,0,-0.00830082781612873,0,0.06640662252902985,0.049804966896772385,0,0,-0.03320331126451492,0,0,0.03320331126451492,0,0,0,0,0.46484634280204773,0,0,-0.03320331126451492,-0.03320331126451492,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.06640662252902985,0,0,0,0,0,-0.03320331126451492,-0.00830082781612873,0,0,0,0,0,-0.00830082781612873,0,0.1328132450580597,0.00830082781612873,0,0,0,0,0,0.049804966896772385,0,0,-0.08300827443599701,0,0,0,0,0,0,0,0,0,0,0,-0.024902483448386192,0,0,0.024902483448386192,0,0,-0.01660165563225746,0,0,0,0,0,0,0,0.03320331126451492,0.03320331126451492,0,0,0,0,0.5312529802322388,0,0,0,0,0,0,0.03320331126451492,0,0,0,0,0,0,0,0,0,0,0,0.24902483820915222,0,0,-0.01660165563225746,0,0,0.024902483448386192,0,0,-0.00830082781612873,0,0,0.01660165563225746,0,0,0,0,0,0,0,0,-0.03320331126451492,0,0,0,0,0,-0.01660165563225746,0,0,0,0,0,0,0,0,0.06640662252902985,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.1328132450580597,0,0,0.03320331126451492,0.024902483448386192,0,-0.03320331126451492,0,0,0,0,0,-0.06640662252902985,0,0,0,0.01660165563225746,0,0,0,0,0,0.2656264901161194,0,-0.1328132450580597,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.01660165563225746,0,-0.03320331126451492,0,0,0,0,0,-0.03320331126451492,0,0,0.03320331126451492,0.11621158570051193,0,0,-0.00830082781612873,0,0,0,0,-0.33203309774398804,0,0,0,0,0,0,0,0,0,0,0,-0.09960993379354477,-0.01660165563225746,0,0.09960993379354477,0,0,-0.06640662252902985,-0.00830082781612873,0,0,0,0,0,0,0,0.1328132450580597,0.03320331126451492,0,0,-0.06640662252902985,0,0,0.01660165563225746,0,0,-0.01660165563225746,0],"text":".include \"common.s\"\n\n.export init_colors\n.export title_bar_colors\n.exportzp screen_bgcolor\n.exportzp screen_fgcolor\n\n.zeropage\n\nscreen_bgcolor:     .res 1\nscreen_fgcolor:     .res 1\n\n.segment \"INITCODE\"\n\n.proc init_colors\n            lda #default_screen_bgcolor\n            sta screen_bgcolor\n            lda #default_screen_fgcolor\n            sta screen_fgcolor\n            rts\n.endproc\n\n.rodata\n\ntitle_bar_colors:\n            .byte 11, 12, 15, 1, 15, 1, 1, 1, 1, 1, 1, 15, 1, 15, 12, 11, chrome_bgcolor\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/colors.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/colors.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/decimal.s","language":"asm","vector":[0,0,0,0,0,0,0,0.018145116046071053,0,0,-0.009072558023035526,0,0.14516092836856842,0,0,-0.07258046418428421,0,0,0.10887069255113602,0,0,-0.036290232092142105,0,0,0.10887069255113602,0.018145116046071053,0,0,-0.018145116046071053,0,0,0.16330604255199432,0,0,0,0,0,0,0,0,-0.036290232092142105,0,0,0,0,0,0,0,0,0,0,0,-0.04536278918385506,0,0,0,0,0,0,0,0,0,0,0,-0.009072558023035526,0,0,0,0,0,-0.10887069255113602,0,0.036290232092142105,0.036290232092142105,0,0,-0.009072558023035526,0,0,0,0,-0.07258046418428421,-0.036290232092142105,0,0,0.16330604255199432,0,-0.036290232092142105,-0.09072557836771011,0,0,0,0,-0.10887069255113602,0,0,0.07258046418428421,0,0,0,0,0,0.036290232092142105,0,0,0,-0.05443534627556801,0,0,0.07258046418428421,0,0,-0.04536278918385506,0,0.14516092836856842,0.05443534627556801,0,-0.036290232092142105,-0.018145116046071053,0,0.07258046418428421,0.06350789964199066,0,0,0,0,0.4717729985713959,0,0,-0.036290232092142105,0,0,0,0,0,-0.036290232092142105,0,0,0,0,0,0,-0.009072558023035526,0,0,0.07258046418428421,0,0,0,0,0.07258046418428421,0,0,0,-0.018145116046071053,0,0,0,0,0,0,0,0.036290232092142105,0,0,0,0,0,0,0.018145116046071053,0,0,0,0,0,0,0,0,-0.036290232092142105,0,0,0,0,-0.036290232092142105,-0.07258046418428421,0,0,0,0,0,-0.05443534627556801,0,0,0.036290232092142105,0,0,-0.018145116046071053,0,0.07258046418428421,0.09979813545942307,0,0,-0.04536278918385506,0,0.07258046418428421,0,0,0,0,0,0,0.07258046418428421,0,0,-0.018145116046071053,0,0,0.036290232092142105,0,0,0,0,0,0.27217674255371094,0,-0.18145115673542023,-0.036290232092142105,0,0,0.027217673137784004,0,0,-0.027217673137784004,0,0,0.027217673137784004,0,-0.036290232092142105,0,0,0,0,0,0,0,0,0.14516092836856842,0.036290232092142105,0,-0.036290232092142105,0,0,0,0,0,0,0,0,0,0.018145116046071053,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.21774138510227203,-0.018145116046071053,0,0,0.009072558023035526,0,-0.036290232092142105,0,0,0,0,0,0,-0.018145116046071053,0,0.036290232092142105,0.036290232092142105,0,0,-0.009072558023035526,0,0,0.036290232092142105,0,0,-0.027217673137784004,0,0,0.018145116046071053,0,0,0,0,0,0.009072558023035526,0,-0.036290232092142105,0,0,0.29032185673713684,0,0,0,-0.09072557836771011,0,0,0.036290232092142105,0,-0.07258046418428421,-0.009072558023035526,0,0,0.018145116046071053,0,0,-0.018145116046071053,0,0,0.11794324964284897,0,0,-0.009072558023035526,0,0,0.07258046418428421,0,0,-0.027217673137784004,0,0,0,0,0,0,0,0,0,0,-0.21774138510227203,0,0,0,0.018145116046071053,0,0,0,0,0,0,0,-0.07258046418428421,0,0,0.32661208510398865,0.009072558023035526,0,-0.18145115673542023,-0.10887069255113602,0,0,0,0,0,-0.018145116046071053,0],"text":".include \"common.s\"\n\n.export build_decimal_table\n.export decimal_table_high\n.export decimal_table_low\n\n.importzp zp0\n.importzp zp1\n\n.segment \"INITCODE\"\n\n.proc build_decimal_table\n            ldx #0\n            sed\n            lda #0\n            sta zp0\n            sta zp1\n      \n@loop:      clc\n            lda zp0\n            sta decimal_table_low, x\n            adc #1\n            sta zp0\n            lda zp1\n            sta decimal_table_high, x\n            adc #0\n            sta zp1\n            inx\n            bne @loop\n            cld\n            rts\n.endproc\n\n.segment \"LOW\"\n\n;; decimal_table_low contains tens and ones digits\n;; decimal_table_high contains hundreds digit (in lower nybble)\n\ndecimal_table_low:      .res 256\ndecimal_table_high:     .res 256\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/decimal.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/decimal.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/host.s","language":"asm","vector":[0,0.005782955791801214,0,-0.09252729266881943,0,0,0,0.023131823167204857,0,0,0,0,0.11565911769866943,0.02891477942466736,0,-0.2544500529766083,-0.023131823167204857,0,0.3932409882545471,0.023131823167204857,0,-0.046263646334409714,-0.046263646334409714,0,0.046263646334409714,0.023131823167204857,0,0,0,0,0.023131823167204857,0.20818641781806946,0,0,-0.017348866909742355,0,0,0.011565911583602428,0,0,-0.017348866909742355,0,0.023131823167204857,0,0,-0.023131823167204857,-0.011565911583602428,0,0,0.011565911583602428,0,-0.023131823167204857,-0.005782955791801214,0,0.046263646334409714,0,0,-0.046263646334409714,-0.052046604454517365,0,0,0.011565911583602428,0,-0.023131823167204857,-0.017348866909742355,0,0.023131823167204857,0.017348866909742355,0,-0.13879093527793884,-0.011565911583602428,0,0.046263646334409714,0.011565911583602428,0,0,0,0,0,0.017348866909742355,0,-0.11565911769866943,-0.017348866909742355,0,0,0.03469773381948471,0,-0.09252729266881943,-0.02891477942466736,0,0,0,0,-0.023131823167204857,-0.011565911583602428,0,0.023131823167204857,0,0,-0.046263646334409714,-0.07517842948436737,0,0.09252729266881943,0.005782955791801214,0,-0.046263646334409714,-0.011565911583602428,0,0,0.08674433827400208,0,-0.023131823167204857,-0.1445738971233368,0,0,0.19662049412727356,0,-0.06939546763896942,-0.023131823167204857,0,0.023131823167204857,0.03469773381948471,0,0,0,0,0.2544500529766083,0.011565911583602428,0,-0.13879093527793884,0,0,0.046263646334409714,0.011565911583602428,0,0,-0.023131823167204857,0,0,0.011565911583602428,0,0,-0.011565911583602428,0,0.023131823167204857,0.10409320890903473,0,0,-0.011565911583602428,0,0.09252729266881943,0.02891477942466736,0,0,-0.023131823167204857,0,0,0,0,-0.046263646334409714,-0.011565911583602428,0,0.023131823167204857,0.017348866909742355,0,0,-0.06939546763896942,0,0,0.023131823167204857,0,-0.06939546763896942,-0.023131823167204857,0,0.023131823167204857,0.005782955791801214,0,0,-0.05782955884933472,0,0,0,0,0,-0.052046604454517365,0,0.11565911769866943,0.005782955791801214,0,-0.09252729266881943,-0.011565911583602428,0,0,0.011565911583602428,0,0,-0.023131823167204857,0,0.09252729266881943,0.06361251324415207,0,0,-0.02891477942466736,0,0,0,0,-0.06939546763896942,-0.017348866909742355,0,0,0,0,-0.06939546763896942,-0.05782955884933472,0,0,0.011565911583602428,0,-0.046263646334409714,0,0,0,0.1561398059129715,0,-0.023131823167204857,-0.1330079883337021,0,0,0.12144207209348679,0,-0.023131823167204857,-0.011565911583602428,0,0,0.011565911583602428,0,-0.06939546763896942,0,0,0.06939546763896942,0.017348866909742355,0,0,0,0,0,0.046263646334409714,0,0,0,0,0.06939546763896942,0.005782955791801214,0,-0.06939546763896942,-0.02891477942466736,0,0,0.011565911583602428,0,-0.06939546763896942,-0.005782955791801214,0,0,0.011565911583602428,0,0,-0.046263646334409714,0,0,0.011565911583602428,0,-0.11565911769866943,-0.005782955791801214,0,0.023131823167204857,0.005782955791801214,0,-0.046263646334409714,-0.03469773381948471,0,0.11565911769866943,0.06939546763896942,0,-0.06939546763896942,-0.046263646334409714,0,0,0,0,0,-0.02891477942466736,0,0.046263646334409714,0.046263646334409714,0,0,-0.023131823167204857,0,0,0,0,0,-0.04048069193959236,0,0.046263646334409714,0.005782955791801214,0,-0.09252729266881943,-0.046263646334409714,0,0,0.023131823167204857,0,0,-0.03469773381948471,0,0.4163728356361389,0,0,0,-0.017348866909742355,0,0.023131823167204857,0,0,0,-0.02891477942466736,0,0,0.005782955791801214,0,0,-0.03469773381948471,0,0.023131823167204857,0.09831024706363678,0,0,-0.03469773381948471,0,0,0.011565911583602428,0,-0.09252729266881943,0,0,0.023131823167204857,0.03469773381948471,0,0,-0.03469773381948471,0,0,0.005782955791801214,0,-0.023131823167204857,-0.03469773381948471,0,0.023131823167204857,0.023131823167204857,0,0,0,0,0,0,0,0,-0.06939546763896942,0,0.06939546763896942,0.017348866909742355,0,-0.023131823167204857,-0.023131823167204857,0,0,0.05782955884933472,0,-0.023131823167204857,-0.052046604454517365,0],"text":".include \"common.s\"\n\n.export check_host_model\n.exportzp host_model\n\n.zeropage\n\n;; $01: 262 rasterlines and 64 cycles per line [NTSC: 6567R56A VIC] (OLD NTSC)\n;; $02: 263 rasterlines and 65 cycles per line [NTSC: 6567R8 VIC]\n;; $03: 312 rasterlines and 63 cycles per line [PAL: 6569 VIC]\n;; $04: 312 rasterlines and 65 cycles per line [Drean PAL-N: 6572 VIC]\nhost_model:         .res 1\n\n.code\n\n;;  http://codebase64.org/doku.php?id=base:detect_pal_ntsc\n;;  (Sokrates' variant)\n.proc check_host_model\n            ldx #$00\n@0:         lda $d012\n@1:         cmp $d012\n            beq @1\n            bmi @0\n            and #$03\n            cmp #$03\n            bne @done       ; done for ntsc\n            tay\n@count_cycles:\n            inx\n            lda $d012\n            bpl @count_cycles\n            cpx #$5e        ; vice values: pal-n=$6c pal=$50\n                            ; so choose middle value $5e for check\n            bcc @is_pal\n            iny             ; is pal-n\n@is_pal:\n            tya\n@done:\n            sta host_model\n            rts\n.endproc\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/host.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/host.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/info.s","language":"asm","vector":[0,0,0,0,0,0,0,0,0,-0.05711372569203377,0,0,0.05711372569203377,0,0,-0.05711372569203377,-0.014278431423008442,0,0.11422745138406754,0.028556862846016884,0,0,-0.11422745138406754,0,0,0,0,0,0,0,0.05711372569203377,0,0,0,0,0,0,0,0,0,-0.028556862846016884,0,0,0.014278431423008442,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.028556862846016884,0,0.05711372569203377,0,0,0,-0.014278431423008442,0,0,0,0,0,0,0,0,0.028556862846016884,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11422745138406754,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1713411808013916,0,0,-0.05711372569203377,-0.1713411808013916,0,0,0.0428352952003479,0,0,-0.028556862846016884,0,0,0.05711372569203377,0,0,0,0,0,0,0,0,0,0,0.3997960686683655,0.028556862846016884,0,-0.11422745138406754,0,0,0,0.014278431423008442,0,0,-0.05711372569203377,0,0,0,0,0,0,0,0.05711372569203377,0,0,0,0,0,0.28556862473487854,0,0,0,-0.014278431423008442,0,0,0.028556862846016884,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.014278431423008442,0,0,0,0,0,0,0,0,0,0,0,-0.05711372569203377,0,0,0,0,-0.05711372569203377,0,0,0,0,0,0,0,0,0,0.0856705904006958,0,0,-0.028556862846016884,0,0,0,0,0,0,0,0,0,0,0,0,0,0.05711372569203377,0,0,0,-0.014278431423008442,0,0,0.2141764611005783,0,0,-0.07139215618371964,0,0,0.028556862846016884,0,0,0,0,0,0,0,-0.05711372569203377,0,0,0,0.0428352952003479,0,0,0,0,0.11422745138406754,0.14278431236743927,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.014278431423008442,0,0,0,0,0,0,0,-0.5711372494697571,0,0,0.05711372569203377,0,0,0,-0.028556862846016884,0,0,0,0,0,0,0,0,0,0,0,-0.028556862846016884,0,0,0,0,0,0,0,0.05711372569203377,0,0,-0.22845490276813507,0,0,0,0.07139215618371964,0,0,-0.014278431423008442,0,0,0,0,0,0,0,0,0,0,-0.05711372569203377,0,0,0,0,0,0,-0.028556862846016884,0,0,0.09994901716709137,0,0,-0.028556862846016884,0,0,0.05711372569203377,0,-0.05711372569203377,0,0,0,0,0,0,0,0,0,0.014278431423008442,0,0,0,0,0,0.07139215618371964,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.28556862473487854,0,0,0.028556862846016884,0,0,0,0],"text":".segment \"INFOHDR\"\n\n.asciiz \"c64 chip 8 emulator\"\n.asciiz \"version 1.0\"\n.asciiz \"(c) 2018 kevin schuetz\"\n.asciiz \"source code: https://github.com/kschuetz/c64-chip8\"\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/info.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/info.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/keymaps.s","language":"asm","vector":[0.006211397238075733,0.006211397238075733,0,0,-0.009317096322774887,0,0,0.0015528493095189333,0,-0.018634192645549774,-0.009317096322774887,0,0,0,0,-0.018634192645549774,-0.009317096322774887,0,0.16770772635936737,0.013975643552839756,0,-0.012422794476151466,-0.0015528493095189333,0,0.13043934106826782,0.0015528493095189333,0,-0.012422794476151466,-0.0046585481613874435,0,0.018634192645549774,0.41461077332496643,0,0,-0.0015528493095189333,0,0.03105698712170124,0.010869945399463177,0,0,0,0,0.018634192645549774,0.009317096322774887,0,-0.012422794476151466,-0.05900827422738075,0,0.018634192645549774,0.006211397238075733,0,-0.024845588952302933,-0.006211397238075733,0,0.012422794476151466,0.0031056986190378666,0,0,-0.006211397238075733,0,0,0.0031056986190378666,0,-0.012422794476151466,-0.0015528493095189333,0,0,0.009317096322774887,0,0,-0.021739890798926353,0,0.006211397238075733,0.006211397238075733,0,0,-0.0031056986190378666,0,0.006211397238075733,0.0015528493095189333,0,-0.018634192645549774,-0.021739890798926353,0,0.08695956319570541,0.021739890798926353,0,0,-0.01552849356085062,0,0.006211397238075733,0,0,0,-0.0031056986190378666,0,0,0.0031056986190378666,0,-0.03105698712170124,-0.0046585481613874435,0,0,0,0,0,-0.012422794476151466,0,0,0,0,-0.012422794476151466,-0.009317096322774887,0,0.006211397238075733,0.08385386317968369,0,-0.012422794476151466,-0.009317096322774887,0,0.006211397238075733,0.06521967053413391,0,-0.006211397238075733,-0.006211397238075733,0,0.24845589697360992,0.009317096322774887,0,-0.018634192645549774,-0.0031056986190378666,0,0,0.021739890798926353,0,0,0,0,0.006211397238075733,0.009317096322774887,0,-0.012422794476151466,-0.006211397238075733,0,0.006211397238075733,0.17857767641544342,0,-0.018634192645549774,-0.012422794476151466,0,0.03726838529109955,0.009317096322774887,0,-0.006211397238075733,0,0,0,0.0031056986190378666,0,0,-0.03105698712170124,0,0.024845588952302933,0.0015528493095189333,0,-0.018634192645549774,-0.0015528493095189333,0,0,0.0031056986190378666,0,-0.09317095577716827,-0.0031056986190378666,0,0.024845588952302933,0.0031056986190378666,0,-0.012422794476151466,-0.009317096322774887,0,0.006211397238075733,0.04347978159785271,0,-0.03726838529109955,-0.009317096322774887,0,0,0.0031056986190378666,0,-0.012422794476151466,0,0,0.006211397238075733,0,0,-0.006211397238075733,-0.021739890798926353,0,0.006211397238075733,0,0,-0.018634192645549774,-0.00776424678042531,0,0.30435845255851746,0,0,-0.006211397238075733,-0.006211397238075733,0,0.018634192645549774,0.0046585481613874435,0,0,-0.006211397238075733,0,0.012422794476151466,0.0031056986190378666,0,-0.03726838529109955,-0.00776424678042531,0,0.012422794476151466,0.12422794848680496,0,-0.012422794476151466,-0.013975643552839756,0,0.012422794476151466,0.04192693158984184,0,0,-0.0031056986190378666,0,0.012422794476151466,0.035715535283088684,0,-0.006211397238075733,-0.009317096322774887,0,0.03726838529109955,0.00776424678042531,0,-0.012422794476151466,-0.009317096322774887,0,0.024845588952302933,0.026398438960313797,0,-0.012422794476151466,-0.0031056986190378666,0,0.006211397238075733,0.0046585481613874435,0,-0.03726838529109955,-0.0031056986190378666,0,0.08695956319570541,0.01708134263753891,0,0,-0.01552849356085062,0,0,0.0031056986190378666,0,-0.012422794476151466,-0.04658547788858414,0,0,0.012422794476151466,0,-0.018634192645549774,-0.009317096322774887,0,0,0.0031056986190378666,0,-0.012422794476151466,-0.018634192645549774,0,0,0.0015528493095189333,0,0,-0.006211397238075733,0,0,0.0046585481613874435,0,-0.012422794476151466,-0.00776424678042531,0,0,0.024845588952302933,0,0,-0.009317096322774887,0,0,0.1537320762872696,0,-0.012422794476151466,-0.0031056986190378666,0,0.024845588952302933,0.009317096322774887,0,0,-0.00776424678042531,0,0,0.006211397238075733,0,0,-0.018634192645549774,0,0.6770423054695129,0.006211397238075733,0,0,-0.009317096322774887,0,0.012422794476151466,0.00776424678042531,0,0,-0.0031056986190378666,0,0.012422794476151466,0.00776424678042531,0,-0.09938235580921173,-0.0046585481613874435,0,0.006211397238075733,0.08074816316366196,0,-0.006211397238075733,-0.010869945399463177,0,0,0.012422794476151466,0,-0.012422794476151466,-0.006211397238075733,0,0,0.0046585481613874435,0,0,-0.021739890798926353,0,0,0.04503263160586357,0,-0.03726838529109955,-0.0046585481613874435,0,0,0.009317096322774887,0,0,-0.00776424678042531,0,0,0,0,-0.024845588952302933,-0.009317096322774887,0,0,0.006211397238075733,0,-0.03105698712170124,-0.010869945399463177,0,0,0,0,0,-0.02329273894429207,0],"text":".export blitz_enabled_keys: absolute\n.export brix_enabled_keys: absolute\n.export connect4_enabled_keys: absolute\n.export default_keymap\n.export delay_time_test_enabled_keys\n.export hidden_enabled_keys\n.export merlin_enabled_keys\n.export missile_enabled_keys\n.export nim_enabled_keys\n.export slide_enabled_keys\n.export space_invaders_enabled_keys: absolute\n.export tank_enabled_keys\n.export tank_keymap\n.export tetris_enabled_keys: absolute\n.export tetris_keymap\n.export tictac_enabled_keys\n.export tictac_keymap\n.export ufo_enabled_keys: absolute\n.exportzp active_keymap\n\n.zeropage\n\nactive_keymap:  .res 2\n\n;; Keymaps:\n;; physical_key_to_test = keymap[logical_key]\n;; if no physical key for a logical key, map to $ff\n\n.rodata\n\n;; The default layout of the Chip 8 keyboard:\n;;\n;; 1 2 3 C\n;; 4 5 6 D\n;; 7 8 9 E\n;; A 0 B F\n;;\n;; Physical layout:\n;;\n;; 0 1 2 3\n;; 4 5 6 7\n;; 8 9 A B\n;; C D E F\n\ndefault_keymap:\n            .byte $d, $0, $1, $2\n            .byte $4, $5, $6, $8\n            .byte $9, $a, $c, $e\n            .byte $3, $7, $b, $f\n\n;; Tank logical keys:\n;; left: 4\n;; right: 6\n;; up: 8\n;; down: 2\n;; fire: 5\n\ntank_keymap:\n            .byte $ff, $ff, $9, $ff\n            .byte $4, $5, $6, $ff\n            .byte $1, $ff, $ff, $ff\n            .byte $ff, $ff, $ff, $ff\n\n;                    FEDCBA9876543210\ntank_enabled_keys = %0000001001110010\n\n;; Tetris logical keys:\n;; left: 5\n;; right: 6\n;; rotate: 4\n;; drop:   7\n\ntetris_keymap:\n            .byte $ff, $ff, $ff, $ff\n            .byte $5, $4, $6, $1\n            .byte $ff, $ff, $ff, $ff\n            .byte $ff, $ff, $ff, $ff\n\n;                      FEDCBA9876543210\ntetris_enabled_keys = %0000000001110010\n\n;; Tic Tac\n;; 23Cx\n;; 456x\n;; D78x\n;; xxxx\n\ntictac_keymap:\n            .byte $ff, $0, $1, $2\n            .byte $4, $5, $6, $8\n            .byte $9, $a, $ff, $ff\n            .byte $ff, $ff, $ff, $ff\n\n;                      FEDCBA9876543210\ntictac_enabled_keys = %0000011101110111\n\n;                        FEDCBA9876543210\nconnect4_enabled_keys = %0000000001110000\n\n;                      FEDCBA9876543210\nhidden_enabled_keys = %0000001001110010\n\n;                     FEDCBA9876543210\nslide_enabled_keys = %0010000000000000\n\n;                              FEDCBA9876543210\nspace_invaders_enabled_keys = %0000000001110000\n\n;                    FEDCBA9876543210\nbrix_enabled_keys = %0000000001010000\n\n;                     FEDCBA9876543210\nblitz_enabled_keys = %0000000000100000\n\n;                               FEDCBA9876543210\ndelay_time_test_enabled_keys = %0000001000100010\n\n;                   FEDCBA9876543210\nufo_enabled_keys = %0000000001110000\n\n;                      FEDCBA9876543210\nmerlin_enabled_keys = %0000001100110000\n\n;                       FEDCBA9876543210\nmissile_enabled_keys = %0000001000000000\n\n;                   FEDCBA9876543210\nnim_enabled_keys = %1000000000000111\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/keymaps.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/keymaps.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/registers.s","language":"asm","vector":[0,0.006582759320735931,0,0,-0.013165518641471863,0,0,0,0,0,-0.013165518641471863,0,0.026331037282943726,0.013165518641471863,0,-0.026331037282943726,0,0,0.30280691385269165,0.013165518641471863,0,-0.06582759320735931,0,0,0.013165518641471863,0.013165518641471863,0,0,-0.013165518641471863,0,0.013165518641471863,0.019748277962207794,0,0,0,0,0,0,0,0,-0.013165518641471863,0,0,0.0032913796603679657,0,-0.026331037282943726,0,0,0,0.019748277962207794,0,0,0,0,0,0,0,0,-0.11848966777324677,0,0,0.013165518641471863,0,0,0,0,0,0,0,0,-0.15140345692634583,0,0.289641410112381,0.0032913796603679657,0,0,-0.013165518641471863,0,0.026331037282943726,0.006582759320735931,0,0,0,0,0,0.013165518641471863,0,-0.026331037282943726,-0.019748277962207794,0,0,0,0,-0.026331037282943726,0,0,0,0,0,0,0,0,0.026331037282943726,0,0,0,-0.006582759320735931,0,0,0.013165518641471863,0,0,-0.026331037282943726,0,0,0.15140345692634583,0,0,-0.03949655592441559,0,0,0.006582759320735931,0,0,-0.006582759320735931,0,0.6319448947906494,0.013165518641471863,0,-0.013165518641471863,0,0,0,0.0032913796603679657,0,-0.026331037282943726,0,0,0.026331037282943726,0.006582759320735931,0,-0.026331037282943726,-0.019748277962207794,0,0,0.006582759320735931,0,-0.013165518641471863,0,0,0,0,0,0,-0.006582759320735931,0,0,0,0,0,0,0,0.026331037282943726,0.009874138981103897,0,-0.026331037282943726,0,0,0,0.1448207050561905,0,-0.013165518641471863,-0.05924483388662338,0,0.026331037282943726,0.019748277962207794,0,0,0,0,0,0,0,0,-0.08886724710464478,0,0,0,0,0,-0.019748277962207794,0,0.026331037282943726,0,0,0,0,0,0,0.019748277962207794,0,0,-0.0032913796603679657,0,0.026331037282943726,0,0,0,0,0,0,0,0,0,0,0,0.013165518641471863,0,0,0,0,0,0,0.32255521416664124,0,0,-0.013165518641471863,0,0,0.07570172846317291,0,0,-0.02962241694331169,0,0,0.01645689830183983,0,0,-0.013165518641471863,0,0,0.0032913796603679657,0,0,-0.006582759320735931,0,0.013165518641471863,0,0,0,0,0,0.026331037282943726,0,0,0,-0.006582759320735931,0,0,0.013165518641471863,0,-0.05266207456588745,-0.013165518641471863,0,0,0,0,0,-0.006582759320735931,0,0,0.013165518641471863,0,0,0,0,0,0,0,-0.026331037282943726,0,0,0,0.07241035252809525,0,-0.05266207456588745,0,0,0,0.019748277962207794,0,-0.026331037282943726,0,0,0,0,0,-0.026331037282943726,-0.006582759320735931,0,0.026331037282943726,0.013165518641471863,0,0,-0.006582759320735931,0,0.013165518641471863,0,0,0,0,0,0.026331037282943726,0.013165518641471863,0,-0.026331037282943726,0,0,0.026331037282943726,0,0,0,0,0,0,0,0,-0.026331037282943726,0,0,0,0,0,0,0,0,0.03949655592441559,0.15798622369766235,0,0,-0.0032913796603679657,0,0,0.006582759320735931,0,-0.23697933554649353,-0.006582759320735931,0,0.026331037282943726,0.019748277962207794,0,0,-0.006582759320735931,0,0,0,0,-0.30280691385269165,-0.02962241694331169,0,0,0,0,-0.026331037282943726,0,0,0,0,0,0,0,0,0.026331037282943726,0.006582759320735931,0,-0.013165518641471863,-0.019748277962207794,0,0,0,0,0,-0.02962241694331169,0],"text":".include \"common.s\"\n\n.export clear_registers\n.exportzp registers\n.exportzp reg_v\n.exportzp reg_pc\n.exportzp reg_i\n.exportzp reg_sp\n.exportzp reg_v0\n.exportzp reg_v1\n.exportzp reg_v2\n.exportzp reg_v3\n.exportzp reg_v4\n.exportzp reg_v5\n.exportzp reg_v6\n.exportzp reg_v7\n.exportzp reg_v8\n.exportzp reg_v9\n.exportzp reg_va\n.exportzp reg_vb\n.exportzp reg_vc\n.exportzp reg_vd\n.exportzp reg_ve\n.exportzp reg_vf\n\n.import program_start\n\n.zeropage\n\nregisters:\nreg_v:\nreg_v0:         .res 1\nreg_v1:         .res 1\nreg_v2:         .res 1\nreg_v3:         .res 1\nreg_v4:         .res 1\nreg_v5:         .res 1\nreg_v6:         .res 1\nreg_v7:         .res 1\nreg_v8:         .res 1\nreg_v9:         .res 1\nreg_va:         .res 1\nreg_vb:         .res 1\nreg_vc:         .res 1\nreg_vd:         .res 1\nreg_ve:         .res 1\nreg_vf:         .res 1\nreg_pc:         .res 2\nreg_i:          .res 2\nreg_sp:         .res 1\nregisters_end:\n\n.code\n\n.proc clear_registers\n                lda #0\n                ldy #(registers_end - registers - 1)\n@loop:          sta registers, y\n                dey\n                bpl @loop\n\n                store16 reg_pc, program_start\n                rts\n.endproc\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/registers.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/registers.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/reset.s","language":"asm","vector":[0,0.014938273467123508,0,0,-0.02240741066634655,0,0.029876546934247017,0,0,-0.029876546934247017,-0.007469136733561754,0,0.11950618773698807,0,0,0,-0.007469136733561754,0,0,0,0,-0.029876546934247017,0,0,0.059753093868494034,0.014938273467123508,0,0,0,0,0.029876546934247017,0.12697532773017883,0,0,-0.029876546934247017,0,0,0.007469136733561754,0,0,-0.007469136733561754,0,0,0.11950618773698807,0,-0.029876546934247017,-0.007469136733561754,0,0,0,0,0,0,0,0.029876546934247017,0,0,-0.20913583040237427,0,0,0,0,0,0,-0.014938273467123508,0,0,0.007469136733561754,0,-0.059753093868494034,-0.029876546934247017,0,0.029876546934247017,0.014938273467123508,0,0,-0.03734568506479263,0,0.029876546934247017,0,0,-0.0896296426653862,-0.007469136733561754,0,0.059753093868494034,0.0448148213326931,0,-0.059753093868494034,-0.029876546934247017,0,0,0,0,0,-0.014938273467123508,0,0.059753093868494034,0,0,0,-0.014938273467123508,0,0.029876546934247017,0.014938273467123508,0,-0.029876546934247017,-0.0448148213326931,0,0,0.059753093868494034,0,0,-0.007469136733561754,0,0,0.007469136733561754,0,0,-0.014938273467123508,0,0,0.029876546934247017,0,0,0,0,0.5975309610366821,0.014938273467123508,0,0,0,0,0,0,0,-0.059753093868494034,0,0,0,0.007469136733561754,0,-0.029876546934247017,-0.014938273467123508,0,0,0.059753093868494034,0,0,-0.014938273467123508,0,0,0.014938273467123508,0,0,-0.10456791520118713,0,0,0.014938273467123508,0,-0.11950618773698807,0,0,0,0,0,-0.059753093868494034,-0.029876546934247017,0,0,0.014938273467123508,0,0,0,0,0,0.014938273467123508,0,-0.0896296426653862,-0.05228395760059357,0,0,0.029876546934247017,0,-0.029876546934247017,-0.03734568506479263,0,0,0,0,-0.029876546934247017,-0.014938273467123508,0,0,0.029876546934247017,0,0,0,0,0,0.03734568506479263,0,0,-0.029876546934247017,0,0.029876546934247017,0,0,0,0,0,0.029876546934247017,0,0,-0.029876546934247017,0,0,0.3585185706615448,0.007469136733561754,0,-0.029876546934247017,-0.007469136733561754,0,0,0.32864201068878174,0,0,0,0,0,0,0,0,-0.03734568506479263,0,0,0.014938273467123508,0,0,-0.014938273467123508,0,0.029876546934247017,0.007469136733561754,0,-0.059753093868494034,0,0,0.059753093868494034,0,0,-0.029876546934247017,0,0,0,0,0,-0.029876546934247017,-0.0672222301363945,0,0,0,0,0,-0.029876546934247017,0,0,0.007469136733561754,0,-0.059753093868494034,-0.05228395760059357,0,0,0,0,-0.059753093868494034,-0.0448148213326931,0,0,0,0,-0.11950618773698807,-0.029876546934247017,0,0,0.007469136733561754,0,-0.029876546934247017,-0.014938273467123508,0,0.029876546934247017,0.007469136733561754,0,0,-0.02240741066634655,0,0,0.014938273467123508,0,0,-0.014938273467123508,0,0,0.014938273467123508,0,0,0,0,0,0.029876546934247017,0,0,-0.014938273467123508,0,0.029876546934247017,0.18672841787338257,0,0,-0.02240741066634655,0,0.23901237547397614,0,0,-0.059753093868494034,0,0,0,0,0,0,0,0,0.059753093868494034,0,0,0,0,0,0,0.16432100534439087,0,0,-0.029876546934247017,0,0,0.029876546934247017,0,0,-0.029876546934247017,0,0,0,0,-0.029876546934247017,-0.02240741066634655,0,0,0,0,-0.029876546934247017,0,0,0,0,0,-0.059753093868494034,-0.029876546934247017,0,0,0,0,0,-0.059753093868494034,0,0.0896296426653862,0,0,-0.059753093868494034,-0.07469137012958527,0,0,0,0,0,-0.014938273467123508,0],"text":".include \"common.s\"\n\n.export reset\n\n.import active_bundle\n.import clear_ram\n.import clear_registers\n.import clear_screen\n.import default_keymap\n.import display_rom_title\n.import load_bundled_rom\n.import load_font_set\n.import sync_key_delay_indicator\n.import sync_paused_indicator\n.import test_draw\n.importzp active_keymap\n.importzp paused\n\n;; Loads a ROM and resets the guest machine state.\n;; Once this is called, code and data in the INITCODE and INITDATA segments are no longer usable.\n;;\n;; A - index of ROM to load\n.proc reset\n            pha\n            jsr clear_ram\n            jsr load_font_set\n            jsr clear_screen\n            lda #0\n            sta paused\n\n            pla\n            tay\n            jsr load_bundled_rom\n            lda active_bundle\n            jsr display_rom_title\n            jsr sync_key_delay_indicator\n            jsr sync_paused_indicator\n\n            jmp clear_registers\n.endproc\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/reset.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/reset.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/util.s","language":"asm","vector":[0,0.009981219656765461,0,0,-0.009981219656765461,0,0,0.03327073156833649,0,0,-0.00665414659306407,0,0.05323317274451256,0.01330829318612814,0,-0.22624097764492035,-0.00665414659306407,0,0.14639122784137726,0.04990609735250473,0,-0.02661658637225628,0,0,0.02661658637225628,0.0232895128428936,0,-0.02661658637225628,-0.00665414659306407,0,0.01330829318612814,0.25951170921325684,0,-0.01330829318612814,-0.036597806960344315,0,0,0.029943659901618958,0,0,-0.00665414659306407,0,0,0.00665414659306407,0,0,-0.009981219656765461,0,0,0.003327073296532035,0,-0.02661658637225628,-0.00665414659306407,0,0,0,0,-0.02661658637225628,-0.14306415617465973,0,0.02661658637225628,0.019962439313530922,0,0,-0.009981219656765461,0,0.01330829318612814,0.009981219656765461,0,0,0,0,0.02661658637225628,0.00665414659306407,0,0,-0.05323317274451256,0,0,0.003327073296532035,0,-0.02661658637225628,0,0,0.01330829318612814,0.059887319803237915,0,-0.1730078011751175,-0.11977463960647583,0,0.05323317274451256,0,0,-0.01330829318612814,-0.0232895128428936,0,0.07984975725412369,0.00665414659306407,0,0,-0.016635365784168243,0,0.02661658637225628,0.003327073296532035,0,0,-0.01330829318612814,0,0.02661658637225628,0.029943659901618958,0,0,-0.11977463960647583,0,0.039924878627061844,0.07319561392068863,0,-0.02661658637225628,-0.01330829318612814,0,0,0.029943659901618958,0,-0.01330829318612814,-0.016635365784168243,0,0.279474139213562,0.01330829318612814,0,-0.11977463960647583,-0.00665414659306407,0,0.02661658637225628,0.0232895128428936,0,0,0,0,0,0,0,-0.01330829318612814,-0.003327073296532035,0,0,0.11977463960647583,0,-0.02661658637225628,-0.019962439313530922,0,0.0931580513715744,0,0,0,-0.016635365784168243,0,0,0.016635365784168243,0,0,-0.003327073296532035,0,0.10646634548902512,0.00665414659306407,0,0,-0.003327073296532035,0,0.02661658637225628,0.01330829318612814,0,-0.15969951450824738,-0.06654146313667297,0,0.039924878627061844,0,0,-0.039924878627061844,-0.01330829318612814,0,0,0.009981219656765461,0,0,-0.08650390058755875,0,0,0.02661658637225628,0,-0.02661658637225628,-0.03327073156833649,0,0.01330829318612814,0.039924878627061844,0,0,0,0,0.0931580513715744,0.039924878627061844,0,0,-0.059887319803237915,0,0.07984975725412369,0.01330829318612814,0,-0.0931580513715744,0,0,0.11977463960647583,0.019962439313530922,0,0,-0.01330829318612814,0,0,0,0,-0.01330829318612814,-0.00665414659306407,0,0.01330829318612814,0.15304537117481232,0,0,-0.1164475604891777,0,0,0.04990609735250473,0,-0.039924878627061844,-0.00665414659306407,0,0.07984975725412369,0.00665414659306407,0,-0.039924878627061844,-0.01330829318612814,0,0.01330829318612814,0.003327073296532035,0,0,-0.016635365784168243,0,0.02661658637225628,0.0465790256857872,0,0,0,0,0.01330829318612814,0,0,0,0,0,0.02661658637225628,0.05323317274451256,0,0,-0.00665414659306407,0,0,0.01330829318612814,0,-0.0931580513715744,-0.08650390058755875,0,0.02661658637225628,0.02661658637225628,0,-0.06654146313667297,-0.019962439313530922,0,0.01330829318612814,0.003327073296532035,0,-0.05323317274451256,0,0,0.01330829318612814,0.00665414659306407,0,-0.02661658637225628,-0.01330829318612814,0,0,0.00665414659306407,0,0,-0.00665414659306407,0,0.06654146313667297,0.04990609735250473,0,-0.01330829318612814,-0.04325195029377937,0,0.02661658637225628,0.05323317274451256,0,0,-0.04990609735250473,0,0.0931580513715744,0.07984975725412369,0,0,0,0,0,0.00665414659306407,0,-0.01330829318612814,-0.00665414659306407,0,0.4790985584259033,0.01330829318612814,0,-0.02661658637225628,0,0,0,0.009981219656765461,0,-0.01330829318612814,-0.02661658637225628,0,0.01330829318612814,0.039924878627061844,0,-0.01330829318612814,-0.0232895128428936,0,0,0.07652268558740616,0,-0.01330829318612814,-0.029943659901618958,0,0,0.019962439313530922,0,-0.2661658525466919,0,0,0,0.00665414659306407,0,0,-0.003327073296532035,0,0.01330829318612814,0.01330829318612814,0,0,-0.00665414659306407,0,0,0.0232895128428936,0,-0.10646634548902512,-0.0465790256857872,0,0,0.01330829318612814,0,0,-0.03327073156833649,0,0.10646634548902512,0.03327073156833649,0,-0.23954927921295166,-0.02661658637225628,0,0,0.01330829318612814,0,0,-0.05323317274451256,0],"text":".include \"common.s\"\n\n.export fill\n.export move_up\n\n.importzp zp0\n.importzp zp1\n.importzp zp2\n.importzp zp3\n.importzp zp4\n.importzp zp5\n\n.code\n \n;;  Move memory up\n;;  Adapted from http://www.6502.org/source/general/memory_move.html by Bruce Clark\n;;\n;;  zp0:zp1 = source start address\n;;  zp2:zp3 = destination start address\n;;  zp4:zp5 = number of bytes to move\n.proc move_up\n\nmove_from = zp0\nmove_to = zp2\nmove_size = zp4\n\n            ldx move_size + 1   ; the last byte must be moved first\n            clc                 ; start at the final pages of FROM and TO\n            txa\n            adc move_from+1\n            sta move_from+1\n            clc\n            txa\n            adc move_to+1\n            sta move_to+1\n            inx                 ; allows the use of BNE after the DEX below\n            ldy move_size\n            beq @3\n            dey                 ; move bytes on the last page first\n            beq @2\n@1:         lda (move_from), y\n            sta (move_to), y\n            dey\n            bne @1\n@2:         lda (move_from), y  ; handle Y = 0 separately\n            sta (move_to), y\n@3:         dey\n            dec move_from + 1   ; move the next page (if any)\n            dec move_to + 1\n            dex\n            bne @1\n            rts\n.endproc\n\n;; Fill\n;;\n;; length must be > 0\n;; zp0:zp1 = dest address\n;; X = (length - 1) high\n;; Y = (length - 1) low\n;; A = fill value\n.proc fill\n            cpx #0\n            beq @last_page\n            sty zp2\n            ldy #0\n@1:         sta (zp0), y\n            iny\n            bne @1\n            inc zp1\n            dex\n            bne @1\n@2:         ldy zp2\n@last_page:\n            sta (zp0), y\n            dey\n            cpy #$ff\n            bne @last_page\n            rts\n.endproc\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/util.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/util.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/lacerto_c64_users_guide_examples/include/colors.s","language":"asm","vector":[0,0,0,0,0,0,0.05013728141784668,0,0,0,-0.03760296106338501,0,0,0,0,0,0,0,0,0,0,0,-0.03760296106338501,0,0.05013728141784668,0.02506864070892334,0,0,0,0,0.05013728141784668,0.05013728141784668,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.01253432035446167,0,0.05013728141784668,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.01253432035446167,0,0,-0.01253432035446167,0,0,0.01253432035446167,0,0,0,0,0.05013728141784668,0,0,0,0,0,0.05013728141784668,0.01253432035446167,0,0,-0.02506864070892334,0,0,0.03760296106338501,0,-0.10027456283569336,-0.06267160177230835,0,0,0,0,0,0,0,0.10027456283569336,0.03760296106338501,0,0,0,0,0,0,0,0,0,0,0.05013728141784668,0,0,0,0,0,0,0.02506864070892334,0,0,-0.01253432035446167,0,0,0.02506864070892334,0,-0.05013728141784668,0,0,0,0,0,0,-0.01253432035446167,0,0,0.01253432035446167,0,0,0,0,0,0.05013728141784668,0,0,0,0,0.05013728141784668,0,0,-0.05013728141784668,0,0,0,0,0,-0.10027456283569336,0,0,0,0,0,0,0,0,0,0,0,-0.8021965026855469,0,0,0,0.02506864070892334,0,0,0,0,0,0.02506864070892334,0,-0.05013728141784668,0,0,0,0,0,0,-0.05013728141784668,0,0,0,0,-0.05013728141784668,0,0,0,0.05013728141784668,0,0,-0.01253432035446167,0,0,0.01253432035446167,0,0,-0.02506864070892334,0,0,0.02506864070892334,0,0,0,0,0,0.01253432035446167,0,-0.05013728141784668,0,0,0,0,0,0,-0.02506864070892334,0,0,0,0,0,0,0,0,0.01253432035446167,0,0,0,0,0.05013728141784668,0.01253432035446167,0,-0.05013728141784668,0,0,0.05013728141784668,0.02506864070892334,0,0,-0.02506864070892334,0,0,0,0,0,-0.05013728141784668,0,0.05013728141784668,0.01253432035446167,0,0,0,0,0.05013728141784668,0,0,-0.05013728141784668,-0.40109825134277344,0,0,0,0,0,0,0,0.05013728141784668,0,0,0,-0.02506864070892334,0,0,0,0,0,0,0,0,0.01253432035446167,0,0,-0.02506864070892334,0,0,0.01253432035446167,0,-0.05013728141784668,0,0,0,0,0,0,-0.02506864070892334,0,0,0,0,-0.05013728141784668,0,0,0.05013728141784668,0.02506864070892334,0,0,-0.02506864070892334,0,0.10027456283569336,0,0,0,0,0,0,0.01253432035446167,0,0,0,0,0,0,0,0,0,0,0,0.02506864070892334,0,0,-0.03760296106338501,0,0,0.02506864070892334,0,0,0,0,0,0,0,0,0,0,0,0.02506864070892334,0,0,0,0,0,0.03760296106338501,0,0,-0.03760296106338501,0,0,0,0,0,-0.02506864070892334,0,0,0.02506864070892334,0,-0.05013728141784668,0,0,0.05013728141784668,0,0,-0.10027456283569336,-0.20054912567138672,0],"text":"; Color constants\n\nblack       = $00\nwhite       = $01\nred         = $02 \ncyan        = $03\npurple      = $04\ngreen       = $05\nblue        = $06\nyellow      = $07\norange      = $08\nbrown       = $09\nlightred    = $0a\ndarkgray    = $0b\nmediumgray  = $0c\nlightgreen  = $0d\nlightblue   = $0e\nlightgray   = $0f\n","sourcePath":"external/github.com/lacerto_c64_users_guide_examples/include/colors.s","sourceMtimeMs":1620573868000,"sourceUrl":"https://github.com/lacerto/c64_users_guide_examples/blob/master/include/colors.s","sourceRepoUrl":"https://github.com/lacerto/c64_users_guide_examples","license":"UNKNOWN","attribution":"Source: lacerto/c64_users_guide_examples (License unknown)"},{"name":"github.com/nealvis_c64_samples_kick/sprites_display/space_sprites.txt","language":"asm","vector":[0,0.003353449050337076,0,0,-0.005030173808336258,0,0,0.003353449050337076,0,0,-0.07880605757236481,0,0,0,0,-0.006706898100674152,0,0,0.040241390466690063,0.010060347616672516,0,-0.040241390466690063,-0.003353449050337076,0,0,0.006706898100674152,0,0,0,0,0.006706898100674152,0.2531854212284088,0,0,-0.006706898100674152,0,0,0.003353449050337076,0,-0.013413796201348305,0,0,0,0.005030173808336258,0,-0.013413796201348305,-0.05365518480539322,0,0.020120695233345032,0.003353449050337076,0,0,-0.003353449050337076,0,0,0.001676724525168538,0,0,-0.008383623324334621,0,0,0.02347414381802082,0,-0.006706898100674152,0,0,0,0,0,0,-0.02347414381802082,0,0,0,0,0,-0.003353449050337076,0,0.006706898100674152,0,0,0,-0.005030173808336258,0,0,0,0,-0.040241390466690063,-0.005030173808336258,0,0,0,0,0,0,0,0,0,0,0,-0.003353449050337076,0,0.033534493297338486,0.003353449050337076,0,0,-0.001676724525168538,0,0,0,0,-0.006706898100674152,-0.003353449050337076,0,0.060362085700035095,0.020120695233345032,0,0,-0.02179741859436035,0,0,0.001676724525168538,0,0,-0.003353449050337076,0,0.10731036961078644,0.003353449050337076,0,-0.07377588003873825,0,0,0.033534493297338486,0.005030173808336258,0,0,-0.008383623324334621,0,0,0.003353449050337076,0,-0.006706898100674152,-0.006706898100674152,0,0.006706898100674152,0.04191811382770538,0,-0.006706898100674152,-0.003353449050337076,0,0.12743106484413147,0,0,-0.04694828763604164,0,0,0,0,0,-0.006706898100674152,-0.030181042850017548,0,0,0,0,-0.006706898100674152,-0.001676724525168538,0,0.02682759240269661,0,0,-0.006706898100674152,-0.003353449050337076,0,0.013413796201348305,0.015090521425008774,0,-0.006706898100674152,0,0,0,0,0,-0.2883966267108917,-0.03185776621103287,0,0,0,0,0,-0.001676724525168538,0,0,0,0,0,-0.001676724525168538,0,0,0.016767246648669243,0,0,-0.001676724525168538,0,0.7578794956207275,0,0,0,-0.003353449050337076,0,0.013413796201348305,0.030181042850017548,0,0,0,0,0.020120695233345032,0,0,0,0,0,0.013413796201348305,0.05365518480539322,0,0,-0.038564667105674744,0,0.006706898100674152,0.02682759240269661,0,-0.006706898100674152,-0.010060347616672516,0,0,0,0,0,-0.003353449050337076,0,0,0.005030173808336258,0,0,-0.003353449050337076,0,0,0.06371553242206573,0,0,-0.02682759240269661,0,0,0,0,-0.006706898100674152,-0.006706898100674152,0,0,0.005030173808336258,0,-0.006706898100674152,-0.003353449050337076,0,0,0.013413796201348305,0,0,-0.003353449050337076,0,0,0.006706898100674152,0,-0.013413796201348305,-0.005030173808336258,0,0.013413796201348305,0,0,-0.006706898100674152,-0.14419831335544586,0,0,0,0,0,0,0,0,0.001676724525168538,0,-0.006706898100674152,0,0,0.006706898100674152,0,0,-0.013413796201348305,-0.010060347616672516,0,0,0.37893974781036377,0,0,0,0,0.020120695233345032,0.006706898100674152,0,-0.006706898100674152,0,0,0.013413796201348305,0.018443970009684563,0,0,0,0,0.12743106484413147,0.006706898100674152,0,-0.013413796201348305,-0.001676724525168538,0,0,0.018443970009684563,0,0,-0.003353449050337076,0,0,0,0,-0.10731036961078644,0,0,0,0.02682759240269661,0,-0.006706898100674152,-0.018443970009684563,0,0,0.008383623324334621,0,-0.013413796201348305,0,0,0.04694828763604164,0,0,0,-0.005030173808336258,0,0,0.001676724525168538,0,-0.04694828763604164,-0.005030173808336258,0,0,0.03185776621103287,0,-0.006706898100674152,-0.01173707190901041,0,0,0,0,-0.006706898100674152,-0.008383623324334621,0,0,0.006706898100674152,0,-0.006706898100674152,-0.005030173808336258,0,0,0.006706898100674152,0,0,-0.001676724525168538,0],"text":"\n// 2 sprites generated with spritemate on 5/31/2021, 8:33:10 AM\n// Byte 64 of each sprite contains multicolor (high nibble) & color (low nibble) information\n\nLDA #$0d // sprite multicolor 1\nSTA $D025\nLDA #$01 // sprite multicolor 2\nSTA $D026\n\n\n// sprite 0 / multicolor / color: $04\nsprite_0:\n.byte $00,$00,$00,$00,$00,$00,$00,$00\n.byte $00,$40,$00,$00,$13,$c0,$00,$5e\n.byte $b0,$00,$5e,$ac,$00,$12,$ab,$00\n.byte $43,$aa,$c0,$03,$aa,$b0,$00,$aa\n.byte $ac,$03,$aa,$b0,$43,$aa,$c0,$12\n.byte $ab,$00,$5e,$ac,$00,$5e,$b0,$00\n.byte $13,$c0,$00,$40,$00,$00,$00,$00\n.byte $00,$00,$00,$00,$00,$00,$00,$84\n\n// sprite 1 / singlecolor / color: $0f\nsprite_1:\n.byte $00,$3f,$00,$00,$7f,$80,$00,$ff\n.byte $c0,$00,$ff,$c0,$1f,$ff,$c0,$3f\n.byte $ff,$e0,$7f,$ff,$fc,$7f,$ff,$fe\n.byte $7f,$ff,$fe,$7f,$ff,$fe,$3f,$ff\n.byte $fe,$1f,$ff,$fe,$1f,$ff,$fc,$1f\n.byte $ff,$fc,$1f,$ff,$f8,$1f,$ff,$f8\n.byte $1f,$ff,$f0,$0f,$f1,$c0,$0f,$e0\n.byte $80,$03,$c0,$00,$00,$00,$00,$0f","sourcePath":"external/github.com/nealvis_c64_samples_kick/sprites_display/space_sprites.txt","sourceMtimeMs":1751666973000,"sourceUrl":"https://github.com/nealvis/c64_samples_kick/blob/master/sprites_display/space_sprites.txt","sourceRepoUrl":"https://github.com/nealvis/c64_samples_kick","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/nealvis/c64_samples_kick/blob/master/LICENSE","attribution":"Source: nealvis/c64_samples_kick (MIT)"},{"name":"github.com/spiroharvey_c64/asm/inc/macro.inc","language":"asm","vector":[0,0.006211899220943451,0,-0.024847596883773804,-0.037271395325660706,0,0,0.024847596883773804,0,-0.024847596883773804,-0.031059496104717255,0,0.07454279065132141,0.024847596883773804,0,-0.09939038753509521,-0.024847596883773804,0,0.04969519376754761,0,0,-0.024847596883773804,-0.012423798441886902,0,0,0.04969519376754761,0,0,-0.006211899220943451,0,0,0.05590709298849106,0,0,0,0,0,0,0,-0.09939038753509521,-0.006211899220943451,0,0,0,0,-0.04969519376754761,-0.024847596883773804,0,0,0,0,-0.024847596883773804,-0.012423798441886902,0,0,0,0,-0.024847596883773804,0,0,0,0,0,0,-0.006211899220943451,0,0.09939038753509521,0,0,-0.024847596883773804,-0.018635697662830353,0,0,0.012423798441886902,0,0,-0.037271395325660706,0,0.09939038753509521,0,0,-0.024847596883773804,-0.006211899220943451,0,0,0.23605217039585114,0,-0.14908558130264282,-0.012423798441886902,0,0.024847596883773804,0.037271395325660706,0,-0.04969519376754761,-0.012423798441886902,0,0,0,0,0,-0.012423798441886902,0,0.024847596883773804,0,0,0,-0.037271395325660706,0,0,0.043483294546604156,0,-0.024847596883773804,-0.04969519376754761,0,0,0.024847596883773804,0,-0.024847596883773804,-0.024847596883773804,0,0,0.006211899220943451,0,0,-0.012423798441886902,0,0.22362837195396423,0.006211899220943451,0,-0.14908558130264282,0,0,0,0,0,-0.024847596883773804,-0.05590709298849106,0,0.04969519376754761,0,0,0,-0.024847596883773804,0,0,0,0,-0.024847596883773804,-0.012423798441886902,0,0.44725674390792847,0,0,0,-0.012423798441886902,0,0,0,0,-0.024847596883773804,0,0,0,0.04969519376754761,0,-0.04969519376754761,-0.018635697662830353,0,0,0,0,-0.09939038753509521,0,0,0.024847596883773804,0.04969519376754761,0,-0.04969519376754761,-0.012423798441886902,0,0.04969519376754761,0,0,-0.024847596883773804,-0.08075468987226486,0,0.04969519376754761,0.018635697662830353,0,-0.09939038753509521,-0.043483294546604156,0,0,0,0,0,0,0,0.19878077507019043,0.12423798441886902,0,-0.024847596883773804,-0.006211899220943451,0,0.22362837195396423,0.006211899220943451,0,0,-0.018635697662830353,0,0,0,0,-0.024847596883773804,-0.018635697662830353,0,0,0,0,-0.09939038753509521,-0.006211899220943451,0,0,0.13044987618923187,0,0,-0.09939038753509521,0,0,0.012423798441886902,0,0,-0.018635697662830353,0,0,0.024847596883773804,0,-0.024847596883773804,0,0,0,0,0,-0.024847596883773804,-0.012423798441886902,0,0,0.22362837195396423,0,0,-0.024847596883773804,0,0,0,0,-0.024847596883773804,-0.024847596883773804,0,0.04969519376754761,0,0,0,-0.031059496104717255,0,0.09939038753509521,0,0,0,-0.05590709298849106,0,0,0.012423798441886902,0,0,-0.024847596883773804,0,0,0.04969519376754761,0,-0.09939038753509521,-0.018635697662830353,0,0.024847596883773804,0.024847596883773804,0,0,-0.04969519376754761,0,0,0.024847596883773804,0,-0.04969519376754761,-0.006211899220943451,0,0.024847596883773804,0.09939038753509521,0,-0.04969519376754761,-0.04969519376754761,0,0.024847596883773804,0.11802608519792557,0,0,-0.012423798441886902,0,0,0,0,-0.024847596883773804,-0.012423798441886902,0,0,0.006211899220943451,0,0,-0.04969519376754761,0,0,0,0,0,-0.006211899220943451,0,0,0,0,0,-0.006211899220943451,0,0,0,0,0,-0.012423798441886902,0,0,0.05590709298849106,0,-0.024847596883773804,-0.04969519376754761,0,0,0,0,0,-0.006211899220943451,0,0,0.012423798441886902,0,0,-0.012423798441886902,0,0,0.024847596883773804,0,-0.024847596883773804,-0.006211899220943451,0,0.024847596883773804,0.16150937974452972,0,-0.07454279065132141,0,0,0,0,0,0,-0.006211899220943451,0,0.44725674390792847,0,0,-0.024847596883773804,-0.06211899220943451,0,0.024847596883773804,0.012423798441886902,0,-0.024847596883773804,-0.024847596883773804,0],"text":"#importonce\n\n.macro push_stack() {\n\tpha\n\ttxa\n\tpha\n\ttya\n\tpha\n}\n\n.macro pop_stack() {\n\tpla\n\ttay\n\tpla\n\ttax\n\tpla\n}\n\n.macro cls() {\n\tpush_stack()\n\tldx\t#$00\n\n!:\tlda\t#$20\t\t// wipe screen with spaces\n\tsta\t$0400,x\n\tsta\t$0500,x\n\tsta\t$0600,x\n\tsta\t$06e8,x\n\n\tlda\t#$00\t\t// set fg colour to black\n\tsta\t$d800,x\n\tsta\t$d900,x\n\tsta\t$da00,x\n\tsta\t$dae8,x\n\tdex\n\tbne\t!-\n\tpop_stack()\n}\n\n.macro set_irq(rasterline, vector) {\n\t// lda\t#$7f\t\t// clear high bit of rasterline\n\t// and\t$d011\t\t// clear most significant bit of VIC's raster register\n\t// sta\t$d011\n\n\tlda\t#rasterline\t// set raster interrupt to trigger on line\n\tsta\t$d012\n\n\tlda\t#<vector\t// set pointer for raster interrupt vector\n\tsta\t$0314\n\tlda\t#>vector\n\tsta\t$0315\n}\n","sourcePath":"external/github.com/spiroharvey_c64/asm/inc/macro.inc","sourceMtimeMs":1674155094000,"sourceUrl":"https://github.com/spiroharvey/c64/blob/main/asm/inc/macro.inc","sourceRepoUrl":"https://github.com/spiroharvey/c64","license":"UNKNOWN","attribution":"Source: spiroharvey/c64 (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/02_color/Main.asm","language":"asm","vector":[0,0,0,0,-0.012026390992105007,0,0,0.024052781984210014,0,0,-0.04810556396842003,0,0,0,0,0,0,0,0,0.06013195216655731,0,-0.04810556396842003,-0.024052781984210014,0,0,0.024052781984210014,0,0,0,0,0.04810556396842003,0.24052780866622925,0,0,0,0,0,0.012026390992105007,0,0,0,0,0.09621112793684006,0,0,0,0,0,0,0.03607917204499245,0,0,0,0,0,0.024052781984210014,0,0,-0.012026390992105007,0,0.04810556396842003,0,0,-0.04810556396842003,-0.04810556396842003,0,0,0,0,0,0,0,0,0.012026390992105007,0,0,-0.03607917204499245,0,0,0,0,0,0,0,0,0,0,-0.19242225587368011,-0.024052781984210014,0,0,0,0,-0.04810556396842003,0,0,0.04810556396842003,0,0,0,0,0,0.09621112793684006,0.012026390992105007,0,0,0,0,0.04810556396842003,0.012026390992105007,0,0,0,0,0.04810556396842003,0,0,0,-0.024052781984210014,0,0,0,0,-0.04810556396842003,0,0,0,0.024052781984210014,0,-0.19242225587368011,0,0,0.09621112793684006,0.012026390992105007,0,-0.04810556396842003,-0.012026390992105007,0,0,0.06013195216655731,0,0,0,0,0,0.03607917204499245,0,0,0,0,0,0,0,0,0,0,0.04810556396842003,0.024052781984210014,0,0,-0.024052781984210014,0,0,0.012026390992105007,0,-0.04810556396842003,0,0,0,0.012026390992105007,0,-0.1443166881799698,0,0,0,0,0,-0.04810556396842003,-0.024052781984210014,0,0.09621112793684006,0,0,-0.19242225587368011,-0.09621112793684006,0,0,0,0,0,-0.03607917204499245,0,0.1443166881799698,0.024052781984210014,0,0,0,0,0,0.04810556396842003,0,0,-0.012026390992105007,0,0.6734778881072998,0.024052781984210014,0,0,0,0,0.04810556396842003,0.024052781984210014,0,0,0,0,0,0,0,0,-0.024052781984210014,0,0.04810556396842003,0,0,0,-0.09621112793684006,0,0,0.04810556396842003,0,-0.04810556396842003,-0.03607917204499245,0,0,0,0,0,0,0,0,0.012026390992105007,0,0,0,0,0.04810556396842003,0,0,-0.04810556396842003,0,0,0,0.04810556396842003,0,0,0,0,0,0,0,0,-0.024052781984210014,0,0,0,0,0,-0.0721583440899849,0,0,0.012026390992105007,0,0,-0.03607917204499245,0,0.04810556396842003,0.04810556396842003,0,0,-0.09621112793684006,0,0.04810556396842003,0,0,0,0,0,0,0.0721583440899849,0,0,0,0,0,0,0,0,-0.04810556396842003,0,0,0.3367389440536499,0,0,-0.012026390992105007,0,0.04810556396842003,0.03607917204499245,0,-0.04810556396842003,0,0,0.04810556396842003,0.024052781984210014,0,0,0,0,0.1443166881799698,0.03607917204499245,0,0,0,0,0,0.012026390992105007,0,0,-0.024052781984210014,0,0,0,0,0,-0.012026390992105007,0,0.04810556396842003,0,0,0,-0.04810556396842003,0,0.04810556396842003,0.04810556396842003,0,0,-0.03607917204499245,0,0,0,0,-0.09621112793684006,0,0,0,0,0,0,0,0,0,0,0,-0.04810556396842003,0,0,0,0.012026390992105007,0,0,0,0,0,0.024052781984210014,0,-0.04810556396842003,-0.012026390992105007,0,0,0.024052781984210014,0,0,-0.03607917204499245,0],"text":"; auto generated sys (Tools->Generate Sys() Call)\n; 10 SYS (4096)\n*=$0801\n        BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $34, $30, $39, $36, $29, $00, $00, $00\n\n; start address of program in memory 0x1000 = 4096)\n*=$1000\nLOOP\n        inc $d020\n        jmp LOOP","sourcePath":"external/github.com/Ziagl_C64-Assembler/02_color/Main.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/02_color/Main.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/03_bgcolor/Main.asm","language":"asm","vector":[0,0,0,0,-0.00952640175819397,0,0,0.01905280351638794,0,0,-0.03810560703277588,0,0,0,0,0,0,0,0,0.06668481230735779,0,-0.03810560703277588,-0.01905280351638794,0,0,0.05715841427445412,0,0,0,0,0.03810560703277588,0.2476864606142044,0,0,0,0,0,0.00952640175819397,0,0,-0.00952640175819397,0,0.15242242813110352,0,0,0,0,0,0,0.02857920713722706,0,0,0,0,0,0.01905280351638794,0,0,-0.00952640175819397,0,0.07621121406555176,0,0,-0.03810560703277588,-0.03810560703277588,0,0.07621121406555176,0,0,0,0,0,0,0.00952640175819397,0,0,-0.02857920713722706,0,0,0,0,0,0,0,0,0.11431682854890823,0,-0.22863365709781647,-0.01905280351638794,0,0,0,0,-0.03810560703277588,0,0,0.03810560703277588,0,0,0,0,0,0.07621121406555176,0.00952640175819397,0,0,0,0,0.07621121406555176,0.00952640175819397,0,0,0,0,0.03810560703277588,0,0,-0.07621121406555176,-0.01905280351638794,0,0,0,0,-0.07621121406555176,0,0,0,0.01905280351638794,0,-0.15242242813110352,0,0,0.07621121406555176,0.01905280351638794,0,-0.03810560703277588,-0.00952640175819397,0,0.03810560703277588,0.10479041934013367,0,0,0,0,0,0.04763200879096985,0,0,0,0,0,0,0,0,0,0,0.03810560703277588,0.03810560703277588,0,0,-0.01905280351638794,0,0,0.04763200879096985,0,-0.07621121406555176,0,0,0.07621121406555176,0.00952640175819397,0,-0.11431682854890823,0,0,0,0,0,-0.03810560703277588,-0.01905280351638794,0,0.07621121406555176,0,0,-0.15242242813110352,-0.11431682854890823,0,0,0,0,0,-0.02857920713722706,0,0.11431682854890823,0.01905280351638794,0,0,0,0,0,0.0952640175819397,0,0,-0.00952640175819397,0,0.6096897125244141,0.03810560703277588,0,0,0,0,0.03810560703277588,0.01905280351638794,0,-0.03810560703277588,-0.03810560703277588,0,0,0,0,0,-0.03810560703277588,0,0.03810560703277588,0,0,0,-0.07621121406555176,0,0,0.03810560703277588,0,-0.03810560703277588,-0.02857920713722706,0,0,0.01905280351638794,0,0,0,0,0,0.00952640175819397,0,0,0,0,0.03810560703277588,0,0,-0.03810560703277588,0,0,0,0.05715841427445412,0,0,0,0,0,0,0,0,-0.03810560703277588,0,0,0.03810560703277588,0,0,-0.05715841427445412,0,0,0.01905280351638794,0,0,-0.02857920713722706,0,0.03810560703277588,0.05715841427445412,0,0,-0.07621121406555176,0,0.03810560703277588,0,0,0,0,0,0,0.05715841427445412,0,0,0,0,0,0,0,0,-0.05715841427445412,0,0,0.30484485626220703,0,0,-0.00952640175819397,0,0.07621121406555176,0.02857920713722706,0,-0.03810560703277588,-0.01905280351638794,0,0.11431682854890823,0.01905280351638794,0,0,0,0,0.1905280351638794,0.03810560703277588,0,0,0,0,0,0.00952640175819397,0,0,-0.03810560703277588,0,0,0,0,0,-0.01905280351638794,0,0.03810560703277588,0,0,0,-0.03810560703277588,0,0.03810560703277588,0.03810560703277588,0,0,-0.02857920713722706,0,0,0.00952640175819397,0,-0.07621121406555176,0,0,0,0,0,0,0,0,0,0,0,-0.03810560703277588,0,0,0,0.00952640175819397,0,0,0,0,0.22863365709781647,0.01905280351638794,0,-0.03810560703277588,-0.01905280351638794,0,0,0.03810560703277588,0,0,-0.02857920713722706,0],"text":"; auto generated sys (Tools->Generate Sys() Call)\n; 10 SYS (4096)\n*=$0801\n        BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $34, $30, $39, $36, $29, $00, $00, $00\n\n; start address of program in memory 0x1000 = 4096)\n*=$1000\nLOOP\n        lda #$02\n        sta $d020\n        sta $d021\n        ;jmp LOOP\n\n        ldx #$20\n        lda #$02\n        sta $d000,X\n        sta $d001,X\n        ;jmp LOOP\n\n        ldy #$01\n        iny\n        sty $d020\n\n        sty $d021\n        jmp LOOP","sourcePath":"external/github.com/Ziagl_C64-Assembler/03_bgcolor/Main.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/03_bgcolor/Main.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/04_calc/Main.asm","language":"asm","vector":[0,0,0,0,-0.010565017350018024,0,0,0.02113003470003605,0,0,-0.0422600694000721,0,0.0422600694000721,0,0,-0.0422600694000721,0,0,0,0.052825089544057846,0,-0.0422600694000721,-0.02113003470003605,0,0,0.0422600694000721,0,0,0,0,0.0422600694000721,0.2324303835630417,0,0,0,0,0,0.010565017350018024,0,0,0,0,0.1267802119255066,0,0,0,0,0,0,0.03169505298137665,0,0,0,0,0,0.02113003470003605,0,0,-0.010565017350018024,0,0.0422600694000721,0,0,-0.0422600694000721,-0.0422600694000721,0,0.0845201388001442,0,0,0,0,0,0,0.010565017350018024,0,0,-0.03169505298137665,0,0,0,0,0,0,0,0,0.1267802119255066,0,-0.1690402776002884,-0.0422600694000721,0,0,0,0,-0.0422600694000721,0,0,0.0422600694000721,0,0,0,0,0,0.0845201388001442,0.010565017350018024,0,0,0,0,0,0.03169505298137665,0,0,-0.02113003470003605,0,0.0422600694000721,0,0,0,-0.02113003470003605,0,0,0,0,-0.0845201388001442,0,0,0,0.02113003470003605,0,-0.1690402776002884,0,0,0.0845201388001442,0.010565017350018024,0,-0.0422600694000721,-0.010565017350018024,0,0,0.0845201388001442,0,0,0,0,0,0.0422600694000721,0,0,0,0,0,0,0,0,0,0,0.0845201388001442,0.02113003470003605,0,0,-0.02113003470003605,0,0,0.052825089544057846,0,-0.21130035817623138,0,0,0,0.010565017350018024,0,-0.1267802119255066,0,0,0,0,0,-0.0422600694000721,-0.02113003470003605,0,0.0845201388001442,0,0,-0.1690402776002884,-0.0845201388001442,0,0,0,0,0,-0.03169505298137665,0,0.1267802119255066,0.02113003470003605,0,0,0,0,0,0.10565017908811569,0,0,-0.02113003470003605,0,0.5916410088539124,0,0,0,0,0,0.0422600694000721,0.02113003470003605,0,0,0,0,0,0,0,0,-0.0422600694000721,0,0.0422600694000721,0.010565017350018024,0,0,-0.09508515894412994,0,0,0.0422600694000721,0,-0.0422600694000721,-0.03169505298137665,0,0,0,0,0,0,0,0,0.010565017350018024,0,0,0,0,0.0422600694000721,0,0,-0.0422600694000721,0,0,0,0.07395512610673904,0,0,0,0,0,0,0,0,-0.10565017908811569,0,0,0,0,0,-0.0633901059627533,0,0,0.010565017350018024,0,0,-0.03169505298137665,0,0.0422600694000721,0.0633901059627533,0,0,-0.0845201388001442,0,0.0422600694000721,0,0,0,0,0,0,0.0633901059627533,0,0,0,0,0,0,0,0,-0.0422600694000721,0,0,0.2958205044269562,0,0,-0.010565017350018024,0,0.0422600694000721,0.03169505298137665,0,-0.0422600694000721,0,0,0.0845201388001442,0.02113003470003605,0,0,0,0,0.1690402776002884,0.02113003470003605,0,0,0,0,0,0.010565017350018024,0,0,-0.02113003470003605,0,0,0,0,0,-0.02113003470003605,0,0.0422600694000721,0,0,0,-0.0422600694000721,0,0.0422600694000721,0.0422600694000721,0,0,-0.03169505298137665,0,0,0,0,-0.0845201388001442,0,0,0,0,0,0,0,0,0,0,0,-0.0422600694000721,0,0,0,0.02113003470003605,0,0,0,0,0.2535604238510132,0.02113003470003605,0,-0.0845201388001442,-0.052825089544057846,0,0,0.02113003470003605,0,0,-0.03169505298137665,0],"text":"; auto generated sys (Tools->Generate Sys() Call)\n; 10 SYS (4096)\n*=$0801\n        BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $34, $30, $39, $36, $29, $00, $00, $00\n\n; start address of program in memory 0x1000 = 4096)\n*=$1000\nLOOP\n        lda #$00\n        sta $d020\n        clc\n        adc #$01\n        sta $d021\n        ;jmp LOOP\n\n        lda #$01\n        sta $d021\n        sec\n        sbc #$01\n        sta $d020\n        jmp LOOP","sourcePath":"external/github.com/Ziagl_C64-Assembler/04_calc/Main.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/04_calc/Main.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/05_sprite/Main.asm","language":"asm","vector":[0.07093269377946854,0,0,0,-0.017733173444867134,0,0,0.017733173444867134,0,0,-0.062066104263067245,0,0,0,0,0,-0.008866586722433567,0,0,0.05319951847195625,0,-0.03546634688973427,-0.017733173444867134,0,0,0.026599759235978127,0,0,0,0,0.03546634688973427,0.25713101029396057,0,0,0,0,0,0.008866586722433567,0,0,-0.017733173444867134,0,0.07093269377946854,0,0,0,-0.008866586722433567,0,0,0.026599759235978127,0,0,-0.017733173444867134,0,0,0.017733173444867134,0,0,-0.062066104263067245,0,0.1063990369439125,0,0,-0.07093269377946854,-0.03546634688973427,0,0,0,0,0,0,0,0,0.008866586722433567,0,0,-0.026599759235978127,0,0,0,0,0,0,0,0,0.12413220852613449,0,-0.14186538755893707,-0.017733173444867134,0,0,0,0,-0.03546634688973427,-0.008866586722433567,0,0.03546634688973427,0.03546634688973427,0,0,-0.008866586722433567,0,0.07093269377946854,0.008866586722433567,0,0,-0.017733173444867134,0,0,0.008866586722433567,0,0,0,0,0.03546634688973427,0,0,0,-0.017733173444867134,0,0,0,0,0,-0.008866586722433567,0,0.03546634688973427,0.017733173444867134,0,-0.14186538755893707,0,0,0.07093269377946854,0.008866586722433567,0,-0.03546634688973427,-0.008866586722433567,0,0.03546634688973427,0.04433293268084526,0,0,0,0,0,0.05319951847195625,0,0,0,0,0.03546634688973427,0,0,-0.1063990369439125,0,0,0.03546634688973427,0.05319951847195625,0,-0.03546634688973427,-0.03546634688973427,0,0.03546634688973427,0.008866586722433567,0,-0.07093269377946854,-0.008866586722433567,0,0,0.008866586722433567,0,-0.17733173072338104,-0.026599759235978127,0,0,0,0,-0.07093269377946854,-0.017733173444867134,0,0.07093269377946854,0,0,-0.17733173072338104,-0.07093269377946854,0,0,0,0,-0.03546634688973427,-0.026599759235978127,0,0.14186538755893707,0.017733173444867134,0,0,0,0,0.03546634688973427,0.09753245115280151,0,0,-0.008866586722433567,0,0.6029278635978699,0,0,0,0,0,0.03546634688973427,0.03546634688973427,0,-0.07093269377946854,0,0,0,0,0,-0.03546634688973427,0,0,0.03546634688973427,0.017733173444867134,0,0,-0.07093269377946854,0,0,0.03546634688973427,0,-0.03546634688973427,-0.026599759235978127,0,0,0.017733173444867134,0,0,0,0,0,0.008866586722433567,0,0,0,0,0.03546634688973427,0.017733173444867134,0,-0.03546634688973427,-0.05319951847195625,0,0,0.03546634688973427,0,0,-0.017733173444867134,0,0,0.017733173444867134,0,0,-0.03546634688973427,0,0,0,0,-0.03546634688973427,-0.08866586536169052,0,0,0.026599759235978127,0,-0.03546634688973427,-0.05319951847195625,0,0.03546634688973427,0.03546634688973427,0,-0.07093269377946854,-0.08866586536169052,0,0.03546634688973427,0,0,0,-0.017733173444867134,0,0,0.07093269377946854,0,0,0,0,0,0.017733173444867134,0,-0.03546634688973427,-0.03546634688973427,0,0,0.30146393179893494,0,0,-0.008866586722433567,0,0.03546634688973427,0.026599759235978127,0,-0.03546634688973427,-0.03546634688973427,0,0.03546634688973427,0.017733173444867134,0,0,-0.017733173444867134,0,0.212798073887825,0.017733173444867134,0,0,0,0,0,0.008866586722433567,0,0,-0.017733173444867134,0,0,0,0,0,0,0,0.03546634688973427,0.008866586722433567,0,-0.03546634688973427,-0.03546634688973427,0,0.03546634688973427,0.03546634688973427,0,-0.1063990369439125,-0.026599759235978127,0,0,0.008866586722433567,0,-0.07093269377946854,0,0,0,0,0,0,0,0,0,0.008866586722433567,0,-0.03546634688973427,-0.04433293268084526,0,0,0.008866586722433567,0,0,-0.026599759235978127,0,0.24826441705226898,0.026599759235978127,0,-0.03546634688973427,-0.05319951847195625,0,0,0.017733173444867134,0,0,-0.04433293268084526,0],"text":"; auto generated sys (Tools->Generate Sys() Call)\n; 10 SYS (4096)\n*=$0801\n        BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $34, $30, $39, $36, $29, $00, $00, $00\n\n; start address of program in memory 0x1000 = 4096)\n*=$1000\n        ; pointer to sprite\n        lda #$80\n        sta $07f8\n\n        ; enable sprite 1\n        lda #$01\n        sta $d015\n\n        ; set x,y position 80 = 128/128\n        lda #$80\n        sta $d000\n        sta $d001\n\nLOOP    jmp LOOP\n\n*=$2000\n        INCBIN \"sprite.spt\",1,1\n        ","sourcePath":"external/github.com/Ziagl_C64-Assembler/05_sprite/Main.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/05_sprite/Main.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/06_variables/Main.asm","language":"asm","vector":[0.029703879728913307,0,0,0,-0.014851939864456654,0,0,0.044555820524692535,0,-0.029703879728913307,-0.03712984919548035,0,0,0.029703879728913307,0,-0.08911164104938507,0,0,0,0.051981791853904724,0,-0.029703879728913307,-0.029703879728913307,0,0,0.03712984919548035,0,-0.1485193967819214,-0.007425969932228327,0,0.029703879728913307,0.2970387935638428,0,0,0,0,0,0.029703879728913307,0,0,-0.007425969932228327,0,0.059407759457826614,0,0,-0.029703879728913307,-0.007425969932228327,0,0,0.022277910262346268,0,-0.029703879728913307,0,0,0,0.014851939864456654,0,0,-0.014851939864456654,0,0.029703879728913307,0.029703879728913307,0,-0.059407759457826614,-0.029703879728913307,0,0.029703879728913307,0.014851939864456654,0,0,-0.007425969932228327,0,0,0.007425969932228327,0,0,-0.029703879728913307,0,0.1485193967819214,0,0,-0.029703879728913307,-0.014851939864456654,0,0.029703879728913307,0.044555820524692535,0,-0.1485193967819214,-0.014851939864456654,0,0,0.014851939864456654,0,-0.029703879728913307,-0.022277910262346268,0,0.029703879728913307,0.029703879728913307,0,0,-0.007425969932228327,0,0.059407759457826614,0.007425969932228327,0,0,-0.022277910262346268,0,0,0.014851939864456654,0,-0.029703879728913307,-0.0742596983909607,0,0.029703879728913307,0,0,-0.029703879728913307,-0.014851939864456654,0,0,0.007425969932228327,0,0,-0.0742596983909607,0,0,0.029703879728913307,0,-0.1485193967819214,0,0,0.059407759457826614,0.014851939864456654,0,-0.059407759457826614,-0.014851939864456654,0,0.029703879728913307,0.044555820524692535,0,0,-0.014851939864456654,0,0,0.08911164104938507,0,0,-0.014851939864456654,0,0.029703879728913307,0.007425969932228327,0,-0.029703879728913307,0,0,0.059407759457826614,0.014851939864456654,0,0,-0.029703879728913307,0,0.059407759457826614,0.022277910262346268,0,-0.029703879728913307,0,0,0,0.007425969932228327,0,-0.267334908246994,0,0,0,0.08911164104938507,0,-0.059407759457826614,-0.029703879728913307,0,0.11881551891565323,0.014851939864456654,0,-0.1485193967819214,-0.0742596983909607,0,0,0,0,0,-0.022277910262346268,0,0.08911164104938507,0.014851939864456654,0,0,-0.007425969932228327,0,0.029703879728913307,0.051981791853904724,0,-0.029703879728913307,-0.007425969932228327,0,0.4752620756626129,0,0,0,-0.014851939864456654,0,0.059407759457826614,0.022277910262346268,0,-0.029703879728913307,-0.014851939864456654,0,0,0,0,-0.029703879728913307,-0.007425969932228327,0,0.029703879728913307,0,0,0,-0.09653761237859726,0,0,0.029703879728913307,0,-0.059407759457826614,-0.03712984919548035,0,0,0.014851939864456654,0,0,-0.03712984919548035,0,0.059407759457826614,0.007425969932228327,0,-0.029703879728913307,0,0,0.029703879728913307,0.014851939864456654,0,-0.059407759457826614,-0.014851939864456654,0,0,0.044555820524692535,0,0,-0.007425969932228327,0,0,0.029703879728913307,0,0,-0.022277910262346268,0,0.059407759457826614,0,0,-0.08911164104938507,-0.133667454123497,0,0.059407759457826614,0.007425969932228327,0,-0.029703879728913307,-0.044555820524692535,0,0.029703879728913307,0.0668337270617485,0,-0.029703879728913307,-0.0742596983909607,0,0.059407759457826614,0,0,-0.11881551891565323,0,0,0,0.08168566972017288,0,0,-0.007425969932228327,0,0.029703879728913307,0.022277910262346268,0,0,-0.051981791853904724,0,0.059407759457826614,0.23763103783130646,0,0,-0.007425969932228327,0,0.059407759457826614,0.03712984919548035,0,-0.059407759457826614,-0.014851939864456654,0,0.059407759457826614,0.014851939864456654,0,0,-0.014851939864456654,0,0.3564465641975403,0.014851939864456654,0,0,-0.007425969932228327,0,0.029703879728913307,0.007425969932228327,0,0,-0.03712984919548035,0,0,0,0,0,0,0,0.029703879728913307,0.029703879728913307,0,0,-0.051981791853904724,0,0.029703879728913307,0.029703879728913307,0,0,-0.044555820524692535,0,0.059407759457826614,0.007425969932228327,0,-0.059407759457826614,0,0,0,0,0,0,0,0,0,0.03712984919548035,0,-0.029703879728913307,-0.051981791853904724,0,0,0.044555820524692535,0,-0.029703879728913307,-0.014851939864456654,0,0.08911164104938507,0.029703879728913307,0,-0.029703879728913307,-0.022277910262346268,0,0,0.029703879728913307,0,0,-0.12624149024486542,0],"text":"; auto generated sys (Tools->Generate Sys() Call)\n; 10 SYS (4096)\n*=$0801\n        BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $34, $30, $39, $36, $29, $00, $00, $00\n\n; start address of program in memory 0x1000 = 4096)\n*=$1000\n       \n; variables\nVAR_BIN = %10010111     ; local variable binary representation\nVAR_HEX = $97           ; local variable hexadecimal representation\nVAR_OCT = @227          ; local variable octal representation\nVAR_DEC = 151           ; local variable decimal represenetation\n\nVAR_GLOBAL$ = $2000     ; global variable hexadecimal representation\n\nSCREEN_START$ = $0400   ; global screen start position (first character)\n\n        ldx #$00\nLOOP                    ; label always starts at column 0 of file!\n        txa\n        sta SCREEN_START$,x\n        inx\n        bne LOOP\n_TEMP                   ; temporary label, only visible in block between labels\n        lda #$00\n        sta $d021\n        rts","sourcePath":"external/github.com/Ziagl_C64-Assembler/06_variables/Main.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/06_variables/Main.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/11_extern/Main.asm","language":"asm","vector":[0,0,0,0,-0.015551140531897545,0,0,0.015551140531897545,0,0,-0.06220456212759018,0,0.12440912425518036,0,0,-0.06220456212759018,0,0,0.06220456212759018,0.046653419733047485,0,0,-0.03110228106379509,0,0,0,0,0,0,0,0,0.23326711356639862,0,0,-0.015551140531897545,0,0,0.015551140531897545,0,0,0,0,0.06220456212759018,0,0,-0.12440912425518036,0,0,0,0,0,0,0,0,0,0,0,-0.06220456212759018,-0.015551140531897545,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.015551140531897545,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.03110228106379509,0,0,0.03110228106379509,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.03110228106379509,0,0,0.07775570452213287,0,0,-0.03110228106379509,0,0.06220456212759018,0.03110228106379509,0,-0.06220456212759018,0,0,0.06220456212759018,0,0,0,0,0,0.06220456212759018,0,0,0,0,0,0,0,0,0,-0.015551140531897545,0,0.06220456212759018,0.03110228106379509,0,0,-0.06220456212759018,0,0.06220456212759018,0.03110228106379509,0,0,0,0,0.06220456212759018,0,0,0,-0.03110228106379509,0,0,0,0,0,0,0,0.06220456212759018,0,0,0,0,0,0,0,0,-0.12440912425518036,0,0,0,0,0,-0.06220456212759018,0,0,0.06220456212759018,0,0,-0.24881824851036072,0,0,0,0,0,0,0,0,0.18661367893218994,0,0,0,0,0,0,0,0,0,-0.015551140531897545,0,0.6842501759529114,0,0,-0.06220456212759018,0,0,0.06220456212759018,0.03110228106379509,0,0,-0.03110228106379509,0,0,0.03110228106379509,0,0,0,0,0,0.06220456212759018,0,0,-0.015551140531897545,0,0,0.015551140531897545,0,-0.06220456212759018,0,0,0,0.03110228106379509,0,0,0,0,0,0.03110228106379509,0,0,0,0,0.06220456212759018,0.03110228106379509,0,0,0,0,0,0.015551140531897545,0,0,-0.03110228106379509,0,0,0.03110228106379509,0,0,0,0,0.12440912425518036,0,0,0,-0.07775570452213287,0,0,0,0,0,-0.03110228106379509,0,0,0.03110228106379509,0,-0.12440912425518036,-0.12440912425518036,0,0.06220456212759018,0,0,0,0,0,0,0.09330683946609497,0,0,0,0,0,0,0,0,0,0,0,0.3421250879764557,0,0,-0.03110228106379509,0,0,0.03110228106379509,0,-0.06220456212759018,0,0,0,0,0,0,0,0,0.12440912425518036,0,0,0,0,0,0,0.015551140531897545,0,0,-0.046653419733047485,0,0,0.015551140531897545,0,0,0,0,0,0.015551140531897545,0,0,0,0,0,0.03110228106379509,0,0,0,0,0,0.015551140531897545,0,0,0,0,0,0.015551140531897545,0,0,0,0,0,0.07775570452213287,0,0,0,0,0,0,0,0,0,0,0,0.015551140531897545,0,-0.06220456212759018,-0.06220456212759018,0,0,0.03110228106379509,0,0,-0.03110228106379509,0],"text":"\n*=$0801\n        BYTE  $0B, $08, $0A, $00, $9E, $32, $30, $36, $34, $00, $00, $00\n\n*=$0810\nstart\n        ldx #$00\n        jsr DOSOMETHING         ; call external subroutine\n        inx\n\n        INCASM \"Something.asm\"  ; include extern asm file","sourcePath":"external/github.com/Ziagl_C64-Assembler/11_extern/Main.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/11_extern/Main.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/11_extern/Something.asm","language":"asm","vector":[0,0,0,0,0,0,0,0.06482037156820297,0,0,0,0,0,0,0,-0.38892224431037903,0,0,0,0.09723056107759476,0,0,0,0,0,0,0,0,0,0,0,0.19446112215518951,0,0,-0.032410185784101486,0,0,0.06482037156820297,0,-0.2592814862728119,0,0,0.2592814862728119,0,0,0,0,0,0.12964074313640594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.12964074313640594,0,0,0,0,0,0,0,0,0,-0.06482037156820297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.19446112215518951,0,0.12964074313640594,0,0,0,0,0,0,0.032410185784101486,0,0,0,0,0,0,0,0,0,0,0,0.032410185784101486,0,-0.2592814862728119,-0.12964074313640594,0,0,0.12964074313640594,0,0,0,0,0,0.16205093264579773,0,0,0,0,0,0.032410185784101486,0,0,0,0,0,0,0,0,0,0,0.2592814862728119,0,0,0,0,0,0,0,0,-0.12964074313640594,0,0,0,0.06482037156820297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.12964074313640594,0,0,0,0,0,0,0,0,0,-0.032410185784101486,0,0,0,0,-0.12964074313640594,0,0,0,0.06482037156820297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.09723056107759476,0,0,0,0,0,-0.12964074313640594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.06482037156820297,0,0,0.06482037156820297,0,0,0,0,0,0.16205093264579773,0,0,0,0,0,0,0,0,-0.06482037156820297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.09723056107759476,0,0,0,0,0.12964074313640594,0,0,0,0,0,0,0,0,0,-0.06482037156820297,0,0.12964074313640594,0,0,0,0,0,0,0,0,0,0,0,0.38892224431037903,0,0,0,0,0,0.12964074313640594,0.032410185784101486,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.06482037156820297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.06482037156820297,0,-0.12964074313640594,0,0,0,0,0,0,-0.032410185784101486,0],"text":"       \n*=$9000\n\n; local macro\ndefm    DoIt\n        ldy #$00\n@LOOP\n        bne @LOOP\n        endm\n\n; subroutine\nDOSOMETHING\n        DoIt    ; calls macro\n        rts","sourcePath":"external/github.com/Ziagl_C64-Assembler/11_extern/Something.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/Something.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"graphics/sprite/mover.asm","language":"asm","vector":[0,0,0,0,-0.03548867255449295,0,0,0,0,0,0,0,0.1419546902179718,0,0,-0.0709773451089859,0,0,0,0.12421035021543503,0,0,-0.03548867255449295,0,0.0709773451089859,0,0,0,0,0,0,0.1419546902179718,0,0,-0.15969902276992798,0,0,0.08872167766094208,0,-0.0709773451089859,0,0,0.2129320353269577,0,0,-0.0709773451089859,0,0,0,0,0,0,0,0,0,0,0,0,-0.053233008831739426,0,0,0.03548867255449295,0,0,0,0,0.0709773451089859,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.017744336277246475,0,0,0,0,0,0.0709773451089859,0,0,-0.03548867255449295,0,0,0,0,0,-0.017744336277246475,0,0,0.03548867255449295,0,0,0,0,0,0,0,0,0,0,0,0.053233008831739426,0,0,-0.053233008831739426,0,0,0.10646601766347885,0,0,-0.03548867255449295,0,0,0.0709773451089859,0,0,-0.0709773451089859,0,0,0,0,-0.4968414008617401,0,0,0,0,0,-0.0709773451089859,0,0,0,0.03548867255449295,0,-0.0709773451089859,0,0,0.0709773451089859,0,0,-0.0709773451089859,-0.017744336277246475,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0709773451089859,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0709773451089859,0,0,0.3548867106437683,0,0,0,0,0,0,0,0,0,0,0,0,0.03548867255449295,0,0,-0.017744336277246475,0,0,0,0,-0.0709773451089859,0,0,0.1419546902179718,0.017744336277246475,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.2661650478839874,0,0,0.053233008831739426,0,0,-0.053233008831739426,0,0,0,0,0,-0.03548867255449295,0,0,0.03548867255449295,0,0,-0.03548867255449295,0,0,0,0,0,0,0,0.0709773451089859,0.017744336277246475,0,0,0,0,0,0,0,0,0,0,0,0.03548867255449295,0,-0.0709773451089859,0,0,0,0,0,0,0,0,0,0,0,0,-0.03548867255449295,0,0.2129320353269577,0.17744335532188416,0,-0.0709773451089859,0,0,0,0,0,0,0,0,0.2839093804359436,0,0,-0.2839093804359436,0,0,0,0,0,0,-0.03548867255449295,0,0,0.0709773451089859,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0709773451089859,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.12421035021543503,0,0,0,0,0,-0.017744336277246475,0,0,0.03548867255449295,0,0,-0.017744336277246475,0,0,0.017744336277246475,0,0,-0.017744336277246475,0],"text":"        *= $0801\n        SEI\n        LDA #$01\n        STA $D015          ; enable sprite 0\n        LDA #$00\n        STA $D001          ; sprite 0 Y\n        LDA #$18\n        STA $D000          ; sprite 0 X\nLOOP    INC $D000          ; move right\n        LDA $D000\n        CMP #$F0\n        BNE LOOP\n        LDA #$18\n        STA $D000\n        JMP LOOP\n","sourcePath":"data/assembly/examples/graphics/sprite/mover.asm","sourceMtimeMs":1760978194729.0105}]}