{"dim":384,"model":"LocalMiniHashEmbedding","records":[{"name":"doc/prompts/user-prompt-ideas.md","language":"asm","vector":[0,0,0,0,-0.0254205334931612,0,0,0.0254205334931612,0,0,-0.0127102667465806,0,0,0.0063551333732903,0,-0.0254205334931612,-0.0254205334931612,0,0.0254205334931612,0,0,0,0,0,0,0,0,0,0,0,0,0.0127102667465806,0,0,-0.0063551333732903,0,0,0,0,0,-0.0508410669863224,0,0,0,0,0,0,0,0.0254205334931612,0.0063551333732903,0,0,-0.0063551333732903,0,0.0508410669863224,0.0254205334931612,0,0,-0.01906540058553219,0,0,0.0063551333732903,0,-0.0254205334931612,0,0,0,0,0,0,0,0,0.0254205334931612,0.0063551333732903,0,0,-0.0127102667465806,0,0,0.03813080117106438,0,-0.12710267305374146,0,0,0,0,0,-0.0254205334931612,-0.06355133652687073,0,0,0,0,-0.0254205334931612,-0.03813080117106438,0,0.5084106922149658,0.0063551333732903,0,-0.0254205334931612,0,0,0.43214908242225647,0,0,0,-0.08897186815738678,0,0,0,0,0,-0.0127102667465806,0,0.0254205334931612,0.0127102667465806,0,-0.0254205334931612,0,0,0,0.0063551333732903,0,0,-0.0063551333732903,0,0.22878479957580566,0,0,-0.0508410669863224,0,0,0.0254205334931612,0,0,-0.0254205334931612,0,0,0.0508410669863224,0,0,0,0,0,0.0508410669863224,0.0127102667465806,0,-0.0254205334931612,0,0,0.07626160234212875,0.0254205334931612,0,0,-0.0254205334931612,0,0,0,0,-0.0254205334931612,-0.0127102667465806,0,0.0254205334931612,0,0,-0.0508410669863224,0,0,0,0.0127102667465806,0,0,-0.0063551333732903,0,0,0,0,-0.1016821339726448,-0.06355133652687073,0,0.0508410669863224,0,0,0,-0.0127102667465806,0,0.0254205334931612,0,0,-0.1016821339726448,-0.01906540058553219,0,0,0.26691561937332153,0,0,-0.0127102667465806,0,0,0.21607454121112823,0,0,-0.031775668263435364,0,0.0508410669863224,0,0,-0.0254205334931612,-0.0127102667465806,0,0,0.0127102667465806,0,0,-0.0127102667465806,0,0,0,0,0,0,0,0.0254205334931612,0.11439239978790283,0,-0.0254205334931612,-0.031775668263435364,0,0.1016821339726448,0.01906540058553219,0,-0.0254205334931612,-0.0127102667465806,0,0.0254205334931612,0.0254205334931612,0,0,0,0,0,0.0254205334931612,0,0,-0.0127102667465806,0,0.0254205334931612,0.03813080117106438,0,0,0,0,0.0508410669863224,0,0,0,-0.0127102667465806,0,0,0.01906540058553219,0,0,-0.0254205334931612,0,0,0.0127102667465806,0,-0.0508410669863224,0,0,0.0254205334931612,0,0,0,-0.057196199893951416,0,0,0.0254205334931612,0,-0.3558874726295471,0,0,0,0.01906540058553219,0,0,-0.0508410669863224,0,0,0,0,0,-0.031775668263435364,0,0.0254205334931612,0,0,-0.0254205334931612,-0.0063551333732903,0,0,0.0254205334931612,0,0,-0.01906540058553219,0,0,0.12710267305374146,0,0,-0.0063551333732903,0,0,0.10803727060556412,0,0,0,0,0,0.0127102667465806,0,0,-0.0127102667465806,0,0,0.057196199893951416,0,-0.1016821339726448,-0.01906540058553219,0,0,0.0127102667465806,0,0,0,0,0,0.057196199893951416,0,0,-0.0127102667465806,0,0,0.01906540058553219,0,-0.0254205334931612,-0.0063551333732903,0,0,0.03813080117106438,0,0,0,0,0,0.0127102667465806,0,0,-0.0063551333732903,0,0,0.01906540058553219,0,-0.0254205334931612,-0.0254205334931612,0,0.0508410669863224,0.0127102667465806,0,0,-0.0063551333732903,0,0,0.0063551333732903,0,-0.12710267305374146,-0.19065400958061218,0,0,0,0,-0.0508410669863224,0,0],"text":"<!-- Source: doc/prompts/user-prompt-ideas.md#üíæ Memory and System Control -->\n## üíæ Memory and System Control\n\n- \"Read 32 bytes starting at `$C000`.\"\n- \"Write the value `$A9` to address `$C000`.\"\n- \"Fill memory from `$0400` to `$07E7` with `$20` (space).\"\n- \"Dump the zero page as a hex table.\"\n- \"Freeze the CPU, modify `$D020` to `$06`, and resume.\"\n- \"Trigger a soft reset.\"\n- \"Hard reset the C64 and reload `boot.prg`.\"\n\n---","sourcePath":"doc/prompts/user-prompt-ideas.md","sourceMtimeMs":1761504177142.4634,"origin":"doc/prompts/user-prompt-ideas.md#üíæ Memory and System Control"},{"name":"doc/prompts/user-prompt-ideas.md","language":"asm","vector":[0,0,0,0,0,0,0.05497794970870018,0.02061673067510128,0,-0.02748897485435009,-0.013744487427175045,0,0,0.0068722437135875225,0,0,-0.0068722437135875225,0,0.05497794970870018,0,0,0,-0.0068722437135875225,0,0.02748897485435009,0.013744487427175045,0,0,-0.05497794970870018,0,0.05497794970870018,0,0,-0.02748897485435009,-0.02748897485435009,0,0,0.0068722437135875225,0,0,-0.013744487427175045,0,0.02748897485435009,0,0,-0.02748897485435009,-0.013744487427175045,0,0.02748897485435009,0.04123346135020256,0,-0.02748897485435009,-0.03436121717095375,0,0.10995589941740036,0,0,0,0,0,0.02748897485435009,0.0068722437135875225,0,-0.02748897485435009,-0.013744487427175045,0,0,0.0068722437135875225,0,0,-0.0068722437135875225,0,0.02748897485435009,0,0,-0.02748897485435009,-0.02061673067510128,0,0.02748897485435009,0.02061673067510128,0,-0.16493384540081024,-0.0068722437135875225,0,0,0.0068722437135875225,0,-0.02748897485435009,-0.03436121717095375,0,0,0,0,-0.05497794970870018,-0.02061673067510128,0,0.43982359766960144,0,0,0,0,0,0.43982359766960144,0.03436121717095375,0,-0.08246692270040512,-0.10995589941740036,0,0,0.0068722437135875225,0,0,-0.0068722437135875225,0,0.02748897485435009,0.02748897485435009,0,0,0,0,0,0.02061673067510128,0,-0.05497794970870018,0,0,0.21991179883480072,0.02748897485435009,0,0,-0.013744487427175045,0,0,0,0,0,0,0,0.05497794970870018,0.02061673067510128,0,0,-0.04123346135020256,0,0.02748897485435009,0.013744487427175045,0,0,-0.02061673067510128,0,0.10995589941740036,0.05497794970870018,0,-0.02748897485435009,-0.0068722437135875225,0,0,0.013744487427175045,0,-0.02748897485435009,-0.02061673067510128,0,0.08246692270040512,0.0068722437135875225,0,-0.02748897485435009,-0.0068722437135875225,0,0,0.013744487427175045,0,-0.02748897485435009,-0.013744487427175045,0,0,0.013744487427175045,0,0,-0.08933916687965393,0,0.02748897485435009,0,0,-0.05497794970870018,-0.013744487427175045,0,0.02748897485435009,0,0,-0.02748897485435009,-0.03436121717095375,0,0,0.22678403556346893,0,-0.02748897485435009,0,0,0,0.21991179883480072,0,0,-0.05497794970870018,0,0,0,0,-0.05497794970870018,-0.0068722437135875225,0,0.02748897485435009,0.013744487427175045,0,0,0,0,0,0.013744487427175045,0,0,-0.03436121717095375,0,0.10995589941740036,0.10995589941740036,0,-0.08246692270040512,0,0,0,0.013744487427175045,0,0,0,0,0.02748897485435009,0.03436121717095375,0,0,0,0,0.02748897485435009,0.02748897485435009,0,-0.02748897485435009,-0.0068722437135875225,0,0,0.05497794970870018,0,-0.02748897485435009,-0.013744487427175045,0,0.02748897485435009,0.0068722437135875225,0,-0.02748897485435009,-0.02061673067510128,0,0.02748897485435009,0.04810570552945137,0,-0.02748897485435009,-0.02061673067510128,0,0,0.02748897485435009,0,-0.02748897485435009,-0.013744487427175045,0,0,0.0068722437135875225,0,0,-0.0068722437135875225,0,0.02748897485435009,0.013744487427175045,0,-0.38484564423561096,-0.02748897485435009,0,0.02748897485435009,0.02061673067510128,0,-0.02748897485435009,-0.02061673067510128,0,0,0.0068722437135875225,0,0,-0.05497794970870018,0,0.02748897485435009,0,0,0,-0.0068722437135875225,0,0,0,0,0,-0.04123346135020256,0,0,0.12370038777589798,0,0,0,0,0.02748897485435009,0.10995589941740036,0,-0.10995589941740036,-0.02061673067510128,0,0,0.05497794970870018,0,-0.02748897485435009,-0.04123346135020256,0,0,0.0068722437135875225,0,-0.02748897485435009,0,0,0,0.013744487427175045,0,-0.02748897485435009,-0.013744487427175045,0,0.02748897485435009,0.0687224343419075,0,-0.02748897485435009,-0.013744487427175045,0,0,0,0,0,-0.013744487427175045,0,0,0.02748897485435009,0,-0.02748897485435009,-0.013744487427175045,0,0,0.02061673067510128,0,0,-0.013744487427175045,0,0,0.02748897485435009,0,-0.02748897485435009,-0.02061673067510128,0,0.02748897485435009,0,0,0,-0.0068722437135875225,0,0,0.03436121717095375,0,-0.05497794970870018,-0.1992950588464737,0,0,0.013744487427175045,0,-0.02748897485435009,-0.02061673067510128,0],"text":"<!-- Source: doc/prompts/user-prompt-ideas.md#‚öôÔ∏è Assembly Programming -->\n## ‚öôÔ∏è Assembly Programming\n\n- \"Assemble a short 6502 routine that changes the border colour every frame.\"\n- \"Inject this code into RAM at `$C000` and execute:\"\n  \n  ```assembly\n  LDA #$06\n  STA $D020\n  RTS\n  ```\n\n- \"Assemble and run a raster interrupt that flashes the screen every 50 Hz.\"\n- \"Disassemble memory from `$C000` to `$C050`.\"\n- \"Step through 10 instructions and show registers after each step.\"\n- \"Assemble a SID music player routine at `$1000`.\"\n- \"Assemble and export a `.prg` file from this source.\"\n\n---","sourcePath":"doc/prompts/user-prompt-ideas.md","sourceMtimeMs":1761504177142.4634,"origin":"doc/prompts/user-prompt-ideas.md#‚öôÔ∏è Assembly Programming"},{"name":"effects/sinewave.asm","language":"asm","vector":[0,0,0,0,-0.11585688591003418,0,0,0,0,0,0,0,0,0,0,-0.23171377182006836,0,0,0,0.05792844295501709,0,0,-0.11585688591003418,0,0,0,0,0,0,0,0,0,0,0,-0.17378532886505127,0,0,0.05792844295501709,0,0,0,0,0.4634275436401367,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.05792844295501709,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11585688591003418,0,0,0,0,0,-0.05792844295501709,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.05792844295501709,0,0,0.23171377182006836,0,0,0,0,0,0,0,0,-0.05792844295501709,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.23171377182006836,0,0,0,0,0,-0.23171377182006836,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.23171377182006836,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.23171377182006836,0,0,0.23171377182006836,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.05792844295501709,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.23171377182006836,0.11585688591003418,0,0,0,0,0,0,0,0,-0.11585688591003418,0,0,0,0,0,-0.11585688591003418,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.11585688591003418,0,-0.23171377182006836,0,0,0,0,0,0,0,0,0,0,0,0,-0.11585688591003418,0,0,0.11585688591003418,0,-0.23171377182006836,0,0,0,0,0,0,0,0,0,0,0,-0.23171377182006836,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.11585688591003418,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.05792844295501709,0,0,0,0,0,-0.05792844295501709,0],"text":"        *= $0801\n        LDA #$00\nLOOP    STA $D020\n        ADC #$01\n        JMP LOOP\n","sourcePath":"data/assembly/examples/effects/sinewave.asm","sourceMtimeMs":1761503116437.624},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.071.block_fill.asm","language":"asm","vector":[0.002819039858877659,0,0,0,-0.0035237998235970736,0,0.005638079717755318,0.007752359379082918,0,0,-0.0014095199294388294,0,0.002819039858877659,0.004228559788316488,0,0,-0.0007047599647194147,0,0.03664751723408699,0.011980919167399406,0,0,-0.0014095199294388294,0,0.002819039858877659,0.004933319520205259,0,0,0,0,0,0.0014095199294388294,0,0,-0.0014095199294388294,0,0,0.0014095199294388294,0,-0.002819039858877659,0,0,0,0.0014095199294388294,0,-0.002819039858877659,-0.007047599647194147,0,0,0.002819039858877659,0,0,0,0,0,0.002819039858877659,0,-0.008457119576632977,-0.0014095199294388294,0,0.011276159435510635,0,0,-0.002819039858877659,0,0,0.019733278080821037,0,0,0,-0.004228559788316488,0,0,0.0007047599647194147,0,0,-0.024666598066687584,0,0,0.0014095199294388294,0,-0.005638079717755318,-0.002819039858877659,0,0,0.019733278080821037,0,-0.008457119576632977,-0.010571399703621864,0,0,0,0,-0.008457119576632977,-0.004228559788316488,0,0,0.0014095199294388294,0,0,-0.0014095199294388294,0,0.019733278080821037,0.002819039858877659,0,0,-0.004228559788316488,0,0.005638079717755318,0.002114279894158244,0,0,-0.0014095199294388294,0,0,0.018323758617043495,0,-0.002819039858877659,-0.0007047599647194147,0,0,0.0035237998235970736,0,-0.008457119576632977,-0.0007047599647194147,0,0.04510463774204254,0.002114279894158244,0,-0.008457119576632977,0,0,0,0.004933319520205259,0,-0.002819039858877659,-0.0014095199294388294,0,0.008457119576632977,0.002114279894158244,0,-0.002819039858877659,-0.0014095199294388294,0,0.005638079717755318,0,0,0,0,0,0.8654452562332153,0,0,0,-0.004228559788316488,0,0.002819039858877659,0.006342839449644089,0,0,-0.004228559788316488,0,0.005638079717755318,0.011276159435510635,0,0,0,0,0,0.0014095199294388294,0,-0.033828478306531906,-0.0007047599647194147,0,0,0,0,-0.008457119576632977,-0.002819039858877659,0,0.014095199294388294,0,0,0,-0.004933319520205259,0,0,0,0,-0.002819039858877659,-0.016209479421377182,0,0.008457119576632977,0.0007047599647194147,0,-0.005638079717755318,-0.0014095199294388294,0,0.002819039858877659,0.019733278080821037,0,0,-0.004933319520205259,0,0.005638079717755318,0.002819039858877659,0,-0.005638079717755318,-0.002114279894158244,0,0.005638079717755318,0.0007047599647194147,0,0,-0.0014095199294388294,0,0,0.0014095199294388294,0,-0.005638079717755318,-0.004228559788316488,0,0,0.023257078602910042,0,0,-0.004228559788316488,0,0,0.009161879308521748,0,0,-0.0014095199294388294,0,0,0.004933319520205259,0,0,-0.0014095199294388294,0,0,0.002819039858877659,0,-0.011276159435510635,0,0,0.002819039858877659,0.43272262811660767,0,-0.002819039858877659,-0.0007047599647194147,0,0,0.0014095199294388294,0,0,-0.0007047599647194147,0,0,0.002819039858877659,0,-0.002819039858877659,0,0,0,0,0,0,-0.019028518348932266,0,0,0.002819039858877659,0,-0.005638079717755318,-0.004933319520205259,0,0,0.011980919167399406,0,-0.016914239153265953,0,0,0.002819039858877659,0,0,-0.005638079717755318,-0.0014095199294388294,0,0,0.004228559788316488,0,-0.002819039858877659,-0.004228559788316488,0,0.008457119576632977,0.0014095199294388294,0,-0.002819039858877659,-0.002114279894158244,0,0.008457119576632977,0.002819039858877659,0,0,-0.004933319520205259,0,0.019733278080821037,0.002819039858877659,0,0,0,0,0.008457119576632977,0.004933319520205259,0,0,-0.002819039858877659,0,0,0.0014095199294388294,0,0,0,0,0,0,0,0,-0.0007047599647194147,0,0.002819039858877659,0,0,-0.011276159435510635,-0.002114279894158244,0,0.005638079717755318,0.011276159435510635,0,0,-0.007752359379082918,0,0.005638079717755318,0.0014095199294388294,0,-0.002819039858877659,-0.002114279894158244,0,0,0.002114279894158244,0,0,-0.0007047599647194147,0,0,0.0014095199294388294,0,-0.002819039858877659,-0.0014095199294388294,0,0,0.21636131405830383,0,-0.047923676669597626,0,0,0.002819039858877659,0.0007047599647194147,0,-0.005638079717755318,-0.002819039858877659,0,0.039466556161642075,0.0014095199294388294,0,-0.019733278080821037,-0.008457119576632977,0,0,0.0014095199294388294,0,-0.008457119576632977,-0.011276159435510635,0],"text":"BasicUpstart2(main)\n\n// Constants ///////////////////////////////////////////////////////////////////\n\n.const SCREEN_LOCATION = $0400\n.const SCREEN_WIDTH    = 40\n.const SCREEN_HEIGHT   = 25\n\n.const FILL_START      = SCREEN_LOCATION\n.const FILL_END        = FILL_START + SCREEN_WIDTH * SCREEN_HEIGHT\n.const START_FILL_CODE = 0\n\n// Routine params //////////////////////////////////////////////////////////////\n\n* = ($100 - 4) virtual\n\nfill_start_lo: .byte 0\nfill_start_hi: .byte 0\nfill_end_lo:   .byte 0 // the fill_end address is not included in the copy\nfill_end_hi:   .byte 0 // ^^\n\n// Main ////////////////////////////////////////////////////////////////////////\n\n* = $080e\n\nmain:\n          lda #<FILL_END\n          sta fill_end_lo\n          lda #>FILL_END\n          sta fill_end_hi\n          ldx #START_FILL_CODE\n\n!fill_loop:\n          lda #<FILL_START\n          sta fill_start_lo\n          lda #>FILL_START\n          sta fill_start_hi\n\n          jsr block_fill\n\n          inx\n\n          clc\n          bcc !fill_loop-\n\n// Routine /////////////////////////////////////////////////////////////////////\n\nblock_fill:\n\n          ldy #0                 // 16-bit indirect is only supported by JMP, so we need to work this\n                                 // around...\n!fill_loop:\n          txa\n          sta (fill_start_lo), y // ...and use the indirect indexed mode\n          inc fill_start_lo      // 16-bit increment fill_start\n          bne check_end          // ^\n          inc fill_start_hi      // ^\ncheck_end:\n          lda fill_start_lo      // 16-bit comparison fill_start <> fill_end\n          cmp fill_end_lo        // ^\n          bne !fill_loop-        // ^\n          lda fill_start_hi      // ^\n          cmp fill_end_hi        // ^\n          bne !fill_loop-        // ^\n\n          rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.071.block_fill.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.071.block_fill.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.071.small_memory_fill.asm","language":"asm","vector":[0,0.001488431473262608,0,0,-0.002976862946525216,0,0.005953725893050432,0.009674804285168648,0,0,-0.004465294536203146,0,0.002976862946525216,0,0,-0.002976862946525216,-0.000744215736631304,0,0.0267917662858963,0.006697941571474075,0,-0.002976862946525216,-0.001488431473262608,0,0.002976862946525216,0.002976862946525216,0,0,-0.003721078624948859,0,0.002976862946525216,0.005209510214626789,0,0,-0.000744215736631304,0,0,0.002232647268101573,0,0,0,0,0,0,0,-0.002976862946525216,-0.002976862946525216,0,0,0,0,-0.002976862946525216,-0.002232647268101573,0,0.008930589072406292,0,0,-0.014884314499795437,-0.008930589072406292,0,0,0.001488431473262608,0,0,-0.000744215736631304,0,0.011907451786100864,0.000744215736631304,0,0,-0.009674804285168648,0,0,0.000744215736631304,0,0,-0.004465294536203146,0,0,0.003721078624948859,0,-0.005953725893050432,-0.002976862946525216,0,0,0.005209510214626789,0,-0.008930589072406292,-0.010419020429253578,0,0,0,0,-0.005953725893050432,0,0,0,0,0,-0.005953725893050432,-0.000744215736631304,0,0.017861178144812584,0.004465294536203146,0,-0.005953725893050432,0,0,0,0.002232647268101573,0,0,-0.001488431473262608,0,0,0.01339588314294815,0,-0.008930589072406292,-0.002232647268101573,0,0,0.002976862946525216,0,-0.005953725893050432,-0.002232647268101573,0,0.017861178144812584,0.001488431473262608,0,-0.008930589072406292,0,0,0,0.002232647268101573,0,-0.002976862946525216,0,0,0,0.000744215736631304,0,0,-0.002232647268101573,0,0.005953725893050432,0.000744215736631304,0,-0.002976862946525216,-0.001488431473262608,0,0.8692439794540405,0.004465294536203146,0,0,-0.007442157249897718,0,0,0,0,0,-0.000744215736631304,0,0.014884314499795437,0.005953725893050432,0,0,-0.000744215736631304,0,0.002976862946525216,0,0,-0.017861178144812584,-0.004465294536203146,0,0.005953725893050432,0.000744215736631304,0,-0.005953725893050432,-0.002976862946525216,0,0.0267917662858963,0,0,0,-0.008930589072406292,0,0,0,0,-0.002976862946525216,-0.005209510214626789,0,0.008930589072406292,0.001488431473262608,0,-0.005953725893050432,-0.004465294536203146,0,0.005953725893050432,0.011163235642015934,0,-0.008930589072406292,-0.007442157249897718,0,0.014884314499795437,0,0,-0.002976862946525216,0,0,0.008930589072406292,0,0,0,-0.004465294536203146,0,0,0.001488431473262608,0,-0.005953725893050432,-0.002976862946525216,0,0,0.009674804285168648,0,-0.002976862946525216,-0.005209510214626789,0,0,0.006697941571474075,0,0,-0.002232647268101573,0,0,0.000744215736631304,0,-0.002976862946525216,0,0,0.002976862946525216,0.003721078624948859,0,-0.002976862946525216,-0.001488431473262608,0,0.002976862946525216,0.43462198972702026,0,0,0,0,0.002976862946525216,0,0,0,-0.000744215736631304,0,0.002976862946525216,0.007442157249897718,0,-0.005953725893050432,-0.000744215736631304,0,0,0.003721078624948859,0,0,-0.012651667930185795,0,0,0.002976862946525216,0,-0.002976862946525216,-0.002976862946525216,0,0.005953725893050432,0.016372745856642723,0,0,0,0,0.002976862946525216,0,0,0,-0.001488431473262608,0,0,0.004465294536203146,0,-0.002976862946525216,-0.004465294536203146,0,0.005953725893050432,0.002976862946525216,0,-0.008930589072406292,-0.006697941571474075,0,0,0.007442157249897718,0,0,-0.002976862946525216,0,0.008930589072406292,0.004465294536203146,0,0,-0.001488431473262608,0,0.002976862946525216,0.004465294536203146,0,-0.002976862946525216,-0.004465294536203146,0,0.002976862946525216,0,0,0,-0.001488431473262608,0,0,0,0,0,-0.002232647268101573,0,0,0,0,-0.002976862946525216,-0.002976862946525216,0,0,0.005953725893050432,0,-0.002976862946525216,-0.003721078624948859,0,0,0.001488431473262608,0,-0.017861178144812584,-0.000744215736631304,0,0.002976862946525216,0.001488431473262608,0,0,0,0,0,0.002976862946525216,0,-0.017861178144812584,-0.003721078624948859,0,0,0.21731099486351013,0,-0.008930589072406292,0,0,0.005953725893050432,0,0,-0.005953725893050432,-0.001488431473262608,0,0.008930589072406292,0.006697941571474075,0,-0.017861178144812584,0,0,0,0.002232647268101573,0,0,-0.004465294536203146,0],"text":"BasicUpstart2(main)\n\n// Constants ///////////////////////////////////////////////////////////////////\n\n.const SCREEN_LOCATION = $0400\n.const SCREEN_WIDTH    = 40\n\n.const START_ADDR = SCREEN_LOCATION\n.const FILL_COUNT = SCREEN_WIDTH * 6\n\n// Routine params //////////////////////////////////////////////////////////////\n\n* = ($100 - 1) virtual\n\nfill_count: .byte 0\n\n// Main ////////////////////////////////////////////////////////////////////////\n\n* = $080e\n\nmain:\n          lda #0                  // start filling with 0\n\n!loop:\n          ldx #FILL_COUNT\n          jsr small_mem_fill\n\n          clc\n          adc #1\n\n          clc\n          bcc !loop-\n\n// Routine /////////////////////////////////////////////////////////////////////\n\n// Note that this routine does not support filling with a zero count (see below).\n//\nsmall_mem_fill:\n\n!loop:\n          sta START_ADDR - 1, x\n          dex\n          bne !loop-\n\n          rts\n\n// This version of the routine supports a zero count:\n\nsmall_mem_fill_supports_zero:\n          ldx #1\n          beq exit              // In x86, typically this would be a jump; here, we take advantage of\n                                // the fact that ldx affects the zero flag, and fall through if X is 0!\n!loop:\n          sta START_ADDR - 1, x\n          dex\n          bne !loop-\n\nexit:\n          rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.071.small_memory_fill.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.071.small_memory_fill.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.074.memory_copy.asm","language":"asm","vector":[0,0,0,0,-0.0013463844079524279,0,0.008078306913375854,0.010771075263619423,0,0,-0.0013463844079524279,0,0,0.0026927688159048557,0,-0.018849382176995277,-0.0053855376318097115,0,0.04846983775496483,0.015483420342206955,0,0,-0.006731922272592783,0,0,0.0033659611362963915,0,0,-0.0013463844079524279,0,0,0.0060587297193706036,0,0,-0.0026927688159048557,0,0,0.004039153456687927,0,-0.010771075263619423,0,0,0.0053855376318097115,0.0013463844079524279,0,-0.0026927688159048557,-0.01413703616708517,0,0.008078306913375854,0.0013463844079524279,0,-0.0026927688159048557,0,0,0,0.004039153456687927,0,-0.008078306913375854,-0.0033659611362963915,0,0.0053855376318097115,0.0013463844079524279,0,0,0,0,0.0296204574406147,0,0,-0.0026927688159048557,-0.0026927688159048557,0,0.0053855376318097115,0.0026927688159048557,0,0,-0.012117459438741207,0,0,0.0026927688159048557,0,-0.0026927688159048557,-0.007405114360153675,0,0.0053855376318097115,0.03231322765350342,0,-0.021542150527238846,-0.011444267816841602,0,0,0,0,-0.008078306913375854,-0.0053855376318097115,0,0,0.0013463844079524279,0,0,-0.0006731922039762139,0,0.013463844545185566,0.004039153456687927,0,0,0,0,0.021542150527238846,0.0013463844079524279,0,0,-0.010097882710397243,0,0,0.024234918877482414,0,0,-0.0006731922039762139,0,0,0.0033659611362963915,0,-0.010771075263619423,-0.0006731922039762139,0,0.04308430105447769,0.0013463844079524279,0,-0.01615661382675171,-0.0020195767283439636,0,0.0026927688159048557,0.0060587297193706036,0,-0.0026927688159048557,-0.007405114360153675,0,0.008078306913375854,0.0033659611362963915,0,-0.0053855376318097115,-0.0020195767283439636,0,0.01615661382675171,0.004712345544248819,0,-0.0053855376318097115,-0.0013463844079524279,0,0.8616860508918762,0.0006731922039762139,0,0,-0.004039153456687927,0,0.0026927688159048557,0.0026927688159048557,0,0,-0.0060587297193706036,0,0.008078306913375854,0.01481022872030735,0,-0.0053855376318097115,-0.0013463844079524279,0,0,0.004712345544248819,0,-0.04577707126736641,-0.0013463844079524279,0,0,0.0006731922039762139,0,0,-0.0013463844079524279,0,0.01615661382675171,0.0026927688159048557,0,0,-0.010771075263619423,0,0,0,0,-0.0053855376318097115,-0.010097882710397243,0,0.013463844545185566,0.0013463844079524279,0,-0.010771075263619423,-0.0033659611362963915,0,0.008078306913375854,0.02086895890533924,0,0,-0.0033659611362963915,0,0.018849382176995277,0.010771075263619423,0,-0.010771075263619423,-0.0026927688159048557,0,0.010771075263619423,0,0,0,0,0,0.0053855376318097115,0.0020195767283439636,0,-0.008078306913375854,-0.0053855376318097115,0,0.0053855376318097115,0.021542150527238846,0,0,-0.012790651991963387,0,0,0.013463844545185566,0,-0.0026927688159048557,-0.0013463844079524279,0,0,0.004039153456687927,0,0,-0.0026927688159048557,0,0,0.008078306913375854,0,-0.010771075263619423,-0.0026927688159048557,0,0.010771075263619423,0.4308430254459381,0,0,-0.0026927688159048557,0,0,0.0026927688159048557,0,-0.0026927688159048557,-0.0006731922039762139,0,0.01615661382675171,0.0060587297193706036,0,-0.018849382176995277,-0.0033659611362963915,0,0,0,0,0,-0.02490811236202717,0,0.0053855376318097115,0.0013463844079524279,0,-0.0026927688159048557,0,0,0,0.015483420342206955,0,0,-0.0006731922039762139,0,0.0053855376318097115,0.0013463844079524279,0,-0.0026927688159048557,-0.0026927688159048557,0,0,0.006731922272592783,0,-0.0026927688159048557,-0.0060587297193706036,0,0.013463844545185566,0.0053855376318097115,0,-0.0026927688159048557,-0.0053855376318097115,0,0.0053855376318097115,0.009424691088497639,0,-0.008078306913375854,-0.007405114360153675,0,0.024234918877482414,0.0053855376318097115,0,-0.008078306913375854,0,0,0.0026927688159048557,0.0060587297193706036,0,-0.0026927688159048557,-0.004039153456687927,0,0.0026927688159048557,0.008078306913375854,0,0,0,0,0.0026927688159048557,0,0,0,-0.0013463844079524279,0,0,0,0,-0.024234918877482414,-0.0026927688159048557,0,0,0.010771075263619423,0,0,-0.009424691088497639,0,0.008078306913375854,0.0060587297193706036,0,-0.0053855376318097115,-0.0006731922039762139,0,0.0026927688159048557,0.0020195767283439636,0,0,-0.0026927688159048557,0,0,0.012117459438741207,0,0,-0.010771075263619423,0,0,0.21542151272296906,0,-0.024234918877482414,0,0,0.0053855376318097115,0.0033659611362963915,0,-0.013463844545185566,-0.0013463844079524279,0,0.05654814466834068,0.0020195767283439636,0,-0.013463844545185566,-0.0013463844079524279,0,0,0.0026927688159048557,0,-0.010771075263619423,-0.012790651991963387,0],"text":"BasicUpstart2(main)\n\n// Constants ///////////////////////////////////////////////////////////////////\n\n.const SCREEN_LOCATION = $0400\n.const SCREEN_WIDTH    = 40\n.const SCREEN_HEIGHT   = 25\n\n// .const FILL_START      = SCREEN_LOCATION\n// .const FILL_END        = FILL_START + SCREEN_WIDTH * SCREEN_HEIGHT\n// .const START_FILL_CODE = 0\n\n// Copy upper half to lower half, excluding middle row.\n//\n.const COPY_SOURCE        = SCREEN_LOCATION\n.const COPY_BYTES         = 12 * SCREEN_WIDTH\n.const COPY_DEST          = SCREEN_LOCATION + (SCREEN_WIDTH * SCREEN_HEIGHT) - COPY_BYTES\n\n// Routine params //////////////////////////////////////////////////////////////\n\n* = ($100 - 6) virtual\n\nbytes_count_lo: .byte 0\nbytes_count_hi: .byte 0\ncopy_source_lo: .byte 0\ncopy_source_hi: .byte 0\ncopy_dest_lo:   .byte 0\ncopy_dest_hi:   .byte 0\n\n// Main ////////////////////////////////////////////////////////////////////////\n\n* = $080e\n\nmain:\n          lda #<COPY_SOURCE\n          sta copy_source_lo\n          lda #>COPY_SOURCE\n          sta copy_source_hi\n          lda #<COPY_DEST\n          sta copy_dest_lo\n          lda #>COPY_DEST\n          sta copy_dest_hi\n          lda #<COPY_BYTES\n          sta bytes_count_lo\n          lda #>COPY_BYTES\n          sta bytes_count_hi\n\n          jsr memory_copy\n\nhalt:\n          clc\n          bcc halt\n\n// Routine /////////////////////////////////////////////////////////////////////\n\nmemory_copy:\n          ldy #0\n\ncopy_byte:\n          lda (copy_source_lo), y\n          sta (copy_dest_lo), y\n\ndecr_bytes_count:\n          sec                      // (Slow) 16-bit decrement bytes_count; on SBC, carry set counts\n          lda bytes_count_lo       // as 0, and viceversa!!\n          sbc #1                   // ^\n          sta bytes_count_lo       // ^\n          lda bytes_count_hi       // ^\n          sbc #0                   // ^\n          sta bytes_count_hi       // ^\n\nincr_copy_source:\n          inc copy_source_lo       // 16-bit increment copy_source\n          bne incr_copy_dest\n          inc copy_source_hi\n\nincr_copy_dest:\n          inc copy_dest_lo         // 16-bit increment copy_dest\n          bne check_bytes_count\n          inc copy_dest_hi\n\ncheck_bytes_count:\n          lda bytes_count_lo\n          cmp #0                   // Redundant!\n          bne copy_byte\n          lda bytes_count_hi\n          cmp #0                   // Redundant!\n          bne copy_byte\n\n          rts\n\n// Besides check_bytes_count:, decr_bytes_count can be easily optimized:\n\ndecr_bytes_count_opt:\n          lda bytes_count_lo\n          bne !+                   // If the low byte is not zero, don't decrement the hi byte\n          dec bytes_count_hi\n!:        dec bytes_count_lo       // Always decrement the low byte\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.074.memory_copy.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.074.memory_copy.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.076.delays.asm","language":"asm","vector":[0,0.0013811480021104217,0,0,-0.0020717219449579716,0,0,0.013120905496180058,0,0,-0.0027622960042208433,0,0,0.0013811480021104217,0,-0.0027622960042208433,0,0,0.030385255813598633,0.004143443889915943,0,0,0,0,0,0,0,0,-0.0013811480021104217,0,0,0.0006905740010552108,0,0,-0.0006905740010552108,0,0,0.0006905740010552108,0,0,-0.0034528698306530714,0,0,0.0013811480021104217,0,-0.0027622960042208433,-0.005524592008441687,0,0.0027622960042208433,0.0013811480021104217,0,0,-0.005524592008441687,0,0,0.0013811480021104217,0,-0.019336070865392685,0,0,0,0.0013811480021104217,0,0,0,0,0,0.0027622960042208433,0,0,-0.016573775559663773,0,0,0.0027622960042208433,0,0,-0.020026644691824913,0,0,0.0013811480021104217,0,-0.0027622960042208433,-0.004143443889915943,0,0,0.013811479322612286,0,-0.013811479322612286,-0.006905739661306143,0,0,0,0,-0.008286887779831886,-0.0006905740010552108,0,0,0.004143443889915943,0,0,0,0,0.02762295864522457,0,0,-0.0027622960042208433,0,0,0.0027622960042208433,0,0,0,-0.0013811480021104217,0,0,0.015192627906799316,0,-0.005524592008441687,0,0,0.0027622960042208433,0.0034528698306530714,0,0,-0.0013811480021104217,0,0.022098368033766747,0.0006905740010552108,0,-0.011049184016883373,0,0,0.005524592008441687,0.0013811480021104217,0,-0.005524592008441687,0,0,0.011049184016883373,0,0,0,-0.0020717219449579716,0,0.0027622960042208433,0.0013811480021104217,0,0,0,0,0.8673608899116516,0,0,-0.016573775559663773,-0.011049184016883373,0,0.0027622960042208433,0.0006905740010552108,0,0,-0.0027622960042208433,0,0.008286887779831886,0.0006905740010552108,0,-0.005524592008441687,-0.0027622960042208433,0,0,0.0006905740010552108,0,-0.008286887779831886,0,0,0.005524592008441687,0.0006905740010552108,0,-0.008286887779831886,-0.0013811480021104217,0,0.02486066333949566,0,0,0,-0.013811479322612286,0,0,0,0,0,-0.013811479322612286,0,0.005524592008441687,0.0006905740010552108,0,0,-0.0020717219449579716,0,0,0.02071721851825714,0,0,-0.004834017716348171,0,0.0027622960042208433,0.0013811480021104217,0,-0.0027622960042208433,0,0,0.0027622960042208433,0,0,-0.0027622960042208433,-0.0027622960042208433,0,0,0.0013811480021104217,0,0,0,0,0,0.011049184016883373,0,0,-0.006215165834873915,0,0,0.01035860925912857,0,0,-0.0027622960042208433,0,0,0.005524592008441687,0,0,0,0,0.011049184016883373,0.0013811480021104217,0,-0.011049184016883373,0,0,0.011049184016883373,0.4336804449558258,0,-0.0027622960042208433,-0.008286887779831886,0,0,0.0013811480021104217,0,0,-0.0006905740010552108,0,0,0.004834017716348171,0,0,-0.0027622960042208433,0,0,0,0,-0.0027622960042208433,-0.008977461606264114,0,0.016573775559663773,0.0027622960042208433,0,0,-0.004143443889915943,0,0,0.01243033166974783,0,0,0,0,0,0,0,0,0,0,0,0.0027622960042208433,0,0,-0.0006905740010552108,0,0.013811479322612286,0,0,-0.005524592008441687,-0.0034528698306530714,0,0.0027622960042208433,0.0013811480021104217,0,0,-0.0034528698306530714,0,0.005524592008441687,0.0013811480021104217,0,0,-0.0013811480021104217,0,0,0.006905739661306143,0,-0.0027622960042208433,-0.0006905740010552108,0,0,0.0006905740010552108,0,0,0,0,0,0,0,-0.005524592008441687,-0.0013811480021104217,0,0.0027622960042208433,0.0006905740010552108,0,-0.011049184016883373,0,0,0.0027622960042208433,0.011049184016883373,0,-0.011049184016883373,-0.008286887779831886,0,0.0027622960042208433,0.006905739661306143,0,0,-0.0027622960042208433,0,0.0027622960042208433,0.0027622960042208433,0,0,0,0,0,0.0006905740010552108,0,-0.02762295864522457,0,0,0,0.2168402224779129,0,-0.03867214173078537,-0.005524592008441687,0,0.0027622960042208433,0.008977461606264114,0,-0.008286887779831886,0,0,0.02762295864522457,0.0020717219449579716,0,-0.013811479322612286,-0.0013811480021104217,0,0,0,0,0,-0.0020717219449579716,0],"text":"BasicUpstart2(main)\n\n// Routine params //////////////////////////////////////////////////////////////\n\n* = ($100 - 2) virtual\n\np_delay_count_lo: .byte $FF\np_delay_count_hi: .byte $FF\n\n// Main variables //////////////////////////////////////////////////////////////\n\n* = $080d\n\nv_delay_count_lo: .byte $FF\nv_delay_count_hi: .byte $FF\n\n// Main ////////////////////////////////////////////////////////////////////////\n\nmain:\n          lda v_delay_count_lo\n          sta p_delay_count_lo\n          lda v_delay_count_hi\n          sta p_delay_count_hi\n\n          jsr delay_16_bit_direct\n\n          ldx p_delay_count_lo\n\n          jsr delay_8_bit\n\n          ldy #0                     // optional (not present in the original) - makes the count exact\n          ldx p_delay_count_hi\n          jsr delay_16_bit_multiples\n\n          clc\n          bcc main\n\n// Routines ////////////////////////////////////////////////////////////////////\n\n// A very direct 16 bit decrease and comparison.\n//\ndelay_16_bit_direct:\n!loop:\n          lda p_delay_count_lo  // 16-bit decrease\n          sec                   // ^\n          sbc #1                // ^\n          sta p_delay_count_lo  // ^\n          lda p_delay_count_hi  // ^\n          sbc #0                // ^\n          sta p_delay_count_hi  // ^\n\n          lda p_delay_count_lo  // 16-bit comparison (against 0)\n          cmp #0                // ^\n          bne !loop-            // ^\n          lda p_delay_count_hi  // ^\n          cmp #0                // ^\n          bne !loop-            // ^\n\n          rts\n\n// An 8-bit decrease loop.\n//\ndelay_8_bit:\n!loop:\n          dex\n          bne !loop-\n          rts\n\n// A 16 bits loop that works on multiples of 256.\n//\ndelay_16_bit_multiples:\n!loop:\n          dey\n          bne !loop-\n          dex\n          bne !loop-\n          rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.076.delays.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.076.delays.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.080.fundamental_bomb_update.asm","language":"asm","vector":[0,0.002224142197519541,0,0,-0.0029655226971954107,0,0,0.005189665127545595,0,0,-0.0029655226971954107,0,0.0029655226971954107,0.0029655226971954107,0,0,-0.008896568790078163,0,0.02668970450758934,0.007413806859403849,0,0,-0.0029655226971954107,0,0,0.002224142197519541,0,0,0,0,0,0.006672426126897335,0,0,-0.0037069034297019243,0,0.0059310453943908215,0.0007413806742988527,0,-0.0029655226971954107,0,0,0,0,0,-0.0029655226971954107,-0.004448284395039082,0,0,0,0,-0.008896568790078163,-0.0029655226971954107,0,0,0.0014827613485977054,0,-0.011862090788781643,-0.008896568790078163,0,0,0.005189665127545595,0,0,0,0,0.02075866051018238,0.005189665127545595,0,0,-0.0014827613485977054,0,0.0029655226971954107,0.0037069034297019243,0,-0.0059310453943908215,-0.0059310453943908215,0,0.0029655226971954107,0.0014827613485977054,0,-0.0029655226971954107,-0.0029655226971954107,0,0,0.017793137580156326,0,-0.02668970450758934,-0.01334485225379467,0,0.0029655226971954107,0,0,-0.0029655226971954107,-0.0037069034297019243,0,0.011862090788781643,0,0,-0.0029655226971954107,-0.0014827613485977054,0,0.011862090788781643,0,0,-0.0059310453943908215,0,0,0.011862090788781643,0.002224142197519541,0,0,-0.0014827613485977054,0,0.0029655226971954107,0.014086233451962471,0,-0.0029655226971954107,-0.0007413806742988527,0,0,0.002224142197519541,0,-0.02075866051018238,-0.0014827613485977054,0,0.029655227437615395,0.0014827613485977054,0,-0.023724181577563286,-0.0007413806742988527,0,0.0029655226971954107,0.005189665127545595,0,-0.0059310453943908215,-0.0029655226971954107,0,0.0029655226971954107,0.0007413806742988527,0,0,-0.0014827613485977054,0,0.0029655226971954107,0.0014827613485977054,0,0,-0.005189665127545595,0,0.8659326434135437,0,0,0,-0.0059310453943908215,0,0.0029655226971954107,0,0,-0.0029655226971954107,-0.002224142197519541,0,0.017793137580156326,0.01037933025509119,0,-0.0059310453943908215,-0.0014827613485977054,0,0,0.002224142197519541,0,-0.02668970450758934,-0.007413806859403849,0,0.0029655226971954107,0.0029655226971954107,0,-0.0059310453943908215,-0.0014827613485977054,0,0.0029655226971954107,0.002224142197519541,0,0,-0.01334485225379467,0,0,0.002224142197519541,0,-0.029655227437615395,-0.004448284395039082,0,0.011862090788781643,0.006672426126897335,0,0,-0.0029655226971954107,0,0.0029655226971954107,0.014827613718807697,0,0,-0.00963794905692339,0,0.014827613718807697,0.0059310453943908215,0,-0.008896568790078163,-0.0007413806742988527,0,0.0029655226971954107,0.0014827613485977054,0,0,-0.0014827613485977054,0,0,0,0,0,-0.01037933025509119,0,0,0.015568994916975498,0,0,-0.011862090788781643,0,0,0.008155187591910362,0,0,-0.0029655226971954107,0,0.008896568790078163,0.0014827613485977054,0,0,0,0,0.0029655226971954107,0.0014827613485977054,0,-0.0059310453943908215,0,0,0.008896568790078163,0.43444907665252686,0,0,-0.0007413806742988527,0,0,0.0014827613485977054,0,0,-0.002224142197519541,0,0,0.008896568790078163,0,0,-0.005189665127545595,0,0,0,0,-0.008896568790078163,-0.016310375183820724,0,0,0.0014827613485977054,0,-0.0059310453943908215,-0.0029655226971954107,0,0,0.006672426126897335,0,0,0,0,0.0029655226971954107,0.0007413806742988527,0,-0.0059310453943908215,-0.016310375183820724,0,0.0029655226971954107,0.006672426126897335,0,-0.0029655226971954107,-0.0007413806742988527,0,0.008896568790078163,0.0014827613485977054,0,-0.0059310453943908215,-0.006672426126897335,0,0.0059310453943908215,0.008155187591910362,0,-0.0029655226971954107,-0.005189665127545595,0,0.008896568790078163,0.004448284395039082,0,-0.0059310453943908215,-0.0007413806742988527,0,0.0029655226971954107,0.0029655226971954107,0,0,-0.0014827613485977054,0,0.0059310453943908215,0.0029655226971954107,0,-0.0029655226971954107,0,0,0,0.0007413806742988527,0,0,-0.0007413806742988527,0,0,0.004448284395039082,0,-0.008896568790078163,-0.005189665127545595,0,0,0.008896568790078163,0,-0.0059310453943908215,-0.008896568790078163,0,0.0029655226971954107,0.005189665127545595,0,-0.017793137580156326,-0.0014827613485977054,0,0.0059310453943908215,0.0007413806742988527,0,0,0,0,0.008896568790078163,0.0007413806742988527,0,0,0,0,0.0029655226971954107,0.21648316085338593,0,-0.011862090788781643,-0.004448284395039082,0,0.0029655226971954107,0.0007413806742988527,0,-0.0059310453943908215,-0.0037069034297019243,0,0.03558627516031265,0.004448284395039082,0,-0.02668970450758934,-0.0014827613485977054,0,0,0.0014827613485977054,0,-0.0029655226971954107,-0.00963794905692339,0],"text":"BasicUpstart2(main)\n\n.const BOMB_CHAR = $2a  // `*` symbol\n.const BLANK_CHAR = $20 // space\n.const LINES_COUNT = 25\n.const LINE_SIZE = 40\n// Start from the end of the beforelast line ($07bf); the update routine processes the screen backwards.\n.const START_LOCATION = $0400 + (LINES_COUNT - 1) * LINE_SIZE - 1\n\n// Routine variables ///////////////////////////////////////////////////////////\n\n* = ($100 - 2) virtual\n\ncurrent_location_lo: .byte $FF\ncurrent_location_hi: .byte $FF\n\n// Main variables //////////////////////////////////////////////////////////////\n\ntotal_screen_updates: .byte LINES_COUNT - 1\n\n// Main ////////////////////////////////////////////////////////////////////////\n\n* = $080d\n\nmain:\n          jsr update_bomb\n\n          ldx total_screen_updates\n          dex\n          bne main\n\nhalt:\n          clc\n          bcc halt\n\n// Routines ////////////////////////////////////////////////////////////////////\n\nupdate_bomb:\nset_start_location:\n          lda #<START_LOCATION\n          sta current_location_lo\n          lda #>START_LOCATION\n          sta current_location_hi\n\n          ldy #0\n\nhandle_current_position:\n          lda (current_location_lo), y // Copy the character at position\n          cmp #BOMB_CHAR               // Bomb?\n          bne move_to_next_position\n\n          ldy #LINE_SIZE               // Move down one line\n          sta (current_location_lo), y // Copy to the position below\n\n          ldy #0                       // Move to the original position\n          lda #BLANK_CHAR\n          sta (current_location_lo), y // Overwrite!\n\nmove_to_next_position:\n          lda current_location_lo      // Move to previous screen location, via standard 16 bit decrement.\n          sec\n          sbc #1\n          sta current_location_lo\n          lda current_location_hi\n          sbc #0\n          sta current_location_hi\n\n          cmp #3                       // Out of screen ($03xx)?\n          bne handle_current_position\n\n          rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.080.fundamental_bomb_update.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.080.fundamental_bomb_update.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.081.hail_of_barbs.asm","language":"asm","vector":[0,0,0,0,0,0,0.03980542719364166,0.03980542719364166,0,0,-0.04975678771734238,0,0.07961085438728333,0,0,0,-0.029854072257876396,0,0.07961085438728333,0.07961085438728333,0,-0.03980542719364166,0,0,0,0,0,0,-0.11941628903150558,0,0,0.06965950131416321,0,0,0,0,0,0,0,-0.03980542719364166,-0.009951356798410416,0,0,0,0,0,-0.01990271359682083,0,0,0.01990271359682083,0,0,0,0,0,0,0,-0.07961085438728333,0,0,0,0.01990271359682083,0,0,0,0,0,0.009951356798410416,0,-0.03980542719364166,-0.01990271359682083,0,0,0.04975678771734238,0,0,-0.009951356798410416,0,0.07961085438728333,0.009951356798410416,0,0,-0.01990271359682083,0,0,0.21892985701560974,0,-0.23883257806301117,-0.05970814451575279,0,0.03980542719364166,0,0,0,-0.01990271359682083,0,0.03980542719364166,0,0,0,0,0,0.07961085438728333,0.01990271359682083,0,0,-0.01990271359682083,0,0,0.03980542719364166,0,0,0,0,0,0.03980542719364166,0,0,-0.01990271359682083,0,0,0.01990271359682083,0,0,-0.009951356798410416,0,0.07961085438728333,0,0,-0.23883257806301117,0,0,0,0.03980542719364166,0,0,-0.01990271359682083,0,0,0,0,0,-0.05970814451575279,0,0,0,0,0,0,0,0.27863800525665283,0,0,0,-0.03980542719364166,0,0.11941628903150558,0,0,0,0,0,0.1990271508693695,0.009951356798410416,0,-0.07961085438728333,-0.01990271359682083,0,0,0,0,0,0,0,0,0.04975678771734238,0,0,0,0,0,0,0,-0.11941628903150558,-0.1293676495552063,0,0,0.029854072257876396,0,-0.11941628903150558,0,0,0,0.01990271359682083,0,0,-0.009951356798410416,0,0,0.14927035570144653,0,0,-0.029854072257876396,0,0.27863800525665283,0,0,0,-0.009951356798410416,0,0,0,0,-0.03980542719364166,0,0,0,0.009951356798410416,0,-0.07961085438728333,0,0,0,0.05970814451575279,0,0,-0.11941628903150558,0,0,0.01990271359682083,0,0,-0.009951356798410416,0,0,0,0,0,0,0,0.03980542719364166,0,0,0,0,0,0.11941628903150558,0.13931900262832642,0,-0.03980542719364166,-0.009951356798410416,0,0.03980542719364166,0.05970814451575279,0,0,0,0,0,0.09951357543468475,0,0,-0.03980542719364166,0,0,0,0,0,-0.01990271359682083,0,0,0,0,0,0,0,0,0,0,-0.07961085438728333,-0.06965950131416321,0,0,0,0,0,-0.05970814451575279,0,0,0.01990271359682083,0,0,0,0,0.07961085438728333,0,0,-0.03980542719364166,-0.05970814451575279,0,0,0.14927035570144653,0,0,0,0,0.15922170877456665,0.009951356798410416,0,0,-0.01990271359682083,0,0,0.01990271359682083,0,-0.23883257806301117,-0.03980542719364166,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.03980542719364166,0.03980542719364166,0,0,-0.05970814451575279,0,0,0.05970814451575279,0,0,-0.01990271359682083,0,0.03980542719364166,0.01990271359682083,0,0,0,0,0,0,0,-0.03980542719364166,0,0,0.03980542719364166,0.06965950131416321,0,0,0,0,0,0.029854072257876396,0,-0.03980542719364166,0,0,0.4378597140312195,0.04975678771734238,0,-0.11941628903150558,-0.05970814451575279,0,0,0,0,-0.03980542719364166,0,0],"text":"// This is \"Fundamental Bomb Update\", with the (negligible) difference below.\n\n      sta $fb\n      lda #$07\n      sta $fc\nl033c:\n      ldy #0       // in the reference routine, this is outside (above) the loop, as it's\n                   // not necessary to update it.\n      lda ($fb), y\n      cmp #$24\n      bne l034e\n      ldy #$28\n      sta ($fb), y\n      ldy #0\n      lda #$20\n      sta ($fb), y\n\nl034e:\n      lda $fb\n      sec\n      sbc #1\n      sta $fb\n      lda $fc\n      sbc #0\n      sta $fc\n      cmp #3\n      bne l033c\n\n      rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.081.hail_of_barbs.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.081.hail_of_barbs.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.085.256_byte_continuous_scroll.asm","language":"asm","vector":[0,0.0027566624339669943,0,0,0,0,0.014702199958264828,0.005513324867933989,0,0,-0.003675549989566207,0,0.007351099979132414,0.0027566624339669943,0,-0.007351099979132414,-0.004594437777996063,0,0.025728849694132805,0.013783312402665615,0,0,-0.0027566624339669943,0,0,0,0,0,-0.0009188874973915517,0,0.003675549989566207,0.014702199958264828,0,0,-0.007351099979132414,0,0.003675549989566207,0.0009188874973915517,0,-0.007351099979132414,0,0,0.007351099979132414,0,0,-0.003675549989566207,-0.009188875555992126,0,0,0,0,0,-0.005513324867933989,0,0.007351099979132414,0.003675549989566207,0,-0.007351099979132414,0,0,0,0.007351099979132414,0,0,-0.0009188874973915517,0,0.003675549989566207,0.003675549989566207,0,0,-0.003675549989566207,0,0,0.003675549989566207,0,0,-0.006432212423533201,0,0,0.0018377749947831035,0,-0.003675549989566207,-0.0018377749947831035,0,0,0.014702199958264828,0,-0.025728849694132805,-0.029404399916529655,0,0,0.0009188874973915517,0,-0.003675549989566207,-0.011026649735867977,0,0,0,0,-0.003675549989566207,0,0,0.003675549989566207,0.007351099979132414,0,-0.003675549989566207,-0.0009188874973915517,0,0.003675549989566207,0.006432212423533201,0,-0.003675549989566207,-0.004594437777996063,0,0,0.013783312402665615,0,-0.011026649735867977,0,0,0,0.0018377749947831035,0,-0.003675549989566207,-0.0018377749947831035,0,0.022053299471735954,0.0027566624339669943,0,-0.025728849694132805,-0.0009188874973915517,0,0,0.007351099979132414,0,-0.007351099979132414,-0.003675549989566207,0,0,0.003675549989566207,0,-0.007351099979132414,-0.0018377749947831035,0,0.029404399916529655,0.003675549989566207,0,0,-0.0018377749947831035,0,0.8637542724609375,0.003675549989566207,0,0,-0.003675549989566207,0,0,0,0,-0.007351099979132414,-0.0027566624339669943,0,0.025728849694132805,0.0018377749947831035,0,0,-0.0018377749947831035,0,0.003675549989566207,0.0018377749947831035,0,-0.022053299471735954,0,0,0.003675549989566207,0.003675549989566207,0,0,-0.0018377749947831035,0,0.007351099979132414,0.0018377749947831035,0,0,-0.013783312402665615,0,0.003675549989566207,0.0009188874973915517,0,-0.011026649735867977,-0.004594437777996063,0,0.011026649735867977,0.0009188874973915517,0,-0.011026649735867977,-0.0027566624339669943,0,0,0.009188875555992126,0,-0.003675549989566207,-0.016539976000785828,0,0.029404399916529655,0.0018377749947831035,0,-0.014702199958264828,-0.005513324867933989,0,0.003675549989566207,0,0,0,-0.005513324867933989,0,0,0.003675549989566207,0,-0.014702199958264828,-0.0018377749947831035,0,0,0.012864424847066402,0,-0.007351099979132414,-0.014702199958264828,0,0,0.006432212423533201,0,0,-0.003675549989566207,0,0,0,0,-0.003675549989566207,-0.003675549989566207,0,0,0.01562108751386404,0,-0.007351099979132414,0,0,0.007351099979132414,0.43279603123664856,0,-0.003675549989566207,-0.0018377749947831035,0,0,0.0018377749947831035,0,0,-0.004594437777996063,0,0,0.012864424847066402,0,0,0,0,0.003675549989566207,0.003675549989566207,0,-0.014702199958264828,-0.012864424847066402,0,0,0.0018377749947831035,0,0,0,0,0,0.004594437777996063,0,-0.003675549989566207,0,0,0.011026649735867977,0.0018377749947831035,0,-0.003675549989566207,-0.005513324867933989,0,0.003675549989566207,0.005513324867933989,0,0,-0.006432212423533201,0,0.007351099979132414,0,0,-0.007351099979132414,-0.008269988000392914,0,0.003675549989566207,0.014702199958264828,0,-0.003675549989566207,-0.008269988000392914,0,0.022053299471735954,0.0018377749947831035,0,0,-0.0009188874973915517,0,0,0.0009188874973915517,0,0,-0.008269988000392914,0,0.014702199958264828,0.0009188874973915517,0,-0.007351099979132414,-0.004594437777996063,0,0,0,0,0,-0.0027566624339669943,0,0,0,0,-0.011026649735867977,-0.0027566624339669943,0,0,0.005513324867933989,0,-0.007351099979132414,-0.010107763111591339,0,0.007351099979132414,0.003675549989566207,0,0,-0.003675549989566207,0,0.014702199958264828,0,0,0,-0.0018377749947831035,0,0.007351099979132414,0.007351099979132414,0,-0.003675549989566207,0,0,0.003675549989566207,0.2177763432264328,0,-0.011026649735867977,-0.007351099979132414,0,0.003675549989566207,0,0,-0.003675549989566207,-0.0018377749947831035,0,0.029404399916529655,0.006432212423533201,0,-0.05880879983305931,-0.0018377749947831035,0,0,0.006432212423533201,0,-0.014702199958264828,-0.007351099979132414,0],"text":"BasicUpstart2(main)\n\n.const SCREEN_LOCATION = $0400\n\n// Routine params //////////////////////////////////////////////////////////////\n\n* = ($100 - 2) virtual\n\nstart_position_lo: .byte 0\nstart_position_hi: .byte 0\n\n// Main ////////////////////////////////////////////////////////////////////////\n\n* = $080d\n\nmain:\n          lda #<SCREEN_LOCATION\n          sta start_position_lo\n          lda #>SCREEN_LOCATION\n          sta start_position_hi\n\n          jsr continuous_scroll_256b_left\n          // jsr continuous_scroll_256b_right\n\n          clc\n          bcc main\n\n// Routines ////////////////////////////////////////////////////////////////////\n\n// Note that this logic loses one character in both cases; on the very first iteration, the byte at\n// start_position is overwritten with the subsequent; for a similar reason, the scrolled text will have\n// a duplicated character.\n// This is likely an intended strategy to keep the routine as simple as possible.\n//\n// The original code uses the X register as offset, which is the wrong indexing mode.\n\ncontinuous_scroll_256b_left:\n          ldy #0\n\nrotate_bytes_to_left:\n          iny                         // read from the following position\n          lda (start_position_lo), y\n          dey                         // write to the current position\n          sta (start_position_lo), y\n          iny                         // advance!\n          bne rotate_bytes_to_left\n\n          rts\n\ncontinuous_scroll_256b_right:\n          ldy #0\n\nrotate_bytes_to_right:\n          dey                         // read from the previous position\n          lda (start_position_lo), y\n          iny                         // write to the current position\n          sta (start_position_lo), y\n          dey                         // advance (backwards)!\n          bne rotate_bytes_to_right\n\n          rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.085.256_byte_continuous_scroll.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.085.256_byte_continuous_scroll.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.086.scroll_into_lower_memory.asm","language":"asm","vector":[0,0.000738473900128156,0,0,-0.001476947800256312,0,0.008861687034368515,0.008123212493956089,0,0,-0.0044308435171842575,0,0.01772337406873703,0.001476947800256312,0,0,-0.002953895600512624,0,0.03544674813747406,0.015507951378822327,0,-0.002953895600512624,-0.0022154217585921288,0,0,0.003692369442433119,0,0,-0.001476947800256312,0,0,0.0044308435171842575,0,0,-0.005907791201025248,0,0.002953895600512624,0.0022154217585921288,0,-0.002953895600512624,0,0,0,0.001476947800256312,0,-0.005907791201025248,-0.011077108792960644,0,0,0,0,-0.005907791201025248,-0.000738473900128156,0,0.002953895600512624,0.001476947800256312,0,-0.008861687034368515,-0.007384738884866238,0,0,0.005169317126274109,0,-0.005907791201025248,0,0,0.011815582402050495,0,0,-0.002953895600512624,-0.007384738884866238,0,0.011815582402050495,0.000738473900128156,0,0,-0.006646265275776386,0,0,0.001476947800256312,0,0,-0.002953895600512624,0,0.002953895600512624,0.019200321286916733,0,-0.011815582402050495,-0.013292530551552773,0,0,0,0,-0.005907791201025248,-0.007384738884866238,0,0.008861687034368515,0,0,0,0,0,0.011815582402050495,0.005169317126274109,0,0,0,0,0.008861687034368515,0.008861687034368515,0,-0.005907791201025248,0,0,0,0.01772337406873703,0,-0.002953895600512624,-0.001476947800256312,0,0.002953895600512624,0.002953895600512624,0,0,-0.0022154217585921288,0,0.032492849975824356,0.000738473900128156,0,-0.011815582402050495,0,0,0,0.008123212493956089,0,-0.002953895600512624,-0.001476947800256312,0,0.005907791201025248,0,0,0,-0.003692369442433119,0,0.02363116480410099,0,0,0,-0.005169317126274109,0,0.8654913902282715,0.001476947800256312,0,-0.002953895600512624,-0.0044308435171842575,0,0,0.000738473900128156,0,0,-0.007384738884866238,0,0.008861687034368515,0.005907791201025248,0,0,-0.001476947800256312,0,0,0.006646265275776386,0,-0.026585061103105545,-0.0022154217585921288,0,0.002953895600512624,0.0022154217585921288,0,-0.005907791201025248,0,0,0.008861687034368515,0.001476947800256312,0,0,-0.005907791201025248,0,0,0,0,-0.011815582402050495,-0.005907791201025248,0,0.008861687034368515,0.005169317126274109,0,-0.008861687034368515,-0.001476947800256312,0,0.014769477769732475,0.015507951378822327,0,0,-0.006646265275776386,0,0.01772337406873703,0.0044308435171842575,0,-0.005907791201025248,-0.0044308435171842575,0,0.008861687034368515,0,0,0,-0.001476947800256312,0,0,0.003692369442433119,0,-0.008861687034368515,0,0,0,0.020677268505096436,0,-0.002953895600512624,-0.005907791201025248,0,0,0.008861687034368515,0,-0.011815582402050495,-0.0022154217585921288,0,0.002953895600512624,0.002953895600512624,0,0,0,0,0,0.011815582402050495,0,-0.02953895553946495,0,0,0.002953895600512624,0.43348416686058044,0,-0.002953895600512624,-0.0022154217585921288,0,0,0,0,0,-0.001476947800256312,0,0,0.0044308435171842575,0,0,-0.001476947800256312,0,0,0.000738473900128156,0,-0.01772337406873703,-0.015507951378822327,0,0,0.001476947800256312,0,0,-0.0044308435171842575,0,0.002953895600512624,0.007384738884866238,0,0,-0.000738473900128156,0,0,0.002953895600512624,0,0,-0.005907791201025248,0,0,0.0044308435171842575,0,0,-0.0044308435171842575,0,0.011815582402050495,0.008123212493956089,0,-0.008861687034368515,-0.002953895600512624,0,0.002953895600512624,0.008861687034368515,0,0,-0.0044308435171842575,0,0.026585061103105545,0.006646265275776386,0,0,0,0,0,0.002953895600512624,0,-0.002953895600512624,-0.0044308435171842575,0,0,0.0022154217585921288,0,-0.008861687034368515,-0.002953895600512624,0,0,0,0,0,-0.006646265275776386,0,0.002953895600512624,0.0022154217585921288,0,-0.01772337406873703,0,0,0,0.008123212493956089,0,0,-0.01772337406873703,0,0.002953895600512624,0.001476947800256312,0,-0.008861687034368515,-0.0022154217585921288,0,0.008861687034368515,0.001476947800256312,0,0,0,0,0,0.005907791201025248,0,0,0,0,0,0.21637284755706787,0,-0.011815582402050495,-0.009600160643458366,0,0.002953895600512624,0,0,-0.005907791201025248,0,0,0.038400642573833466,0.003692369442433119,0,-0.026585061103105545,0,0,0,0,0,-0.005907791201025248,-0.006646265275776386,0],"text":"BasicUpstart2(main)\n\n.const SCREEN_LOCATION = $0400\n.const START_POSITION = SCREEN_LOCATION\n.const STOP_POSITION = SCREEN_LOCATION + 40 * 25 - 1 // see note below\n\n// Routine variables ///////////////////////////////////////////////////////////\n\n* = ($100 - 6) virtual\n\ncurrent_position_lo: .byte 0\ncurrent_position_hi: .byte 0\n\n// Routine params //////////////////////////////////////////////////////////////\n\nstart_position_lo: .byte 0\nstart_position_hi: .byte 0\nstop_position_lo:  .byte 0 // This is the last position copied lower\nstop_position_hi:  .byte 0\n\n// Main ////////////////////////////////////////////////////////////////////////\n\n* = $080d\n\nmain:\n          lda #<START_POSITION\n          sta start_position_lo\n          lda #>START_POSITION\n          sta start_position_hi\n          lda #<STOP_POSITION\n          sta stop_position_lo\n          lda #>STOP_POSITION\n          sta stop_position_hi\n\n          jsr scroll_into_lower_memory\n\nhalt:\n          clc\n          bcc halt\n\n// Routines ////////////////////////////////////////////////////////////////////\n\n// This is similar to `continuous_scroll_256b_left`, with the differences:\n//\n// 1. in order to scroll more than 256 bytes, it increases the start position instead of the Y register\n// 2. it doesn't wrap around, because there is no Y register wraparound\n\nscroll_into_lower_memory:\n          ldy #0\n\nrotate_bytes_to_left:\n          iny                         // read from the following position\n          lda (start_position_lo), y\n          dey                         // write to the current position\n          sta (start_position_lo), y\n\n          inc start_position_lo       // 16-bit increment\n          bne !+                      // ^\n          inc start_position_hi       // ^\n!:\n          lda start_position_lo       // 16-bit comparison with stop position\n          cmp stop_position_lo\n          bne rotate_bytes_to_left\n          lda start_position_hi\n          cmp stop_position_hi\n          bne rotate_bytes_to_left\n\n          rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.086.scroll_into_lower_memory.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.086.scroll_into_lower_memory.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.087.line_blank.asm","language":"asm","vector":[0,0,0,0,-0.0014160872669890523,0,0.005664349067956209,0.004248261451721191,0,0,-0.0028321745339781046,0,0.01416087243705988,0.0028321745339781046,0,0,-0.0028321745339781046,0,0.02832174487411976,0.014868916012346745,0,0,-0.0028321745339781046,0,0,0.004956305492669344,0,0,0,0,0,0.004248261451721191,0,0,-0.0007080436334945261,0,0,0.0007080436334945261,0,0,-0.0014160872669890523,0,0.0028321745339781046,0,0,-0.0028321745339781046,-0.008496522903442383,0,0,0,0,-0.0028321745339781046,0,0,0.0028321745339781046,0,0,-0.008496522903442383,-0.0028321745339781046,0,0,0.0014160872669890523,0,0,0,0,0.011328698135912418,0.0007080436334945261,0,0,-0.007788479793816805,0,0.008496522903442383,0.0014160872669890523,0,0,-0.018409134820103645,0,0.0028321745339781046,0.0014160872669890523,0,0,-0.0028321745339781046,0,0,0.03823435679078102,0,-0.011328698135912418,-0.008496522903442383,0,0,0,0,-0.005664349067956209,-0.004956305492669344,0,0,0,0,0,-0.0007080436334945261,0,0.008496522903442383,0.005664349067956209,0,0,0,0,0.0028321745339781046,0.00708043621852994,0,0,0,0,0.0028321745339781046,0.01416087243705988,0,0,0,0,0,0.0021241307258605957,0,0,-0.0014160872669890523,0,0.03115391917526722,0.0014160872669890523,0,-0.011328698135912418,0,0,0.0028321745339781046,0.004956305492669344,0,-0.0028321745339781046,-0.0007080436334945261,0,0.005664349067956209,0.0014160872669890523,0,0,-0.0014160872669890523,0,0.01416087243705988,0.0007080436334945261,0,0,-0.0014160872669890523,0,0.8638132214546204,0.0014160872669890523,0,-0.01416087243705988,-0.004956305492669344,0,0,0,0,0,-0.004248261451721191,0,0.008496522903442383,0.005664349067956209,0,0,0,0,0,0.004248261451721191,0,-0.03398609161376953,-0.0014160872669890523,0,0,0.0021241307258605957,0,-0.005664349067956209,0,0,0,0,0,0,-0.005664349067956209,0,0,0,0,-0.011328698135912418,-0.012036741711199284,0,0.019825221970677376,0.0007080436334945261,0,-0.005664349067956209,-0.0014160872669890523,0,0.019825221970677376,0.023365439847111702,0,0,-0.004248261451721191,0,0.011328698135912418,0.0014160872669890523,0,-0.0028321745339781046,-0.0014160872669890523,0,0.0028321745339781046,0.0014160872669890523,0,0,0,0,0,0.0014160872669890523,0,0,0,0,0,0.01911717839539051,0,0,-0.005664349067956209,0,0,0.008496522903442383,0,0,-0.0014160872669890523,0,0,0.0028321745339781046,0,0,0,0,0.0028321745339781046,0.00708043621852994,0,-0.03115391917526722,0,0,0.005664349067956209,0.4319066107273102,0,0,-0.00708043621852994,0,0,0.0007080436334945261,0,0,-0.0007080436334945261,0,0,0.004248261451721191,0,0,-0.0007080436334945261,0,0,0.0007080436334945261,0,-0.008496522903442383,-0.01911717839539051,0,0,0,0,-0.0028321745339781046,-0.0028321745339781046,0,0.011328698135912418,0.0028321745339781046,0,0,0,0,0,0.0021241307258605957,0,0,-0.005664349067956209,0,0,0.010620654560625553,0,0,-0.0028321745339781046,0,0.008496522903442383,0.009912610985338688,0,-0.005664349067956209,-0.0028321745339781046,0,0.005664349067956209,0.005664349067956209,0,0,-0.0028321745339781046,0,0.019825221970677376,0.0014160872669890523,0,-0.0028321745339781046,0,0,0,0.0021241307258605957,0,0,0,0,0.0028321745339781046,0.0007080436334945261,0,0,0,0,0,0.0007080436334945261,0,-0.0028321745339781046,0,0,0,0,0,-0.016993045806884766,0,0,0,0.009204567410051823,0,0,-0.018409134820103645,0,0,0.00354021810926497,0,-0.005664349067956209,-0.0007080436334945261,0,0.0028321745339781046,0.0014160872669890523,0,0,0,0,0,0.00354021810926497,0,0,0,0,0,0.2159533053636551,0,-0.03681826964020729,-0.007788479793816805,0,0.0028321745339781046,0,0,-0.005664349067956209,-0.0014160872669890523,0,0.07646871358156204,0.007788479793816805,0,-0.016993045806884766,0,0,0,0,0,-0.005664349067956209,-0.008496522903442383,0],"text":"BasicUpstart2(main)\n\n.const SCREEN_LOCATION = $0400\n.const START_POSITION = SCREEN_LOCATION + 1\n.const STOP_POSITION = START_POSITION + 25 * 40 // see note below\n.const BLANK_CHAR = $20                         // space\n\n// Routine variables ///////////////////////////////////////////////////////////\n\n* = ($100 - 6) virtual\n\ncurrent_position_lo: .byte 0\ncurrent_position_hi: .byte 0\n\n// Routine params //////////////////////////////////////////////////////////////\n\nstart_position_lo: .byte 0\nstart_position_hi: .byte 0\nstop_position_lo:  .byte 0 // Must = start_position + 40 * lines\nstop_position_hi:  .byte 0\n\n// Main ////////////////////////////////////////////////////////////////////////\n\n* = $080d\n\nmain:\n          lda #<START_POSITION\n          sta start_position_lo\n          lda #>START_POSITION\n          sta start_position_hi\n          lda #<STOP_POSITION\n          sta stop_position_lo\n          lda #>STOP_POSITION\n          sta stop_position_hi\n\n          jsr line_blank\n\nhalt:\n          clc\n          bcc halt\n\n// Routines ////////////////////////////////////////////////////////////////////\n\n// The routine blanks a *vertical* line.\n\nline_blank:\n          lda start_position_lo\n          sta current_position_lo\n          lda start_position_hi\n          sta current_position_hi\n\n          ldy #0\nblank_cycle:\n          lda #BLANK_CHAR              // blank the current position\n          sta (current_position_lo), y // ^\n\n          clc                          // 16-bit addition of 40 (go to the position below)\n          lda current_position_lo      // ^\n          adc #40                      // ^\n          sta current_position_lo      // ^\n          lda current_position_hi      // ^\n          adc #0                       // ^\n          sta current_position_hi      // ^\n\n          lda current_position_lo      // 16-bit comparison with the end position\n          cmp stop_position_lo         // ^\n          bne blank_cycle              // ^\n          lda current_position_hi      // ^\n          cmp stop_position_hi         // ^\n          bne blank_cycle\n\n          rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.087.line_blank.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.087.line_blank.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.090.joystick_handling.asm","language":"asm","vector":[0.00500463554635644,0.00125115888658911,0,0,-0.006255794316530228,0,0,0.00125115888658911,0,0,-0.003753476543352008,0,0.01000927109271288,0.00250231777317822,0,-0.01000927109271288,-0.00500463554635644,0,0.02001854218542576,0.05129751190543175,0,0,0,0,0.00500463554635644,0.015013906173408031,0,0,-0.008758111856877804,0,0,0.043790560215711594,0,0,-0.00125115888658911,0,0,0.00250231777317822,0,0,-0.00125115888658911,0,0.00500463554635644,0.00250231777317822,0,-0.00500463554635644,-0.008758111856877804,0,0,0,0,-0.00500463554635644,0,0,0,0,0,-0.01000927109271288,-0.02252085879445076,0,0.00500463554635644,0.008758111856877804,0,0,0,0,0.015013906173408031,0,0,0,-0.00125115888658911,0,0,0.00250231777317822,0,0,-0.012511588633060455,0,0,0,0,-0.015013906173408031,0,0,0,0.015013906173408031,0,-0.02001854218542576,-0.012511588633060455,0,0,0.00500463554635644,0,0,-0.003753476543352008,0,0.00500463554635644,0.00250231777317822,0,0,0,0,0.00500463554635644,0,0,-0.00500463554635644,0,0,0.04504171758890152,0.00500463554635644,0,0,-0.00500463554635644,0,0,0.01000927109271288,0,0,-0.00125115888658911,0,0,0.00250231777317822,0,0,-0.00125115888658911,0,0.04003708437085152,0.00125115888658911,0,-0.02001854218542576,0,0,0,0.02502317726612091,0,-0.00500463554635644,0,0,0.00500463554635644,0.006255794316530228,0,0,-0.00500463554635644,0,0,0.00125115888658911,0,0,-0.00250231777317822,0,0.8407787084579468,0,0,-0.015013906173408031,-0.00500463554635644,0,0,0.003753476543352008,0,0,-0.003753476543352008,0,0.02001854218542576,0.007506953086704016,0,0,0,0,0.015013906173408031,0,0,-0.02502317726612091,-0.01126042939722538,0,0.00500463554635644,0.00125115888658911,0,-0.015013906173408031,-0.007506953086704016,0,0.00500463554635644,0,0,-0.00500463554635644,-0.01000927109271288,0,0,0,0,-0.02001854218542576,-0.006255794316530228,0,0.00500463554635644,0.00250231777317822,0,0,0,0,0.030027812346816063,0.008758111856877804,0,-0.015013906173408031,-0.008758111856877804,0,0.16515296697616577,0.023772018030285835,0,-0.00500463554635644,0,0,0.01000927109271288,0.00125115888658911,0,-0.00500463554635644,0,0,0,0,0,-0.00500463554635644,0,0,0,0.02252085879445076,0,0,-0.012511588633060455,0,0,0.00500463554635644,0,0,-0.00250231777317822,0,0.02502317726612091,0.003753476543352008,0,0,0,0,0,0,0,-0.00500463554635644,0,0,0.01000927109271288,0.4203893542289734,0,0,-0.007506953086704016,0,0,0.00125115888658911,0,0,-0.00125115888658911,0,0.01000927109271288,0.01000927109271288,0,0,-0.00125115888658911,0,0.01000927109271288,0.007506953086704016,0,-0.015013906173408031,-0.015013906173408031,0,0,0.003753476543352008,0,0,-0.007506953086704016,0,0,0.006255794316530228,0,0,-0.00250231777317822,0,0,0,0,0,-0.01000927109271288,0,0,0.00250231777317822,0,-0.00500463554635644,-0.003753476543352008,0,0,0.015013906173408031,0,-0.00500463554635644,-0.012511588633060455,0,0.00500463554635644,0.08257648348808289,0,0,-0.00250231777317822,0,0.10009270906448364,0.006255794316530228,0,0,-0.00250231777317822,0,0.015013906173408031,0.00125115888658911,0,-0.01000927109271288,-0.003753476543352008,0,0.00500463554635644,0.01126042939722538,0,0,0,0,0,0,0,0,0,0,0.00500463554635644,0.012511588633060455,0,-0.015013906173408031,0,0,0,0.01000927109271288,0,0,-0.007506953086704016,0,0,0.00500463554635644,0,-0.04504171758890152,-0.00125115888658911,0,0.00500463554635644,0.00125115888658911,0,0,0,0,0,0.00500463554635644,0,0,0,0,0,0.2151993215084076,0,-0.02502317726612091,-0.01126042939722538,0,0,0,0,0,0,0,0.02502317726612091,0.00500463554635644,0,-0.02502317726612091,0,0,0.00500463554635644,0.003753476543352008,0,0,-0.006255794316530228,0],"text":"BasicUpstart2(main)\n\n.const JOY_1_POS_ADDR  = $dc01\n.const SPRITE_0_X_ADDR = $d000\n.const SPRITE_0_Y_ADDR = $d001\n\n// Main ////////////////////////////////////////////////////////////////////////\n\n* = $080d\n\n// 16 pairs; each pair represents the (x, y) displacement (255 = -1).\n// The first 5 and last 1 couples are never used.\n//\njoystick_mapping: .byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n                  .byte 1, 1, 1, 255, 1, 0, 0, 0, 255, 1, 255, 255, 255, 0, 0, 0, 0, 1, 0, 255\n                  .byte 0, 0\n\nmain:\n          jsr handle_joystick       // Best hooked to interrupt\n\n          clc\n          bcc main\n\n// Routines ////////////////////////////////////////////////////////////////////\n\nhandle_joystick:\n\n        lda JOY_1_POS_ADDR          // get joystick #1 position\n        and #15                     // isolate meaningful bytes\n        asl                         // multiply by 2 (each position is associated to two values)\n        tax\n\n        lda joystick_mapping, x     // lookup x displacement\n        clc\n        adc SPRITE_0_X_ADDR         // add displacement to sprite #0 x\n        sta SPRITE_0_X_ADDR\n\n        lda joystick_mapping + 1, x // lookup y displacement\n        clc\n        adc SPRITE_0_Y_ADDR         // add displacement to sprite #0 y\n        sta SPRITE_0_Y_ADDR\n\n        rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.090.joystick_handling.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.090.joystick_handling.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.092.inverting.asm","language":"asm","vector":[0.003559958888217807,0.0008899897220544517,0,0,-0.006229928229004145,0,0.003559958888217807,0.01245985645800829,0,0,-0.003559958888217807,0,0.021359752863645554,0.0017799794441089034,0,-0.007119917776435614,-0.004449948668479919,0,0.04271950572729111,0.006229928229004145,0,-0.003559958888217807,-0.0017799794441089034,0,0,0.008899897336959839,0,0,-0.0008899897220544517,0,0,0.014239835552871227,0,-0.007119917776435614,-0.0008899897220544517,0,0,0.0008899897220544517,0,0,-0.005339938215911388,0,0,0,0,-0.003559958888217807,-0.007119917776435614,0,0.003559958888217807,0,0,0,0,0,0.007119917776435614,0,0,-0.014239835552871227,-0.003559958888217807,0,0.010679876431822777,0.0017799794441089034,0,0,0,0,0.02491971291601658,0.003559958888217807,0,-0.003559958888217807,-0.008899897336959839,0,0,0.0017799794441089034,0,-0.003559958888217807,-0.008899897336959839,0,0,0.003559958888217807,0,-0.014239835552871227,0,0,0,0.019579773768782616,0,-0.02491971291601658,-0.016909804195165634,0,0,0,0,-0.007119917776435614,-0.00800990778952837,0,0,0.0017799794441089034,0,0,-0.0008899897220544517,0,0.03915954753756523,0.0017799794441089034,0,0,0,0,0.010679876431822777,0.010679876431822777,0,0,-0.003559958888217807,0,0,0.021359752863645554,0,-0.007119917776435614,-0.002669969107955694,0,0,0.004449948668479919,0,0,-0.0017799794441089034,0,0.035599589347839355,0.0008899897220544517,0,-0.021359752863645554,-0.003559958888217807,0,0.003559958888217807,0.0017799794441089034,0,-0.003559958888217807,0,0,0.014239835552871227,0,0,0,-0.0017799794441089034,0,0.03203963115811348,0.005339938215911388,0,-0.003559958888217807,0,0,0.8615100383758545,0.003559958888217807,0,-0.007119917776435614,-0.008899897336959839,0,0,0.005339938215911388,0,0,-0.002669969107955694,0,0.007119917776435614,0.01245985645800829,0,0,-0.0017799794441089034,0,0,0,0,-0.035599589347839355,-0.003559958888217807,0,0.003559958888217807,0.0008899897220544517,0,-0.017799794673919678,-0.007119917776435614,0,0.014239835552871227,0.0008899897220544517,0,0,-0.013349846005439758,0,0,0,0,-0.017799794673919678,-0.00800990778952837,0,0.010679876431822777,0.0017799794441089034,0,-0.007119917776435614,0,0,0.035599589347839355,0.028479671105742455,0,-0.003559958888217807,-0.00800990778952837,0,0.028479671105742455,0.005339938215911388,0,-0.003559958888217807,-0.002669969107955694,0,0.003559958888217807,0.0008899897220544517,0,-0.007119917776435614,-0.003559958888217807,0,0,0.0008899897220544517,0,-0.007119917776435614,0,0,0,0.02313973382115364,0,0,-0.01245985645800829,0,0,0.01245985645800829,0,0,-0.002669969107955694,0,0,0.007119917776435614,0,0,0,0,0.007119917776435614,0.01601981557905674,0,-0.028479671105742455,-0.003559958888217807,0,0.007119917776435614,0.43075501918792725,0,0,-0.003559958888217807,0,0,0,0,0,-0.0008899897220544517,0,0.007119917776435614,0.004449948668479919,0,-0.003559958888217807,0,0,0,0.0017799794441089034,0,-0.010679876431822777,-0.021359752863645554,0,0,0.004449948668479919,0,-0.003559958888217807,-0.008899897336959839,0,0,0.013349846005439758,0,0,-0.0008899897220544517,0,0,0,0,0,-0.009789886884391308,0,0,0.005339938215911388,0,-0.003559958888217807,-0.007119917776435614,0,0.017799794673919678,0.017799794673919678,0,-0.007119917776435614,-0.00800990778952837,0,0.003559958888217807,0.014239835552871227,0,0,-0.003559958888217807,0,0.007119917776435614,0.0017799794441089034,0,0,-0.003559958888217807,0,0,0.009789886884391308,0,0,-0.003559958888217807,0,0.014239835552871227,0.002669969107955694,0,0,0,0,0,0,0,-0.007119917776435614,-0.0017799794441089034,0,0,0,0,-0.010679876431822777,0,0,0,0.01245985645800829,0,0,-0.019579773768782616,0,0,0.004449948668479919,0,-0.007119917776435614,-0.0008899897220544517,0,0.003559958888217807,0.003559958888217807,0,0,0,0,0.003559958888217807,0.01156986691057682,0,-0.003559958888217807,-0.002669969107955694,0,0,0.21537750959396362,0,-0.017799794673919678,-0.007119917776435614,0,0.007119917776435614,0,0,0,-0.0017799794441089034,0,0.035599589347839355,0.0017799794441089034,0,-0.03203963115811348,0,0,0,0,0,-0.010679876431822777,-0.008899897336959839,0],"text":"BasicUpstart2(main)\n\n.const SCREEN_LOCATION = $0400\n.const START_POSITION = SCREEN_LOCATION\n.const STOP_POSITION = START_POSITION + 25 * 40\n.const INVERT_VALUE = 128                       // MSB set\n\n// Routine params //////////////////////////////////////////////////////////////\n\n* = ($100 - 2) virtual\n\nstart_position_lo: .byte 0\nstart_position_hi: .byte 0\n\n// Main ////////////////////////////////////////////////////////////////////////\n\n* = $080d\n\n// Works better if hooked to the interrupt, or at least with a delay.\n//\nmain:\n          lda #<START_POSITION\n          sta start_position_lo\n          lda #>START_POSITION\n          sta start_position_hi\n\n          jsr inverting_16b\n          // jsr inverting_8b\n\n          clc\n          bcc main\n\n// Routines ////////////////////////////////////////////////////////////////////\n\n// Version supporting a 16-bit interval.\n//\ninverting_16b:\n          ldx #0\n\ninvert_char:\n          lda (start_position_lo, x) // load the char\n          eor #INVERT_VALUE          // ^ invert it\n          sta (start_position_lo, x) // ^ and store it\n\n          inc start_position_lo      // 16-bit increment of the position\n          bne !+\n          inc start_position_hi\n\n!:        lda start_position_hi      // 16-bit comparison of the end position\n          cmp #>STOP_POSITION        // the MS byte is compared first, as it's less likely to change\n          bne invert_char\n          lda start_position_lo\n          cmp #<STOP_POSITION\n          bne invert_char\n\n          rts\n\n// Version limited to an 8-bit interval.\n// If we change the loop to be decreasing, we spare the comparison.\n//\ninverting_8b:\n          ldx #0\n!:\n          lda (start_position_lo, x)\n          eor #INVERT_VALUE\n          sta (start_position_lo, x)\n\n          inx\n\n          cpx #40                    // number of bytes to invert\n          bne !-\n\n          rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.092.inverting.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.092.inverting.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.094.attribute_flasher.asm","language":"asm","vector":[0,0,0,0,0,0,0,0.010376693680882454,0,-0.007546686101704836,-0.001886671525426209,0,0.007546686101704836,0.0028300073463469744,0,-0.003773343050852418,-0.0009433357627131045,0,0.041506774723529816,0.011320029385387897,0,-0.007546686101704836,-0.008490022271871567,0,0,0.011320029385387897,0,0,-0.0009433357627131045,0,0,0.023583395406603813,0,-0.003773343050852418,-0.0028300073463469744,0,0,0.0009433357627131045,0,-0.007546686101704836,-0.00943335797637701,0,0,0,0,-0.003773343050852418,-0.016980044543743134,0,0,0.001886671525426209,0,0,-0.0009433357627131045,0,0.003773343050852418,0,0,-0.011320029385387897,-0.010376693680882454,0,0.003773343050852418,0,0,0,0,0,0.03396008908748627,0,0,0,-0.0009433357627131045,0,0,0.0009433357627131045,0,0,-0.007546686101704836,0,0,0.01981005072593689,0,0,-0.0028300073463469744,0,0,0.043393444269895554,0,-0.015093372203409672,-0.013206700794398785,0,0.003773343050852418,0,0,-0.003773343050852418,-0.001886671525426209,0,0,0,0,0,0,0,0.022640058770775795,0,0,0,-0.003773343050852418,0,0.007546686101704836,0.003773343050852418,0,-0.007546686101704836,-0.001886671525426209,0,0,0.020753387361764908,0,-0.003773343050852418,-0.003773343050852418,0,0,0.003773343050852418,0,0,-0.0009433357627131045,0,0.06792017817497253,0.0009433357627131045,0,-0.01886671595275402,-0.001886671525426209,0,0.022640058770775795,0.004716678988188505,0,-0.003773343050852418,-0.006603350397199392,0,0,0.001886671525426209,0,0,-0.001886671525426209,0,0.003773343050852418,0,0,-0.003773343050852418,0,0,0.8490021824836731,0.001886671525426209,0,-0.015093372203409672,-0.007546686101704836,0,0,0.001886671525426209,0,0,-0.007546686101704836,0,0.015093372203409672,0.017923379316926003,0,0,0,0,0.011320029385387897,0,0,-0.04528011754155159,-0.004716678988188505,0,0,0,0,0,0,0,0.011320029385387897,0,0,0,-0.007546686101704836,0,0.003773343050852418,0.001886671525426209,0,-0.003773343050852418,-0.004716678988188505,0,0.007546686101704836,0,0,-0.011320029385387897,0,0,0.030186744406819344,0.03207341581583023,0,-0.003773343050852418,-0.006603350397199392,0,0.09433358162641525,0.003773343050852418,0,-0.011320029385387897,-0.004716678988188505,0,0.003773343050852418,0,0,-0.022640058770775795,-0.001886671525426209,0,0,0,0,-0.007546686101704836,-0.001886671525426209,0,0,0.035846758633852005,0,-0.003773343050852418,-0.010376693680882454,0,0,0.021696722134947777,0,-0.003773343050852418,-0.003773343050852418,0,0,0,0,0,0,0,0,0.001886671525426209,0,-0.003773343050852418,-0.0028300073463469744,0,0.003773343050852418,0.42450109124183655,0,-0.007546686101704836,-0.00943335797637701,0,0.07924020290374756,0,0,-0.011320029385387897,-0.0009433357627131045,0,0.007546686101704836,0.007546686101704836,0,0,0,0,0,0.006603350397199392,0,0,-0.0254700668156147,0,0,0.0009433357627131045,0,0,0,0,0,0.014150036498904228,0,0,0,0,0,0.001886671525426209,0,0,-0.001886671525426209,0,0,0.003773343050852418,0,0,-0.005660014692693949,0,0.015093372203409672,0.015093372203409672,0,-0.003773343050852418,-0.005660014692693949,0,0.003773343050852418,0.048110123723745346,0,0,-0.006603350397199392,0,0.01886671595275402,0.001886671525426209,0,-0.011320029385387897,-0.011320029385387897,0,0.007546686101704836,0.005660014692693949,0,0,-0.003773343050852418,0,0,0.001886671525426209,0,0,-0.003773343050852418,0,0,0,0,-0.007546686101704836,-0.0028300073463469744,0,0,0,0,-0.030186744406819344,0,0,0.003773343050852418,0.016980044543743134,0,0,-0.006603350397199392,0,0,0.007546686101704836,0,-0.01886671595275402,-0.004716678988188505,0,0,0.03962010145187378,0,0,-0.005660014692693949,0,0,0.004716678988188505,0,0,-0.0009433357627131045,0,0,0.21225054562091827,0,-0.011320029385387897,-0.003773343050852418,0,0,0,0,0,0,0,0.08301354944705963,0.003773343050852418,0,-0.02641340158879757,0,0,0,0.0028300073463469744,0,-0.003773343050852418,-0.011320029385387897,0],"text":"BasicUpstart2(main)\n\n.const SCREEN_LOCATION = $0400\n.const START_POSITION = SCREEN_LOCATION - 1     // WATCH OUT THE -1!\n.const SCREEN_LINES = 25\n.const SCREEN_COLUMNS = 40\n.const INVERT_VALUE = 128                       // MSB set\n.const WAIT_COUNT = 60\n\n// Use in invert_table.\n//\n.const INV = 255\n.const NOINV = 0\n\n// Routine variables ///////////////////////////////////////////////////////////\n\n* = ($100 - 3) virtual\n\ncurrent_position_lo: .byte 0\ncurrent_position_hi: .byte 0\ncounter:             .byte 0\n\n// Main ////////////////////////////////////////////////////////////////////////\n\n* = $080d\n\ninvert_table:\n              .byte NOINV, NOINV, NOINV, NOINV, NOINV\n              .byte NOINV, NOINV, NOINV, NOINV, NOINV\n              .byte NOINV, NOINV, NOINV, NOINV, NOINV\n              .byte NOINV, NOINV, NOINV, NOINV, NOINV\n              .byte INV, INV, INV, INV, INV\n\n// Works better if hooked to the interrupt.\n//\nmain:\n          lda #WAIT_COUNT\n          sta counter\n\n!:\n          jsr attribute_flasher\n\n          clc\n          bcc !-\n\n// Routines ////////////////////////////////////////////////////////////////////\n\n// X holds the line counter\n// Y holds the column counter\n//\nattribute_flasher:\n          dec counter\n          bne return\n          lda #WAIT_COUNT\n\n          lda #<START_POSITION\n          sta current_position_lo\n          lda #>START_POSITION\n          sta current_position_hi\n\n          ldx #SCREEN_LINES\n\ntest_invert_line:\n          ldy #SCREEN_COLUMNS\n          lda invert_table - 1, x          // x is in [1, SCREEN_LINES]\n          cmp #INV\n          bne increment_line\n\ninvert_line:\n          lda (current_position_lo), y\n          eor #INVERT_VALUE\n          sta (current_position_lo), y\n          dey\n          bne invert_line\n\nincrement_line:\n          clc\n          lda current_position_lo\n          adc #SCREEN_COLUMNS\n          sta current_position_lo\n          lda current_position_hi\n          adc #0\n          sta current_position_hi\n\n          dex\n          bne test_invert_line\n\nreturn:\n          rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.094.attribute_flasher.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.094.attribute_flasher.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.094b.alternative_sprite_system.asm","language":"asm","vector":[0,0.0021262140944600105,0,0,-0.0014174761017784476,0,0.0028349522035568953,0.008504856377840042,0,0,-0.0049611665308475494,0,0.008504856377840042,0.0014174761017784476,0,-0.0028349522035568953,-0.0007087380508892238,0,0.045359235256910324,0.014883498661220074,0,0,-0.0021262140944600105,0,0,0.011339808814227581,0,0,-0.0014174761017784476,0,0,0.015592237003147602,0,0,-0.0028349522035568953,0,0,0.0007087380508892238,0,-0.0028349522035568953,-0.0007087380508892238,0,0.011339808814227581,0.0021262140944600105,0,-0.0028349522035568953,-0.017009712755680084,0,0.011339808814227581,0,0,-0.008504856377840042,0,0,0,0,0,-0.011339808814227581,-0.011339808814227581,0,0,0.004252428188920021,0,-0.0028349522035568953,-0.0021262140944600105,0,0.022679617628455162,0.0028349522035568953,0,-0.0028349522035568953,-0.009922333061695099,0,0,0.004252428188920021,0,0,-0.004252428188920021,0,0,0.0014174761017784476,0,-0.0056699044071137905,-0.004252428188920021,0,0.0056699044071137905,0.025514569133520126,0,-0.011339808814227581,-0.022679617628455162,0,0,0,0,-0.0028349522035568953,-0.0056699044071137905,0,0.008504856377840042,0.0007087380508892238,0,0,-0.0014174761017784476,0,0.0056699044071137905,0.0014174761017784476,0,-0.0028349522035568953,-0.0021262140944600105,0,0.0028349522035568953,0.0049611665308475494,0,-0.0028349522035568953,-0.0014174761017784476,0,0.0028349522035568953,0.02338835597038269,0,-0.019844666123390198,0,0,0,0.0014174761017784476,0,-0.0028349522035568953,-0.0021262140944600105,0,0.039689332246780396,0.0007087380508892238,0,-0.008504856377840042,0,0,0.0056699044071137905,0.006378642283380032,0,-0.0028349522035568953,-0.0014174761017784476,0,0,0.00921359471976757,0,0,-0.0014174761017784476,0,0.0056699044071137905,0.007796118501573801,0,0,-0.0049611665308475494,0,0.8618254661560059,0,0,-0.0056699044071137905,-0.0056699044071137905,0,0,0,0,0,-0.007796118501573801,0,0.0056699044071137905,0.011339808814227581,0,-0.0028349522035568953,-0.0014174761017784476,0,0.011339808814227581,0,0,-0.025514569133520126,-0.0049611665308475494,0,0.0028349522035568953,0.0014174761017784476,0,-0.0056699044071137905,-0.0028349522035568953,0,0.022679617628455162,0.004252428188920021,0,-0.0028349522035568953,-0.010631070472300053,0,0,0,0,-0.0028349522035568953,-0.0028349522035568953,0,0.008504856377840042,0.0049611665308475494,0,-0.008504856377840042,-0.0014174761017784476,0,0.017009712755680084,0.015592237003147602,0,-0.0056699044071137905,-0.012757284566760063,0,0.045359235256910324,0.0014174761017784476,0,-0.0056699044071137905,-0.0021262140944600105,0,0.0028349522035568953,0.0014174761017784476,0,-0.0028349522035568953,-0.009922333061695099,0,0.008504856377840042,0.0007087380508892238,0,-0.017009712755680084,-0.0014174761017784476,0,0,0.021970879286527634,0,0,-0.0049611665308475494,0,0,0.01417476125061512,0,-0.0056699044071137905,-0.0014174761017784476,0,0.0056699044071137905,0,0,-0.008504856377840042,0,0,0,0.0028349522035568953,0,0,0,0,0.017009712755680084,0.43091273307800293,0,-0.0056699044071137905,-0.00354369031265378,0,0,0.0028349522035568953,0,-0.0056699044071137905,-0.0007087380508892238,0,0,0.0056699044071137905,0,0,-0.00354369031265378,0,0,0.0056699044071137905,0,-0.017009712755680084,-0.015592237003147602,0,0.0028349522035568953,0.0014174761017784476,0,-0.0056699044071137905,-0.00354369031265378,0,0,0.017009712755680084,0,-0.008504856377840042,-0.0021262140944600105,0,0.0028349522035568953,0,0,0,-0.0014174761017784476,0,0.0028349522035568953,0.004252428188920021,0,0,-0.0056699044071137905,0,0.0056699044071137905,0.009922333061695099,0,-0.008504856377840042,-0.0056699044071137905,0,0.0028349522035568953,0.022679617628455162,0,0,-0.00354369031265378,0,0.025514569133520126,0.00354369031265378,0,0,-0.0014174761017784476,0,0.01417476125061512,0.0056699044071137905,0,0,-0.00921359471976757,0,0.008504856377840042,0.0007087380508892238,0,-0.0028349522035568953,-0.0007087380508892238,0,0,0.0007087380508892238,0,0,-0.007796118501573801,0,0,0.0028349522035568953,0,-0.025514569133520126,-0.0049611665308475494,0,0,0.009922333061695099,0,0,-0.0021262140944600105,0,0,0.009922333061695099,0,-0.019844666123390198,-0.00354369031265378,0,0.0056699044071137905,0,0,0,-0.0028349522035568953,0,0.0056699044071137905,0.0014174761017784476,0,-0.019844666123390198,0,0,0,0.21545636653900146,0,-0.0056699044071137905,-0.009922333061695099,0,0.0028349522035568953,0.0014174761017784476,0,-0.0056699044071137905,-0.0028349522035568953,0,0.05102913826704025,0.0014174761017784476,0,-0.045359235256910324,-0.0049611665308475494,0,0,0.004252428188920021,0,-0.0028349522035568953,-0.006378642283380032,0],"text":"BasicUpstart2(main)\n\n.const SCREEN_LOCATION = $0400\n.const SPRITE_POSITION = SCREEN_LOCATION + 1\n.const BLANK_CHAR = $20\n.const STOP_VALUE = 0          // To be used in `table`\n\n// Routine variables ///////////////////////////////////////////////////////////\n\n* = 2 virtual\n\ndelete_flag: .byte 0           // anything other than zero erases the char\n\n* = ($100 - 4) virtual\n\ncurrent_addr_lo: .byte 0\ncurrent_addr_hi: .byte 0\n\n// Routine params ///////////////////////////////////////////////////////////\n\nstart_addr_lo: .byte 0\nstart_addr_hi: .byte 0\n\n// Main ////////////////////////////////////////////////////////////////////////\n\n* = $080d\n\n// The encoding alternates sprite char and displacement of the next position; ends with STOP_VALUE.\n//\n// Encoded example sprite:\n//\n//    X\n//   /%\\\n//   \"\"\"\n//\ntable:  .byte 86, 39\n        .byte 78, 1, 37, 1, 77, 38\n        .byte 34, 1, 34, 1, 34, 1\n        .byte STOP_VALUE\n\nmain:\n        lda #0\n        sta delete_flag\n        lda #<SPRITE_POSITION\n        sta start_addr_lo\n        lda #>SPRITE_POSITION\n        sta start_addr_hi\n\n        jsr draw_sprite\n\n!:\n        clc\n        bcc !-\n\n// Routines ////////////////////////////////////////////////////////////////////\n\ndraw_sprite:\n        lda start_addr_lo\n        sta current_addr_lo\n        lda start_addr_hi\n        sta current_addr_hi\n\n        ldx #0                   // x is the table index; alternates chars and displacements\n        ldy #0                   // not an index!! only used for comparison with the delete flag\n\n        lda table, x             // load the char\nwrite_char:\n        cpy delete_flag\n        beq !+\n        lda #BLANK_CHAR\n!:\n        sta (current_addr_lo), y // Y is not significant; it just recycles the 0 above\n\ncompute_new_position:\n        inx                      // odd bytes in the tables are the displacements\n        clc\n        lda current_addr_lo      // add the displacement to the current_address\n        adc table, x\n        sta current_addr_lo\n        lda current_addr_hi\n        adc #0\n        sta current_addr_hi\n\nload_next_char:\n        inx\n        lda table, x\n        bne write_char           // proceed until the char value is 0\n\n        rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.094b.alternative_sprite_system.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.094b.alternative_sprite_system.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.102.sprite_vectoring.asm","language":"asm","vector":[0.0026877066120505333,0.0013438533060252666,0,0,0,0,0,0.010750826448202133,0,-0.0026877066120505333,-0.0026877066120505333,0,0.005375413224101067,0,0,-0.010750826448202133,0,0,0.053754132241010666,0.010750826448202133,0,-0.005375413224101067,-0.0013438533060252666,0,0,0.005375413224101067,0,-0.0026877066120505333,-0.0040315599180758,0,0.010750826448202133,0.010750826448202133,0,0,-0.0013438533060252666,0,0,0.0013438533060252666,0,0,-0.0013438533060252666,0,0.0080631198361516,0.0013438533060252666,0,-0.0026877066120505333,-0.00470348633825779,0,0,0.0020157799590379,0,0,-0.0026877066120505333,0,0.01881394535303116,0.0013438533060252666,0,-0.01881394535303116,-0.010078899562358856,0,0,0.0026877066120505333,0,0,-0.0013438533060252666,0,0.013438533060252666,0.0033596332650631666,0,-0.005375413224101067,-0.0020157799590379,0,0.0026877066120505333,0.0033596332650631666,0,0,-0.0080631198361516,0,0.0080631198361516,0,0,-0.005375413224101067,-0.0080631198361516,0,0,0.02956477180123329,0,-0.024189358577132225,-0.013438533060252666,0,0,0.006719266530126333,0,-0.005375413224101067,-0.0013438533060252666,0,0.0026877066120505333,0.0013438533060252666,0,-0.0026877066120505333,0,0,0.02956477180123329,0,0,-0.0080631198361516,-0.0020157799590379,0,0.0026877066120505333,0.0026877066120505333,0,-0.021501652896404266,-0.005375413224101067,0,0,0.026877066120505333,0,-0.0080631198361516,-0.0026877066120505333,0,0,0.0026877066120505333,0,-0.0026877066120505333,-0.0026877066120505333,0,0.04569101333618164,0.005375413224101067,0,-0.024189358577132225,0,0,0.0026877066120505333,0.0033596332650631666,0,0,-0.0006719266530126333,0,0.005375413224101067,0.00470348633825779,0,0,-0.0033596332650631666,0,0.0026877066120505333,0.0006719266530126333,0,-0.0026877066120505333,-0.0006719266530126333,0,0.8600661158561707,0.010078899562358856,0,0,-0.010078899562358856,0,0.0161262396723032,0.0006719266530126333,0,-0.0026877066120505333,-0.0013438533060252666,0,0.03762789070606232,0.007391192950308323,0,-0.005375413224101067,-0.0040315599180758,0,0.005375413224101067,0.0020157799590379,0,-0.04569101333618164,-0.0040315599180758,0,0.005375413224101067,0.0040315599180758,0,0,-0.0033596332650631666,0,0.021501652896404266,0.0006719266530126333,0,0,-0.01276660617440939,0,0,0.0006719266530126333,0,0,-0.006047339644283056,0,0.0161262396723032,0.0013438533060252666,0,0,-0.00470348633825779,0,0.0161262396723032,0.028220918029546738,0,0,-0.010750826448202133,0,0.03762789070606232,0.00470348633825779,0,0,-0.01142275333404541,0,0,0.0006719266530126333,0,0,-0.0040315599180758,0,0,0,0,-0.0080631198361516,-0.0020157799590379,0,0.0026877066120505333,0.024189358577132225,0,0,-0.014782385900616646,0,0,0.014782385900616646,0,-0.0080631198361516,-0.0013438533060252666,0,0.010750826448202133,0.0026877066120505333,0,0,-0.0006719266530126333,0,0.0080631198361516,0.0040315599180758,0,-0.0026877066120505333,-0.0013438533060252666,0,0.0080631198361516,0.4300330579280853,0,-0.005375413224101067,0,0,0,0.010078899562358856,0,-0.005375413224101067,-0.0020157799590379,0,0.010750826448202133,0.01881394535303116,0,0,-0.0026877066120505333,0,0,0.007391192950308323,0,0,-0.02754899300634861,0,0,0.0026877066120505333,0,0,0,0,0,0.014110459014773369,0,-0.0026877066120505333,-0.0013438533060252666,0,0,0.0006719266530126333,0,0,0,0,0,0.010078899562358856,0,0,-0.0013438533060252666,0,0.010750826448202133,0.0080631198361516,0,-0.005375413224101067,-0.006047339644283056,0,0,0.01881394535303116,0,0,-0.0013438533060252666,0,0.013438533060252666,0.0006719266530126333,0,-0.0026877066120505333,-0.0006719266530126333,0,0.0026877066120505333,0.007391192950308323,0,-0.0080631198361516,-0.006047339644283056,0,0.0026877066120505333,0.0020157799590379,0,-0.0026877066120505333,-0.005375413224101067,0,0.0026877066120505333,0,0,-0.0026877066120505333,-0.006047339644283056,0,0.0026877066120505333,0.005375413224101067,0,-0.005375413224101067,-0.0006719266530126333,0,0.0026877066120505333,0.015454312786459923,0,-0.005375413224101067,-0.007391192950308323,0,0.0026877066120505333,0.00470348633825779,0,-0.0161262396723032,-0.0026877066120505333,0,0,0.0013438533060252666,0,-0.0026877066120505333,-0.0026877066120505333,0,0.0026877066120505333,0.006047339644283056,0,-0.0026877066120505333,-0.0006719266530126333,0,0.0026877066120505333,0.21501652896404266,0,-0.013438533060252666,0,0,0,0.0040315599180758,0,-0.013438533060252666,-0.0006719266530126333,0,0.053754132241010666,0.00940697267651558,0,-0.026877066120505333,-0.0026877066120505333,0,0.013438533060252666,0.0013438533060252666,0,-0.0026877066120505333,-0.01142275333404541,0],"text":"BasicUpstart2(main)\n\n.const SPRITE_COORDINATES    = $d000 // 53248\n.const SPRITE_SHAPE_POINTERS = $07f8 // 2040\n.const SPRITES_ENABLE_STATE  = $d015 // 53269\n.const INTERRUPT_VECTOR      = $0314 // 788\n.const SERVICE_ROUTINE       = $ea31 // 59953\n\n// Variables ///////////////////////////////////////////////////////////////////\n\n* = $334 virtual\n\n// array (x, y)\nsprite_vectors: .fill 16, 0\nsprite_vectors_end:\n\n* = $3c0 virtual\n\nsprite_shape_data: .fill 63, 0\nsprite_shape_data_end:\n\n// Main ////////////////////////////////////////////////////////////////////////\n\n* = $081d\n\nmain:\n        jsr set_sprite_pointers\n        jsr set_sprites_shapes_data\n        jsr preset_rnd\n        jsr set_sprite_vectors\n        jsr hook_interrupt\n        jsr enable_sprites\n\n        rts\n\n// Core routine ////////////////////////////////////////////////////////////////\n\nsprite_vectoring:\n        ldx #0\n\nmove_sprite_cycle:\n        lda sprite_vectors, x\n        clc\n        adc SPRITE_COORDINATES, x\n        sta SPRITE_COORDINATES, x\n        inx\n        cpx #(sprite_vectors_end - sprite_vectors)\n        bne move_sprite_cycle\n\n        jmp SERVICE_ROUTINE\n\n// Helper routines /////////////////////////////////////////////////////////////\n\nset_sprite_pointers:\n        lda #(sprite_shape_data / 64)\n        ldy #((sprite_vectors_end - sprite_vectors) / 2)\n!:      dey\n        sta SPRITE_SHAPE_POINTERS, y\n        bne !-\n\n        rts\n\nset_sprites_shapes_data:\n        lda #255\n        ldy #(sprite_shape_data_end - sprite_shape_data)\n\n!:      dey\n        sta sprite_shape_data, y\n        bne !-\n\n        rts\n\n// See https://www.atarimagazines.com/compute/issue72/random_numbers.php\n//\npreset_rnd:\n        lda #$ff  // maximum frequency value\n        sta $d40e // voice 3 frequency low byte\n        sta $d40f // voice 3 frequency high byte\n        lda #$80  // noise waveform, gate bit off\n        sta $d412 // voice 3 control register\n\n        rts\n\n// Waste some cycles, since a new value is generated every 26 cycles.\n// See https://www.lemon64.com/forum/viewtopic.php?t=70039.\n//\nget_rnd:\n        lda #10\n!:      sec\n        sbc #1\n        bcs !-\n        lda $d41b\n\n        rts\n\nset_sprite_vectors:\n        ldy #(sprite_vectors_end - sprite_vectors)\n\n!:      jsr get_rnd            // Generate values in the interval [1, 4]\n        and #3\n        clc\n        adc #1\n\n        dey\n        sta sprite_vectors, y\n        bne !-\n\n        rts\n\nhook_interrupt:\n        lda #<sprite_vectoring\n        sta INTERRUPT_VECTOR\n        lda #>sprite_vectoring\n        sta INTERRUPT_VECTOR + 1\n\n        rts\n\nenable_sprites:\n        lda #$ff\n        sta SPRITES_ENABLE_STATE\n\n        rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.102.sprite_vectoring.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/10.102.sprite_vectoring.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.115.window_projection.asm","language":"asm","vector":[0.008061387576162815,0.007053713779896498,0,0,0,0,0.008061387576162815,0.005038367118686438,0,-0.0040306937880814075,-0.0040306937880814075,0,0.02418416179716587,0.005038367118686438,0,0,-0.0020153468940407038,0,0.03224555030465126,0.014107427559792995,0,0,0,0,0,0,0,0,0,0,0,0.0020153468940407038,0,0,0,0,0,0.0020153468940407038,0,-0.008061387576162815,-0.0040306937880814075,0,0,0,0,-0.0040306937880814075,-0.008061387576162815,0,0,0.0020153468940407038,0,0,-0.0040306937880814075,0,0,0.0040306937880814075,0,-0.008061387576162815,-0.0020153468940407038,0,0,0,0,0,0,0,0.012092080898582935,0,0,0,-0.0040306937880814075,0,0,0.003023020224645734,0,0,-0.012092080898582935,0,0,0,0,0,0,0,0,0.02015346847474575,0,-0.02418416179716587,-0.006046040449291468,0,0,0,0,-0.02015346847474575,0,0,0,0.006046040449291468,0,0,0,0,0.008061387576162815,0.0040306937880814075,0,0,-0.0020153468940407038,0,0,0.012092080898582935,0,0,0,0,0,0.019145794212818146,0,-0.008061387576162815,0,0,0,0.0020153468940407038,0,0,-0.0010076734470203519,0,0.03224555030465126,0.0020153468940407038,0,-0.02015346847474575,0,0,0,0.006046040449291468,0,0,-0.0040306937880814075,0,0.008061387576162815,0,0,0,-0.0020153468940407038,0,0.012092080898582935,0,0,0,0,0,0.8665991425514221,0,0,0,-0.006046040449291468,0,0,0,0,0,-0.0040306937880814075,0,0.02015346847474575,0.007053713779896498,0,0,0,0,0.0040306937880814075,0.0020153468940407038,0,-0.02015346847474575,-0.0010076734470203519,0,0.0040306937880814075,0,0,0,0,0,0.0040306937880814075,0,0,-0.008061387576162815,-0.012092080898582935,0,0.0040306937880814075,0,0,-0.008061387576162815,-0.0151151018217206,0,0.008061387576162815,0,0,0,0,0,0,0.014107427559792995,0,0,-0.003023020224645734,0,0.008061387576162815,0,0,0,0,0,0.008061387576162815,0.0020153468940407038,0,0,-0.0040306937880814075,0,0,0.0020153468940407038,0,0,-0.0010076734470203519,0,0,0.02216881513595581,0,-0.01612277515232563,-0.010076734237372875,0,0,0.008061387576162815,0,0,0,0,0,0.0040306937880814075,0,0,0,0,0,0.006046040449291468,0,-0.01612277515232563,0,0,0.012092080898582935,0.43329957127571106,0,-0.008061387576162815,-0.0020153468940407038,0,0,0,0,0,-0.0010076734470203519,0,0,0.010076734237372875,0,0,0,0,0,0.0020153468940407038,0,0,-0.012092080898582935,0,0.008061387576162815,0.0020153468940407038,0,0,0,0,0,0.005038367118686438,0,0,-0.0040306937880814075,0,0,0.0020153468940407038,0,0,-0.0040306937880814075,0,0.012092080898582935,0.0040306937880814075,0,0,0,0,0.008061387576162815,0,0,-0.0040306937880814075,-0.006046040449291468,0,0.008061387576162815,0.0040306937880814075,0,0,-0.005038367118686438,0,0.02418416179716587,0.0040306937880814075,0,0,0,0,0,0.0020153468940407038,0,0,0,0,0,0,0,0,-0.008061387576162815,0,0,0,0,-0.008061387576162815,-0.0020153468940407038,0,0,0,0,-0.01612277515232563,0,0,0.0040306937880814075,0.008061387576162815,0,0,-0.013099754229187965,0,0.008061387576162815,0.006046040449291468,0,-0.0040306937880814075,-0.0040306937880814075,0,0,0.0020153468940407038,0,0,0,0,0,0.003023020224645734,0,0,0,0,0,0.21664978563785553,0,-0.02015346847474575,0,0,0,0.0040306937880814075,0,0,0,0,0.0403069369494915,0.005038367118686438,0,-0.012092080898582935,0,0,0,0.0010076734470203519,0,0,-0.005038367118686438,0],"text":"BasicUpstart2(main)\n\n.const WINDOW_HEIGHT  = 25\n.const WINDOW_WIDTH   = 40\n.const UNIVERSE_WIDTH = 400\n\n// Variables ///////////////////////////////////////////////////////////////////\n\n* = 251 virtual\n\nuniverse_pointer_lo: .byte 0\nuniverse_pointer_hi: .byte 0\nwindow_pointer_lo:   .byte 0\nwindow_pointer_hi:   .byte 0\n\n// Data/Main ///////////////////////////////////////////////////////////////////\n\n* = $081d\n\nmain:\n        // jsr window_projection\n        rts\n\n// Core routine ////////////////////////////////////////////////////////////////\n\nwindow_projection:\n        ldx #WINDOW_HEIGHT\ncopy_rows:\n        ldy #0\ncopy_row:\n        lda (universe_pointer_lo), y\n        sta (window_pointer_lo), y\n        iny\n        cpy WINDOW_WIDTH\n        bne copy_row\n\n        clc                     // Add (universe) row size to universe pointer\n        lda universe_pointer_lo // ^16-bit addition\n        adc #UNIVERSE_WIDTH\n        sta universe_pointer_lo\n        lda universe_pointer_hi\n        adc #0\n        sta universe_pointer_hi\n\n        clc                     // Add (window) row size to window pointer\n        lda window_pointer_lo   // ^16-bit addition\n        adc #WINDOW_WIDTH\n        sta window_pointer_lo\n        lda window_pointer_hi\n        adc #0\n        sta window_pointer_hi\n\n        dex\n        bne copy_rows\n\n        rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.115.window_projection.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/10.115.window_projection.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.120.array_routines_1_plot_characters.asm","language":"asm","vector":[0,0.0015946261119097471,0,0,0,0,0,0.002391939051449299,0,-0.0031892522238194942,-0.002391939051449299,0,0.009567756205797195,0,0,0,0,0,0.03189252316951752,0.012757008895277977,0,-0.0063785044476389885,-0.0015946261119097471,0,0,0.0015946261119097471,0,0,0,0,0.0031892522238194942,0.005581191275268793,0,0,0,0,0,0,0,-0.0031892522238194942,0,0,0.0031892522238194942,0,0,-0.0031892522238194942,-0.0063785044476389885,0,0,0,0,-0.012757008895277977,0,0,0.0031892522238194942,0.0031892522238194942,0,-0.0063785044476389885,0,0,0,0.002391939051449299,0,0,-0.00398656539618969,0,0.012757008895277977,0.0015946261119097471,0,-0.0031892522238194942,-0.004783878102898598,0,0,0.0015946261119097471,0,0,-0.0063785044476389885,0,0,0,0,0,-0.007175817620009184,0,0,0.016743574291467667,0,-0.028703270480036736,-0.004783878102898598,0,0,0.0015946261119097471,0,-0.0031892522238194942,-0.0015946261119097471,0,0,0,0,0,-0.0007973130559548736,0,0.0031892522238194942,0.0007973130559548736,0,0,-0.002391939051449299,0,0,0.005581191275268793,0,0,-0.0015946261119097471,0,0,0.01594626158475876,0,-0.01913551241159439,-0.0031892522238194942,0,0,0.0007973130559548736,0,0,-0.0007973130559548736,0,0.03508177399635315,0.0015946261119097471,0,-0.022324765101075172,0,0,0,0.004783878102898598,0,-0.0031892522238194942,-0.0015946261119097471,0,0.0031892522238194942,0.0015946261119097471,0,0,-0.0015946261119097471,0,0,0.0007973130559548736,0,-0.0063785044476389885,-0.0063785044476389885,0,0.8674765825271606,0.0015946261119097471,0,0,-0.0031892522238194942,0,0,0,0,0,-0.0031892522238194942,0,0.022324765101075172,0.0063785044476389885,0,0,-0.0015946261119097471,0,0.0031892522238194942,0.0015946261119097471,0,-0.028703270480036736,0,0,0.0063785044476389885,0,0,0,-0.0007973130559548736,0,0.0031892522238194942,0,0,-0.0031892522238194942,-0.016743574291467667,0,0,0,0,0,-0.004783878102898598,0,0.012757008895277977,0,0,-0.0063785044476389885,-0.0031892522238194942,0,0.0063785044476389885,0.009567756205797195,0,0,-0.002391939051449299,0,0.01594626158475876,0.0007973130559548736,0,0,-0.0007973130559548736,0,0,0,0,0,-0.009567756205797195,0,0,0,0,0,-0.0007973130559548736,0,0,0.019932826980948448,0,0,-0.011162382550537586,0,0,0.00797313079237938,0,0,-0.0031892522238194942,0,0.009567756205797195,0.0015946261119097471,0,-0.009567756205797195,0,0,0.0063785044476389885,0.0007973130559548736,0,0,-0.0031892522238194942,0,0.0063785044476389885,0.4337382912635803,0,0,-0.0007973130559548736,0,0,0.0007973130559548736,0,-0.0031892522238194942,-0.0007973130559548736,0,0.0031892522238194942,0.011162382550537586,0,0,-0.0031892522238194942,0,0,0.002391939051449299,0,0,-0.01594626158475876,0,0,0.0031892522238194942,0,-0.0031892522238194942,0,0,0.0031892522238194942,0.004783878102898598,0,-0.0031892522238194942,-0.002391939051449299,0,0.0031892522238194942,0,0,-0.0063785044476389885,0,0,0,0.0063785044476389885,0,0,-0.0031892522238194942,0,0.0031892522238194942,0.0031892522238194942,0,-0.0031892522238194942,-0.007175817620009184,0,0,0.00797313079237938,0,0,-0.0007973130559548736,0,0.01913551241159439,0,0,0,0,0,0,0.0007973130559548736,0,0,0,0,0.0031892522238194942,0,0,0,0,0,0,0,0,0,-0.004783878102898598,0,0,0.004783878102898598,0,-0.012757008895277977,-0.004783878102898598,0,0,0.011959696188569069,0,0,-0.005581191275268793,0,0.0063785044476389885,0.0031892522238194942,0,0,-0.0007973130559548736,0,0,0.0007973130559548736,0,-0.0031892522238194942,-0.0015946261119097471,0,0,0.0015946261119097471,0,-0.009567756205797195,-0.0015946261119097471,0,0,0.21686914563179016,0,-0.012757008895277977,0,0,0,0,0,-0.012757008895277977,-0.0015946261119097471,0,0.03189252316951752,0.007175817620009184,0,-0.009567756205797195,-0.0015946261119097471,0,0.0031892522238194942,0.002391939051449299,0,-0.0031892522238194942,-0.010365069843828678,0],"text":"BasicUpstart2(main)\n\n.const SCREEN_ADDRESS = $0400\n\n.const CHARACTER = $2a\n\n// Variables ///////////////////////////////////////////////////////////////////\n\n* = 168 virtual\n\ntable_ptr_lo: .byte 0\ntable_ptr_hi: .byte 0\n\n* = 253 virtual\n\ncurrent_char_ptr_lo: .byte 0\ncurrent_char_ptr_hi: .byte 0\n\n// Data/Main ///////////////////////////////////////////////////////////////////\n\n* = $081d\n\ntable:      .word SCREEN_ADDRESS\n            .word SCREEN_ADDRESS + 2\n            .word SCREEN_ADDRESS + 4\ntable_end:\n\nmain:\n        lda #<(table)\n        sta table_ptr_lo\n        lda #>(table)\n        sta table_ptr_hi\n\n        jsr plot_characters\n\n        rts\n\n// Core routine ////////////////////////////////////////////////////////////////\n\nplot_characters:\n        ldy #0\n\nloop:\n        lda (table_ptr_lo), y\n        sta current_char_ptr_lo\n        iny\n        lda (table_ptr_lo), y\n        sta current_char_ptr_hi // In the original code, these two are inverted;\n        iny                     // ^while it works, it's a bit confusing.\n\n        tya\n        pha\n        jsr plot_character\n        pla\n        tay\n\n        cpy #(table_end - table)\n        bne loop\n\n        rts\n\n// Helper routines /////////////////////////////////////////////////////////////\n\nplot_character:\n        lda #CHARACTER\n        ldy #0\n        sta (current_char_ptr_lo), y\n\n        rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.120.array_routines_1_plot_characters.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/10.120.array_routines_1_plot_characters.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.120.array_routines_2_move_characters.asm","language":"asm","vector":[0,0.003045263234525919,0,0,0,0,0.008120701648294926,0.0020301754120737314,0,-0.004060350824147463,-0.0020301754120737314,0,0.008120701648294926,0,0,0,-0.003045263234525919,0,0.03654315695166588,0.014211228117346764,0,0,-0.0020301754120737314,0,0,0.0020301754120737314,0,0,0,0,0,0.011165965348482132,0,0,-0.0020301754120737314,0,0,0.003045263234525919,0,0,0,0,0,0,0,-0.004060350824147463,-0.008120701648294926,0,0,0,0,-0.01624140329658985,0,0,0,0,0,-0.004060350824147463,-0.0020301754120737314,0,0,0.005075438413769007,0,0,0,0,0.020301753655076027,0,0,-0.004060350824147463,-0.007105614058673382,0,0,0.0010150877060368657,0,0,-0.008120701648294926,0,0,0,0,-0.004060350824147463,-0.012181052938103676,0,0,0.02436210587620735,0,-0.040603507310152054,-0.014211228117346764,0,0,0.004060350824147463,0,-0.008120701648294926,-0.006090526469051838,0,0,0,0,0,0,0,0.008120701648294926,0.004060350824147463,0,0,-0.0020301754120737314,0,0,0.005075438413769007,0,0,-0.0010150877060368657,0,0.004060350824147463,0.01827157847583294,0,-0.02436210587620735,0,0,0,0.0010150877060368657,0,0,-0.0010150877060368657,0,0.0487242117524147,0,0,-0.03654315695166588,-0.0010150877060368657,0,0,0.005075438413769007,0,-0.004060350824147463,-0.0010150877060368657,0,0.004060350824147463,0,0,0,-0.0020301754120737314,0,0,0.003045263234525919,0,-0.008120701648294926,-0.00913578923791647,0,0.8607943654060364,0.0010150877060368657,0,0,-0.0020301754120737314,0,0,0,0,0,-0.004060350824147463,0,0.0324828065931797,0.010150876827538013,0,0,-0.0020301754120737314,0,0.004060350824147463,0,0,-0.03654315695166588,-0.0010150877060368657,0,0.012181052938103676,0,0,0,-0.0020301754120737314,0,0,0,0,0,-0.023347018286585808,0,0,0,0,-0.004060350824147463,-0.008120701648294926,0,0.01624140329658985,0,0,0,-0.006090526469051838,0,0.008120701648294926,0.01624140329658985,0,0,-0.007105614058673382,0,0.020301753655076027,0,0,0,-0.003045263234525919,0,0.004060350824147463,0.0020301754120737314,0,0,-0.012181052938103676,0,0,0.0020301754120737314,0,0,-0.0010150877060368657,0,0,0.02639228105545044,0,0,-0.01827157847583294,0,0,0.00913578923791647,0,0,-0.0020301754120737314,0,0.020301753655076027,0.0020301754120737314,0,0,0,0,0,0,0,-0.004060350824147463,-0.004060350824147463,0,0.004060350824147463,0.4303971827030182,0,0,0,0,0,0,0,0,-0.0010150877060368657,0,0,0.01624140329658985,0,0,-0.004060350824147463,0,0.01624140329658985,0.0020301754120737314,0,0,-0.019286666065454483,0,0,0.006090526469051838,0,0,0,0,0,0.005075438413769007,0,0,-0.0010150877060368657,0,0.004060350824147463,0,0,-0.004060350824147463,-0.0020301754120737314,0,0,0.008120701648294926,0,0,-0.0010150877060368657,0,0.004060350824147463,0.004060350824147463,0,-0.004060350824147463,-0.010150876827538013,0,0,0.010150876827538013,0,-0.004060350824147463,-0.0020301754120737314,0,0.020301753655076027,0.0020301754120737314,0,-0.004060350824147463,0,0,0,0.0020301754120737314,0,0,0,0,0.012181052938103676,0,0,-0.004060350824147463,0,0,0.004060350824147463,0.0010150877060368657,0,0,-0.006090526469051838,0,0,0.010150876827538013,0,-0.01624140329658985,0,0,0,0.012181052938103676,0,0,-0.011165965348482132,0,0,0.0020301754120737314,0,-0.004060350824147463,-0.0010150877060368657,0,0,0.0010150877060368657,0,0,0,0,0,0,0,-0.012181052938103676,-0.0020301754120737314,0,0,0.22331929206848145,0,-0.01624140329658985,0,0,0,0,0,-0.02436210587620735,0,0,0.0487242117524147,0.008120701648294926,0,-0.028422456234693527,0,0,0,0.003045263234525919,0,-0.012181052938103676,-0.011165965348482132,0],"text":"BasicUpstart2(main)\n\n.const SCREEN_ADDRESS = $0400\n\n.const VECTOR_X = 1\n.const VECTOR_Y = 2\n\n// Variables ///////////////////////////////////////////////////////////////////\n\n* = 168 virtual\n\ntable_ptr_lo: .byte 0\ntable_ptr_hi: .byte 0\n\n* = 251 virtual\n\nvector_x: .byte 0\nvector_y: .byte 0\n\n// Data/Main ///////////////////////////////////////////////////////////////////\n\n* = $081d\n\ntable:\n            .word SCREEN_ADDRESS\n            .word SCREEN_ADDRESS + 2\n            .word SCREEN_ADDRESS + 4\ntable_end:\n\nmain:\n        lda #<(table)\n        sta table_ptr_lo\n        lda #>(table)\n        sta table_ptr_hi\n\n        lda #VECTOR_X\n        sta vector_x\n        lda #VECTOR_Y\n        sta vector_y\n\n        jsr move_characters\n\n        rts\n\n// Core routine ////////////////////////////////////////////////////////////////\n\nmove_characters:\n        ldy #0\n\nloop:\n        lda (table_ptr_lo), y // Add the 16-bit vector to the current current\n        clc                   // ^character, using the table_ptr as base and y\n        adc vector_x          // ^as (incrementing) offset.\n        sta (table_ptr_lo), y\n        iny\n        lda (table_ptr_lo), y\n        adc vector_y\n        sta (table_ptr_lo), y\n        iny\n\n        cpy #(table_end - table)\n        bne loop\n\n        rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.120.array_routines_2_move_characters.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/10.120.array_routines_2_move_characters.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.121.array_routines_3_search_entry.asm","language":"asm","vector":[0.00586893642321229,0.0007336170529015362,0,-0.002934468211606145,-0.002934468211606145,0,0,0.007336170878261328,0,-0.00586893642321229,-0.002934468211606145,0,0.014672341756522655,0.0014672341058030725,0,-0.002934468211606145,-0.002934468211606145,0,0.0557548962533474,0.013205107301473618,0,-0.014672341756522655,0,0,0,0.0014672341058030725,0,-0.002934468211606145,-0.0022008512169122696,0,0.002934468211606145,0.008803404867649078,0,0,-0.0014672341058030725,0,0,0,0,0,0,0,0,0.0014672341058030725,0,-0.014672341756522655,-0.010270639322698116,0,0,0,0,-0.00586893642321229,0,0,0.008803404867649078,0,0,-0.017606809735298157,-0.0014672341058030725,0,0,0.0022008512169122696,0,0,-0.002934468211606145,0,0.008803404867649078,0,0,-0.00586893642321229,-0.003668085439130664,0,0.002934468211606145,0,0,0,-0.002934468211606145,0,0,0.004401702433824539,0,-0.01173787284642458,-0.01173787284642458,0,0,0.020541278645396233,0,-0.026410214602947235,-0.020541278645396233,0,0,0,0,-0.008803404867649078,-0.002934468211606145,0,0,0.002934468211606145,0,0,-0.0022008512169122696,0,0.014672341756522655,0.0014672341058030725,0,-0.00586893642321229,-0.002934468211606145,0,0.00586893642321229,0.007336170878261328,0,0,-0.0014672341058030725,0,0,0.0278774481266737,0,-0.03227915242314339,-0.008069788105785847,0,0,0.002934468211606145,0,0,-0.0022008512169122696,0,0.03227915242314339,0.0022008512169122696,0,-0.02934468351304531,-0.0007336170529015362,0,0.002934468211606145,0.005135319661349058,0,0,0,0,0.002934468211606145,0,0,0,-0.008069788105785847,0,0,0.0007336170529015362,0,-0.00586893642321229,-0.002934468211606145,0,0.8627336621284485,0.004401702433824539,0,-0.017606809735298157,-0.008803404867649078,0,0,0.0007336170529015362,0,-0.002934468211606145,-0.005135319661349058,0,0.03227915242314339,0.004401702433824539,0,0,-0.002934468211606145,0,0.014672341756522655,0.0014672341058030725,0,-0.017606809735298157,0,0,0.002934468211606145,0,0,-0.00586893642321229,-0.006602553650736809,0,0.00586893642321229,0,0,-0.00586893642321229,-0.014672341756522655,0,0,0,0,-0.00586893642321229,-0.00586893642321229,0,0.01173787284642458,0.0022008512169122696,0,0,-0.00586893642321229,0,0.00586893642321229,0.01687319204211235,0,-0.002934468211606145,-0.013205107301473618,0,0.02934468351304531,0.002934468211606145,0,-0.00586893642321229,-0.0014672341058030725,0,0,0.0014672341058030725,0,0,-0.01687319204211235,0,0,0,0,0,-0.0014672341058030725,0,0,0.019807660952210426,0,0,-0.015405958518385887,0,0,0.015405958518385887,0,-0.00586893642321229,-0.003668085439130664,0,0.008803404867649078,0.0014672341058030725,0,-0.00586893642321229,-0.0007336170529015362,0,0,0.0007336170529015362,0,-0.002934468211606145,-0.002934468211606145,0,0,0.43136683106422424,0,0,-0.008803404867649078,0,0,0,0,0,-0.005135319661349058,0,0.00586893642321229,0.016139576211571693,0,0,-0.0014672341058030725,0,0,0.00953702162951231,0,0,-0.013205107301473618,0,0,0.0014672341058030725,0,-0.002934468211606145,-0.002934468211606145,0,0.00586893642321229,0.005135319661349058,0,0,-0.004401702433824539,0,0,0.0007336170529015362,0,0,-0.002934468211606145,0,0,0.00586893642321229,0,-0.002934468211606145,-0.002934468211606145,0,0.01173787284642458,0.002934468211606145,0,-0.002934468211606145,-0.008069788105785847,0,0.002934468211606145,0.014672341756522655,0,-0.002934468211606145,-0.005135319661349058,0,0.020541278645396233,0,0,0,0,0,0,0.003668085439130664,0,-0.002934468211606145,-0.0014672341058030725,0,0.002934468211606145,0.0014672341058030725,0,0,0,0,0,0,0,0,-0.011004256084561348,0,0.002934468211606145,0.004401702433824539,0,-0.020541278645396233,-0.002934468211606145,0,0,0.008069788105785847,0,0,-0.008803404867649078,0,0,0.0007336170529015362,0,0,0,0,0,0.0007336170529015362,0,-0.002934468211606145,0,0,0,0.002934468211606145,0,-0.00586893642321229,-0.0014672341058030725,0,0,0.21568341553211212,0,-0.00586893642321229,-0.004401702433824539,0,0.008803404867649078,0,0,-0.02347574569284916,-0.0022008512169122696,0,0.03814808651804924,0.011004256084561348,0,-0.041082557290792465,0,0,0,0.003668085439130664,0,-0.00586893642321229,-0.004401702433824539,0],"text":"BasicUpstart2(main)\n\n// Variables ///////////////////////////////////////////////////////////////////\n\n* = 168 virtual\n\ntable_ptr_lo: .byte 0\ntable_ptr_hi: .byte 0\n\n* = 251 virtual\n\nsearch_pattern_lo: .byte 0\nsearch_pattern_hi: .byte 0\n\nfound_offset: .byte 0\n\n// Data/Main ///////////////////////////////////////////////////////////////////\n\n* = $081d\n\ntable:\n        .word $dead\n        .word $cafe\n        .word $b020\ntable_end:\n\nmain:\n        lda #<(table)\n        sta table_ptr_lo\n        lda #>(table)\n        sta table_ptr_hi\n\n        lda #$ca\n        sta search_pattern_hi\n        lda #$fe\n        sta search_pattern_lo\n\n        jsr search_entry_optimized\n\n        rts\n\n// Core routine ////////////////////////////////////////////////////////////////\n\nsearch_entry:\n        ldy #$00\n\ncompare_entry:\n        lda (table_ptr_lo), y // 16 bit compare against search_pattern\n        iny\n        cmp search_pattern_lo\n        bne inc_y_and_resume  // see comment\n        lda (table_ptr_lo), y\n        iny\n        cmp search_pattern_hi\n        bne compare_entry\n\n        dey                  // If found, we need to decrese the offset\n        dey\n        sty found_offset\n\n        rts\n\n// When the first byte doesn't match, we need to interrupt the loop and increase\n// Y. There's no super-clean way of structing the code; as equivalent alternative,\n// the logic can be interleaved:\n//\n//             beq compare_hi_byte\n//             iny\n//             clc\n//             bcc compare_entry\n//     compare_hi_byte:\n//             lda (table_ptr_lo), y\n//\n// However, a smarter placement of iny yield a faster and simpler routine - see\n// search_entry_optimized().\n//\ninc_y_and_resume:\n        iny\n        clc\n        bcc compare_entry\n\n// Core routine, optimized /////////////////////////////////////////////////////\n\nsearch_entry_optimized:\n        ldy #$ff\n\niny_and_compare_entry:\n        iny\n!compare_entry:\n        lda (table_ptr_lo), y\n        iny\n        cmp search_pattern_lo\n        bne iny_and_compare_entry\n        lda (table_ptr_lo), y\n        iny\n        cmp search_pattern_hi\n        bne !compare_entry-\n\n        dey\n        dey\n        sty found_offset\n\n        rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.121.array_routines_3_search_entry.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/10.121.array_routines_3_search_entry.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.122.array_routines_4_delete_entry.asm","language":"asm","vector":[0,0.0028653531335294247,0,-0.003820470767095685,-0.0009551176917739213,0,0.003820470767095685,0,0,-0.00764094153419137,-0.003820470767095685,0,0,0,0,0,-0.003820470767095685,0,0.026743294671177864,0.01528188306838274,0,0,0,0,0,0.0009551176917739213,0,0,-0.0019102353835478425,0,0.00764094153419137,0.005730706267058849,0,0,-0.0009551176917739213,0,0,0.013371647335588932,0,0,-0.0009551176917739213,0,0.003820470767095685,0,0,-0.003820470767095685,-0.006685823667794466,0,0.003820470767095685,0,0,-0.01528188306838274,0,0,0,0,0,-0.01910235360264778,-0.003820470767095685,0,0,0.008596058934926987,0,0,0,0,0,0.0028653531335294247,0,0,0,0,0,0.008596058934926987,0,0,-0.008596058934926987,0,0,0,0,-0.003820470767095685,-0.0028653531335294247,0,0,0.01528188306838274,0,-0.045845650136470795,-0.005730706267058849,0,0.003820470767095685,0,0,-0.00764094153419137,-0.003820470767095685,0,0,0,0,0,-0.0019102353835478425,0,0.011461412534117699,0.0028653531335294247,0,0,-0.005730706267058849,0,0.00764094153419137,0,0,0,-0.0009551176917739213,0,0.01528188306838274,0.013371647335588932,0,-0.01910235360264778,0,0,0,0,0,-0.01910235360264778,-0.0019102353835478425,0,0.03056376613676548,0.003820470767095685,0,-0.04202517867088318,-0.0009551176917739213,0,0,0.004775588400661945,0,0,0,0,0,0.0019102353835478425,0,0,-0.0028653531335294247,0,0,0.0019102353835478425,0,-0.00764094153419137,-0.00764094153419137,0,0.8634263873100281,0.006685823667794466,0,0,-0.00955117680132389,0,0,0,0,0,-0.0019102353835478425,0,0.026743294671177864,0,0,0,0,0,0.01528188306838274,0,0,-0.04202517867088318,-0.0009551176917739213,0,0.011461412534117699,0.0009551176917739213,0,-0.003820470767095685,-0.0019102353835478425,0,0,0,0,0,-0.022922825068235397,0,0,0.005730706267058849,0,-0.00764094153419137,-0.00764094153419137,0,0.022922825068235397,0,0,0,0,0,0.003820470767095685,0.013371647335588932,0,0,-0.0028653531335294247,0,0.022922825068235397,0.003820470767095685,0,-0.003820470767095685,-0.0019102353835478425,0,0,0.00764094153419137,0,-0.003820470767095685,-0.010506294667720795,0,0,0.0009551176917739213,0,-0.011461412534117699,-0.011461412534117699,0,0,0.01528188306838274,0,0,-0.02101258933544159,0,0,0.006685823667794466,0,-0.00764094153419137,0,0,0.026743294671177864,0,0,0,0,0,0.011461412534117699,0.0019102353835478425,0,0,-0.003820470767095685,0,0.003820470767095685,0.43171319365501404,0,-0.003820470767095685,0,0,0,0.0009551176917739213,0,-0.011461412534117699,-0.0009551176917739213,0,0,0.014326765201985836,0,0,-0.003820470767095685,0,0,0.00764094153419137,0,0,-0.02578817680478096,0,0,0.005730706267058849,0,0,-0.0019102353835478425,0,0.003820470767095685,0,0,-0.00764094153419137,0,0,0,0,0,-0.003820470767095685,-0.003820470767095685,0,0,0.011461412534117699,0,0,-0.0009551176917739213,0,0,0.0019102353835478425,0,-0.00764094153419137,-0.011461412534117699,0,0,0.012416529469192028,0,-0.003820470767095685,-0.003820470767095685,0,0.01910235360264778,0,0,0,-0.0019102353835478425,0,0,0.0028653531335294247,0,-0.003820470767095685,-0.005730706267058849,0,0,0.0019102353835478425,0,0,0,0,0.026743294671177864,0.003820470767095685,0,0,-0.008596058934926987,0,0,0.013371647335588932,0,-0.00764094153419137,-0.004775588400661945,0,0,0.013371647335588932,0,0,-0.010506294667720795,0,0,0.0019102353835478425,0,-0.003820470767095685,-0.0019102353835478425,0,0.003820470767095685,0,0,0,-0.005730706267058849,0,0,0,0,0,-0.0019102353835478425,0,0.01528188306838274,0.21585659682750702,0,-0.01528188306838274,0,0,0,0,0,0,0,0,0.03056376613676548,0.008596058934926987,0,-0.011461412534117699,-0.003820470767095685,0,0,0.003820470767095685,0,-0.00764094153419137,-0.012416529469192028,0],"text":"BasicUpstart2(main)\n\n// Variables ///////////////////////////////////////////////////////////////////\n\n* = 168 virtual\n\ntable_ptr: .word 0\n\n* = 253 virtual\n\nlast_element_ofs: .byte 0\n\n// Data/Main ///////////////////////////////////////////////////////////////////\n\n* = $081d\n\ntable:\n        .word $dead\n        .word $cafe\n        .word $b020\n        .word $face\n        .word $feed\ntable_end:\n\nmain:\n        lda #<(table)\n        sta table_ptr\n        lda #>(table)\n        sta table_ptr + 1\n\n        ldx #(table_end - table)\n        ldy #2                   // delete $cafe\n\n        jsr delete_entry\n\n        rts\n\n// Core routine ////////////////////////////////////////////////////////////////\n\n// Input: X = (2 * number of entries), Y = (2 * deleting entry index)\ndelete_entry:\n        dex                  // move X to last element\n        dex\n\n        sty last_element_ofs\n\n        txa                  // load last element LSB in A\n        tay                  // ^(transferring offset X to Y)\n        lda (table_ptr), y   //\n\n        ldy last_element_ofs // overwrite deleting entry LSB\n        sta (table_ptr), y   // ^with last element LSB\n\n        inx                  // increment last element and deleting entry pointers\n        inc last_element_ofs\n\n        txa                  // from here downwards, do the same as before\n        tay\n        lda (table_ptr), y\n\n        ldy last_element_ofs\n        sta (table_ptr), y\n\n        rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.122.array_routines_4_delete_entry.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/10.122.array_routines_4_delete_entry.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.124.random_numbers.asm","language":"asm","vector":[0.006349102593958378,0,0,0,0,0,0,0,0,0,-0.003174551296979189,0,0,0,0,-0.01904730685055256,-0.0015872756484895945,0,0.01904730685055256,0.00476182671263814,0,0,0,0,0,0,0,-0.006349102593958378,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.006349102593958378,0,0,0,0,0,0,0,0,0.006349102593958378,0.003174551296979189,0,-0.006349102593958378,0,0,0,0,0,0,0,0,0.006349102593958378,0,0,0,0,0,0,0,0,0,-0.006349102593958378,0,0,0,0,-0.006349102593958378,-0.006349102593958378,0,0,0.02063458226621151,0,-0.006349102593958378,0,0,0,0.003174551296979189,0,-0.006349102593958378,0,0,0,0.003174551296979189,0,0,0,0,0,0,0,-0.012698205187916756,0,0,0,0,0,0,-0.00952365342527628,0,0,0.00952365342527628,0,0,0,0,0,0,0,0,-0.00476182671263814,0,0.01904730685055256,0,0,-0.006349102593958378,0,0,0,0,0,-0.006349102593958378,0,0,0,0,0,0,-0.003174551296979189,0,0,0,0,0,0,0,0.8698270320892334,0.003174551296979189,0,0,-0.003174551296979189,0,0,0,0,-0.01904730685055256,0,0,0.01904730685055256,0.003174551296979189,0,0,0,0,0.006349102593958378,0.0015872756484895945,0,-0.01904730685055256,0,0,0,0,0,0,-0.003174551296979189,0,0,0,0,0,-0.003174551296979189,0,0,0,0,-0.006349102593958378,-0.006349102593958378,0,0.01904730685055256,0,0,0,-0.003174551296979189,0,0,0.00952365342527628,0,0,-0.006349102593958378,0,0,0.0015872756484895945,0,0,0,0,0,0.0015872756484895945,0,0,0,0,0,0,0,0,0,0,0,0.00952365342527628,0,0,-0.007936378009617329,0,0,0.00476182671263814,0,0,-0.003174551296979189,0,0,0,0,0,-0.0015872756484895945,0,0,0,0,0,0,0,0,0.4349135160446167,0,0,0,0,0,0,0,0,-0.01111092884093523,0,0.006349102593958378,0.00952365342527628,0,0,0,0,0,0.00476182671263814,0,0,-0.01111092884093523,0,0,0,0,0,0,0,0,0.0015872756484895945,0,0,0,0,0,0,0,0,-0.003174551296979189,0,0,0.00952365342527628,0,0,-0.0015872756484895945,0,0,0,0,-0.006349102593958378,-0.0015872756484895945,0,0,0,0,0,-0.0015872756484895945,0,0,0,0,0,0,0,0,0,0,0,-0.003174551296979189,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.00476182671263814,0,0,-0.0015872756484895945,0,0.006349102593958378,0,0,0,-0.0015872756484895945,0,0,0,0,0,0,0,0,0.003174551296979189,0,0,0,0,0,0.21745675802230835,0,-0.012698205187916756,0,0,0,0,0,-0.012698205187916756,-0.00476182671263814,0,0.03809461370110512,0.00476182671263814,0,0,0,0,0.006349102593958378,0.0015872756484895945,0,0,-0.00476182671263814,0],"text":"BasicUpstart2(main)\n\n.const RANDOM_NUMBER_ADDR = $d41b\n\n// Data/Main ///////////////////////////////////////////////////////////////////\n\n* = $081d\n\nmain:\n        jsr preset_rnd\n\n        lda RANDOM_NUMBER_ADDR\n\n        rts\n\n// Helper routines /////////////////////////////////////////////////////////////\n\npreset_rnd:\n        lda #$ff  // Set voice 3 to maximum frequency\n        sta $d40e\n        sta $d40f\n\n        lda #$80  // Voice 3: Disable output and enable noise\n        sta $d412\n\n        rts\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.124.random_numbers.asm","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/10.124.random_numbers.asm","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/cslarsen_c64-examples/black.asm","language":"asm","vector":[0,0,0,0,0,0,0,0.032478488981723785,0,0,-0.06495697796344757,0,0,0.032478488981723785,0,-0.12991395592689514,-0.06495697796344757,0,0,0.06495697796344757,0,0,0,0,0,0.16239245235919952,0,0,0,0,0,0.16239245235919952,0,0,-0.032478488981723785,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.06495697796344757,0,0.12991395592689514,0,0,0,0,0,0.12991395592689514,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.12991395592689514,0,0,0,0,0,-0.12991395592689514,0,0,0,0,0,0,0,0,0,0.032478488981723785,0,0,0,0,0,0,0,0,0,0,0.12991395592689514,0,0,0,-0.06495697796344757,0,0,0.032478488981723785,0,-0.12991395592689514,-0.06495697796344757,0,0,0,0,-0.12991395592689514,0,0,0,0,0,-0.2598279118537903,-0.032478488981723785,0,0.12991395592689514,0,0,0,0,0,0,0,0,0,0,0,0,0.06495697796344757,0,0,0,0,0.12991395592689514,0.06495697796344757,0,0,0,0,0,0.06495697796344757,0,0,0,0,0.12991395592689514,0.06495697796344757,0,0,0,0,0,0,0,0,-0.032478488981723785,0,0,0,0,0,-0.06495697796344757,0,0,0,0,0,-0.06495697796344757,0,0.12991395592689514,0,0,0,0,0,0.12991395592689514,0,0,-0.2598279118537903,0,0,0.2598279118537903,0,0,0,0,0,0.12991395592689514,0.06495697796344757,0,0,0,0,0.12991395592689514,0,0,-0.12991395592689514,-0.06495697796344757,0,0,0,0,0,-0.06495697796344757,0,0,0,0,0,-0.12991395592689514,0,0,0.06495697796344757,0,0,-0.032478488981723785,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.06495697796344757,0,0,0,0,0,0,0,0,0,0,0,0.06495697796344757,0,0,0,0,0,0,0,0,0,0,0.12991395592689514,0.032478488981723785,0,0,0,0,0,0.032478488981723785,0,0,0,0,0,0.06495697796344757,0,-0.2598279118537903,0,0,0.12991395592689514,0.06495697796344757,0,0,-0.16239245235919952,0,0,0.12991395592689514,0,0,-0.032478488981723785,0,0,0.06495697796344757,0,-0.12991395592689514,0,0,0,0.06495697796344757,0,0,-0.06495697796344757,0,0,0,0,0,0,0,0.2598279118537903,0.032478488981723785,0,0,0,0,0.2598279118537903,0,0,0,-0.032478488981723785,0,0,0,0,0,-0.032478488981723785,0,0,0,0,0,-0.06495697796344757,0,0,0.032478488981723785,0,-0.12991395592689514,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.032478488981723785,0,0,0,0,0,0.06495697796344757,0,0,0,0,0,0.032478488981723785,0,0,0,0,0,0,0,0,-0.12991395592689514,0,0,0.06495697796344757,0,0,0,0],"text":";; Sets background and border to black, then loops forever\n\n!source \"basic-boot.asm\"\n\n+start_at $0900\n\nldx #$00\nstx bocol\nstx bgcol\njmp *\n","sourcePath":"external/github.com/cslarsen_c64-examples/black.asm","sourceMtimeMs":1462575743000,"sourceUrl":"https://github.com/cslarsen/c64-examples/blob/master/black.asm","sourceRepoUrl":"https://github.com/cslarsen/c64-examples","license":"UNKNOWN","attribution":"Source: cslarsen/c64-examples (License unknown)"},{"name":"github.com/cslarsen_c64-examples/constants.asm","language":"asm","vector":[0,0,0,0,-0.02785309962928295,0,0,0,0,0,0,0,0,0,0,0,-0.02785309962928295,0,0,0,0,-0.1114123985171318,-0.0557061992585659,0,0,0.0557061992585659,0,0,0,0,0,0.3342371881008148,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0557061992585659,0,0,0,0,0,0,0,0.1114123985171318,0,0,0,0,0,0,0,0,-0.1114123985171318,0,0,0,0,0,0,0,0,0,0,0,-0.2228247970342636,0,0,0.1114123985171318,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0557061992585659,0,0,0,0,-0.1114123985171318,0,0,0,0,0,0,0,0,0.1114123985171318,0,0,0,-0.02785309962928295,0,0,0.02785309962928295,0,0,0,0,0,0.1671185940504074,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.1114123985171318,0,0,0,0.0557061992585659,0,0,0,0,0,0,0,-0.3342371881008148,-0.0835592970252037,0,0,0,0,-0.1114123985171318,0,0,0,0,0,0,-0.1114123985171318,0,0,0.0557061992585659,0,-0.1114123985171318,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0557061992585659,0,0,0,0,0,0,0,0,0.0557061992585659,0,0,-0.02785309962928295,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0557061992585659,0,0,0,0,0,0,0,0,0,0,0,-0.1671185940504074,0,0,0,0,0,-0.0557061992585659,0,0,0.02785309962928295,0,0,0,0,0,0,0,0,-0.0835592970252037,0,0,0,0,0,0,0,0,0,0,0,-0.0557061992585659,0,0,0.02785309962928295,0,0,0,0,0,0,0,-0.1114123985171318,0,0,0.1114123985171318,0,0,0,0,0,0.6684743762016296,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.02785309962928295,0,0,0,0,0,0,0,0,0.02785309962928295,0,-0.1114123985171318,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.02785309962928295,0,0,0,0,0,0,0,0,0,0,0,-0.0835592970252037,0],"text":";; Start of BASIC program\nbasic = $0801\n\n;; Background color\nbgcol = $d021\n\n;; Border color\nbocol = $d020\n","sourcePath":"external/github.com/cslarsen_c64-examples/constants.asm","sourceMtimeMs":1462575743000,"sourceUrl":"https://github.com/cslarsen/c64-examples/blob/master/constants.asm","sourceRepoUrl":"https://github.com/cslarsen/c64-examples","license":"UNKNOWN","attribution":"Source: cslarsen/c64-examples (License unknown)"},{"name":"github.com/cslarsen_c64-examples/flicker-vsync.asm","language":"asm","vector":[0.04862884804606438,0,0,0,-0.02431442402303219,0,0.04862884804606438,0.02431442402303219,0,0,-0.012157212011516094,0,0,0.02431442402303219,0,-0.14588655531406403,-0.012157212011516094,0,0,0.060786060988903046,0,0,0,0,0,0.08510048687458038,0,-0.04862884804606438,-0.036471638828516006,0,0,0.036471638828516006,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.02431442402303219,0,0,0,0,0,0,0,0,0.02431442402303219,0,-0.1945153921842575,0,0,0.04862884804606438,0.04862884804606438,0,0,0,0,0,0.012157212011516094,0,0,-0.04862884804606438,0,0,0,0,-0.04862884804606438,-0.07294327765703201,0,0,0,0,-0.04862884804606438,0,0,0,0.24314424395561218,0,-0.1945153921842575,0,0,0,0.012157212011516094,0,-0.04862884804606438,-0.02431442402303219,0,0,0.02431442402303219,0,-0.04862884804606438,-0.012157212011516094,0,0.09725769609212875,0.02431442402303219,0,0,-0.02431442402303219,0,0.09725769609212875,0,0,0,-0.07294327765703201,0,0,0,0,-0.14588655531406403,0,0,0,0,0,-0.1945153921842575,-0.02431442402303219,0,0.34040194749832153,0,0,0,0,0,0,0.012157212011516094,0,0,0,0,0,0.036471638828516006,0,0,-0.012157212011516094,0,0.04862884804606438,0.012157212011516094,0,0,0,0,0.04862884804606438,0,0,-0.09725769609212875,-0.09725769609212875,0,0,0.02431442402303219,0,0,-0.012157212011516094,0,0,0,0,-0.09725769609212875,0,0,0,0.012157212011516094,0,-0.09725769609212875,-0.02431442402303219,0,0,0.02431442402303219,0,-0.09725769609212875,-0.02431442402303219,0,0.09725769609212875,0,0,-0.04862884804606438,-0.12157212197780609,0,0.09725769609212875,0,0,-0.04862884804606438,-0.060786060988903046,0,0.14588655531406403,0,0,0,-0.02431442402303219,0,0.04862884804606438,0.17020097374916077,0,-0.04862884804606438,0,0,0.04862884804606438,0.04862884804606438,0,0,-0.012157212011516094,0,0,0.012157212011516094,0,0,-0.07294327765703201,0,0,0.012157212011516094,0,0,-0.09725769609212875,0,0,0.17020097374916077,0,0,-0.036471638828516006,0,0,0,0,0,0,0,0,0,0,0,-0.012157212011516094,0,0.04862884804606438,0.02431442402303219,0,0,0,0,0,0.02431442402303219,0,0,-0.04862884804606438,0,0,0,0,0,0,0,0,0,0,0,-0.04862884804606438,0,0.04862884804606438,0,0,0,-0.09725769609212875,0,0,0.012157212011516094,0,-0.04862884804606438,-0.04862884804606438,0,0,0.04862884804606438,0,-0.09725769609212875,-0.02431442402303219,0,0,0.04862884804606438,0,0,-0.036471638828516006,0,0,0.07294327765703201,0,0,-0.012157212011516094,0,0,0.02431442402303219,0,0,-0.07294327765703201,0,0,0.02431442402303219,0,0,-0.012157212011516094,0,0.04862884804606438,0,0,0,-0.012157212011516094,0,0.14588655531406403,0.02431442402303219,0,-0.04862884804606438,0,0,0.04862884804606438,0.02431442402303219,0,0,0,0,0,0,0,0,-0.036471638828516006,0,0,0,0,-0.04862884804606438,-0.04862884804606438,0,0,0.10941491276025772,0,0,0,0,0.04862884804606438,0,0,0,0,0,0.09725769609212875,0,0,0,0,0,0,0.012157212011516094,0,-0.09725769609212875,0,0,0,0.036471638828516006,0,-0.14588655531406403,-0.02431442402303219,0,0,0,0,0,-0.02431442402303219,0,0.48628848791122437,0,0,0,-0.07294327765703201,0,0,0,0,-0.04862884804606438,-0.02431442402303219,0],"text":"!source \"basic-boot.asm\"\n\n+start_at $0900\n\nsei\nldx #$00\n\nldy #$7f\nsty $dc0d\nsty $dd0d\nlda $dc0d\nlda $dd0d\n\nlda #$01\nsta $d01a\n\nlda #<.flicker\nldx #>.flicker\nsta $314\nstx $315\n\n; Line number, would be better ot do this on retrace\nlda #$00\nsta $d012\n\nlda $d011\nand #$7f\nsta $d011\n\ncli\njmp *\n\n.flicker\n  dec $d019\n\n  ldx .color\n  stx bgcol\n  stx bocol\n  inx\n  stx .color\n\n  jmp $ea81\n\n.color\n  !byte $00\n","sourcePath":"external/github.com/cslarsen_c64-examples/flicker-vsync.asm","sourceMtimeMs":1462575743000,"sourceUrl":"https://github.com/cslarsen/c64-examples/blob/master/flicker-vsync.asm","sourceRepoUrl":"https://github.com/cslarsen/c64-examples","license":"UNKNOWN","attribution":"Source: cslarsen/c64-examples (License unknown)"},{"name":"github.com/cslarsen_c64-examples/flicker.asm","language":"asm","vector":[0,0,0,0,0,0,0,0.02562418393790722,0,0,-0.07687254995107651,0,0,0.02562418393790722,0,-0.10249673575162888,-0.05124836787581444,0,0,0.02562418393790722,0,0,0,0,0,0.17936928570270538,0,0,0,0,0,0.10249673575162888,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.10249673575162888,0,0,0,0,0,0,0,0.10249673575162888,0,0,0,0,0,0,0,0,0,-0.10249673575162888,0,0,0,0,-0.20499347150325775,0,0,0,0,0,-0.20499347150325775,0,0,0,0,0,0,0,0,0,0.02562418393790722,0,0,0,0,0,0,0,0,0,0,0.10249673575162888,0,0,0,-0.05124836787581444,0,0.20499347150325775,0.05124836787581444,0,0,-0.05124836787581444,0,0,0,0,-0.10249673575162888,0,0,0,0,0,-0.20499347150325775,-0.02562418393790722,0,0.30749019980430603,0,0,0,0,0,0,0,0,-0.10249673575162888,0,0,0,0.07687254995107651,0,0,0,0,0.10249673575162888,0.05124836787581444,0,0,0,0,0,0,0,0,0,0,0,0.05124836787581444,0,0,0,0,0,0,0,0,-0.05124836787581444,0,0,0,0,0,-0.10249673575162888,0,0,0,0,0,-0.10249673575162888,0,0.10249673575162888,0,0,-0.10249673575162888,-0.05124836787581444,0,0.10249673575162888,0,0,-0.20499347150325775,0,0,0.10249673575162888,0,0,0,0,0,0.10249673575162888,0.05124836787581444,0,0,0,0,0,0.10249673575162888,0,0,0,0,0,0,0,0,-0.05124836787581444,0,0,0,0,0,-0.10249673575162888,0,0,0.15374509990215302,0,0,-0.02562418393790722,0,0,0,0,0,-0.05124836787581444,0,0,0,0,0,0,0,0,0.05124836787581444,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10249673575162888,0,0,0,0,0,0,0.02562418393790722,0,0,0,0,0,0.05124836787581444,0,-0.20499347150325775,-0.05124836787581444,0,0.20499347150325775,0.05124836787581444,0,0,-0.15374509990215302,0,0,0.05124836787581444,0,0,-0.05124836787581444,0,0,0.05124836787581444,0,-0.10249673575162888,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.30749019980430603,0.02562418393790722,0,0,0,0,0.20499347150325775,0.05124836787581444,0,0,0,0,0,0,0,0,-0.02562418393790722,0,0,0,0,0,-0.05124836787581444,0,0,0.07687254995107651,0,-0.20499347150325775,0,0,0,0,0,0,-0.02562418393790722,0,0,0,0,0,0,0,0,0.02562418393790722,0,-0.20499347150325775,0,0,0,0.05124836787581444,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.10249673575162888,0,0,0.10249673575162888,0,0,0,0],"text":"!source \"basic-boot.asm\"\n\n+start_at $0900\n\n; Set background and border to black\nldx #$00\nstx bgcol\nstx bocol\n\n; Flicker border and background\n.loop\n  inc bgcol\n  inc bocol\n  jmp .loop\n","sourcePath":"external/github.com/cslarsen_c64-examples/flicker.asm","sourceMtimeMs":1462575743000,"sourceUrl":"https://github.com/cslarsen/c64-examples/blob/master/flicker.asm","sourceRepoUrl":"https://github.com/cslarsen/c64-examples","license":"UNKNOWN","attribution":"Source: cslarsen/c64-examples (License unknown)"},{"name":"github.com/cslarsen_c64-examples/raster.asm","language":"asm","vector":[0.031493134796619415,0,0,0,-0.015746567398309708,0,0.031493134796619415,0.015746567398309708,0,0,0,0,0,0.015746567398309708,0,-0.09447940438985825,-0.007873283699154854,0,0,0.03936641663312912,0,-0.06298626959323883,0,0,0,0.07085955142974854,0,-0.031493134796619415,-0.02361985109746456,0,0,0.03936641663312912,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.015746567398309708,0,0,0.015746567398309708,0,0,0,0,0,0.015746567398309708,0,-0.12597253918647766,0,0,0.031493134796619415,0.031493134796619415,0,0,0,0,0,0.015746567398309708,0,0,-0.04723970219492912,0,0,0,0,-0.09447940438985825,-0.04723970219492912,0,0,0,0,-0.031493134796619415,0,0,0,0.15746566653251648,0,-0.031493134796619415,0,0,0,0.007873283699154854,0,-0.031493134796619415,-0.015746567398309708,0,0,0.015746567398309708,0,-0.031493134796619415,-0.007873283699154854,0,0.06298626959323883,0.015746567398309708,0,0,-0.015746567398309708,0,0.06298626959323883,0,0,0,-0.04723970219492912,0,0,0,0,-0.15746566653251648,-0.031493134796619415,0,0,0,0,-0.6613557934761047,-0.015746567398309708,0,0.1889588087797165,0,0,0,0,0,0,0.007873283699154854,0,0,0,0,0,0.031493134796619415,0,0,-0.007873283699154854,0,0.031493134796619415,0.015746567398309708,0,0,0,0,0,0,0,-0.06298626959323883,-0.06298626959323883,0,0,0.015746567398309708,0,0,-0.007873283699154854,0,0,0.007873283699154854,0,-0.06298626959323883,0,0,0.06298626959323883,0.007873283699154854,0,-0.06298626959323883,-0.04723970219492912,0,0,0.015746567398309708,0,-0.06298626959323883,-0.015746567398309708,0,0.06298626959323883,0,0,0,-0.03936641663312912,0,0.06298626959323883,0,0,-0.031493134796619415,-0.03936641663312912,0,0.09447940438985825,0,0,0,-0.015746567398309708,0,0.031493134796619415,0.11022596806287766,0,-0.031493134796619415,0,0,0.031493134796619415,0.031493134796619415,0,0,-0.007873283699154854,0,0,0.007873283699154854,0,0,-0.07873283326625824,0,0,0.007873283699154854,0,0,-0.33067789673805237,0,0,0.09447940438985825,0,0,-0.02361985109746456,0,0,0,0,0,-0.015746567398309708,0,0,0,0,0,-0.007873283699154854,0,0.06298626959323883,0.015746567398309708,0,0,0,0,0,0,0,0,-0.031493134796619415,0,0,0,0,0,0,0,0,0,0,0,-0.031493134796619415,0,0.031493134796619415,0.031493134796619415,0,0,-0.06298626959323883,0,0,0.007873283699154854,0,-0.031493134796619415,-0.031493134796619415,0,0,0.031493134796619415,0,-0.06298626959323883,0,0,0,0.031493134796619415,0,0,-0.03936641663312912,0,0,0.04723970219492912,0,0,-0.007873283699154854,0,0,0.015746567398309708,0,0,-0.02361985109746456,0,0,0.015746567398309708,0,0,-0.007873283699154854,0,0.031493134796619415,0,0,0,-0.007873283699154854,0,0.12597253918647766,0.015746567398309708,0,-0.031493134796619415,0,0,0.06298626959323883,0.015746567398309708,0,0,0,0,0,0,0,0,-0.03936641663312912,0,0,0,0,-0.031493134796619415,-0.16533894836902618,0,0.031493134796619415,0.07873283326625824,0,0,0,0,0.031493134796619415,0,0,0,0,0,0.06298626959323883,0,0,0,0,0,0,0.007873283699154854,0,-0.09447940438985825,0,0,0,0.015746567398309708,0,-0.09447940438985825,-0.015746567398309708,0,0,0,0,0,-0.015746567398309708,0,0.31493133306503296,0,0,0,-0.04723970219492912,0,0,0.015746567398309708,0,-0.031493134796619415,-0.015746567398309708,0],"text":"!source \"basic-boot.asm\"\n\n+start_at $0900\n\nsei\nldx #$00\n\nldy #$7f\nsty $dc0d\nsty $dd0d\nlda $dc0d\nlda $dd0d\n\nlda #$01\nsta $d01a\n\nlda #<.flicker\nldx #>.flicker\nsta $314\nstx $315\n\n; Line number, would be better ot do this on retrace\nlda .ypos\nsta $d012\n\nlda $d011\nand #$7f\nsta $d011\n\nldx #00\nstx bocol\n\ncli\njmp * ; loop here\n\n.flicker\n  dec $d019\n\n  nop\n  nop\n  nop\n  nop\n\n  ldx #01\n  stx bgcol\n  stx bocol\n\n  nop\n  nop\n  nop\n  nop\n  nop\n  nop\n  nop\n  nop\n  nop\n  nop\n  nop\n\n  ldx #00\n  stx bgcol\n  stx bocol\n\n  jmp $ea81\n\n.ypos !byte 210\n","sourcePath":"external/github.com/cslarsen_c64-examples/raster.asm","sourceMtimeMs":1462575743000,"sourceUrl":"https://github.com/cslarsen/c64-examples/blob/master/raster.asm","sourceRepoUrl":"https://github.com/cslarsen/c64-examples","license":"UNKNOWN","attribution":"Source: cslarsen/c64-examples (License unknown)"},{"name":"github.com/cslarsen_c64-examples/ywobble.asm","language":"asm","vector":[0,0,0,0,-0.017105892300605774,0,0.03421178460121155,0.05987062305212021,0,0,-0.02565883845090866,0,0.03421178460121155,0.02565883845090866,0,-0.10263535380363464,-0.02565883845090866,0,0.03421178460121155,0.008552946150302887,0,-0.0684235692024231,0,0,0.03421178460121155,0.02565883845090866,0,0,-0.008552946150302887,0,0.03421178460121155,0.17105892300605774,0,0,0,0,0,0,0,0,-0.008552946150302887,0,0,0.07697651535272598,0,0,-0.05131767690181732,0,0.03421178460121155,0.008552946150302887,0,-0.0684235692024231,0,0,0.10263535380363464,0.008552946150302887,0,-0.0684235692024231,-0.017105892300605774,0,0.0684235692024231,0.008552946150302887,0,0,-0.02565883845090866,0,0.03421178460121155,0,0,-0.10263535380363464,-0.0684235692024231,0,0,0,0,0,-0.0684235692024231,0,0.03421178460121155,0,0,-0.10263535380363464,0,0,0,0.1368471384048462,0,-0.1368471384048462,-0.017105892300605774,0,0,0.008552946150302887,0,0,-0.017105892300605774,0,0,0,0,0,0,0,0.0684235692024231,0.017105892300605774,0,-0.0684235692024231,-0.03421178460121155,0,0.03421178460121155,0.017105892300605774,0,-0.03421178460121155,-0.05987062305212021,0,0.03421178460121155,0.017105892300605774,0,0,-0.03421178460121155,0,0.03421178460121155,0.03421178460121155,0,-0.0684235692024231,-0.008552946150302887,0,0.47896498441696167,0.017105892300605774,0,-0.0684235692024231,0,0,0.03421178460121155,0,0,0,0,0,0,0.008552946150302887,0,0,0,0,0.0684235692024231,0.09408240765333176,0,-0.03421178460121155,-0.03421178460121155,0,0,0.05131767690181732,0,0,-0.03421178460121155,0,0.03421178460121155,0.0684235692024231,0,0,-0.017105892300605774,0,0.0684235692024231,0.017105892300605774,0,-0.03421178460121155,-0.05131767690181732,0,0.2052707076072693,0,0,-0.0684235692024231,-0.008552946150302887,0,0,0.017105892300605774,0,-0.0684235692024231,-0.05987062305212021,0,0.10263535380363464,0,0,-0.03421178460121155,-0.10263535380363464,0,0.10263535380363464,0,0,-0.10263535380363464,-0.03421178460121155,0,0.03421178460121155,0,0,0,0,0,0.03421178460121155,0.10263535380363464,0,-0.03421178460121155,-0.042764730751514435,0,0.0684235692024231,0.017105892300605774,0,0,-0.02565883845090866,0,0,0.017105892300605774,0,-0.03421178460121155,0,0,0.03421178460121155,0.02565883845090866,0,-0.0684235692024231,-0.03421178460121155,0,0.03421178460121155,0.24803544580936432,0,0,-0.05987062305212021,0,0.03421178460121155,0.02565883845090866,0,0,-0.017105892300605774,0,0.03421178460121155,0.008552946150302887,0,-0.03421178460121155,0,0,0,0.042764730751514435,0,0,-0.017105892300605774,0,0,0,0,0,0,0,0,0.017105892300605774,0,0,0,0,0,0.042764730751514435,0,0,-0.03421178460121155,0,0.03421178460121155,0.1282941997051239,0,0,-0.05131767690181732,0,0,0.017105892300605774,0,0,-0.03421178460121155,0,0,0.05987062305212021,0,-0.1368471384048462,-0.042764730751514435,0,0,0.05131767690181732,0,-0.03421178460121155,-0.05131767690181732,0,0,0.02565883845090866,0,0,-0.02565883845090866,0,0.0684235692024231,0.017105892300605774,0,-0.03421178460121155,-0.05131767690181732,0,0,0.03421178460121155,0,0,0,0,0,0,0,0,-0.017105892300605774,0,0.03421178460121155,0.03421178460121155,0,0,-0.05131767690181732,0,0.30790606141090393,0.02565883845090866,0,0,-0.008552946150302887,0,0,0.02565883845090866,0,0,0,0,0.1368471384048462,0.02565883845090866,0,-0.0684235692024231,-0.03421178460121155,0,0,0.11974124610424042,0,0,-0.017105892300605774,0,0,0.008552946150302887,0,-0.03421178460121155,0,0,0,0,0,-0.03421178460121155,0,0,0,0.017105892300605774,0,-0.1368471384048462,-0.008552946150302887,0,0,0.017105892300605774,0,-0.1368471384048462,0,0,0,0.008552946150302887,0,0,0,0,0.2736942768096924,0.017105892300605774,0,-0.03421178460121155,-0.07697651535272598,0,0,0.05131767690181732,0,-0.03421178460121155,-0.03421178460121155,0],"text":"; \"wobbles\" (more like staccatos) screen's yscroll\n\n!source \"basic-boot.asm\"\n\n+start_at $0900\n\n  lda #$00\n.loop\n  ; Wait for vsync\n  cmp $d012\n  bne .loop\n\n  ; Only alter yscroll on every nth frame\n  dec .framecount\n  cmp .framecount\n  bne .loop\n\n  ; Reset counter\n  lda #$2a ; number of frames to skip\n  ; I've tried restarting every second, but without using IRQs, it's hard to get this\n  ; entirely correct\n  sta .framecount\n\n  ; Increment ypos\n  inc .ypos\n  lda .ypos\n  and #$07\n  sta .ypos\n\n  ; Only set last three bits of $d011 (control register 1)\n  lda $d011\n  and #$f8\n  ora .ypos\n  sta $d011\n\n  lda #$00\n  jmp .loop\n\n.ypos !byte $03\n.framecount !byte $00\n","sourcePath":"external/github.com/cslarsen_c64-examples/ywobble.asm","sourceMtimeMs":1462575743000,"sourceUrl":"https://github.com/cslarsen/c64-examples/blob/master/ywobble.asm","sourceRepoUrl":"https://github.com/cslarsen/c64-examples","license":"UNKNOWN","attribution":"Source: cslarsen/c64-examples (License unknown)"},{"name":"github.com/digitsensitive_c64/src/examples/binaryAddition.asm","language":"asm","vector":[0,0.0012714447220787406,0,0,0,0,0,0.0012714447220787406,0,0,-0.005085778888314962,0,0.005085778888314962,0,0,-0.02034311555325985,0,0,0,0.0038143342826515436,0,0,-0.0012714447220787406,0,0.005085778888314962,0.002542889444157481,0,0,-0.0012714447220787406,0,0.005085778888314962,0.03941478952765465,0,-0.005085778888314962,0,0,0,0.0012714447220787406,0,0,0,0,0,0,0,0,-0.0012714447220787406,0,0,0.0012714447220787406,0,-0.005085778888314962,-0.0038143342826515436,0,0,0,0,-0.005085778888314962,-0.006357223726809025,0,0,0,0,0,-0.0012714447220787406,0,0,0.002542889444157481,0,0,-0.005085778888314962,0,0.005085778888314962,0,0,0,-0.0012714447220787406,0,0,0,0,0,-0.002542889444157481,0,0.010171557776629925,0.005085778888314962,0,-0.010171557776629925,-0.00890011340379715,0,0,0,0,0,0,0,0.005085778888314962,0,0,0,0,0,0.6052076816558838,0.0012714447220787406,0,-0.010171557776629925,0,0,0.010171557776629925,0.002542889444157481,0,0,-0.010171557776629925,0,0,0,0,0,0,0,0,0.002542889444157481,0,-0.005085778888314962,-0.002542889444157481,0,0.010171557776629925,0.002542889444157481,0,-0.010171557776629925,-0.002542889444157481,0,0.010171557776629925,0.0012714447220787406,0,-0.010171557776629925,0,0,0,0,0,0,0,0,0,0.01907167211174965,0,0,-0.002542889444157481,0,0.005085778888314962,0,0,0,-0.002542889444157481,0,0,0,0,0,0,0,0.005085778888314962,0,0,0,-0.0012714447220787406,0,0,0.002542889444157481,0,-0.6204650402069092,-0.002542889444157481,0,0.005085778888314962,0,0,0,0,0,0.005085778888314962,0.006357223726809025,0,0,-0.007628668565303087,0,0,0,0,0,0,0,0.005085778888314962,0.002542889444157481,0,-0.005085778888314962,-0.0012714447220787406,0,0.010171557776629925,0.3051467537879944,0,-0.005085778888314962,-0.00890011340379715,0,0.005085778888314962,0.005085778888314962,0,0,0,0,0.005085778888314962,0,0,0,0,0,0,0,0,-0.005085778888314962,-0.002542889444157481,0,0.005085778888314962,0.006357223726809025,0,-0.005085778888314962,-0.010171557776629925,0,0,0.005085778888314962,0,-0.005085778888314962,-0.005085778888314962,0,0,0.0012714447220787406,0,-0.005085778888314962,0,0,0,0.0012714447220787406,0,0,-0.0012714447220787406,0,0,0.002542889444157481,0,-0.005085778888314962,0,0,0,0,0,0,0,0,0,0.002542889444157481,0,-0.005085778888314962,-0.0012714447220787406,0,0,0,0,0,-0.31150397658348083,0,0,0.002542889444157481,0,0,0,0,0.005085778888314962,0.002542889444157481,0,0,0,0,0,0.0012714447220787406,0,0,0,0,0,0.002542889444157481,0,0,-0.002542889444157481,0,0,0.007628668565303087,0,-0.010171557776629925,-0.005085778888314962,0,0,0.002542889444157481,0,0,0,0,0.005085778888314962,0.0038143342826515436,0,0,0,0,0,0.15130192041397095,0,0,-0.005085778888314962,0,0.0762866884469986,0.005085778888314962,0,0,-0.002542889444157481,0,0,0,0,0,-0.002542889444157481,0,0,0,0,0,-0.0038143342826515436,0,0,0.002542889444157481,0,-0.005085778888314962,-0.002542889444157481,0,0,0.002542889444157481,0,-0.010171557776629925,-0.005085778888314962,0,0,0,0,0,0,0,0.005085778888314962,0,0,-0.010171557776629925,-0.002542889444157481,0,0,0.0012714447220787406,0,0,0,0,0,0,0,-0.005085778888314962,0,0,0.010171557776629925,0.0038143342826515436,0,-0.015257337130606174,0,0,0,0,0,0,-0.1551162600517273,0],"text":"; ==========================================================\n; COMMODORE 64 - Examples in 6502 Assembly language\n; ¬© Digitsensitive; digit.sensitivee@gmail.com\n; Binary Addition\n; ==========================================================\n\n; ----------------------------------------------------------\n; Main Loop\n; ----------------------------------------------------------\n\n        *=$02a7                 ; sys 679\n\ninit    jsr $e544               ; Clear the screen\n        lda #%0001              ; 0001 = decimal 1\n        clc                     ; Clear Carry flag\n        adc #%0010              ; Add with carry (1+2), so accumulator is 3 now\n        sta $0400               ; store the result (= 3)\n        rts\n","sourcePath":"external/github.com/digitsensitive_c64/src/examples/binaryAddition.asm","sourceMtimeMs":1701175250000,"sourceUrl":"https://github.com/digitsensitive/c64/blob/main/examples/binaryAddition.asm","sourceRepoUrl":"https://github.com/digitsensitive/c64","license":"UNKNOWN","attribution":"Source: digitsensitive/c64 (License unknown)"},{"name":"github.com/digitsensitive_c64/src/examples/blackScreen.asm","language":"asm","vector":[0,0.0012461448786780238,0,0,-0.0024922897573560476,0,0.00996915902942419,0.004984579514712095,0,0,-0.00996915902942419,0,0.00996915902942419,0.0024922897573560476,0,-0.01993831805884838,-0.006230724509805441,0,0,0.0037384345196187496,0,-0.004984579514712095,0,0,0.004984579514712095,0.013707593083381653,0,0,-0.0012461448786780238,0,0.00996915902942419,0.0573226623237133,0,-0.004984579514712095,-0.0012461448786780238,0,0,0.0024922897573560476,0,0,-0.0012461448786780238,0,0.004984579514712095,0,0,-0.004984579514712095,-0.0024922897573560476,0,0.004984579514712095,0.0012461448786780238,0,-0.014953738078474998,-0.006230724509805441,0,0,0.0037384345196187496,0,0,-0.006230724509805441,0,0,0,0,0,-0.0012461448786780238,0,0.004984579514712095,0.0024922897573560476,0,0,-0.004984579514712095,0,0.004984579514712095,0.0024922897573560476,0,0,-0.007476869039237499,0,0.004984579514712095,0,0,0,-0.004984579514712095,0,0,0.024922898039221764,0,-0.00996915902942419,-0.0037384345196187496,0,0.004984579514712095,0.0012461448786780238,0,-0.00996915902942419,-0.004984579514712095,0,0.004984579514712095,0,0,0,0,0,0.5981495380401611,0.004984579514712095,0,-0.00996915902942419,-0.0024922897573560476,0,0,0.004984579514712095,0,-0.004984579514712095,-0.00996915902942419,0,0,0,0,-0.004984579514712095,-0.0024922897573560476,0,0.004984579514712095,0.004984579514712095,0,-0.014953738078474998,-0.004984579514712095,0,0.01993831805884838,0.006230724509805441,0,0,-0.0024922897573560476,0,0.004984579514712095,0.0012461448786780238,0,-0.004984579514712095,0,0,0,0.0024922897573560476,0,0,-0.0024922897573560476,0,0,0.02616904117166996,0,-0.00996915902942419,-0.007476869039237499,0,0.01993831805884838,0.0012461448786780238,0,0,0,0,0,0,0,0,0,0,0.004984579514712095,0.0024922897573560476,0,0,-0.0024922897573560476,0,0,0.0037384345196187496,0,-0.6131032705307007,-0.0024922897573560476,0,0.004984579514712095,0.0024922897573560476,0,-0.00996915902942419,0,0,0,0.0012461448786780238,0,0,-0.007476869039237499,0,0,0.0037384345196187496,0,-0.024922898039221764,-0.007476869039237499,0,0.004984579514712095,0.0024922897573560476,0,0,-0.0024922897573560476,0,0.05483037233352661,0.3115362226963043,0,-0.004984579514712095,-0.006230724509805441,0,0.03987663611769676,0,0,-0.004984579514712095,-0.004984579514712095,0,0,0,0,-0.004984579514712095,-0.0024922897573560476,0,0,0.004984579514712095,0,-0.00996915902942419,-0.007476869039237499,0,0.004984579514712095,0.012461449019610882,0,-0.004984579514712095,-0.004984579514712095,0,0.004984579514712095,0.0024922897573560476,0,-0.004984579514712095,-0.0037384345196187496,0,0,0.0012461448786780238,0,-0.004984579514712095,0,0,0,0.0024922897573560476,0,0,-0.006230724509805441,0,0,0.00996915902942419,0,-0.00996915902942419,0,0,0,0.0012461448786780238,0,0,-0.0012461448786780238,0,0,0.0037384345196187496,0,-0.004984579514712095,-0.0037384345196187496,0,0.004984579514712095,0,0,0,-0.30655163526535034,0,0,0.0024922897573560476,0,0,-0.004984579514712095,0,0,0.0012461448786780238,0,-0.00996915902942419,0,0,0,0.0012461448786780238,0,0,-0.012461449019610882,0,0,0.0037384345196187496,0,0,0,0,0.00996915902942419,0.027415186166763306,0,-0.01993831805884838,-0.004984579514712095,0,0.004984579514712095,0.021184463053941727,0,0,-0.004984579514712095,0,0.004984579514712095,0.0012461448786780238,0,0,-0.0024922897573560476,0,0,0.14953738451004028,0,0,-0.007476869039237499,0,0.09470701217651367,0.0024922897573560476,0,0,-0.0037384345196187496,0,0.004984579514712095,0.0024922897573560476,0,0,-0.0037384345196187496,0,0,0.0012461448786780238,0,0,-0.006230724509805441,0,0,0.004984579514712095,0,-0.00996915902942419,0,0,0.004984579514712095,0.0012461448786780238,0,-0.00996915902942419,-0.006230724509805441,0,0,0,0,0,0,0,0.004984579514712095,0,0,-0.00996915902942419,-0.004984579514712095,0,0.004984579514712095,0.007476869039237499,0,-0.00996915902942419,0,0,0,0,0,-0.00996915902942419,0,0,0.04984579607844353,0.0012461448786780238,0,-0.004984579514712095,-0.004984579514712095,0,0,0,0,-0.00996915902942419,-0.15327581763267517,0],"text":"; ==========================================================\n; COMMODORE 64 - Examples in 6502 Assembly language\n; ¬© Digitsensitive; digit.sensitivee@gmail.com\n; How to clear the screen to black\n; ==========================================================\n\n.include \"src/include/constants.asm\"\n\n; ----------------------------------------------------------\n; Main Loop\n; ----------------------------------------------------------\n\n        *=$02a7                 ; sys 679\n\ninit    ldx #$00\n        stx $d020               ; Border color register\n        stx $d021               ; Background color\n\nclear   lda #$20                ; spacebar screen code\n        sta $0400,x             ; fill four areas of screen with 256 spacebar characters\n        sta $0500,x\n        sta $0600,x\n        sta $06e8,x\n        lda #$00                ; set foreground to black in Color Ram \n        sta $d800,x\n        sta $d900,x\n        sta $da00,x\n        sta $dae8,x\n        inx\n        bne clear               ; bne = branch on not equal\n                                ; did x turn to zero already? \n                                ; if yes -> stop loop\n                                ; if no -> continue loop\n        rts\n","sourcePath":"external/github.com/digitsensitive_c64/src/examples/blackScreen.asm","sourceMtimeMs":1701175250000,"sourceUrl":"https://github.com/digitsensitive/c64/blob/main/blackScreen.asm","sourceRepoUrl":"https://github.com/digitsensitive/c64","license":"UNKNOWN","attribution":"Source: digitsensitive/c64 (License unknown)"},{"name":"github.com/digitsensitive_c64/src/examples/createScore.asm","language":"asm","vector":[0.005166510120034218,0,0,0,-0.0038748825900256634,0,0,0.002583255060017109,0,0,-0.002583255060017109,0,0.02066604048013687,0,0,-0.005166510120034218,-0.002583255060017109,0,0,0.009041392244398594,0,0,-0.0012916275300085545,0,0,0.012916275300085545,0,0,-0.005166510120034218,0,0,0.04133208096027374,0,-0.005166510120034218,0,0,0,0,0,0,0,0,0.005166510120034218,0,0,0,-0.005166510120034218,0,0.005166510120034218,0.002583255060017109,0,0,-0.006458137650042772,0,0,0,0,-0.02066604048013687,-0.009041392244398594,0,0,0,0,-0.005166510120034218,-0.0012916275300085545,0,0,0.0038748825900256634,0,0,-0.005166510120034218,0,0.04649858921766281,0.007749765180051327,0,0,-0.0038748825900256634,0,0,0.0012916275300085545,0,-0.005166510120034218,0,0,0.005166510120034218,0.02066604048013687,0,-0.005166510120034218,-0.005166510120034218,0,0,0.0012916275300085545,0,-0.005166510120034218,-0.002583255060017109,0,0.005166510120034218,0.002583255060017109,0,0,-0.0012916275300085545,0,0.6096481680870056,0,0,-0.005166510120034218,-0.002583255060017109,0,0.010333020240068436,0.010333020240068436,0,0,-0.002583255060017109,0,0,0,0,-0.005166510120034218,-0.0012916275300085545,0,0,0.0012916275300085545,0,-0.005166510120034218,-0.0012916275300085545,0,0.036165568977594376,0,0,-0.005166510120034218,-0.0038748825900256634,0,0.005166510120034218,0.0038748825900256634,0,0,0,0,0.005166510120034218,0.0038748825900256634,0,0,-0.002583255060017109,0,0,0.02195766754448414,0,-0.005166510120034218,0,0,0.02066604048013687,0,0,0,-0.010333020240068436,0,0,0,0,0,-0.005166510120034218,0,0,0,0,0,-0.0012916275300085545,0,0,0.023249294608831406,0,-0.6044816970825195,-0.0038748825900256634,0,0,0,0,-0.005166510120034218,-0.002583255060017109,0,0,0.0038748825900256634,0,0,-0.005166510120034218,0,0,0.002583255060017109,0,0,-0.0038748825900256634,0,0.005166510120034218,0.002583255060017109,0,-0.005166510120034218,0,0,0.04133208096027374,0.31515711545944214,0,0,-0.005166510120034218,0,0.010333020240068436,0.005166510120034218,0,0,-0.0012916275300085545,0,0,0.0012916275300085545,0,0,-0.002583255060017109,0,0,0,0,0,-0.002583255060017109,0,0.010333020240068436,0.023249294608831406,0,-0.015499530360102654,-0.0038748825900256634,0,0,0.002583255060017109,0,-0.005166510120034218,0,0,0,0.002583255060017109,0,-0.005166510120034218,0,0,0.005166510120034218,0,0,0,-0.0038748825900256634,0,0.010333020240068436,0.010333020240068436,0,-0.005166510120034218,0,0,0.005166510120034218,0.0012916275300085545,0,0,0,0,0,0.0012916275300085545,0,0,0,0,0.005166510120034218,0,0,0,-0.30740734934806824,0,0,0,0,-0.005166510120034218,-0.0038748825900256634,0,0,0,0,-0.010333020240068436,0,0,0,0.011624647304415703,0,0,0,0,0,0.002583255060017109,0,-0.005166510120034218,-0.0038748825900256634,0,0.005166510120034218,0.02195766754448414,0,-0.005166510120034218,-0.0012916275300085545,0,0,0.005166510120034218,0,-0.005166510120034218,-0.0012916275300085545,0,0.015499530360102654,0.0012916275300085545,0,0,0,0,0.005166510120034218,0.1524120420217514,0,-0.010333020240068436,-0.0012916275300085545,0,0.07749765366315842,0.007749765180051327,0,0,-0.007749765180051327,0,0,0,0,0,-0.0038748825900256634,0,0,0,0,-0.010333020240068436,-0.0038748825900256634,0,0,0.011624647304415703,0,-0.005166510120034218,-0.0012916275300085545,0,0,0.006458137650042772,0,-0.015499530360102654,-0.002583255060017109,0,0,0.0038748825900256634,0,0,0,0,0.005166510120034218,0,0,-0.010333020240068436,-0.0012916275300085545,0,0.010333020240068436,0.007749765180051327,0,-0.005166510120034218,0,0,0,0,0,0,-0.002583255060017109,0,0.04133208096027374,0,0,-0.010333020240068436,-0.005166510120034218,0,0,0,0,-0.005166510120034218,-0.15112042427062988,0],"text":"; ==========================================================\n; COMMODORE 64 - Examples in 6502 Assembly language\n; ¬© Digitsensitive; digit.sensitivee@gmail.com; 24.04.2021\n; Raster time\n; ==========================================================\n\n.include \"src/include/constants.asm\"\n\n; ----------------------------------------------------------\n; Main Loop\n; ----------------------------------------------------------\n\n                *=$c000                         ; sys 49152\n\n\n                lda #147\n                jsr $ffd2\n\nloop            lda #100\n\n                ; compares contents of accumulator against the specified operand \nwait1           cmp RASTER                       \n                bne wait1\n\n                inc BORDER_COLOR_REGISTER\n\n                ; do operations here\n                clc\n                lda score\n                adc #1\n                sta score\n                lda score+1\n                adc #0\n                sta score+1\n\n                lda #19\n                jsr $ffd2\n\n                ; print score\n                ldx score\n                lda score+1\n                jsr $bdcd\n\n                dec BORDER_COLOR_REGISTER\n\n                jmp loop\n\n\nscore           .byte 0,0                       ; assign low and high byte\n","sourcePath":"external/github.com/digitsensitive_c64/src/examples/createScore.asm","sourceMtimeMs":1701175250000,"sourceUrl":"https://github.com/digitsensitive/c64/blob/main/createScore.asm","sourceRepoUrl":"https://github.com/digitsensitive/c64","license":"UNKNOWN","attribution":"Source: digitsensitive/c64 (License unknown)"},{"name":"github.com/digitsensitive_c64/src/examples/decimalHexAndBinaryNumbers.asm","language":"asm","vector":[0,0.004912109114229679,0,0,-0.0008186848717741668,0,0.006549478974193335,0.0016373697435483336,0,-0.0032747394870966673,-0.0016373697435483336,0,0.006549478974193335,0,0,-0.0032747394870966673,0,0,0.009824218228459358,0.0024560545571148396,0,-0.0032747394870966673,0,0,0.006549478974193335,0.0008186848717741668,0,0,-0.0008186848717741668,0,0.006549478974193335,0.0409342423081398,0,-0.0032747394870966673,0,0,0,0,0,0,0,0,0.006549478974193335,0.004912109114229679,0,0,-0.007368163671344519,0,0,0.0008186848717741668,0,-0.0032747394870966673,-0.0024560545571148396,0,0.0032747394870966673,0.0008186848717741668,0,0,-0.0008186848717741668,0,0,0,0,0,-0.0008186848717741668,0,0.006549478974193335,0.004093424417078495,0,0,-0.0016373697435483336,0,0.0032747394870966673,0,0,0,-0.0016373697435483336,0,0,0.0016373697435483336,0,-0.006549478974193335,-0.0016373697435483336,0,0.01309895794838667,0.01309895794838667,0,-0.022923175245523453,-0.00818684883415699,0,0,0.0032747394870966673,0,0,-0.0016373697435483336,0,0.0032747394870966673,0.0008186848717741668,0,0,-0.0016373697435483336,0,0.7630142569541931,0.004912109114229679,0,-0.006549478974193335,-0.0032747394870966673,0,0,0.0032747394870966673,0,-0.006549478974193335,-0.0016373697435483336,0,0,0.007368163671344519,0,0,-0.0016373697435483336,0,0.0032747394870966673,0.0032747394870966673,0,0,-0.0008186848717741668,0,0.009824218228459358,0.0032747394870966673,0,-0.009824218228459358,-0.0016373697435483336,0,0.0032747394870966673,0.0008186848717741668,0,-0.0032747394870966673,0,0,0,0.0032747394870966673,0,0,0,0,0,0.019648436456918716,0,-0.0032747394870966673,-0.0016373697435483336,0,0.0032747394870966673,0.0016373697435483336,0,-0.0032747394870966673,0,0,0,0.0016373697435483336,0,0,-0.0024560545571148396,0,0.009824218228459358,0.0032747394870966673,0,0,-0.0008186848717741668,0,0,0.0016373697435483336,0,-0.40606769919395447,0,0,0,0,0,-0.0032747394870966673,-0.0032747394870966673,0,0.006549478974193335,0.007368163671344519,0,0,-0.01228027231991291,0,0,0,0,0,0,0,0.0032747394870966673,0.0024560545571148396,0,0,-0.0008186848717741668,0,0.0032747394870966673,0.38805660605430603,0,-0.0032747394870966673,-0.007368163671344519,0,0.006549478974193335,0.0008186848717741668,0,0,-0.004093424417078495,0,0,0,0,0,0,0,0.006549478974193335,0.0032747394870966673,0,-0.009824218228459358,-0.0008186848717741668,0,0.0032747394870966673,0.006549478974193335,0,-0.0032747394870966673,-0.005730793811380863,0,0.0032747394870966673,0.004093424417078495,0,-0.0032747394870966673,-0.0024560545571148396,0,0,0.0016373697435483336,0,-0.0032747394870966673,0,0,0.009824218228459358,0.0016373697435483336,0,0,-0.0024560545571148396,0,0,0.0016373697435483336,0,-0.006549478974193335,-0.0016373697435483336,0,0,0.0016373697435483336,0,0,0,0,0,0.004912109114229679,0,0,-0.0008186848717741668,0,0.006549478974193335,0.0008186848717741668,0,0,-0.20303384959697723,0,0.0032747394870966673,0,0,-0.006549478974193335,-0.0016373697435483336,0,0.006549478974193335,0.004912109114229679,0,-0.006549478974193335,0,0,0,0.0008186848717741668,0,0,0,0,0.009824218228459358,0.0016373697435483336,0,0,-0.0016373697435483336,0,0,0.004912109114229679,0,-0.0032747394870966673,-0.007368163671344519,0,0,0.0032747394870966673,0,0,0,0,0.0032747394870966673,0.0008186848717741668,0,0,0,0,0,0.19402830302715302,0,0,-0.006549478974193335,0,0.07859374582767487,0.0016373697435483336,0,0,-0.0032747394870966673,0,0,0.0016373697435483336,0,0,-0.0016373697435483336,0,0.006549478974193335,0.0008186848717741668,0,-0.009824218228459358,-0.0016373697435483336,0,0,0.007368163671344519,0,-0.0032747394870966673,-0.0024560545571148396,0,0,0.0008186848717741668,0,0,-0.004093424417078495,0,0,0,0,0,0,0,0.0032747394870966673,0,0,-0.0032747394870966673,-0.0008186848717741668,0,0,0.004093424417078495,0,0,-0.0008186848717741668,0,0.0032747394870966673,0.0016373697435483336,0,-0.0032747394870966673,-0.0032747394870966673,0,0.02619791589677334,0.005730793811380863,0,-0.01637369766831398,-0.0032747394870966673,0,0.0032747394870966673,0,0,-0.0032747394870966673,-0.10151692479848862,0],"text":"; ==========================================================\n; COMMODORE 64 - Examples in 6502 Assembly language\n; ¬© Digitsensitive; digit.sensitivee@gmail.com\n; Decimal, Hexadecimal and Binary numbers\n; ==========================================================\n\n; ----------------------------------------------------------\n; A binary number is preceded by a percent sign (%)\n; Immediate addressing can be identified by the Hashpount (#)\n; The dollar sign ($) tells the assembler, that the number is in Hexadecimal.\n; Example:\n; The number 6 can be written as follows:\n; #6 = #$6 = #$06 = #%0110\n; ----------------------------------------------------------\n\n; ----------------------------------------------------------\n; Main Loop\n; ----------------------------------------------------------\n\n        *=$02a7                 ; sys 679\n\n; In this example we will display four times the letter \"F\"\ninit    lda #6                  ; decimal\n        sta $0400\n        lda #$6                 ; hexadecimal\n        sta $0401\n        lda #$06                ; hexadecimal\n        sta $0402\n        lda #%0110              ; binary\n        sta $0403\n        rts","sourcePath":"external/github.com/digitsensitive_c64/src/examples/decimalHexAndBinaryNumbers.asm","sourceMtimeMs":1701175250000,"sourceUrl":"https://github.com/digitsensitive/c64/blob/main/decimalHexAndBinaryNumbers.asm","sourceRepoUrl":"https://github.com/digitsensitive/c64","license":"UNKNOWN","attribution":"Source: digitsensitive/c64 (License unknown)"},{"name":"github.com/digitsensitive_c64/src/examples/drawACharacterAtScreenLocation.asm","language":"asm","vector":[0,0.001260063610970974,0,0,-0.002520127221941948,0,0.010080508887767792,0.002520127221941948,0,0,-0.007560381665825844,0,0.010080508887767792,0.005040254443883896,0,-0.020161017775535583,-0.003780190832912922,0,0,0.003780190832912922,0,-0.005040254443883896,0,0,0.005040254443883896,0.01260063610970974,0,0,-0.001260063610970974,0,0.010080508887767792,0.0667833685874939,0,-0.005040254443883896,0,0,0,0.002520127221941948,0,0,-0.003780190832912922,0,0,0,0,0,-0.002520127221941948,0,0,0.001260063610970974,0,-0.015120763331651688,-0.013860699720680714,0,0.010080508887767792,0,0,0,-0.01260063610970974,0,0,0,0,0,-0.001260063610970974,0,0.005040254443883896,0.002520127221941948,0,0,0,0,0.02520127221941948,0.005040254443883896,0,0,-0.007560381665825844,0,0.005040254443883896,0,0,-0.005040254443883896,-0.002520127221941948,0,0,0.02520127221941948,0,-0.010080508887767792,-0.001260063610970974,0,0,0.001260063610970974,0,0,-0.002520127221941948,0,0.005040254443883896,0,0,0,-0.001260063610970974,0,0.5947500467300415,0.005040254443883896,0,-0.005040254443883896,-0.002520127221941948,0,0.005040254443883896,0.010080508887767792,0,-0.005040254443883896,-0.010080508887767792,0,0,0,0,-0.005040254443883896,-0.002520127221941948,0,0.005040254443883896,0.003780190832912922,0,-0.015120763331651688,-0.003780190832912922,0,0.020161017775535583,0.007560381665825844,0,-0.030241526663303375,-0.002520127221941948,0,0.010080508887767792,0.001260063610970974,0,-0.005040254443883896,0,0,0,0,0,0,0,0,0,0.02268114499747753,0,0,-0.007560381665825844,0,0.020161017775535583,0.005040254443883896,0,0,-0.001260063610970974,0,0,0,0,0,0,0,0.005040254443883896,0.002520127221941948,0,0,-0.00630031805485487,0,0,0.01260063610970974,0,-0.6098707914352417,-0.002520127221941948,0,0.005040254443883896,0.002520127221941948,0,-0.010080508887767792,-0.002520127221941948,0,0,0.001260063610970974,0,0,-0.005040254443883896,0,0,0.002520127221941948,0,-0.015120763331651688,-0.002520127221941948,0,0.005040254443883896,0.002520127221941948,0,0,-0.001260063610970974,0,0.05040254443883896,0.30997565388679504,0,-0.005040254443883896,-0.002520127221941948,0,0.08568432182073593,0.002520127221941948,0,0,-0.003780190832912922,0,0.010080508887767792,0,0,-0.005040254443883896,-0.002520127221941948,0,0,0.005040254443883896,0,-0.010080508887767792,-0.007560381665825844,0,0.005040254443883896,0.01260063610970974,0,-0.005040254443883896,-0.020161017775535583,0,0,0.005040254443883896,0,-0.030241526663303375,-0.003780190832912922,0,0,0.001260063610970974,0,-0.005040254443883896,0,0,0,0.002520127221941948,0,0,-0.001260063610970974,0,0,0.010080508887767792,0,-0.010080508887767792,0,0,0,0,0,0,0,0,0,0.002520127221941948,0,-0.005040254443883896,-0.003780190832912922,0,0.005040254443883896,0.002520127221941948,0,0,-0.30493539571762085,0,0,0.002520127221941948,0,-0.005040254443883896,-0.005040254443883896,0,0,0.001260063610970974,0,-0.010080508887767792,0,0,0.020161017775535583,0.00630031805485487,0,0,-0.007560381665825844,0,0,0.003780190832912922,0,0,-0.001260063610970974,0,0.005040254443883896,0.02520127221941948,0,-0.015120763331651688,-0.005040254443883896,0,0.010080508887767792,0.042842160910367966,0,0,0,0,0.005040254443883896,0.00630031805485487,0,0,-0.002520127221941948,0,0,0.14868751168251038,0,0,-0.00630031805485487,0,0.09072457998991013,0.003780190832912922,0,0,-0.003780190832912922,0,0,0,0,-0.005040254443883896,-0.016380826011300087,0,0,0.001260063610970974,0,0,-0.00630031805485487,0,0,0.005040254443883896,0,-0.02520127221941948,-0.007560381665825844,0,0,0.002520127221941948,0,-0.010080508887767792,-0.00630031805485487,0,0,0,0,0,0,0,0.005040254443883896,0,0,0,-0.002520127221941948,0,0.010080508887767792,0.007560381665825844,0,-0.010080508887767792,0,0,0,0,0,-0.005040254443883896,-0.002520127221941948,0,0.05040254443883896,0.001260063610970974,0,0,-0.005040254443883896,0,0,0.010080508887767792,0,-0.005040254443883896,-0.15246769785881042,0],"text":"; ==========================================================\n; COMMODORE 64 - Examples in 6502 Assembly language\n; ¬© Digitsensitive; digit.sensitivee@gmail.com\n; How to draw a character at a specific location on screen\n; ==========================================================\n\n.include \"src/include/macros-general.asm\"\n\n; ----------------------------------------------------------\n; Main Loop\n; ----------------------------------------------------------\n\n        *=$02a7                 ; sys 679\n\ninit    ldx #$00\n        stx $d020               ; Border color register\n        stx $d021               ; Background color\n\nclear   lda #$20                ; spacebar screen code\n        sta $0400,x             ; fill four areas of screen with 256 spacebar characters\n        sta $0500,x\n        sta $0600,x\n        sta $06e8,x\n        lda #$00                ; set foreground to black in Color Ram \n        sta $d800,x\n        sta $d900,x\n        sta $da00,x\n        sta $dae8,x\n        inx\n        bne clear\n\ndraw    #drawCharacterAt $51,$D,$06,$F  ; draw first character\n        #drawCharacterAt $58,$E,$06,$E  ; draw second character\n        #drawCharacterAt $5A,$F,$06,$D  ; draw third character\n        rts\n","sourcePath":"external/github.com/digitsensitive_c64/src/examples/drawACharacterAtScreenLocation.asm","sourceMtimeMs":1701175250000,"sourceUrl":"https://github.com/digitsensitive/c64/blob/main/drawACharacterAtScreenLocation.asm","sourceRepoUrl":"https://github.com/digitsensitive/c64","license":"UNKNOWN","attribution":"Source: digitsensitive/c64 (License unknown)"},{"name":"github.com/digitsensitive_c64/src/examples/selectColorFromIncludeFile.asm","language":"asm","vector":[0,0,0,0,-0.0008319438784383237,0,0,0,0,0,-0.0016638877568766475,0,0.009983326308429241,0,0,-0.003327775513753295,-0.0008319438784383237,0,0,0.0024958315771073103,0,-0.003327775513753295,0,0,0,0.003327775513753295,0,0,0,0,0,0.02163054049015045,0,-0.003327775513753295,-0.0008319438784383237,0,0,0,0,0,0,0,0,0,0,-0.003327775513753295,0,0,0,0.0008319438784383237,0,0,-0.0024958315771073103,0,0.003327775513753295,0,0,0,-0.0008319438784383237,0,0,0,0,0,-0.0008319438784383237,0,0,0.003327775513753295,0,0,-0.003327775513753295,0,0.003327775513753295,0,0,-0.003327775513753295,-0.0008319438784383237,0,0,0,0,0,-0.0016638877568766475,0,0,0.003327775513753295,0,-0.003327775513753295,0,0,0,0.0008319438784383237,0,0,-0.0016638877568766475,0,0.003327775513753295,0,0,0,0,0,0.7753716707229614,0,0,-0.003327775513753295,-0.0016638877568766475,0,0,0.00665555102750659,0,-0.003327775513753295,-0.0016638877568766475,0,0,0,0,0,-0.0016638877568766475,0,0,0,0,-0.003327775513753295,-0.0008319438784383237,0,0.01331110205501318,0,0,0,-0.0016638877568766475,0,0.003327775513753295,0.0008319438784383237,0,0,0,0,0,0.0008319438784383237,0,0,-0.0016638877568766475,0,0,0.010815270245075226,0,0,0,0,0.009983326308429241,0.0016638877568766475,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0008319438784383237,0,0,0.0016638877568766475,0,-0.3960052728652954,-0.0016638877568766475,0,0,0,0,-0.003327775513753295,0,0,0,0.0016638877568766475,0,0,-0.003327775513753295,0,0,0,0,-0.003327775513753295,0,0,0.003327775513753295,0.0016638877568766475,0,0,-0.0008319438784383237,0,0.00665555102750659,0.38934972882270813,0,0,-0.0016638877568766475,0,0,0,0,-0.003327775513753295,-0.0024958315771073103,0,0,0,0,0,0,0,0,0,0,0,-0.0016638877568766475,0,0.003327775513753295,0.009151382371783257,0,-0.003327775513753295,-0.0008319438784383237,0,0,0.0016638877568766475,0,-0.003327775513753295,-0.0008319438784383237,0,0,0,0,-0.003327775513753295,0,0,0,0,0,0,-0.0008319438784383237,0,0,0.004991663154214621,0,-0.003327775513753295,0,0,0,0,0,0,-0.0008319438784383237,0,0,0,0,0,0,0,0.003327775513753295,0.0008319438784383237,0,0,-0.1980026364326477,0,0,0,0,0,-0.0016638877568766475,0,0,0,0,-0.00665555102750659,0,0,0.00665555102750659,0.0008319438784383237,0,0,-0.0024958315771073103,0,0,0.0016638877568766475,0,0,0,0,0,0.003327775513753295,0,-0.003327775513753295,-0.0008319438784383237,0,0,0,0,0,-0.0016638877568766475,0,0.003327775513753295,0.0008319438784383237,0,0,0,0,0.003327775513753295,0.19384291768074036,0,0,-0.0008319438784383237,0,0.0432610809803009,0.0016638877568766475,0,0,-0.0024958315771073103,0,0,0,0,0,-0.0016638877568766475,0,0,0,0,0,-0.0024958315771073103,0,0,0.003327775513753295,0,-0.003327775513753295,0,0,0,0.0008319438784383237,0,0,-0.0016638877568766475,0,0,0,0,0,0,0,0.00665555102750659,0,0,-0.00665555102750659,0,0,0,0.004159719217568636,0,0,0,0,0,0,0,-0.003327775513753295,0,0,0.00665555102750659,0,0,0,-0.003327775513753295,0,0,0.003327775513753295,0,-0.003327775513753295,-0.09900131821632385,0],"text":"; ==========================================================\n; COMMODORE 64 - Examples in 6502 Assembly language\n; ¬© Digitsensitive; digit.sensitivee@gmail.com\n; How to select a color from an include file\n; ==========================================================\n\n.include \"src/include/constants.asm\"\n\n; ----------------------------------------------------------\n; Labels\n; ----------------------------------------------------------\n\nborder = $d020\n\n; ----------------------------------------------------------\n; Main Loop\n; ----------------------------------------------------------\n\n        *=$02a7                 ; sys 679\n\nloop    lda #BLUE\n        sta border\n        jmp loop","sourcePath":"external/github.com/digitsensitive_c64/src/examples/selectColorFromIncludeFile.asm","sourceMtimeMs":1701175250000,"sourceUrl":"https://github.com/digitsensitive/c64/blob/main/selectColorFromIncludeFile.asm","sourceRepoUrl":"https://github.com/digitsensitive/c64","license":"UNKNOWN","attribution":"Source: digitsensitive/c64 (License unknown)"},{"name":"github.com/digitsensitive_c64/src/examples/setBorderColor.asm","language":"asm","vector":[0,0,0,0,-0.0008319283369928598,0,0,0,0,0,-0.0016638566739857197,0,0,0,0,-0.0033277133479714394,-0.0016638566739857197,0,0,0.0024957850109785795,0,0,0,0,0,0.0024957850109785795,0,0,0,0,0.0033277133479714394,0.0232939925044775,0,-0.0033277133479714394,0,0,0,0,0,0,0,0,0,0,0,-0.0033277133479714394,-0.0016638566739857197,0,0,0.0008319283369928598,0,0,-0.0024957850109785795,0,0,0,0,0,-0.0008319283369928598,0,0,0,0,0,-0.0008319283369928598,0,0,0.0016638566739857197,0,0,-0.0033277133479714394,0,0.0033277133479714394,0,0,-0.0033277133479714394,-0.0008319283369928598,0,0,0,0,0,-0.0016638566739857197,0,0,0.0033277133479714394,0,-0.006655426695942879,-0.0016638566739857197,0,0,0,0,0,0,0,0.0033277133479714394,0,0,0,0,0,0.775357186794281,0,0,-0.0033277133479714394,0,0,0,0.0033277133479714394,0,0,-0.0016638566739857197,0,0,0,0,0,0,0,0,0,0,-0.0033277133479714394,-0.0008319283369928598,0,0.006655426695942879,0.0016638566739857197,0,0,-0.0016638566739857197,0,0.0033277133479714394,0.0008319283369928598,0,0,0,0,0,0.0008319283369928598,0,0,-0.0016638566739857197,0,0,0.01164699625223875,0,0,0,0,0.0033277133479714394,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0008319283369928598,0,0,0.0016638566739857197,0,-0.39599788188934326,-0.0016638566739857197,0,0,0,0,-0.0033277133479714394,0,0,0,0.0008319283369928598,0,0,-0.004991570021957159,0,0,0,0,-0.006655426695942879,0,0,0.0033277133479714394,0.0016638566739857197,0,0,-0.0008319283369928598,0,0.0033277133479714394,0.38934245705604553,0,0,-0.0024957850109785795,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.006655426695942879,-0.0016638566739857197,0,0.0033277133479714394,0.0033277133479714394,0,-0.0033277133479714394,-0.0008319283369928598,0,0,0.0016638566739857197,0,-0.0033277133479714394,0,0,0,0,0,-0.0033277133479714394,0,0,0,0.0008319283369928598,0,0,-0.0008319283369928598,0,0,0.0016638566739857197,0,-0.0033277133479714394,0,0,0,0,0,0,-0.0008319283369928598,0,0,0,0,0,0,0,0,0,0,0,-0.19799894094467163,0,0,0,0,0,-0.0016638566739857197,0,0,0,0,0,0,0,0.013310853391885757,0.0008319283369928598,0,0,-0.0041596414521336555,0,0,0.0016638566739857197,0,0,0,0,0,0.0016638566739857197,0,-0.0033277133479714394,-0.0016638566739857197,0,0,0,0,0,0,0,0.0033277133479714394,0.0008319283369928598,0,0,0,0,0.0033277133479714394,0.19383929669857025,0,0,-0.0041596414521336555,0,0.046587985008955,0.0016638566739857197,0,0,-0.0016638566739857197,0,0,0,0,0,-0.0016638566739857197,0,0,0,0,0,-0.0024957850109785795,0,0,0.0016638566739857197,0,-0.0033277133479714394,0,0,0,0.0008319283369928598,0,0,-0.0016638566739857197,0,0,0,0,0,0,0,0.0033277133479714394,0,0,-0.006655426695942879,0,0,0,0.0008319283369928598,0,0,0,0,0,0,0,-0.0033277133479714394,0,0,0.006655426695942879,0,0,-0.0033277133479714394,0,0,0,0.006655426695942879,0,0,-0.09899947047233582,0],"text":"; ==========================================================\n; COMMODORE 64 - Examples in 6502 Assembly language\n; ¬© Digitsensitive; digit.sensitivee@gmail.com\n; How to set the border color\n; ==========================================================\n\n; ----------------------------------------------------------\n; Labels\n; ----------------------------------------------------------\n\nborder = $d020\n\n; ----------------------------------------------------------\n; Main Loop\n; ----------------------------------------------------------\n\n        *=$02a7                 ; sys 679\n\nloop    lda #$04                ; set border color to purple\n        sta border\n        jmp loop","sourcePath":"external/github.com/digitsensitive_c64/src/examples/setBorderColor.asm","sourceMtimeMs":1701175250000,"sourceUrl":"https://github.com/digitsensitive/c64/blob/main/setBorderColor.asm","sourceRepoUrl":"https://github.com/digitsensitive/c64","license":"UNKNOWN","attribution":"Source: digitsensitive/c64 (License unknown)"},{"name":"github.com/digitsensitive_c64/src/examples/useOfAMacro.asm","language":"asm","vector":[0,0,0,0,-0.0024878145195543766,0,0,0,0,0,-0.001658543013036251,0,0.013268344104290009,0,0,-0.003317086026072502,-0.0008292715065181255,0,0,0.0024878145195543766,0,0,0,0,0,0.004146357532590628,0,0,0,0,0,0.022390330210328102,0,-0.003317086026072502,0,0,0,0,0,-0.003317086026072502,-0.001658543013036251,0,0,0,0,0,0,0,0,0.0008292715065181255,0,0,-0.004975629039108753,0,0.003317086026072502,0,0,0,-0.0008292715065181255,0,0,0,0,0,-0.0008292715065181255,0,0,0.001658543013036251,0,0,-0.003317086026072502,0,0.003317086026072502,0,0,-0.003317086026072502,-0.0008292715065181255,0,0,0,0,0,-0.001658543013036251,0,0,0,0,0,0,0,0,0.001658543013036251,0,0,-0.001658543013036251,0,0.003317086026072502,0,0,0,0,0,0.776198148727417,0,0,-0.003317086026072502,-0.003317086026072502,0,0,0.00746344355866313,0,0,-0.001658543013036251,0,0,0,0,0,-0.0008292715065181255,0,0.003317086026072502,0,0,-0.003317086026072502,-0.0008292715065181255,0,0.019902516156435013,0,0,0,-0.001658543013036251,0,0.003317086026072502,0.0008292715065181255,0,0,-0.001658543013036251,0,0,0.0008292715065181255,0,-0.003317086026072502,0,0,0,0.010780529119074345,0,0,0,0,0.01658543013036251,0.001658543013036251,0,0,-0.0008292715065181255,0,0,0,0,0,0,0,0,0,0,0,-0.001658543013036251,0,0,0.001658543013036251,0,-0.3947332203388214,-0.001658543013036251,0,0,0,0,-0.003317086026072502,0,0,0,0.0008292715065181255,0,0,-0.001658543013036251,0,0,0,0,-0.003317086026072502,0,0,0.003317086026072502,0.001658543013036251,0,0,-0.0008292715065181255,0,0.009951258078217506,0.3880990743637085,0,0,-0.001658543013036251,0,0.003317086026072502,0,0,0,-0.0008292715065181255,0,0,0,0,0,0,0,0,0.001658543013036251,0,0,-0.001658543013036251,0,0.003317086026072502,0.013268344104290009,0,-0.006634172052145004,-0.0008292715065181255,0,0,0.001658543013036251,0,-0.003317086026072502,0,0,0,0,0,-0.003317086026072502,-0.001658543013036251,0,0,0,0,0,-0.0008292715065181255,0,0,0.008292715065181255,0,-0.003317086026072502,-0.0008292715065181255,0,0,0,0,0,0,0,0,0,0,0,0,0,0.006634172052145004,0.0008292715065181255,0,0,-0.1973666101694107,0,0,0,0,0,-0.001658543013036251,0,0,0,0,-0.013268344104290009,0,0,0.003317086026072502,0.0008292715065181255,0,0,-0.0024878145195543766,0,0,0.001658543013036251,0,-0.003317086026072502,0,0,0,0.004975629039108753,0,-0.003317086026072502,0,0,0,0.001658543013036251,0,0,0,0,0.003317086026072502,0.0008292715065181255,0,0,0,0,0.003317086026072502,0.19404953718185425,0,0,-0.0008292715065181255,0,0.04312211647629738,0.001658543013036251,0,0,-0.003317086026072502,0,0,0,0,-0.003317086026072502,-0.001658543013036251,0,0,0.0008292715065181255,0,0,-0.0024878145195543766,0,0,0.004975629039108753,0,-0.006634172052145004,0,0,0,0.0008292715065181255,0,0,-0.001658543013036251,0,0,0,0,0,-0.0008292715065181255,0,0.003317086026072502,0,0,-0.006634172052145004,0,0,0,0.00746344355866313,0,0,0,0,0,0,0,-0.003317086026072502,0,0,0,0,0,0,-0.006634172052145004,0,0,0.001658543013036251,0,-0.003317086026072502,-0.09868330508470535,0],"text":"; ==========================================================\n; COMMODORE 64 - Examples in 6502 Assembly language\n; ¬© Digitsensitive; digit.sensitivee@gmail.com\n; How to use a macro\n; ==========================================================\n\n.include \"src/include/constants.asm\"\n.include \"src/include/macros-general.asm\"\n\n; ----------------------------------------------------------\n; Labels\n; ----------------------------------------------------------\n\nborder = $d020\n\n; ----------------------------------------------------------\n; Main Loop\n; ----------------------------------------------------------\n\n        *=$02a7                 ; sys 679\n\nloop    #poke BORDER_COLOR_REGISTER,RED\n        jmp loop","sourcePath":"external/github.com/digitsensitive_c64/src/examples/useOfAMacro.asm","sourceMtimeMs":1701175250000,"sourceUrl":"https://github.com/digitsensitive/c64/blob/main/useOfAMacro.asm","sourceRepoUrl":"https://github.com/digitsensitive/c64","license":"UNKNOWN","attribution":"Source: digitsensitive/c64 (License unknown)"},{"name":"github.com/digitsensitive_c64/src/include/constants.asm","language":"asm","vector":[0.00507947476580739,0.0012698686914518476,0,0,-0.002963026985526085,0,0.008465791121125221,0.0012698686914518476,0,0,-0.0033863165881484747,0,0.0016931582940742373,0.0008465791470371187,0,-0.01185210794210434,-0.005502764601260424,0,0.00507947476580739,0.008889080956578255,0,-0.0016931582940742373,-0.0016931582940742373,0,0.0016931582940742373,0.002539737382903695,0,-0.00507947476580739,-0.0021164477802813053,0,0.0033863165881484747,0.06349343806505203,0,-0.0033863165881484747,-0.0016931582940742373,0,0,0.0021164477802813053,0,-0.0033863165881484747,-0.0008465791470371187,0,0.008465791121125221,0.0016931582940742373,0,-0.0016931582940742373,-0.0016931582940742373,0,0.0033863165881484747,0.0038096061907708645,0,-0.00507947476580739,-0.004232895560562611,0,0.0033863165881484747,0.002963026985526085,0,0,-0.0021164477802813053,0,0.0016931582940742373,0.002963026985526085,0,-0.008465791121125221,-0.0021164477802813053,0,0.0016931582940742373,0.0016931582940742373,0,0,-0.0021164477802813053,0,0,0.0033863165881484747,0,-0.0016931582940742373,-0.0021164477802813053,0,0.0016931582940742373,0.002539737382903695,0,-0.01185210794210434,-0.0016931582940742373,0,0.00507947476580739,0.0021164477802813053,0,-0.01015894953161478,-0.006349343340843916,0,0.0033863165881484747,0.0038096061907708645,0,-0.0033863165881484747,-0.0016931582940742373,0,0.0016931582940742373,0.002963026985526085,0,0,-0.00042328957351855934,0,0.8093296885490417,0.004656185396015644,0,-0.00507947476580739,-0.0012698686914518476,0,0,0.0021164477802813053,0,-0.006772633176296949,-0.006349343340843916,0,0.0033863165881484747,0.002539737382903695,0,-0.0016931582940742373,-0.0016931582940742373,0,0,0.0008465791470371187,0,-0.00507947476580739,-0.004232895560562611,0,0.00507947476580739,0.0016931582940742373,0,-0.00507947476580739,-0.0038096061907708645,0,0.0016931582940742373,0.0012698686914518476,0,-0.00507947476580739,-0.002539737382903695,0,0.0033863165881484747,0.00507947476580739,0,0,-0.0016931582940742373,0,0,0.03259329870343208,0,-0.01015894953161478,-0.0033863165881484747,0,0.006772633176296949,0.0021164477802813053,0,-0.0016931582940742373,0,0,0.0016931582940742373,0.0016931582940742373,0,-0.00507947476580739,-0.004656185396015644,0,0,0.0021164477802813053,0,-0.0033863165881484747,-0.0008465791470371187,0,0.0033863165881484747,0.0012698686914518476,0,-0.2963027060031891,-0.0016931582940742373,0,0.00507947476580739,0.0016931582940742373,0,-0.00507947476580739,-0.006772633176296949,0,0.00507947476580739,0.002963026985526085,0,0,-0.005502764601260424,0,0.0033863165881484747,0.002539737382903695,0,-0.00507947476580739,-0.0021164477802813053,0,0.025397373363375664,0.0016931582940742373,0,0,-0.00042328957351855934,0,0.0033863165881484747,0.4046648442745209,0,-0.0016931582940742373,-0.004232895560562611,0,0.006772633176296949,0.0012698686914518476,0,0,-0.0033863165881484747,0,0.00507947476580739,0.002963026985526085,0,-0.0033863165881484747,-0.0008465791470371187,0,0,0.0021164477802813053,0,-0.0033863165881484747,-0.002539737382903695,0,0.00507947476580739,0.002963026985526085,0,-0.01015894953161478,-0.005502764601260424,0,0.0016931582940742373,0.0021164477802813053,0,-0.0016931582940742373,-0.002963026985526085,0,0.00507947476580739,0.0021164477802813053,0,-0.0016931582940742373,-0.0012698686914518476,0,0.0033863165881484747,0.0008465791470371187,0,-0.00507947476580739,-0.00592605397105217,0,0.006772633176296949,0.0033863165881484747,0,-0.00507947476580739,-0.0016931582940742373,0,0.0033863165881484747,0.002963026985526085,0,-0.0033863165881484747,-0.002963026985526085,0,0.008465791121125221,0.0008465791470371187,0,-0.01185210794210434,-0.002963026985526085,0,0.00507947476580739,0.002539737382903695,0,-0.006772633176296949,-0.14815135300159454,0,0.0016931582940742373,0.002963026985526085,0,-0.0016931582940742373,-0.004656185396015644,0,0.0016931582940742373,0.002963026985526085,0,-0.00507947476580739,0,0,0.00507947476580739,0.0016931582940742373,0,-0.0016931582940742373,-0.002963026985526085,0,0,0.013121976517140865,0,-0.0033863165881484747,-0.002963026985526085,0,0,0.002963026985526085,0,-0.006772633176296949,-0.0033863165881484747,0,0,0.004232895560562611,0,-0.008465791121125221,-0.0008465791470371187,0,0.00507947476580739,0.002963026985526085,0,-0.0033863165881484747,-0.0016931582940742373,0,0.0033863165881484747,0.20233242213726044,0,-0.0033863165881484747,-0.002963026985526085,0,0.1236005574464798,0.002539737382903695,0,-0.0033863165881484747,-0.006772633176296949,0,0.0016931582940742373,0.0016931582940742373,0,0,-0.0012698686914518476,0,0.0033863165881484747,0.002539737382903695,0,-0.0016931582940742373,-0.0021164477802813053,0,0.00507947476580739,0.002963026985526085,0,-0.0033863165881484747,-0.0038096061907708645,0,0.00507947476580739,0.0038096061907708645,0,-0.0033863165881484747,-0.0038096061907708645,0,0.0033863165881484747,0.002539737382903695,0,-0.0033863165881484747,-0.0016931582940742373,0,0.0016931582940742373,0.004232895560562611,0,-0.0016931582940742373,-0.008465791121125221,0,0.0033863165881484747,0.004232895560562611,0,-0.0016931582940742373,-0.0038096061907708645,0,0.0033863165881484747,0.0012698686914518476,0,-0.0016931582940742373,-0.0021164477802813053,0,0,0.0008465791470371187,0,-0.006772633176296949,-0.0033863165881484747,0,0.00507947476580739,0.0033863165881484747,0,0,-0.07492225617170334,0],"text":"; ==========================================================\n; COMMODORE 64 - Examples in 6502 Assembly language\n; ¬© Digitsensitive; digit.sensitivee@gmail.com\n; Constants\n; ==========================================================\n\n; ----------------------------------------------------------\n; Colors\n; ----------------------------------------------------------\nBLACK                               = 0\nWHITE                               = 1\nRED                                 = 2\nCYAN                                = 3\nPURPLE                              = 4\nGREEN                               = 5\nBLUE                                = 6\nYELLOW                              = 7\nORANGE                              = 8\nBROWN                               = 9\nLIGHT_RED                           = 10\nGRAY_ONE                            = 11\nDARK_GREY                           = 11\nGRAY_TWO                            = 12\nMEDIUM_GREY                         = 12\nLIGHT_GREEN                         = 13\nLIGHT_BLUE                          = 14\nGRAY_THREE                          = 15\nLIGHT_GREY                          = 15\n\n; ----------------------------------------------------------\n; Default screen memory (1000 bytes)\n; $0400-$07FF, 1024-2047\n; ----------------------------------------------------------\nSCREEN_MEMORY                       = $0400 ; 1024\nUNUSED_16_BYTES                     = $07e8 ; 2024\nSPRITE_POINTERS                     = $07f8 ; 2040\n\n; ----------------------------------------------------------\n; VIC-II Video Display\n; $D000-$D3FF, 53248-54271\n; ----------------------------------------------------------\n\n; Sprite horizontal and vertical position registers\nSP0X                                = $d000 ; 53248\nSP0Y                                = $d001 ; 53249\nSP1X                                = $d002 ; 53250\nSP1Y                                = $d003 ; 53251\nSP2X                                = $d004 ; 53252\nSP2Y                                = $d005 ; 53253\nSP3X                                = $d006 ; 53254\nSP3Y                                = $d007 ; 53255\nSP4X                                = $d008 ; 53256\nSP4Y                                = $d009 ; 53257\nSP5X                                = $d00A ; 53258\nSP5Y                                = $d00B ; 53259\nSP6X                                = $d00C ; 53260\nSP6Y                                = $d00D ; 53261\nSP7X                                = $d00E ; 53262\nSP7Y                                = $d00F ; 53263\n\n; Most significant bits of sprites 0-7 horizontal positions\nMSIGX                               = $d010 ; 53264\n\n; Raster: Read Current Raster Scan Line\nRASTER                              = $d012 ; 53266\n\n; Sprite enable register\nSPRITE_ENABLE_REGISTER              = $d015 ; 53269\n\n; Multicolor registers\nSPRITE_MULTICOLOR_REGISTERS         = $d01c ; 53276\n\n; Sprite Multicolor\nSPMC0                               = $d025 ; 53285\nSPMC1                               = $d026 ; 53286\n\n; Sprite color registers\nSPRITE_0_COLOR_REGISTER             = $d027 ; 53287\nSPRITE_1_COLOR_REGISTER             = $d028 ; 53288\nSPRITE_2_COLOR_REGISTER             = $d029 ; 53289\nSPRITE_3_COLOR_REGISTER             = $d02a ; 53290\nSPRITE_4_COLOR_REGISTER             = $d02b ; 53291\nSPRITE_5_COLOR_REGISTER             = $d02c ; 53292\nSPRITE_6_COLOR_REGISTER             = $d02d ; 53293\nSPRITE_7_COLOR_REGISTER             = $d02e ; 53294\n\n\n\n; **************\n\n\n; VIC-II COLOR REGISTER (HEX and DECIMAL)\nBORDER_COLOR_REGISTER               = $d020 ; 53280\nBACKGROUND_COLOR                    = $d021 ; 53281\n\n; COLOR MEMORY MAP / FOREGROUND COLOR (HEX and DECIMAL)\nCOLOR_MEMORY_MAP                    = $d800 ; 55296\n\n; ----------------------------------------------------------\n; 8k Operating System ROM\n; $E000-$FFFF, 57344-65535\n; ----------------------------------------------------------\n\n; Init Screen Line Link Table and Clear the Screen\nCLEAR                               = $e544 ; 58692\n\n; Kernal Jump Table\nSCNKEY                              = $ff9f ; 65439\nGETIN                               = $ffe4 ; 65508","sourcePath":"external/github.com/digitsensitive_c64/src/include/constants.asm","sourceMtimeMs":1701175250000,"sourceUrl":"https://github.com/digitsensitive/c64/blob/main/include/constants.asm","sourceRepoUrl":"https://github.com/digitsensitive/c64","license":"UNKNOWN","attribution":"Source: digitsensitive/c64 (License unknown)"},{"name":"github.com/digitsensitive_c64/src/include/macros-general.asm","language":"asm","vector":[0,0.0016487721586599946,0,0,-0.0016487721586599946,0,0,0,0,0,-0.0016487721586599946,0,0,0,0,-0.009892633184790611,-0.0008243860793299973,0,0.003297544317319989,0.0008243860793299973,0,0,0,0,0.003297544317319989,0.005770702380686998,0,0,0,0,0,0.032151054590940475,0,-0.003297544317319989,-0.0008243860793299973,0,0,0,0,-0.006595088634639978,-0.0008243860793299973,0,0,0.004946316592395306,0,0,-0.002473158296197653,0,0,0.0008243860793299973,0,-0.003297544317319989,-0.003297544317319989,0,0.003297544317319989,0,0,0,-0.004946316592395306,0,0,0.0016487721586599946,0,0,-0.0008243860793299973,0,0,0.0016487721586599946,0,0,-0.002473158296197653,0,0.009892633184790611,0,0,0,-0.004121930338442326,0,0,0,0,-0.009892633184790611,0,0,0,0.009892633184790611,0,-0.009892633184790611,-0.004946316592395306,0,0,0.0016487721586599946,0,0,-0.0008243860793299973,0,0.003297544317319989,0,0,0,0,0,0.7683278322219849,0,0,-0.003297544317319989,0,0,0,0.002473158296197653,0,0,-0.004946316592395306,0,0.006595088634639978,0.0016487721586599946,0,-0.003297544317319989,-0.0008243860793299973,0,0.003297544317319989,0.0016487721586599946,0,-0.003297544317319989,-0.0008243860793299973,0,0.019785266369581223,0,0,-0.003297544317319989,-0.0016487721586599946,0,0.003297544317319989,0,0,-0.003297544317319989,-0.003297544317319989,0,0,0.0008243860793299973,0,0,0,0,0,0.014838948845863342,0,0,-0.0016487721586599946,0,0.003297544317319989,0.0016487721586599946,0,0,0,0,0,0,0,0,0,0,0.003297544317319989,0,0,0,-0.0008243860793299973,0,0,0.004946316592395306,0,-0.3990028500556946,-0.0016487721586599946,0,0.006595088634639978,0.0008243860793299973,0,0,-0.004946316592395306,0,0,0.0008243860793299973,0,0,-0.005770702380686998,0,0,0,0,-0.003297544317319989,-0.0016487721586599946,0,0.003297544317319989,0.0016487721586599946,0,0,0,0,0.016487721353769302,0.3891102075576782,0,0,-0.004121930338442326,0,0.009892633184790611,0.0008243860793299973,0,-0.003297544317319989,0,0,0,0.003297544317319989,0,-0.003297544317319989,-0.0016487721586599946,0,0.019785266369581223,0.0016487721586599946,0,-0.009892633184790611,-0.0016487721586599946,0,0.003297544317319989,0.009892633184790611,0,-0.006595088634639978,-0.004121930338442326,0,0,0.002473158296197653,0,-0.006595088634639978,-0.0016487721586599946,0,0,0.0008243860793299973,0,-0.003297544317319989,0,0,0,0,0,-0.003297544317319989,-0.0008243860793299973,0,0,0.0016487721586599946,0,-0.003297544317319989,-0.0016487721586599946,0,0,0,0,0,0,0,0,0.0016487721586599946,0,0,-0.0008243860793299973,0,0,0.0008243860793299973,0,-0.003297544317319989,-0.1995014250278473,0,0,0.003297544317319989,0,0,0,0,0,0,0,0,0,0,0.009892633184790611,0.002473158296197653,0,0,-0.0016487721586599946,0,0,0.0016487721586599946,0,-0.003297544317319989,-0.002473158296197653,0,0,0.008243860676884651,0,-0.003297544317319989,-0.002473158296197653,0,0,0.004946316592395306,0,0,-0.0016487721586599946,0,0,0.0008243860793299973,0,0,-0.0016487721586599946,0,0.003297544317319989,0.20197458565235138,0,0,-0.005770702380686998,0,0.05935579538345337,0.0016487721586599946,0,0,-0.003297544317319989,0,0,0.0016487721586599946,0,0,-0.004121930338442326,0,0,0.0008243860793299973,0,0,-0.002473158296197653,0,0,0.004946316592395306,0,-0.003297544317319989,-0.002473158296197653,0,0,0.0008243860793299973,0,-0.006595088634639978,-0.002473158296197653,0,0.003297544317319989,0,0,0,0,0,0.003297544317319989,0,0,-0.003297544317319989,0,0,0,0.0008243860793299973,0,-0.006595088634639978,-0.0016487721586599946,0,0,0,0,0,0,0,0.019785266369581223,0.0008243860793299973,0,-0.009892633184790611,0,0,0.003297544317319989,0.004946316592395306,0,0,-0.09975071251392365,0],"text":"; ==========================================================\n; COMMODORE 64 - Examples in 6502 Assembly language\n; ¬© Digitsensitive; digit.sensitivee@gmail.com\n; General Macros\n; ==========================================================\n\n; ----------------------------------------------------------\n; Poke selected address with value\n; Example: #poke BORDER_COLOR_REGISTER,RED\n; ----------------------------------------------------------\n\npoke                    .macro    \n                        lda #\\2\n                        sta \\1\n                        .endm\n\n; ----------------------------------------------------------\n; Draw a character on the screen\n; ----------------------------------------------------------\ndrawCharacterAt         .macro\n                        ldx #\\3*40+\\2       ; calculate position from x and y\n                        lda #\\1             ; load the character\n                        sta $0400,x         ; set the character at location\n                        lda #\\4             ; set color\n                        sta $d800,x         ; set foreground color at location\n                        .endm","sourcePath":"external/github.com/digitsensitive_c64/src/include/macros-general.asm","sourceMtimeMs":1701175250000,"sourceUrl":"https://github.com/digitsensitive/c64/blob/main/macros-general.asm","sourceRepoUrl":"https://github.com/digitsensitive/c64","license":"UNKNOWN","attribution":"Source: digitsensitive/c64 (License unknown)"},{"name":"github.com/jarrodparkes_c64-examples/supernatural/step1/Info.txt","language":"asm","vector":[0,0,0,0,-0.013364520855247974,0,0.0178193598985672,0.0089096799492836,0,0,-0.0044548399746418,0,0.0178193598985672,0.0089096799492836,0,-0.0534580834209919,-0.0044548399746418,0,0.0356387197971344,0,0,0,-0.0089096799492836,0,0,0,0,0,0,0,0.0534580834209919,0.0089096799492836,0,-0.0178193598985672,-0.0044548399746418,0,0,0,0,-0.0178193598985672,0,0,0.1069161668419838,0.0044548399746418,0,0,-0.013364520855247974,0,0,0.0044548399746418,0,-0.0178193598985672,-0.0089096799492836,0,0.0534580834209919,0.0089096799492836,0,-0.0356387197971344,-0.013364520855247974,0,0.0178193598985672,0.0178193598985672,0,0,-0.013364520855247974,0,0.0178193598985672,0.0044548399746418,0,-0.0178193598985672,-0.0089096799492836,0,0.0356387197971344,0.02227420173585415,0,0,-0.0178193598985672,0,0,0.0178193598985672,0,-0.0178193598985672,0,0,0,0,0,-0.0534580834209919,-0.0178193598985672,0,0,0.0089096799492836,0,-0.0178193598985672,-0.0178193598985672,0,0.0178193598985672,0.0044548399746418,0,0,-0.0044548399746418,0,0.5345808267593384,0.013364520855247974,0,-0.0534580834209919,0,0,0,0.0089096799492836,0,0,-0.02672904171049595,0,0.0178193598985672,0.0178193598985672,0,-0.0178193598985672,-0.0044548399746418,0,0,0,0,0,0,0,0.124735526740551,0.03118388168513775,0,0,-0.0089096799492836,0,0,0,0,0,-0.013364520855247974,0,0,0.0534580834209919,0,-0.0178193598985672,0,0,0.0534580834209919,0.0044548399746418,0,0,-0.0089096799492836,0,0.1069161668419838,0.02672904171049595,0,-0.0534580834209919,-0.0178193598985672,0,0,0.0089096799492836,0,-0.0178193598985672,0,0,0.0534580834209919,0.0089096799492836,0,-0.0890968069434166,-0.0089096799492836,0,0,0.02227420173585415,0,-0.6058582663536072,-0.0044548399746418,0,0,0.0089096799492836,0,-0.0178193598985672,-0.013364520855247974,0,0.0356387197971344,0,0,-0.0178193598985672,-0.03118388168513775,0,0,0.0089096799492836,0,-0.0178193598985672,-0.0178193598985672,0,0,0.0178193598985672,0,0,0,0,0,0.2672904133796692,0,0,-0.0356387197971344,0,0,0.0044548399746418,0,-0.0178193598985672,-0.0044548399746418,0,0,0.0089096799492836,0,0,-0.0089096799492836,0,0.0178193598985672,0.0044548399746418,0,-0.0534580834209919,0,0,0.0178193598985672,0.0668226033449173,0,-0.0356387197971344,-0.013364520855247974,0,0,0.0089096799492836,0,-0.0178193598985672,0,0,0,0,0,-0.0178193598985672,-0.0089096799492836,0,0.0178193598985672,0.0400935634970665,0,0,-0.0044548399746418,0,0.0178193598985672,0.0534580834209919,0,0,-0.03118388168513775,0,0,0.02672904171049595,0,0,-0.0089096799492836,0,0,0.02672904171049595,0,0,-0.0490032434463501,0,0,0.013364520855247974,0,-0.0356387197971344,-0.3118388056755066,0,0.0178193598985672,0.0044548399746418,0,-0.0178193598985672,-0.0089096799492836,0,0.0178193598985672,0.02227420173585415,0,0,-0.013364520855247974,0,0,0.0089096799492836,0,0,-0.0089096799492836,0,0,0,0,-0.0178193598985672,-0.0044548399746418,0,0,0,0,0,-0.013364520855247974,0,0.0178193598985672,0,0,0,-0.013364520855247974,0,0,0.0044548399746418,0,-0.0178193598985672,0,0,0,0.1425548791885376,0,0,-0.0400935634970665,0,0.0178193598985672,0.0089096799492836,0,0,-0.0178193598985672,0,0,0.0044548399746418,0,0,-0.013364520855247974,0,0,0,0,0,-0.0089096799492836,0,0,0.0400935634970665,0,0,0,0,0.0178193598985672,0.0089096799492836,0,-0.0178193598985672,0,0,0.0356387197971344,0,0,-0.0178193598985672,-0.0044548399746418,0,0,0.013364520855247974,0,-0.0178193598985672,0,0,0.0356387197971344,0.02672904171049595,0,-0.0356387197971344,-0.03118388168513775,0,0.0356387197971344,0.0089096799492836,0,0,-0.013364520855247974,0,0,0.02227420173585415,0,-0.0356387197971344,-0.02227420173585415,0,0.0178193598985672,0,0,-0.0178193598985672,-0.1514645665884018,0],"text":"<!-- Source: external/github.com/jarrodparkes_c64-examples/supernatural/step1/Info.txt#Page-1 -->\nProject J - A public game tutorial\n==================================\n\nThis is part of a write-a-game-tutorial published on the \nRetro Remakes forum. It shows how to write a C64 game\nfrom scratch. \nThe used programs are the ACME cross-compiler and two\nselfmade sprite/charset editing programs.\nDon't expect perfect or even bug-free code.\n\nDetails\n-------\n\nThe memory layout for now is:\n\n$0801 -  2049 - game code\n$CC00 - 52224 - screen location\n$D000 - 53248 - sprite data\n$D800 - 55296 - color ram location\n$F000 - 61440 - charset data","sourcePath":"external/github.com/jarrodparkes_c64-examples/supernatural/step1/Info.txt","sourceMtimeMs":1539612651000,"sourceUrl":"https://github.com/jarrodparkes/c64-examples/blob/master/supernatural/step1/Info.txt","sourceRepoUrl":"https://github.com/jarrodparkes/c64-examples","license":"UNKNOWN","attribution":"Source: jarrodparkes/c64-examples (License unknown)","origin":"external/github.com/jarrodparkes_c64-examples/supernatural/step1/Info.txt#Page-1"},{"name":"github.com/jarrodparkes_c64-examples/supernatural/step100/level_data.asm","language":"asm","vector":[0.000543520669452846,0.022714633494615555,0,-0.00018117355648428202,-0.00011323347280267626,0,0.002445843070745468,0.0617801807820797,0,-0.0019929090049117804,-0.010983646847307682,0,0.00018117355648428202,0.000520873989444226,0,-0.03777468577027321,-0.006884594913572073,0,0.008424569852650166,0.020382024347782135,0,-0.008968090638518333,-0.0009058677824214101,0,0.001087041338905692,0.004891686141490936,0,-0.007337528746575117,-0.005321973003447056,0,0.00009058677824214101,0.19480685889720917,0,-0.000543520669452846,-0.0037593513261526823,0,0.0035328841768205166,0.015558279119431973,0,-0.003985818009823561,-0.0037140578497201204,0,0.0028987769037485123,0.0044161053374409676,0,-0.019023222848773003,-0.12068423628807068,0,0.005978727247565985,0.0005888140294700861,0,-0.05000390112400055,-0.000045293389121070504,0,0.011776280589401722,0.0007699875859543681,0,-0.000271760334726423,-0.017913535237312317,0,0,0.002174082677811384,0,-0.019113808870315552,-0.0009285144624300301,0,0.013135083019733429,0.0025364297907799482,0,-0.006975181866437197,-0.033517107367515564,0,0.009602198377251625,0.00029440701473504305,0,-0.0018117355648428202,-0.0036687643732875586,0,0.005525793414562941,0.0007926342659629881,0,-0.014403297565877438,-0.000520873989444226,0,0.00036234711296856403,0.010666592977941036,0,-0.00851515680551529,-0.01429006364196539,0,0.019566744565963745,0.0011776280589401722,0,-0.028806595131754875,-0.015309165231883526,0,0.004257578402757645,0.0015173285501077771,0,-0.00018117355648428202,-0.0009738078224472702,0,0.0017211487283930182,0.0017890888266265392,0,-0.000543520669452846,-0.0026043697725981474,0,0.0013588016154244542,0.0013814483536407351,0,-0.008968090638518333,-0.02543223835527897,0,0.019657330587506294,0.006046667229384184,0,-0.018751462921500206,-0.004529338795691729,0,0,0.0010643946006894112,0,-0.0009964545024558902,-0.009149264544248581,0,0.038861725479364395,0.00024911362561397254,0,-0.005706966854631901,-0.0036008243914693594,0,0.0015399751719087362,0.01195745449513197,0,-0.004257578402757645,-0.0024005495943129063,0,0.0023552561178803444,0.002423196332529187,0,-0.013769189827144146,-0.011798927560448647,0,0.013044496066868305,0.0031478905584663153,0,-0.014675057493150234,-0.02602105215191841,0,0.05172504857182503,0.006001373752951622,0,-0.00045293389121070504,-0.001087041338905692,0,0.0040764049626886845,0.0012002747971564531,0,-0.0008152810041792691,-0.06868742406368256,0,0.0016305620083585382,0.006816654931753874,0,-0.005525793414562941,-0.0034875909332185984,0,0.009783372282981873,0.004869039170444012,0,-0.005706966854631901,-0.00921720452606678,0,0.07618347555398941,0.0030120103619992733,0,-0.00009058677824214101,-0.00731488224118948,0,0.24295373260974884,0.0013814483536407351,0,-0.00009058677824214101,-0.017551187425851822,0,0.00045293389121070504,0.009896605275571346,0,-0.0009058677824214101,-0.01607915200293064,0,0,0.0023326093796640635,0,-0.00036234711296856403,-0.00015852686192374676,0,0.011776280589401722,0.0008605743641965091,0,-0.0029893636237829924,-0.006273134145885706,0,0.7779592275619507,0.0008379276841878891,0,-0.006884594913572073,-0.00731488224118948,0,0.0613272488117218,0.009964545257389545,0,-0.007246942259371281,-0.009421024471521378,0,0.008062222972512245,0.000611460767686367,0,-0.009692785330116749,-0.0009964545024558902,0,0.00036234711296856403,0.019476156681776047,0,-0.00018117355648428202,-0.01229715533554554,0,0.0025364297907799482,0.0028761301655322313,0,-0.005163446068763733,-0.004370811861008406,0,0.006703421473503113,0.0014493884518742561,0,-0.0028081899508833885,-0.008718977682292461,0,0.000543520669452846,0.00654489453881979,0,-0.02771955356001854,-0.007473409175872803,0,0.000271760334726423,0.026745745912194252,0,-0.0012682148953899741,-0.001222921535372734,0,0.0015399751719087362,0.0027628967072814703,0,-0.0015399751719087362,-0.005163446068763733,0,0.042666371911764145,0.002309962874278426,0,-0.009149264544248581,-0.015263872221112251,0,0.0034422974567860365,0.007835756056010723,0,-0.0385899655520916,-0.002921423641964793,0,0.004982272628694773,0.038091737776994705,0,-0.0035328841768205166,-0.00482374569401145,0,0.0022646693978458643,0.12476063519716263,0,-0.006431661080569029,-0.0017890888266265392,0,0.005163446068763733,0.0026270165108144283,0,-0.02617957815527916,-0.0009058677824214101,0,0.007337528746575117,0.0013814483536407351,0,-0.00018117355648428202,-0.0037819978315383196,0,0.002083495957776904,0.005978727247565985,0,-0.021921999752521515,-0.0036234711296856403,0,0.0008152810041792691,0.3938713073730469,0,-0.013316255994141102,-0.010643946006894112,0,0.04076404869556427,0.03172801807522774,0,-0.0016305620083585382,-0.0036687643732875586,0,0.0038952312897890806,0.0044613988138735294,0,-0.009149264544248581,-0.004982272628694773,0,0.0006341074476949871,0.000520873989444226,0,-0.0040764049626886845,-0.0023326093796640635,0,0.00045293389121070504,0.0061825476586818695,0,-0.0038046445697546005,-0.007269588764756918,0,0.0048010991886258125,0.0033517107367515564,0,-0.23652207851409912,-0.0016532086301594973,0,0.0009964545024558902,0.00998719222843647,0,0,-0.015286518260836601,0,0.000271760334726423,0.000520873989444226,0,-0.03324534744024277,-0.0016985021065920591,0,0.0009964545024558902,0.0013588016154244542,0,-0.00045293389121070504,-0.004212284926325083,0,0.0048010991886258125,0.02459431067109108,0,-0.05317443609237671,-0.008243396878242493,0,0.00045293389121070504,0.014652411453425884,0,-0.006703421473503113,-0.019408216699957848,0,0.0008152810041792691,0.0035102376714348793,0,-0.000271760334726423,-0.001970262499526143,0,0,0.0015399751719087362,0,-0.024005495011806488,-0.004597278777509928,0,0.0006341074476949871,0.005027566105127335,0,-0.011323346756398678,-0.014516530558466911,0],"text":"EL_SN_TOMBSTONE = 0\r\nEL_SN_FENCE_1 = 1\r\nEL_SN_CROSS = 2\r\nEL_SN_TREE_1 = 3\r\nEL_SN_MOON = 4\r\nEL_SN_SMALL_TREE = 5\r\nEL_SN_TOMB_DOOR = 6\r\nEL_SN_ROCK = 7\r\nEL_SN_BROWN_ROCK = 8\r\nEL_SN_ROCK_SMALL = 9\r\nEL_SN_BROWN_ROCK_SMALL = 10\r\nEL_SN_HOUSE_DOOR = 11\r\nEL_SN_WOODEN_FLOOR = 12\r\nEL_SN_BRICK = 13\r\nEL_SN_BRICK_2X2 = 14\r\nEL_SN_STONE = 15\r\nEL_SN_STONE_UPPER_HALF = 16\r\nEL_SN_STONE_RIGHT_HALF = 17\r\nEL_SN_STONE_LOWER_HALF = 18\r\nEL_SN_REDROCK = 19\r\nEL_SN_PLATFORM_GRASS = 20\r\nEL_SN_WOODEN_FLOOR_NS = 21\r\nEL_SN_WOODEN_FLOOR_RS = 22\r\nEL_SN_STONE_LOWER_HALF_2 = 23\r\nEL_SN_STONE_LEFT_HALF = 24\r\nEL_SN_SEWER_PIPE = 25\r\nEL_SN_SEWER_PIPE_RED = 26\r\nEL_SN_RED_STONE_3 = 27\r\nEL_SN_RED_STONE_4 = 28\r\nEL_SN_RED_ROCK_BACKGROUND = 29\r\nEL_SN_REDDISH_ROCK = 30\r\nEL_SN_RED_STONE_LEFT = 31\r\nEL_SN_RED_STONE_RIGHT = 32\r\nEL_SN_RED_STONE_CENTER = 33\r\nEL_SN_BLUE_ROCK_BACKGROUND = 34\r\nEL_SN_SAND_FLOOR = 35\r\nEL_SN_SLIME_CEILING = 36\r\nEL_SN_SLIME_STONE_4 = 37\r\nEL_SN_SAND_STONE_4 = 38\r\nEL_SN_STALACTITE = 39\r\nEL_SN_STALACTITE_BIG = 40\r\nEL_SN_REDROCKV = 41\r\nEL_SN_BLUEROCK = 42\r\nEL_SN_SLIME_STONE_2 = 43\r\nEL_SN_METAL.DOOR.L = 44\r\nEL_SN_METAL.DOOR.R = 45\r\nEL_SN_METAL.COLUMN.L.TOP = 46\r\nEL_SN_METAL.COLUMN.L.CENTER = 47\r\nEL_SN_METAL.COLUMN.L.HOLE = 48\r\nEL_SN_METAL.COLUMN.R.TOP = 49\r\nEL_SN_METAL.COLUMN.R.CENTER = 50\r\nEL_SN_METAL.COLUMN.R.BOTTOM = 51\r\nEL_SN_SAND_STONE_2 = 52\r\nEL_SN_BRICK2_2X1 = 53\r\nEL_SN_STAR = 54\r\nEL_SN_WOODEN_FLOOR2 = 55\r\nEL_SN_WOODEN_FLOOR3 = 56\r\nEL_SN_HORIZROCK = 57\r\nEL_SN_VERTROCK = 58\r\n\r\nSNELEMENT_WIDTH_TABLE\r\n!byte 2,3,2,4,2,2,2,3,3,3,3,2,2,2,2,4,4,2,4,4,2,2,2,4,2,2,2,3,4,2,3,2,2,2,2,2,2,4,4,1,2,1,4,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,4\r\nSNELEMENT_HEIGHT_TABLE\r\n!byte 2,2,2,5,2,2,3,4,4,2,2,3,3,1,2,3,2,3,1,1,2,1,3,2,3,2,2,2,2,4,4,2,2,2,4,1,1,2,2,2,3,4,1,2,5,5,1,1,2,1,1,2,2,1,1,2,3,3,1\r\nSNELEMENT_TABLE_LO\r\n!byte <DATA_EL_SN_TOMBSTONE\r\n!byte <DATA_EL_SN_BLUE_ROCK_BACKGROUND+0\r\n!byte <DATA_EL_SN_CROSS\r\n!byte <DATA_EL_SN_TREE_1\r\n!byte <DATA_EL_SN_MOON\r\n!byte <DATA_EL_SN_SMALL_TREE\r\n!byte <DATA_EL_SN_TOMB_DOOR\r\n!byte <DATA_EL_SN_BROWN_ROCK+0\r\n!byte <DATA_EL_SN_BROWN_ROCK\r\n!byte <DATA_EL_SN_BROWN_ROCK+0\r\n!byte <DATA_EL_SN_BROWN_ROCK+0\r\n!byte <DATA_EL_SN_HOUSE_DOOR\r\n!byte <DATA_EL_SN_WOODEN_FLOOR_RS+0\r\n!byte <DATA_EL_SN_BRICK\r\n!byte <DATA_EL_SN_BRICK_2X2\r\n!byte <DATA_EL_SN_STONE\r\n!byte <DATA_EL_SN_STONE+0\r\n!byte <DATA_EL_SN_STONE_RIGHT_HALF\r\n!byte <DATA_EL_SN_STONE+8\r\n!byte <DATA_EL_SN_BLUEROCK+0\r\n!byte <DATA_EL_SN_PLATFORM_GRASS\r\n!byte <DATA_EL_SN_WOODEN_FLOOR_RS+0\r\n!byte <DATA_EL_SN_WOODEN_FLOOR_RS\r\n!byte <DATA_EL_SN_STONE+4\r\n!byte <DATA_EL_SN_STONE_LEFT_HALF\r\n!byte <DATA_EL_SN_SEWER_PIPE_RED+0\r\n!byte <DATA_EL_SN_SEWER_PIPE_RED\r\n!byte <DATA_EL_SN_RED_STONE_3\r\n!byte <DATA_EL_SN_RED_STONE_4\r\n!byte <DATA_EL_SN_BLUE_ROCK_BACKGROUND+0\r\n!byte <DATA_EL_SN_REDDISH_ROCK\r\n!byte <DATA_EL_SN_RED_STONE_LEFT\r\n!byte <DATA_EL_SN_RED_STONE_RIGHT\r\n!byte <DATA_EL_SN_RED_STONE_CENTER\r\n!byte <DATA_EL_SN_BLUE_ROCK_BACKGROUND\r\n!byte <DATA_EL_SN_SAND_FLOOR\r\n!byte <DATA_EL_SN_SLIME_CEILING\r\n!byte <DATA_EL_SN_SAND_STONE_4+0\r\n!byte <DATA_EL_SN_SAND_STONE_4\r\n!byte <DATA_EL_SN_STONE+2\r\n!byte <DATA_EL_SN_STONE+4\r\n!byte <DATA_EL_SN_BLUEROCK+0\r\n!byte <DATA_EL_SN_BLUEROCK\r\n!byte <DATA_EL_SN_SAND_STONE_2+0\r\n!byte <DATA_EL_SN_METAL.DOOR.L\r\n!byte <DATA_EL_SN_METAL.DOOR.R\r\n!byte <DATA_EL_SN_METAL.COLUMN.L.TOP\r\n!byte <DATA_EL_SN_METAL.COLUMN.L.CENTER\r\n!byte <DATA_EL_SN_METAL.COLUMN.L.HOLE\r\n!byte <DATA_EL_SN_STONE+10\r\n!byte <DATA_EL_SN_METAL.COLUMN.R.CENTER\r\n!byte <DATA_EL_SN_METAL.COLUMN.R.BOTTOM\r\n!byte <DATA_EL_SN_SAND_STONE_2\r\n!byte <DATA_EL_SN_BRICK2_2X1\r\n!byte <DATA_EL_SN_STAR\r\n!byte <DATA_EL_SN_WOODEN_FLOOR3+0\r\n!byte <DATA_EL_SN_WOODEN_FLOOR3\r\n!byte <DATA_EL_SN_HORIZROCK\r\n!byte <DATA_EL_SN_STONE+4\r\n\r\nSNELEMENT_TABLE_HI\r\n!byte >DATA_EL_SN_TOMBSTONE\r\n!byte >DATA_EL_SN_BLUE_ROCK_BACKGROUND+0\r\n!byte >DATA_EL_SN_CROSS\r\n!byte >DATA_EL_SN_TREE_1\r\n!byte >DATA_EL_SN_MOON\r\n!byte >DATA_EL_SN_SMALL_TREE\r\n!byte >DATA_EL_SN_TOMB_DOOR\r\n!byte >DATA_EL_SN_BROWN_ROCK+0\r\n!byte >DATA_EL_SN_BROWN_ROCK\r\n!byte >DATA_EL_SN_BROWN_ROCK+0\r\n!byte >DATA_EL_SN_BROWN_ROCK+0\r\n!byte >DATA_EL_SN_HOUSE_DOOR\r\n!byte >DATA_EL_SN_WOODEN_FLOOR_RS+0\r\n!byte >DATA_EL_SN_BRICK\r\n!byte >DATA_EL_SN_BRICK_2X2\r\n!byte >DATA_EL_SN_STONE\r\n!byte >DATA_EL_SN_STONE+0\r\n!byte >DATA_EL_SN_STONE_RIGHT_HALF\r\n!byte >DATA_EL_SN_STONE+8\r\n!byte >DATA_EL_SN_BLUEROCK+0\r\n!byte >DATA_EL_SN_PLATFORM_GRASS\r\n!byte >DATA_EL_SN_WOODEN_FLOOR_RS+0\r\n!byte >DATA_EL_SN_WOODEN_FLOOR_RS\r\n!byte >DATA_EL_SN_STONE+4\r\n!byte >DATA_EL_SN_STONE_LEFT_HALF\r\n!byte >DATA_EL_SN_SEWER_PIPE_RED+0\r\n!byte >DATA_EL_SN_SEWER_PIPE_RED\r\n!byte >DATA_EL_SN_RED_STONE_3\r\n!byte >DATA_EL_SN_RED_STONE_4\r\n!byte >DATA_EL_SN_BLUE_ROCK_BACKGROUND+0\r\n!byte >DATA_EL_SN_REDDISH_ROCK\r\n!byte >DATA_EL_SN_RED_STONE_LEFT\r\n!byte >DATA_EL_SN_RED_STONE_RIGHT\r\n!byte >DATA_EL_SN_RED_STONE_CENTER\r\n!byte >DATA_EL_SN_BLUE_ROCK_BACKGROUND\r\n!byte >DATA_EL_SN_SAND_FLOOR\r\n!byte >DATA_EL_SN_SLIME_CEILING\r\n!byte >DATA_EL_SN_SAND_STONE_4+0\r\n!byte >DATA_EL_SN_SAND_STONE_4\r\n!byte >DATA_EL_SN_STONE+2\r\n!byte >DATA_EL_SN_STONE+4\r\n!byte >DATA_EL_SN_BLUEROCK+0\r\n!byte >DATA_EL_SN_BLUEROCK\r\n!byte >DATA_EL_SN_SAND_STONE_2+0\r\n!byte >DATA_EL_SN_METAL.DOOR.L\r\n!byte >DATA_EL_SN_METAL.DOOR.R\r\n!byte >DATA_EL_SN_METAL.COLUMN.L.TOP\r\n!byte >DATA_EL_SN_METAL.COLUMN.L.CENTER\r\n!byte >DATA_EL_SN_METAL.COLUMN.L.HOLE\r\n!byte >DATA_EL_SN_STONE+10\r\n!byte >DATA_EL_SN_METAL.COLUMN.R.CENTER\r\n!byte >DATA_EL_SN_METAL.COLUMN.R.BOTTOM\r\n!byte >DATA_EL_SN_SAND_STONE_2\r\n!byte >DATA_EL_SN_BRICK2_2X1\r\n!byte >DATA_EL_SN_STAR\r\n!byte >DATA_EL_SN_WOODEN_FLOOR3+0\r\n!byte >DATA_EL_SN_WOODEN_FLOOR3\r\n!byte >DATA_EL_SN_HORIZROCK\r\n!byte >DATA_EL_SN_STONE+4\r\n\r\nSNELEMENT_COLOR_TABLE_LO\r\n!byte <COLOR_EL_SN_TREE_1+0\r\n!byte <COLOR_EL_SN_TREE_1+0\r\n!byte <COLOR_EL_SN_TREE_1+0\r\n!byte <COLOR_EL_SN_TREE_1\r\n!byte <COLOR_EL_SN_MOON\r\n!byte <COLOR_EL_SN_TREE_1+0\r\n!byte <COLOR_EL_SN_RED_ROCK_BACKGROUND+0\r\n!byte <COLOR_EL_SN_STONE+0\r\n!byte <COLOR_EL_SN_BROWN_ROCK\r\n!byte <COLOR_EL_SN_STONE+0\r\n!byte <COLOR_EL_SN_BROWN_ROCK+0\r\n!byte <COLOR_EL_SN_RED_ROCK_BACKGROUND+0\r\n!byte <COLOR_EL_SN_WOODEN_FLOOR\r\n!byte <COLOR_EL_SN_REDDISH_ROCK+0\r\n!byte <COLOR_EL_SN_METAL.DOOR.R+0\r\n!byte <COLOR_EL_SN_STONE\r\n!byte <COLOR_EL_SN_STONE+0\r\n!byte <COLOR_EL_SN_STONE+0\r\n!byte <COLOR_EL_SN_STONE+0\r\n!byte <COLOR_EL_SN_REDDISH_ROCK+0\r\n!byte <COLOR_EL_SN_PLATFORM_GRASS\r\n!byte <COLOR_EL_SN_WOODEN_FLOOR+0\r\n!byte <COLOR_EL_SN_WOODEN_FLOOR_RS\r\n!byte <COLOR_EL_SN_STONE+0\r\n!byte <COLOR_EL_SN_STONE+0\r\n!byte <COLOR_EL_SN_TREE_1+0\r\n!byte <COLOR_EL_SN_RED_ROCK_BACKGROUND+0\r\n!byte <COLOR_EL_SN_RED_STONE_4+1\r\n!byte <COLOR_EL_SN_RED_STONE_4\r\n!byte <COLOR_EL_SN_RED_ROCK_BACKGROUND\r\n!byte <COLOR_EL_SN_REDDISH_ROCK\r\n!byte <COLOR_EL_SN_BROWN_ROCK+0\r\n!byte <COLOR_EL_SN_BROWN_ROCK+0\r\n!byte <COLOR_EL_SN_BROWN_ROCK+0\r\n!byte <COLOR_EL_SN_TREE_1+0\r\n!byte <COLOR_EL_SN_SAND_FLOOR\r\n!byte <COLOR_EL_SN_BROWN_ROCK+0\r\n!byte <COLOR_EL_SN_SLIME_STONE_4\r\n!byte <COLOR_EL_SN_SAND_STONE_4\r\n!byte <COLOR_EL_SN_REDDISH_ROCK+0\r\n!byte <COLOR_EL_SN_REDDISH_ROCK+0\r\n!byte <COLOR_EL_SN_REDDISH_ROCK+0\r\n!byte <COLOR_EL_SN_BLUEROCK\r\n!byte <COLOR_EL_SN_SLIME_STONE_4+2\r\n!byte <COLOR_EL_SN_METAL.DOOR.R+0\r\n!byte <COLOR_EL_SN_METAL.DOOR.R\r\n!byte <COLOR_EL_SN_METAL.DOOR.R+0\r\n!byte <COLOR_EL_SN_METAL.DOOR.R+0\r\n!byte <COLOR_EL_SN_METAL.DOOR.R+0\r\n!byte <COLOR_EL_SN_METAL.DOOR.R+0\r\n!byte <COLOR_EL_SN_METAL.DOOR.R+0\r\n!byte <COLOR_EL_SN_METAL.DOOR.R+0\r\n!byte <COLOR_EL_SN_SAND_STONE_4+2\r\n!byte <COLOR_EL_SN_BRICK2_2X1\r\n!byte <COLOR_EL_SN_TREE_1+0\r\n!byte <COLOR_EL_SN_WOODEN_FLOOR2\r\n!byte <COLOR_EL_SN_WOODEN_FLOOR3\r\n!byte <COLOR_EL_SN_STONE+0\r\n!byte <COLOR_EL_SN_STONE+0\r\n\r\nSNELEMENT_COLOR_TABLE_HI\r\n!byte >COLOR_EL_SN_TREE_1+0\r\n!byte >COLOR_EL_SN_TREE_1+0\r\n!byte >COLOR_EL_SN_TREE_1+0\r\n!byte >COLOR_EL_SN_TREE_1\r\n!byte >COLOR_EL_SN_MOON\r\n!byte >COLOR_EL_SN_TREE_1+0\r\n!byte >COLOR_EL_SN_RED_ROCK_BACKGROUND+0\r\n!byte >COLOR_EL_SN_STONE+0\r\n!byte >COLOR_EL_SN_BROWN_ROCK\r\n!byte >COLOR_EL_SN_STONE+0\r\n!byte >COLOR_EL_SN_BROWN_ROCK+0\r\n!byte >COLOR_EL_SN_RED_ROCK_BACKGROUND+0\r\n!byte >COLOR_EL_SN_WOODEN_FLOOR\r\n!byte >COLOR_EL_SN_REDDISH_ROCK+0\r\n!byte >COLOR_EL_SN_METAL.DOOR.R+0\r\n!byte >COLOR_EL_SN_STONE\r\n!byte >COLOR_EL_SN_STONE+0\r\n!byte >COLOR_EL_SN_STONE+0\r\n!byte >COLOR_EL_SN_STONE+0\r\n!byte >COLOR_EL_SN_REDDISH_ROCK+0\r\n!byte >COLOR_EL_SN_PLATFORM_GRASS\r\n!byte >COLOR_EL_SN_WOODEN_FLOOR+0\r\n!byte >COLOR_EL_SN_WOODEN_FLOOR_RS\r\n!byte >COLOR_EL_SN_STONE+0\r\n!byte >COLOR_EL_SN_STONE+0\r\n!byte >COLOR_EL_SN_TREE_1+0\r\n!byte >COLOR_EL_SN_RED_ROCK_BACKGROUND+0\r\n!byte >COLOR_EL_SN_RED_STONE_4+1\r\n!byte >COLOR_EL_SN_RED_STONE_4\r\n!byte >COLOR_EL_SN_RED_ROCK_BACKGROUND\r\n!byte >COLOR_EL_SN_REDDISH_ROCK\r\n!byte >COLOR_EL_SN_BROWN_ROCK+0\r\n!byte >COLOR_EL_SN_BROWN_ROCK+0\r\n!byte >COLOR_EL_SN_BROWN_ROCK+0\r\n!byte >COLOR_EL_SN_TREE_1+0\r\n!byte >COLOR_EL_SN_SAND_FLOOR\r\n!byte >COLOR_EL_SN_BROWN_ROCK+0\r\n!byte >COLOR_EL_SN_SLIME_STONE_4\r\n!byte >COLOR_EL_SN_SAND_STONE_4\r\n!byte >COLOR_EL_SN_REDDISH_ROCK+0\r\n!byte >COLOR_EL_SN_REDDISH_ROCK+0\r\n!byte >COLOR_EL_SN_REDDISH_ROCK+0\r\n!byte >COLOR_EL_SN_BLUEROCK\r\n!byte >COLOR_EL_SN_SLIME_STONE_4+2\r\n!byte >COLOR_EL_SN_METAL.DOOR.R+0\r\n!byte >COLOR_EL_SN_METAL.DOOR.R\r\n!byte >COLOR_EL_SN_METAL.DOOR.R+0\r\n!byte >COLOR_EL_SN_METAL.DOOR.R+0\r\n!byte >COLOR_EL_SN_METAL.DOOR.R+0\r\n!byte >COLOR_EL_SN_METAL.DOOR.R+0\r\n!byte >COLOR_EL_SN_METAL.DOOR.R+0\r\n!byte >COLOR_EL_SN_METAL.DOOR.R+0\r\n!byte >COLOR_EL_SN_SAND_STONE_4+2\r\n!byte >COLOR_EL_SN_BRICK2_2X1\r\n!byte >COLOR_EL_SN_TREE_1+0\r\n!byte >COLOR_EL_SN_WOODEN_FLOOR2\r\n!byte >COLOR_EL_SN_WOODEN_FLOOR3\r\n!byte >COLOR_EL_SN_STONE+0\r\n!byte >COLOR_EL_SN_STONE+0\r\n\r\n\r\nDATA_EL_SN_TOMBSTONE\r\n!byte 12,13,14,15\r\nDATA_EL_SN_CROSS\r\n!byte 102,103,104,105\r\nDATA_EL_SN_TREE_1\r\n!byte 32,34,35,36,37,38,39,40,32,42,43,44,32,45,46,32,32,47,58,32\r\nDATA_EL_SN_MOON\r\n!byte 24,25,26,27\r\nDATA_EL_SN_SMALL_TREE\r\n!byte 61,62,63,64\r\nDATA_EL_SN_TOMB_DOOR\r\n!byte 112,113,114,115,116,117\r\nDATA_EL_SN_BROWN_ROCK\r\n!byte 198,199,200,201,202,203,204,205,206,207,208,209\r\nDATA_EL_SN_HOUSE_DOOR\r\n!byte 118,119,120,121,122,123\r\nDATA_EL_SN_BRICK\r\n!byte 212,213\r\nDATA_EL_SN_BRICK_2X2\r\n!byte 214,217,222,227\r\nDATA_EL_SN_STONE\r\n!byte 214,215,216,217,218,219,220,221,222,223,226,227\r\nDATA_EL_SN_STONE_RIGHT_HALF\r\n!byte 216,217,220,221,226,227\r\nDATA_EL_SN_PLATFORM_GRASS\r\n!byte 160,161,92,92\r\nDATA_EL_SN_WOODEN_FLOOR_RS\r\n!byte 164,165,32,32,92,92\r\nDATA_EL_SN_STONE_LEFT_HALF\r\n!byte 214,215,218,219,222,223\r\nDATA_EL_SN_SEWER_PIPE_RED\r\n!byte 124,125,126,127\r\nDATA_EL_SN_RED_STONE_3\r\n!byte 160,162,161,0,0,0\r\nDATA_EL_SN_RED_STONE_4\r\n!byte 160,162,162,161,0,0,0,0\r\nDATA_EL_SN_REDDISH_ROCK\r\n!byte 199,200,201,202,203,204,205,206,207,208,209,210\r\nDATA_EL_SN_RED_STONE_LEFT\r\n!byte 160,162,32,32\r\nDATA_EL_SN_RED_STONE_RIGHT\r\n!byte 162,161,32,32\r\nDATA_EL_SN_RED_STONE_CENTER\r\n!byte 162,162,32,32\r\nDATA_EL_SN_BLUE_ROCK_BACKGROUND\r\n!byte 96,97,98,99,100,101,102,103\r\nDATA_EL_SN_SAND_FLOOR\r\n!byte 211,212\r\nDATA_EL_SN_SLIME_CEILING\r\n!byte 213,214\r\nDATA_EL_SN_SAND_STONE_4\r\n!byte 160,162,162,161,64,64,64,64\r\nDATA_EL_SN_BLUEROCK\r\n!byte 195,196,197,198\r\nDATA_EL_SN_METAL.DOOR.L\r\n!byte 123,124,125,126,125,64,125,126,131,132\r\nDATA_EL_SN_METAL.DOOR.R\r\n!byte 127,128,129,130,64,130,129,130,133,134\r\nDATA_EL_SN_METAL.COLUMN.L.TOP\r\n!byte 227,228\r\nDATA_EL_SN_METAL.COLUMN.L.CENTER\r\n!byte 231,232\r\nDATA_EL_SN_METAL.COLUMN.L.HOLE\r\n!byte 234,232,236,232\r\nDATA_EL_SN_METAL.COLUMN.R.CENTER\r\n!byte 229,230\r\nDATA_EL_SN_METAL.COLUMN.R.BOTTOM\r\n!byte 229,233,229,235\r\nDATA_EL_SN_SAND_STONE_2\r\n!byte 160,161,64,64\r\nDATA_EL_SN_BRICK2_2X1\r\n!byte 218,221\r\nDATA_EL_SN_STAR\r\n!byte 91\r\nDATA_EL_SN_WOODEN_FLOOR3\r\n!byte 164,165,0,0,92,92\r\nDATA_EL_SN_HORIZROCK\r\n!byte 215,216,219,219,223,226\r\nCOLOR_EL_SN_TREE_1\r\n!byte 6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6\r\nCOLOR_EL_SN_MOON\r\n!byte 1,1,1,1\r\nCOLOR_EL_SN_BROWN_ROCK\r\n!byte 13,13,13,13,13,13,13,13,13,13,13,13\r\nCOLOR_EL_SN_WOODEN_FLOOR\r\n!byte 14,14,6,6,6,6\r\nCOLOR_EL_SN_STONE\r\n!byte 15,15,15,15,15,15,15,15,15,15,15,15\r\nCOLOR_EL_SN_PLATFORM_GRASS\r\n!byte 13,13,6,6\r\nCOLOR_EL_SN_WOODEN_FLOOR_RS\r\n!byte 14,14,2,2,6,6\r\nCOLOR_EL_SN_RED_STONE_4\r\n!byte 13,13,13,13,0,0,0,0\r\nCOLOR_EL_SN_RED_ROCK_BACKGROUND\r\n!byte 2,2,2,2,2,2,2,2\r\nCOLOR_EL_SN_REDDISH_ROCK\r\n!byte 10,10,10,10,10,10,10,10,10,10,10,10\r\nCOLOR_EL_SN_SAND_FLOOR\r\n!byte 9,9\r\nCOLOR_EL_SN_SLIME_STONE_4\r\n!byte 12,12,12,12,0,0,0,0\r\nCOLOR_EL_SN_SAND_STONE_4\r\n!byte 15,15,15,15,0,0,0,0\r\nCOLOR_EL_SN_BLUEROCK\r\n!byte 14,14,14,14\r\nCOLOR_EL_SN_METAL.DOOR.R\r\n!byte 11,11,11,11,11,11,11,11,11,11\r\nCOLOR_EL_SN_BRICK2_2X1\r\n!byte 11,12\r\nCOLOR_EL_SN_WOODEN_FLOOR2\r\n!byte 14,14,0,0\r\nCOLOR_EL_SN_WOODEN_FLOOR3\r\n!byte 10,10,0,0,2,2\r\n\r\n\r\nSN_SCREEN_DATA_TABLE\r\n          !word SN_LEVEL_1\r\n          !word SN_LEVEL_2\r\n          !word SN_LEVEL_3\r\n          !word SN_LEVEL_4\r\n          !word SN_LEVEL_5\r\n          !word SN_LEVEL_6\r\n          !word SN_LEVEL_7\r\n          !word SN_LEVEL_8\r\n          !word SN_LEVEL_9\r\n          !word SN_LEVEL_10\r\n          !word SN_LEVEL_11\r\n          !word SN_LEVEL_12\r\n          !word SN_LEVEL_13\r\n          !word SN_LEVEL_14\r\n          !word SN_LEVEL_15\r\n          !word SN_LEVEL_16\r\n          !word SN_LEVEL_17\r\n          !word SN_LEVEL_18\r\n          !word SN_LEVEL_19\r\n          !word SN_LEVEL_20\r\n          !word SN_LEVEL_21\r\n          !word SN_LEVEL_22\r\n          !word SN_LEVEL_23\r\n          !word SN_LEVEL_24\r\n          !word SN_LEVEL_25\r\n          !word SN_LEVEL_26\r\n          !word SN_LEVEL_27\r\n          !word SN_LEVEL_28\r\n          !word SN_LEVEL_29\r\n          !word SN_LEVEL_30\r\n          !word SN_LEVEL_31\r\n          !word SN_LEVEL_32\r\n          !word SN_LEVEL_33\r\n          !word SN_LEVEL_34\r\n          !word SN_LEVEL_35\r\n          !word SN_LEVEL_36\r\n          !word SN_LEVEL_37\r\n          !word SN_LEVEL_38\r\n          !word SN_LEVEL_39\r\n          !word SN_LEVEL_40\r\n          !word SN_LEVEL_41\r\n          !word SN_LEVEL_42\r\n          !word SN_LEVEL_43\r\n          !word SN_LEVEL_44\r\n          !word SN_LEVEL_45\r\n          !word SN_LEVEL_46\r\n          !word SN_LEVEL_47\r\n          !word SN_LEVEL_48\r\n          !word SN_LEVEL_49\r\n          !word SN_LEVEL_50\r\n          !word SN_LEVEL_51\r\n          !word SN_LEVEL_52\r\n          !word SN_LEVEL_53\r\n          !word SN_LEVEL_54\r\n          !word SN_LEVEL_55\r\n          !word SN_LEVEL_56\r\n          !word SN_LEVEL_57\r\n          !word SN_LEVEL_58\r\n          !word SN_LEVEL_59\r\n          !word SN_LEVEL_60\r\n          !word SN_LEVEL_61\r\n          !word SN_LEVEL_62\r\n          !word SN_LEVEL_63\r\n          !word SN_LEVEL_64\r\n          !word SN_LEVEL_65\r\n          !word SN_LEVEL_66\r\n          !word SN_LEVEL_67\r\n          !word SN_LEVEL_68\r\n          !word SN_LEVEL_69\r\n          !word SN_LEVEL_70\r\n          !word SN_LEVEL_71\r\n          !word SN_LEVEL_72\r\n          !word 0\r\n\r\n\r\nSN_LEVEL_1\r\n          !byte LD_ELEMENT,13,17,EL_SN_TREE_1\r\n          !byte LD_ELEMENT,34,144\r\n          !byte LD_LINE_H_ALT,1,21,38,160,13\r\n          !byte LD_LINE_H_ALT,4,18,8,160,13\r\n          !byte LD_LINE_H_ALT,11,15,8,160,13\r\n          !byte LD_LINE_H_ALT,21,12,8,160,13\r\n          !byte LD_LINE_H_ALT,30,9,8,160,13\r\n          !byte LD_ELEMENT,14,13,EL_SN_FENCE_1\r\n          !byte LD_ELEMENT,32,135\r\n          !byte LD_OBJECT,14,20,TYPE_PLAYER_DEAN\r\n          !byte LD_SPAWN_SPOT,24,11,TYPE_ZOMBIE,3\r\n          !byte LD_OBJECT,22,20,TYPE_PLAYER_SAM\r\n          !byte LD_LINE_H_ALT,4,12,5,160,13\r\n          !byte LD_ELEMENT,9,4,EL_SN_MOON\r\n          !byte LD_SPAWN_SPOT,33,20,TYPE_ZOMBIE,3\r\n          !byte LD_ELEMENT,17,19,EL_SN_TOMBSTONE\r\n          !byte LD_ELEMENT,5,138\r\n          !byte LD_ELEMENT,7,16,EL_SN_CROSS\r\n          !byte LD_SPAWN_SPOT,7,17,TYPE_ZOMBIE,3\r\n          !byte LD_ELEMENT,3,19,EL_SN_SMALL_TREE\r\n          !byte LD_ELEMENT,24,16,EL_SN_TREE_1\r\n          !byte LD_ELEMENT,28,143\r\n          !byte LD_ELEMENT_LINE_H,24,19,3,EL_SN_FENCE_1\r\n          !byte LD_ELEMENT_LINE_H,7,19,3,EL_SN_SMALL_TREE\r\n          !byte LD_ELEMENT_LINE_H,21,10,2,EL_SN_SMALL_TREE\r\n          !byte LD_ELEMENT_LINE_H,27,10,1,EL_SN_SMALL_TREE\r\n          !byte LD_ELEMENT_LINE_H,7,10,1,EL_SN_SMALL_TREE\r\n          !byte LD_ELEMENT_LINE_H,36,7,1,EL_SN_SMALL_TREE\r\n          !byte LD_ELEMENT_LINE_H,11,13,1,EL_SN_SMALL_TREE\r\n          !byte LD_ELEMENT,3,4,EL_SN_STAR\r\n          !byte LD_ELEMENT,11,136\r\n          !byte LD_ELEMENT,13,135\r\n          !byte LD_ELEMENT,43,133\r\n          !byte LD_ELEMENT,34,131\r\n          !byte LD_ELEMENT,15,129\r\n          !byte LD_END\r\nSN_LEVEL_2\r\n          !byte LD_LINE_H_ALT,1,15,10,196,13\r\n          !byte LD_LINE_H_ALT,27,15,12,196,13\r\n          !byte LD_LINE_H_ALT,11,18,16,196,13\r\n          !byte LD_AREA,1,16,10,3,195,10\r\n          !byte LD_AREA,1,19,38,3,195,10\r\n          !byte LD_SPAWN_SPOT,19,17,TYPE_ZOMBIE,8\r\n          !byte LD_ELEMENT,8,9,EL_SN_TREE_1\r\n          !byte LD_AREA,27,16,12,3,195,10\r\n          !byte LD_ELEMENT,15,141\r\n          !byte LD_ELEMENT,8,4,EL_SN_MOON\r\n          !byte LD_ELEMENT_LINE_H,2,13,3,EL_SN_FENCE_1\r\n          !byte LD_ELEMENT_LINE_H,29,13,3,EL_SN_FENCE_1\r\n          !byte LD_OBJECT,5,14,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,32,14,TYPE_PLAYER_SAM\r\n          !byte LD_LINE_H_ALT,13,15,12,160,13\r\n          !byte LD_ELEMENT,22,16,EL_SN_CROSS\r\n          !byte LD_ELEMENT,12,141\r\n          !byte LD_ELEMENT,14,16,EL_SN_TOMBSTONE\r\n          !byte LD_SPAWN_SPOT,8,5,TYPE_BAT_DIAG,5\r\n          !byte LD_LINE_H_ALT,4,12,4,160,13\r\n          !byte LD_LINE_H_ALT,32,12,4,160,13\r\n          !byte LD_ELEMENT,13,7,EL_SN_STAR\r\n          !byte LD_ELEMENT,4,136\r\n          !byte LD_ELEMENT,28,131\r\n          !byte LD_ELEMENT,17,138\r\n          !byte LD_ELEMENT,34,136\r\n          !byte LD_ELEMENT,12,131\r\n          !byte LD_ELEMENT,25,135\r\n          !byte LD_ELEMENT,15,135\r\n          !byte LD_ELEMENT_LINE_H,19,13,3,EL_SN_SMALL_TREE\r\n          !byte LD_ELEMENT_LINE_H,25,16,1,EL_SN_SMALL_TREE\r\n          !byte LD_ELEMENT_LINE_H,12,16,1,EL_SN_SMALL_TREE\r\n          !byte LD_END\r\nSN_LEVEL_3\r\n          !byte LD_LINE_H_ALT,1,13,8,196,13\r\n          !byte LD_LINE_H_ALT,9,15,4,196,13\r\n          !byte LD_LINE_H_ALT,13,19,14,196,13\r\n          !byte LD_LINE_H_ALT,31,13,8,196,13\r\n          !byte LD_LINE_H_ALT,27,15,4,196,13\r\n          !byte LD_AREA,1,14,8,8,195,13\r\n          !byte LD_AREA,31,14,8,8,195,13\r\n          !byte LD_AREA,9,16,4,6,195,13\r\n          !byte LD_AREA,27,16,4,6,195,13\r\n          !byte LD_AREA,13,20,14,2,195,13\r\n          !byte LD_ELEMENT,4,11,EL_SN_TOMBSTONE\r\n          !byte LD_ELEMENT,28,141\r\n          !byte LD_ELEMENT,32,11,EL_SN_CROSS\r\n          !byte LD_ELEMENT,27,141\r\n          !byte LD_ELEMENT,9,10,EL_SN_TREE_1\r\n          !byte LD_ELEMENT,21,141\r\n          !byte LD_ELEMENT,19,5,EL_SN_MOON\r\n          !byte LD_OBJECT,15,18,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,24,18,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,4,12,TYPE_ZOMBIE,4\r\n          !byte LD_SPAWN_SPOT,34,12,TYPE_ZOMBIE,4\r\n          !byte LD_SPAWN_SPOT,29,14,TYPE_ZOMBIE,4\r\n          !byte LD_SPAWN_SPOT,11,14,TYPE_ZOMBIE,4\r\n          !byte LD_ELEMENT,35,11,EL_SN_FENCE_1\r\n          !byte LD_ELEMENT,16,14,EL_SN_TREE_1\r\n          !byte LD_ELEMENT_LINE_H,1,11,2,EL_SN_FENCE_1\r\n          !byte LD_ELEMENT_LINE_H,14,17,4,EL_SN_FENCE_1\r\n          !byte LD_ELEMENT_LINE_H,20,15,1,EL_SN_SMALL_TREE\r\n          !byte LD_ELEMENT,10,3,EL_SN_STAR\r\n          !byte LD_ELEMENT,29,137\r\n          !byte LD_ELEMENT,19,136\r\n          !byte LD_ELEMENT,30,131\r\n          !byte LD_ELEMENT,4,130\r\n          !byte LD_ELEMENT,5,136\r\n          !byte LD_ELEMENT,15,135\r\n          !byte LD_ELEMENT,16,134\r\n          !byte LD_ELEMENT,36,132\r\n          !byte LD_ELEMENT,14,141\r\n          !byte LD_END\r\nSN_LEVEL_4\r\n          !byte LD_LINE_H_ALT,1,7,2,196,13\r\n          !byte LD_LINE_H_ALT,7,10,5,160,13\r\n          !byte LD_LINE_H_ALT,12,7,5,160,13\r\n          !byte LD_LINE_H_ALT,17,4,6,160,13\r\n          !byte LD_LINE_H_ALT,23,7,5,160,13\r\n          !byte LD_LINE_H_ALT,28,10,5,160,13\r\n          !byte LD_LINE_H_ALT,34,7,3,160,13\r\n          !byte LD_LINE_H_ALT,12,13,5,160,13\r\n          !byte LD_LINE_H_ALT,23,13,5,160,13\r\n          !byte LD_LINE_H_ALT,17,16,6,160,13\r\n          !byte LD_LINE_H_ALT,3,19,34,196,13\r\n          !byte LD_AREA,1,8,2,14,195,13\r\n          !byte LD_AREA,37,8,2,14,195,13\r\n          !byte LD_AREA,3,20,34,2,195,13\r\n          !byte LD_LINE_H_ALT,3,7,3,160,13\r\n          !byte LD_LINE_H_ALT,37,7,2,196,13\r\n          !byte LD_OBJECT,9,9,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,30,9,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,19,11,TYPE_BAT_DIAG,3\r\n          !byte LD_SPAWN_SPOT,34,17,TYPE_BAT_DIAG,3\r\n          !byte LD_SPAWN_SPOT,36,4,TYPE_BAT_DIAG,3\r\n          !byte LD_SPAWN_SPOT,3,4,TYPE_BAT_DIAG,3\r\n          !byte LD_SPAWN_SPOT,19,3,TYPE_ZOMBIE,3\r\n          !byte LD_ELEMENT,13,11,EL_SN_TOMBSTONE\r\n          !byte LD_ELEMENT,35,133\r\n          !byte LD_ELEMENT,26,14,EL_SN_TREE_1\r\n          !byte LD_ELEMENT,2,5,EL_SN_CROSS\r\n          !byte LD_ELEMENT,19,130\r\n          !byte LD_ELEMENT,25,145\r\n          !byte LD_ELEMENT,11,17,EL_SN_FENCE_1\r\n          !byte LD_ELEMENT,15,145\r\n          !byte LD_ELEMENT_LINE_H,31,17,2,EL_SN_FENCE_1\r\n          !byte LD_ELEMENT,18,11,EL_SN_TREE_1\r\n          !byte LD_ELEMENT,14,5,EL_SN_SMALL_TREE\r\n          !byte LD_LINE_H,5,15,6,92,2\r\n          !byte LD_AREA,5,16,6,3,93,2\r\n          !byte LD_LINE_V,4,15,4,95,2\r\n          !byte LD_LINE_V,11,15,4,95,2\r\n          !byte LD_SPAWN_SPOT,5,17,TYPE_BAT_DIAG,3\r\n          !byte LD_ELEMENT,7,16,EL_SN_TOMB_DOOR\r\n          !byte LD_LINE_H,4,14,8,110,2\r\n          !byte LD_ELEMENT,18,17,EL_SN_CROSS\r\n          !byte LD_ELEMENT,25,139\r\n          !byte LD_ELEMENT,23,17,EL_SN_TOMBSTONE\r\n          !byte LD_ELEMENT_LINE_H,29,8,2,EL_SN_SMALL_TREE\r\n          !byte LD_ELEMENT_LINE_H,21,17,1,EL_SN_SMALL_TREE\r\n          !byte LD_ELEMENT,13,2,EL_SN_STAR\r\n          !byte LD_ELEMENT,7,131\r\n          !byte LD_ELEMENT,37,129\r\n          !byte LD_ELEMENT,27,129\r\n          !byte LD_ELEMENT,23,137\r\n          !byte LD_ELEMENT,26,130\r\n          !byte LD_ELEMENT,6,132\r\n          !byte LD_END\r\nSN_LEVEL_5\r\n          !byte LD_ELEMENT,12,17,EL_SN_FENCE_1\r\n          !byte LD_AREA,5,14,6,5,93,2\r\n          !byte LD_AREA,29,10,6,5,93,2\r\n          !byte LD_LINE_H_ALT,1,19,14,210,13\r\n          !byte LD_LINE_H_ALT,24,15,15,210,13\r\n          !byte LD_LINE_H_ALT,15,13,9,210,13\r\n          !byte LD_ELEMENT_AREA,15,14,3,2,EL_SN_BROWN_ROCK\r\n          !byte LD_LINE_H,28,9,8,110,2\r\n          !byte LD_LINE_H,4,13,8,110,2\r\n          !byte LD_LINE_H,5,14,6,92,2\r\n          !byte LD_LINE_H,29,10,6,92,2\r\n          !byte LD_LINE_V,4,14,5,95,2\r\n          !byte LD_LINE_V,11,14,5,95,2\r\n          !byte LD_LINE_V,35,10,5,95,2\r\n          !byte LD_LINE_V,28,10,5,95,2\r\n          !byte LD_LINE_H_ALT,10,16,5,160,13\r\n          !byte LD_ELEMENT,7,16,EL_SN_TOMB_DOOR\r\n          !byte LD_ELEMENT,31,140\r\n          !byte LD_ELEMENT,17,11,EL_SN_SMALL_TREE\r\n          !byte LD_ELEMENT,18,8,EL_SN_TREE_1\r\n          !byte LD_ELEMENT,10,5,EL_SN_MOON\r\n          !byte LD_OBJECT,16,12,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,22,12,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,7,16,TYPE_BAT_DIAG,3\r\n          !byte LD_SPAWN_SPOT,8,7,TYPE_BAT_DIAG,3\r\n          !byte LD_SPAWN_SPOT,19,6,TYPE_BAT_DIAG,3\r\n          !byte LD_SPAWN_SPOT,32,11,TYPE_BAT_DIAG,3\r\n          !byte LD_SPAWN_SPOT,28,6,TYPE_BAT_DIAG,3\r\n          !byte LD_ELEMENT_AREA,24,16,5,1,EL_SN_BROWN_ROCK\r\n          !byte LD_ELEMENT_AREA,0,20,13,1,EL_SN_BROWN_ROCK_SMALL\r\n          !byte LD_LINE_H,10,17,5,0,0\r\n          !byte LD_ELEMENT,25,10,EL_SN_STAR\r\n          !byte LD_ELEMENT,32,135\r\n          !byte LD_ELEMENT,34,134\r\n          !byte LD_ELEMENT,33,131\r\n          !byte LD_ELEMENT,5,136\r\n          !byte LD_ELEMENT,3,140\r\n          !byte LD_ELEMENT,6,133\r\n          !byte LD_ELEMENT,4,130\r\n          !byte LD_ELEMENT,16,135\r\n          !byte LD_ELEMENT,22,130\r\n          !byte LD_LINE_H,10,18,1,92,2\r\n          !byte LD_ELEMENT,25,13,EL_SN_FENCE_1\r\n          !byte LD_ELEMENT,36,141\r\n          !byte LD_ELEMENT,1,145\r\n          !byte LD_END\r\nSN_LEVEL_6\r\n          !byte LD_ELEMENT,25,14,EL_SN_TREE_1\r\n          !byte LD_LINE_H_ALT,1,20,38,160,13\r\n          !byte LD_LINE_H_ALT,3,17,8,160,13\r\n          !byte LD_LINE_H_ALT,3,14,8,160,13\r\n          !byte LD_LINE_H_ALT,3,11,8,160,13\r\n          !byte LD_LINE_H_ALT,29,17,8,160,13\r\n          !byte LD_LINE_H_ALT,29,14,8,160,13\r\n          !byte LD_LINE_H_ALT,29,11,8,160,13\r\n          !byte LD_LINE_H_ALT,29,8,8,160,13\r\n          !byte LD_LINE_H_ALT,3,8,8,160,13\r\n          !byte LD_LINE_H_ALT,3,5,34,160,13\r\n          !byte LD_SPAWN_SPOT,6,16,TYPE_ZOMBIE,4\r\n          !byte LD_SPAWN_SPOT,33,16,TYPE_ZOMBIE,4\r\n          !byte LD_SPAWN_SPOT,33,10,TYPE_ZOMBIE,4\r\n          !byte LD_SPAWN_SPOT,6,10,TYPE_ZOMBIE,4\r\n          !byte LD_ELEMENT,5,3,EL_SN_TOMBSTONE\r\n          !byte LD_ELEMENT,20,146\r\n          !byte LD_ELEMENT,31,140\r\n          !byte LD_ELEMENT,8,134\r\n          !byte LD_ELEMENT,12,3,EL_SN_FENCE_1\r\n          !byte LD_ELEMENT_LINE_H,17,3,4,EL_SN_FENCE_1\r\n          !byte LD_ELEMENT,31,131\r\n          !byte LD_ELEMENT_LINE_H,24,18,5,EL_SN_FENCE_1\r\n          !byte LD_ELEMENT,13,15,EL_SN_TREE_1\r\n          !byte LD_OBJECT,14,19,TYPE_PLAYER_DEAN\r\n          !byte LD_ELEMENT,8,3,EL_SN_SMALL_TREE\r\n          !byte LD_ELEMENT,17,146\r\n          !byte LD_OBJECT,25,19,TYPE_PLAYER_SAM\r\n          !byte LD_ELEMENT,4,12,EL_SN_CROSS\r\n          !byte LD_ELEMENT,30,134\r\n          !byte LD_ELEMENT,4,134\r\n          !byte LD_ELEMENT,10,146\r\n          !byte LD_END\r\nSN_LEVEL_7\r\n          !byte LD_LINE_H_ALT,1,7,6,160,13\r\n          !byte LD_LINE_H_ALT,17,13,6,160,13\r\n          !byte LD_LINE_H_ALT,9,10,6,160,13\r\n          !byte LD_LINE_H_ALT,19,13,2,196,13\r\n          !byte LD_LINE_H_ALT,25,10,6,160,13\r\n          !byte LD_LINE_H_ALT,33,7,6,160,13\r\n          !byte LD_LINE_H_ALT,9,16,6,160,13\r\n          !byte LD_LINE_H_ALT,1,19,18,196,13\r\n          !byte LD_LINE_H_ALT,21,19,18,196,13\r\n          !byte LD_AREA,19,14,2,6,195,13\r\n          !byte LD_LINE_H_ALT,25,16,6,160,13\r\n          !byte LD_AREA,1,20,38,2,195,13\r\n          !byte LD_OBJECT,36,18,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,19,12,TYPE_MUMMY,4\r\n          !byte LD_SPAWN_SPOT,3,5,TYPE_BAT_UD,4\r\n          !byte LD_SPAWN_SPOT,36,5,TYPE_BAT_UD,4\r\n          !byte LD_ELEMENT,11,8,EL_SN_TOMBSTONE\r\n          !byte LD_ELEMENT,27,142\r\n          !byte LD_ELEMENT_LINE_H,26,17,4,EL_SN_FENCE_1\r\n          !byte LD_ELEMENT_LINE_H,10,17,3,EL_SN_FENCE_1\r\n          !byte LD_ELEMENT,20,11,EL_SN_CROSS\r\n          !byte LD_ELEMENT,23,145\r\n          !byte LD_ELEMENT,3,14,EL_SN_TREE_1\r\n          !byte LD_ELEMENT,26,133\r\n          !byte LD_ELEMENT,19,4,EL_SN_MOON\r\n          !byte LD_OBJECT,3,18,TYPE_PLAYER_DEAN\r\n          !byte LD_ELEMENT,3,5,EL_SN_SMALL_TREE\r\n          !byte LD_ELEMENT,10,142\r\n          !byte LD_ELEMENT,7,145\r\n          !byte LD_SPAWN_SPOT,12,9,TYPE_MUMMY,4\r\n          !byte LD_SPAWN_SPOT,28,9,TYPE_MUMMY,4\r\n          !byte LD_ELEMENT,24,5,EL_SN_STAR\r\n          !byte LD_ELEMENT,15,130\r\n          !byte LD_ELEMENT,32,141\r\n          !byte LD_ELEMENT,32,130\r\n          !byte LD_ELEMENT,7,131\r\n          !byte LD_ELEMENT,35,139\r\n          !byte LD_ELEMENT,8,140\r\n          !byte LD_ELEMENT,6,138\r\n          !byte LD_END\r\nSN_LEVEL_8\r\n          !byte LD_LINE_H_ALT,1,21,10,196,13\r\n          !byte LD_LINE_H_ALT,29,21,10,196,13\r\n          !byte LD_LINE_H_ALT,11,19,2,196,13\r\n          !byte LD_LINE_H_ALT,27,19,2,196,13\r\n          !byte LD_LINE_H_ALT,13,17,14,196,13\r\n          !byte LD_LINE_H_ALT,17,9,6,160,13\r\n          !byte LD_AREA,13,18,14,2,195,13\r\n          !byte LD_AREA,11,20,18,2,195,13\r\n          !byte LD_OBJECT,3,20,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,36,20,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,18,8,TYPE_ZOMBIE,4\r\n          !byte LD_SPAWN_SPOT,21,8,TYPE_ZOMBIE,4\r\n          !byte LD_SPAWN_SPOT,21,16,TYPE_ZOMBIE,4\r\n          !byte LD_SPAWN_SPOT,18,16,TYPE_MUMMY,4\r\n          !byte LD_ELEMENT,18,7,EL_SN_TOMBSTONE\r\n          !byte LD_ELEMENT,27,145\r\n          !byte LD_ELEMENT,11,17,EL_SN_CROSS\r\n          !byte LD_ELEMENT,7,16,EL_SN_TREE_1\r\n          !byte LD_ELEMENT,4,143\r\n          !byte LD_ELEMENT,14,139\r\n          !byte LD_ELEMENT,30,144\r\n          !byte LD_ELEMENT_LINE_H,2,19,3,EL_SN_FENCE_1\r\n          !byte LD_ELEMENT,22,11,EL_SN_TREE_1\r\n          !byte LD_ELEMENT,6,5,EL_SN_MOON\r\n          !byte LD_ELEMENT,36,12,EL_SN_STAR\r\n          !byte LD_ELEMENT,19,141\r\n          !byte LD_ELEMENT,4,143\r\n          !byte LD_ELEMENT,2,138\r\n          !byte LD_ELEMENT,18,131\r\n          !byte LD_ELEMENT,29,138\r\n          !byte LD_ELEMENT,33,136\r\n          !byte LD_ELEMENT,29,130\r\n          !byte LD_ELEMENT,4,132\r\n          !byte LD_ELEMENT,11,135\r\n          !byte LD_ELEMENT_LINE_H,14,15,4,EL_SN_FENCE_1\r\n          !byte LD_ELEMENT,34,19,EL_SN_SMALL_TREE\r\n          !byte LD_END\r\nSN_LEVEL_9\r\n          !byte LD_ELEMENT,2,15,EL_SN_TREE_1\r\n          !byte LD_ELEMENT_AREA,1,19,4,1,EL_SN_FENCE_1\r\n          !byte LD_LINE_H_ALT,1,21,38,196,13\r\n          !byte LD_AREA,13,10,26,11,93,2\r\n          !byte LD_LINE_H,13,9,26,92,2\r\n          !byte LD_LINE_H,12,8,27,110,2\r\n          !byte LD_LINE_H,12,7,27,110,2\r\n          !byte LD_LINE_H_ALT,7,18,6,160,13\r\n          !byte LD_LINE_H_ALT,12,15,6,160,13\r\n          !byte LD_LINE_H_ALT,17,12,6,160,13\r\n          !byte LD_LINE_H_ALT,22,15,6,160,13\r\n          !byte LD_LINE_H_ALT,27,18,6,160,13\r\n          !byte LD_LINE_H,22,17,6,92,2\r\n          !byte LD_LINE_H,27,20,6,92,2\r\n          !byte LD_LINE_H,17,14,6,92,2\r\n          !byte LD_LINE_H,13,17,5,92,2\r\n          !byte LD_LINE_H_ALT,2,8,6,160,13\r\n          !byte LD_LINE_H_ALT,32,8,6,160,13\r\n          !byte LD_LINE_H_ALT,7,10,11,160,13\r\n          !byte LD_LINE_H_ALT,22,10,11,160,13\r\n          !byte LD_LINE_H,23,12,10,92,2\r\n          !byte LD_LINE_H,13,12,4,92,2\r\n          !byte LD_ELEMENT,34,3,EL_SN_MOON\r\n          !byte LD_OBJECT,3,20,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,36,20,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,19,20,TYPE_MUMMY,4\r\n          !byte LD_SPAWN_SPOT,9,9,TYPE_ZOMBIE,3\r\n          !byte LD_SPAWN_SPOT,27,9,TYPE_ZOMBIE,3\r\n          !byte LD_SPAWN_SPOT,19,11,TYPE_FRANKENSTEIN,4\r\n          !byte LD_LINE_H,12,16,6,0,0\r\n          !byte LD_LINE_H,22,16,6,0,0\r\n          !byte LD_LINE_H,27,19,6,0,0\r\n          !byte LD_LINE_H,13,11,5,0,0\r\n          !byte LD_LINE_H,17,13,6,0,0\r\n          !byte LD_LINE_H,22,11,11,0,0\r\n          !byte LD_LINE_H,32,9,6,0,0\r\n          !byte LD_ELEMENT_AREA,36,14,1,1,EL_SN_SEWER_PIPE_RED\r\n          !byte LD_ELEMENT_AREA,22,18,1,1,EL_SN_SEWER_PIPE_RED\r\n          !byte LD_ELEMENT_AREA,15,18,1,1,EL_SN_SEWER_PIPE_RED\r\n          !byte LD_ELEMENT_AREA,30,14,1,1,EL_SN_SEWER_PIPE_RED\r\n          !byte LD_LINE_V,13,12,3,30,2\r\n          !byte LD_LINE_V,13,17,4,30,2\r\n          !byte LD_LINE_V,13,9,1,30,2\r\n          !byte LD_LINE_H,33,10,5,92,2\r\n          !byte LD_ELEMENT,22,1,EL_SN_STAR\r\n          !byte LD_ELEMENT,31,132\r\n          !byte LD_ELEMENT,3,141\r\n          !byte LD_ELEMENT,29,131\r\n          !byte LD_ELEMENT,2,129\r\n          !byte LD_ELEMENT,12,132\r\n          !byte LD_END\r\nSN_LEVEL_10\r\n          !byte LD_AREA,6,4,28,17,93,2\r\n          !byte LD_ELEMENT,18,10,EL_SN_TOMB_DOOR\r\n          !byte LD_ELEMENT,20,138\r\n          !byte LD_LINE_H,6,3,28,92,2\r\n          !byte LD_LINE_H,17,13,6,92,2\r\n          !byte LD_LINE_H,16,14,8,92,2\r\n          !byte LD_AREA,7,3,2,17,95,6\r\n          !byte LD_AREA,31,3,2,17,95,6\r\n          !byte LD_LINE_H,5,2,30,110,6\r\n          !byte LD_LINE_H,6,1,28,110,6\r\n          !byte LD_LINE_H_ALT,1,5,8,160,13\r\n          !byte LD_LINE_H_ALT,31,5,8,160,13\r\n          !byte LD_LINE_H_ALT,4,8,8,160,13\r\n          !byte LD_LINE_H_ALT,28,8,8,160,13\r\n          !byte LD_LINE_H_ALT,8,11,8,160,13\r\n          !byte LD_LINE_H_ALT,24,11,8,160,13\r\n          !byte LD_LINE_H_ALT,5,14,6,160,13\r\n          !byte LD_LINE_H_ALT,29,14,6,160,13\r\n          !byte LD_LINE_H_ALT,2,17,6,160,13\r\n          !byte LD_LINE_H_ALT,32,17,6,160,13\r\n          !byte LD_LINE_H_ALT,15,15,10,160,13\r\n          !byte LD_LINE_H_ALT,7,19,8,160,13\r\n          !byte LD_LINE_H_ALT,25,19,8,160,13\r\n          !byte LD_LINE_H_ALT,1,21,38,196,13\r\n          !byte LD_OBJECT,11,18,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,28,18,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,3,20,TYPE_FRANKENSTEIN,4\r\n          !byte LD_SPAWN_SPOT,36,20,TYPE_FRANKENSTEIN,4\r\n          !byte LD_SPAWN_SPOT,27,10,TYPE_FRANKENSTEIN,4\r\n          !byte LD_SPAWN_SPOT,12,10,TYPE_FRANKENSTEIN,4\r\n          !byte LD_LINE_H_ALT,13,6,14,160,13\r\n          !byte LD_LINE_H,13,7,14,92,2\r\n          !byte LD_LINE_H,6,10,1,92,2\r\n          !byte LD_LINE_H,28,10,3,92,2\r\n          !byte LD_LINE_H,9,13,7,92,2\r\n          !byte LD_LINE_H,24,13,7,92,2\r\n          !byte LD_LINE_H,29,15,5,32,2\r\n          !byte LD_LINE_H,5,15,6,32,2\r\n          !byte LD_LINE_H,15,16,10,32,2\r\n          !byte LD_LINE_H,6,18,2,32,2\r\n          !byte LD_LINE_H,32,18,2,32,2\r\n          !byte LD_LINE_H,25,20,8,32,2\r\n          !byte LD_LINE_H,7,20,8,32,2\r\n          !byte LD_LINE_H_ALT,13,7,14,0,0\r\n          !byte LD_LINE_H_ALT,6,6,3,0,0\r\n          !byte LD_LINE_H_ALT,31,6,3,0,0\r\n          !byte LD_LINE_H_ALT,6,9,6,0,0\r\n          !byte LD_LINE_H_ALT,28,9,6,0,0\r\n          !byte LD_LINE_H_ALT,8,12,8,0,0\r\n          !byte LD_LINE_H_ALT,24,12,8,0,0\r\n          !byte LD_ELEMENT,18,145\r\n          !byte LD_ELEMENT,20,145\r\n          !byte LD_ELEMENT,18,131\r\n          !byte LD_ELEMENT,20,131\r\n          !byte LD_ELEMENT,10,131\r\n          !byte LD_ELEMENT,28,131\r\n          !byte LD_LINE_H,15,17,3,92,2\r\n          !byte LD_LINE_H,22,17,3,92,2\r\n          !byte LD_LINE_H,33,10,1,92,2\r\n          !byte LD_LINE_H,9,10,3,92,2\r\n          !byte LD_LINE_H,6,7,1,92,2\r\n          !byte LD_LINE_H,33,7,1,92,2\r\n          !byte LD_LINE_H,6,16,1,92,2\r\n          !byte LD_LINE_H,6,19,1,92,2\r\n          !byte LD_LINE_H,13,8,14,92,2\r\n          !byte LD_LINE_H,29,16,2,92,2\r\n          !byte LD_LINE_H,33,16,1,92,2\r\n          !byte LD_LINE_H,33,19,1,92,2\r\n          !byte LD_END\r\nSN_LEVEL_11\r\n          !byte LD_AREA,1,1,38,21,93,6\r\n          !byte LD_ELEMENT_LINE_H,6,7,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_OBJECT,7,18,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,32,18,TYPE_PLAYER_SAM\r\n          !byte LD_OBJECT,19,20,TYPE_BOSS\r\n          !byte LD_ELEMENT_LINE_H,10,10,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,2,10,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,2,19,4,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,2,16,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,6,13,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,18,13,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,18,7,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,30,7,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,34,10,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,26,10,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,30,13,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,34,16,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,30,19,4,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,6,14,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,18,14,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,10,11,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,2,11,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,6,8,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,2,17,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,18,8,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,26,11,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,30,8,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,30,14,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,34,11,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,34,17,2,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,2,20,4,EL_SN_PLATFORM_GRASS\r\n          !byte LD_ELEMENT_LINE_H,30,20,4,EL_SN_PLATFORM_GRASS\r\n          !byte LD_LINE_H,2,20,8,0,0\r\n          !byte LD_LINE_H,30,20,8,0,0\r\n          !byte LD_LINE_H,2,17,4,0,0\r\n          !byte LD_LINE_H,10,11,4,0,0\r\n          !byte LD_LINE_H,2,11,4,0,0\r\n          !byte LD_LINE_H,6,8,4,0,0\r\n          !byte LD_LINE_H,6,14,4,0,0\r\n          !byte LD_LINE_H,18,14,4,0,0\r\n          !byte LD_LINE_H,18,8,4,0,0\r\n          !byte LD_LINE_H,30,14,4,0,0\r\n          !byte LD_LINE_H,30,8,4,0,0\r\n          !byte LD_LINE_H,34,11,4,0,0\r\n          !byte LD_LINE_H,26,11,4,0,0\r\n          !byte LD_LINE_H,34,17,4,0,0\r\n          !byte LD_LINE_H,1,2,38,110,6\r\n          !byte LD_LINE_H,1,5,38,110,6\r\n          !byte LD_END\r\nSN_LEVEL_12\r\n          !byte LD_AREA,1,1,38,21,93,6\r\n          !byte LD_ELEMENT,3,2,EL_SN_HOUSE_DOOR\r\n          !byte LD_ELEMENT,3,147\r\n          !byte LD_ELEMENT,5,147\r\n          !byte LD_ELEMENT,35,139\r\n          !byte LD_ELEMENT_LINE_H,1,5,5,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_LINE_H,17,14,3,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,13,11,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_OBJECT,3,21,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,36,21,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,3,4,TYPE_SPIDER,3\r\n          !byte LD_SPAWN_SPOT,35,13,TYPE_SPIDER,3\r\n          !byte LD_ELEMENT_LINE_H,29,14,5,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,1,14,5,EL_SN_WOODEN_FLOOR\r\n          !byte LD_SPAWN_SPOT,3,13,TYPE_SPIDER,3\r\n          !byte LD_ELEMENT,3,11,EL_SN_HOUSE_DOOR\r\n          !byte LD_ELEMENT_LINE_H,29,5,5,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT,35,2,EL_SN_HOUSE_DOOR\r\n          !byte LD_SPAWN_SPOT,35,4,TYPE_SPIDER,3\r\n          !byte LD_ELEMENT_LINE_V,19,14,2,EL_SN_BRICK_2X2\r\n          !byte LD_ELEMENT_LINE_H,10,8,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,23,11,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,26,8,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,13,16,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,10,19,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,23,16,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,26,19,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_LINE_H,19,19,2,92,6\r\n          !byte LD_ELEMENT_LINE_V,19,15,2,EL_SN_BRICK2_2X1\r\n          !byte LD_LINE_H,19,18,2,0,0\r\n          !byte LD_ELEMENT_AREA,14,2,2,1,EL_SN_TOMB_DOOR\r\n          !byte LD_ELEMENT_AREA,22,2,2,1,EL_SN_TOMB_DOOR\r\n          !byte LD_LINE_H,1,1,38,110,6\r\n          !byte LD_END\r\nSN_LEVEL_13\r\n          !byte LD_AREA,1,1,38,21,93,6\r\n          !byte LD_ELEMENT_LINE_H,12,19,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_V,10,16,3,EL_SN_BRICK_2X2\r\n          !byte LD_ELEMENT_LINE_V,28,16,3,EL_SN_BRICK_2X2\r\n          !byte LD_ELEMENT_LINE_H,24,19,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,16,16,4,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,32,19,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,34,16,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,4,19,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,1,16,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,4,13,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,32,13,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_OBJECT,14,21,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,25,21,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,5,21,TYPE_SPIDER,3\r\n          !byte LD_SPAWN_SPOT,35,21,TYPE_SPIDER,3\r\n          !byte LD_SPAWN_SPOT,19,6,TYPE_SPIDER,6\r\n          !byte LD_ELEMENT_LINE_H,6,10,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,8,7,12,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,30,10,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT,10,4,EL_SN_HOUSE_DOOR\r\n          !byte LD_ELEMENT,28,132\r\n          !byte LD_ELEMENT_LINE_V,10,17,4,EL_SN_BRICK2_2X1\r\n          !byte LD_ELEMENT_LINE_V,28,17,4,EL_SN_BRICK2_2X1\r\n          !byte LD_ELEMENT_AREA,18,12,2,1,EL_SN_TOMB_DOOR\r\n          !byte LD_ELEMENT_AREA,12,12,2,1,EL_SN_TOMB_DOOR\r\n          !byte LD_ELEMENT_AREA,24,12,2,1,EL_SN_TOMB_DOOR\r\n          !byte LD_END\r\nSN_LEVEL_14\r\n          !byte LD_AREA,1,1,38,21,93,6\r\n          !byte LD_ELEMENT_LINE_V,19,1,5,EL_SN_BRICK_2X2\r\n          !byte LD_ELEMENT_LINE_H,4,19,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,32,19,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,26,16,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,10,16,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,16,19,4,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT,8,142\r\n          !byte LD_ELEMENT,6,140\r\n          !byte LD_ELEMENT,4,138\r\n          !byte LD_ELEMENT_LINE_H,1,8,4,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT,16,5,EL_SN_HOUSE_DOOR\r\n          !byte LD_ELEMENT,11,147\r\n          !byte LD_ELEMENT_LINE_H,13,8,3,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,21,8,3,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,31,8,4,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT,34,138\r\n          !byte LD_ELEMENT,32,140\r\n          !byte LD_ELEMENT,30,142\r\n          !byte LD_ELEMENT,22,5,EL_SN_HOUSE_DOOR\r\n          !byte LD_ELEMENT,27,147\r\n          !byte LD_OBJECT,5,18,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,34,18,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,16,7,TYPE_SPIDER,3\r\n          !byte LD_SPAWN_SPOT,23,7,TYPE_SPIDER,3\r\n          !byte LD_SPAWN_SPOT,27,21,TYPE_SPIDER,3\r\n          !byte LD_SPAWN_SPOT,12,21,TYPE_SPIDER,3\r\n          !byte LD_ELEMENT_LINE_V,19,18,2,EL_SN_BRICK_2X2\r\n          !byte LD_LINE_H,19,11,2,92,6\r\n          !byte LD_ELEMENT_LINE_V,19,19,2,EL_SN_BRICK2_2X1\r\n          !byte LD_ELEMENT_LINE_V,19,8,2,EL_SN_BRICK2_2X1\r\n          !byte LD_ELEMENT_LINE_V,19,2,6,EL_SN_BRICK2_2X1\r\n          !byte LD_ELEMENT_AREA,18,14,2,1,EL_SN_TOMB_DOOR\r\n          !byte LD_ELEMENT_AREA,3,4,2,1,EL_SN_TOMB_DOOR\r\n          !byte LD_ELEMENT_AREA,33,4,2,1,EL_SN_TOMB_DOOR\r\n          !byte LD_END\r\nSN_LEVEL_15\r\n          !byte LD_AREA,1,16,6,6,92,6\r\n          !byte LD_AREA,33,16,6,6,92,6\r\n          !byte LD_ELEMENT,3,19,EL_SN_HOUSE_DOOR\r\n          !byte LD_ELEMENT,35,147\r\n          !byte LD_ELEMENT,9,17,EL_SN_TREE_1\r\n          !byte LD_ELEMENT_LINE_H,8,19,2,EL_SN_WOODEN_FLOOR_NS\r\n          !byte LD_ELEMENT_LINE_H,8,16,2,EL_SN_WOODEN_FLOOR_NS\r\n          !byte LD_ELEMENT_LINE_H,8,13,2,EL_SN_WOODEN_FLOOR_NS\r\n          !byte LD_ELEMENT_LINE_H,2,10,6,EL_SN_WOODEN_FLOOR_NS\r\n          !byte LD_ELEMENT_LINE_H,28,19,2,EL_SN_WOODEN_FLOOR_NS\r\n          !byte LD_ELEMENT_LINE_H,28,16,2,EL_SN_WOODEN_FLOOR_NS\r\n          !byte LD_ELEMENT,17,15,EL_SN_TREE_1\r\n          !byte LD_ELEMENT_LINE_H,28,13,2,EL_SN_WOODEN_FLOOR_NS\r\n          !byte LD_ELEMENT_LINE_H,26,10,6,EL_SN_WOODEN_FLOOR_NS\r\n          !byte LD_ELEMENT_LINE_H,16,16,4,EL_SN_WOODEN_FLOOR_NS\r\n          !byte LD_ELEMENT_LINE_H,16,7,4,EL_SN_WOODEN_FLOOR_NS\r\n          !byte LD_ELEMENT_LINE_H,32,7,2,EL_SN_WOODEN_FLOOR_NS\r\n          !byte LD_ELEMENT_LINE_H,4,7,2,EL_SN_WOODEN_FLOOR_NS\r\n          !byte LD_OBJECT,3,21,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,36,21,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,5,6,TYPE_SPIDER,3\r\n          !byte LD_SPAWN_SPOT,20,12,TYPE_BAT_DIAG,4\r\n          !byte LD_SPAWN_SPOT,34,6,TYPE_SPIDER,3\r\n          !byte LD_SPAWN_SPOT,20,19,TYPE_SPIDER,3\r\n          !byte LD_ELEMENT_LINE_H,14,20,4,EL_SN_ROCK_SMALL\r\n          !byte LD_LINE_H,1,15,7,93,2\r\n          !byte LD_LINE_H,32,15,7,93,2\r\n          !byte LD_LINE_V,7,16,6,93,2\r\n          !byte LD_LINE_V,32,16,6,93,2\r\n          !byte LD_ELEMENT,27,8,EL_SN_SMALL_TREE\r\n          !byte LD_ELEMENT,23,146\r\n          !byte LD_END\r\nSN_LEVEL_16\r\n          !byte LD_AREA,1,1,38,21,93,6\r\n          !byte LD_ELEMENT_LINE_H,2,20,4,EL_SN_WOODEN_FLOOR2\r\n          !byte LD_ELEMENT_LINE_H,30,20,4,EL_SN_WOODEN_FLOOR2\r\n          !byte LD_ELEMENT_LINE_H,22,18,3,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,12,18,3,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,17,16,3,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,8,16,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,28,16,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,4,14,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,32,14,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,28,12,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,8,12,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,12,10,3,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,22,10,3,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,17,12,3,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,2,8,4,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,30,8,4,EL_SN_WOODEN_FLOOR\r\n          !byte LD_OBJECT,5,13,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,34,13,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,4,7,TYPE_SPIDER,2\r\n          !byte LD_SPAWN_SPOT,34,7,TYPE_SPIDER,2\r\n          !byte LD_SPAWN_SPOT,14,9,TYPE_ZOMBIE,2\r\n          !byte LD_SPAWN_SPOT,25,9,TYPE_ZOMBIE,2\r\n          !byte LD_SPAWN_SPOT,14,17,TYPE_ZOMBIE,2\r\n          !byte LD_SPAWN_SPOT,25,17,TYPE_ZOMBIE,2\r\n          !byte LD_ELEMENT_LINE_V,19,16,3,EL_SN_BRICK_2X2\r\n          !byte LD_ELEMENT_LINE_V,19,17,4,EL_SN_BRICK2_2X1\r\n          !byte LD_END\r\nSN_LEVEL_17\r\n          !byte LD_AREA,1,1,38,21,93,6\r\n          !byte LD_ELEMENT_LINE_H,16,14,4,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,14,15,6,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,12,16,8,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,8,12,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,4,9,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,4,15,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,8,18,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,28,18,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,32,15,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,28,12,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,32,9,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,36,12,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,0,12,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,0,18,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,36,18,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,1,21,19,EL_SN_WOODEN_FLOOR_NS\r\n          !byte LD_OBJECT,17,20,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,22,20,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,19,11,TYPE_BAT_VANISH,4\r\n          !byte LD_SPAWN_SPOT,5,13,TYPE_BAT_DIAG,3\r\n          !byte LD_SPAWN_SPOT,34,13,TYPE_BAT_DIAG,3\r\n          !byte LD_SPAWN_SPOT,37,17,TYPE_SPIDER,2\r\n          !byte LD_SPAWN_SPOT,2,17,TYPE_SPIDER,2\r\n          !byte LD_ELEMENT,19,18,EL_SN_WOODEN_FLOOR\r\n          !byte LD_END\r\nSN_LEVEL_18\r\n          !byte LD_AREA,1,1,38,21,93,6\r\n          !byte LD_ELEMENT_LINE_H,1,16,7,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_V,9,4,5,EL_SN_BRICK_2X2\r\n          !byte LD_ELEMENT_LINE_H,25,16,7,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_V,29,4,5,EL_SN_BRICK_2X2\r\n          !byte LD_ELEMENT_LINE_H,11,7,9,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,11,10,9,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,11,13,9,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,1,19,6,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,27,19,6,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,11,4,9,EL_SN_WOODEN_FLOOR\r\n          !byte LD_OBJECT,16,21,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,23,21,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,36,21,TYPE_SPIDER,4\r\n          !byte LD_SPAWN_SPOT,3,21,TYPE_SPIDER,4\r\n          !byte LD_OBJECT,12,12,TYPE_SPIDER\r\n          !byte LD_OBJECT,27,9,TYPE_SPIDER\r\n          !byte LD_OBJECT,12,6,TYPE_SPIDER\r\n          !byte LD_SPAWN_SPOT,12,6,TYPE_SPIDER,4\r\n          !byte LD_SPAWN_SPOT,27,9,TYPE_SPIDER,4\r\n          !byte LD_SPAWN_SPOT,12,12,TYPE_SPIDER,4\r\n          !byte LD_LINE_H,9,14,22,92,0\r\n          !byte LD_ELEMENT_LINE_V,9,5,8,EL_SN_BRICK2_2X1\r\n          !byte LD_ELEMENT_LINE_V,29,5,8,EL_SN_BRICK2_2X1\r\n          !byte LD_END\r\nSN_LEVEL_19\r\n          !byte LD_AREA,1,1,38,21,93,6\r\n          !byte LD_ELEMENT_LINE_V,6,7,5,EL_SN_BRICK_2X2\r\n          !byte LD_ELEMENT_LINE_V,10,7,5,EL_SN_BRICK_2X2\r\n          !byte LD_ELEMENT_LINE_V,32,7,5,EL_SN_BRICK_2X2\r\n          !byte LD_ELEMENT_LINE_V,28,7,5,EL_SN_BRICK_2X2\r\n          !byte LD_ELEMENT,8,16,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT,8,141\r\n          !byte LD_ELEMENT,8,138\r\n          !byte LD_ELEMENT,8,135\r\n          !byte LD_ELEMENT,30,135\r\n          !byte LD_ELEMENT,30,138\r\n          !byte LD_ELEMENT,30,141\r\n          !byte LD_ELEMENT,30,144\r\n          !byte LD_ELEMENT_LINE_H,5,19,4,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,27,19,4,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,12,7,8,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT,1,135\r\n          !byte LD_ELEMENT,37,135\r\n          !byte LD_ELEMENT_LINE_H,12,16,8,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,12,13,8,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,12,10,8,EL_SN_WOODEN_FLOOR\r\n          !byte LD_OBJECT,3,21,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,36,21,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,14,15,TYPE_SPIDER,4\r\n          !byte LD_SPAWN_SPOT,25,12,TYPE_SPIDER,4\r\n          !byte LD_SPAWN_SPOT,14,12,TYPE_SPIDER,4\r\n          !byte LD_SPAWN_SPOT,14,9,TYPE_SPIDER,4\r\n          !byte LD_SPAWN_SPOT,25,9,TYPE_SPIDER,4\r\n          !byte LD_SPAWN_SPOT,25,15,TYPE_SPIDER,4\r\n          !byte LD_LINE_H,6,17,28,92,0\r\n          !byte LD_ELEMENT_LINE_V,6,8,8,EL_SN_BRICK2_2X1\r\n          !byte LD_ELEMENT_LINE_V,10,8,8,EL_SN_BRICK2_2X1\r\n          !byte LD_ELEMENT_LINE_V,28,8,8,EL_SN_BRICK2_2X1\r\n          !byte LD_ELEMENT_LINE_V,32,8,8,EL_SN_BRICK2_2X1\r\n          !byte LD_END\r\nSN_LEVEL_20\r\n          !byte LD_AREA,1,1,38,21,93,6\r\n          !byte LD_ELEMENT,4,14,EL_SN_BRICK_2X2\r\n          !byte LD_ELEMENT,9,146\r\n          !byte LD_ELEMENT,4,134\r\n          !byte LD_ELEMENT,14,134\r\n          !byte LD_ELEMENT,14,142\r\n          !byte LD_ELEMENT,19,138\r\n          !byte LD_ELEMENT,24,142\r\n          !byte LD_ELEMENT,24,134\r\n          !byte LD_ELEMENT,34,134\r\n          !byte LD_ELEMENT,34,142\r\n          !byte LD_ELEMENT,29,146\r\n          !byte LD_OBJECT,15,21,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,24,21,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,5,13,TYPE_SPIDER,4\r\n          !byte LD_SPAWN_SPOT,34,13,TYPE_SPIDER,4\r\n          !byte LD_SPAWN_SPOT,20,14,TYPE_SPIDER,4\r\n          !byte LD_SPAWN_SPOT,15,11,TYPE_BAT_DIAG,4\r\n          !byte LD_SPAWN_SPOT,24,11,TYPE_BAT_DIAG,4\r\n          !byte LD_ELEMENT_LINE_H,8,15,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,18,15,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,28,15,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,33,11,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,23,11,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,13,11,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,3,11,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,8,7,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,18,7,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,28,7,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,3,19,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,13,19,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,23,19,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,33,19,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_LINE_H,4,8,2,92,6\r\n          !byte LD_LINE_H,4,16,2,92,6\r\n          !byte LD_LINE_H,14,8,2,92,6\r\n          !byte LD_LINE_H,14,16,2,92,6\r\n          !byte LD_LINE_H,9,20,2,92,6\r\n          !byte LD_LINE_H,19,12,2,92,6\r\n          !byte LD_LINE_H,24,16,2,92,6\r\n          !byte LD_LINE_H,29,20,2,92,6\r\n          !byte LD_LINE_H,34,8,2,92,6\r\n          !byte LD_LINE_H,24,8,2,92,6\r\n          !byte LD_LINE_H,34,16,2,92,6\r\n          !byte LD_ELEMENT_LINE_H,8,12,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,28,12,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,18,18,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_END\r\nSN_LEVEL_21\r\n          !byte LD_AREA,1,6,38,16,93,2\r\n          !byte LD_AREA,1,0,38,6,93,6\r\n          !byte LD_ELEMENT_LINE_H,8,5,12,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_LINE_H,36,5,2,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_LINE_H,30,8,2,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_LINE_H,28,11,2,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_LINE_H,26,14,2,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_LINE_H,28,17,2,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_LINE_H,6,20,2,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_LINE_H,8,11,2,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_LINE_H,0,5,2,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_LINE_H,6,8,2,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_LINE_H,10,14,2,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_LINE_H,8,17,2,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_LINE_H,30,20,2,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_AREA,18,12,2,2,EL_SN_BRICK_2X2\r\n          !byte LD_OBJECT,15,4,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,24,4,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,16,21,TYPE_SPIDER,5\r\n          !byte LD_SPAWN_SPOT,23,21,TYPE_SPIDER,5\r\n          !byte LD_ELEMENT_LINE_H,18,20,2,EL_SN_BRICK_2X2\r\n          !byte LD_ELEMENT_LINE_H,18,6,2,EL_SN_BRICK_2X2\r\n          !byte LD_ELEMENT_LINE_H,1,17,2,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_LINE_H,35,17,2,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_LINE_H,32,14,2,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_ELEMENT_LINE_H,4,14,2,EL_SN_WOODEN_FLOOR_RS\r\n          !byte LD_LINE_H,18,8,4,92,2\r\n          !byte LD_LINE_H,18,16,4,92,2\r\n          !byte LD_ELEMENT_LINE_V,18,13,2,EL_SN_BRICK2_2X1\r\n          !byte LD_ELEMENT_LINE_V,20,13,2,EL_SN_BRICK2_2X1\r\n          !byte LD_END\r\nSN_LEVEL_22\r\n          !byte LD_AREA,1,1,38,21,93,6\r\n          !byte LD_ELEMENT_LINE_H,3,19,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,7,16,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,33,19,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,29,16,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,11,19,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,25,19,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,11,13,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,3,13,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,25,13,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,33,13,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,29,10,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,7,10,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,11,7,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,3,7,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,25,7,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,33,7,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_OBJECT,8,15,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,31,15,TYPE_PLAYER_SAM\r\n          !byte LD_OBJECT,19,11,TYPE_BOSS2\r\n          !byte LD_END\r\nSN_LEVEL_23\r\n          !byte LD_LEVEL_CONFIG,1\r\n          !byte LD_AREA,1,1,38,21,93,6\r\n          !byte LD_ELEMENT_LINE_V,38,0,7,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_V,0,0,7,EL_SN_STONE_RIGHT_HALF\r\n          !byte LD_ELEMENT_LINE_H,0,0,10,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_H,0,21,10,EL_SN_STONE_UPPER_HALF\r\n          !byte LD_ELEMENT_LINE_H,6,6,2,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_H,26,15,2,EL_SN_STONE\r\n          !byte LD_ELEMENT,6,140\r\n          !byte LD_ELEMENT,2,146\r\n          !byte LD_ELEMENT,30,137\r\n          !byte LD_ELEMENT_LINE_H,2,15,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,2,12,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,2,9,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,34,9,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,34,12,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,34,15,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,34,18,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_OBJECT,8,20,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,24,20,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,32,8,TYPE_JUMPING_TOAD,3\r\n          !byte LD_SPAWN_SPOT,28,14,TYPE_JUMPING_TOAD,3\r\n          !byte LD_SPAWN_SPOT,12,5,TYPE_JUMPING_TOAD,3\r\n          !byte LD_SPAWN_SPOT,8,11,TYPE_JUMPING_TOAD,3\r\n          !byte LD_ELEMENT_LINE_H,2,6,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_LINE_H,2,3,36,92,6\r\n          !byte LD_LINE_H,6,9,8,92,6\r\n          !byte LD_LINE_H,26,18,8,92,6\r\n          !byte LD_LINE_H,6,15,4,92,6\r\n          !byte LD_LINE_H,30,12,4,92,6\r\n          !byte LD_ELEMENT,15,18,EL_SN_SEWER_PIPE\r\n          !byte LD_END\r\nSN_LEVEL_24\r\n          !byte LD_AREA,1,1,38,21,93,2\r\n          !byte LD_ELEMENT_LINE_V,38,0,7,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_V,22,13,2,EL_SN_STONE\r\n          !byte LD_ELEMENT,14,135\r\n          !byte LD_ELEMENT_LINE_V,14,13,2,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_H,26,19,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,30,16,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,26,13,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,34,7,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,26,7,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,10,7,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,6,10,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,10,13,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,6,16,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,10,19,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_OBJECT,7,21,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,32,21,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,11,18,TYPE_JUMPING_TOAD,3\r\n          !byte LD_ELEMENT_LINE_H,2,7,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,2,13,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,2,19,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,34,19,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,34,13,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,30,10,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_SPAWN_SPOT,4,18,TYPE_JUMPING_TOAD,3\r\n          !byte LD_SPAWN_SPOT,4,6,TYPE_JUMPING_TOAD,3\r\n          !byte LD_SPAWN_SPOT,11,6,TYPE_JUMPING_TOAD,3\r\n          !byte LD_SPAWN_SPOT,28,6,TYPE_JUMPING_TOAD,3\r\n          !byte LD_SPAWN_SPOT,35,6,TYPE_JUMPING_TOAD,3\r\n          !byte LD_SPAWN_SPOT,35,18,TYPE_JUMPING_TOAD,3\r\n          !byte LD_SPAWN_SPOT,28,18,TYPE_JUMPING_TOAD,3\r\n          !byte LD_ELEMENT,22,7,EL_SN_STONE\r\n          !byte LD_LINE_H,14,10,4,92,2\r\n          !byte LD_LINE_H,22,10,4,92,2\r\n          !byte LD_LINE_H,14,19,4,92,2\r\n          !byte LD_LINE_H,22,19,4,92,2\r\n          !byte LD_ELEMENT,19,5,EL_SN_SEWER_PIPE_RED\r\n          !byte LD_ELEMENT,19,141\r\n          !byte LD_ELEMENT,19,148\r\n          !byte LD_ELEMENT,7,133\r\n          !byte LD_ELEMENT,31,133\r\n          !byte LD_ELEMENT,7,141\r\n          !byte LD_ELEMENT,31,141\r\n          !byte LD_ELEMENT,7,148\r\n          !byte LD_ELEMENT,31,148\r\n          !byte LD_END\r\nSN_LEVEL_25\r\n          !byte LD_LEVEL_CONFIG,1\r\n          !byte LD_AREA,5,2,30,18,93,6\r\n          !byte LD_ELEMENT,8,19,EL_SN_STONE\r\n          !byte LD_ELEMENT,4,145\r\n          !byte LD_ELEMENT,2,142\r\n          !byte LD_ELEMENT,34,142\r\n          !byte LD_ELEMENT,32,145\r\n          !byte LD_ELEMENT,28,147\r\n          !byte LD_ELEMENT,28,128\r\n          !byte LD_ELEMENT,8,128\r\n          !byte LD_ELEMENT,4,130\r\n          !byte LD_ELEMENT,2,133\r\n          !byte LD_ELEMENT_LINE_V,1,8,2,EL_SN_STONE\r\n          !byte LD_ELEMENT,32,130\r\n          !byte LD_ELEMENT,34,133\r\n          !byte LD_ELEMENT_LINE_V,35,8,2,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_H,12,14,8,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,12,8,8,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,18,17,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_AREA,12,20,16,1,93,6\r\n          !byte LD_OBJECT,13,13,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,26,13,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,14,20,TYPE_JUMPING_TOAD,5\r\n          !byte LD_SPAWN_SPOT,25,20,TYPE_JUMPING_TOAD,5\r\n          !byte LD_ELEMENT_LINE_H,12,0,4,EL_SN_STONE_LOWER_HALF\r\n          !byte LD_ELEMENT_LINE_H,12,21,4,EL_SN_STONE_UPPER_HALF\r\n          !byte LD_ELEMENT,8,12,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT,30,140\r\n          !byte LD_LINE_H,8,4,4,92,6\r\n          !byte LD_LINE_H,28,4,4,92,6\r\n          !byte LD_LINE_H,12,2,16,92,6\r\n          !byte LD_LINE_H,6,6,2,92,6\r\n          !byte LD_LINE_H,32,6,2,92,6\r\n          !byte LD_LINE_H,5,9,1,92,6\r\n          !byte LD_LINE_H,34,9,1,92,6\r\n          !byte LD_LINE_H,12,20,16,111,3\r\n          !byte LD_ELEMENT,16,5,EL_SN_SEWER_PIPE\r\n          !byte LD_ELEMENT,22,133\r\n          !byte LD_LINE_H,6,5,2,0,0\r\n          !byte LD_LINE_H,5,8,1,0,0\r\n          !byte LD_LINE_H,8,3,4,0,0\r\n          !byte LD_LINE_H,28,3,4,0,0\r\n          !byte LD_LINE_H,12,1,16,0,0\r\n          !byte LD_LINE_H,32,5,2,0,0\r\n          !byte LD_LINE_H,34,8,1,0,0\r\n          !byte LD_ELEMENT_LINE_H,18,11,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_END\r\nSN_LEVEL_26\r\n          !byte LD_LEVEL_CONFIG,1\r\n          !byte LD_AREA,2,4,36,14,93,6\r\n          !byte LD_ELEMENT_LINE_H,2,18,4,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_H,22,18,4,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_H,5,12,5,EL_SN_WOODEN_FLOOR\r\n          !byte LD_LINE_H,2,17,36,111,3\r\n          !byte LD_ELEMENT_LINE_H,25,12,5,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_V,38,3,6,EL_SN_STONE_LEFT_HALF\r\n          !byte LD_ELEMENT_LINE_H,0,0,10,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_V,0,3,6,EL_SN_STONE_RIGHT_HALF\r\n          !byte LD_OBJECT,7,11,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,32,11,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,7,17,TYPE_JUMPING_TOAD,5\r\n          !byte LD_SPAWN_SPOT,14,17,TYPE_JUMPING_TOAD,5\r\n          !byte LD_SPAWN_SPOT,25,17,TYPE_JUMPING_TOAD,5\r\n          !byte LD_SPAWN_SPOT,32,17,TYPE_JUMPING_TOAD,5\r\n          !byte LD_ELEMENT_LINE_H,18,14,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT,10,8,EL_SN_SEWER_PIPE\r\n          !byte LD_ELEMENT,28,136\r\n          !byte LD_ELEMENT,18,16,EL_SN_STONE\r\n          !byte LD_LINE_H,2,4,36,92,6\r\n          !byte LD_ELEMENT_LINE_H,14,9,6,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,3,5,2,EL_SN_SEWER_PIPE\r\n          !byte LD_ELEMENT_LINE_H,34,5,2,EL_SN_SEWER_PIPE\r\n          !byte LD_ELEMENT_LINE_H,13,5,2,EL_SN_SEWER_PIPE\r\n          !byte LD_ELEMENT_LINE_H,23,5,2,EL_SN_SEWER_PIPE\r\n          !byte LD_END\r\nSN_LEVEL_27\r\n          !byte LD_LEVEL_CONFIG,1\r\n          !byte LD_AREA,2,4,36,14,93,2\r\n          !byte LD_ELEMENT_LINE_H,0,0,10,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_V,0,3,5,EL_SN_STONE_RIGHT_HALF\r\n          !byte LD_ELEMENT_LINE_H,4,6,3,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_H,24,6,3,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_V,38,3,5,EL_SN_STONE_LEFT_HALF\r\n          !byte LD_ELEMENT_LINE_H,0,12,3,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_H,18,12,2,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_H,32,12,2,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_H,0,18,10,EL_SN_STONE\r\n          !byte LD_LINE_H,2,4,36,92,2\r\n          !byte LD_LINE_H,4,10,12,92,2\r\n          !byte LD_LINE_H,24,10,12,92,2\r\n          !byte LD_LINE_H,18,16,8,92,2\r\n          !byte LD_LINE_H,2,16,10,92,2\r\n          !byte LD_LINE_H,32,16,6,92,2\r\n          !byte LD_ELEMENT,12,15,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT,16,140\r\n          !byte LD_ELEMENT,2,137\r\n          !byte LD_ELEMENT,2,134\r\n          !byte LD_ELEMENT,36,134\r\n          !byte LD_ELEMENT,36,137\r\n          !byte LD_ELEMENT,30,143\r\n          !byte LD_ELEMENT,26,140\r\n          !byte LD_ELEMENT,22,137\r\n          !byte LD_ELEMENT,16,134\r\n          !byte LD_OBJECT,10,11,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,33,11,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,4,17,TYPE_SPIDER,5\r\n          !byte LD_SPAWN_SPOT,35,17,TYPE_SPIDER,5\r\n          !byte LD_LINE_H,18,15,8,0,0\r\n          !byte LD_LINE_H,2,15,10,0,0\r\n          !byte LD_LINE_H,32,15,6,0,0\r\n          !byte LD_LINE_H,24,9,12,0,0\r\n          !byte LD_LINE_H,4,9,12,0,0\r\n          !byte LD_LINE_H,2,3,36,0,0\r\n          !byte LD_ELEMENT_LINE_H,6,6,4,EL_SN_HORIZROCK\r\n          !byte LD_ELEMENT_LINE_H,26,6,4,EL_SN_HORIZROCK\r\n          !byte LD_ELEMENT_LINE_H,20,12,2,EL_SN_HORIZROCK\r\n          !byte LD_ELEMENT_LINE_H,2,12,4,EL_SN_HORIZROCK\r\n          !byte LD_ELEMENT_LINE_H,34,12,2,EL_SN_HORIZROCK\r\n          !byte LD_ELEMENT_LINE_H,2,0,6,EL_SN_HORIZROCK\r\n          !byte LD_ELEMENT_LINE_H,26,0,6,EL_SN_HORIZROCK\r\n          !byte LD_ELEMENT_LINE_H,2,18,6,EL_SN_HORIZROCK\r\n          !byte LD_ELEMENT_LINE_H,26,18,6,EL_SN_HORIZROCK\r\n          !byte LD_END\r\nSN_LEVEL_28\r\n          !byte LD_LEVEL_CONFIG,1\r\n          !byte LD_AREA,2,3,36,17,93,2\r\n          !byte LD_ELEMENT_LINE_H,2,8,3,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_V,0,2,6,EL_SN_STONE_RIGHT_HALF\r\n          !byte LD_ELEMENT_LINE_V,38,2,6,EL_SN_STONE_LEFT_HALF\r\n          !byte LD_LINE_H,28,10,10,111,3\r\n          !byte LD_ELEMENT_LINE_H,0,0,10,EL_SN_STONE_LOWER_HALF_2\r\n          !byte LD_ELEMENT_LINE_H,24,11,4,EL_SN_STONE\r\n          !byte LD_ELEMENT,24,10,EL_SN_STONE_UPPER_HALF\r\n          !byte LD_ELEMENT_LINE_H,0,20,10,EL_SN_STONE_UPPER_HALF\r\n          !byte LD_LINE_H,2,3,36,92,2\r\n          !byte LD_LINE_H,2,19,36,111,3\r\n          !byte LD_LINE_H,2,12,12,92,2\r\n          !byte LD_LINE_H,24,15,14,92,2\r\n          !byte LD_LINE_H,2,7,8,111,3\r\n          !byte LD_ELEMENT,10,135\r\n          !byte LD_ELEMENT_LINE_V,18,7,1,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_OBJECT,12,6,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,25,9,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,4,7,TYPE_SPIDER,3\r\n          !byte LD_SPAWN_SPOT,35,19,TYPE_SPIDER,3\r\n          !byte LD_SPAWN_SPOT,35,10,TYPE_JUMPING_TOAD,5\r\n          !byte LD_SPAWN_SPOT,4,19,TYPE_JUMPING_TOAD,5\r\n          !byte LD_ELEMENT,9,14,EL_SN_SEWER_PIPE_RED\r\n          !byte LD_ELEMENT,31,134\r\n          !byte LD_LINE_H,2,2,36,0,0\r\n          !byte LD_LINE_H,2,11,12,0,0\r\n          !byte LD_LINE_H,24,14,14,0,0\r\n          !byte LD_ELEMENT_LINE_V,18,9,1,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_V,18,11,1,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_V,18,13,1,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_V,18,15,1,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT,17,17,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_H,4,8,2,EL_SN_HORIZROCK\r\n          !byte LD_ELEMENT_LINE_H,30,11,2,EL_SN_HORIZROCK\r\n          !byte LD_END\r\nSN_LEVEL_29\r\n          !byte LD_AREA,2,3,36,17,93,2\r\n          !byte LD_LINE_H,2,2,36,0,0\r\n          !byte LD_LINE_H,2,3,36,92,2\r\n          !byte LD_ELEMENT_LINE_H,0,0,10,EL_SN_STONE_LOWER_HALF_2\r\n          !byte LD_ELEMENT_LINE_V,0,2,6,EL_SN_STONE_RIGHT_HALF\r\n          !byte LD_ELEMENT_LINE_V,8,2,3,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_V,28,2,3,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_V,38,2,6,EL_SN_STONE_LEFT_HALF\r\n          !byte LD_ELEMENT_LINE_H,18,10,2,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,16,12,4,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,14,14,6,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,4,16,16,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,10,18,10,EL_SN_WOODEN_FLOOR3\r\n          !byte LD_ELEMENT_LINE_H,0,20,10,EL_SN_STONE_UPPER_HALF\r\n          !byte LD_LINE_H,8,12,4,92,2\r\n          !byte LD_LINE_H,28,12,4,92,2\r\n          !byte LD_OBJECT,11,17,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,28,17,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,5,4,TYPE_SPIDER,5\r\n          !byte LD_SPAWN_SPOT,34,4,TYPE_SPIDER,5\r\n          !byte LD_SPAWN_SPOT,19,6,TYPE_EYE,5\r\n          !byte LD_LINE_H,8,11,4,0,0\r\n          !byte LD_LINE_H,28,11,4,0,0\r\n          !byte LD_ELEMENT_LINE_V,8,1,8,EL_SN_VERTROCK\r\n          !byte LD_ELEMENT_LINE_V,28,1,8,EL_SN_VERTROCK\r\n          !byte LD_END\r\nSN_LEVEL_30\r\n          !byte LD_LEVEL_CONFIG,1\r\n          !byte LD_AREA,4,3,32,16,93,6\r\n          !byte LD_ELEMENT_LINE_H,0,0,7,EL_SN_STONE_LOWER_HALF_2\r\n          !byte LD_ELEMENT_LINE_V,0,2,5,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_V,36,5,5,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_H,12,20,7,EL_SN_STONE_UPPER_HALF\r\n          !byte LD_ELEMENT,8,18,EL_SN_STONE\r\n          !byte LD_ELEMENT,4,144\r\n          !byte LD_LINE_H,12,19,24,93,6\r\n          !byte LD_LINE_H,4,3,24,92,6\r\n          !byte LD_ELEMENT_LINE_H,6,5,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,30,17,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,26,14,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,10,8,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,22,11,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,14,11,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_OBJECT,16,10,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,23,10,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,14,18,TYPE_GHOST_SKELETON,2\r\n          !byte LD_SPAWN_SPOT,29,6,TYPE_GHOST_SKELETON,2\r\n          !byte LD_LINE_H,4,2,24,0,0\r\n          !byte LD_ELEMENT_LINE_H,28,2,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,32,4,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT,28,0,EL_SN_STONE\r\n          !byte LD_ELEMENT,32,130\r\n          !byte LD_ELEMENT_LINE_V,0,7,8,EL_SN_VERTROCK\r\n          !byte LD_ELEMENT_LINE_V,36,7,8,EL_SN_VERTROCK\r\n          !byte LD_ELEMENT_LINE_V,36,18,3,EL_SN_VERTROCK\r\n          !byte LD_ELEMENT_LINE_V,0,1,3,EL_SN_VERTROCK\r\n          !byte LD_END\r\nSN_LEVEL_31\r\n          !byte LD_LEVEL_CONFIG,1\r\n          !byte LD_AREA,5,3,30,17,93,6\r\n          !byte LD_ELEMENT_LINE_H,6,0,7,EL_SN_STONE_LOWER_HALF_2\r\n          !byte LD_LINE_H,7,3,26,92,6\r\n          !byte LD_ELEMENT,3,2,EL_SN_STONE\r\n          !byte LD_ELEMENT_LINE_V,1,5,4,EL_SN_STONE\r\n          !byte LD_ELEMENT,33,130\r\n          !byte LD_ELEMENT,3,145\r\n          !byte LD_ELEMENT_LINE_H,6,20,7,EL_SN_STONE_UPPER_HALF\r\n          !byte LD_ELEMENT_LINE_V,35,5,4,EL_SN_STONE\r\n          !byte LD_ELEMENT,33,145\r\n          !byte LD_ELEMENT_LINE_H,9,7,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,9,17,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,27,17,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,27,7,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,13,10,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_LINE_H,18,17,4,92,6\r\n          !byte LD_ELEMENT_LINE_H,23,15,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,18,7,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT,18,13,EL_SN_STONE\r\n          !byte LD_OBJECT,11,16,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,28,16,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,7,11,TYPE_EYE,4\r\n          !byte LD_SPAWN_SPOT,32,11,TYPE_EYE,4\r\n          !byte LD_SPAWN_SPOT,19,5,TYPE_EYE,4\r\n          !byte LD_SPAWN_SPOT,19,18,TYPE_EYE,4\r\n          !byte LD_ELEMENT_LINE_V,1,9,3,EL_SN_VERTROCK\r\n          !byte LD_ELEMENT_LINE_V,35,9,3,EL_SN_VERTROCK\r\n          !byte LD_LINE_H,7,2,26,0,0\r\n          !byte LD_LINE_H,18,16,4,0,0\r\n          !byte LD_END\r\nSN_LEVEL_32\r\n          !byte LD_AREA,1,2,38,19,93,6\r\n          !byte LD_LINE_H,1,2,38,92,6\r\n          !byte LD_LINE_H,1,21,38,111,3\r\n          !byte LD_OBJECT,3,21,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,36,21,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,4,11,TYPE_EYE,4\r\n          !byte LD_SPAWN_SPOT,35,11,TYPE_EYE,4\r\n          !byte LD_SPAWN_SPOT,19,21,TYPE_JUMPING_TOAD,4\r\n          !byte LD_SPAWN_SPOT,19,6,TYPE_EYE,4\r\n          !byte LD_ELEMENT,10,16,EL_SN_SEWER_PIPE\r\n          !byte LD_ELEMENT,28,144\r\n          !byte LD_LINE_H,1,1,38,0,0\r\n          !byte LD_ELEMENT,10,135\r\n          !byte LD_ELEMENT,28,135\r\n          !byte LD_END\r\nSN_LEVEL_33\r\n          !byte LD_AREA,1,2,38,19,93,6\r\n          !byte LD_LINE_H,1,2,38,92,6\r\n          !byte LD_LINE_H,1,20,38,111,3\r\n          !byte LD_ELEMENT_LINE_H,15,19,2,EL_SN_STONE\r\n          !byte LD_ELEMENT,17,144\r\n          !byte LD_ELEMENT,1,147\r\n          !byte LD_ELEMENT,35,147\r\n          !byte LD_OBJECT,3,18,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,36,18,TYPE_PLAYER_SAM\r\n          !byte LD_OBJECT,19,11,TYPE_BOSS3\r\n          !byte LD_ELEMENT_LINE_H,11,14,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,23,14,2,EL_SN_WOODEN_FLOOR\r\n          !byte LD_LINE_H,1,1,38,0,0\r\n          !byte LD_END\r\nSN_LEVEL_34\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_ELEMENT_AREA,1,1,19,5,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_LINE_H,0,21,10,EL_SN_REDROCK\r\n          !byte LD_ELEMENT,7,19,EL_SN_RED_STONE_3\r\n          !byte LD_ELEMENT,13,144\r\n          !byte LD_ELEMENT,18,13,EL_SN_RED_STONE_4\r\n          !byte LD_ELEMENT,24,16,EL_SN_RED_STONE_3\r\n          !byte LD_ELEMENT,30,147\r\n          !byte LD_ELEMENT,32,13,EL_SN_RED_STONE_4\r\n          !byte LD_ELEMENT,4,141\r\n          !byte LD_OBJECT,18,12,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,21,12,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,5,8,TYPE_EYE,4\r\n          !byte LD_SPAWN_SPOT,33,18,TYPE_EYE,4\r\n          !byte LD_SPAWN_SPOT,19,19,TYPE_FLOATING_GHOST,2\r\n          !byte LD_END\r\nSN_LEVEL_35\r\n          !byte LD_LEVEL_CONFIG,3\r\n          !byte LD_ELEMENT_AREA,1,3,19,3,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_LINE_H,38,13,4,EL_SN_REDROCK\r\n          !byte LD_ELEMENT_LINE_H,13,15,4,EL_SN_REDROCK\r\n          !byte LD_ELEMENT_LINE_H,28,14,3,EL_SN_REDROCK\r\n          !byte LD_ELEMENT_LINE_H,0,2,13,EL_SN_REDDISH_ROCK\r\n          !byte LD_OBJECT,3,13,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,36,13,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,16,12,TYPE_EYE,4\r\n          !byte LD_SPAWN_SPOT,20,9,TYPE_EYE,4\r\n          !byte LD_SPAWN_SPOT,24,12,TYPE_EYE,4\r\n          !byte LD_ELEMENT_LINE_V,38,2,3,EL_SN_REDDISH_ROCK\r\n          !byte LD_LINE_H,1,6,37,0,0\r\n          !byte LD_END\r\nSN_LEVEL_36\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_ELEMENT_AREA,1,1,19,5,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT,10,8,EL_SN_RED_STONE_4\r\n          !byte LD_ELEMENT_LINE_H,0,11,4,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,1,14,4,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,27,14,5,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,28,11,4,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,26,17,5,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,39,16,5,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT,26,8,EL_SN_RED_STONE_4\r\n          !byte LD_ELEMENT,18,134\r\n          !byte LD_ELEMENT,18,146\r\n          !byte LD_ELEMENT_LINE_H,0,21,10,EL_SN_REDROCK\r\n          !byte LD_OBJECT,3,10,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,36,10,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,15,13,TYPE_EYE,4\r\n          !byte LD_SPAWN_SPOT,24,13,TYPE_EYE,4\r\n          !byte LD_SPAWN_SPOT,11,4,TYPE_EYE,4\r\n          !byte LD_SPAWN_SPOT,28,4,TYPE_EYE,4\r\n          !byte LD_END\r\nSN_LEVEL_37\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_ELEMENT_AREA,7,1,16,5,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_LINE_H,1,1,2,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,0,5,3,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,1,9,2,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,1,13,3,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,0,17,5,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT,19,18,EL_SN_RED_STONE_4\r\n          !byte LD_ELEMENT,25,144\r\n          !byte LD_ELEMENT,12,138\r\n          !byte LD_ELEMENT,14,6,EL_SN_RED_STONE_3\r\n          !byte LD_ELEMENT,14,142\r\n          !byte LD_ELEMENT,22,140\r\n          !byte LD_ELEMENT,33,143\r\n          !byte LD_OBJECT,12,16,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,34,14,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,35,19,TYPE_EYE,4\r\n          !byte LD_SPAWN_SPOT,13,9,TYPE_SLIME,4\r\n          !byte LD_SPAWN_SPOT,26,15,TYPE_SLIME,4\r\n          !byte LD_ELEMENT_LINE_H,0,21,10,EL_SN_REDROCK\r\n          !byte LD_LINE_H,7,9,2,0,0\r\n          !byte LD_END\r\nSN_LEVEL_38\r\n          !byte LD_LEVEL_CONFIG,3\r\n          !byte LD_ELEMENT_AREA,12,1,8,5,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_LINE_H,11,0,1,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,10,4,1,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,11,8,1,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,12,21,4,EL_SN_REDROCK\r\n          !byte LD_ELEMENT_LINE_H,10,12,1,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,11,14,1,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,10,18,1,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,25,0,1,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,26,4,1,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,25,7,1,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,26,11,1,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,25,15,1,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,26,18,1,EL_SN_REDDISH_ROCK\r\n          !byte LD_LINE_H,13,20,13,111,3\r\n          !byte LD_ELEMENT,16,18,EL_SN_RED_STONE_3\r\n          !byte LD_ELEMENT,20,143\r\n          !byte LD_ELEMENT,15,140\r\n          !byte LD_ELEMENT,21,137\r\n          !byte LD_ELEMENT,17,134\r\n          !byte LD_OBJECT,17,17,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,21,14,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,18,5,TYPE_JUMPING_TOAD,2\r\n          !byte LD_SPAWN_SPOT,22,20,TYPE_JUMPING_TOAD,2\r\n          !byte LD_SPAWN_SPOT,15,20,TYPE_JUMPING_TOAD,2\r\n          !byte LD_LINE_H,13,4,1,0,0\r\n          !byte LD_LINE_H,25,4,1,0,0\r\n          !byte LD_LINE_H,13,12,1,0,0\r\n          !byte LD_LINE_H,13,18,1,0,0\r\n          !byte LD_LINE_H,25,19,1,0,0\r\n          !byte LD_LINE_H,25,11,1,0,0\r\n          !byte LD_END\r\nSN_LEVEL_39\r\n          !byte LD_LEVEL_CONFIG,3\r\n          !byte LD_ELEMENT_LINE_H,12,1,8,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_AREA,0,5,19,4,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_LINE_H,10,0,1,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,0,2,4,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,26,0,1,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,27,1,4,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_V,38,1,5,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,0,21,10,EL_SN_REDROCK\r\n          !byte LD_ELEMENT,11,19,EL_SN_RED_STONE_4\r\n          !byte LD_ELEMENT,25,143\r\n          !byte LD_ELEMENT,18,145\r\n          !byte LD_ELEMENT,25,11,EL_SN_RED_STONE_LEFT\r\n          !byte LD_ELEMENT,13,11,EL_SN_RED_STONE_RIGHT\r\n          !byte LD_ELEMENT_LINE_H,26,11,6,EL_SN_RED_STONE_CENTER\r\n          !byte LD_ELEMENT_LINE_H,1,11,6,EL_SN_RED_STONE_CENTER\r\n          !byte LD_ELEMENT,32,13,EL_SN_RED_STONE_4\r\n          !byte LD_ELEMENT,11,143\r\n          !byte LD_ELEMENT,4,141\r\n          !byte LD_ELEMENT,25,147\r\n          !byte LD_OBJECT,12,18,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,27,18,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,6,20,TYPE_JUMPING_TOAD,2\r\n          !byte LD_SPAWN_SPOT,33,20,TYPE_JUMPING_TOAD,2\r\n          !byte LD_SPAWN_SPOT,34,10,TYPE_SLIME,2\r\n          !byte LD_SPAWN_SPOT,4,10,TYPE_SLIME,2\r\n          !byte LD_SPAWN_SPOT,19,16,TYPE_SLIME,4\r\n          !byte LD_LINE_H,1,6,11,0,0\r\n          !byte LD_LINE_H,27,5,11,0,0\r\n          !byte LD_LINE_H,12,4,1,0,0\r\n          !byte LD_LINE_H,26,4,1,0,0\r\n          !byte LD_END\r\nSN_LEVEL_40\r\n          !byte LD_LEVEL_CONFIG,3\r\n          !byte LD_ELEMENT_AREA,1,3,19,4,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_LINE_H,0,1,2,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,4,0,2,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,9,1,2,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,14,3,2,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,11,17,2,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,1,18,4,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_V,0,4,4,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,18,2,4,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,23,5,2,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,29,0,2,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,33,1,2,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_V,37,4,4,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,33,18,2,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,22,17,4,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,16,18,2,EL_SN_REDDISH_ROCK\r\n          !byte LD_OBJECT,6,17,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,31,16,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,7,8,TYPE_BAT_DIAG,4\r\n          !byte LD_SPAWN_SPOT,33,8,TYPE_BAT_DIAG,4\r\n          !byte LD_SPAWN_SPOT,15,14,TYPE_BAT_DIAG,4\r\n          !byte LD_SPAWN_SPOT,24,11,TYPE_BAT_DIAG,4\r\n          !byte LD_LINE_H,3,5,3,0,0\r\n          !byte LD_LINE_H,6,4,3,0,0\r\n          !byte LD_LINE_H,30,4,3,0,0\r\n          !byte LD_LINE_H,20,6,3,0,0\r\n          !byte LD_LINE_H,9,5,5,0,0\r\n          !byte LD_LINE_H,14,7,6,0,0\r\n          !byte LD_LINE_H,23,9,6,0,0\r\n          !byte LD_LINE_H,33,5,4,0,0\r\n          !byte LD_END\r\nSN_LEVEL_41\r\n          !byte LD_LEVEL_CONFIG,3\r\n          !byte LD_ELEMENT_AREA,1,3,19,4,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_LINE_H,17,10,2,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,0,1,13,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,0,18,13,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_V,0,3,4,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_V,36,4,4,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT,11,15,EL_SN_RED_STONE_4\r\n          !byte LD_ELEMENT,6,140\r\n          !byte LD_ELEMENT,25,143\r\n          !byte LD_ELEMENT,30,140\r\n          !byte LD_ELEMENT,24,138\r\n          !byte LD_ELEMENT,12,138\r\n          !byte LD_OBJECT,5,17,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,33,17,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,20,17,TYPE_HAND,2\r\n          !byte LD_SPAWN_SPOT,20,9,TYPE_HAND,2\r\n          !byte LD_SPAWN_SPOT,7,11,TYPE_JUMPING_TOAD,3\r\n          !byte LD_SPAWN_SPOT,32,11,TYPE_JUMPING_TOAD,3\r\n          !byte LD_LINE_H,17,14,6,0,0\r\n          !byte LD_LINE_H,3,5,33,0,0\r\n          !byte LD_END\r\nSN_LEVEL_42\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_ELEMENT_AREA,1,3,19,4,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_LINE_H,0,18,13,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_H,0,1,13,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_V,0,3,4,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT_LINE_V,36,4,4,EL_SN_REDDISH_ROCK\r\n          !byte LD_ELEMENT,18,138\r\n          !byte LD_ELEMENT,10,15,EL_SN_RED_STONE_4\r\n          !byte LD_ELEMENT,25,143\r\n          !byte LD_ELEMENT,23,12,EL_SN_RED_STONE_3\r\n          !byte LD_ELEMENT,13,140\r\n          !byte LD_OBJECT,14,11,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,24,11,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,11,14,TYPE_FLY,4\r\n          !byte LD_SPAWN_SPOT,27,14,TYPE_FLY,4\r\n          !byte LD_SPAWN_SPOT,5,8,TYPE_FLY,4\r\n          !byte LD_SPAWN_SPOT,33,8,TYPE_FLY,4\r\n          !byte LD_LINE_H,3,5,33,0,0\r\n          !byte LD_END\r\nSN_LEVEL_43\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_ELEMENT_AREA,1,2,19,5,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_LINE_H,4,19,3,EL_SN_RED_STONE_CENTER\r\n          !byte LD_ELEMENT,2,19,EL_SN_RED_STONE_LEFT\r\n          !byte LD_ELEMENT,10,19,EL_SN_RED_STONE_RIGHT\r\n          !byte LD_ELEMENT,36,147\r\n          !byte LD_ELEMENT_LINE_H,30,19,3,EL_SN_RED_STONE_CENTER\r\n          !byte LD_ELEMENT,28,19,EL_SN_RED_STONE_LEFT\r\n          !byte LD_ELEMENT_LINE_H,24,16,3,EL_SN_RED_STONE_CENTER\r\n          !byte LD_ELEMENT,30,16,EL_SN_RED_STONE_RIGHT\r\n          !byte LD_ELEMENT,22,16,EL_SN_RED_STONE_LEFT\r\n          !byte LD_ELEMENT,8,144\r\n          !byte LD_ELEMENT_LINE_H,10,16,3,EL_SN_RED_STONE_CENTER\r\n          !byte LD_ELEMENT,16,16,EL_SN_RED_STONE_RIGHT\r\n          !byte LD_ELEMENT,2,13,EL_SN_RED_STONE_LEFT\r\n          !byte LD_ELEMENT_LINE_H,4,13,3,EL_SN_RED_STONE_CENTER\r\n          !byte LD_ELEMENT,10,13,EL_SN_RED_STONE_RIGHT\r\n          !byte LD_ELEMENT,28,13,EL_SN_RED_STONE_LEFT\r\n          !byte LD_ELEMENT_LINE_H,30,13,3,EL_SN_RED_STONE_CENTER\r\n          !byte LD_ELEMENT,36,13,EL_SN_RED_STONE_RIGHT\r\n          !byte LD_ELEMENT,14,10,EL_SN_RED_STONE_LEFT\r\n          !byte LD_ELEMENT_LINE_H,16,10,4,EL_SN_RED_STONE_CENTER\r\n          !byte LD_ELEMENT,24,10,EL_SN_RED_STONE_RIGHT\r\n          !byte LD_ELEMENT,8,8,EL_SN_RED_STONE_4\r\n          !byte LD_ELEMENT,28,136\r\n          !byte LD_OBJECT,16,15,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,23,15,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,6,21,TYPE_WOLFMAN,4\r\n          !byte LD_SPAWN_SPOT,33,21,TYPE_WOLFMAN,4\r\n          !byte LD_SPAWN_SPOT,29,7,TYPE_WOLFMAN,4\r\n          !byte LD_SPAWN_SPOT,10,7,TYPE_WOLFMAN,4\r\n          !byte LD_END\r\nSN_LEVEL_44\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_ELEMENT_AREA,1,1,19,5,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_OBJECT,6,17,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,32,17,TYPE_PLAYER_SAM\r\n          !byte LD_OBJECT,19,10,TYPE_BOSS4\r\n          !byte LD_ELEMENT,7,15,EL_SN_RED_STONE_4\r\n          !byte LD_ELEMENT,14,143\r\n          !byte LD_ELEMENT,5,146\r\n          !byte LD_ELEMENT,31,146\r\n          !byte LD_ELEMENT,29,143\r\n          !byte LD_ELEMENT,22,143\r\n          !byte LD_LINE_H,1,21,38,162,13\r\n          !byte LD_ELEMENT,12,140\r\n          !byte LD_ELEMENT,24,140\r\n          !byte LD_ELEMENT,26,137\r\n          !byte LD_ELEMENT,10,137\r\n          !byte LD_END\r\nSN_LEVEL_45\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_AREA,1,18,24,4,3,8\r\n          !byte LD_ELEMENT_LINE_H,1,17,7,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,15,18,5,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,25,19,7,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT,11,14,EL_SN_SAND_STONE_4\r\n          !byte LD_ELEMENT,18,141\r\n          !byte LD_ELEMENT,25,140\r\n          !byte LD_ELEMENT,32,139\r\n          !byte LD_AREA,25,20,14,2,3,8\r\n          !byte LD_OBJECT,8,16,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,30,18,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,34,10,TYPE_WOLFMAN,4\r\n          !byte LD_SPAWN_SPOT,27,11,TYPE_WOLFMAN,4\r\n          !byte LD_ELEMENT,4,143\r\n          !byte LD_ELEMENT,24,143\r\n          !byte LD_ELEMENT,30,145\r\n          !byte LD_ELEMENT,12,139\r\n          !byte LD_ELEMENT,6,137\r\n          !byte LD_END\r\nSN_LEVEL_46\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_AREA,15,15,10,2,3,8\r\n          !byte LD_ELEMENT_LINE_H,17,13,3,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT,15,142\r\n          !byte LD_ELEMENT,13,143\r\n          !byte LD_AREA,1,19,38,3,3,8\r\n          !byte LD_AREA,9,16,22,2,3,8\r\n          !byte LD_ELEMENT,11,143\r\n          !byte LD_AREA,5,18,30,2,3,8\r\n          !byte LD_ELEMENT,9,144\r\n          !byte LD_ELEMENT,7,145\r\n          !byte LD_ELEMENT,5,146\r\n          !byte LD_ELEMENT,3,146\r\n          !byte LD_ELEMENT,1,146\r\n          !byte LD_ELEMENT,23,142\r\n          !byte LD_ELEMENT,25,143\r\n          !byte LD_ELEMENT,27,143\r\n          !byte LD_ELEMENT,29,144\r\n          !byte LD_ELEMENT,31,145\r\n          !byte LD_ELEMENT,33,146\r\n          !byte LD_ELEMENT,35,146\r\n          !byte LD_ELEMENT,37,146\r\n          !byte LD_LINE_H,17,14,6,3,8\r\n          !byte LD_OBJECT,17,12,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,22,12,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,36,17,TYPE_JUMPING_TOAD,4\r\n          !byte LD_SPAWN_SPOT,32,16,TYPE_JUMPING_TOAD,4\r\n          !byte LD_SPAWN_SPOT,3,17,TYPE_JUMPING_TOAD,4\r\n          !byte LD_SPAWN_SPOT,7,16,TYPE_JUMPING_TOAD,4\r\n          !byte LD_END\r\nSN_LEVEL_47\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_AREA,1,20,38,2,215,8\r\n          !byte LD_ELEMENT_LINE_H,17,20,3,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT,15,147\r\n          !byte LD_ELEMENT,13,145\r\n          !byte LD_ELEMENT,11,142\r\n          !byte LD_ELEMENT,9,140\r\n          !byte LD_ELEMENT_LINE_H,1,10,4,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT,23,147\r\n          !byte LD_ELEMENT,25,145\r\n          !byte LD_ELEMENT,27,142\r\n          !byte LD_ELEMENT,29,140\r\n          !byte LD_ELEMENT_LINE_H,31,10,4,EL_SN_SAND_FLOOR\r\n          !byte LD_AREA,1,11,8,9,215,8\r\n          !byte LD_AREA,31,11,8,9,215,8\r\n          !byte LD_AREA,9,13,2,7,215,8\r\n          !byte LD_AREA,29,13,2,7,215,8\r\n          !byte LD_AREA,11,15,2,5,215,8\r\n          !byte LD_AREA,27,15,2,5,215,8\r\n          !byte LD_AREA,13,18,2,2,215,8\r\n          !byte LD_AREA,25,18,2,2,215,8\r\n          !byte LD_OBJECT,14,16,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,25,16,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,4,9,TYPE_JUMPING_TOAD,4\r\n          !byte LD_SPAWN_SPOT,36,9,TYPE_JUMPING_TOAD,4\r\n          !byte LD_SPAWN_SPOT,19,19,TYPE_SLIME,4\r\n          !byte LD_SPAWN_SPOT,20,19,TYPE_SLIME,4\r\n          !byte LD_END\r\nSN_LEVEL_48\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_ELEMENT_LINE_H,1,15,4,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,9,16,3,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,31,15,4,EL_SN_SAND_FLOOR\r\n          !byte LD_AREA,9,17,22,5,215,8\r\n          !byte LD_ELEMENT_LINE_H,25,16,3,EL_SN_SAND_FLOOR\r\n          !byte LD_LINE_H,15,17,10,111,3\r\n          !byte LD_AREA,1,16,8,6,215,8\r\n          !byte LD_AREA,31,16,8,6,215,8\r\n          !byte LD_OBJECT,13,15,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,26,15,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,3,14,TYPE_SLIME,4\r\n          !byte LD_SPAWN_SPOT,36,14,TYPE_SLIME,4\r\n          !byte LD_ELEMENT,18,15,EL_SN_SAND_STONE_4\r\n          !byte LD_SPAWN_SPOT,17,17,TYPE_SLIME,4\r\n          !byte LD_SPAWN_SPOT,22,17,TYPE_SLIME,4\r\n          !byte LD_END\r\nSN_LEVEL_49\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_AREA,1,20,38,2,215,8\r\n          !byte LD_ELEMENT_LINE_H,1,19,19,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,17,15,3,EL_SN_SLIME_CEILING\r\n          !byte LD_ELEMENT,9,16,EL_SN_SAND_STONE_4\r\n          !byte LD_ELEMENT,28,144\r\n          !byte LD_AREA,17,13,6,2,215,8\r\n          !byte LD_ELEMENT_LINE_H,17,12,3,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT,28,13,EL_SN_SAND_STONE_4\r\n          !byte LD_ELEMENT,28,138\r\n          !byte LD_ELEMENT,9,141\r\n          !byte LD_ELEMENT,9,138\r\n          !byte LD_ELEMENT_LINE_H,1,9,2,EL_SN_SAND_FLOOR\r\n          !byte LD_LINE_H,1,10,4,215,8\r\n          !byte LD_ELEMENT_LINE_H,1,11,2,EL_SN_SLIME_CEILING\r\n          !byte LD_ELEMENT_LINE_H,35,9,2,EL_SN_SAND_FLOOR\r\n          !byte LD_LINE_H,35,10,4,215,8\r\n          !byte LD_ELEMENT_LINE_H,35,11,2,EL_SN_SLIME_CEILING\r\n          !byte LD_OBJECT,11,15,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,29,15,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,5,18,TYPE_SLIME,4\r\n          !byte LD_SPAWN_SPOT,33,18,TYPE_SLIME,4\r\n          !byte LD_SPAWN_SPOT,14,6,TYPE_FLY,8\r\n          !byte LD_SPAWN_SPOT,25,6,TYPE_FLY,8\r\n          !byte LD_SPAWN_SPOT,2,8,TYPE_SLIME,4\r\n          !byte LD_SPAWN_SPOT,37,8,TYPE_SLIME,4\r\n          !byte LD_END\r\nSN_LEVEL_50\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_ELEMENT_AREA,1,1,19,5,EL_SN_RED_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT,13,17,EL_SN_SAND_STONE_4\r\n          !byte LD_ELEMENT,18,145\r\n          !byte LD_ELEMENT,23,145\r\n          !byte LD_ELEMENT,11,142\r\n          !byte LD_ELEMENT,25,142\r\n          !byte LD_ELEMENT,25,139\r\n          !byte LD_ELEMENT,11,139\r\n          !byte LD_ELEMENT,13,136\r\n          !byte LD_ELEMENT,18,135\r\n          !byte LD_ELEMENT,23,136\r\n          !byte LD_ELEMENT,6,134\r\n          !byte LD_ELEMENT,30,134\r\n          !byte LD_OBJECT,7,5,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,32,5,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,16,11,TYPE_FLY,8\r\n          !byte LD_SPAWN_SPOT,19,13,TYPE_FLY,8\r\n          !byte LD_SPAWN_SPOT,22,11,TYPE_FLY,8\r\n          !byte LD_SPAWN_SPOT,15,16,TYPE_SLIME,3\r\n          !byte LD_SPAWN_SPOT,24,16,TYPE_SLIME,3\r\n          !byte LD_ELEMENT_LINE_H,13,21,7,EL_SN_SAND_FLOOR\r\n          !byte LD_AREA,1,19,4,3,215,8\r\n          !byte LD_AREA,5,20,8,2,215,8\r\n          !byte LD_ELEMENT_LINE_H,1,18,2,EL_SN_SAND_FLOOR\r\n          !byte LD_AREA,27,20,8,2,215,8\r\n          !byte LD_ELEMENT_LINE_H,5,19,2,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,9,20,2,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,27,20,2,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,31,19,2,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,35,18,2,EL_SN_SAND_FLOOR\r\n          !byte LD_AREA,35,19,4,3,215,8\r\n          !byte LD_END\r\nSN_LEVEL_51\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_ELEMENT_AREA,15,10,5,3,EL_SN_RED_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_LINE_H,18,4,2,EL_SN_SAND_FLOOR\r\n          !byte LD_AREA,14,5,12,5,215,8\r\n          !byte LD_ELEMENT_LINE_H,14,5,2,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,22,5,2,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,14,9,2,EL_SN_SLIME_CEILING\r\n          !byte LD_ELEMENT_LINE_H,18,10,2,EL_SN_SLIME_CEILING\r\n          !byte LD_ELEMENT_LINE_H,22,9,2,EL_SN_SLIME_CEILING\r\n          !byte LD_ELEMENT_LINE_H,18,18,2,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,14,19,2,EL_SN_SAND_FLOOR\r\n          !byte LD_AREA,1,20,38,2,215,8\r\n          !byte LD_ELEMENT_LINE_H,22,19,2,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,0,20,7,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,26,20,7,EL_SN_SAND_FLOOR\r\n          !byte LD_LINE_H,18,19,4,215,8\r\n          !byte LD_OBJECT,3,19,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,36,19,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,15,4,TYPE_SPIDER,4\r\n          !byte LD_SPAWN_SPOT,24,4,TYPE_SPIDER,4\r\n          !byte LD_SPAWN_SPOT,19,3,TYPE_SPIDER,4\r\n          !byte LD_LINE_H,14,10,4,0,0\r\n          !byte LD_LINE_H,22,10,4,0,0\r\n          !byte LD_LINE_H,18,11,4,0,0\r\n          !byte LD_END\r\nSN_LEVEL_52\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_ELEMENT_AREA,5,12,16,2,EL_SN_RED_ROCK_BACKGROUND\r\n          !byte LD_AREA,35,11,4,11,215,8\r\n          !byte LD_ELEMENT,37,10,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT,35,139\r\n          !byte LD_AREA,31,13,4,9,215,8\r\n          !byte LD_ELEMENT,33,140\r\n          !byte LD_AREA,23,17,4,5,215,8\r\n          !byte LD_AREA,27,15,4,7,215,8\r\n          !byte LD_ELEMENT,31,141\r\n          !byte LD_ELEMENT,29,142\r\n          !byte LD_ELEMENT,27,143\r\n          !byte LD_ELEMENT,25,144\r\n          !byte LD_ELEMENT,23,145\r\n          !byte LD_AREA,1,11,4,11,215,8\r\n          !byte LD_ELEMENT,21,146\r\n          !byte LD_ELEMENT,1,138\r\n          !byte LD_AREA,5,13,4,9,215,8\r\n          !byte LD_ELEMENT,3,139\r\n          !byte LD_ELEMENT,5,140\r\n          !byte LD_AREA,9,15,4,7,215,8\r\n          !byte LD_ELEMENT,7,141\r\n          !byte LD_ELEMENT,9,142\r\n          !byte LD_ELEMENT,11,143\r\n          !byte LD_AREA,13,17,4,5,215,8\r\n          !byte LD_ELEMENT,13,144\r\n          !byte LD_ELEMENT,15,145\r\n          !byte LD_ELEMENT,17,146\r\n          !byte LD_ELEMENT,19,149\r\n          !byte LD_AREA,17,19,2,3,215,8\r\n          !byte LD_AREA,21,19,2,3,215,8\r\n          !byte LD_ELEMENT,19,17,EL_SN_RED_ROCK_BACKGROUND\r\n          !byte LD_OBJECT,6,11,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,33,11,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,20,20,TYPE_SPIDER,8\r\n          !byte LD_END\r\nSN_LEVEL_53\r\n          !byte LD_LEVEL_CONFIG,3\r\n          !byte LD_ELEMENT_AREA,1,4,19,2,EL_SN_RED_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_AREA,6,12,14,2,EL_SN_RED_ROCK_BACKGROUND\r\n          !byte LD_AREA,0,0,40,4,215,8\r\n          !byte LD_AREA,0,6,3,8,215,8\r\n          !byte LD_AREA,3,12,4,3,215,8\r\n          !byte LD_AREA,33,12,4,3,215,8\r\n          !byte LD_AREA,37,6,3,8,215,8\r\n          !byte LD_AREA,31,14,3,8,215,8\r\n          !byte LD_AREA,6,14,3,8,215,8\r\n          !byte LD_LINE_H,9,21,22,215,8\r\n          !byte LD_ELEMENT_LINE_H,9,20,11,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT,3,139\r\n          !byte LD_ELEMENT,5,140\r\n          !byte LD_ELEMENT,7,141\r\n          !byte LD_ELEMENT,31,141\r\n          !byte LD_ELEMENT,33,140\r\n          !byte LD_ELEMENT,35,139\r\n          !byte LD_ELEMENT_LINE_H,0,3,8,EL_SN_SLIME_CEILING\r\n          !byte LD_ELEMENT,37,6,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT,1,134\r\n          !byte LD_OBJECT,6,11,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,33,11,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,11,19,TYPE_SLIME,5\r\n          !byte LD_SPAWN_SPOT,28,19,TYPE_SLIME,5\r\n          !byte LD_SPAWN_SPOT,17,19,TYPE_SLIME,5\r\n          !byte LD_SPAWN_SPOT,23,19,TYPE_SLIME,5\r\n          !byte LD_ELEMENT_LINE_H,24,3,8,EL_SN_SLIME_CEILING\r\n          !byte LD_ELEMENT_LINE_H,16,4,4,EL_SN_SLIME_CEILING\r\n          !byte LD_LINE_H,16,5,8,0,0\r\n          !byte LD_LINE_H,1,4,15,0,0\r\n          !byte LD_LINE_H,24,4,15,0,0\r\n          !byte LD_AREA,0,14,6,8,3,10\r\n          !byte LD_AREA,34,14,6,8,3,15\r\n          !byte LD_ELEMENT_LINE_H,13,16,1,EL_SN_SAND_STONE_4\r\n          !byte LD_ELEMENT_LINE_H,23,16,1,EL_SN_SAND_STONE_4\r\n          !byte LD_ELEMENT_LINE_H,18,13,1,EL_SN_SAND_STONE_4\r\n          !byte LD_END\r\nSN_LEVEL_54\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_ELEMENT_AREA,9,7,11,2,EL_SN_RED_ROCK_BACKGROUND\r\n          !byte LD_AREA,1,6,8,16,215,8\r\n          !byte LD_AREA,31,6,8,16,215,8\r\n          !byte LD_ELEMENT_LINE_H,3,5,2,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT,7,134\r\n          !byte LD_ELEMENT,1,134\r\n          !byte LD_ELEMENT,37,134\r\n          !byte LD_ELEMENT,31,134\r\n          !byte LD_ELEMENT_LINE_H,33,5,2,EL_SN_SAND_FLOOR\r\n          !byte LD_AREA,9,9,4,13,215,8\r\n          !byte LD_ELEMENT,9,136\r\n          !byte LD_ELEMENT,11,137\r\n          !byte LD_AREA,27,9,4,13,215,8\r\n          !byte LD_ELEMENT,29,136\r\n          !byte LD_ELEMENT,27,137\r\n          !byte LD_AREA,13,12,4,10,215,8\r\n          !byte LD_AREA,23,12,4,10,215,8\r\n          !byte LD_ELEMENT,25,139\r\n          !byte LD_ELEMENT,23,140\r\n          !byte LD_ELEMENT,13,139\r\n          !byte LD_ELEMENT,15,140\r\n          !byte LD_AREA,17,16,6,6,215,8\r\n          !byte LD_ELEMENT_LINE_H,17,15,3,EL_SN_SAND_FLOOR\r\n          !byte LD_OBJECT,18,14,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,21,14,TYPE_PLAYER_SAM\r\n          !byte LD_OBJECT,4,4,TYPE_HAND\r\n          !byte LD_SPAWN_SPOT,8,5,TYPE_ZOMBIE,5\r\n          !byte LD_OBJECT,34,4,TYPE_HAND\r\n          !byte LD_SPAWN_SPOT,31,5,TYPE_ZOMBIE,5\r\n          !byte LD_ELEMENT,15,8,EL_SN_SAND_STONE_4\r\n          !byte LD_ELEMENT,21,136\r\n          !byte LD_SPAWN_SPOT,17,5,TYPE_FLY,5\r\n          !byte LD_SPAWN_SPOT,22,5,TYPE_FLY,5\r\n          !byte LD_END\r\nSN_LEVEL_55\r\n          !byte LD_LEVEL_CONFIG,3\r\n          !byte LD_ELEMENT_AREA,9,1,11,4,EL_SN_RED_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_AREA,15,13,5,2,EL_SN_RED_ROCK_BACKGROUND\r\n          !byte LD_AREA,0,0,9,22,215,8\r\n          !byte LD_AREA,31,0,9,22,215,8\r\n          !byte LD_AREA,9,18,6,4,215,8\r\n          !byte LD_AREA,25,18,6,4,215,8\r\n          !byte LD_ELEMENT_LINE_H,15,21,5,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,9,17,3,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,25,17,3,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT,12,14,EL_SN_SAND_STONE_4\r\n          !byte LD_ELEMENT,18,146\r\n          !byte LD_ELEMENT,24,142\r\n          !byte LD_OBJECT,13,13,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,26,13,TYPE_PLAYER_SAM\r\n          !byte LD_OBJECT,19,20,TYPE_BOSS5\r\n          !byte LD_END\r\nSN_LEVEL_56\r\n          !byte LD_LEVEL_CONFIG,3\r\n          !byte LD_ELEMENT_LINE_H,0,5,3,EL_SN_REDROCK\r\n          !byte LD_ELEMENT_AREA,1,6,19,3,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_AREA,10,4,8,2,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_LINE_H,0,17,4,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT,7,6,EL_SN_STALACTITE\r\n          !byte LD_ELEMENT,11,5,EL_SN_STALACTITE_BIG\r\n          !byte LD_ELEMENT_LINE_H,12,3,3,EL_SN_REDROCK\r\n          !byte LD_ELEMENT,20,4,EL_SN_STALACTITE_BIG\r\n          !byte LD_ELEMENT,28,134\r\n          !byte LD_ELEMENT,16,4,EL_SN_STALACTITE\r\n          !byte LD_ELEMENT,24,134\r\n          !byte LD_ELEMENT_LINE_H,24,5,2,EL_SN_REDROCK\r\n          !byte LD_ELEMENT_LINE_H,31,6,2,EL_SN_REDROCK\r\n          !byte LD_ELEMENT,23,132\r\n          !byte LD_ELEMENT,9,132\r\n          !byte LD_ELEMENT_LINE_H,14,18,3,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_H,23,17,4,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_V,0,5,3,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT_LINE_V,39,6,3,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT,5,6,EL_SN_STALACTITE_BIG\r\n          !byte LD_ELEMENT,34,7,EL_SN_STALACTITE\r\n          !byte LD_OBJECT,3,16,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,36,16,TYPE_PLAYER_SAM\r\n          !byte LD_OBJECT,13,16,TYPE_HAND\r\n          !byte LD_OBJECT,25,16,TYPE_HAND\r\n          !byte LD_OBJECT,32,16,TYPE_HAND\r\n          !byte LD_OBJECT,7,16,TYPE_HAND\r\n          !byte LD_OBJECT,19,17,TYPE_HAND\r\n          !byte LD_LINE_H,1,6,4,0,0\r\n          !byte LD_LINE_H,8,6,3,0,0\r\n          !byte LD_LINE_H,10,5,1,0,0\r\n          !byte LD_LINE_H,13,4,3,0,0\r\n          !byte LD_LINE_H,17,4,3,0,0\r\n          !byte LD_LINE_H,25,6,3,0,0\r\n          !byte LD_LINE_H,30,7,4,0,0\r\n          !byte LD_LINE_H,35,7,4,0,0\r\n          !byte LD_LINE_H,22,4,1,0,0\r\n          !byte LD_LINE_H,23,5,1,0,0\r\n          !byte LD_LINE_H,30,6,1,0,0\r\n          !byte LD_LINE_H,22,5,1,0,0\r\n          !byte LD_END\r\nSN_LEVEL_57\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_ELEMENT_AREA,1,1,8,5,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_AREA,23,1,8,5,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_AREA,17,7,3,3,EL_SN_BLUE_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_LINE_V,17,0,2,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT_LINE_V,22,0,2,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT_LINE_H,17,18,1,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT,22,146\r\n          !byte LD_ELEMENT_LINE_V,18,18,4,EL_SN_REDROCK\r\n          !byte LD_ELEMENT_LINE_H,1,21,4,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_H,23,21,4,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT,19,8,EL_SN_REDROCK\r\n          !byte LD_ELEMENT,18,135\r\n          !byte LD_ELEMENT,18,8,EL_SN_STALACTITE_BIG\r\n          !byte LD_ELEMENT,21,137\r\n          !byte LD_ELEMENT,20,9,EL_SN_STALACTITE\r\n          !byte LD_ELEMENT,6,129\r\n          !byte LD_ELEMENT,10,15,EL_SN_REDROCK\r\n          !byte LD_ELEMENT,2,140\r\n          !byte LD_ELEMENT,30,1,EL_SN_STALACTITE_BIG\r\n          !byte LD_ELEMENT,26,15,EL_SN_REDROCK\r\n          !byte LD_ELEMENT,34,140\r\n          !byte LD_OBJECT,12,14,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,27,14,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,3,11,TYPE_FRANKENSTEIN,5\r\n          !byte LD_SPAWN_SPOT,36,11,TYPE_FRANKENSTEIN,5\r\n          !byte LD_SPAWN_SPOT,11,6,TYPE_BAT_DIAG,5\r\n          !byte LD_SPAWN_SPOT,28,6,TYPE_BAT_DIAG,5\r\n          !byte LD_LINE_H,17,8,1,0,0\r\n          !byte LD_LINE_H,2,13,4,0,0\r\n          !byte LD_LINE_H,10,16,4,0,0\r\n          !byte LD_LINE_H,26,16,4,0,0\r\n          !byte LD_LINE_H,34,13,4,0,0\r\n          !byte LD_END\r\nSN_LEVEL_58\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_ELEMENT_AREA,1,1,7,5,EL_SN_RED_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_LINE_V,15,9,3,EL_SN_RED_ROCK_BACKGROUND\r\n          !byte LD_AREA,1,18,15,4,215,8\r\n          !byte LD_ELEMENT_LINE_H,1,17,3,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT,14,18,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT,19,17,EL_SN_RED_ROCK_BACKGROUND\r\n          !byte LD_ELEMENT_LINE_V,17,13,2,EL_SN_RED_ROCK_BACKGROUND\r\n          !byte LD_AREA,16,20,8,2,215,8\r\n          !byte LD_ELEMENT_LINE_H,20,20,2,EL_SN_SAND_FLOOR\r\n          !byte LD_ELEMENT_LINE_H,16,19,2,EL_SN_SAND_FLOOR\r\n          !byte LD_LINE_H,24,20,15,111,3\r\n          !byte LD_ELEMENT_LINE_H,24,21,4,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT,12,17,EL_SN_SAND_FLOOR\r\n          !byte LD_OBJECT,10,16,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,17,18,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,24,6,TYPE_BAT_DIAG,5\r\n          !byte LD_SPAWN_SPOT,31,14,TYPE_BAT_DIAG,5\r\n          !byte LD_SPAWN_SPOT,5,11,TYPE_BAT_DIAG,5\r\n          !byte LD_SPAWN_SPOT,30,20,TYPE_JUMPING_TOAD,5\r\n          !byte LD_SPAWN_SPOT,35,20,TYPE_JUMPING_TOAD,5\r\n          !byte LD_END\r\nSN_LEVEL_59\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_ELEMENT_LINE_H,13,21,4,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_H,12,20,4,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT,11,149\r\n          !byte LD_ELEMENT,29,149\r\n          !byte LD_LINE_H,1,21,10,111,3\r\n          !byte LD_LINE_H,29,21,10,111,3\r\n          !byte LD_ELEMENT,13,17,EL_SN_SLIME_STONE_4\r\n          !byte LD_ELEMENT,23,145\r\n          !byte LD_ELEMENT,10,142\r\n          !byte LD_ELEMENT,26,142\r\n          !byte LD_ELEMENT,22,139\r\n          !byte LD_ELEMENT,14,139\r\n          !byte LD_ELEMENT,29,137\r\n          !byte LD_ELEMENT,4,140\r\n          !byte LD_ELEMENT,32,140\r\n          !byte LD_ELEMENT,7,137\r\n          !byte LD_OBJECT,15,16,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,24,16,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,8,8,TYPE_GHOST_SKELETON,2\r\n          !byte LD_SPAWN_SPOT,31,8,TYPE_GHOST_SKELETON,2\r\n          !byte LD_SPAWN_SPOT,20,19,TYPE_GHOST_SKELETON,2\r\n          !byte LD_END\r\nSN_LEVEL_60\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_ELEMENT_LINE_H,0,11,4,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_H,0,21,10,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_H,24,11,4,EL_SN_BLUEROCK\r\n          !byte LD_LINE_H,1,10,16,111,3\r\n          !byte LD_LINE_H,23,10,16,111,3\r\n          !byte LD_LINE_H,1,20,38,111,3\r\n          !byte LD_ELEMENT,6,18,EL_SN_SLIME_STONE_4\r\n          !byte LD_LINE_V,23,11,9,143,3\r\n          !byte LD_ELEMENT,30,146\r\n          !byte LD_ELEMENT,17,146\r\n          !byte LD_ELEMENT,20,143\r\n          !byte LD_ELEMENT,17,140\r\n          !byte LD_ELEMENT,28,135\r\n          !byte LD_ELEMENT,8,135\r\n          !byte LD_OBJECT,8,17,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,31,17,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,19,11,TYPE_GHOST_SKELETON,2\r\n          !byte LD_SPAWN_SPOT,4,10,TYPE_JUMPING_TOAD,5\r\n          !byte LD_SPAWN_SPOT,36,10,TYPE_JUMPING_TOAD,5\r\n          !byte LD_SPAWN_SPOT,36,20,TYPE_JUMPING_TOAD,5\r\n          !byte LD_SPAWN_SPOT,4,20,TYPE_JUMPING_TOAD,5\r\n          !byte LD_LINE_V,16,11,9,143,3\r\n          !byte LD_END\r\nSN_LEVEL_61\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_AREA,1,1,38,21,143,3\r\n          !byte LD_ELEMENT,4,19,EL_SN_SLIME_STONE_4\r\n          !byte LD_ELEMENT,8,144\r\n          !byte LD_ELEMENT,12,141\r\n          !byte LD_ELEMENT,32,147\r\n          !byte LD_ELEMENT,28,144\r\n          !byte LD_ELEMENT,24,141\r\n          !byte LD_ELEMENT,18,144\r\n          !byte LD_ELEMENT,8,138\r\n          !byte LD_ELEMENT,28,138\r\n          !byte LD_ELEMENT,32,135\r\n          !byte LD_ELEMENT,14,135\r\n          !byte LD_ELEMENT,18,138\r\n          !byte LD_OBJECT,5,18,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,34,18,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,20,9,TYPE_GHOST_SKELETON,8\r\n          !byte LD_SPAWN_SPOT,6,6,TYPE_JUMPING_TOAD,2\r\n          !byte LD_SPAWN_SPOT,33,6,TYPE_JUMPING_TOAD,2\r\n          !byte LD_END\r\nSN_LEVEL_62\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_AREA,7,1,2,5,143,3\r\n          !byte LD_AREA,16,7,5,5,143,3\r\n          !byte LD_AREA,31,1,2,5,143,3\r\n          !byte LD_AREA,9,13,2,8,143,3\r\n          !byte LD_AREA,34,13,2,8,143,3\r\n          !byte LD_AREA,24,13,2,8,143,3\r\n          !byte LD_LINE_H,1,21,38,111,3\r\n          !byte LD_LINE_H,1,6,16,111,3\r\n          !byte LD_LINE_H,20,6,19,111,3\r\n          !byte LD_LINE_H,9,12,27,111,3\r\n          !byte LD_ELEMENT,10,18,EL_SN_SLIME_STONE_4\r\n          !byte LD_ELEMENT,21,146\r\n          !byte LD_ELEMENT,5,144\r\n          !byte LD_ELEMENT,3,141\r\n          !byte LD_ELEMENT,18,143\r\n          !byte LD_ELEMENT,22,140\r\n          !byte LD_ELEMENT,25,137\r\n          !byte LD_ELEMENT,34,137\r\n          !byte LD_ELEMENT,13,138\r\n          !byte LD_ELEMENT,6,138\r\n          !byte LD_ELEMENT,9,135\r\n          !byte LD_ELEMENT,29,135\r\n          !byte LD_ELEMENT,15,148\r\n          !byte LD_ELEMENT,4,148\r\n          !byte LD_ELEMENT,28,148\r\n          !byte LD_OBJECT,6,19,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,29,19,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,23,11,TYPE_GHOST_SKELETON,5\r\n          !byte LD_SPAWN_SPOT,15,9,TYPE_GHOST_SKELETON,5\r\n          !byte LD_END\r\nSN_LEVEL_63\r\n          !byte LD_LEVEL_CONFIG,3\r\n          !byte LD_ELEMENT_LINE_H,10,21,5,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_V,10,0,2,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT_LINE_V,9,7,2,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT_LINE_V,10,14,2,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT_LINE_V,29,0,2,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT_LINE_V,30,7,2,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT_LINE_V,29,14,2,EL_SN_REDROCKV\r\n          !byte LD_AREA,14,0,4,8,143,3\r\n          !byte LD_AREA,23,0,3,5,143,3\r\n          !byte LD_LINE_V,21,6,8,143,3\r\n          !byte LD_LINE_V,27,6,8,143,3\r\n          !byte LD_LINE_V,13,9,12,143,3\r\n          !byte LD_LINE_V,18,9,12,143,3\r\n          !byte LD_LINE_V,19,15,6,143,3\r\n          !byte LD_AREA,24,15,2,6,143,3\r\n          !byte LD_ELEMENT,13,8,EL_SN_SLIME_STONE_4\r\n          !byte LD_ELEMENT,21,133\r\n          !byte LD_ELEMENT,24,141\r\n          !byte LD_ELEMENT,18,142\r\n          !byte LD_ELEMENT,25,136\r\n          !byte LD_ELEMENT,19,138\r\n          !byte LD_ELEMENT,13,144\r\n          !byte LD_ELEMENT,19,146\r\n          !byte LD_LINE_H,11,20,18,111,3\r\n          !byte LD_OBJECT,13,20,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,26,20,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,14,7,TYPE_JUMPING_TOAD,2\r\n          !byte LD_SPAWN_SPOT,26,12,TYPE_JUMPING_TOAD,2\r\n          !byte LD_SPAWN_SPOT,20,17,TYPE_JUMPING_TOAD,2\r\n          !byte LD_END\r\nSN_LEVEL_64\r\n          !byte LD_LEVEL_CONFIG,3\r\n          !byte LD_ELEMENT_LINE_H,21,9,4,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT,15,6,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT,21,134\r\n          !byte LD_ELEMENT_LINE_H,2,21,9,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_H,21,6,3,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_H,4,6,3,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_H,5,3,7,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT,4,3,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT,33,131\r\n          !byte LD_ELEMENT_LINE_H,3,9,3,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT,2,10,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT_LINE_V,1,14,2,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT,37,138\r\n          !byte LD_ELEMENT_LINE_V,38,14,2,EL_SN_REDROCKV\r\n          !byte LD_AREA,16,6,5,14,143,3\r\n          !byte LD_LINE_H,2,20,36,111,3\r\n          !byte LD_OBJECT,3,20,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,36,20,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,6,5,TYPE_BAT_DIAG,5\r\n          !byte LD_SPAWN_SPOT,31,5,TYPE_BAT_DIAG,5\r\n          !byte LD_END\r\nSN_LEVEL_65\r\n          !byte LD_LEVEL_CONFIG,2\r\n          !byte LD_ELEMENT,7,10,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT,7,10,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT,11,139\r\n          !byte LD_ELEMENT_LINE_H,40,11,2,EL_SN_SLIME_STONE_2\r\n          !byte LD_LINE_V,6,10,11,143,3\r\n          !byte LD_ELEMENT,14,12,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_H,3,16,2,EL_SN_SLIME_STONE_2\r\n          !byte LD_LINE_H,1,21,38,111,3\r\n          !byte LD_ELEMENT,15,13,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT,11,14,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT,12,145\r\n          !byte LD_ELEMENT_LINE_H,12,21,6,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_H,16,14,2,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_H,24,15,2,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT,35,18,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT,34,146\r\n          !byte LD_ELEMENT,32,16,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT,38,18,EL_SN_SLIME_STONE_4\r\n          !byte LD_ELEMENT,58,132\r\n          !byte LD_ELEMENT,64,133\r\n          !byte LD_ELEMENT,62,4,EL_SN_SLIME_STONE_2\r\n          !byte LD_ELEMENT,62,135\r\n          !byte LD_ELEMENT,62,138\r\n          !byte LD_ELEMENT,62,129\r\n          !byte LD_OBJECT,8,9,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,34,15,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,13,10,TYPE_SLIME,5\r\n          !byte LD_SPAWN_SPOT,30,14,TYPE_SLIME,5\r\n          !byte LD_SPAWN_SPOT,2,21,TYPE_SLIME,5\r\n          !byte LD_SPAWN_SPOT,38,21,TYPE_SLIME,5\r\n          !byte LD_LINE_V,36,16,5,143,3\r\n          !byte LD_LINE_V,28,6,9,143,3\r\n          !byte LD_LINE_V,17,5,7,143,3\r\n          !byte LD_ELEMENT,8,11,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT,9,140\r\n          !byte LD_ELEMENT,10,141\r\n          !byte LD_ELEMENT,9,139\r\n          !byte LD_ELEMENT,35,145\r\n          !byte LD_END\r\nSN_LEVEL_66\r\n          !byte LD_LEVEL_CONFIG,3\r\n          !byte LD_ELEMENT_LINE_H,2,22,9,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_H,0,0,10,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT,9,139\r\n          !byte LD_ELEMENT,27,139\r\n          !byte LD_ELEMENT_LINE_V,0,1,4,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT,2,147\r\n          !byte LD_ELEMENT,1,144\r\n          !byte LD_ELEMENT,37,147\r\n          !byte LD_ELEMENT,38,144\r\n          !byte LD_ELEMENT_LINE_V,39,1,4,EL_SN_REDROCKV\r\n          !byte LD_ELEMENT,12,14,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT,24,142\r\n          !byte LD_ELEMENT,46,17,EL_SN_SLIME_STONE_2\r\n          !byte LD_ELEMENT,47,142\r\n          !byte LD_ELEMENT,44,139\r\n          !byte LD_ELEMENT,74,139\r\n          !byte LD_ELEMENT,71,142\r\n          !byte LD_ELEMENT,72,145\r\n          !byte LD_OBJECT,12,21,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,27,21,TYPE_PLAYER_SAM\r\n          !byte LD_OBJECT,20,9,TYPE_BOSS6\r\n          !byte LD_END\r\nSN_LEVEL_67\r\n          !byte LD_LEVEL_CONFIG,7\r\n          !byte LD_AREA,8,2,24,19,93,6\r\n          !byte LD_ELEMENT_LINE_H,6,21,7,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_V,16,11,2,EL_SN_METAL.DOOR.L\r\n          !byte LD_ELEMENT_LINE_H,6,0,7,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_V,18,11,2,EL_SN_METAL.DOOR.R\r\n          !byte LD_ELEMENT_LINE_V,22,11,2,EL_SN_METAL.DOOR.R\r\n          !byte LD_ELEMENT_LINE_V,20,11,2,EL_SN_METAL.DOOR.L\r\n          !byte LD_ELEMENT,6,1,EL_SN_METAL.COLUMN.L.TOP\r\n          !byte LD_ELEMENT,32,1,EL_SN_METAL.COLUMN.R.TOP\r\n          !byte LD_ELEMENT_LINE_V,6,2,19,EL_SN_METAL.COLUMN.L.CENTER\r\n          !byte LD_ELEMENT_LINE_V,32,2,19,EL_SN_METAL.COLUMN.R.CENTER\r\n          !byte LD_ELEMENT,6,6,EL_SN_METAL.COLUMN.L.HOLE\r\n          !byte LD_ELEMENT,6,141\r\n          !byte LD_ELEMENT,32,6,EL_SN_METAL.COLUMN.R.BOTTOM\r\n          !byte LD_ELEMENT,32,141\r\n          !byte LD_LINE_H,8,2,24,92,6\r\n          !byte LD_ELEMENT,9,18,EL_SN_SAND_STONE_4\r\n          !byte LD_ELEMENT,27,146\r\n          !byte LD_ELEMENT,26,15,EL_SN_SAND_STONE_2\r\n          !byte LD_ELEMENT,12,143\r\n          !byte LD_ELEMENT,13,140\r\n          !byte LD_ELEMENT,25,140\r\n          !byte LD_ELEMENT,24,137\r\n          !byte LD_ELEMENT,14,137\r\n          !byte LD_ELEMENT,18,8,EL_SN_SAND_STONE_4\r\n          !byte LD_OBJECT,10,17,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,29,17,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,25,20,TYPE_WOLFMAN,5\r\n          !byte LD_SPAWN_SPOT,14,20,TYPE_WOLFMAN,5\r\n          !byte LD_SPAWN_SPOT,20,7,TYPE_FLOATING_GHOST,18\r\n          !byte LD_SPAWN_SPOT,14,11,TYPE_SPIDER,33\r\n          !byte LD_SPAWN_SPOT,25,11,TYPE_SPIDER,33\r\n          !byte LD_LINE_H,8,1,24,0,0\r\n          !byte LD_ELEMENT_LINE_V,4,0,22,EL_SN_METAL.COLUMN.R.CENTER\r\n          !byte LD_ELEMENT_LINE_V,34,0,22,EL_SN_METAL.COLUMN.L.CENTER\r\n          !byte LD_ELEMENT,34,6,EL_SN_METAL.COLUMN.L.HOLE\r\n          !byte LD_ELEMENT,34,141\r\n          !byte LD_ELEMENT,4,13,EL_SN_METAL.COLUMN.R.BOTTOM\r\n          !byte LD_ELEMENT,4,134\r\n          !byte LD_END\r\nSN_LEVEL_68\r\n          !byte LD_LEVEL_CONFIG,7\r\n          !byte LD_AREA,8,2,24,19,93,6\r\n          !byte LD_ELEMENT_LINE_V,16,11,2,EL_SN_METAL.DOOR.L\r\n          !byte LD_ELEMENT_LINE_V,18,11,2,EL_SN_METAL.DOOR.R\r\n          !byte LD_ELEMENT_LINE_V,22,11,2,EL_SN_METAL.DOOR.R\r\n          !byte LD_ELEMENT_LINE_V,20,11,2,EL_SN_METAL.DOOR.L\r\n          !byte LD_LINE_H,8,2,24,92,6\r\n          !byte LD_ELEMENT_LINE_H,6,0,7,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_H,6,21,7,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT,7,14,EL_SN_SLIME_STONE_2\r\n          !byte LD_ELEMENT,31,142\r\n          !byte LD_ELEMENT_LINE_V,6,2,19,EL_SN_METAL.COLUMN.L.CENTER\r\n          !byte LD_ELEMENT,6,1,EL_SN_METAL.COLUMN.L.TOP\r\n          !byte LD_ELEMENT_LINE_V,32,2,19,EL_SN_METAL.COLUMN.R.CENTER\r\n          !byte LD_ELEMENT,32,1,EL_SN_METAL.COLUMN.R.TOP\r\n          !byte LD_ELEMENT,6,6,EL_SN_METAL.COLUMN.L.HOLE\r\n          !byte LD_ELEMENT,6,141\r\n          !byte LD_ELEMENT,32,6,EL_SN_METAL.COLUMN.R.BOTTOM\r\n          !byte LD_ELEMENT,32,141\r\n          !byte LD_ELEMENT,13,18,EL_SN_SLIME_STONE_2\r\n          !byte LD_ELEMENT,25,146\r\n          !byte LD_ELEMENT,28,144\r\n          !byte LD_ELEMENT,10,144\r\n          !byte LD_ELEMENT,10,140\r\n          !byte LD_ELEMENT,13,138\r\n          !byte LD_ELEMENT,28,140\r\n          !byte LD_ELEMENT,25,138\r\n          !byte LD_ELEMENT,18,9,EL_SN_SLIME_STONE_4\r\n          !byte LD_OBJECT,14,17,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,25,17,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,20,14,TYPE_FLOATING_GHOST,4\r\n          !byte LD_SPAWN_SPOT,10,5,TYPE_FLY,18\r\n          !byte LD_SPAWN_SPOT,29,5,TYPE_FLY,18\r\n          !byte LD_SPAWN_SPOT,29,19,TYPE_FLY,18\r\n          !byte LD_SPAWN_SPOT,10,19,TYPE_FLY,18\r\n          !byte LD_SPAWN_SPOT,19,8,TYPE_MUMMY,34\r\n          !byte LD_SPAWN_SPOT,20,20,TYPE_MUMMY,34\r\n          !byte LD_SPAWN_SPOT,13,9,TYPE_ZOMBIE,34\r\n          !byte LD_SPAWN_SPOT,26,9,TYPE_ZOMBIE,34\r\n          !byte LD_LINE_H,8,1,24,0,0\r\n          !byte LD_ELEMENT_LINE_V,4,0,22,EL_SN_METAL.COLUMN.R.CENTER\r\n          !byte LD_ELEMENT_LINE_V,34,0,22,EL_SN_METAL.COLUMN.L.CENTER\r\n          !byte LD_ELEMENT,34,6,EL_SN_METAL.COLUMN.L.HOLE\r\n          !byte LD_ELEMENT,34,141\r\n          !byte LD_ELEMENT,4,13,EL_SN_METAL.COLUMN.R.BOTTOM\r\n          !byte LD_ELEMENT,4,134\r\n          !byte LD_END\r\nSN_LEVEL_69\r\n          !byte LD_LEVEL_CONFIG,7\r\n          !byte LD_AREA,8,2,24,19,93,6\r\n          !byte LD_LINE_H,8,2,24,92,6\r\n          !byte LD_ELEMENT_LINE_H,6,0,7,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_H,6,21,7,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_V,6,2,19,EL_SN_METAL.COLUMN.L.CENTER\r\n          !byte LD_ELEMENT,6,1,EL_SN_METAL.COLUMN.L.TOP\r\n          !byte LD_ELEMENT,6,6,EL_SN_METAL.COLUMN.L.HOLE\r\n          !byte LD_ELEMENT,6,141\r\n          !byte LD_ELEMENT,32,1,EL_SN_METAL.COLUMN.R.TOP\r\n          !byte LD_ELEMENT_LINE_V,32,2,19,EL_SN_METAL.COLUMN.R.CENTER\r\n          !byte LD_ELEMENT,32,6,EL_SN_METAL.COLUMN.R.BOTTOM\r\n          !byte LD_ELEMENT,32,141\r\n          !byte LD_ELEMENT_LINE_V,16,11,2,EL_SN_METAL.DOOR.L\r\n          !byte LD_ELEMENT_LINE_V,20,11,2,EL_SN_METAL.DOOR.L\r\n          !byte LD_ELEMENT_LINE_V,18,11,2,EL_SN_METAL.DOOR.R\r\n          !byte LD_ELEMENT_LINE_V,22,11,2,EL_SN_METAL.DOOR.R\r\n          !byte LD_ELEMENT,10,9,EL_SN_SLIME_STONE_4\r\n          !byte LD_ELEMENT,26,137\r\n          !byte LD_ELEMENT,11,12,EL_SN_SLIME_STONE_2\r\n          !byte LD_ELEMENT,11,143\r\n          !byte LD_ELEMENT,11,146\r\n          !byte LD_ELEMENT,27,146\r\n          !byte LD_ELEMENT,27,143\r\n          !byte LD_ELEMENT,27,140\r\n          !byte LD_OBJECT,12,17,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,27,17,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,9,20,TYPE_ZOMBIE,2\r\n          !byte LD_SPAWN_SPOT,30,20,TYPE_ZOMBIE,2\r\n          !byte LD_SPAWN_SPOT,20,14,TYPE_BAT_VANISH,2\r\n          !byte LD_SPAWN_SPOT,11,8,TYPE_SPIDER,18\r\n          !byte LD_SPAWN_SPOT,28,8,TYPE_SPIDER,18\r\n          !byte LD_SPAWN_SPOT,11,14,TYPE_WOLFMAN,33\r\n          !byte LD_SPAWN_SPOT,28,14,TYPE_WOLFMAN,33\r\n          !byte LD_LINE_H,8,1,24,0,0\r\n          !byte LD_ELEMENT_LINE_V,4,0,22,EL_SN_METAL.COLUMN.R.CENTER\r\n          !byte LD_ELEMENT_LINE_V,34,0,22,EL_SN_METAL.COLUMN.L.CENTER\r\n          !byte LD_ELEMENT,34,6,EL_SN_METAL.COLUMN.L.HOLE\r\n          !byte LD_ELEMENT,34,141\r\n          !byte LD_ELEMENT,4,13,EL_SN_METAL.COLUMN.R.BOTTOM\r\n          !byte LD_ELEMENT,4,134\r\n          !byte LD_END\r\nSN_LEVEL_70\r\n          !byte LD_LEVEL_CONFIG,7\r\n          !byte LD_AREA,8,2,24,19,93,6\r\n          !byte LD_LINE_H,8,2,24,92,6\r\n          !byte LD_ELEMENT,6,15,EL_SN_SLIME_STONE_4\r\n          !byte LD_ELEMENT_LINE_H,6,0,7,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_H,6,21,7,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_V,6,2,19,EL_SN_METAL.COLUMN.L.CENTER\r\n          !byte LD_ELEMENT,6,1,EL_SN_METAL.COLUMN.L.TOP\r\n          !byte LD_ELEMENT,30,15,EL_SN_SLIME_STONE_4\r\n          !byte LD_ELEMENT,18,137\r\n          !byte LD_ELEMENT,6,6,EL_SN_METAL.COLUMN.L.HOLE\r\n          !byte LD_ELEMENT,6,141\r\n          !byte LD_ELEMENT_LINE_V,32,2,19,EL_SN_METAL.COLUMN.R.CENTER\r\n          !byte LD_ELEMENT,32,1,EL_SN_METAL.COLUMN.R.TOP\r\n          !byte LD_ELEMENT,32,6,EL_SN_METAL.COLUMN.R.BOTTOM\r\n          !byte LD_ELEMENT,32,141\r\n          !byte LD_ELEMENT_LINE_V,16,11,2,EL_SN_METAL.DOOR.L\r\n          !byte LD_ELEMENT_LINE_V,20,11,2,EL_SN_METAL.DOOR.L\r\n          !byte LD_ELEMENT_LINE_V,18,11,2,EL_SN_METAL.DOOR.R\r\n          !byte LD_ELEMENT_LINE_V,22,11,2,EL_SN_METAL.DOOR.R\r\n          !byte LD_ELEMENT,12,18,EL_SN_SLIME_STONE_4\r\n          !byte LD_ELEMENT,24,146\r\n          !byte LD_ELEMENT,24,140\r\n          !byte LD_ELEMENT,12,140\r\n          !byte LD_OBJECT,9,20,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,30,20,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,13,17,TYPE_WOLFMAN,2\r\n          !byte LD_SPAWN_SPOT,26,17,TYPE_WOLFMAN,2\r\n          !byte LD_SPAWN_SPOT,19,7,TYPE_GHOST_SKELETON,17\r\n          !byte LD_SPAWN_SPOT,14,11,TYPE_SPIDER,34\r\n          !byte LD_SPAWN_SPOT,25,11,TYPE_SPIDER,34\r\n          !byte LD_SPAWN_SPOT,20,17,TYPE_GHOST_SKELETON,49\r\n          !byte LD_LINE_H,8,1,24,0,0\r\n          !byte LD_ELEMENT_LINE_V,4,0,22,EL_SN_METAL.COLUMN.R.CENTER\r\n          !byte LD_ELEMENT_LINE_V,34,0,22,EL_SN_METAL.COLUMN.L.CENTER\r\n          !byte LD_ELEMENT,34,6,EL_SN_METAL.COLUMN.L.HOLE\r\n          !byte LD_ELEMENT,34,141\r\n          !byte LD_ELEMENT,4,13,EL_SN_METAL.COLUMN.R.BOTTOM\r\n          !byte LD_ELEMENT,4,134\r\n          !byte LD_END\r\nSN_LEVEL_71\r\n          !byte LD_LEVEL_CONFIG,7\r\n          !byte LD_AREA,8,2,24,19,93,6\r\n          !byte LD_LINE_H,8,2,24,92,6\r\n          !byte LD_ELEMENT_LINE_H,6,0,7,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_H,6,21,7,EL_SN_BLUEROCK\r\n          !byte LD_ELEMENT_LINE_V,6,2,19,EL_SN_METAL.COLUMN.L.CENTER\r\n          !byte LD_ELEMENT,6,1,EL_SN_METAL.COLUMN.L.TOP\r\n          !byte LD_ELEMENT,6,6,EL_SN_METAL.COLUMN.L.HOLE\r\n          !byte LD_ELEMENT,6,141\r\n          !byte LD_ELEMENT_LINE_V,32,2,19,EL_SN_METAL.COLUMN.R.CENTER\r\n          !byte LD_ELEMENT,32,1,EL_SN_METAL.COLUMN.R.TOP\r\n          !byte LD_ELEMENT,32,6,EL_SN_METAL.COLUMN.R.BOTTOM\r\n          !byte LD_ELEMENT,32,141\r\n          !byte LD_ELEMENT_LINE_V,16,11,2,EL_SN_METAL.DOOR.L\r\n          !byte LD_ELEMENT_LINE_V,20,11,2,EL_SN_METAL.DOOR.L\r\n          !byte LD_ELEMENT_LINE_V,18,11,2,EL_SN_METAL.DOOR.R\r\n          !byte LD_ELEMENT_LINE_V,22,11,2,EL_SN_METAL.DOOR.R\r\n          !byte LD_ELEMENT,12,18,EL_SN_SLIME_STONE_4\r\n          !byte LD_ELEMENT,24,146\r\n          !byte LD_ELEMENT,26,143\r\n          !byte LD_ELEMENT,28,140\r\n          !byte LD_ELEMENT,10,143\r\n          !byte LD_ELEMENT,8,140\r\n          !byte LD_ELEMENT,10,137\r\n          !byte LD_ELEMENT,26,137\r\n          !byte LD_ELEMENT,24,134\r\n          !byte LD_ELEMENT,12,134\r\n          !byte LD_OBJECT,9,20,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,30,20,TYPE_PLAYER_SAM\r\n          !byte LD_SPAWN_SPOT,20,11,TYPE_GHOST_SKELETON,1\r\n          !byte LD_SPAWN_SPOT,11,5,TYPE_GHOST_SKELETON,33\r\n          !byte LD_SPAWN_SPOT,28,5,TYPE_GHOST_SKELETON,65\r\n          !byte LD_SPAWN_SPOT,9,11,TYPE_SPIDER,18\r\n          !byte LD_SPAWN_SPOT,30,11,TYPE_SPIDER,18\r\n          !byte LD_SPAWN_SPOT,25,17,TYPE_SPIDER,50\r\n          !byte LD_SPAWN_SPOT,14,17,TYPE_SPIDER,50\r\n          !byte LD_ELEMENT_LINE_V,4,0,22,EL_SN_METAL.COLUMN.R.CENTER\r\n          !byte LD_ELEMENT,4,6,EL_SN_METAL.COLUMN.R.BOTTOM\r\n          !byte LD_ELEMENT,4,141\r\n          !byte LD_ELEMENT_LINE_V,34,0,22,EL_SN_METAL.COLUMN.L.CENTER\r\n          !byte LD_ELEMENT,34,13,EL_SN_METAL.COLUMN.L.HOLE\r\n          !byte LD_ELEMENT,34,134\r\n          !byte LD_END\r\nSN_LEVEL_72\r\n          !byte LD_LEVEL_CONFIG,11\r\n          !byte LD_ELEMENT_LINE_H,0,21,10,EL_SN_REDROCK\r\n          !byte LD_ELEMENT_LINE_V,0,5,16,EL_SN_METAL.COLUMN.L.CENTER\r\n          !byte LD_ELEMENT_LINE_V,38,5,16,EL_SN_METAL.COLUMN.R.CENTER\r\n          !byte LD_ELEMENT,0,9,EL_SN_METAL.COLUMN.L.HOLE\r\n          !byte LD_ELEMENT,0,143\r\n          !byte LD_ELEMENT,38,9,EL_SN_METAL.COLUMN.R.BOTTOM\r\n          !byte LD_ELEMENT_LINE_H,0,4,2,EL_SN_REDROCK\r\n          !byte LD_ELEMENT,38,15,EL_SN_METAL.COLUMN.R.BOTTOM\r\n          !byte LD_ELEMENT_LINE_H,32,4,2,EL_SN_REDROCK\r\n          !byte LD_ELEMENT_LINE_V,10,1,4,EL_SN_METAL.COLUMN.L.CENTER\r\n          !byte LD_ELEMENT_LINE_V,28,1,4,EL_SN_METAL.COLUMN.R.CENTER\r\n          !byte LD_ELEMENT,28,2,EL_SN_METAL.COLUMN.R.BOTTOM\r\n          !byte LD_ELEMENT,10,2,EL_SN_METAL.COLUMN.L.HOLE\r\n          !byte LD_ELEMENT_LINE_V,30,1,4,EL_SN_METAL.COLUMN.L.CENTER\r\n          !byte LD_ELEMENT_LINE_V,8,1,4,EL_SN_METAL.COLUMN.R.CENTER\r\n          !byte LD_ELEMENT,8,2,EL_SN_METAL.COLUMN.R.BOTTOM\r\n          !byte LD_ELEMENT,30,2,EL_SN_METAL.COLUMN.L.HOLE\r\n          !byte LD_ELEMENT_LINE_H,8,0,6,EL_SN_REDROCK\r\n          !byte LD_OBJECT,6,20,TYPE_PLAYER_DEAN\r\n          !byte LD_OBJECT,33,20,TYPE_PLAYER_SAM\r\n          !byte LD_ELEMENT,8,18,EL_SN_SAND_STONE_4\r\n          !byte LD_ELEMENT,28,146\r\n          !byte LD_ELEMENT,31,143\r\n          !byte LD_ELEMENT,5,143\r\n          !byte LD_ELEMENT,8,12,EL_SN_SAND_STONE_2\r\n          !byte LD_ELEMENT,30,140\r\n          !byte LD_ELEMENT,0,5,EL_SN_METAL.COLUMN.L.TOP\r\n          !byte LD_ELEMENT,38,5,EL_SN_METAL.COLUMN.R.TOP\r\n          !byte LD_ELEMENT,30,1,EL_SN_METAL.COLUMN.L.TOP\r\n          !byte LD_ELEMENT,10,129\r\n          !byte LD_ELEMENT,28,1,EL_SN_METAL.COLUMN.R.TOP\r\n          !byte LD_ELEMENT,8,129\r\n          !byte LD_END\r\n\r\n","sourcePath":"external/github.com/jarrodparkes_c64-examples/supernatural/step100/level_data.asm","sourceMtimeMs":1539612651000,"sourceUrl":"https://github.com/jarrodparkes/c64-examples/blob/master/level_data.asm","sourceRepoUrl":"https://github.com/jarrodparkes/c64-examples","license":"UNKNOWN","attribution":"Source: jarrodparkes/c64-examples (License unknown)"},{"name":"github.com/jarrodparkes_c64-examples/supernatural/step100/tiles.asm","language":"asm","vector":[0.039797548204660416,0.009949387051165104,0,0,0,0,0,0.07959509640932083,0,0,0,0,0,0,0,-0.07959509640932083,-0.019898774102330208,0,0,0,0,0,0,0,0,0,0,0,-0.019898774102330208,0,0,0.15919019281864166,0,0,0,0,0,0,0,0,0,0,0.039797548204660416,0.009949387051165104,0,0,-0.15919019281864166,0,0,0.009949387051165104,0,-0.19898773729801178,0,0,0.039797548204660416,0,0,0,-0.10944325476884842,0,0,0,0,0,0,0,0,0.019898774102330208,0,0,-0.019898774102330208,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.019898774102330208,0,0,0,0,0.039797548204660416,0.009949387051165104,0,0,0,0,0,0,0,0,-0.08954448252916336,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.009949387051165104,0,0,0,0,0,0,0,0,0.019898774102330208,0,0,-0.009949387051165104,0,0.039797548204660416,0,0,-0.039797548204660416,-0.09949386864900589,0,0,0.019898774102330208,0,0,0,0,0,0,0,0,-0.07959509640932083,0,0,0,0,0,0,0,0,0,0,0,-0.049746934324502945,0,0.039797548204660416,0,0,0,0,0,0.3183803856372833,0.009949387051165104,0,0,-0.009949387051165104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.019898774102330208,0,0,0,0,0.6367607712745667,0,0,0,0,0,0,0.009949387051165104,0,0,0,0,0.039797548204660416,0,0,0,0,0,0.039797548204660416,0,0,0,-0.019898774102330208,0,0,0,0,-0.039797548204660416,0,0,0,0,0,0,0,0,0,0.019898774102330208,0,0,-0.019898774102330208,0,0,0,0,0,0,0,0,0.009949387051165104,0,0,0,0,0,0,0,0,-0.049746934324502945,0,0,0.009949387051165104,0,0,0,0,0,0.019898774102330208,0,0,0,0,0.039797548204660416,0.15919019281864166,0,0,0,0,0,0,0,-0.19898773729801178,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3183803856372833,0,-0.039797548204660416,0,0,0,0,0,0,0,0,0,0.029848160222172737,0,-0.039797548204660416,0,0,0,0.019898774102330208,0,0,0,0,0,0,0,0,-0.019898774102330208,0,0,0,0,-0.3183803856372833,0,0,0,0,0,0,0,0,0,0,0,-0.19898773729801178,0,0,0,0,0,0,0,0,0.039797548204660416,0.009949387051165104,0,-0.039797548204660416,-0.009949387051165104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.019898774102330208,0,0,0,0,0,0,0,0,-0.09949386864900589,0],"text":"BLOCK_TABLE_UL_LOCATION0\r\n!byte 162,12,24\r\n\r\nBLOCK_TABLE_UL_COLOR_LOCATION0\r\n!byte 13,6,1\r\n\r\nBLOCK_TABLE_UR_LOCATION0\r\n!byte 163,13,25\r\n\r\nBLOCK_TABLE_UR_COLOR_LOCATION0\r\n!byte 13,6,1\r\n\r\nBLOCK_TABLE_LL_LOCATION0\r\n!byte 2,14,26\r\n\r\nBLOCK_TABLE_LL_COLOR_LOCATION0\r\n!byte 13,6,1\r\n\r\nBLOCK_TABLE_LR_LOCATION0\r\n!byte 3,15,27\r\n\r\nBLOCK_TABLE_LR_COLOR_LOCATION0\r\n!byte 13,6,1\r\n\r\n","sourcePath":"external/github.com/jarrodparkes_c64-examples/supernatural/step100/tiles.asm","sourceMtimeMs":1539612651000,"sourceUrl":"https://github.com/jarrodparkes/c64-examples/blob/master/tiles.asm","sourceRepoUrl":"https://github.com/jarrodparkes/c64-examples","license":"UNKNOWN","attribution":"Source: jarrodparkes/c64-examples (License unknown)"},{"name":"github.com/jarrodparkes_c64-examples/temp/colors.asm","language":"asm","vector":[0,0,0,0,-0.00179177091922611,0,0,0.002687656320631504,0,0,0,0,0,0,0,0,-0.000895885459613055,0,0,0.000895885459613055,0,0,0,0,0,0.00179177091922611,0,0,0,0,0,0.022397136315703392,0,0,0,0,0,0.002687656320631504,0,0,-0.00179177091922611,0,0,0.000895885459613055,0,-0.01433416735380888,0,0,0,0,0,-0.00716708367690444,-0.00179177091922611,0,0,0,0,0,0,0,0,0.00358354183845222,0,0,-0.00179177091922611,0,0.00358354183845222,0,0,0,-0.00179177091922611,0,0,0,0,0,-0.00179177091922611,0,0,0.000895885459613055,0,-0.00358354183845222,0,0,0,0,0,0,-0.008062968961894512,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.00179177091922611,0,0.00716708367690444,0.00179177091922611,0,0,0,0,0,0,0,0,0,0,0.00716708367690444,0,0,-0.00358354183845222,0,0,0.00716708367690444,0,0,0,0,0,0.00716708367690444,0,0,0,0,0,0,0.000895885459613055,0,0,-0.00716708367690444,0,0.010750625282526016,0.010750625282526016,0,-0.00358354183845222,-0.00358354183845222,0,0.00358354183845222,0,0,0,-0.000895885459613055,0,0,0,0,-0.01433416735380888,0,0,0,0.00179177091922611,0,0,-0.000895885459613055,0,0,0,0,-0.8708006739616394,0,0,0,0.000895885459613055,0,-0.00716708367690444,-0.002687656320631504,0,0.010750625282526016,0,0,0,-0.000895885459613055,0,0,0,0,-0.00358354183845222,-0.000895885459613055,0,0.00358354183845222,0,0,0,0,0,0,0,0,0,-0.00358354183845222,0,0.00358354183845222,0.00358354183845222,0,0,0,0,0.010750625282526016,0,0,0,0,0,0.00358354183845222,0.00358354183845222,0,0,-0.00179177091922611,0,0,0.00358354183845222,0,0,0,0,0,0.00358354183845222,0,0,0,0,0.00716708367690444,0,0,0,0,0,0,0.005375312641263008,0,0,-0.00179177091922611,0,0,0.00179177091922611,0,0,0,0,0.00358354183845222,0,0,0,-0.010750625282526016,0,0,0,0,-0.00358354183845222,-0.00179177091922611,0,0,0,0,0,-0.4354003369808197,0,0,0,0,0,-0.00358354183845222,0,0,0.00627119792625308,0,-0.00716708367690444,0,0,0.00716708367690444,0,0,0,-0.00179177091922611,0,0,0.00179177091922611,0,0,-0.000895885459613055,0,0,0,0,0,0,0,0,0.00179177091922611,0,0,0,0,0,0.005375312641263008,0,0,0,0,0.00358354183845222,0.00179177091922611,0,0,0,0,0.043002501130104065,0.00179177091922611,0,0,0,0,0,0,0,-0.00358354183845222,0,0,0,0.005375312641263008,0,0,-0.000895885459613055,0,0,0.00179177091922611,0,-0.00358354183845222,0,0,0,0.00179177091922611,0,0,0,0,0.00358354183845222,0.00179177091922611,0,-0.00358354183845222,0,0,0,0.002687656320631504,0,-0.00358354183845222,-0.002687656320631504,0,0,0.000895885459613055,0,-0.00358354183845222,0,0,0,0,0,0,-0.00358354183845222,0,0,0,0,-0.01433416735380888,-0.00358354183845222,0,0,0.00358354183845222,0,0,-0.21770016849040985,0],"text":";============================================================\n; specify output file\n;============================================================\n\n!cpu 6502\n!to \"build/colors.prg\",cbm    ; output file\n\n;============================================================\n; This program rapidly updates the colors\n; of the screen and the border.\n;============================================================\n\n*=$c000   ; starting address of the program\n\nBORDER = $d020\nSCREEN = $d021\n\nstart   inc SCREEN  ; increase screen colour\n        inc BORDER  ; increase border colour\n        jmp start   ; repeat\n","sourcePath":"external/github.com/jarrodparkes_c64-examples/temp/colors.asm","sourceMtimeMs":1539612651000,"sourceUrl":"https://github.com/jarrodparkes/c64-examples/blob/master/temp/colors.asm","sourceRepoUrl":"https://github.com/jarrodparkes/c64-examples","license":"UNKNOWN","attribution":"Source: jarrodparkes/c64-examples (License unknown)"},{"name":"github.com/kschuetz_c64-chip8/include/common.s","language":"asm","vector":[0,0.005910438019782305,0,0,-0.01182087603956461,0,0,0,0,-0.04728350415825844,-0.0177313145250082,0,0.02364175207912922,0,0,-0.2837010324001312,-0.0354626290500164,0,0.02364175207912922,0.01182087603956461,0,-0.02364175207912922,0,0,0.02364175207912922,0.0177313145250082,0,0,-0.005910438019782305,0,0,0.05910437926650047,0,-0.04728350415825844,0,0,0,0.005910438019782305,0,-0.0709252581000328,-0.005910438019782305,0,0,0.005910438019782305,0,0,-0.04728350415825844,0,0.02364175207912922,0,0,-0.16549226641654968,-0.005910438019782305,0,0,0,0,-0.02364175207912922,-0.04137306660413742,0,0,0.01182087603956461,0,-0.04728350415825844,-0.01182087603956461,0,0.02364175207912922,0.005910438019782305,0,0,-0.02364175207912922,0,0.0709252581000328,0,0,-0.02364175207912922,-0.02364175207912922,0,0.04728350415825844,0.0354626290500164,0,-0.09456700831651688,0,0,0,0.0709252581000328,0,-0.18913401663303375,-0.01182087603956461,0,0.0709252581000328,0.005910438019782305,0,-0.1418505162000656,-0.053193941712379456,0,0,0.005910438019782305,0,-0.04728350415825844,0,0,0.04728350415825844,0,0,0,-0.0354626290500164,0,0.02364175207912922,0.01182087603956461,0,0,-0.14776095747947693,0,0.04728350415825844,0.01182087603956461,0,-0.02364175207912922,-0.01182087603956461,0,0,0.01182087603956461,0,-0.02364175207912922,-0.005910438019782305,0,0.5201185345649719,0,0,-0.16549226641654968,-0.029552189633250237,0,0,0.005910438019782305,0,0,-0.0354626290500164,0,0.02364175207912922,0.005910438019782305,0,0,0,0,0,0.0354626290500164,0,-0.04728350415825844,-0.08274613320827484,0,0.02364175207912922,0,0,0,-0.01182087603956461,0,0,0,0,0,-0.04728350415825844,0,0,0.01182087603956461,0,-0.02364175207912922,0,0,0,0.0354626290500164,0,-0.35462626814842224,-0.02364175207912922,0,0.02364175207912922,0.02364175207912922,0,-0.04728350415825844,-0.053193941712379456,0,0,0,0,-0.02364175207912922,-0.10638788342475891,0,0,0.0354626290500164,0,-0.09456700831651688,-0.07683569192886353,0,0,0.0177313145250082,0,0,-0.02364175207912922,0,0.02364175207912922,0.05910437926650047,0,-0.02364175207912922,-0.005910438019782305,0,0.04728350415825844,0.01182087603956461,0,0,-0.02364175207912922,0,0.02364175207912922,0.02364175207912922,0,-0.02364175207912922,-0.01182087603956461,0,0.02364175207912922,0,0,0,-0.02364175207912922,0,0,0.26596972346305847,0,-0.02364175207912922,-0.15367138385772705,0,0,0.005910438019782305,0,-0.0709252581000328,-0.005910438019782305,0,0.04728350415825844,0.0177313145250082,0,0,0,0,0.02364175207912922,0,0,0,-0.0354626290500164,0,0,0.01182087603956461,0,-0.04728350415825844,-0.0177313145250082,0,0,0,0,0,0,0,0,0.005910438019782305,0,0,-0.053193941712379456,0,0.02364175207912922,0,0,-0.02364175207912922,-0.18322357535362244,0,0.02364175207912922,0.01182087603956461,0,0,-0.0354626290500164,0,0,0.005910438019782305,0,-0.04728350415825844,-0.01182087603956461,0,0,0.0177313145250082,0,-0.02364175207912922,-0.053193941712379456,0,0,0.01182087603956461,0,0,-0.02364175207912922,0,0,0.01182087603956461,0,-0.02364175207912922,-0.05910437926650047,0,0,0.04137306660413742,0,-0.02364175207912922,-0.0354626290500164,0,0.02364175207912922,0.01182087603956461,0,0,-0.02364175207912922,0,0.02364175207912922,0.02364175207912922,0,0,0,0,0.09456700831651688,0.005910438019782305,0,0,-0.01182087603956461,0,0,0.01182087603956461,0,0,-0.04137306660413742,0,0,0.02364175207912922,0,-0.09456700831651688,-0.005910438019782305,0,0,0.1418505162000656,0,0,-0.04137306660413742,0,0,0,0,-0.04728350415825844,-0.02364175207912922,0,0,0.005910438019782305,0,-0.02364175207912922,0,0,0,0,0,-0.04728350415825844,-0.01182087603956461,0,0,0.0177313145250082,0,-0.02364175207912922,-0.01182087603956461,0,0.0709252581000328,0.01182087603956461,0,0,0,0,0.1418505162000656,0,0,-0.02364175207912922,-0.029552189633250237,0,0,0,0,-0.09456700831651688,-0.10047744959592819,0],"text":".include \"defines.s\"\r\n\r\n.define true $ff\r\n.define false $00\r\n\r\n.macro store16 m, value\r\n\t\tlda #<value\r\n\t\tsta m\r\n\t\tlda #>value\r\n\t\tsta m + 1\r\n.endmacro\r\n\r\n.macro switch_vic_mem screen, charset\r\n\t\t.local @screen\r\n\t\t.local @charset\r\n\t\t@screen = (screen - vic_bank_base) >> 10\t\r\n\t\t@charset = ((charset - vic_bank_base) >> 10)\r\n\t\t\r\n\t\tlda #<((@screen << 4) | (@charset & 14))\r\n\t\tsta $d018\r\n.endmacro \r\n\r\n;; converts high byte of logical RAM (in A) to physical RAM location\r\n.macro map_to_host\r\n\t    and #15\r\n\t    ora #guest_ram_page\r\n.endmacro\r\n\r\n.struct BundleNode\r\n\t    next .addr\r\n\t    title .byte title_length\r\n\t    enabled_keys .word\r\n\t    keymap .addr\r\n\t    key_repeat_default .byte\r\n\t    data .byte\r\n.endstruct\r\n\r\n.enum UIAction\r\n\t\tnone = 0\r\n\t\treset = 1\r\n\t\tload_prev = 2\r\n\t\tload_next = 3\r\n\t\tpause = 4\r\n\t\tbgcolor_next = 5\r\n\t\tfgcolor_next = 6\r\n\t\tpixel_style_next = 7\r\n\t\ttoggle_key_repeat = 8\r\n\t\ttoggle_sound = 9\r\n.endenum\r\n","sourcePath":"external/github.com/kschuetz_c64-chip8/include/common.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/common.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/include/defines.s","language":"asm","vector":[0.027684809640049934,0,0,0,-0.006921202410012484,0,0,0.003460601205006242,0,0,0,0,0.013842404820024967,0.013842404820024967,0,-0.027684809640049934,0,0,0.013842404820024967,0.21801787614822388,0,0,-0.024224208667874336,0,0,0.006921202410012484,0,0,0,0,0,0.041527215391397476,0,-0.013842404820024967,0,0,0,0,0,0,0,0,0,0.013842404820024967,0,0,0,0,0,0.006921202410012484,0,0,0,0,0,0,0,0,-0.020763607695698738,0,0,0.003460601205006242,0,0,-0.006921202410012484,0,0,0.003460601205006242,0,-0.013842404820024967,-0.03460601344704628,0,0.013842404820024967,0,0,0,-0.006921202410012484,0,0,0.003460601205006242,0,0,-0.020763607695698738,0,0.013842404820024967,0,0,0,-0.013842404820024967,0,0,0.003460601205006242,0,-0.013842404820024967,-0.006921202410012484,0,0,0.01730300672352314,0,0,-0.003460601205006242,0,0.013842404820024967,0,0,0,-0.013842404820024967,0,0.013842404820024967,0.010381803847849369,0,0,-0.01730300672352314,0,0.12458164244890213,0.006921202410012484,0,0,-0.003460601205006242,0,0.013842404820024967,0,0,0,0,0,0.1799512654542923,0.006921202410012484,0,-0.013842404820024967,-0.006921202410012484,0,0.013842404820024967,0.010381803847849369,0,-0.013842404820024967,-0.006921202410012484,0,0,0.003460601205006242,0,-0.013842404820024967,0,0,0.013842404820024967,0.020763607695698738,0,-0.013842404820024967,0,0,0.027684809640049934,0,0,0,0,0,0,0.006921202410012484,0,0,0,0,0,0.003460601205006242,0,0,-0.006921202410012484,0,0,0.006921202410012484,0,-0.22147847712039948,-0.010381803847849369,0,0,0,0,0,-0.003460601205006242,0,0.013842404820024967,0.006921202410012484,0,0,-0.013842404820024967,0,0,0,0,0,-0.010381803847849369,0,0.7890170812606812,0,0,-0.041527215391397476,-0.010381803847849369,0,0,0.006921202410012484,0,0,-0.003460601205006242,0,0,0.006921202410012484,0,0,0,0,0,0.06921202689409256,0,0,0,0,0,0.006921202410012484,0,0,0,0,0,0.09343623369932175,0,0,-0.013842404820024967,0,0,0.010381803847849369,0,0,-0.006921202410012484,0,0.013842404820024967,0,0,0,-0.006921202410012484,0,0.013842404820024967,0.006921202410012484,0,-0.027684809640049934,-0.010381803847849369,0,0,0.013842404820024967,0,0,0,0,0.013842404820024967,0,0,0,0,0,0,0,0,-0.027684809640049934,0,0,0.013842404820024967,0,0,-0.027684809640049934,-0.11073923856019974,0,0.013842404820024967,0,0,-0.013842404820024967,0,0,0,0.006921202410012484,0,-0.05536961928009987,-0.003460601205006242,0,0.013842404820024967,0.003460601205006242,0,-0.013842404820024967,0,0,0,0.3945085406303406,0,-0.013842404820024967,-0.020763607695698738,0,0,0.003460601205006242,0,0,0,0,0.027684809640049934,0,0,0,-0.003460601205006242,0,0.041527215391397476,0,0,-0.027684809640049934,0,0,0.013842404820024967,0.003460601205006242,0,0,0,0,0.08305443078279495,0.003460601205006242,0,0,0,0,0,0.031145410612225533,0,0,0,0,0.027684809640049934,0.010381803847849369,0,0,0,0,0.013842404820024967,0.05190901830792427,0,0,-0.01730300672352314,0,0,0.003460601205006242,0,-0.041527215391397476,-0.003460601205006242,0,0,0.006921202410012484,0,-0.013842404820024967,-0.003460601205006242,0,0,0.003460601205006242,0,-0.05536961928009987,-0.01730300672352314,0,0,0.013842404820024967,0,-0.013842404820024967,-0.013842404820024967,0,0,0.006921202410012484,0,-0.041527215391397476,-0.006921202410012484,0,0,0,0,-0.013842404820024967,-0.027684809640049934,0,0,0.006921202410012484,0,0,-0.062290821224451065,0],"text":";; Using = where possible; using .define where ca65 complains\n\n.ifndef DEFINES_S\n\n.define DEFINES_S 1\n\n.include \"c64.inc\"\n\n; ************** not configurable *************\n\n.define guest_screen_physical_width 32\n.define guest_screen_physical_height 16\n.define guest_screen_offset_x 4\n.define guest_screen_offset_y 0\n.define chrome_height 8\nvic_bank_base = $c000\n\n; ************** configurable ****************\n\n.define title_length 16\n.define max_bundled_roms 100\n\ndefault_rom_index = 0\ndefault_pixel_style_index = 0\n\nchrome_bgcolor = BLACK\ndefault_screen_bgcolor = PURPLE\ndefault_screen_fgcolor = LIGHT_GREEN\nenabled_button_color = WHITE\ndisabled_button_color = DARK_GRAY\npaused_indicator_color = YELLOW\nindicator_on_color = GREEN\nindicator_off_color = RED\npixel_style_indicator_color = LIGHT_GREEN\nchrome_ui_key_color = LIGHT_GRAY\nchrome_text_color = WHITE\n\nkey_delay_frame_count = 18          ; ~ 1/3 second\n\n.endif\n","sourcePath":"external/github.com/kschuetz_c64-chip8/include/defines.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/defines.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/chrome.s","language":"asm","vector":[0,0.0035565884318202734,0,0,-0.008891470730304718,0,0.021339530125260353,0.008891470730304718,0,0,-0.002667441265657544,0,0.03556588292121887,0.024006972089409828,0,-0.06401859223842621,-0.009780618362128735,0,0.13515035808086395,0.10669765621423721,0,-0.02489611878991127,-0.018672090023756027,0,0.03556588292121887,0.042679060250520706,0,-0.017782941460609436,-0.004445735365152359,0,0.0035565884318202734,0.22228677570819855,0,-0.014226353727281094,-0.012448059394955635,0,0,0.010669765062630177,0,-0.014226353727281094,-0.005334882531315088,0,0.010669765062630177,0.013337207026779652,0,-0.010669765062630177,-0.032009296119213104,0,0,0.026674414053559303,0,-0.0035565884318202734,-0.015115500427782536,0,0.02489611878991127,0.02045038342475891,0,-0.042679060250520706,-0.02489611878991127,0,0.014226353727281094,0.010669765062630177,0,-0.017782941460609436,-0.013337207026779652,0,0.014226353727281094,0.012448059394955635,0,-0.017782941460609436,-0.02489611878991127,0,0.03912247344851494,0.016004648059606552,0,-0.0035565884318202734,-0.009780618362128735,0,0.014226353727281094,0.0017782942159101367,0,-0.03556588292121887,-0.0062240296974778175,0,0.010669765062630177,0.12270230054855347,0,-0.03912247344851494,-0.03023100085556507,0,0.014226353727281094,0.0035565884318202734,0,-0.017782941460609436,-0.014226353727281094,0,0.056905414909124374,0.005334882531315088,0,-0.010669765062630177,-0.005334882531315088,0,0.03912247344851494,0.010669765062630177,0,-0.014226353727281094,-0.008891470730304718,0,0.010669765062630177,0.02045038342475891,0,-0.014226353727281094,-0.04090076684951782,0,0.010669765062630177,0.06846432387828827,0,-0.04623565077781677,-0.016004648059606552,0,0.010669765062630177,0.022228676825761795,0,-0.02489611878991127,-0.009780618362128735,0,0.2809704840183258,0.004445735365152359,0,-0.017782941460609436,-0.011558912694454193,0,0,0.051570530980825424,0,-0.010669765062630177,-0.012448059394955635,0,0.007113176863640547,0.005334882531315088,0,-0.007113176863640547,-0.005334882531315088,0,0.021339530125260353,0.032898444682359695,0,-0.017782941460609436,-0.008002324029803276,0,0.014226353727281094,0.014226353727281094,0,-0.0035565884318202734,-0.024006972089409828,0,0,0.007113176863640547,0,-0.007113176863640547,-0.023117825388908386,0,0.1422635316848755,0.01956123672425747,0,-0.010669765062630177,-0.015115500427782536,0,0.0035565884318202734,0.028452707454562187,0,-0.06046200171113014,-0.012448059394955635,0,0.007113176863640547,0.009780618362128735,0,-0.007113176863640547,-0.022228676825761795,0,0,0.0062240296974778175,0,-0.0035565884318202734,-0.025785265490412712,0,0.07468836009502411,0.010669765062630177,0,-0.0035565884318202734,-0.009780618362128735,0,0.014226353727281094,0.028452707454562187,0,-0.032009296119213104,-0.0062240296974778175,0,0.17071624100208282,0.08091238886117935,0,-0.017782941460609436,-0.01956123672425747,0,0.625959575176239,0.007113176863640547,0,0,-0.009780618362128735,0,0.028452707454562187,0.005334882531315088,0,0,-0.023117825388908386,0,0.05334882810711861,0.010669765062630177,0,-0.014226353727281094,-0.012448059394955635,0,0.007113176863640547,0.14937672019004822,0,-0.010669765062630177,-0.02489611878991127,0,0.010669765062630177,0.03378758952021599,0,-0.014226353727281094,-0.011558912694454193,0,0.021339530125260353,0.012448059394955635,0,-0.017782941460609436,-0.008002324029803276,0,0.042679060250520706,0.011558912694454193,0,-0.04979223757982254,-0.012448059394955635,0,0.03556588292121887,0.007113176863640547,0,-0.032009296119213104,-0.005334882531315088,0,0.007113176863640547,0.002667441265657544,0,-0.017782941460609436,-0.0062240296974778175,0,0,0.07113176584243774,0,-0.021339530125260353,-0.0062240296974778175,0,0,0.008002324029803276,0,-0.03556588292121887,-0.04090076684951782,0,0.021339530125260353,0.007113176863640547,0,-0.021339530125260353,-0.008002324029803276,0,0,0.0035565884318202734,0,-0.03556588292121887,-0.0062240296974778175,0,0.010669765062630177,0.047124795615673065,0,-0.03556588292121887,-0.002667441265657544,0,0.0035565884318202734,0.010669765062630177,0,-0.014226353727281094,-0.02489611878991127,0,0.017782941460609436,0.08802556246519089,0,-0.0035565884318202734,-0.018672090023756027,0,0.010669765062630177,0.3165363669395447,0,-0.017782941460609436,-0.004445735365152359,0,0.2062821239233017,0.028452707454562187,0,-0.021339530125260353,-0.002667441265657544,0,0,0.03645503148436546,0,0,-0.010669765062630177,0,0.13159377872943878,0.0062240296974778175,0,-0.02489611878991127,-0.008891470730304718,0,0.007113176863640547,0.008002324029803276,0,-0.010669765062630177,-0.018672090023756027,0,0,0.013337207026779652,0,-0.056905414909124374,-0.015115500427782536,0,0.04979223757982254,0.09158214926719666,0,-0.02489611878991127,-0.02934185415506363,0,0.03556588292121887,0.017782941460609436,0,-0.042679060250520706,-0.018672090023756027,0,0.010669765062630177,0.005334882531315088,0,-0.017782941460609436,-0.010669765062630177,0,0.0035565884318202734,0.005334882531315088,0,-0.02489611878991127,-0.015115500427782536,0,0.014226353727281094,0.0035565884318202734,0,-0.0035565884318202734,-0.018672090023756027,0,0,0.010669765062630177,0,-0.0035565884318202734,-0.012448059394955635,0,0.24540460109710693,0.03556588292121887,0,-0.04979223757982254,-0.02045038342475891,0,0.007113176863640547,0.0062240296974778175,0,-0.010669765062630177,-0.032898444682359695,0],"text":".include \"common.s\"\n\n.export build_chrome\n.export display_rom_title\n.export sync_bgcolor_indicator\n.export sync_fgcolor_indicator\n.export sync_key_delay_indicator\n.export sync_paused_indicator\n.export sync_pixel_style_indicator\n.export sync_sound_indicator\n\n.import active_pixel_style\n.import bundle_count\n.import bundle_count_decimal\n.import bundle_index_high\n.import bundle_index_low\n.import chrome_color_origin\n.import chrome_origin\n.import decimal_table_high\n.import decimal_table_low\n.import host_screen\n.import is_guest_key_pressed\n.importzp irq_zp0\n.importzp key_delay_mode\n.importzp paused\n.importzp pixel_style_representative\n.importzp screen_bgcolor\n.importzp screen_fgcolor\n.importzp sound_enabled\n.importzp zp0\n.importzp zp1\n.importzp zp2\n.importzp zp3\n.importzp zp4\n.importzp zp5\n.importzp zp6\n\nchrome_text_column_1 = guest_screen_offset_x + 7\nchrome_text_origin = 120 + chrome_text_column_1\nchrome_text_screen_origin := chrome_origin + chrome_text_origin\nchrome_text_color_origin := chrome_color_origin + chrome_text_origin\n\n.segment \"INITCODE\"\n\n.proc build_chrome\n            ldx #180\n            ldy #chrome_text_color    ; color ram\n@1:         lda #0        ; screen ram\n            sta chrome_origin - 1, x\n            sta chrome_origin + 179, x\n            tya\n            sta chrome_color_origin - 1, x\n            sta chrome_color_origin + 179, x\n            dex\n            bne @1\n\n            lda #chrome_bgcolor\n            ldx #79\n:           sta chrome_color_origin, x\n            dex\n            bpl :-\n\n            ldy #27\n@2:         lda chrome_line_1, y\n            sta chrome_text_screen_origin, y\n            lda chrome_line_2, y\n            sta chrome_text_screen_origin + 40, y\n            lda chrome_line_3, y\n            sta chrome_text_screen_origin + 80, y\n            lda chrome_line_4, y\n            sta chrome_text_screen_origin + 120, y\n            lda chrome_line_5, y\n            sta chrome_text_screen_origin + 160, y\n            dey\n            bpl @2\n\n            lda #chrome_ui_key_color\n            .repeat 4, i\n                sta chrome_text_color_origin + 40 * i\n                sta chrome_text_color_origin + 40 * i + 1\n            .endrepeat\n\n            .repeat 5, i\n                sta chrome_text_color_origin + 40 * i + 12\n                sta chrome_text_color_origin + 40 * i + 13\n            .endrepeat\n\n            lda #pixel_style_indicator_color\n            sta pixel_style_indicator_color_addr\n            sta pixel_style_indicator_color_addr + 1\n\n            jsr sync_pixel_style_indicator\n            jsr sync_bgcolor_indicator\n            jsr sync_fgcolor_indicator\n            jsr sync_key_delay_indicator\n            jsr sync_sound_indicator\n            jsr sync_paused_indicator\n            rts\n.endproc\n\n.code\n\n;; zp0:zp1 - top row\n;; zp2:zp3 - bottom row\n;; Y - offset\n;; A - char\n.macro output_big_char\n            sta (zp0), y\n            ora #128\n            sta (zp2), y\n.endmacro\n\nrom_title_origin = chrome_origin + guest_screen_offset_x + 7\n\n;; A - rom index\n.proc display_rom_title\n            tax   ; save rom index\n            tay\n\n            store16 zp0, rom_title_origin\n            store16 zp2,(rom_title_origin + 40)\n            clc\n            lda bundle_index_low, y\n            adc #<BundleNode::title\n            sta zp4\n            lda bundle_index_high, y\n            adc #>BundleNode::title\n            sta zp5\n\n            ldy #0\n            inx\n            jsr output_big_decimal   ; show rom index + 1\n\n            lda #47       ; slash\n            output_big_char\n            iny\n\n            ldx bundle_count\n            jsr output_big_decimal\n\n            lda #58       ; colon\n            output_big_char\n            iny\n            lda #32       ; space\n            output_big_char\n            iny\n\n              ;; zp0:zp1 += y\n            clc\n            tya\n            adc zp0\n            sta zp0\n            lda #0\n            adc zp1\n            sta zp1\n\n            clc\n            tya\n            adc zp2\n            sta zp2\n            lda #0\n            adc zp3\n            sta zp3\n\n            ldy #0\n@title_loop:\n            lda (zp4), y\n            output_big_char\n            iny\n            cpy #title_length\n            bne @title_loop\n            rts\n.endproc\n\n;; X - value\n;; Y - next char position; return value contains new next char position\n.proc output_big_decimal\n            sty zp6\n            lda decimal_table_high, x\n            and #15\n            beq @tens\n            tay\n            lda decimal_digit_chars, y\n            ldy zp6\n            output_big_char\n            iny\n            sty zp6\n   \n@tens:      lda decimal_table_low, x\n            lsr a\n            lsr a\n            lsr a\n            lsr a\n            beq @ones\n            tay\n            lda decimal_digit_chars, y\n            ldy zp6\n            output_big_char\n            iny\n            sty zp6\n@ones:      lda decimal_table_low, x\n            and #15\n            tay\n            lda decimal_digit_chars, y\n            ldy zp6\n            output_big_char\n            iny\n            rts\n.endproc\n\nkey_delay_indicator_color_addr := chrome_text_color_origin + 26\npixel_style_indicator_color_addr := key_delay_indicator_color_addr + 40\nbgcolor_indicator_color_addr := pixel_style_indicator_color_addr + 40\nfgcolor_indicator_color_addr := bgcolor_indicator_color_addr + 40\nsound_indicator_color_addr := fgcolor_indicator_color_addr + 40\npaused_indicator_color_addr := chrome_text_color_origin + 163\n\nkey_delay_indicator_addr := chrome_text_screen_origin + 26\npixel_style_indicator_addr := key_delay_indicator_addr + 40\nsound_indicator_addr := pixel_style_indicator_addr + 120\n\n.proc sync_pixel_style_indicator\n            lda active_pixel_style\n            clc\n            adc #pixel_style_representative\n            sta pixel_style_indicator_addr\n            sta pixel_style_indicator_addr + 1\n            rts\n.endproc\n\n.proc sync_bgcolor_indicator\n            lda screen_bgcolor\n            sta bgcolor_indicator_color_addr\n            sta bgcolor_indicator_color_addr + 1\n            rts\n.endproc\n\n.proc sync_fgcolor_indicator\n            lda screen_fgcolor\n            sta fgcolor_indicator_color_addr\n            sta fgcolor_indicator_color_addr + 1\n            rts\n.endproc\n\n.proc sync_paused_indicator\n            lda paused\n            beq @off\n            lda #paused_indicator_color\n            .byte $2c   ; BIT instruction\n@off:       lda #chrome_bgcolor\n            ldy #6\n@loop:      sta paused_indicator_color_addr, y\n            dey\n            bpl @loop\n            rts\n.endproc\n\n.macro sync_on_off_indicator source, screen_mem, color_mem\n            lda source\n            beq @off1\n            ldx #77\n            .byte $2c   ; BIT instruction\n@off1:      ldx #79\n            stx screen_mem\n            inx\n            stx screen_mem + 1\n\n            lda source\n            beq @off2\n            lda #indicator_on_color\n            .byte $2c   ; BIT instruction\n@off2:      lda #indicator_off_color\n            sta color_mem\n            sta color_mem + 1\n            rts\n.endmacro\n\n.proc sync_key_delay_indicator\n            sync_on_off_indicator key_delay_mode, key_delay_indicator_addr, key_delay_indicator_color_addr\n.endproc\n\n.proc sync_sound_indicator\n            sync_on_off_indicator sound_enabled, sound_indicator_addr, sound_indicator_color_addr\n.endproc\n\n.rodata\n\ndecimal_digit_chars:\n            .byte 48, 49, 50, 51, 52, 53, 54, 55, 56, 57\n\n.segment \"INITDATA\"\n\nchrome_line_1:\n            .byte 65, 66, 0, 210, 197, 211, 197, 212, 0, 0, 0, 0\n            .byte 70, 71, 203, 197, 217, 0, 196, 197, 204, 193, 217, 0, 0, 0, 0, 0\nchrome_line_2:\n            .byte 65, 67, 0, 208, 210, 197, 214, 0, 210, 207, 205, 0\n            .byte 72, 71, 208, 201, 216, 197, 204, 0, 211, 212, 217, 204, 197, 0, 0, 0\nchrome_line_3:\n            .byte 65, 68, 0, 206, 197, 216, 212, 0, 210, 207, 205, 0\n            .byte 73, 71, 194, 199, 0, 195, 207, 204, 207, 210, 0, 0, 0, 0, 76, 76\nchrome_line_4:\n            .byte 65, 69, 0, 208, 193, 213, 211, 197, 0, 0, 0, 0\n            .byte 74, 71, 198, 199, 0, 195, 207, 204, 207, 210, 0, 0, 0, 0, 76, 76\nchrome_line_5:\n            .byte 0, 0, 0, 81, 82, 83, 84, 85, 86, 87, 0, 0\n            .byte 75, 71, 211, 207, 213, 206, 196, 0, 0, 0, 0, 0, 0, 0, 0, 0\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/chrome.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/chrome.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/colors.s","language":"asm","vector":[0,0,0,0,-0.03320331126451492,0,0,0,0,0,0,0,0.06640662252902985,0,0,0,-0.06640662252902985,0,0.09960993379354477,0,0,-0.03320331126451492,0,0,0.06640662252902985,0.00830082781612873,0,0,0,0,0,0.1328132450580597,0,0,0,0,0,0,0,0,-0.01660165563225746,0,0,0,0,0,-0.01660165563225746,0,0,0.01660165563225746,0,0,0,0,0,0,0,0,-0.16601654887199402,0,0,0,0,0,0,0,0,0,0,0,-0.049804966896772385,0,0.09960993379354477,0.049804966896772385,0,0,-0.03320331126451492,0,0,0,0,0,0,0,0,0.06640662252902985,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.03320331126451492,0,0,0.041504137217998505,0,0,-0.00830082781612873,0,0.06640662252902985,0.049804966896772385,0,0,-0.03320331126451492,0,0,0.03320331126451492,0,0,0,0,0.46484634280204773,0,0,-0.03320331126451492,-0.03320331126451492,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.06640662252902985,0,0,0,0,0,-0.03320331126451492,-0.00830082781612873,0,0,0,0,0,-0.00830082781612873,0,0.1328132450580597,0.00830082781612873,0,0,0,0,0,0.049804966896772385,0,0,-0.08300827443599701,0,0,0,0,0,0,0,0,0,0,0,-0.024902483448386192,0,0,0.024902483448386192,0,0,-0.01660165563225746,0,0,0,0,0,0,0,0.03320331126451492,0.03320331126451492,0,0,0,0,0.5312529802322388,0,0,0,0,0,0,0.03320331126451492,0,0,0,0,0,0,0,0,0,0,0,0.24902483820915222,0,0,-0.01660165563225746,0,0,0.024902483448386192,0,0,-0.00830082781612873,0,0,0.01660165563225746,0,0,0,0,0,0,0,0,-0.03320331126451492,0,0,0,0,0,-0.01660165563225746,0,0,0,0,0,0,0,0,0.06640662252902985,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.1328132450580597,0,0,0.03320331126451492,0.024902483448386192,0,-0.03320331126451492,0,0,0,0,0,-0.06640662252902985,0,0,0,0.01660165563225746,0,0,0,0,0,0.2656264901161194,0,-0.1328132450580597,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.01660165563225746,0,-0.03320331126451492,0,0,0,0,0,-0.03320331126451492,0,0,0.03320331126451492,0.11621158570051193,0,0,-0.00830082781612873,0,0,0,0,-0.33203309774398804,0,0,0,0,0,0,0,0,0,0,0,-0.09960993379354477,-0.01660165563225746,0,0.09960993379354477,0,0,-0.06640662252902985,-0.00830082781612873,0,0,0,0,0,0,0,0.1328132450580597,0.03320331126451492,0,0,-0.06640662252902985,0,0,0.01660165563225746,0,0,-0.01660165563225746,0],"text":".include \"common.s\"\n\n.export init_colors\n.export title_bar_colors\n.exportzp screen_bgcolor\n.exportzp screen_fgcolor\n\n.zeropage\n\nscreen_bgcolor:     .res 1\nscreen_fgcolor:     .res 1\n\n.segment \"INITCODE\"\n\n.proc init_colors\n            lda #default_screen_bgcolor\n            sta screen_bgcolor\n            lda #default_screen_fgcolor\n            sta screen_fgcolor\n            rts\n.endproc\n\n.rodata\n\ntitle_bar_colors:\n            .byte 11, 12, 15, 1, 15, 1, 1, 1, 1, 1, 1, 15, 1, 15, 12, 11, chrome_bgcolor\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/colors.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/colors.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/core.s","language":"asm","vector":[0,0.01273396797478199,0,0,-0.01637224480509758,0,0.10187174379825592,0.0072765531949698925,0,0,-0.0018191382987424731,0,0.13097795844078064,0.0072765531949698925,0,-0.3274448812007904,-0.02001051977276802,0,0.2983386814594269,0.02364879660308361,0,-0.02910621277987957,0,0,0.02182965911924839,0.05093587189912796,0,0,-0.0036382765974849463,0,0.014553106389939785,0.04729759320616722,0,0,-0.03820190206170082,0,0,0,0,-0.0072765531949698925,-0.01637224480509758,0,0,0.02364879660308361,0,0,-0.0054574147798120975,0,0.0072765531949698925,0.0072765531949698925,0,0,-0.0054574147798120975,0,0.08731863647699356,0.0072765531949698925,0,-0.05821242555975914,-0.03456362709403038,0,0,0.02364879660308361,0,0,-0.0090956911444664,0,0.02182965911924839,0,0,0,-0.02546793594956398,0,0.181913822889328,0.02910621277987957,0,-0.02182965911924839,-0.014553106389939785,0,0.02182965911924839,0.014553106389939785,0,-0.13825450837612152,-0.03092535026371479,0,0.0072765531949698925,0.15280760824680328,0,-0.0363827645778656,-0.0363827645778656,0,0,0.010914829559624195,0,0,-0.01273396797478199,0,0.04365931823849678,0,0,0,-0.010914829559624195,0,0.0072765531949698925,0.05093587189912796,0,-0.02910621277987957,-0.0072765531949698925,0,0.0072765531949698925,0.06730811297893524,0,0,-0.19282865524291992,0,0,0.1546267569065094,0,-0.014553106389939785,-0.0181913822889328,0,0.02910621277987957,0.01273396797478199,0,-0.0363827645778656,0,0,0.5020821690559387,0.0072765531949698925,0,0,-0.0018191382987424731,0,0,0.0018191382987424731,0,-0.014553106389939785,-0.0036382765974849463,0,0.0072765531949698925,0.02182965911924839,0,0,0,0,0,0.02182965911924839,0,-0.014553106389939785,-0.010914829559624195,0,0.02182965911924839,0.04365931823849678,0,-0.0363827645778656,-0.0363827645778656,0,0.014553106389939785,0,0,-0.04365931823849678,0,0,0.06548897922039032,0.014553106389939785,0,-0.014553106389939785,0,0,0,0.09459518641233444,0,0,-0.0272870734333992,0,0.0072765531949698925,0.02182965911924839,0,-0.0363827645778656,-0.06912725418806076,0,0.014553106389939785,0.0036382765974849463,0,-0.0072765531949698925,-0.0272870734333992,0,0.02910621277987957,0.01273396797478199,0,-0.06548897922039032,-0.0072765531949698925,0,0.08004207909107208,0.0272870734333992,0,0,-0.01273396797478199,0,0.02910621277987957,0.07640380412340164,0,-0.014553106389939785,-0.02910621277987957,0,0.04365931823849678,0.0072765531949698925,0,-0.06548897922039032,-0.0054574147798120975,0,0,0,0,-0.0072765531949698925,-0.0072765531949698925,0,0.09459518641233444,0.04002103954553604,0,-0.02182965911924839,-0.0181913822889328,0,0,0.28378555178642273,0,-0.02182965911924839,-0.0818612203001976,0,0,0.07458467036485672,0,-0.0072765531949698925,-0.014553106389939785,0,0.0072765531949698925,0.0090956911444664,0,-0.0363827645778656,0,0,0,0.0036382765974849463,0,-0.02910621277987957,-0.0072765531949698925,0,0.014553106389939785,0.010914829559624195,0,0,-0.02001051977276802,0,0.014553106389939785,0.0072765531949698925,0,-0.02182965911924839,-0.02182965911924839,0,0.02910621277987957,0.03456362709403038,0,-0.02910621277987957,-0.0072765531949698925,0,0.014553106389939785,0.02182965911924839,0,-0.0072765531949698925,-0.014553106389939785,0,0,0.0036382765974849463,0,-0.04365931823849678,-0.0181913822889328,0,0,0.01273396797478199,0,-0.02910621277987957,-0.0036382765974849463,0,0.0072765531949698925,0.06003156304359436,0,-0.11642485111951828,-0.03820190206170082,0,0.02182965911924839,0.045478455722332,0,-0.014553106389939785,-0.03456362709403038,0,0.0072765531949698925,0.01637224480509758,0,0,-0.01637224480509758,0,0,0.02182965911924839,0,-0.0072765531949698925,-0.03274448961019516,0,0.0072765531949698925,0.010914829559624195,0,0,-0.0036382765974849463,0,0.08731863647699356,0.04911673441529274,0,0,-0.0181913822889328,0,0.0727655291557312,0.0018191382987424731,0,-0.04365931823849678,-0.010914829559624195,0,0,0,0,-0.02910621277987957,-0.0072765531949698925,0,0,0.010914829559624195,0,0,-0.0272870734333992,0,0.014553106389939785,0.12552054226398468,0,0,-0.014553106389939785,0,0.014553106389939785,0.0072765531949698925,0,-0.06548897922039032,-0.0036382765974849463,0,0.04365931823849678,0.0090956911444664,0,0,-0.010914829559624195,0,0,0.014553106389939785,0,-0.0363827645778656,-0.0181913822889328,0,0.05093587189912796,0.01273396797478199,0,-0.02910621277987957,-0.01273396797478199,0,0.02182965911924839,0.0036382765974849463,0,-0.05093587189912796,-0.03274448961019516,0,0.2910621166229248,0.01637224480509758,0,-0.05821242555975914,-0.0181913822889328,0,0.014553106389939785,0.0036382765974849463,0,-0.02182965911924839,-0.05821242555975914,0],"text":";; Contains the main loop that handles user actions and repeatedly calls the CPU to execute instructions.\n\n.include \"common.s\"\n\n.export init_core\n.export main_loop\n.export set_ui_action\n.exportzp paused\n.exportzp ui_action\n\n.import active_bundle\n.import bundle_count\n.import cycle_pixel_style\n.import exec\n.import reset\n.import sync_bgcolor_indicator\n.import sync_fgcolor_indicator\n.import sync_key_delay_indicator\n.import sync_paused_indicator\n.import sync_pixel_style_indicator\n.import sync_sound_indicator\n.import update_screen_color\n.importzp frame_counter\n.importzp key_delay_mode\n.importzp screen_bgcolor\n.importzp screen_fgcolor\n.importzp sound_enabled\n.importzp ui_key_events\n\n.zeropage\n\nui_action:          .res 1\npaused:             .res 1\nui_action_last_frame:\n                    .res 1\n\n.segment \"INITCODE\"\n\n.proc init_core\n            lda #0\n            sta ui_action\n            sta paused\n            lda #$ff\n\n            rts\n.endproc\n\n.code\n\n.proc main_loop\n            nop\n            nop\n            nop\n            ; do not check ui actions more than once per frame\n            lda frame_counter\n            cmp ui_action_last_frame\n            beq @ui_work_done\n            sta ui_action_last_frame\n\n            ldy #UIAction::none\n            lda ui_action\n            beq @ui_work_done\n            sty ui_action\n            asl a\n            tay\n            lda action_handlers, y\n            sta @action_target + 1\n            lda action_handlers + 1, y\n            sta @action_target + 2\n@action_target:\n            jsr no_action    ; self modified target\n\n@ui_work_done:\n            lda paused\n            bne main_loop\n\n            jsr exec                    ; execute a CPU instruction\n            jmp main_loop\n.endproc\n\n.proc no_action\n            rts\n.endproc\n\n.proc handle_bgcolor_next\n            lda screen_bgcolor\n            clc\n            adc #1\n            and #15\n            sta screen_bgcolor\n            cmp screen_fgcolor\n            beq handle_bgcolor_next     ; if same as fgcolor, increment again\n            jmp sync_bgcolor_indicator\n.endproc\n\n.proc handle_fgcolor_next\n            lda screen_fgcolor\n            clc\n            adc #1\n            and #15\n            sta screen_fgcolor\n            cmp screen_bgcolor\n            beq handle_fgcolor_next     ; if same as bgcolor, increment again\n            jsr sync_fgcolor_indicator\n            jmp update_screen_color\n.endproc\n\n.proc handle_load_next\n            lda active_bundle\n            clc\n            adc #01\n            cmp bundle_count\n            bmi @ok\n            lda #0                      ; wrap around to zero\n@ok:        jmp reset\n.endproc\n\n.proc handle_load_prev\n            lda active_bundle\n            sec\n            sbc #01\n            bpl @ok\n            sec\n            lda bundle_count\n            sbc #01\n@ok:        jmp reset\n.endproc\n\n.proc handle_reset\n            lda active_bundle\n            jmp reset\n.endproc\n\n.proc handle_pause\n            lda paused\n            eor #$ff\n            sta paused\n            jmp sync_paused_indicator\n.endproc\n\n.proc handle_toggle_key_repeat\n            lda key_delay_mode\n            eor #$ff\n            sta key_delay_mode\n            jmp sync_key_delay_indicator\n.endproc\n\n.proc handle_toggle_sound\n            lda sound_enabled\n            eor #$ff\n            sta sound_enabled\n            jmp sync_sound_indicator\n.endproc\n\n.proc handle_cycle_pixel_style\n            jsr cycle_pixel_style\n            jmp sync_pixel_style_indicator\n.endproc\n\n.proc set_ui_action\n            lda ui_key_events\n            beq @bit8\n            lsr a\n            bcc @bit1\n@bit0:      lda #UIAction::reset\n            bcs @done\n@bit1:      lsr a\n            bcc @bit2\n            lda #UIAction::load_prev\n            bcs @done\n@bit2:      lsr a\n            bcc @bit3\n            lda #UIAction::load_next\n            bcs @done\n@bit3:      lsr a\n            bcc @bit4\n            lda #UIAction::pause\n            bcs @done\n@bit4:      lsr a\n            bcc @bit5\n            lda #UIAction::bgcolor_next\n            bcs @done\n@bit5:      lsr a\n            bcc @bit6\n            lda #UIAction::fgcolor_next\n            bcs @done\n@bit6:      lsr a\n            bcc @bit7\n            lda #UIAction::pixel_style_next\n            bcs @done\n@bit7:      lsr a\n            bcc @bit8\n            lda #UIAction::toggle_key_repeat\n            bcs @done\n@bit8:      lda ui_key_events + 1\n            lsr a\n            bcc @none\n            lda #UIAction::toggle_sound\n            bcs @done\n   \n@none:      lda #UIAction::none\n@done:      sta ui_action\n            rts\n.endproc\n\n.rodata\n\naction_handlers:\n            .addr no_action   ; none\n            .addr handle_reset\n            .addr handle_load_prev\n            .addr handle_load_next\n            .addr handle_pause\n            .addr handle_bgcolor_next\n            .addr handle_fgcolor_next\n            .addr handle_cycle_pixel_style\n            .addr handle_toggle_key_repeat\n            .addr handle_toggle_sound\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/core.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/core.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/decimal.s","language":"asm","vector":[0,0,0,0,0,0,0,0.018145116046071053,0,0,-0.009072558023035526,0,0.14516092836856842,0,0,-0.07258046418428421,0,0,0.10887069255113602,0,0,-0.036290232092142105,0,0,0.10887069255113602,0.018145116046071053,0,0,-0.018145116046071053,0,0,0.16330604255199432,0,0,0,0,0,0,0,0,-0.036290232092142105,0,0,0,0,0,0,0,0,0,0,0,-0.04536278918385506,0,0,0,0,0,0,0,0,0,0,0,-0.009072558023035526,0,0,0,0,0,-0.10887069255113602,0,0.036290232092142105,0.036290232092142105,0,0,-0.009072558023035526,0,0,0,0,-0.07258046418428421,-0.036290232092142105,0,0,0.16330604255199432,0,-0.036290232092142105,-0.09072557836771011,0,0,0,0,-0.10887069255113602,0,0,0.07258046418428421,0,0,0,0,0,0.036290232092142105,0,0,0,-0.05443534627556801,0,0,0.07258046418428421,0,0,-0.04536278918385506,0,0.14516092836856842,0.05443534627556801,0,-0.036290232092142105,-0.018145116046071053,0,0.07258046418428421,0.06350789964199066,0,0,0,0,0.4717729985713959,0,0,-0.036290232092142105,0,0,0,0,0,-0.036290232092142105,0,0,0,0,0,0,-0.009072558023035526,0,0,0.07258046418428421,0,0,0,0,0.07258046418428421,0,0,0,-0.018145116046071053,0,0,0,0,0,0,0,0.036290232092142105,0,0,0,0,0,0,0.018145116046071053,0,0,0,0,0,0,0,0,-0.036290232092142105,0,0,0,0,-0.036290232092142105,-0.07258046418428421,0,0,0,0,0,-0.05443534627556801,0,0,0.036290232092142105,0,0,-0.018145116046071053,0,0.07258046418428421,0.09979813545942307,0,0,-0.04536278918385506,0,0.07258046418428421,0,0,0,0,0,0,0.07258046418428421,0,0,-0.018145116046071053,0,0,0.036290232092142105,0,0,0,0,0,0.27217674255371094,0,-0.18145115673542023,-0.036290232092142105,0,0,0.027217673137784004,0,0,-0.027217673137784004,0,0,0.027217673137784004,0,-0.036290232092142105,0,0,0,0,0,0,0,0,0.14516092836856842,0.036290232092142105,0,-0.036290232092142105,0,0,0,0,0,0,0,0,0,0.018145116046071053,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.21774138510227203,-0.018145116046071053,0,0,0.009072558023035526,0,-0.036290232092142105,0,0,0,0,0,0,-0.018145116046071053,0,0.036290232092142105,0.036290232092142105,0,0,-0.009072558023035526,0,0,0.036290232092142105,0,0,-0.027217673137784004,0,0,0.018145116046071053,0,0,0,0,0,0.009072558023035526,0,-0.036290232092142105,0,0,0.29032185673713684,0,0,0,-0.09072557836771011,0,0,0.036290232092142105,0,-0.07258046418428421,-0.009072558023035526,0,0,0.018145116046071053,0,0,-0.018145116046071053,0,0,0.11794324964284897,0,0,-0.009072558023035526,0,0,0.07258046418428421,0,0,-0.027217673137784004,0,0,0,0,0,0,0,0,0,0,-0.21774138510227203,0,0,0,0.018145116046071053,0,0,0,0,0,0,0,-0.07258046418428421,0,0,0.32661208510398865,0.009072558023035526,0,-0.18145115673542023,-0.10887069255113602,0,0,0,0,0,-0.018145116046071053,0],"text":".include \"common.s\"\n\n.export build_decimal_table\n.export decimal_table_high\n.export decimal_table_low\n\n.importzp zp0\n.importzp zp1\n\n.segment \"INITCODE\"\n\n.proc build_decimal_table\n            ldx #0\n            sed\n            lda #0\n            sta zp0\n            sta zp1\n      \n@loop:      clc\n            lda zp0\n            sta decimal_table_low, x\n            adc #1\n            sta zp0\n            lda zp1\n            sta decimal_table_high, x\n            adc #0\n            sta zp1\n            inx\n            bne @loop\n            cld\n            rts\n.endproc\n\n.segment \"LOW\"\n\n;; decimal_table_low contains tens and ones digits\n;; decimal_table_high contains hundreds digit (in lower nybble)\n\ndecimal_table_low:      .res 256\ndecimal_table_high:     .res 256\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/decimal.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/decimal.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/externalroms.s","language":"asm","vector":[0.004807944875210524,0.010016552172601223,0,-0.014423835091292858,-0.006811255589127541,0,0,0.002403972437605262,0,-0.003205296816304326,-0.005609269253909588,0,0.014423835091292858,0.004807944875210524,0,-0.006410593632608652,-0.010016552172601223,0,0.008013241924345493,0.001602648408152163,0,-0.006410593632608652,-0.005208607297390699,0,0.006410593632608652,0.0332549549639225,0,-0.004807944875210524,-0.002403972437605262,0,0.001602648408152163,0.08173506706953049,0,-0.004807944875210524,-0.008013241924345493,0,0.003205296816304326,0.034857600927352905,0,-0.008013241924345493,-0.005208607297390699,0,0.006410593632608652,0.014824497513473034,0,-0.006410593632608652,-0.007211917545646429,0,0.014423835091292858,0.004006620962172747,0,-0.006410593632608652,-0.003205296816304326,0,0.004807944875210524,0.001201986218802631,0,-0.008013241924345493,-0.004807944875210524,0,0.001602648408152163,0.0036059587728232145,0,-0.016026483848690987,-0.0036059587728232145,0,0.008013241924345493,0.002403972437605262,0,-0.006410593632608652,-0.008013241924345493,0,0.011218538507819176,0.010817876085639,0,-0.012821187265217304,-0.004807944875210524,0,0.001602648408152163,0.0036059587728232145,0,-0.008013241924345493,-0.005609269253909588,0,0.004807944875210524,0.008413903415203094,0,-0.016026483848690987,-0.012019862420856953,0,0.02564237453043461,0.0008013242040760815,0,-0.011218538507819176,-0.006410593632608652,0,0.028847670182585716,0.005609269253909588,0,-0.001602648408152163,-0.008413903415203094,0,0.01762913167476654,0.001201986218802631,0,-0.012821187265217304,-0.1746886670589447,0,0.004807944875210524,0.008013241924345493,0,-0.13782775402069092,-0.004006620962172747,0,0.008013241924345493,0.007211917545646429,0,0,-0.006009931210428476,0,0.001602648408152163,0.004006620962172747,0,-0.006410593632608652,-0.0036059587728232145,0,0.19552309811115265,0.002403972437605262,0,-0.13301981985569,-0.005609269253909588,0,0.004807944875210524,0.001602648408152163,0,-0.13782775402069092,-0.006009931210428476,0,0.003205296816304326,0.006009931210428476,0,-0.009615889750421047,-0.004407282918691635,0,0.027245022356510162,0.016026483848690987,0,-0.008013241924345493,-0.006410593632608652,0,0.27725815773010254,0.007211917545646429,0,-0.006410593632608652,-0.006009931210428476,0,0.009615889750421047,0.003205296816304326,0,-0.001602648408152163,-0.010417214594781399,0,0,0.005208607297390699,0,-0.008013241924345493,-0.004006620962172747,0,0.011218538507819176,0.006009931210428476,0,0,-0.008413903415203094,0,0.014423835091292858,0.001602648408152163,0,-0.004807944875210524,-0.005208607297390699,0,0.003205296816304326,0.002804634626954794,0,-0.012821187265217304,-0.011218538507819176,0,0.006410593632608652,0.01562582142651081,0,-0.014423835091292858,-0.007211917545646429,0,0.006410593632608652,0.015225159004330635,0,-0.004807944875210524,-0.002403972437605262,0,0.11058273911476135,0.00881456583738327,0,0,-0.012019862420856953,0,0.2564237415790558,0.002804634626954794,0,-0.006410593632608652,-0.07091718912124634,0,0.10096684843301773,0.005208607297390699,0,-0.004807944875210524,-0.0036059587728232145,0,0.04006620869040489,0.0008013242040760815,0,-0.009615889750421047,-0.004006620962172747,0,0.006410593632608652,0.1013675108551979,0,-0.006410593632608652,-0.06811255216598511,0,0.001602648408152163,0.004407282918691635,0,-0.003205296816304326,-0.07051652669906616,0,0.008013241924345493,0.003205296816304326,0,-0.004807944875210524,-0.006009931210428476,0,0.006410593632608652,0.014023172669112682,0,-0.006410593632608652,-0.005208607297390699,0,0.020834429189562798,0.13943040370941162,0,-0.006410593632608652,-0.005208607297390699,0,0.008013241924345493,0.006410593632608652,0,-0.009615889750421047,-0.002403972437605262,0,0.03365561366081238,0.0036059587728232145,0,-0.003205296816304326,-0.005609269253909588,0,0,0.006811255589127541,0,-0.009615889750421047,-0.0020033104810863733,0,0.012821187265217304,0.0076125795021653175,0,-0.004807944875210524,-0.006410593632608652,0,0.004807944875210524,0.0036059587728232145,0,-0.692344069480896,-0.008013241924345493,0,0.003205296816304326,0.006009931210428476,0,-0.003205296816304326,-0.010417214594781399,0,0.012821187265217304,0.0036059587728232145,0,-0.011218538507819176,-0.004407282918691635,0,0.003205296816304326,0.056493353098630905,0,-0.004807944875210524,-0.004006620962172747,0,0.006410593632608652,0.1346224546432495,0,-0.012821187265217304,-0.006009931210428476,0,0,0.05769534036517143,0,-0.008013241924345493,-0.002804634626954794,0,0.011218538507819176,0.02444038726389408,0,-0.004807944875210524,-0.008013241924345493,0,0.03525826334953308,0.004407282918691635,0,-0.012821187265217304,-0.037662237882614136,0,0.019231779500842094,0.002804634626954794,0,-0.008013241924345493,-0.001602648408152163,0,0.009615889750421047,0.004407282918691635,0,-0.009615889750421047,-0.004006620962172747,0,0.004807944875210524,0.05208607017993927,0,-0.003205296816304326,-0.03646025061607361,0,0.001602648408152163,0.011619200929999352,0,-0.008013241924345493,-0.037662237882614136,0,0.003205296816304326,0.004807944875210524,0,-0.004807944875210524,-0.007211917545646429,0,0.001602648408152163,0.02363906241953373,0,-0.012821187265217304,-0.0036059587728232145,0,0.011218538507819176,0.06931453943252563,0,-0.006410593632608652,-0.006410593632608652,0,0.003205296816304326,0.00881456583738327,0,-0.006410593632608652,-0.002804634626954794,0,0,0.002403972437605262,0,-0.02243707701563835,-0.3481753468513489,0,0.001602648408152163,0.004407282918691635,0,-0.008013241924345493,-0.001602648408152163,0],"text":".include \"common.s\"\n.include \"bundlehelpers.s\"\n\n.export external_roms_start\n\n.import blitz_enabled_keys\n.import brix_enabled_keys\n.import connect4_enabled_keys\n.import default_keymap\n.import delay_time_test_enabled_keys\n.import hidden_enabled_keys\n.import merlin_enabled_keys\n.import missile_enabled_keys\n.import nim_enabled_keys\n.import slide_enabled_keys\n.import space_invaders_enabled_keys\n.import tank_enabled_keys\n.import tank_keymap\n.import tetris_enabled_keys\n.import tetris_keymap\n.import tictac_enabled_keys\n.import tictac_keymap\n.import ufo_enabled_keys\n\n.segment \"EXTERNALROMS\"\n\n;; The `bundle` macro has the following arguments:\n;; 1. Path to ROM file\n;; 2. Title (up to 16 characters)\n;; 3. Enabled key mask (optional) -  keys that are illuminated on the keyboard display.   Default $ffff.\n;; 4. Keymap (optional) - address of the keymap if it is different than the default.\n;; 5. Key delay mode (optional) - determines if key delay mode is enabled by default when reset.  Default true.\n\n;; Be careful that the EXTERNALROMS segment ends before $c000, or some ROMs could get clobbered.\n;; (After building, see the segment list in `build/chip8.map`)\n\nexternal_roms_start:\n            bundle \"roms/games/15 Puzzle [Roger Ivie].ch8\", \"15 puzzle\"\n            bundle \"roms/games/Airplane.ch8\", \"airplane\"\n            bundle \"roms/games/Animal Race [Brian Astle].ch8\", \"animal race\"\n            bundle \"roms/games/Astro Dodge [Revival Studios, 2008].ch8\", \"astro dodge\"\n            bundle \"roms/games/Biorhythm [Jef Winsor].ch8\", \"biorhythm\"\n            bundle \"roms/games/Blinky [Hans Christian Egeberg, 1991].ch8\", \"blinky\"\n            bundle \"roms/games/Blitz [David Winter].ch8\", \"blitz\", blitz_enabled_keys\n            bundle \"roms/games/Bowling [Gooitzen van der Wal].ch8\", \"bowling\"\n            bundle \"roms/games/Brix [Andreas Gustafsson, 1990].ch8\", \"brix\", brix_enabled_keys, , false\n            bundle \"roms/games/Cave.ch8\", \"cave\"\n            bundle \"roms/games/Coin Flipping [Carmelo Cortez, 1978].ch8\", \"coin flipping\"\n            bundle \"roms/games/Connect 4 [David Winter].ch8\", \"connect 4\", connect4_enabled_keys\n            bundle \"roms/games/Craps [Camerlo Cortez, 1978].ch8\", \"craps\"\n            bundle \"roms/games/Deflection [John Fort].ch8\", \"deflection\"\n            bundle \"roms/games/Figures.ch8\", \"figures\"\n            bundle \"roms/games/Filter.ch8\", \"filter\"\n            bundle \"roms/games/Guess [David Winter].ch8\", \"guess\"\n            bundle \"roms/games/Hidden [David Winter, 1996].ch8\", \"hidden\", hidden_enabled_keys\n            bundle \"roms/games/Kaleidoscope [Joseph Weisbecker, 1978].ch8\", \"kaleid\", , , false\n            bundle \"roms/games/Landing.ch8\", \"landing\"\n            bundle \"roms/games/Lunar Lander (Udo Pernisz, 1979).ch8\", \"lunar lander\"\n            bundle \"roms/games/Mastermind FourRow (Robert Lindley, 1978).ch8\", \"mastermind 4-row\"\n            bundle \"roms/games/Merlin [David Winter].ch8\", \"merlin\", merlin_enabled_keys\n            bundle \"roms/games/Missile [David Winter].ch8\", \"missile\", missile_enabled_keys\n            bundle \"roms/games/Most Dangerous Game [Peter Maruhnic].ch8\", \"most dangerous\"\n            bundle \"roms/games/Nim [Carmelo Cortez, 1978].ch8\", \"nim\", nim_enabled_keys\n            bundle \"roms/games/Paddles.ch8\", \"paddles\"\n            bundle \"roms/games/Pong 2 (Pong hack) [David Winter, 1997].ch8\", \"pong 2\"\n            bundle \"roms/games/Pong [Paul Vervalin, 1990].ch8\", \"pong\"\n            bundle \"roms/games/Puzzle.ch8\", \"puzzle\"\n            bundle \"roms/games/Reversi [Philip Baltzer].ch8\", \"reversi\"\n            bundle \"roms/games/Rocket Launch [Jonas Lindstedt].ch8\", \"rocket launch\"\n            bundle \"roms/games/Rocket Launcher.ch8\", \"rocket launcher\"\n            bundle \"roms/games/Rush Hour [Hap, 2006].ch8\", \"rush hour\"\n            bundle \"roms/games/Russian Roulette [Carmelo Cortez, 1978].ch8\", \"russian roulette\"\n            bundle \"roms/games/Sequence Shoot [Joyce Weisbecker].ch8\", \"sequence shoot\"\n            bundle \"roms/games/Shooting Stars [Philip Baltzer, 1978].ch8\", \"shooting stars\"\n            bundle \"roms/games/Slide [Joyce Weisbecker].ch8\", \"slide\", slide_enabled_keys, , false\n            bundle \"roms/games/Soccer.ch8\", \"soccer\"\n            bundle \"roms/games/Space Flight.ch8\", \"space flight\"\n;            bundle \"roms/games/Space Intercept [Joseph Weisbecker, 1978].ch8\", \"space intercept\"\n            bundle \"roms/games/Space Invaders [David Winter].ch8\", \"space invaders\", space_invaders_enabled_keys, , false\n            bundle \"roms/games/Spooky Spot [Joseph Weisbecker, 1978].ch8\", \"spooky spot\"\n            bundle \"roms/games/Squash [David Winter].ch8\", \"squash\"\n            bundle \"roms/games/Submarine [Carmelo Cortez, 1978].ch8\", \"submarine\"\n            bundle \"roms/games/Sum Fun [Joyce Weisbecker].ch8\", \"sum fun\"\n            bundle \"roms/games/Syzygy [Roy Trevino, 1990].ch8\", \"syzygy\"\n            bundle \"roms/games/Tank.ch8\", \"tank\", tank_enabled_keys, tank_keymap, false\n            bundle \"roms/games/Tapeworm [JDR, 1999].ch8\", \"tapeworm\"\n            bundle \"roms/games/Tetris [Fran Dachille, 1991].ch8\", \"tetris\", tetris_enabled_keys, tetris_keymap\n            bundle \"roms/games/Tic-Tac-Toe [David Winter].ch8\", \"tictac\", tictac_enabled_keys, tictac_keymap\n            bundle \"roms/games/Timebomb.ch8\", \"timebomb\"\n            bundle \"roms/games/Tron.ch8\", \"tron\"\n            bundle \"roms/games/UFO [Lutz V, 1992].ch8\", \"ufo\", ufo_enabled_keys\n            bundle \"roms/games/Vers [JMN, 1991].ch8\", \"vers\"\n            bundle \"roms/games/Vertical Brix [Paul Robson, 1996].ch8\", \"vbrix\"\n            bundle \"roms/games/Wall [David Winter].ch8\", \"wall\"\n            bundle \"roms/games/Wipe Off [Joseph Weisbecker].ch8\", \"wipeoff\"\n            bundle \"roms/games/Worm V4 [RB-Revival Studios, 2007].ch8\", \"worm v4\"\n            bundle \"roms/games/X-Mirror.ch8\", \"x-mirror\"\n            bundle \"roms/games/ZeroPong [zeroZshadow, 2007].ch8\", \"zeropong\"\n            bundle \"roms/demos/Maze [David Winter, 199x].ch8\", \"maze\"\n            bundle \"roms/demos/Particle Demo [zeroZshadow, 2008].ch8\", \"particle demo\"\n            bundle \"roms/demos/Sierpinski [Sergey Naydenov, 2010].ch8\", \"sierpinski\"\n            bundle \"roms/demos/Stars [Sergey Naydenov, 2010].ch8\", \"stars\"\n;            bundle \"roms/demos/Trip8 Demo (2008) [Revival Studios].ch8\", \"trip8 demo\"\n            bundle \"roms/demos/Zero Demo [zeroZshadow, 2007].ch8\", \"zero demo\"\n            bundle \"roms/programs/BMP Viewer - Hello (C8 example) [Hap, 2005].ch8\", \"hello\"\n            bundle \"roms/programs/Chip8 Picture.ch8\", \"chip8 picture\"\n            bundle \"roms/programs/Chip8 emulator Logo [Garstyciuks].ch8\", \"chip8 logo\"\n            bundle \"roms/programs/Clock Program [Bill Fisher, 1981].ch8\", \"clock\"\n            bundle \"roms/programs/Delay Timer Test [Matthew Mikolay, 2010].ch8\", \"delay timer test\", delay_time_test_enabled_keys\n;            bundle \"roms/programs/Division Test [Sergey Naydenov, 2010].ch8\", \"division test\"\n;            bundle \"roms/programs/Fishie [Hap, 2005].ch8\", \"fishie\"\n            bundle \"roms/programs/Framed MK1 [GV Samways, 1980].ch8\", \"framed mk1\"\n            bundle \"roms/programs/Framed MK2 [GV Samways, 1980].ch8\", \"framed mk2\"\n            bundle \"roms/programs/IBM Logo.ch8\", \"ibm logo\"\n            bundle \"roms/programs/Jumping X and O [Harry Kleinberg, 1977].ch8\", \"jumping x & o\"\n            bundle \"roms/programs/Keypad Test [Hap, 2006].ch8\", \"keypad test\"\n            bundle \"roms/programs/Life [GV Samways, 1980].ch8\", \"life\"\n            bundle \"roms/programs/Minimal game [Revival Studios, 2007].ch8\", \"minimal game\"\n            bundle \"roms/programs/Random Number Test [Matthew Mikolay, 2010].ch8\", \"random test\"\n            bundle \"roms/programs/SQRT Test [Sergey Naydenov, 2010].ch8\", \"sqrt test\"\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/externalroms.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/externalroms.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/host.s","language":"asm","vector":[0,0.005782955791801214,0,-0.09252729266881943,0,0,0,0.023131823167204857,0,0,0,0,0.11565911769866943,0.02891477942466736,0,-0.2544500529766083,-0.023131823167204857,0,0.3932409882545471,0.023131823167204857,0,-0.046263646334409714,-0.046263646334409714,0,0.046263646334409714,0.023131823167204857,0,0,0,0,0.023131823167204857,0.20818641781806946,0,0,-0.017348866909742355,0,0,0.011565911583602428,0,0,-0.017348866909742355,0,0.023131823167204857,0,0,-0.023131823167204857,-0.011565911583602428,0,0,0.011565911583602428,0,-0.023131823167204857,-0.005782955791801214,0,0.046263646334409714,0,0,-0.046263646334409714,-0.052046604454517365,0,0,0.011565911583602428,0,-0.023131823167204857,-0.017348866909742355,0,0.023131823167204857,0.017348866909742355,0,-0.13879093527793884,-0.011565911583602428,0,0.046263646334409714,0.011565911583602428,0,0,0,0,0,0.017348866909742355,0,-0.11565911769866943,-0.017348866909742355,0,0,0.03469773381948471,0,-0.09252729266881943,-0.02891477942466736,0,0,0,0,-0.023131823167204857,-0.011565911583602428,0,0.023131823167204857,0,0,-0.046263646334409714,-0.07517842948436737,0,0.09252729266881943,0.005782955791801214,0,-0.046263646334409714,-0.011565911583602428,0,0,0.08674433827400208,0,-0.023131823167204857,-0.1445738971233368,0,0,0.19662049412727356,0,-0.06939546763896942,-0.023131823167204857,0,0.023131823167204857,0.03469773381948471,0,0,0,0,0.2544500529766083,0.011565911583602428,0,-0.13879093527793884,0,0,0.046263646334409714,0.011565911583602428,0,0,-0.023131823167204857,0,0,0.011565911583602428,0,0,-0.011565911583602428,0,0.023131823167204857,0.10409320890903473,0,0,-0.011565911583602428,0,0.09252729266881943,0.02891477942466736,0,0,-0.023131823167204857,0,0,0,0,-0.046263646334409714,-0.011565911583602428,0,0.023131823167204857,0.017348866909742355,0,0,-0.06939546763896942,0,0,0.023131823167204857,0,-0.06939546763896942,-0.023131823167204857,0,0.023131823167204857,0.005782955791801214,0,0,-0.05782955884933472,0,0,0,0,0,-0.052046604454517365,0,0.11565911769866943,0.005782955791801214,0,-0.09252729266881943,-0.011565911583602428,0,0,0.011565911583602428,0,0,-0.023131823167204857,0,0.09252729266881943,0.06361251324415207,0,0,-0.02891477942466736,0,0,0,0,-0.06939546763896942,-0.017348866909742355,0,0,0,0,-0.06939546763896942,-0.05782955884933472,0,0,0.011565911583602428,0,-0.046263646334409714,0,0,0,0.1561398059129715,0,-0.023131823167204857,-0.1330079883337021,0,0,0.12144207209348679,0,-0.023131823167204857,-0.011565911583602428,0,0,0.011565911583602428,0,-0.06939546763896942,0,0,0.06939546763896942,0.017348866909742355,0,0,0,0,0,0.046263646334409714,0,0,0,0,0.06939546763896942,0.005782955791801214,0,-0.06939546763896942,-0.02891477942466736,0,0,0.011565911583602428,0,-0.06939546763896942,-0.005782955791801214,0,0,0.011565911583602428,0,0,-0.046263646334409714,0,0,0.011565911583602428,0,-0.11565911769866943,-0.005782955791801214,0,0.023131823167204857,0.005782955791801214,0,-0.046263646334409714,-0.03469773381948471,0,0.11565911769866943,0.06939546763896942,0,-0.06939546763896942,-0.046263646334409714,0,0,0,0,0,-0.02891477942466736,0,0.046263646334409714,0.046263646334409714,0,0,-0.023131823167204857,0,0,0,0,0,-0.04048069193959236,0,0.046263646334409714,0.005782955791801214,0,-0.09252729266881943,-0.046263646334409714,0,0,0.023131823167204857,0,0,-0.03469773381948471,0,0.4163728356361389,0,0,0,-0.017348866909742355,0,0.023131823167204857,0,0,0,-0.02891477942466736,0,0,0.005782955791801214,0,0,-0.03469773381948471,0,0.023131823167204857,0.09831024706363678,0,0,-0.03469773381948471,0,0,0.011565911583602428,0,-0.09252729266881943,0,0,0.023131823167204857,0.03469773381948471,0,0,-0.03469773381948471,0,0,0.005782955791801214,0,-0.023131823167204857,-0.03469773381948471,0,0.023131823167204857,0.023131823167204857,0,0,0,0,0,0,0,0,-0.06939546763896942,0,0.06939546763896942,0.017348866909742355,0,-0.023131823167204857,-0.023131823167204857,0,0,0.05782955884933472,0,-0.023131823167204857,-0.052046604454517365,0],"text":".include \"common.s\"\n\n.export check_host_model\n.exportzp host_model\n\n.zeropage\n\n;; $01: 262 rasterlines and 64 cycles per line [NTSC: 6567R56A VIC] (OLD NTSC)\n;; $02: 263 rasterlines and 65 cycles per line [NTSC: 6567R8 VIC]\n;; $03: 312 rasterlines and 63 cycles per line [PAL: 6569 VIC]\n;; $04: 312 rasterlines and 65 cycles per line [Drean PAL-N: 6572 VIC]\nhost_model:         .res 1\n\n.code\n\n;;  http://codebase64.org/doku.php?id=base:detect_pal_ntsc\n;;  (Sokrates' variant)\n.proc check_host_model\n            ldx #$00\n@0:         lda $d012\n@1:         cmp $d012\n            beq @1\n            bmi @0\n            and #$03\n            cmp #$03\n            bne @done       ; done for ntsc\n            tay\n@count_cycles:\n            inx\n            lda $d012\n            bpl @count_cycles\n            cpx #$5e        ; vice values: pal-n=$6c pal=$50\n                            ; so choose middle value $5e for check\n            bcc @is_pal\n            iny             ; is pal-n\n@is_pal:\n            tya\n@done:\n            sta host_model\n            rts\n.endproc\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/host.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/host.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/info.s","language":"asm","vector":[0,0,0,0,0,0,0,0,0,-0.05711372569203377,0,0,0.05711372569203377,0,0,-0.05711372569203377,-0.014278431423008442,0,0.11422745138406754,0.028556862846016884,0,0,-0.11422745138406754,0,0,0,0,0,0,0,0.05711372569203377,0,0,0,0,0,0,0,0,0,-0.028556862846016884,0,0,0.014278431423008442,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.028556862846016884,0,0.05711372569203377,0,0,0,-0.014278431423008442,0,0,0,0,0,0,0,0,0.028556862846016884,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11422745138406754,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1713411808013916,0,0,-0.05711372569203377,-0.1713411808013916,0,0,0.0428352952003479,0,0,-0.028556862846016884,0,0,0.05711372569203377,0,0,0,0,0,0,0,0,0,0,0.3997960686683655,0.028556862846016884,0,-0.11422745138406754,0,0,0,0.014278431423008442,0,0,-0.05711372569203377,0,0,0,0,0,0,0,0.05711372569203377,0,0,0,0,0,0.28556862473487854,0,0,0,-0.014278431423008442,0,0,0.028556862846016884,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.014278431423008442,0,0,0,0,0,0,0,0,0,0,0,-0.05711372569203377,0,0,0,0,-0.05711372569203377,0,0,0,0,0,0,0,0,0,0.0856705904006958,0,0,-0.028556862846016884,0,0,0,0,0,0,0,0,0,0,0,0,0,0.05711372569203377,0,0,0,-0.014278431423008442,0,0,0.2141764611005783,0,0,-0.07139215618371964,0,0,0.028556862846016884,0,0,0,0,0,0,0,-0.05711372569203377,0,0,0,0.0428352952003479,0,0,0,0,0.11422745138406754,0.14278431236743927,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.014278431423008442,0,0,0,0,0,0,0,-0.5711372494697571,0,0,0.05711372569203377,0,0,0,-0.028556862846016884,0,0,0,0,0,0,0,0,0,0,0,-0.028556862846016884,0,0,0,0,0,0,0,0.05711372569203377,0,0,-0.22845490276813507,0,0,0,0.07139215618371964,0,0,-0.014278431423008442,0,0,0,0,0,0,0,0,0,0,-0.05711372569203377,0,0,0,0,0,0,-0.028556862846016884,0,0,0.09994901716709137,0,0,-0.028556862846016884,0,0,0.05711372569203377,0,-0.05711372569203377,0,0,0,0,0,0,0,0,0,0.014278431423008442,0,0,0,0,0,0.07139215618371964,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.28556862473487854,0,0,0.028556862846016884,0,0,0,0],"text":".segment \"INFOHDR\"\n\n.asciiz \"c64 chip 8 emulator\"\n.asciiz \"version 1.0\"\n.asciiz \"(c) 2018 kevin schuetz\"\n.asciiz \"source code: https://github.com/kschuetz/c64-chip8\"\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/info.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/info.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/initialize.s","language":"asm","vector":[0,0.006135142408311367,0,0,-0.021472997963428497,0,0.03681085631251335,0.018405428156256676,0,0,-0.006135142408311367,0,0.06135142594575882,0.012270284816622734,0,-0.024540569633245468,-0.015337856486439705,0,0,0.0030675712041556835,0,-0.012270284816622734,0,0,0.012270284816622734,0.012270284816622734,0,0,-0.009202714078128338,0,0.024540569633245468,0.10122985392808914,0,-0.024540569633245468,-0.015337856486439705,0,0.012270284816622734,0.0030675712041556835,0,-0.049081139266490936,-0.03681085631251335,0,0,0.07975685596466064,0,0,-0.012270284816622734,0,0,0,0,-0.03681085631251335,0,0,0.024540569633245468,0.006135142408311367,0,-0.2331354171037674,-0.006135142408311367,0,0.012270284816622734,0.018405428156256676,0,0,-0.018405428156256676,0,0.012270284816622734,0.009202714078128338,0,-0.024540569633245468,-0.024540569633245468,0,0.06135142594575882,0.009202714078128338,0,0,-0.042945995926856995,0,0.024540569633245468,0.006135142408311367,0,-0.13497313857078552,-0.015337856486439705,0,0.06135142594575882,0.20245970785617828,0,-0.03681085631251335,0,0,0,0.03681085631251335,0,-0.03681085631251335,-0.021472997963428497,0,0.03681085631251335,0,0,-0.012270284816622734,0,0,0.012270284816622734,0.021472997963428497,0,-0.024540569633245468,-0.012270284816622734,0,0,0.03067571297287941,0,-0.012270284816622734,-0.02760814130306244,0,0,0,0,0,-0.012270284816622734,0,0,0.009202714078128338,0,-0.012270284816622734,0,0,0.5153519511222839,0.015337856486439705,0,-0.024540569633245468,-0.012270284816622734,0,0.012270284816622734,0.006135142408311367,0,0,-0.024540569633245468,0,0.06135142594575882,0.006135142408311367,0,-0.024540569633245468,0,0,0.024540569633245468,0.046013567596673965,0,0,-0.018405428156256676,0,0.024540569633245468,0.012270284816622734,0,-0.0736217126250267,-0.13190557062625885,0,0,0.009202714078128338,0,-0.049081139266490936,0,0,0.06135142594575882,0.006135142408311367,0,-0.012270284816622734,-0.012270284816622734,0,0.03681085631251335,0.03067571297287941,0,-0.09816227853298187,-0.0030675712041556835,0,0.024540569633245468,0.021472997963428497,0,-0.03681085631251335,-0.07668928056955338,0,0.049081139266490936,0.03067571297287941,0,-0.024540569633245468,-0.02760814130306244,0,0.024540569633245468,0.0030675712041556835,0,-0.06135142594575882,-0.03681085631251335,0,0.012270284816622734,0.018405428156256676,0,0,-0.006135142408311367,0,0,0.10736499726772308,0,-0.03681085631251335,-0.012270284816622734,0,0.03681085631251335,0.015337856486439705,0,-0.06135142594575882,-0.015337856486439705,0,0.012270284816622734,0,0,-0.024540569633245468,0,0,0.2944868505001068,0.009202714078128338,0,-0.049081139266490936,-0.006135142408311367,0,0,0.2730138301849365,0,0,-0.018405428156256676,0,0.024540569633245468,0.006135142408311367,0,0,-0.0030675712041556835,0,0,0.03374328464269638,0,0,-0.012270284816622734,0,0.03681085631251335,0.018405428156256676,0,-0.024540569633245468,-0.006135142408311367,0,0.012270284816622734,0.015337856486439705,0,-0.024540569633245468,-0.049081139266490936,0,0.024540569633245468,0,0,-0.06135142594575882,-0.024540569633245468,0,0,0.03067571297287941,0,0,-0.015337856486439705,0,0.024540569633245468,0.024540569633245468,0,-0.012270284816622734,-0.10736499726772308,0,0,0.015337856486439705,0,0,-0.018405428156256676,0,0.012270284816622734,0.02760814130306244,0,-0.049081139266490936,-0.018405428156256676,0,0,0.02760814130306244,0,-0.06135142594575882,-0.03067571297287941,0,0,0.012270284816622734,0,-0.024540569633245468,-0.03374328464269638,0,0.012270284816622734,0.015337856486439705,0,0,-0.02760814130306244,0,0.012270284816622734,0.018405428156256676,0,0,-0.03987842798233032,0,0,0.015337856486439705,0,0,-0.015337856486439705,0,0.024540569633245468,0.15031099319458008,0,0,-0.03067571297287941,0,0.18405427038669586,0,0,0,-0.0030675712041556835,0,0,0.012270284816622734,0,-0.06135142594575882,0,0,0.012270284816622734,0,0,0,-0.0030675712041556835,0,0,0.1472434252500534,0,0,-0.018405428156256676,0,0,0.009202714078128338,0,-0.012270284816622734,-0.012270284816622734,0,0.03681085631251335,0.02760814130306244,0,-0.03681085631251335,-0.03681085631251335,0,0,0.006135142408311367,0,-0.03681085631251335,0,0,0.012270284816622734,0.018405428156256676,0,-0.0736217126250267,-0.024540569633245468,0,0,0,0,0,-0.012270284816622734,0,0.40491941571235657,0.021472997963428497,0,0,-0.02760814130306244,0,0.06135142594575882,0.009202714078128338,0,-0.03681085631251335,-0.05521628260612488,0],"text":".include \"common.s\"\n\n.export initialize\n\n.import build_bundle_index\n.import build_chrome\n.import build_decimal_table\n.import build_screen_margins\n.import check_host_model\n.import chrome_charset\n.import clear_ram\n.import clear_screen\n.import host_screen\n.import init_buttons\n.import init_button_sprites\n.import init_charsets\n.import init_colors\n.import init_core\n.import init_graphics_tables\n.import init_keyboard\n.import init_random\n.import init_sound\n.import init_timers\n.import load_bundled_rom\n.import reset\n.import screen_charset\n.import start\n.import update_screen_color\n.importzp screen_bgcolor\n.importzp screen_fgcolor\n\n.code\n\n.proc initialize\n            cld\n            jsr check_host_model\n            jsr init_random\n\n            lda #$35                ; switch out BASIC and Kernal\n            sta $1\n\n            ;; after we have switched out BASIC and Kernal, it is safe to run code in INITCODE segment\n            jsr init_nmi\n            jsr initialize_phase_2\n\n            lda $d011               ; re-enable screen\n            ora #%00010000\n            sta $d011\n            rts\n.endproc\n\n.proc nmi\n            rti\n.endproc\n\n.segment \"INITCODE\"\n\n;; Disables 'restore' key\n.proc init_nmi\n            lda #<nmi             ; set NMI vector\n            sta $0318\n            sta $fffa\n            lda #>nmi\n            sta $0319\n            sta $fffb\n            lda #$81\n            sta $dd0d             ; use Timer A\n            lda #$01              ; Timer A count ($0001)\n            sta $dd04\n            lda #$00\n            sta $dd05\n            lda #%00011001        ; run Timer A\n            sta $dd0e\n            rts\n.endproc\n\n.proc init_vic\n            lda $dd02           ; change VIC to bank 3\n            ora #3\n            sta $dd02\n            lda $dd00\n            and #$fc\n            sta $dd00\n\n            switch_vic_mem host_screen, chrome_charset\n\n            lda $d011\n            and #%10010000\n            ora #%00001011\n            sta $d011\n\n            jmp init_button_sprites\n.endproc\n\n.proc initialize_phase_2\n            lda #chrome_bgcolor\n            sta $d020\n\n            lda $d011               ; blank screen during initialization\n            and #%11101111\n            sta $d011\n\n            jsr init_vic\n            lda #$1f                ; disable CIA IRQs\n            sta $dc0d\n            sta $dd0d\n\n            jsr init_timers\n            jsr init_graphics_tables\n            jsr build_decimal_table\n            jsr build_bundle_index\n            jsr init_core\n            jsr init_keyboard\n            jsr init_charsets\n            jsr init_colors\n            jsr init_buttons\n            jsr init_sound\n\n            lda screen_fgcolor\n            jsr update_screen_color\n            jsr clear_screen\n            jsr build_screen_margins\n            jsr build_chrome\n\n            lda #default_rom_index\n            jmp reset                   ; at this point, everything in INITCODE and INITDATA is clobbered\n.endproc\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/initialize.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/initialize.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/internalroms.s","language":"asm","vector":[0,0,0,0,-0.002656541531905532,0,0,0,0,0,-0.013282707892358303,0,0.06375699490308762,0.01859579049050808,0,-0.11688783019781113,-0.02390887401998043,0,0.08500932902097702,0.05047428980469704,0,-0.021252332255244255,0,0,0.04250466451048851,0.010626166127622128,0,-0.021252332255244255,0,0,0,0.24440181255340576,0,0,0,0,0,0.002656541531905532,0,0,-0.010626166127622128,0,0,0.010626166127622128,0,0,-0.1407967060804367,0,0,0.021252332255244255,0,-0.010626166127622128,0,0,0,0.007969624362885952,0,-0.021252332255244255,-0.015939248725771904,0,0,0.010626166127622128,0,-0.06375699490308762,-0.002656541531905532,0,0,0.007969624362885952,0,0,-0.026565415784716606,0,0.04250466451048851,0.005313083063811064,0,-0.010626166127622128,-0.01859579049050808,0,0,0,0,-0.021252332255244255,-0.03187849745154381,0,0,0,0,-0.03187849745154381,-0.01859579049050808,0,0,0.005313083063811064,0,-0.08500932902097702,-0.05578737333416939,0,0,0.002656541531905532,0,0,0,0,0.06375699490308762,0.002656541531905532,0,0,-0.03187849745154381,0,0,0.03187849745154381,0,-0.010626166127622128,-0.07438316196203232,0,0.03187849745154381,0.04250466451048851,0,0,-0.010626166127622128,0,0,0.021252332255244255,0,0,-0.010626166127622128,0,0.4888036251068115,0.002656541531905532,0,-0.04250466451048851,-0.010626166127622128,0,0,0.021252332255244255,0,-0.04250466451048851,0,0,0.04250466451048851,0,0,-0.021252332255244255,0,0,0,0.06907007843255997,0,0,-0.005313083063811064,0,0.07438316196203232,0,0,-0.04250466451048851,-0.015939248725771904,0,0,0.002656541531905532,0,-0.010626166127622128,-0.10094857960939407,0,0.03187849745154381,0,0,-0.06375699490308762,0,0,0,0.021252332255244255,0,-0.04250466451048851,-0.005313083063811064,0,0,0.002656541531905532,0,-0.010626166127622128,-0.010626166127622128,0,0,0,0,-0.05313083156943321,-0.026565415784716606,0,0.05313083156943321,0,0,-0.010626166127622128,-0.045161206275224686,0,0.03187849745154381,0,0,0,-0.015939248725771904,0,0.04250466451048851,0.03187849745154381,0,0,-0.007969624362885952,0,0.4250466525554657,0.002656541531905532,0,0,-0.02390887401998043,0,0.010626166127622128,0.015939248725771904,0,0,0,0,0.021252332255244255,0,0,-0.010626166127622128,0,0,0.08500932902097702,0.260341078042984,0,0,-0.05047428980469704,0,0.03187849745154381,0.021252332255244255,0,-0.06375699490308762,-0.026565415784716606,0,0.021252332255244255,0.03187849745154381,0,-0.010626166127622128,-0.015939248725771904,0,0.03187849745154381,0,0,-0.021252332255244255,0,0,0.021252332255244255,0.03719158098101616,0,-0.05313083156943321,-0.021252332255244255,0,0,0,0,0,-0.005313083063811064,0,0,0.015939248725771904,0,-0.010626166127622128,-0.034535039216279984,0,0,0,0,-0.07438316196203232,-0.026565415784716606,0,0.010626166127622128,0,0,0,-0.021252332255244255,0,0.010626166127622128,0,0,-0.12751398980617523,-0.026565415784716606,0,0,0.03719158098101616,0,-0.06375699490308762,-0.007969624362885952,0,0,0.015939248725771904,0,0,-0.005313083063811064,0,0,0.021252332255244255,0,0,-0.007969624362885952,0,0.010626166127622128,0.21252332627773285,0,-0.04250466451048851,-0.021252332255244255,0,0.08500932902097702,0.005313083063811064,0,0,0,0,0,0.026565415784716606,0,0,-0.005313083063811064,0,0.27628031373023987,0.04250466451048851,0,0,-0.002656541531905532,0,0,0.02390887401998043,0,-0.021252332255244255,-0.03187849745154381,0,0.010626166127622128,0.010626166127622128,0,-0.27628031373023987,-0.005313083063811064,0,0,0.13814015686511993,0,0,-0.021252332255244255,0,0,0.010626166127622128,0,0,-0.03719158098101616,0,0.010626166127622128,0.010626166127622128,0,0,-0.005313083063811064,0,0,0,0,-0.04250466451048851,-0.005313083063811064,0,0,0.01859579049050808,0,-0.010626166127622128,-0.04781774803996086,0,0,0.005313083063811064,0,-0.06375699490308762,-0.002656541531905532,0,0,0.013282707892358303,0,-0.03187849745154381,-0.07969624549150467,0,0.010626166127622128,0,0,-0.07438316196203232,-0.04250466451048851,0],"text":".include \"common.s\"\n.include \"bundlehelpers.s\"\n\n.export bundle_end\n.export internal_roms_start\n\n.import external_roms_start\n.import default_keymap\n\n.segment \"INTERNALROMS\"\n\ninternal_roms_start:\ntitle_screen_header:\n            .addr external_roms_start\n            rom_title \"welcome\"\n            .word $ffff\n            .addr default_keymap\n            .byte true\n\n.proc title_screen\n            .byte $a0 | >title_screen_graphics_guest\n            .byte <title_screen_graphics_guest          ; LD I, title_screen_graphics\n\n            .byte $62, $10      ; LD v2, 16\n            .byte $63, 8        ; LD v3, 8\n            .byte $60, $00      ; LD v0, 0\n            .byte $61, $00      ; LD v1, 0\n@loop1 = $200 + (* - title_screen)\n            .byte $d0, $1f      ; DRW v0, v1, 15\n            .byte $f2, $1e      ; ADD I, v2\n            .byte $70, $08      ; ADD v0, 8\n            .byte $73, $ff      ; ADD v3, $ff\n            .byte $33, $00      ; SKP v3, 0\n            .byte $10 | >@loop1\n            .byte <@loop1       ; JP loop1\n            .byte $63, 8        ; LD, v3, 8\n            .byte $60, $00      ; LD v0, 0\n            .byte $61, $10      ; LD v1, 16\n@loop2 = $200 + (* - title_screen)\n            .byte $d0, $1f      ; DRW v0, v1, 15\n            .byte $f2, $1e      ; ADD I, v2\n            .byte $70, $08      ; ADD v0, 8\n            .byte $73, $ff      ; ADD v3, $ff\n            .byte $33, $00      ; SKP v3, 0\n            .byte $10 | >@loop2\n            .byte <@loop2       ; JP loop2\n\n@done = $200 + (* - title_screen)\n            .byte $10 | >@done\n            .byte <@done\n.endproc            \n\ntitle_screen_graphics_host:\n            .incbin \"data/title-screen.bin\", 0, $100\n\ntitle_screen_graphics_guest := $200 + title_screen_graphics_host - title_screen\n\n.segment \"BUNDLEEND\"\n\n;; This is the null at the end of the bundled roms linked-list\nbundle_end:\n            .word 0\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/internalroms.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/internalroms.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/keymaps.s","language":"asm","vector":[0.006211397238075733,0.006211397238075733,0,0,-0.009317096322774887,0,0,0.0015528493095189333,0,-0.018634192645549774,-0.009317096322774887,0,0,0,0,-0.018634192645549774,-0.009317096322774887,0,0.16770772635936737,0.013975643552839756,0,-0.012422794476151466,-0.0015528493095189333,0,0.13043934106826782,0.0015528493095189333,0,-0.012422794476151466,-0.0046585481613874435,0,0.018634192645549774,0.41461077332496643,0,0,-0.0015528493095189333,0,0.03105698712170124,0.010869945399463177,0,0,0,0,0.018634192645549774,0.009317096322774887,0,-0.012422794476151466,-0.05900827422738075,0,0.018634192645549774,0.006211397238075733,0,-0.024845588952302933,-0.006211397238075733,0,0.012422794476151466,0.0031056986190378666,0,0,-0.006211397238075733,0,0,0.0031056986190378666,0,-0.012422794476151466,-0.0015528493095189333,0,0,0.009317096322774887,0,0,-0.021739890798926353,0,0.006211397238075733,0.006211397238075733,0,0,-0.0031056986190378666,0,0.006211397238075733,0.0015528493095189333,0,-0.018634192645549774,-0.021739890798926353,0,0.08695956319570541,0.021739890798926353,0,0,-0.01552849356085062,0,0.006211397238075733,0,0,0,-0.0031056986190378666,0,0,0.0031056986190378666,0,-0.03105698712170124,-0.0046585481613874435,0,0,0,0,0,-0.012422794476151466,0,0,0,0,-0.012422794476151466,-0.009317096322774887,0,0.006211397238075733,0.08385386317968369,0,-0.012422794476151466,-0.009317096322774887,0,0.006211397238075733,0.06521967053413391,0,-0.006211397238075733,-0.006211397238075733,0,0.24845589697360992,0.009317096322774887,0,-0.018634192645549774,-0.0031056986190378666,0,0,0.021739890798926353,0,0,0,0,0.006211397238075733,0.009317096322774887,0,-0.012422794476151466,-0.006211397238075733,0,0.006211397238075733,0.17857767641544342,0,-0.018634192645549774,-0.012422794476151466,0,0.03726838529109955,0.009317096322774887,0,-0.006211397238075733,0,0,0,0.0031056986190378666,0,0,-0.03105698712170124,0,0.024845588952302933,0.0015528493095189333,0,-0.018634192645549774,-0.0015528493095189333,0,0,0.0031056986190378666,0,-0.09317095577716827,-0.0031056986190378666,0,0.024845588952302933,0.0031056986190378666,0,-0.012422794476151466,-0.009317096322774887,0,0.006211397238075733,0.04347978159785271,0,-0.03726838529109955,-0.009317096322774887,0,0,0.0031056986190378666,0,-0.012422794476151466,0,0,0.006211397238075733,0,0,-0.006211397238075733,-0.021739890798926353,0,0.006211397238075733,0,0,-0.018634192645549774,-0.00776424678042531,0,0.30435845255851746,0,0,-0.006211397238075733,-0.006211397238075733,0,0.018634192645549774,0.0046585481613874435,0,0,-0.006211397238075733,0,0.012422794476151466,0.0031056986190378666,0,-0.03726838529109955,-0.00776424678042531,0,0.012422794476151466,0.12422794848680496,0,-0.012422794476151466,-0.013975643552839756,0,0.012422794476151466,0.04192693158984184,0,0,-0.0031056986190378666,0,0.012422794476151466,0.035715535283088684,0,-0.006211397238075733,-0.009317096322774887,0,0.03726838529109955,0.00776424678042531,0,-0.012422794476151466,-0.009317096322774887,0,0.024845588952302933,0.026398438960313797,0,-0.012422794476151466,-0.0031056986190378666,0,0.006211397238075733,0.0046585481613874435,0,-0.03726838529109955,-0.0031056986190378666,0,0.08695956319570541,0.01708134263753891,0,0,-0.01552849356085062,0,0,0.0031056986190378666,0,-0.012422794476151466,-0.04658547788858414,0,0,0.012422794476151466,0,-0.018634192645549774,-0.009317096322774887,0,0,0.0031056986190378666,0,-0.012422794476151466,-0.018634192645549774,0,0,0.0015528493095189333,0,0,-0.006211397238075733,0,0,0.0046585481613874435,0,-0.012422794476151466,-0.00776424678042531,0,0,0.024845588952302933,0,0,-0.009317096322774887,0,0,0.1537320762872696,0,-0.012422794476151466,-0.0031056986190378666,0,0.024845588952302933,0.009317096322774887,0,0,-0.00776424678042531,0,0,0.006211397238075733,0,0,-0.018634192645549774,0,0.6770423054695129,0.006211397238075733,0,0,-0.009317096322774887,0,0.012422794476151466,0.00776424678042531,0,0,-0.0031056986190378666,0,0.012422794476151466,0.00776424678042531,0,-0.09938235580921173,-0.0046585481613874435,0,0.006211397238075733,0.08074816316366196,0,-0.006211397238075733,-0.010869945399463177,0,0,0.012422794476151466,0,-0.012422794476151466,-0.006211397238075733,0,0,0.0046585481613874435,0,0,-0.021739890798926353,0,0,0.04503263160586357,0,-0.03726838529109955,-0.0046585481613874435,0,0,0.009317096322774887,0,0,-0.00776424678042531,0,0,0,0,-0.024845588952302933,-0.009317096322774887,0,0,0.006211397238075733,0,-0.03105698712170124,-0.010869945399463177,0,0,0,0,0,-0.02329273894429207,0],"text":".export blitz_enabled_keys: absolute\n.export brix_enabled_keys: absolute\n.export connect4_enabled_keys: absolute\n.export default_keymap\n.export delay_time_test_enabled_keys\n.export hidden_enabled_keys\n.export merlin_enabled_keys\n.export missile_enabled_keys\n.export nim_enabled_keys\n.export slide_enabled_keys\n.export space_invaders_enabled_keys: absolute\n.export tank_enabled_keys\n.export tank_keymap\n.export tetris_enabled_keys: absolute\n.export tetris_keymap\n.export tictac_enabled_keys\n.export tictac_keymap\n.export ufo_enabled_keys: absolute\n.exportzp active_keymap\n\n.zeropage\n\nactive_keymap:  .res 2\n\n;; Keymaps:\n;; physical_key_to_test = keymap[logical_key]\n;; if no physical key for a logical key, map to $ff\n\n.rodata\n\n;; The default layout of the Chip 8 keyboard:\n;;\n;; 1 2 3 C\n;; 4 5 6 D\n;; 7 8 9 E\n;; A 0 B F\n;;\n;; Physical layout:\n;;\n;; 0 1 2 3\n;; 4 5 6 7\n;; 8 9 A B\n;; C D E F\n\ndefault_keymap:\n            .byte $d, $0, $1, $2\n            .byte $4, $5, $6, $8\n            .byte $9, $a, $c, $e\n            .byte $3, $7, $b, $f\n\n;; Tank logical keys:\n;; left: 4\n;; right: 6\n;; up: 8\n;; down: 2\n;; fire: 5\n\ntank_keymap:\n            .byte $ff, $ff, $9, $ff\n            .byte $4, $5, $6, $ff\n            .byte $1, $ff, $ff, $ff\n            .byte $ff, $ff, $ff, $ff\n\n;                    FEDCBA9876543210\ntank_enabled_keys = %0000001001110010\n\n;; Tetris logical keys:\n;; left: 5\n;; right: 6\n;; rotate: 4\n;; drop:   7\n\ntetris_keymap:\n            .byte $ff, $ff, $ff, $ff\n            .byte $5, $4, $6, $1\n            .byte $ff, $ff, $ff, $ff\n            .byte $ff, $ff, $ff, $ff\n\n;                      FEDCBA9876543210\ntetris_enabled_keys = %0000000001110010\n\n;; Tic Tac\n;; 23Cx\n;; 456x\n;; D78x\n;; xxxx\n\ntictac_keymap:\n            .byte $ff, $0, $1, $2\n            .byte $4, $5, $6, $8\n            .byte $9, $a, $ff, $ff\n            .byte $ff, $ff, $ff, $ff\n\n;                      FEDCBA9876543210\ntictac_enabled_keys = %0000011101110111\n\n;                        FEDCBA9876543210\nconnect4_enabled_keys = %0000000001110000\n\n;                      FEDCBA9876543210\nhidden_enabled_keys = %0000001001110010\n\n;                     FEDCBA9876543210\nslide_enabled_keys = %0010000000000000\n\n;                              FEDCBA9876543210\nspace_invaders_enabled_keys = %0000000001110000\n\n;                    FEDCBA9876543210\nbrix_enabled_keys = %0000000001010000\n\n;                     FEDCBA9876543210\nblitz_enabled_keys = %0000000000100000\n\n;                               FEDCBA9876543210\ndelay_time_test_enabled_keys = %0000001000100010\n\n;                   FEDCBA9876543210\nufo_enabled_keys = %0000000001110000\n\n;                      FEDCBA9876543210\nmerlin_enabled_keys = %0000001100110000\n\n;                       FEDCBA9876543210\nmissile_enabled_keys = %0000001000000000\n\n;                   FEDCBA9876543210\nnim_enabled_keys = %1000000000000111\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/keymaps.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/keymaps.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/memory.s","language":"asm","vector":[0.01999650150537491,0.009998250752687454,0,0,-0.01999650150537491,0,0,0.004999125376343727,0,0,-0.01999650150537491,0,0.03999300301074982,0.009998250752687454,0,-0.03999300301074982,-0.009998250752687454,0,0.03999300301074982,0.029994752258062363,0,-0.03999300301074982,-0.044992126524448395,0,0.31994402408599854,0.07998600602149963,0,0,-0.03499387577176094,0,0,0.12497813254594803,0,0,-0.004999125376343727,0,0.01999650150537491,0,0,0,-0.009998250752687454,0,0.01999650150537491,0.05499037727713585,0,0,-0.024995626881718636,0,0.01999650150537491,0,0,0,-0.004999125376343727,0,0,0.009998250752687454,0,0,-0.01999650150537491,0,0,0.024995626881718636,0,0,-0.004999125376343727,0,0,0.004999125376343727,0,-0.01999650150537491,-0.04999125376343727,0,0.059989504516124725,0.014997376129031181,0,0,-0.044992126524448395,0,0.03999300301074982,0.014997376129031181,0,-0.03999300301074982,-0.01999650150537491,0,0.01999650150537491,0.014997376129031181,0,-0.07998600602149963,-0.059989504516124725,0,0,0.04999125376343727,0,-0.01999650150537491,-0.009998250752687454,0,0.01999650150537491,0.009998250752687454,0,0,0,0,0.01999650150537491,0.004999125376343727,0,0,-0.01999650150537491,0,0,0.01999650150537491,0,0,-0.024995626881718636,0,0,0.01999650150537491,0,-0.01999650150537491,-0.01999650150537491,0,0.059989504516124725,0.15997201204299927,0,0,-0.004999125376343727,0,0.5199090242385864,0.004999125376343727,0,-0.03999300301074982,0,0,0,0.014997376129031181,0,0,-0.01999650150537491,0,0.01999650150537491,0.014997376129031181,0,0,-0.009998250752687454,0,0.07998600602149963,0.0649886280298233,0,-0.15997201204299927,0,0,0.01999650150537491,0,0,-0.01999650150537491,-0.004999125376343727,0,0,0.024995626881718636,0,0,-0.009998250752687454,0,0.03999300301074982,0,0,-0.01999650150537491,-0.009998250752687454,0,0.01999650150537491,0.029994752258062363,0,-0.2399580180644989,-0.009998250752687454,0,0.03999300301074982,0.029994752258062363,0,-0.07998600602149963,-0.01999650150537491,0,0.01999650150537491,0.009998250752687454,0,-0.03999300301074982,-0.04999125376343727,0,0,0.004999125376343727,0,-0.03999300301074982,-0.029994752258062363,0,0.07998600602149963,0.009998250752687454,0,-0.01999650150537491,-0.004999125376343727,0,0.2799510061740875,0.014997376129031181,0,-0.059989504516124725,-0.024995626881718636,0,0.059989504516124725,0.024995626881718636,0,-0.01999650150537491,0,0,0,0.004999125376343727,0,0,-0.009998250752687454,0,0.01999650150537491,0.029994752258062363,0,-0.01999650150537491,0,0,0,0.26995277404785156,0,-0.01999650150537491,-0.029994752258062363,0,0.03999300301074982,0.009998250752687454,0,0,-0.009998250752687454,0,0.01999650150537491,0.08998425304889679,0,-0.01999650150537491,0,0,0.01999650150537491,0.03999300301074982,0,-0.11997900903224945,-0.07998600602149963,0,0.01999650150537491,0.014997376129031181,0,-0.01999650150537491,-0.009998250752687454,0,0.059989504516124725,0.004999125376343727,0,-0.03999300301074982,0,0,0.01999650150537491,0.024995626881718636,0,-0.03999300301074982,-0.009998250752687454,0,0,0.009998250752687454,0,-0.03999300301074982,-0.11997900903224945,0,0,0.01999650150537491,0,0,-0.03999300301074982,0,0.01999650150537491,0.009998250752687454,0,-0.07998600602149963,-0.024995626881718636,0,0,0.014997376129031181,0,-0.01999650150537491,-0.01999650150537491,0,0,0.04999125376343727,0,0,-0.01999650150537491,0,0,0.14497463405132294,0,-0.01999650150537491,-0.04999125376343727,0,0.01999650150537491,0.029994752258062363,0,0,-0.014997376129031181,0,0.01999650150537491,0.004999125376343727,0,-0.07998600602149963,0,0,0.01999650150537491,0.014997376129031181,0,-0.03999300301074982,-0.009998250752687454,0,0.2199615091085434,0,0,0,-0.009998250752687454,0,0,0.01999650150537491,0,-0.01999650150537491,-0.004999125376343727,0,0.09998250752687454,0.024995626881718636,0,-0.03999300301074982,-0.009998250752687454,0,0,0.13997550308704376,0,0,-0.06998775154352188,0,0,0.009998250752687454,0,-0.03999300301074982,-0.009998250752687454,0,0.03999300301074982,0.03499387577176094,0,0,-0.01999650150537491,0,0,0.029994752258062363,0,-0.03999300301074982,-0.059989504516124725,0,0.01999650150537491,0.004999125376343727,0,-0.07998600602149963,-0.024995626881718636,0,0,0,0,-0.01999650150537491,0,0,0.01999650150537491,0.01999650150537491,0,-0.09998250752687454,-0.044992126524448395,0,0.09998250752687454,0.004999125376343727,0,0,-0.06998775154352188,0],"text":".include \"common.s\"\n\n.export buttons_sprite_set\n.export chrome_charset\n.export chrome_color_origin\n.export chrome_origin\n.export clear_ram\n.export guest_ram\n.export guest_screen_color_origin\n.export guest_screen_origin\n.export host_screen\n.export program_start\n.export screen_charset\n.export sprite_pointers\n.export stack_high\n.export stack_low\n.exportzp guest_ram_page\n\n.import fill\n.importzp zp0\n\nguest_ram = $c000\nguest_ram_page = >guest_ram\nprogram_start = guest_ram + $0200               ; location where ROMs are loaded and execution starts\nhost_screen = $f800\nscreen_charset = $e800\nchrome_charset = $f000\nbuttons_sprite_set = $e000\nsprite_pointers = host_screen + 1016\n\nguest_screen_origin = host_screen + 40 * guest_screen_offset_y + guest_screen_offset_x\n\nguest_screen_color_origin = COLOR_RAM + 40 * guest_screen_offset_y + guest_screen_offset_x\n\nchrome_origin = host_screen + 40 * (guest_screen_offset_y + guest_screen_physical_height + 1)\nchrome_color_origin = COLOR_RAM + 40 * (guest_screen_offset_y + guest_screen_physical_height + 1)\n\n.proc clear_ram\n            store16 zp0, guest_ram\n            ldy #$ff\n            ldx #$0f\n            lda #0\n            jmp fill\n.endproc\n\n.segment \"HIGH\"\n\n; The stack contains 256 levels and grows upwards.\n; This is much more than the 16 levels CHIP-8 calls for, but removes the need to validate the stack pointer,\n; while adding some safety from rogue programs.\n\nstack_low:  .res 256    ; low bytes of return addresses\nstack_high: .res 256    ; high bytes of return addresses\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/memory.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/memory.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/random.s","language":"asm","vector":[0.012553132139146328,0.03765939548611641,0,-0.012553132139146328,-0.003138283034786582,0,0,0.02824454754590988,0,0,-0.009414848871529102,0,0.12553131580352783,0.006276566069573164,0,-0.23850950598716736,0,0,0.05021252855658531,0.06904222816228867,0,-0.012553132139146328,0,0,0.025106264278292656,0.1035633385181427,0,-0.012553132139146328,-0.07531879097223282,0,0.025106264278292656,0.15063758194446564,0,0,-0.006276566069573164,0,0,0,0,0,0,0,0,0,0,0,-0.018829697743058205,0,0,0.006276566069573164,0,0,0,0,0.11297819018363953,0,0,-0.012553132139146328,-0.06904222816228867,0,0,0.003138283034786582,0,0,-0.006276566069573164,0,0,0.003138283034786582,0,0,-0.04393596202135086,0,0.025106264278292656,0,0,0,-0.003138283034786582,0,0.03765939548611641,0.009414848871529102,0,-0.03765939548611641,-0.006276566069573164,0,0,0.19143526256084442,0,-0.025106264278292656,-0.018829697743058205,0,0,0.018829697743058205,0,-0.012553132139146328,0,0,0,0.006276566069573164,0,0,-0.006276566069573164,0,0.012553132139146328,0,0,0,-0.01569141447544098,0,0,0.06276565790176392,0,-0.025106264278292656,-0.1286696046590805,0,0,0.025106264278292656,0,-0.012553132139146328,-0.006276566069573164,0,0,0.01569141447544098,0,0,-0.009414848871529102,0,0.15063758194446564,0.012553132139146328,0,0,0,0,0.22595638036727905,0.03138282895088196,0,0,0,0,0.012553132139146328,0,0,-0.012553132139146328,0,0,0,0.07218050956726074,0,-0.012553132139146328,0,0,0.03765939548611641,0.05648909509181976,0,0,-0.006276566069573164,0,0.012553132139146328,0,0,-0.012553132139146328,-0.009414848871529102,0,0.05021252855658531,0.003138283034786582,0,0,0,0,0,0.012553132139146328,0,0,-0.03138282895088196,0,0.15063758194446564,0.018829697743058205,0,-0.012553132139146328,-0.02196798101067543,0,0.08787192404270172,0,0,-0.012553132139146328,-0.03452111408114433,0,0.025106264278292656,0,0,0,-0.006276566069573164,0,0.025106264278292656,0,0,0,-0.003138283034786582,0,0.4142533540725708,0.10042505711317062,0,-0.3012751638889313,-0.009414848871529102,0,0.025106264278292656,0.009414848871529102,0,-0.025106264278292656,-0.012553132139146328,0,0,0.003138283034786582,0,0,-0.009414848871529102,0,0,0,0,0,0,0,0,0.10670162737369537,0,0,-0.05962737649679184,0,0,0.12553131580352783,0,-0.025106264278292656,-0.003138283034786582,0,0.012553132139146328,0.012553132139146328,0,0,-0.009414848871529102,0,0.012553132139146328,0.006276566069573164,0,0,-0.006276566069573164,0,0,0.018829697743058205,0,-0.012553132139146328,0,0,0.03765939548611641,0.006276566069573164,0,0,-0.006276566069573164,0,0.012553132139146328,0.025106264278292656,0,0,0,0,0,0.02824454754590988,0,0,-0.003138283034786582,0,0,0.07531879097223282,0,0,-0.006276566069573164,0,0,0.04393596202135086,0,-0.06276565790176392,-0.006276566069573164,0,0,0.018829697743058205,0,-0.03765939548611641,0,0,0,0.02196798101067543,0,0,-0.009414848871529102,0,0.012553132139146328,0.2071266770362854,0,-0.012553132139146328,-0.15691415965557098,0,0,0.012553132139146328,0,0,-0.01569141447544098,0,0.12553131580352783,0,0,0,0,0,0,0.003138283034786582,0,0,0,0,0.28872203826904297,0,0,0,-0.006276566069573164,0,0,0,0,0,-0.01569141447544098,0,0,0.006276566069573164,0,-0.03765939548611641,0,0,0.012553132139146328,0.04393596202135086,0,0,0,0,0,0.05648909509181976,0,-0.12553131580352783,-0.006276566069573164,0,0,0.02196798101067543,0,-0.012553132139146328,-0.003138283034786582,0,0,0.006276566069573164,0,-0.08787192404270172,-0.003138283034786582,0,0,0.009414848871529102,0,0,0,0,0,0.003138283034786582,0,-0.012553132139146328,-0.003138283034786582,0,0.3765939772129059,0.012553132139146328,0,-0.03765939548611641,-0.03138282895088196,0,0.03765939548611641,0,0,0,-0.018829697743058205,0],"text":".include \"common.s\"\n\n.export get_random\n.export init_random\n\n.zeropage\n\nrandom_seed:        .res 4\nrandom_seed_arg:    .res 4\n\n.code\n\n;; Initializes random_seed from SID noise generator\n.proc init_random\n            lda #$ff        ; maximum frequency value\n            sta $d40e       ; voice 3 frequency low byte\n            sta $d40f       ; voice 3 frequency high byte\n            lda #$80        ; noise waveform, gate bit off\n            sta $d412       ; voice 3 control register\n\n            ldy #3\n@loop:      lda $d41b\n            sta random_seed, y\n\n            ; add a little more entropy from raster register\n            ldx $d012\n@2:         dex\n            bne @2\n\n            dey\n            bpl @loop\n\n            rts\n.endproc\n\n;; loads A with a random value $00 - $ff\n.proc get_random\n            lda random_seed + 3\n            asl a\n            sta random_seed_arg + 3\n            \n            ; rotate 3\n            lda random_seed + 2\n            rol a\n            sta random_seed_arg + 2\n\n            ; rotate 2\n            lda random_seed + 1\n            rol a\n            sta random_seed_arg + 1\n\n            ; rotate 1\n            lda random_seed + 0\n            rol a\n            sta random_seed_arg + 0\n\n            sec\n            rol random_seed_arg + 3\n            rol random_seed_arg + 2\n            rol random_seed_arg + 1\n            rol random_seed_arg + 0\n            clc\n            \n            ;; add 4\n            lda random_seed_arg + 3\n            adc random_seed + 3\n            sta random_seed_arg + 3\n            pha\n                \n            ;; add 3\n            lda random_seed_arg + 2\n            adc random_seed + 2\n            sta random_seed_arg + 2\n\n            pha\n            ;; add 2\n            lda random_seed_arg + 1\n            adc random_seed + 1\n            sta random_seed_arg + 1\n\n            ;; add 1\n            lda random_seed_arg + 0\n            adc random_seed + 0\n            sta random_seed_arg + 0\n\n            clc\n            lda random_seed_arg + 1\n            adc random_seed + 3\n            sta random_seed + 1\n            lda random_seed_arg + 0\n            adc random_seed + 2\n            sta random_seed + 0\n            pla\n            sta random_seed + 2\n            pla\n            sta random_seed + 3\n            lda random_seed + 0      ; most significant byte\n            rts\n.endproc\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/random.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/random.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/registers.s","language":"asm","vector":[0,0.006582759320735931,0,0,-0.013165518641471863,0,0,0,0,0,-0.013165518641471863,0,0.026331037282943726,0.013165518641471863,0,-0.026331037282943726,0,0,0.30280691385269165,0.013165518641471863,0,-0.06582759320735931,0,0,0.013165518641471863,0.013165518641471863,0,0,-0.013165518641471863,0,0.013165518641471863,0.019748277962207794,0,0,0,0,0,0,0,0,-0.013165518641471863,0,0,0.0032913796603679657,0,-0.026331037282943726,0,0,0,0.019748277962207794,0,0,0,0,0,0,0,0,-0.11848966777324677,0,0,0.013165518641471863,0,0,0,0,0,0,0,0,-0.15140345692634583,0,0.289641410112381,0.0032913796603679657,0,0,-0.013165518641471863,0,0.026331037282943726,0.006582759320735931,0,0,0,0,0,0.013165518641471863,0,-0.026331037282943726,-0.019748277962207794,0,0,0,0,-0.026331037282943726,0,0,0,0,0,0,0,0,0.026331037282943726,0,0,0,-0.006582759320735931,0,0,0.013165518641471863,0,0,-0.026331037282943726,0,0,0.15140345692634583,0,0,-0.03949655592441559,0,0,0.006582759320735931,0,0,-0.006582759320735931,0,0.6319448947906494,0.013165518641471863,0,-0.013165518641471863,0,0,0,0.0032913796603679657,0,-0.026331037282943726,0,0,0.026331037282943726,0.006582759320735931,0,-0.026331037282943726,-0.019748277962207794,0,0,0.006582759320735931,0,-0.013165518641471863,0,0,0,0,0,0,-0.006582759320735931,0,0,0,0,0,0,0,0.026331037282943726,0.009874138981103897,0,-0.026331037282943726,0,0,0,0.1448207050561905,0,-0.013165518641471863,-0.05924483388662338,0,0.026331037282943726,0.019748277962207794,0,0,0,0,0,0,0,0,-0.08886724710464478,0,0,0,0,0,-0.019748277962207794,0,0.026331037282943726,0,0,0,0,0,0,0.019748277962207794,0,0,-0.0032913796603679657,0,0.026331037282943726,0,0,0,0,0,0,0,0,0,0,0,0.013165518641471863,0,0,0,0,0,0,0.32255521416664124,0,0,-0.013165518641471863,0,0,0.07570172846317291,0,0,-0.02962241694331169,0,0,0.01645689830183983,0,0,-0.013165518641471863,0,0,0.0032913796603679657,0,0,-0.006582759320735931,0,0.013165518641471863,0,0,0,0,0,0.026331037282943726,0,0,0,-0.006582759320735931,0,0,0.013165518641471863,0,-0.05266207456588745,-0.013165518641471863,0,0,0,0,0,-0.006582759320735931,0,0,0.013165518641471863,0,0,0,0,0,0,0,-0.026331037282943726,0,0,0,0.07241035252809525,0,-0.05266207456588745,0,0,0,0.019748277962207794,0,-0.026331037282943726,0,0,0,0,0,-0.026331037282943726,-0.006582759320735931,0,0.026331037282943726,0.013165518641471863,0,0,-0.006582759320735931,0,0.013165518641471863,0,0,0,0,0,0.026331037282943726,0.013165518641471863,0,-0.026331037282943726,0,0,0.026331037282943726,0,0,0,0,0,0,0,0,-0.026331037282943726,0,0,0,0,0,0,0,0,0.03949655592441559,0.15798622369766235,0,0,-0.0032913796603679657,0,0,0.006582759320735931,0,-0.23697933554649353,-0.006582759320735931,0,0.026331037282943726,0.019748277962207794,0,0,-0.006582759320735931,0,0,0,0,-0.30280691385269165,-0.02962241694331169,0,0,0,0,-0.026331037282943726,0,0,0,0,0,0,0,0,0.026331037282943726,0.006582759320735931,0,-0.013165518641471863,-0.019748277962207794,0,0,0,0,0,-0.02962241694331169,0],"text":".include \"common.s\"\n\n.export clear_registers\n.exportzp registers\n.exportzp reg_v\n.exportzp reg_pc\n.exportzp reg_i\n.exportzp reg_sp\n.exportzp reg_v0\n.exportzp reg_v1\n.exportzp reg_v2\n.exportzp reg_v3\n.exportzp reg_v4\n.exportzp reg_v5\n.exportzp reg_v6\n.exportzp reg_v7\n.exportzp reg_v8\n.exportzp reg_v9\n.exportzp reg_va\n.exportzp reg_vb\n.exportzp reg_vc\n.exportzp reg_vd\n.exportzp reg_ve\n.exportzp reg_vf\n\n.import program_start\n\n.zeropage\n\nregisters:\nreg_v:\nreg_v0:         .res 1\nreg_v1:         .res 1\nreg_v2:         .res 1\nreg_v3:         .res 1\nreg_v4:         .res 1\nreg_v5:         .res 1\nreg_v6:         .res 1\nreg_v7:         .res 1\nreg_v8:         .res 1\nreg_v9:         .res 1\nreg_va:         .res 1\nreg_vb:         .res 1\nreg_vc:         .res 1\nreg_vd:         .res 1\nreg_ve:         .res 1\nreg_vf:         .res 1\nreg_pc:         .res 2\nreg_i:          .res 2\nreg_sp:         .res 1\nregisters_end:\n\n.code\n\n.proc clear_registers\n                lda #0\n                ldy #(registers_end - registers - 1)\n@loop:          sta registers, y\n                dey\n                bpl @loop\n\n                store16 reg_pc, program_start\n                rts\n.endproc\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/registers.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/registers.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/reset.s","language":"asm","vector":[0,0.014938273467123508,0,0,-0.02240741066634655,0,0.029876546934247017,0,0,-0.029876546934247017,-0.007469136733561754,0,0.11950618773698807,0,0,0,-0.007469136733561754,0,0,0,0,-0.029876546934247017,0,0,0.059753093868494034,0.014938273467123508,0,0,0,0,0.029876546934247017,0.12697532773017883,0,0,-0.029876546934247017,0,0,0.007469136733561754,0,0,-0.007469136733561754,0,0,0.11950618773698807,0,-0.029876546934247017,-0.007469136733561754,0,0,0,0,0,0,0,0.029876546934247017,0,0,-0.20913583040237427,0,0,0,0,0,0,-0.014938273467123508,0,0,0.007469136733561754,0,-0.059753093868494034,-0.029876546934247017,0,0.029876546934247017,0.014938273467123508,0,0,-0.03734568506479263,0,0.029876546934247017,0,0,-0.0896296426653862,-0.007469136733561754,0,0.059753093868494034,0.0448148213326931,0,-0.059753093868494034,-0.029876546934247017,0,0,0,0,0,-0.014938273467123508,0,0.059753093868494034,0,0,0,-0.014938273467123508,0,0.029876546934247017,0.014938273467123508,0,-0.029876546934247017,-0.0448148213326931,0,0,0.059753093868494034,0,0,-0.007469136733561754,0,0,0.007469136733561754,0,0,-0.014938273467123508,0,0,0.029876546934247017,0,0,0,0,0.5975309610366821,0.014938273467123508,0,0,0,0,0,0,0,-0.059753093868494034,0,0,0,0.007469136733561754,0,-0.029876546934247017,-0.014938273467123508,0,0,0.059753093868494034,0,0,-0.014938273467123508,0,0,0.014938273467123508,0,0,-0.10456791520118713,0,0,0.014938273467123508,0,-0.11950618773698807,0,0,0,0,0,-0.059753093868494034,-0.029876546934247017,0,0,0.014938273467123508,0,0,0,0,0,0.014938273467123508,0,-0.0896296426653862,-0.05228395760059357,0,0,0.029876546934247017,0,-0.029876546934247017,-0.03734568506479263,0,0,0,0,-0.029876546934247017,-0.014938273467123508,0,0,0.029876546934247017,0,0,0,0,0,0.03734568506479263,0,0,-0.029876546934247017,0,0.029876546934247017,0,0,0,0,0,0.029876546934247017,0,0,-0.029876546934247017,0,0,0.3585185706615448,0.007469136733561754,0,-0.029876546934247017,-0.007469136733561754,0,0,0.32864201068878174,0,0,0,0,0,0,0,0,-0.03734568506479263,0,0,0.014938273467123508,0,0,-0.014938273467123508,0,0.029876546934247017,0.007469136733561754,0,-0.059753093868494034,0,0,0.059753093868494034,0,0,-0.029876546934247017,0,0,0,0,0,-0.029876546934247017,-0.0672222301363945,0,0,0,0,0,-0.029876546934247017,0,0,0.007469136733561754,0,-0.059753093868494034,-0.05228395760059357,0,0,0,0,-0.059753093868494034,-0.0448148213326931,0,0,0,0,-0.11950618773698807,-0.029876546934247017,0,0,0.007469136733561754,0,-0.029876546934247017,-0.014938273467123508,0,0.029876546934247017,0.007469136733561754,0,0,-0.02240741066634655,0,0,0.014938273467123508,0,0,-0.014938273467123508,0,0,0.014938273467123508,0,0,0,0,0,0.029876546934247017,0,0,-0.014938273467123508,0,0.029876546934247017,0.18672841787338257,0,0,-0.02240741066634655,0,0.23901237547397614,0,0,-0.059753093868494034,0,0,0,0,0,0,0,0,0.059753093868494034,0,0,0,0,0,0,0.16432100534439087,0,0,-0.029876546934247017,0,0,0.029876546934247017,0,0,-0.029876546934247017,0,0,0,0,-0.029876546934247017,-0.02240741066634655,0,0,0,0,-0.029876546934247017,0,0,0,0,0,-0.059753093868494034,-0.029876546934247017,0,0,0,0,0,-0.059753093868494034,0,0.0896296426653862,0,0,-0.059753093868494034,-0.07469137012958527,0,0,0,0,0,-0.014938273467123508,0],"text":".include \"common.s\"\n\n.export reset\n\n.import active_bundle\n.import clear_ram\n.import clear_registers\n.import clear_screen\n.import default_keymap\n.import display_rom_title\n.import load_bundled_rom\n.import load_font_set\n.import sync_key_delay_indicator\n.import sync_paused_indicator\n.import test_draw\n.importzp active_keymap\n.importzp paused\n\n;; Loads a ROM and resets the guest machine state.\n;; Once this is called, code and data in the INITCODE and INITDATA segments are no longer usable.\n;;\n;; A - index of ROM to load\n.proc reset\n            pha\n            jsr clear_ram\n            jsr load_font_set\n            jsr clear_screen\n            lda #0\n            sta paused\n\n            pla\n            tay\n            jsr load_bundled_rom\n            lda active_bundle\n            jsr display_rom_title\n            jsr sync_key_delay_indicator\n            jsr sync_paused_indicator\n\n            jmp clear_registers\n.endproc\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/reset.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/reset.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/sound.s","language":"asm","vector":[0,0.012121434323489666,0,-0.01616191305220127,-0.008080956526100636,0,0,0.024242868646979332,0,-0.01616191305220127,-0.0404047816991806,0,0.048485737293958664,0.008080956526100636,0,-0.11313339322805405,-0.012121434323489666,0,0.12929530441761017,0.01616191305220127,0,-0.01616191305220127,-0.004040478263050318,0,0.03232382610440254,0.008080956526100636,0,-0.03232382610440254,-0.004040478263050318,0,0.06464765220880508,0.15353816747665405,0,-0.048485737293958664,-0.012121434323489666,0,0.01616191305220127,0.008080956526100636,0,0,-0.01616191305220127,0,0.01616191305220127,0.008080956526100636,0,0,-0.012121434323489666,0,0,0.008080956526100636,0,0,-0.012121434323489666,0,0.048485737293958664,0,0,0,-0.024242868646979332,0,0,0,0,-0.01616191305220127,-0.008080956526100636,0,0.01616191305220127,0,0,0,-0.024242868646979332,0,0.11313339322805405,0.012121434323489666,0,0,0,0,0.03232382610440254,0.004040478263050318,0,-0.03232382610440254,-0.012121434323489666,0,0.01616191305220127,0.27879300713539124,0,-0.12929530441761017,-0.024242868646979332,0,0.01616191305220127,0,0,0,-0.004040478263050318,0,0.048485737293958664,0,0,0,-0.0202023908495903,0,0,0,0,0,-0.02828334830701351,0,0,0.024242868646979332,0,0,-0.0808095633983612,0,0,0.06868813186883926,0,0,-0.012121434323489666,0,0,0.02828334830701351,0,-0.11313339322805405,-0.03232382610440254,0,0.4525335729122162,0.03232382610440254,0,0,-0.02828334830701351,0,0.01616191305220127,0.01616191305220127,0,-0.01616191305220127,0,0,0,0.012121434323489666,0,0,0,0,0.01616191305220127,0.07272861152887344,0,-0.03232382610440254,0,0,0.048485737293958664,0.024242868646979332,0,0,-0.008080956526100636,0,0,0.004040478263050318,0,0,-0.008080956526100636,0,0.06464765220880508,0.012121434323489666,0,0,0,0,0.01616191305220127,0.05656669661402702,0,0,-0.012121434323489666,0,0.01616191305220127,0.01616191305220127,0,0,-0.01616191305220127,0,0,0.008080956526100636,0,-0.03232382610440254,-0.07676908373832703,0,0.03232382610440254,0.008080956526100636,0,-0.01616191305220127,0,0,0,0.024242868646979332,0,-0.01616191305220127,-0.004040478263050318,0,0,0.13737626373767853,0,-0.01616191305220127,-0.012121434323489666,0,0.03232382610440254,0,0,-0.048485737293958664,0,0,0.03232382610440254,0,0,0,-0.004040478263050318,0,0,0,0,-0.048485737293958664,-0.060607172548770905,0,0,0.23838821053504944,0,-0.048485737293958664,-0.02828334830701351,0,0,0.0404047816991806,0,0,-0.012121434323489666,0,0,0.008080956526100636,0,-0.03232382610440254,-0.008080956526100636,0,0,0.024242868646979332,0,0,-0.02828334830701351,0,0.048485737293958664,0.02828334830701351,0,0,0,0,0.01616191305220127,0.004040478263050318,0,-0.01616191305220127,0,0,0.01616191305220127,0.03232382610440254,0,0,0,0,0,0.0202023908495903,0,-0.01616191305220127,0,0,0,0.008080956526100636,0,-0.048485737293958664,-0.004040478263050318,0,0,0.004040478263050318,0,-0.0808095633983612,-0.01616191305220127,0,0,0.04444526135921478,0,-0.09697147458791733,-0.008080956526100636,0,0.01616191305220127,0.008080956526100636,0,-0.01616191305220127,-0.01616191305220127,0,0.048485737293958664,0.004040478263050318,0,-0.06464765220880508,-0.0404047816991806,0,0,0.0202023908495903,0,-0.01616191305220127,-0.024242868646979332,0,0.03232382610440254,0.02828334830701351,0,0,0,0,0.01616191305220127,0,0,0,-0.024242868646979332,0,0.2909144461154938,0,0,0,-0.024242868646979332,0,0,0,0,-0.03232382610440254,0,0,0.01616191305220127,0,0,0,-0.04444526135921478,0,0.01616191305220127,0.11313339322805405,0,0,0,0,0,0.02828334830701351,0,-0.048485737293958664,-0.004040478263050318,0,0,0.008080956526100636,0,0,-0.008080956526100636,0,0,0.012121434323489666,0,-0.048485737293958664,-0.008080956526100636,0,0,0.012121434323489666,0,0,-0.008080956526100636,0,0,0,0,-0.01616191305220127,-0.024242868646979332,0,0.5495050549507141,0.01616191305220127,0,-0.048485737293958664,-0.0404047816991806,0,0,0.004040478263050318,0,0,-0.048485737293958664,0],"text":".include \"common.s\"\n\n.export init_sound\n.export update_sound\n.exportzp sound_enabled\n\n.importzp frame_counter\n.importzp paused\n.importzp sound_timer\n\n.zeropage\n\nsound_enabled:      .res 1\nsound_playing:      .res 1\n\n.segment \"INITCODE\"\n\n.proc init_sound\n            lda #0                  ; disabled by default\n            sta sound_enabled\n            sta sound_playing\n            rts\n.endproc\n\n.code\n\n;; Make sound only if all three are true:\n;;   1. sound_enabled is true\n;;   2. paused is false\n;;   3. sound_timer is nonzero\n.proc update_sound\n            lda sound_enabled\n            beq no_sound\n            lda paused\n            bne beep_off\n            lda sound_timer\n            beq beep_off\n            ; continue to beep_on\n.endproc\n\n.proc beep_on\n            lda sound_playing\n            bne @playing\n\n            lda #$9c\n            sta $d400       ; freq lo\n            lda #$1b\n            sta $d401       ; freq hi\n            lda #$11\n            sta $d405       ; AD\n            lda #$68\n            sta $d406       ; SR\n            lda #65\n            sta $d404       ; pulse\n\n            lda #15\n            sta $d418       ; volume\n\n            lda #1\n            sta sound_playing\n@playing:\n.endproc\n\n.proc update_pulse_envelope\n            lda #3\n            sta $d403\n\n            lda frame_counter\n            bpl @low\n            eor #$ff\n            clc\n            adc #1\n@low:\n            asl a\n            sta $d402\n\n            rts\n.endproc\n\n.proc beep_off\n            lda sound_playing\n            bne @playing\n            rts\n\n@playing:   lda #64\n            sta $d404       ; gate off\n                   \n            lda #0\n            sta sound_playing\n            jmp update_pulse_envelope\n.endproc\n\n.proc no_sound\n            lda #0\n            sta sound_playing\n            sta $d418\n            rts\n.endproc\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/sound.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/sound.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/util.s","language":"asm","vector":[0,0.009981219656765461,0,0,-0.009981219656765461,0,0,0.03327073156833649,0,0,-0.00665414659306407,0,0.05323317274451256,0.01330829318612814,0,-0.22624097764492035,-0.00665414659306407,0,0.14639122784137726,0.04990609735250473,0,-0.02661658637225628,0,0,0.02661658637225628,0.0232895128428936,0,-0.02661658637225628,-0.00665414659306407,0,0.01330829318612814,0.25951170921325684,0,-0.01330829318612814,-0.036597806960344315,0,0,0.029943659901618958,0,0,-0.00665414659306407,0,0,0.00665414659306407,0,0,-0.009981219656765461,0,0,0.003327073296532035,0,-0.02661658637225628,-0.00665414659306407,0,0,0,0,-0.02661658637225628,-0.14306415617465973,0,0.02661658637225628,0.019962439313530922,0,0,-0.009981219656765461,0,0.01330829318612814,0.009981219656765461,0,0,0,0,0.02661658637225628,0.00665414659306407,0,0,-0.05323317274451256,0,0,0.003327073296532035,0,-0.02661658637225628,0,0,0.01330829318612814,0.059887319803237915,0,-0.1730078011751175,-0.11977463960647583,0,0.05323317274451256,0,0,-0.01330829318612814,-0.0232895128428936,0,0.07984975725412369,0.00665414659306407,0,0,-0.016635365784168243,0,0.02661658637225628,0.003327073296532035,0,0,-0.01330829318612814,0,0.02661658637225628,0.029943659901618958,0,0,-0.11977463960647583,0,0.039924878627061844,0.07319561392068863,0,-0.02661658637225628,-0.01330829318612814,0,0,0.029943659901618958,0,-0.01330829318612814,-0.016635365784168243,0,0.279474139213562,0.01330829318612814,0,-0.11977463960647583,-0.00665414659306407,0,0.02661658637225628,0.0232895128428936,0,0,0,0,0,0,0,-0.01330829318612814,-0.003327073296532035,0,0,0.11977463960647583,0,-0.02661658637225628,-0.019962439313530922,0,0.0931580513715744,0,0,0,-0.016635365784168243,0,0,0.016635365784168243,0,0,-0.003327073296532035,0,0.10646634548902512,0.00665414659306407,0,0,-0.003327073296532035,0,0.02661658637225628,0.01330829318612814,0,-0.15969951450824738,-0.06654146313667297,0,0.039924878627061844,0,0,-0.039924878627061844,-0.01330829318612814,0,0,0.009981219656765461,0,0,-0.08650390058755875,0,0,0.02661658637225628,0,-0.02661658637225628,-0.03327073156833649,0,0.01330829318612814,0.039924878627061844,0,0,0,0,0.0931580513715744,0.039924878627061844,0,0,-0.059887319803237915,0,0.07984975725412369,0.01330829318612814,0,-0.0931580513715744,0,0,0.11977463960647583,0.019962439313530922,0,0,-0.01330829318612814,0,0,0,0,-0.01330829318612814,-0.00665414659306407,0,0.01330829318612814,0.15304537117481232,0,0,-0.1164475604891777,0,0,0.04990609735250473,0,-0.039924878627061844,-0.00665414659306407,0,0.07984975725412369,0.00665414659306407,0,-0.039924878627061844,-0.01330829318612814,0,0.01330829318612814,0.003327073296532035,0,0,-0.016635365784168243,0,0.02661658637225628,0.0465790256857872,0,0,0,0,0.01330829318612814,0,0,0,0,0,0.02661658637225628,0.05323317274451256,0,0,-0.00665414659306407,0,0,0.01330829318612814,0,-0.0931580513715744,-0.08650390058755875,0,0.02661658637225628,0.02661658637225628,0,-0.06654146313667297,-0.019962439313530922,0,0.01330829318612814,0.003327073296532035,0,-0.05323317274451256,0,0,0.01330829318612814,0.00665414659306407,0,-0.02661658637225628,-0.01330829318612814,0,0,0.00665414659306407,0,0,-0.00665414659306407,0,0.06654146313667297,0.04990609735250473,0,-0.01330829318612814,-0.04325195029377937,0,0.02661658637225628,0.05323317274451256,0,0,-0.04990609735250473,0,0.0931580513715744,0.07984975725412369,0,0,0,0,0,0.00665414659306407,0,-0.01330829318612814,-0.00665414659306407,0,0.4790985584259033,0.01330829318612814,0,-0.02661658637225628,0,0,0,0.009981219656765461,0,-0.01330829318612814,-0.02661658637225628,0,0.01330829318612814,0.039924878627061844,0,-0.01330829318612814,-0.0232895128428936,0,0,0.07652268558740616,0,-0.01330829318612814,-0.029943659901618958,0,0,0.019962439313530922,0,-0.2661658525466919,0,0,0,0.00665414659306407,0,0,-0.003327073296532035,0,0.01330829318612814,0.01330829318612814,0,0,-0.00665414659306407,0,0,0.0232895128428936,0,-0.10646634548902512,-0.0465790256857872,0,0,0.01330829318612814,0,0,-0.03327073156833649,0,0.10646634548902512,0.03327073156833649,0,-0.23954927921295166,-0.02661658637225628,0,0,0.01330829318612814,0,0,-0.05323317274451256,0],"text":".include \"common.s\"\n\n.export fill\n.export move_up\n\n.importzp zp0\n.importzp zp1\n.importzp zp2\n.importzp zp3\n.importzp zp4\n.importzp zp5\n\n.code\n \n;;  Move memory up\n;;  Adapted from http://www.6502.org/source/general/memory_move.html by Bruce Clark\n;;\n;;  zp0:zp1 = source start address\n;;  zp2:zp3 = destination start address\n;;  zp4:zp5 = number of bytes to move\n.proc move_up\n\nmove_from = zp0\nmove_to = zp2\nmove_size = zp4\n\n            ldx move_size + 1   ; the last byte must be moved first\n            clc                 ; start at the final pages of FROM and TO\n            txa\n            adc move_from+1\n            sta move_from+1\n            clc\n            txa\n            adc move_to+1\n            sta move_to+1\n            inx                 ; allows the use of BNE after the DEX below\n            ldy move_size\n            beq @3\n            dey                 ; move bytes on the last page first\n            beq @2\n@1:         lda (move_from), y\n            sta (move_to), y\n            dey\n            bne @1\n@2:         lda (move_from), y  ; handle Y = 0 separately\n            sta (move_to), y\n@3:         dey\n            dec move_from + 1   ; move the next page (if any)\n            dec move_to + 1\n            dex\n            bne @1\n            rts\n.endproc\n\n;; Fill\n;;\n;; length must be > 0\n;; zp0:zp1 = dest address\n;; X = (length - 1) high\n;; Y = (length - 1) low\n;; A = fill value\n.proc fill\n            cpx #0\n            beq @last_page\n            sty zp2\n            ldy #0\n@1:         sta (zp0), y\n            iny\n            bne @1\n            inc zp1\n            dex\n            bne @1\n@2:         ldy zp2\n@last_page:\n            sta (zp0), y\n            dey\n            cpy #$ff\n            bne @last_page\n            rts\n.endproc\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/util.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/util.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/source/vars.s","language":"asm","vector":[0,0,0,0,0,0,0,0,0,0,0,0,0.030777426436543465,0,0,0,0,0,0.2769968509674072,0,0,-0.015388713218271732,0,0,0,0.015388713218271732,0,-0.030777426436543465,0,0,0.030777426436543465,0.06155485287308693,0,-0.015388713218271732,-0.015388713218271732,0,0,0.015388713218271732,0,0,0,0,0,0.023083070293068886,0,0,0,0,0,0.023083070293068886,0,0,0,0,0,0,0,-0.04616614058613777,-0.12310970574617386,0,0,0.007694356609135866,0,0,-0.015388713218271732,0,0,0.007694356609135866,0,0,-0.13080406188964844,0,0.24621941149234772,0,0,0,-0.023083070293068886,0,0.030777426436543465,0,0,-0.030777426436543465,-0.007694356609135866,0,0,0.015388713218271732,0,0,-0.030777426436543465,0,0,0,0,0,-0.007694356609135866,0,0,0,0,0,0,0,0,0,0,0,-0.007694356609135866,0,0,0.015388713218271732,0,-0.030777426436543465,0,0,0,0.1384984254837036,0,0,-0.007694356609135866,0,0.030777426436543465,0,0,0,-0.015388713218271732,0,0.6617146730422974,0.015388713218271732,0,0,-0.007694356609135866,0,0,0,0,0,0,0,0,0.007694356609135866,0,-0.030777426436543465,0,0,0,0.030777426436543465,0,0,-0.007694356609135866,0,0,0.007694356609135866,0,0,-0.023083070293068886,0,0,0.007694356609135866,0,0,0,0,0.015388713218271732,0.011541535146534443,0,0,0,0,0,0.12310970574617386,0,-0.06155485287308693,-0.06155485287308693,0,0,0.015388713218271732,0,0,-0.023083070293068886,0,0,0,0,0,-0.06155485287308693,0,0,0,0,0,0,0,0,0,0,0,-0.003847178304567933,0,0,0.007694356609135866,0,0,-0.011541535146534443,0,0,0,0,0,-0.015388713218271732,0,0,0,0,0,0,0,0.030777426436543465,0.015388713218271732,0,0,0,0,0,0.33855170011520386,0,0,0,0,0,0.0692492127418518,0,0,-0.003847178304567933,0,0.030777426436543465,0,0,0,-0.023083070293068886,0,0.030777426436543465,0.007694356609135866,0,-0.030777426436543465,-0.003847178304567933,0,0,0,0,-0.09233228117227554,0,0,0,0,0,0,0,0,0,0.007694356609135866,0,-0.030777426436543465,0,0,0,0,0,-0.030777426436543465,-0.04231896251440048,0,0,0,0,0,0,0,0,0,0,-0.030777426436543465,0,0,0,0.06155485287308693,0,0,0,0,0,0.007694356609135866,0,0,-0.007694356609135866,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.030777426436543465,0.015388713218271732,0,0,0,0,0.12310970574617386,0,0,-0.030777426436543465,-0.007694356609135866,0,0.030777426436543465,0,0,0,0,0,0.030777426436543465,0.023083070293068886,0,0,0,0,0.04616614058613777,0.1808173805475235,0,0,-0.015388713218271732,0,0,0,0,-0.24621941149234772,-0.04616614058613777,0,0,0,0,-0.030777426436543465,-0.007694356609135866,0,0,0,0,-0.24621941149234772,-0.015388713218271732,0,0,0,0,0,-0.015388713218271732,0,0,0,0,-0.015388713218271732,0,0,0.030777426436543465,0.003847178304567933,0,-0.04616614058613777,-0.015388713218271732,0,0,0,0,0,-0.015388713218271732,0],"text":".include \"common.s\"\r\n\r\n.exportzp irq_zp0\r\n.exportzp irq_zp1\r\n.exportzp irq_zp2\r\n.exportzp irq_zp3\r\n.exportzp irq_zp4\r\n.exportzp irq_zp5\r\n.exportzp irq_zp6\r\n.exportzp irq_zp7\r\n.exportzp zp0\r\n.exportzp zp1\r\n.exportzp zp2\r\n.exportzp zp3\r\n.exportzp zp4\r\n.exportzp zp5\r\n.exportzp zp6\r\n.exportzp zp7\r\n\r\n.zeropage\r\n\r\n;; zp0..7:  Temporary utility registers in zeropage.  Do not use in routines called by IRQ handlers.\r\n\r\nzp0:        .res 1\r\nzp1:        .res 1\r\nzp2:        .res 1\r\nzp3:        .res 1\r\nzp4:        .res 1\r\nzp5:        .res 1\r\nzp6:        .res 1\r\nzp7:        .res 1\r\n\r\n;; irq_zp0..7:  Temporary utility registers in zeropage.  Only use in routines called by IRQ handlers.\r\n\r\nirq_zp0:    .res 1\r\nirq_zp1:    .res 1\r\nirq_zp2:    .res 1\r\nirq_zp3:    .res 1\r\nirq_zp4:    .res 1\r\nirq_zp5:    .res 1\r\nirq_zp6:    .res 1\r\nirq_zp7:    .res 1\r\n","sourcePath":"external/github.com/kschuetz_c64-chip8/source/vars.s","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/vars.s","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/lacerto_c64_users_guide_examples/include/colors.s","language":"asm","vector":[0,0,0,0,0,0,0.05013728141784668,0,0,0,-0.03760296106338501,0,0,0,0,0,0,0,0,0,0,0,-0.03760296106338501,0,0.05013728141784668,0.02506864070892334,0,0,0,0,0.05013728141784668,0.05013728141784668,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.01253432035446167,0,0.05013728141784668,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.01253432035446167,0,0,-0.01253432035446167,0,0,0.01253432035446167,0,0,0,0,0.05013728141784668,0,0,0,0,0,0.05013728141784668,0.01253432035446167,0,0,-0.02506864070892334,0,0,0.03760296106338501,0,-0.10027456283569336,-0.06267160177230835,0,0,0,0,0,0,0,0.10027456283569336,0.03760296106338501,0,0,0,0,0,0,0,0,0,0,0.05013728141784668,0,0,0,0,0,0,0.02506864070892334,0,0,-0.01253432035446167,0,0,0.02506864070892334,0,-0.05013728141784668,0,0,0,0,0,0,-0.01253432035446167,0,0,0.01253432035446167,0,0,0,0,0,0.05013728141784668,0,0,0,0,0.05013728141784668,0,0,-0.05013728141784668,0,0,0,0,0,-0.10027456283569336,0,0,0,0,0,0,0,0,0,0,0,-0.8021965026855469,0,0,0,0.02506864070892334,0,0,0,0,0,0.02506864070892334,0,-0.05013728141784668,0,0,0,0,0,0,-0.05013728141784668,0,0,0,0,-0.05013728141784668,0,0,0,0.05013728141784668,0,0,-0.01253432035446167,0,0,0.01253432035446167,0,0,-0.02506864070892334,0,0,0.02506864070892334,0,0,0,0,0,0.01253432035446167,0,-0.05013728141784668,0,0,0,0,0,0,-0.02506864070892334,0,0,0,0,0,0,0,0,0.01253432035446167,0,0,0,0,0.05013728141784668,0.01253432035446167,0,-0.05013728141784668,0,0,0.05013728141784668,0.02506864070892334,0,0,-0.02506864070892334,0,0,0,0,0,-0.05013728141784668,0,0.05013728141784668,0.01253432035446167,0,0,0,0,0.05013728141784668,0,0,-0.05013728141784668,-0.40109825134277344,0,0,0,0,0,0,0,0.05013728141784668,0,0,0,-0.02506864070892334,0,0,0,0,0,0,0,0,0.01253432035446167,0,0,-0.02506864070892334,0,0,0.01253432035446167,0,-0.05013728141784668,0,0,0,0,0,0,-0.02506864070892334,0,0,0,0,-0.05013728141784668,0,0,0.05013728141784668,0.02506864070892334,0,0,-0.02506864070892334,0,0.10027456283569336,0,0,0,0,0,0,0.01253432035446167,0,0,0,0,0,0,0,0,0,0,0,0.02506864070892334,0,0,-0.03760296106338501,0,0,0.02506864070892334,0,0,0,0,0,0,0,0,0,0,0,0.02506864070892334,0,0,0,0,0,0.03760296106338501,0,0,-0.03760296106338501,0,0,0,0,0,-0.02506864070892334,0,0,0.02506864070892334,0,-0.05013728141784668,0,0,0.05013728141784668,0,0,-0.10027456283569336,-0.20054912567138672,0],"text":"; Color constants\n\nblack       = $00\nwhite       = $01\nred         = $02 \ncyan        = $03\npurple      = $04\ngreen       = $05\nblue        = $06\nyellow      = $07\norange      = $08\nbrown       = $09\nlightred    = $0a\ndarkgray    = $0b\nmediumgray  = $0c\nlightgreen  = $0d\nlightblue   = $0e\nlightgray   = $0f\n","sourcePath":"external/github.com/lacerto_c64_users_guide_examples/include/colors.s","sourceMtimeMs":1620573868000,"sourceUrl":"https://github.com/lacerto/c64_users_guide_examples/blob/master/include/colors.s","sourceRepoUrl":"https://github.com/lacerto/c64_users_guide_examples","license":"UNKNOWN","attribution":"Source: lacerto/c64_users_guide_examples (License unknown)"},{"name":"github.com/mist64_c64ref/src/6502/cpu_6502.txt","language":"asm","vector":[0.0022680864203721285,0.004536172840744257,0,-0.018144691362977028,-0.0022680864203721285,0,0,0.0022680864203721285,0,-0.09752772003412247,-0.006804259493947029,0,0.0022680864203721285,0.0005670216050930321,0,-0.022680865600705147,-0.007938303053379059,0,0.004536172840744257,0.023814909160137177,0,-0.04762981832027435,-0.005670216400176287,0,0.045361731201410294,0.011340432800352573,0,0,-0.005103194620460272,0,0.011340432800352573,0.044794708490371704,0,-0.0022680864203721285,-0.0062372381798923016,0,0,0.0005670216050930321,0,-0.011340432800352573,-0.004536172840744257,0,0,0.005670216400176287,0,-0.009072345681488514,-0.004536172840744257,0,0,0.0005670216050930321,0,-0.009072345681488514,-0.0034021297469735146,0,0,0.0034021297469735146,0,0,-0.033454276621341705,0,0,0.0011340432101860642,0,0,-0.0005670216050930321,0,0.004536172840744257,0.011340432800352573,0,0,-0.0011340432101860642,0,0.011340432800352573,0.005670216400176287,0,0,0,0,0,0.0022680864203721285,0,0,-0.008505324833095074,0,0.0022680864203721285,0.0017010648734867573,0,-0.004536172840744257,-0.0028351082000881433,0,0,0,0,-0.0022680864203721285,-0.0017010648734867573,0,0,0.0022680864203721285,0,-0.0022680864203721285,-0.009072345681488514,0,0.8482643365859985,0.0005670216050930321,0,-0.0022680864203721285,-0.04933088272809982,0,0.013608518987894058,0.0017010648734867573,0,-0.0022680864203721285,-0.011340432800352573,0,0.0022680864203721285,0.0022680864203721285,0,0,-0.024948952719569206,0,0,0.023247886449098587,0,-0.0022680864203721285,-0.0034021297469735146,0,0.031753212213516235,0.005670216400176287,0,-0.015876606106758118,-0.0011340432101860642,0,0,0.009639367461204529,0,-0.0022680864203721285,-0.008505324833095074,0,0,0,0,-0.004536172840744257,-0.004536172840744257,0,0,0.015876606106758118,0,-0.006804259493947029,-0.007371281273663044,0,0.031753212213516235,0,0,-0.0022680864203721285,-0.0005670216050930321,0,0.013608518987894058,0.0028351082000881433,0,0,0,0,0,0.0022680864203721285,0,0,-0.0017010648734867573,0,0.031753212213516235,0.006804259493947029,0,-0.018144691362977028,-0.013041497208178043,0,0.018144691362977028,0,0,0,0,0,0.004536172840744257,0.0011340432101860642,0,0,-0.0028351082000881433,0,0.0022680864203721285,0.0022680864203721285,0,-0.031753212213516235,-0.0011340432101860642,0,0.018144691362977028,0.0011340432101860642,0,0,-0.0011340432101860642,0,0.045361731201410294,0.42469921708106995,0,-0.020412778481841087,-0.0011340432101860642,0,0.05216598883271217,0.006804259493947029,0,-0.0022680864203721285,-0.0017010648734867573,0,0.0022680864203721285,0.0017010648734867573,0,-0.013608518987894058,-0.004536172840744257,0,0,0,0,-0.018144691362977028,-0.025515973567962646,0,0.0022680864203721285,0.016443626955151558,0,0,-0.013608518987894058,0,0.004536172840744257,0.0011340432101860642,0,-0.029485125094652176,-0.013041497208178043,0,0.004536172840744257,0.011340432800352573,0,-0.0022680864203721285,-0.0022680864203721285,0,0.045361731201410294,0.0028351082000881433,0,0,-0.003969151526689529,0,0.004536172840744257,0.015876606106758118,0,0,-0.003969151526689529,0,0,0.006804259493947029,0,-0.034021299332380295,-0.0022680864203721285,0,0.0022680864203721285,0,0,-0.011340432800352573,-0.0022680864203721285,0,0,0.015876606106758118,0,-0.0022680864203721285,-0.009072345681488514,0,0.004536172840744257,0.009072345681488514,0,0,0,0,0.0022680864203721285,0.0034021297469735146,0,-0.0022680864203721285,0,0,0.0022680864203721285,0.003969151526689529,0,0,-0.015876606106758118,0,0,0.009072345681488514,0,-0.004536172840744257,0,0,0.0022680864203721285,0.023247886449098587,0,-0.013608518987894058,-0.011340432800352573,0,0,0.026082994416356087,0,0,-0.0017010648734867573,0,0.038557469844818115,0.0011340432101860642,0,-0.011340432800352573,-0.007371281273663044,0,0,0.21206608414649963,0,0,-0.009639367461204529,0,0.06350642442703247,0.004536172840744257,0,-0.011340432800352573,-0.0005670216050930321,0,0,0.0028351082000881433,0,-0.0022680864203721285,-0.014742562547326088,0,0.011340432800352573,0.0022680864203721285,0,0,-0.0017010648734867573,0,0,0.030619168654084206,0,-0.006804259493947029,-0.003969151526689529,0,0.004536172840744257,0.0022680864203721285,0,-0.05216598883271217,-0.0005670216050930321,0,0,0,0,0,-0.018144691362977028,0,0,0.0011340432101860642,0,-0.0022680864203721285,-0.007371281273663044,0,0.009072345681488514,0.007938303053379059,0,0,-0.0017010648734867573,0,0.004536172840744257,0.005670216400176287,0,0,0,0,0.0022680864203721285,0.0011340432101860642,0,0,-0.0011340432101860642,0,0,0.009072345681488514,0,-0.0022680864203721285,-0.004536172840744257,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-3 -->\n[operations]\nADC  arith  NV----ZC  A + M + C ‚Üí A, C\nAND  logic  N-----Z-  A ‚àß M ‚Üí A\nASL  shift  N-----ZC  C ‚Üê /M7...M0/ ‚Üê 0\nBCC  bra    --------  Branch on C = 0\nBCS  bra    --------  Branch on C = 1\nBEQ  bra    --------  Branch on Z = 1\nBIT  logic  NV----Z-  A ‚àß M, M7 ‚Üí N, M6 ‚Üí V\nBMI  bra    --------  Branch on N = 1\nBNE  bra    --------  Branch on Z = 0\nBPL  bra    --------  Branch on N = 0\nBRK  ctrl   -----1--  PC + 2‚Üì, [FFFE] ‚Üí PCL, [FFFF] ‚Üí PCH\nBVC  bra    --------  Branch on V = 0\nBVS  bra    --------  Branch on V = 1\nCLC  flags  -------0  0 ‚Üí C\nCLD  flags  ----0---  0 ‚Üí D\nCLI  flags  -----0--  0 ‚Üí I\nCLV  flags  -0------  0 ‚Üí V\nCMP  arith  N-----ZC  A - M\nCPX  arith  N-----ZC  X - M\nCPY  arith  N-----ZC  Y - M\nDEC  inc    N-----Z-  M - 1 ‚Üí M\nDEX  inc    N-----Z-  X - 1 ‚Üí X\nDEY  inc    N-----Z-  Y - 1 ‚Üí Y\nEOR  logic  N-----Z-  A ‚äª M ‚Üí A\nINC  inc    N-----Z-  M + 1 ‚Üí M\nINX  inc    N-----Z-  X + 1 ‚Üí X\nINY  inc    N-----Z-  Y + 1 ‚Üí Y\nJMP  ctrl   --------  [PC + 1] ‚Üí PCL, [PC + 2] ‚Üí PCH\nJSR  ctrl   --------  PC + 2‚Üì, [PC + 1] ‚Üí PCL, [PC + 2] ‚Üí PCH\nLDA  load   N-----Z-  M ‚Üí A\nLDX  load   N-----Z-  M ‚Üí X\nLDY  load   N-----Z-  M ‚Üí Y\nLSR  shift  0-----ZC  0 ‚Üí /M7...M0/ ‚Üí C\nNOP  nop    --------  No operation\nORA  logic  N-----Z-  A ‚à® M ‚Üí A\nPHA  stack  --------  A‚Üì\nPHP  stack  --------  P‚Üì\nPLA  stack  N-----Z-  A‚Üë\nPLP  stack  NV--DIZC  P‚Üë\nROL  shift  N-----ZC  C ‚Üê /M7...M0/ ‚Üê C\nROR  shift  N-----ZC  C ‚Üí /M7...M0/ ‚Üí C\nRTI  ctrl   NV--DIZC  P‚Üë PC‚Üë\nRTS  ctrl   --------  PC‚Üë, PC + 1 ‚Üí PC\nSBC  arith  NV----ZC  A - M - ~C ‚Üí A\nSEC  flags  -------1  1 ‚Üí C\nSED  flags  ----1---  1 ‚Üí D\nSEI  flags  -----1--  1 ‚Üí I\nSTA  load   --------  A ‚Üí M\nSTX  load   --------  X ‚Üí M\nSTY  load   --------  Y ‚Üí M\nTAX  trans  N-----Z-  A ‚Üí X\nTAY  trans  N-----Z-  A ‚Üí Y\nTSX  trans  N-----Z-  S ‚Üí X\nTXA  trans  N-----Z-  X ‚Üí A\nTXS  trans  --------  X ‚Üí S\nTYA  trans  N-----Z-  Y ‚Üí A","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/src/6502/cpu_6502.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-3"},{"name":"github.com/mist64_c64ref/src/6502/cpu_6502.txt","language":"asm","vector":[0,0,0,-0.01673889346420765,-0.0251083392649889,0,0.01673889346420765,0.05858612433075905,0,0,-0.03766250982880592,0,0.0669555738568306,0.008369446732103825,0,-0.0334777869284153,-0.008369446732103825,0,0.01673889346420765,0.0334777869284153,0,-0.0334777869284153,-0.04184723272919655,0,0,0.0251083392649889,0,0,-0.04184723272919655,0,0,0.07950974255800247,0,0,-0.01255416963249445,0,0,0.008369446732103825,0,0,-0.01673889346420765,0,0.1004333570599556,0.008369446732103825,0,-0.0334777869284153,-0.08787918835878372,0,0,0.0502166785299778,0,0,-0.008369446732103825,0,0.0669555738568306,0.0251083392649889,0,0,-0.0334777869284153,0,0,0.03766250982880592,0,-0.01673889346420765,-0.020923616364598274,0,0.01673889346420765,0,0,-0.01673889346420765,-0.09624863415956497,0,0.0334777869284153,0.008369446732103825,0,-0.01673889346420765,-0.0334777869284153,0,0.0334777869284153,0.0251083392649889,0,-0.1004333570599556,-0.008369446732103825,0,0.0334777869284153,0,0,-0.01673889346420765,-0.2510834038257599,0,0.01673889346420765,0.01673889346420765,0,-0.01673889346420765,-0.0251083392649889,0,0.01673889346420765,0,0,0,-0.008369446732103825,0,0.1506500393152237,0.008369446732103825,0,-0.0502166785299778,-0.008369446732103825,0,0,0.0334777869284153,0,0,-0.01673889346420765,0,0.01673889346420765,0.008369446732103825,0,0,-0.01673889346420765,0,0,0.004184723366051912,0,-0.01673889346420765,-0.01255416963249445,0,0.2008667141199112,0,0,0,0,0,0.0669555738568306,0.01673889346420765,0,0,0,0,0.1004333570599556,0.05858612433075905,0,0,-0.0251083392649889,0,0,0.01255416963249445,0,-0.1339111477136612,0,0,0.0836944654583931,0.0334777869284153,0,0,-0.008369446732103825,0,0,0.004184723366051912,0,0,-0.01255416963249445,0,0,0.0251083392649889,0,0,-0.01255416963249445,0,0,0.020923616364598274,0,-0.01673889346420765,-0.020923616364598274,0,0,0.0334777869284153,0,-0.1004333570599556,-0.05440140143036842,0,0.2008667141199112,0.01673889346420765,0,-0.0502166785299778,-0.0502166785299778,0,0.0334777869284153,0.008369446732103825,0,-0.0334777869284153,-0.01255416963249445,0,0,0.01673889346420765,0,-0.1673889309167862,-0.004184723366051912,0,0.0334777869284153,0.07532501965761185,0,-0.1004333570599556,-0.1506500393152237,0,0.2176056057214737,0.008369446732103825,0,-0.0502166785299778,-0.01255416963249445,0,0.0334777869284153,0.008369446732103825,0,0,-0.004184723366051912,0,0,0.004184723366051912,0,-0.3180389702320099,-0.008369446732103825,0,0.0669555738568306,0.1171722486615181,0,0,-0.008369446732103825,0,0.0669555738568306,0.03766250982880592,0,-0.0334777869284153,-0.008369446732103825,0,0.01673889346420765,0.0502166785299778,0,-0.0502166785299778,0,0,0,0,0,-0.0502166785299778,-0.0669555738568306,0,0.0334777869284153,0.04184723272919655,0,-0.1004333570599556,0,0,0.0334777869284153,0.0251083392649889,0,0,-0.008369446732103825,0,0,0,0,0,0,0,0,0.01673889346420765,0,0,-0.008369446732103825,0,0,0,0,0,-0.05440140143036842,0,0,0.10461807996034622,0,-0.0334777869284153,-0.029293062165379524,0,0,0.0251083392649889,0,0,-0.020923616364598274,0,0,0.008369446732103825,0,0,-0.10880280286073685,0,0.01673889346420765,0.0251083392649889,0,-0.0502166785299778,-0.05440140143036842,0,0,0.11298752576112747,0,0,-0.029293062165379524,0,0.0669555738568306,0.020923616364598274,0,0,0,0,0.0334777869284153,0.03766250982880592,0,-0.0334777869284153,-0.17157365381717682,0,0.0502166785299778,0.0334777869284153,0,0,0,0,0,0.03766250982880592,0,-0.0334777869284153,-0.01673889346420765,0,0.01673889346420765,0.008369446732103825,0,-0.01673889346420765,-0.029293062165379524,0,0.0669555738568306,0.0502166785299778,0,-0.01673889346420765,-0.0251083392649889,0,0.01673889346420765,0.0334777869284153,0,-0.0502166785299778,-0.0502166785299778,0,0.0669555738568306,0.04184723272919655,0,-0.01673889346420765,0,0,0,0,0,-0.1673889309167862,-0.0334777869284153,0,0,0.020923616364598274,0,-0.01673889346420765,0,0,0.0334777869284153,0,0,-0.01673889346420765,0,0,0,0,0,-0.5021668076515198,-0.01673889346420765,0,0.0334777869284153,0,0,-0.0502166785299778,-0.004184723366051912,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-10 -->\nSBC  Subtract Memory from Accumulator with Borrow\n     This instruction subtracts the value of memory and borrow from the value of the accumulator, using two's complement arithmetic, and stores the result in the accumulator. Borrow is defined as the carry flag complemented; therefore, a resultant carry flag indicates that a borrow has not occurred.\n     This instruction affects the accumulator. The carry flag is set if the result is greater than or equal to 0. The carry flag is reset when the result is less than 0, indicating a borrow. The over¬≠flow flag is set when the result exceeds +127 or -127, otherwise it is reset. The negative flag is set if the result in the accumulator has bit 7 on, otherwise it is reset. The Z flag is set if the result in the accumulator is 0, otherwise it is reset.\n     ## XXX are the flags correctly described for decimal mode?\n\nAND  \"AND\" Memory with Accumulator\n     The AND instruction transfer the accumulator and memory to the adder which performs a bit-by-bit AND operation and stores the result back in the accumulator.\n     This instruction affects the accumulator; sets the zero flag if the result in the accumulator is 0, otherwise resets the zero flag; sets the negative flag if the result in the accumulator has bit 7 on, otherwise resets the negative flag.","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/src/6502/cpu_6502.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-10"},{"name":"github.com/mist64_c64ref/src/6502/cpu_6502.txt","language":"asm","vector":[0.015145432204008102,0,0,0,-0.011359074153006077,0,0.015145432204008102,0.06436808407306671,0,0,-0.04543629661202431,0,0.015145432204008102,0.007572716102004051,0,-0.09087259322404861,-0.026504505425691605,0,0.015145432204008102,0.022718148306012154,0,0,-0.03786357864737511,0,0,0.0037863580510020256,0,0,-0.06058172881603241,0,0,0.03786357864737511,0,-0.030290864408016205,-0.018931789323687553,0,0,0,0,0,-0.015145432204008102,0,0.030290864408016205,0.015145432204008102,0,-0.07572715729475021,-0.03786357864737511,0,0.030290864408016205,0.09465894848108292,0,0,-0.007572716102004051,0,0.18174518644809723,0.015145432204008102,0,-0.030290864408016205,-0.05300901085138321,0,0,0.06815443933010101,0,0,-0.007572716102004051,0,0.015145432204008102,0.030290864408016205,0,-0.030290864408016205,-0.09087259322404861,0,0,0.007572716102004051,0,0,-0.05300901085138321,0,0.06058172881603241,0,0,-0.12116345763206482,-0.007572716102004051,0,0.030290864408016205,0,0,-0.015145432204008102,-0.27261775732040405,0,0,0,0,-0.015145432204008102,-0.007572716102004051,0,0,0.007572716102004051,0,-0.030290864408016205,0,0,0.16659975051879883,0.007572716102004051,0,-0.015145432204008102,-0.030290864408016205,0,0,0.007572716102004051,0,0,-0.04922265186905861,0,0.030290864408016205,0.007572716102004051,0,-0.030290864408016205,-0.0037863580510020256,0,0.06058172881603241,0.007572716102004051,0,-0.030290864408016205,-0.015145432204008102,0,0.21203604340553284,0,0,0,-0.015145432204008102,0,0.06058172881603241,0.011359074153006077,0,-0.015145432204008102,0,0,0.15145431458950043,0.015145432204008102,0,0,-0.05679536983370781,0,0,0.026504505425691605,0,-0.06058172881603241,0,0,0.07572715729475021,0.09087259322404861,0,0,-0.022718148306012154,0,0,0.007572716102004051,0,0,0,0,0,0.04543629661202431,0,0,-0.018931789323687553,0,0,0,0,-0.07572715729475021,-0.026504505425691605,0,0,0.06058172881603241,0,-0.015145432204008102,-0.06058172881603241,0,0.19689060747623444,0.026504505425691605,0,-0.06058172881603241,-0.04543629661202431,0,0.030290864408016205,0,0,-0.10601802170276642,-0.015145432204008102,0,0,0,0,-0.15145431458950043,-0.015145432204008102,0,0.015145432204008102,0.08329987525939941,0,-0.09087259322404861,-0.13630887866020203,0,0.06058172881603241,0,0,-0.07572715729475021,-0.0037863580510020256,0,0,0.018931789323687553,0,0,-0.015145432204008102,0,0,0.03407721966505051,0,-0.15145431458950043,-0.015145432204008102,0,0.07572715729475021,0.10980437695980072,0,0,-0.022718148306012154,0,0.06058172881603241,0.03407721966505051,0,0,-0.007572716102004051,0,0.030290864408016205,0.07572715729475021,0,-0.030290864408016205,0,0,0.030290864408016205,0,0,-0.06058172881603241,-0.03786357864737511,0,0.030290864408016205,0.03786357864737511,0,-0.15145431458950043,0,0,0,0.007572716102004051,0,-0.030290864408016205,-0.018931789323687553,0,0,0.007572716102004051,0,-0.06058172881603241,0,0,0,0.04543629661202431,0,0,-0.04543629661202431,0,0,0,0,0,-0.007572716102004051,0,0,0.10223166644573212,0,-0.12116345763206482,-0.03786357864737511,0,0,0.015145432204008102,0,-0.015145432204008102,-0.05300901085138321,0,0,0.015145432204008102,0,-0.015145432204008102,-0.10601802170276642,0,0.030290864408016205,0.015145432204008102,0,-0.06058172881603241,-0.04922265186905861,0,0,0.030290864408016205,0,0,-0.04164993762969971,0,0.04543629661202431,0,0,0,-0.007572716102004051,0,0,0.04164993762969971,0,-0.07572715729475021,-0.07951352000236511,0,0.04543629661202431,0.03786357864737511,0,0,0,0,0,0.03786357864737511,0,-0.030290864408016205,-0.007572716102004051,0,0.030290864408016205,0.030290864408016205,0,0,-0.022718148306012154,0,0.15145431458950043,0.06815443933010101,0,-0.015145432204008102,-0.030290864408016205,0,0,0.030290864408016205,0,-0.10601802170276642,-0.07951352000236511,0,0.12116345763206482,0.03786357864737511,0,0,-0.015145432204008102,0,0.04543629661202431,0,0,-0.15145431458950043,-0.04543629661202431,0,0,0.018931789323687553,0,-0.030290864408016205,0,0,0,0,0,0,0,0,0,0,0,-0.5149446725845337,-0.06058172881603241,0,0,0,0,-0.015145432204008102,-0.026504505425691605,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-11 -->\nORA  \"OR\" Memory with Accumulator\n     The ORA instruction transfers the memory and the accumulator to the adder which performs a binary \"OR\" on a bit-by-bit basis and stores the result in the accumulator.\n     This instruction affects the accumulator; sets the zero flag if the result in the accumulator is 0, otherwise resets the zero flag; sets the negative flag if the result in the accumulator has bit 7 on, otherwise resets the negative flag.\n\nEOR  \"Exclusive OR\" Memory with Accumulator\n     The EOR instruction transfers the memory and the accumulator to the adder which performs a binary \"EXCLUSIVE OR\" on a bit-by-bit basis and stores the result in the accumulator.\n     This instruction affects the accumulator; sets the zero flag if the result in the accumulator is 0, otherwise resets the zero flag sets the negative flag if the result in the accumulator has bit 7 on, otherwise resets the negative flag.\n\nSEC  Set Carry Flag\n     This instruction initializes the carry flag to a 1. This operation should normally precede a SBC loop. It is also useful when used with a ROL instruction to initialize a bit in memory to a 1.\n     This instruction affects no registers in the microprocessor and no flags other than the carry flag which is set.\n\nCLC  Clear Carry Flag\n     This instruction initializes the carry flag to a 0. This operation should normally precede an ADC loop. It is also useful when used with a ROL instruction to clear a bit in memory.\n     This instruction affects no registers in the microprocessor and no flags other than the carry flag which is reset.","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/src/6502/cpu_6502.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-11"},{"name":"github.com/mist64_c64ref/src/6502/cpu_6502.txt","language":"asm","vector":[0,0,0,0,-0.01780911348760128,0,0,0.03561822697520256,0,-0.03561822697520256,-0.026713671162724495,0,0.03561822697520256,0.00890455674380064,0,0,-0.04897506535053253,0,0.03561822697520256,0.062331900000572205,0,0,0,0,0.01780911348760128,0.00445227837190032,0,0,-0.07123645395040512,0,0.03561822697520256,0.03561822697520256,0,-0.05342734232544899,-0.044522784650325775,0,0,0,0,-0.01780911348760128,0,0,0,0.01780911348760128,0,-0.19590026140213013,-0.08014101535081863,0,0.08904556930065155,0.05342734232544899,0,-0.07123645395040512,-0.00890455674380064,0,0.16028203070163727,0.013356835581362247,0,-0.03561822697520256,-0.05342734232544899,0,0.03561822697520256,0.0934978500008583,0,0,-0.022261392325162888,0,0.03561822697520256,0.00890455674380064,0,-0.01780911348760128,0,0,0,0,0,-0.01780911348760128,-0.026713671162724495,0,0,0,0,-0.14247290790081024,-0.044522784650325775,0,0.08904556930065155,0.026713671162724495,0,-0.01780911348760128,-0.19144797325134277,0,0,0.00890455674380064,0,-0.01780911348760128,-0.031165950000286102,0,0,0,0,0,0,0,0.16028203070163727,0,0,-0.01780911348760128,-0.01780911348760128,0,0,0.01780911348760128,0,0,-0.00445227837190032,0,0.01780911348760128,0.01780911348760128,0,-0.10685468465089798,-0.00445227837190032,0,0,0.00890455674380064,0,-0.07123645395040512,-0.00890455674380064,0,0.33837318420410156,0.01780911348760128,0,0,-0.026713671162724495,0,0,0.026713671162724495,0,-0.03561822697520256,-0.00890455674380064,0,0,0,0,-0.07123645395040512,-0.12021151930093765,0,0,0.057879623025655746,0,-0.01780911348760128,-0.04007050767540932,0,0.08904556930065155,0.08014101535081863,0,-0.05342734232544899,-0.01780911348760128,0,0,0.026713671162724495,0,-0.01780911348760128,0,0,0,0.04007050767540932,0,0,-0.013356835581362247,0,0,0.00445227837190032,0,0,-0.03561822697520256,0,0,0.044522784650325775,0,-0.03561822697520256,-0.08014101535081863,0,0.14247290790081024,0.04897506535053253,0,-0.03561822697520256,-0.00890455674380064,0,0.03561822697520256,0,0,-0.19590026140213013,-0.00890455674380064,0,0.03561822697520256,0,0,0,-0.013356835581362247,0,0.01780911348760128,0.08014101535081863,0,-0.10685468465089798,-0.0934978500008583,0,0.03561822697520256,0.00445227837190032,0,-0.14247290790081024,-0.013356835581362247,0,0,0.00890455674380064,0,0,-0.05342734232544899,0,0,0,0,-0.32056406140327454,-0.044522784650325775,0,0.03561822697520256,0.1780911386013031,0,0,0,0,0.01780911348760128,0.00890455674380064,0,0,-0.01780911348760128,0,0.01780911348760128,0.00445227837190032,0,-0.01780911348760128,-0.03561822697520256,0,0,0.00890455674380064,0,0,-0.022261392325162888,0,0,0.044522784650325775,0,-0.10685468465089798,-0.031165950000286102,0,0,0,0,-0.07123645395040512,-0.057879623025655746,0,0.10685468465089798,0.022261392325162888,0,-0.08904556930065155,-0.01780911348760128,0,0,0.04007050767540932,0,-0.01780911348760128,-0.00890455674380064,0,0,0.00890455674380064,0,0,-0.01780911348760128,0,0,0.08014101535081863,0,0,-0.022261392325162888,0,0,0.01780911348760128,0,-0.01780911348760128,-0.10240240395069122,0,0,0.01780911348760128,0,-0.01780911348760128,-0.03561822697520256,0,0,0.031165950000286102,0,-0.03561822697520256,-0.057879623025655746,0,0,0.01780911348760128,0,0,-0.07568873465061188,0,0.10685468465089798,0,0,0,0,0,0,0.04007050767540932,0,-0.08904556930065155,-0.16473430395126343,0,0.05342734232544899,0.01780911348760128,0,-0.01780911348760128,0,0,0,0.013356835581362247,0,0,-0.026713671162724495,0,0.03561822697520256,0.00890455674380064,0,0,-0.026713671162724495,0,0.08904556930065155,0.08459329605102539,0,-0.01780911348760128,0,0,0.01780911348760128,0,0,-0.10685468465089798,-0.062331900000572205,0,0.1780911386013031,0,0,-0.03561822697520256,-0.05342734232544899,0,0.01780911348760128,0.05342734232544899,0,0,-0.04897506535053253,0,0,0.022261392325162888,0,0,-0.022261392325162888,0,0,0,0,-0.05342734232544899,-0.00445227837190032,0,0,0,0,-0.33837318420410156,0,0,0.01780911348760128,0,0,-0.05342734232544899,-0.00890455674380064,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-12 -->\nSEI  Set Interrupt Disable\n     This instruction initializes the interrupt disable to a 1. It is used to mask interrupt requests during system reset operations and during interrupt commands.\n     It affects no registers in the microprocessor and no flags other than the interrupt disable which is set.\n\nCLI  Clear Interrupt Disable\n     This instruction initializes the interrupt disable to a 0. This allows the microprocessor to receive interrupts.\n     It affects no registers in the microprocessor and no flags other than the interrupt disable which is cleared.\n\nSED  Set Decimal Mode\n     This instruction sets the decimal mode flag D to a 1. This makes all subsequent ADC and SBC instructions operate as a decimal arithmetic operation.\n     SED affects no registers in the microprocessor and no flags other than the decimal mode which is set to a 1.\n\nCLD  Clear Decimal Mode\n     This instruction sets the decimal mode flag to a 0. This all subsequent ADC and SBC instructions to operate as simple operations.\n     CLD affects no registers in the microprocessor and no flags other than the decimal mode flag which is set to a 0.\n\nCLV  Clear Overflow Flag\n     This instruction clears the overflow flag to a 0. This command is used in conjunction with the set overflow pin which can change the state of the overflow flag with an external signal.\n     CLV affects no registers in the microprocessor and no flags other than the overflow flag which is set to a 0.","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/src/6502/cpu_6502.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-12"},{"name":"github.com/mist64_c64ref/src/6502/cpu_6502.txt","language":"asm","vector":[0,0,0,0,-0.04871753975749016,0,0,0.03479824215173721,0,0,-0.0452377125620842,0,0.08351577818393707,0.006959648337215185,0,-0.01391929667443037,-0.03131841868162155,0,0.02783859334886074,0,0,-0.08351577818393707,-0.02783859334886074,0,0,0.010439472272992134,0,0,-0.0626368373632431,0,0,0.12875349819660187,0,-0.01391929667443037,-0.038278065621852875,0,0,0.01391929667443037,0,0,-0.02783859334886074,0,0.05567718669772148,0.01391929667443037,0,-0.041757889091968536,-0.07655613124370575,0,0,0.04871753975749016,0,-0.041757889091968536,-0.006959648337215185,0,0.041757889091968536,0,0,0,-0.06611666083335876,0,0,0.02435876987874508,0,-0.02783859334886074,-0.006959648337215185,0,0.01391929667443037,0.020878944545984268,0,0,-0.02783859334886074,0,0.01391929667443037,0.041757889091968536,0,-0.01391929667443037,-0.01391929667443037,0,0.041757889091968536,0.02783859334886074,0,-0.13919296860694885,-0.041757889091968536,0,0.02783859334886074,0,0,-0.01391929667443037,-0.2679464519023895,0,0.041757889091968536,0,0,-0.041757889091968536,-0.017399121075868607,0,0.06959648430347443,0,0,0,0,0,0.08351577818393707,0,0,-0.01391929667443037,-0.0034798241686075926,0,0,0.041757889091968536,0,-0.05567718669772148,-0.006959648337215185,0,0.01391929667443037,0.01391929667443037,0,0,-0.041757889091968536,0,0,0.0034798241686075926,0,0,-0.010439472272992134,0,0.16703155636787415,0.0034798241686075926,0,0,-0.010439472272992134,0,0.01391929667443037,0,0,0,0,0,0.11135437339544296,0.02783859334886074,0,-0.01391929667443037,-0.041757889091968536,0,0,0.041757889091968536,0,-0.09743507951498032,-0.03479824215173721,0,0.06959648430347443,0.02783859334886074,0,0,-0.01391929667443037,0,0,0.006959648337215185,0,0,-0.01391929667443037,0,0.05567718669772148,0.017399121075868607,0,-0.01391929667443037,-0.0034798241686075926,0,0.041757889091968536,0.006959648337215185,0,-0.01391929667443037,-0.02435876987874508,0,0,0.03131841868162155,0,-0.19487015902996063,-0.06959648430347443,0,0.11135437339544296,0.02435876987874508,0,-0.09743507951498032,-0.020878944545984268,0,0,0.03479824215173721,0,-0.09743507951498032,-0.020878944545984268,0,0,0.04871753975749016,0,-0.11135437339544296,-0.017399121075868607,0,0.041757889091968536,0.041757889091968536,0,-0.08351577818393707,-0.13919296860694885,0,0.1809508502483368,0,0,-0.041757889091968536,-0.03479824215173721,0,0,0.006959648337215185,0,0,0,0,0,0,0,-0.306224524974823,0,0,0.11135437339544296,0.10439472645521164,0,0,-0.0034798241686075926,0,0,0.01391929667443037,0,-0.1252736747264862,-0.020878944545984268,0,0.01391929667443037,0.05567718669772148,0,-0.02783859334886074,-0.006959648337215185,0,0,0,0,0,-0.05219736322760582,0,0.05567718669772148,0.03479824215173721,0,-0.05567718669772148,0,0,0,0.01391929667443037,0,-0.02783859334886074,-0.010439472272992134,0,0,0.02783859334886074,0,-0.01391929667443037,-0.017399121075868607,0,0,0.03131841868162155,0,-0.01391929667443037,-0.006959648337215185,0,0,0,0,0,-0.10439472645521164,0,0,0.05915701016783714,0,-0.01391929667443037,-0.04871753975749016,0,0,0.0034798241686075926,0,0,-0.05219736322760582,0,0,0.010439472272992134,0,0,-0.0904754251241684,0,0.01391929667443037,0.02783859334886074,0,-0.041757889091968536,-0.0452377125620842,0,0.01391929667443037,0.10091490298509598,0,-0.01391929667443037,-0.03131841868162155,0,0,0.017399121075868607,0,0,0,0,0,0.020878944545984268,0,-0.08351577818393707,-0.15659208595752716,0,0.16703155636787415,0.05567718669772148,0,-0.05567718669772148,-0.01391929667443037,0,0.02783859334886074,0.0034798241686075926,0,-0.05567718669772148,-0.0626368373632431,0,0.02783859334886074,0.006959648337215185,0,0,-0.01391929667443037,0,0.041757889091968536,0.041757889091968536,0,-0.01391929667443037,0,0,0,0.03131841868162155,0,-0.06959648430347443,-0.02783859334886074,0,0.041757889091968536,0.02783859334886074,0,0,-0.017399121075868607,0,0.041757889091968536,0,0,-0.05567718669772148,-0.03131841868162155,0,0.05567718669772148,0.017399121075868607,0,0,-0.006959648337215185,0,0.05567718669772148,0,0,-0.06959648430347443,0,0,0,0.01391929667443037,0,-0.5289332866668701,-0.010439472272992134,0,0,0.010439472272992134,0,-0.02783859334886074,-0.0034798241686075926,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-15 -->\nCMP  Compare Memory and Accumulator\n     This instruction subtracts the contents of memory from the contents of the accumulator.\n     The use of the CMP affects the following flags: Z flag is set on an equal comparison, reset otherwise; the N flag is set or reset by the result bit 7, the carry flag is set when the value in memory is less than or equal to the accumulator, reset when it is greater than the accumulator. The accumulator is not affected.\n\nBIT  Test Bits in Memory with Accumulator\n     This instruction performs an AND between a memory location and the accumulator but does not store the result of the AND into the accumulator.\n     The bit instruction affects the N flag with N being set to the value of bit 7 of the memory being tested, the V flag with V being set equal to bit 6 of the memory being tested and Z being set by the result of the AND operation between the accumulator and the memory if the result is Zero, Z is reset otherwise. It does not affect the accumulator.\n\nLDX  Load Index Register X From Memory\n     Load the index register X from memory.\n     LDX does not affect the C or V flags; sets Z if the value loaded was zero, otherwise resets it; sets N if the value loaded in bit 7 is a 1; otherwise N is reset, and affects only the X register.\n\nLDY  Load Index Register Y From Memory\n     Load the index register Y from memory.\n     LDY does not affect the C or V flags, sets the N flag if the value loaded in bit 7 is a 1, otherwise resets N, sets Z flag if the loaded value is zero otherwise resets Z and only affects the Y register.","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/src/6502/cpu_6502.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-15"},{"name":"github.com/mist64_c64ref/src/6502/cpu_6502.txt","language":"asm","vector":[0,0.007483658846467733,0,0,-0.037418294697999954,0,0.11973854154348373,0.029934635385870934,0,-0.014967317692935467,-0.018709147348999977,0,0.11973854154348373,0,0,0,-0.018709147348999977,0,0.029934635385870934,0.007483658846467733,0,-0.05986927077174187,-0.0037418294232338667,0,0.044901955872774124,0.0037418294232338667,0,0,-0.014967317692935467,0,0,0.078578419983387,0,-0.014967317692935467,-0.0037418294232338667,0,0,0.029934635385870934,0,0,-0.022450977936387062,0,0.014967317692935467,0.007483658846467733,0,-0.014967317692935467,-0.05612744390964508,0,0.029934635385870934,0.007483658846467733,0,-0.05986927077174187,-0.014967317692935467,0,0.07483658939599991,0.014967317692935467,0,0,-0.07483658939599991,0,0,0.022450977936387062,0,0,0,0,0.029934635385870934,0.014967317692935467,0,0,-0.06735292822122574,0,0.044901955872774124,0,0,0,-0.026192806661128998,0,0.07483658939599991,0.037418294697999954,0,-0.029934635385870934,-0.044901955872774124,0,0.014967317692935467,0,0,-0.014967317692935467,-0.2881208658218384,0,0,0,0,-0.014967317692935467,-0.022450977936387062,0,0.029934635385870934,0,0,-0.014967317692935467,0,0,0.10477122664451599,0.05986927077174187,0,-0.014967317692935467,-0.007483658846467733,0,0,0.05986927077174187,0,-0.13470585644245148,0,0,0.014967317692935467,0.018709147348999977,0,-0.029934635385870934,-0.029934635385870934,0,0,0.022450977936387062,0,0,0,0,0.22450977563858032,0,0,0,-0.007483658846467733,0,0.044901955872774124,0.0037418294232338667,0,-0.044901955872774124,0,0,0.044901955872774124,0.007483658846467733,0,-0.07483658939599991,-0.007483658846467733,0,0,0.037418294697999954,0,-0.07483658939599991,-0.029934635385870934,0,0.08980391174554825,0.052385613322257996,0,0,-0.011225488968193531,0,0,0.0037418294232338667,0,0,0,0,0.10477122664451599,0.014967317692935467,0,0,-0.007483658846467733,0,0.13470585644245148,0.022450977936387062,0,0,-0.011225488968193531,0,0,0.04116012528538704,0,-0.14967317879199982,-0.014967317692935467,0,0.11973854154348373,0.014967317692935467,0,-0.07483658939599991,-0.037418294697999954,0,0,0,0,-0.07483658939599991,-0.007483658846467733,0,0,0.03367646411061287,0,-0.014967317692935467,-0.026192806661128998,0,0.014967317692935467,0.052385613322257996,0,-0.05986927077174187,-0.14593134820461273,0,0.13470585644245148,0,0,-0.014967317692935467,-0.07483658939599991,0,0,0.007483658846467733,0,0,-0.014967317692935467,0,0,0.029934635385870934,0,-0.22450977563858032,-0.0037418294232338667,0,0.029934635385870934,0.14218951761722565,0,0,0,0,0.05986927077174187,0.029934635385870934,0,-0.20954245328903198,-0.037418294697999954,0,0.05986927077174187,0.03367646411061287,0,0,-0.037418294697999954,0,0,0,0,-0.029934635385870934,-0.04116012528538704,0,0,0.044901955872774124,0,-0.10477122664451599,0,0,0,0.0037418294232338667,0,-0.029934635385870934,-0.0037418294232338667,0,0,0.05986927077174187,0,-0.044901955872774124,-0.014967317692935467,0,0,0.08606208115816116,0,-0.029934635385870934,0,0,0,0,0,0,-0.07483658939599991,0,0,0.06735292822122574,0,0,-0.037418294697999954,0,0,0.011225488968193531,0,0,-0.037418294697999954,0,0.014967317692935467,0.018709147348999977,0,0,-0.014967317692935467,0,0,0.011225488968193531,0,0,-0.03367646411061287,0,0,0.06735292822122574,0,0,-0.011225488968193531,0,0.014967317692935467,0.007483658846467733,0,0,-0.0037418294232338667,0,0,0.026192806661128998,0,0,-0.11599671840667725,0,0.08980391174554825,0.014967317692935467,0,0,-0.03367646411061287,0,0.05986927077174187,0.03367646411061287,0,-0.044901955872774124,-0.11225488781929016,0,0.014967317692935467,0.029934635385870934,0,0,0,0,0,0.05612744390964508,0,-0.029934635385870934,-0.014967317692935467,0,0,0.011225488968193531,0,-0.044901955872774124,-0.06361110508441925,0,0.014967317692935467,0.011225488968193531,0,0,-0.03367646411061287,0,0.029934635385870934,0,0,-0.11973854154348373,-0.04116012528538704,0,0,0.022450977936387062,0,0,-0.014967317692935467,0,0.07483658939599991,0,0,-0.07483658939599991,0,0,0,0.026192806661128998,0,-0.5537907481193542,0,0,0,0.03367646411061287,0,-0.029934635385870934,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-16 -->\nSTX  Store Index Register X In Memory\n     Transfers value of X register to addressed memory location.\n     No flags or registers in the microprocessor are affected by the store operation.\n\nSTY  Store Index Register Y In Memory\n     Transfer the value of the Y register to the addressed memory location.\n     STY does not affect any flags or registers in the microprocessor.\n\nINX  Increment Index Register X By One\n     Increment X adds 1 to the current value of the X register. This is an 8-bit increment which does not affect the carry operation, therefore, if the value of X before the increment was FF, the resulting value is 00.\n     INX does not affect the carry or overflow flags; it sets the N flag if the result of the increment has a one in bit 7, otherwise resets N; sets the Z flag if the result of the increment is 0, otherwise it resets the Z flag.\n     INX does not affect any other register other than the X register.\n\nINY  Increment Index Register Y By One\n     Increment Y increments or adds one to the current value in the Y register, storing the result in the Y register. As in the case of INX the primary application is to step thru a set of values using the Y register.\n     The INY does not affect the carry or overflow flags, sets the N flag if the result of the increment has a one in bit 7, otherwise resets N, sets Z if as a result of the increment the Y register is zero otherwise resets the Z flag.","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/src/6502/cpu_6502.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-16"},{"name":"github.com/mist64_c64ref/src/6502/cpu_6502.txt","language":"asm","vector":[0,0,0,0,-0.04340488091111183,0,0.03858211636543274,0.048227645456790924,0,0,-0.009645529091358185,0,0.15432846546173096,0,0,-0.03858211636543274,-0.048227645456790924,0,0.01929105818271637,0.03858211636543274,0,-0.07716423273086548,0,0,0.01929105818271637,0.004822764545679092,0,0,-0.028936589136719704,0,0,0.08198700100183487,0,0,-0.009645529091358185,0,0,0.01929105818271637,0,0,-0.004822764545679092,0,0.03858211636543274,0,0,-0.03858211636543274,-0.053050410002470016,0,0,0.028936589136719704,0,-0.03858211636543274,-0.009645529091358185,0,0.11574635654687881,0.004822764545679092,0,0,-0.08198700100183487,0,0,0.028936589136719704,0,-0.01929105818271637,-0.009645529091358185,0,0.01929105818271637,0,0,0,-0.09163253009319305,0,0,0.028936589136719704,0,0,-0.014468294568359852,0,0.03858211636543274,0.028936589136719704,0,-0.09645529091358185,-0.048227645456790924,0,0,0,0,-0.01929105818271637,-0.2604292929172516,0,0,0,0,-0.01929105818271637,-0.07234147191047668,0,0,0,0,0,0,0,0.11574635654687881,0.024113822728395462,0,-0.03858211636543274,0,0,0,0.07716423273086548,0,-0.15432846546173096,-0.01929105818271637,0,0.01929105818271637,0.009645529091358185,0,0,-0.04340488091111183,0,0,0.009645529091358185,0,0,0,0,0.17361952364444733,0,0,0,-0.01929105818271637,0,0.05787317827343941,0.01929105818271637,0,-0.03858211636543274,0,0,0.03858211636543274,0.01929105818271637,0,0,-0.024113822728395462,0,0.05787317827343941,0.028936589136719704,0,-0.05787317827343941,-0.01929105818271637,0,0.11574635654687881,0.0675187036395073,0,0,0,0,0,0,0,0,-0.009645529091358185,0,0.05787317827343941,0.024113822728395462,0,0,-0.004822764545679092,0,0.11574635654687881,0,0,0,-0.014468294568359852,0,0,0.03375935181975365,0,-0.1350374072790146,-0.048227645456790924,0,0.1929105818271637,0,0,-0.03858211636543274,-0.053050410002470016,0,0,0,0,-0.03858211636543274,-0.009645529091358185,0,0,0.014468294568359852,0,0,-0.01929105818271637,0,0.01929105818271637,0.05787317827343941,0,-0.07716423273086548,-0.14950570464134216,0,0.09645529091358185,0,0,-0.03858211636543274,-0.11092358827590942,0,0,0.009645529091358185,0,-0.01929105818271637,0,0,0,0.009645529091358185,0,-0.21220164000988007,0,0,0,0.125391885638237,0,0,-0.009645529091358185,0,0.01929105818271637,0.03375935181975365,0,-0.21220164000988007,-0.03858211636543274,0,0,0.024113822728395462,0,-0.03858211636543274,0,0,0,0.028936589136719704,0,-0.01929105818271637,-0.028936589136719704,0,0.11574635654687881,0.05787317827343941,0,-0.05787317827343941,0,0,0,0.009645529091358185,0,-0.03858211636543274,-0.009645529091358185,0,0,0.028936589136719704,0,0,-0.009645529091358185,0,0,0.08680976182222366,0,-0.01929105818271637,0,0,0,0,0,0,-0.07234147191047668,0,0.01929105818271637,0.10127805918455124,0,0,-0.01929105818271637,0,0,0,0,0,-0.01929105818271637,0,0,0.009645529091358185,0,-0.01929105818271637,-0.024113822728395462,0,0,0.009645529091358185,0,0,-0.04340488091111183,0,0,0.048227645456790924,0,-0.07716423273086548,-0.024113822728395462,0,0.07716423273086548,0,0,0,-0.009645529091358185,0,0,0.028936589136719704,0,-0.01929105818271637,-0.11574635654687881,0,0.11574635654687881,0,0,0,-0.03858211636543274,0,0.03858211636543274,0.014468294568359852,0,0,-0.10610082000494003,0,0,0,0,0,-0.01929105818271637,0,0.05787317827343941,0.04340488091111183,0,-0.01929105818271637,-0.009645529091358185,0,0,0.07234147191047668,0,-0.05787317827343941,-0.03858211636543274,0,0.05787317827343941,0.009645529091358185,0,0,-0.01929105818271637,0,0,0.014468294568359852,0,-0.17361952364444733,-0.014468294568359852,0,0,0.028936589136719704,0,0,-0.009645529091358185,0,0.05787317827343941,0,0,-0.07716423273086548,0,0,0,0.024113822728395462,0,-0.5208585858345032,0,0,0,0.028936589136719704,0,-0.1350374072790146,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-17 -->\nDEX  Decrement Index Register X By One\n     This instruction subtracts one from the current value of the index register X and stores the result in the index register X.\n     DEX does not affect the carry or overflow flag, it sets the N flag if it has bit 7 on as a result of the decrement, otherwise it resets the N flag; sets the Z flag if X is a 0 as a result of the decrement, otherwise it resets the Z flag.\n\nDEY  Decrement Index Register Y By One\n     This instruction subtracts one from the current value in the index register Y and stores the result into the index register Y. The result does not affect or consider carry so that the value in the index register Y is decremented to 0 and then through 0 to FF.\n     Decrement Y does not affect the carry or overflow flags; if the Y register contains bit 7 on as a result of the decrement the N flag is set, otherwise the N flag is reset. If the Y register is 0 as a result of the decrement, the Z flag is set otherwise the Z flag is reset. This instruction only affects the index register Y.","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/src/6502/cpu_6502.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-17"},{"name":"github.com/mist64_c64ref/src/6502/cpu_6502.txt","language":"asm","vector":[0,0,0,0,-0.0573991984128952,0,0.12362904846668243,0.022076616063714027,0,0,-0.013245969079434872,0,0.1412903368473053,0,0,-0.05298387631773949,-0.008830646052956581,0,0.017661292105913162,0.008830646052956581,0,-0.035322584211826324,-0.008830646052956581,0,0,0.0044153230264782906,0,0,-0.03973790630698204,0,0,0.06181452423334122,0,0,-0.03090726211667061,0,0.05298387631773949,0.008830646052956581,0,0,-0.008830646052956581,0,0.08830646425485611,0,0,-0.035322584211826324,-0.07064516842365265,0,0.017661292105913162,0.03973790630698204,0,-0.035322584211826324,-0.008830646052956581,0,0.035322584211826324,0.017661292105913162,0,-0.017661292105913162,-0.06181452423334122,0,0,0.022076616063714027,0,-0.017661292105913162,0,0,0.035322584211826324,0.026491938158869743,0,-0.017661292105913162,-0.026491938158869743,0,0.017661292105913162,0.044153232127428055,0,-0.017661292105913162,-0.026491938158869743,0,0.017661292105913162,0.026491938158869743,0,-0.10596775263547897,-0.035322584211826324,0,0.035322584211826324,0,0,-0.017661292105913162,-0.26933470368385315,0,0.035322584211826324,0.013245969079434872,0,-0.017661292105913162,-0.017661292105913162,0,0,0,0,0,-0.026491938158869743,0,0.12362904846668243,0.06181452423334122,0,-0.017661292105913162,-0.0044153230264782906,0,0,0.07064516842365265,0,-0.12362904846668243,-0.026491938158869743,0,0.017661292105913162,0.008830646052956581,0,-0.017661292105913162,-0.03090726211667061,0,0.017661292105913162,0,0,0,0,0,0.2295967936515808,0,0,-0.035322584211826324,0,0,0.035322584211826324,0.03090726211667061,0,0,0,0,0.08830646425485611,0.044153232127428055,0,0,-0.026491938158869743,0,0,0.022076616063714027,0,-0.035322584211826324,-0.03090726211667061,0,0.10596775263547897,0.022076616063714027,0,0,-0.013245969079434872,0,0.035322584211826324,0,0,0,-0.008830646052956581,0,0.035322584211826324,0.03090726211667061,0,0,-0.013245969079434872,0,0.10596775263547897,0.013245969079434872,0,-0.017661292105913162,-0.017661292105913162,0,0,0.017661292105913162,0,-0.12362904846668243,-0.05298387631773949,0,0.08830646425485611,0.026491938158869743,0,-0.05298387631773949,-0.022076616063714027,0,0,0.017661292105913162,0,-0.035322584211826324,-0.008830646052956581,0,0,0.013245969079434872,0,-0.035322584211826324,-0.013245969079434872,0,0.017661292105913162,0.06181452423334122,0,-0.08830646425485611,-0.1412903368473053,0,0.1412903368473053,0.0044153230264782906,0,-0.017661292105913162,-0.07064516842365265,0,0,0.008830646052956581,0,0,-0.008830646052956581,0,0,0.03973790630698204,0,-0.2825806736946106,0,0,0.05298387631773949,0.15012098848819733,0,0,-0.03090726211667061,0,0.035322584211826324,0.022076616063714027,0,-0.17661292850971222,-0.008830646052956581,0,0.017661292105913162,0.044153232127428055,0,0,0,0,0.035322584211826324,0,0,0,-0.017661292105913162,0,0.17661292850971222,0.06622984260320663,0,-0.10596775263547897,0,0,0,0.03973790630698204,0,-0.035322584211826324,-0.008830646052956581,0,0,0.022076616063714027,0,-0.017661292105913162,-0.008830646052956581,0,0.017661292105913162,0.06181452423334122,0,0,-0.013245969079434872,0,0,0,0,-0.10596775263547897,-0.06622984260320663,0,0,0.05298387631773949,0,-0.017661292105913162,-0.03090726211667061,0,0,0.0044153230264782906,0,0,-0.022076616063714027,0,0,0.0044153230264782906,0,-0.05298387631773949,-0.044153232127428055,0,0,0.017661292105913162,0,0,-0.04856855422258377,0,0,0.07947581261396408,0,0,-0.013245969079434872,0,0.017661292105913162,0,0,0,0,0,0,0.03090726211667061,0,-0.035322584211826324,-0.14570565521717072,0,0.05298387631773949,0.026491938158869743,0,-0.05298387631773949,-0.03090726211667061,0,0.017661292105913162,0.022076616063714027,0,-0.017661292105913162,-0.09272178262472153,0,0,0.013245969079434872,0,0,0,0,0.05298387631773949,0.07506049424409866,0,-0.017661292105913162,-0.008830646052956581,0,0.017661292105913162,0.09713710844516754,0,-0.035322584211826324,-0.05298387631773949,0,0.035322584211826324,0.022076616063714027,0,0,-0.017661292105913162,0,0.035322584211826324,0,0,-0.05298387631773949,-0.017661292105913162,0,0,0.035322584211826324,0,0,0,0,0.05298387631773949,0.008830646052956581,0,-0.05298387631773949,-0.05298387631773949,0,0,0.008830646052956581,0,-0.5298387408256531,-0.008830646052956581,0,0.017661292105913162,0.026491938158869743,0,-0.035322584211826324,-0.0044153230264782906,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-19 -->\nCPY  Compare Index Register Y To Memory\n     This instruction performs a two's complement subtraction between the index register Y and the specified memory location. The results of the subtraction are not stored anywhere. The instruction is strictly used to set the flags.\n     CPY affects no registers in the microprocessor and also does not affect the overflow flag. If the value in the index register Y is equal to or greater than the value in the memory, the carry flag will be set, otherwise it will be cleared. If the results of the subtraction contain bit 7 on the N bit will be set, otherwise it will be cleared. If the value in the index register Y and the value in the memory are equal, the zero flag will be set, otherwise it will be cleared.\n\nTAX  Transfer Accumulator To Index X\n     This instruction takes the value from accumulator A and transfers or loads it into the index register X without disturbing the content of the accumulator A.\n     TAX only affects the index register X, does not affect the carry or overflow flags. The N flag is set if the resultant value in the index register X has bit 7 on, otherwise N is reset. The Z bit is set if the content of the register X is 0 as a result of the operation, otherwise it is reset.","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/src/6502/cpu_6502.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-19"},{"name":"github.com/mist64_c64ref/src/6502/cpu_6502.txt","language":"asm","vector":[0,0.007209794130176306,0,0,-0.0829126313328743,0,0,0.03965386748313904,0,0,0,0,0.17303505539894104,0,0,-0.057678353041410446,-0.007209794130176306,0,0.014419588260352612,0.02162938192486763,0,-0.04325876384973526,-0.032444074749946594,0,0,0.003604897065088153,0,0,-0.025234280154109,0,0.028839176520705223,0.06488814949989319,0,0,0,0,0,0,0,0,0,0,0.014419588260352612,0,0,-0.014419588260352612,-0.08651752769947052,0,0.057678353041410446,0.028839176520705223,0,-0.04325876384973526,-0.007209794130176306,0,0.07209794223308563,0.025234280154109,0,0,-0.054073456674814224,0,0,0.025234280154109,0,-0.014419588260352612,0,0,0.04325876384973526,0.03965386748313904,0,0,-0.050468560308218,0,0,0.02162938192486763,0,0,-0.02162938192486763,0,0,0.02162938192486763,0,-0.08651752769947052,-0.04686366021633148,0,0.028839176520705223,0,0,-0.028839176520705223,-0.24513299763202667,0,0,0,0,-0.014419588260352612,-0.014419588260352612,0,0,0,0,0,0,0,0.08651752769947052,0,0,-0.04325876384973526,0,0,0,0.08651752769947052,0,-0.17303505539894104,-0.028839176520705223,0,0.014419588260352612,0.010814690962433815,0,0,-0.04325876384973526,0,0.04325876384973526,0.007209794130176306,0,0,0,0,0.23071341216564178,0.014419588260352612,0,-0.057678353041410446,0,0,0.04325876384973526,0.010814690962433815,0,0,0,0,0.08651752769947052,0.007209794130176306,0,0,-0.010814690962433815,0,0,0.03965386748313904,0,0,-0.02162938192486763,0,0.07209794223308563,0.036048971116542816,0,0,0,0,0.04325876384973526,0,0,0,-0.007209794130176306,0,0.07209794223308563,0.036048971116542816,0,-0.014419588260352612,-0.003604897065088153,0,0.04325876384973526,0.007209794130176306,0,0,-0.003604897065088153,0,0,0.010814690962433815,0,-0.15861546993255615,-0.04325876384973526,0,0.100937120616436,0.025234280154109,0,0,-0.03965386748313904,0,0,0,0,-0.028839176520705223,-0.007209794130176306,0,0,0.010814690962433815,0,-0.12977629899978638,-0.018024485558271408,0,0.014419588260352612,0.04325876384973526,0,-0.07209794223308563,-0.14419588446617126,0,0.17303505539894104,0,0,0,-0.09372732043266296,0,0,0.007209794130176306,0,0,0,0,0,0.02162938192486763,0,-0.3460701107978821,0,0,0,0.15861546993255615,0,0,-0.04325876384973526,0,0.04325876384973526,0.025234280154109,0,-0.18745464086532593,-0.010814690962433815,0,0.014419588260352612,0.04325876384973526,0,0,0,0,0.07209794223308563,0.007209794130176306,0,0,0,0,0.08651752769947052,0.036048971116542816,0,-0.08651752769947052,0,0,0,0.025234280154109,0,-0.04325876384973526,-0.003604897065088153,0,0,0.050468560308218,0,0,-0.018024485558271408,0,0,0.03965386748313904,0,0,0,0,0,0,0,0,-0.0829126313328743,0,0,0.06128324940800667,0,0,0,0,0,0,0,0,-0.014419588260352612,0,0.014419588260352612,0,0,-0.08651752769947052,-0.08651752769947052,0,0.028839176520705223,0.014419588260352612,0,0,-0.04325876384973526,0,0,0.08651752769947052,0,0,-0.003604897065088153,0,0.04325876384973526,0,0,0,0,0,0,0.02162938192486763,0,-0.014419588260352612,-0.1838497519493103,0,0.04325876384973526,0,0,0,-0.04325876384973526,0,0,0.025234280154109,0,0,-0.09372732043266296,0,0,0.018024485558271408,0,0,0,0,0.057678353041410446,0.09372732043266296,0,-0.014419588260352612,-0.014419588260352612,0,0.028839176520705223,0.054073456674814224,0,-0.014419588260352612,-0.04325876384973526,0,0.04325876384973526,0.02162938192486763,0,0,-0.02162938192486763,0,0.04325876384973526,0,0,-0.100937120616436,0,0,0,0.018024485558271408,0,0,0,0,0.04325876384973526,0.010814690962433815,0,-0.07209794223308563,0,0,0,0.018024485558271408,0,-0.49026599526405334,-0.003604897065088153,0,0,0.010814690962433815,0,-0.028839176520705223,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-20 -->\nTXA  Transfer Index X To Accumulator\n     This instruction moves the value that is in the index register X to the accumulator A without disturbing the content of the index register X.\n     TXA does not affect any register other than the accumulator and does not affect the carry or overflow flag. If the result in A has bit 7 on, then the N flag is set, otherwise it is reset. If the resultant value in the accumulator is 0, then the Z flag is set, other¬≠ wise it is reset.\n\nTAY  Transfer Accumulator To Index Y\n     This instruction moves the value of the accumulator into index register Y without affecting the accumulator.\n     TAY instruction only affects the Y register and does not affect either the carry or overflow flags. If the index register Y has bit 7 on, then N is set, otherwise it is reset. If the content of the index register Y equals 0 as a result of the operation, Z is set on, otherwise it is reset.\n\nTYA  Transfer Index Y To Accumulator\n     This instruction moves the value that is in the index register Y to accumulator A without disturbing the content of the register Y.\n     TYA does not affect any other register other than the accumulator and does not affect the carry or overflow flag. If the result in the accumulator A has bit 7 on, the N flag is set, otherwise it is reset. If the resultant value in the accumulator A is 0, then the Z flag is set, otherwise it is reset.","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/src/6502/cpu_6502.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-20"},{"name":"github.com/mist64_c64ref/src/6502/cpu_6502.txt","language":"asm","vector":[0,0.02851973846554756,0,0,-0.009506579488515854,0,0.019013158977031708,0.004753289744257927,0,0,-0.019013158977031708,0,0.07605263590812683,0.023766448721289635,0,-0.019013158977031708,-0.04753289744257927,0,0.11407895386219025,0,0,0,-0.019013158977031708,0,0.019013158977031708,0.004753289744257927,0,0,-0.03327303007245064,0,0.019013158977031708,0.019013158977031708,0,-0.019013158977031708,-0.01425986923277378,0,0,0,0,0,-0.04753289744257927,0,0.19013158977031708,0.09506579488515854,0,-0.038026317954063416,-0.04277960956096649,0,0,0.08555921912193298,0,-0.019013158977031708,-0.009506579488515854,0,0.07605263590812683,0,0,0,-0.019013158977031708,0,0,0.038026317954063416,0,-0.019013158977031708,-0.009506579488515854,0,0.019013158977031708,0.023766448721289635,0,0,-0.019013158977031708,0,0.019013158977031708,0.009506579488515854,0,0,-0.03327303007245064,0,0.019013158977031708,0.03327303007245064,0,-0.15210527181625366,-0.02851973846554756,0,0,0.004753289744257927,0,-0.13309212028980255,-0.25667765736579895,0,0,0,0,-0.019013158977031708,-0.01425986923277378,0,0.019013158977031708,0,0,0,-0.004753289744257927,0,0.11407895386219025,0.009506579488515854,0,-0.07605263590812683,0,0,0.038026317954063416,0.038026317954063416,0,0,-0.009506579488515854,0,0.038026317954063416,0.05703947693109512,0,0,0,0,0,0.009506579488515854,0,-0.019013158977031708,0,0,0.20914475619792938,0.019013158977031708,0,0,-0.009506579488515854,0,0.285197377204895,0,0,0,-0.009506579488515854,0,0,0.09506579488515854,0,-0.019013158977031708,-0.03327303007245064,0,0,0,0,-0.07605263590812683,-0.009506579488515854,0,0.09506579488515854,0.038026317954063416,0,-0.019013158977031708,-0.004753289744257927,0,0,0.04753289744257927,0,0,-0.019013158977031708,0,0.05703947693109512,0.052286189049482346,0,-0.019013158977031708,-0.004753289744257927,0,0.019013158977031708,0.009506579488515854,0,-0.019013158977031708,-0.009506579488515854,0,0.11407895386219025,0.02851973846554756,0,-0.038026317954063416,-0.07605263590812683,0,0.019013158977031708,0.009506579488515854,0,-0.07605263590812683,-0.07605263590812683,0,0.019013158977031708,0.004753289744257927,0,-0.19013158977031708,-0.023766448721289635,0,0,0.019013158977031708,0,0,-0.01425986923277378,0,0.019013158977031708,0.05703947693109512,0,-0.019013158977031708,-0.1663651466369629,0,0.07605263590812683,0.019013158977031708,0,-0.05703947693109512,-0.004753289744257927,0,0,0.019013158977031708,0,-0.15210527181625366,0,0,0,0.004753289744257927,0,-0.09506579488515854,-0.009506579488515854,0,0,0.1235855370759964,0,0,-0.004753289744257927,0,0,0.17111843824386597,0,0,0,0,0,0.004753289744257927,0,-0.038026317954063416,-0.009506579488515854,0,0.019013158977031708,0.004753289744257927,0,0,-0.04277960956096649,0,0,0.04753289744257927,0,-0.019013158977031708,-0.009506579488515854,0,0.05703947693109512,0.04753289744257927,0,0,-0.009506579488515854,0,0.019013158977031708,0.02851973846554756,0,0,-0.01425986923277378,0,0,0.02851973846554756,0,-0.019013158977031708,-0.009506579488515854,0,0,0.05703947693109512,0,-0.019013158977031708,-0.023766448721289635,0,0,0.01425986923277378,0,0,-0.038026317954063416,0,0,0.01425986923277378,0,0,-0.09506579488515854,0,0,0.004753289744257927,0,0,-0.038026317954063416,0,0,0.009506579488515854,0,0,-0.04277960956096649,0,0.038026317954063416,0.038026317954063416,0,0,-0.03327303007245064,0,0,0.004753289744257927,0,-0.038026317954063416,-0.07605263590812683,0,0,0.02851973846554756,0,-0.05703947693109512,-0.06654606014490128,0,0,0.009506579488515854,0,0,0,0,0,0.009506579488515854,0,-0.019013158977031708,0,0,0.19013158977031708,0,0,-0.038026317954063416,-0.023766448721289635,0,0.17111843824386597,0.0617927685379982,0,-0.019013158977031708,0,0,0,0.07129934430122375,0,-0.038026317954063416,-0.009506579488515854,0,0.07605263590812683,0.02851973846554756,0,0,-0.004753289744257927,0,0.038026317954063416,0.009506579488515854,0,-0.038026317954063416,-0.019013158977031708,0,0.019013158977031708,0.023766448721289635,0,-0.05703947693109512,-0.01425986923277378,0,0.038026317954063416,0,0,-0.05703947693109512,-0.009506579488515854,0,0,0.01425986923277378,0,-0.5133553147315979,-0.004753289744257927,0,0,0.004753289744257927,0,-0.019013158977031708,-0.004753289744257927,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-21 -->\nJSR  Jump To Subroutine\n     This instruction transfers control of the program counter to a subroutine location but leaves a return pointer on the stack to allow the user to return to perform the next instruction in the main program after the subroutine is complete. To accomplish this, JSR instruction stores the program counter address which points to the last byte of the jump instruction onto the stack using the stack pointer. The stack byte contains the program count high first, followed by program count low. The JSR then transfers the addresses following the jump instruction to the program counter low and the program counter high, thereby directing the program to begin at that new address.\n      The JSR instruction affects no flags, causes the stack pointer to be decremented by 2 and substitutes new values into the program counter low and the program counter high.\n\nRTS  Return From Subroutine\n      This instruction loads the program count low and program count high from the stack into the program counter and increments the program counter so that it points to the instruction following the JSR. The stack pointer is adjusted by incrementing it twice.\n      The RTS instruction does not affect any flags and affects only PCL and PCH.","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/src/6502/cpu_6502.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-21"},{"name":"github.com/mist64_c64ref/src/6502/cpu_6502.txt","language":"asm","vector":[0,0,0,0,-0.06364951282739639,0,0.05455672740936279,0.009092788212001324,0,0,-0.022731969133019447,0,0.12729902565479279,0,0,-0.12729902565479279,-0.036371152848005295,0,0.018185576424002647,0,0,-0.018185576424002647,-0.022731969133019447,0,0.018185576424002647,0.004546394106000662,0,0,-0.045463938266038895,0,0.018185576424002647,0.031824756413698196,0,-0.05455672740936279,-0.004546394106000662,0,0.018185576424002647,0,0,0,-0.031824756413698196,0,0.07274230569601059,0.10002066940069199,0,-0.036371152848005295,-0.05001033470034599,0,0,0.05910312011837959,0,-0.018185576424002647,-0.009092788212001324,0,0.12729902565479279,0,0,0,-0.06364951282739639,0,0,0.031824756413698196,0,-0.036371152848005295,-0.009092788212001324,0,0.018185576424002647,0.031824756413698196,0,0,-0.05455672740936279,0,0.07274230569601059,0.009092788212001324,0,0,-0.018185576424002647,0,0.018185576424002647,0.009092788212001324,0,-0.09092787653207779,-0.027278363704681396,0,0,0,0,-0.018185576424002647,-0.26369085907936096,0,0.018185576424002647,0,0,-0.05455672740936279,-0.040917545557022095,0,0,0,0,0,0,0,0.10911345481872559,0.027278363704681396,0,-0.05455672740936279,-0.009092788212001324,0,0,0.06364951282739639,0,-0.10911345481872559,-0.06364951282739639,0,0.018185576424002647,0.009092788212001324,0,0,-0.013639181852340698,0,0,0.009092788212001324,0,-0.036371152848005295,0,0,0.25459805130958557,0.009092788212001324,0,0,-0.027278363704681396,0,0.018185576424002647,0.009092788212001324,0,0,0,0,0.05455672740936279,0.036371152848005295,0,-0.018185576424002647,-0.036371152848005295,0,0,0.004546394106000662,0,-0.018185576424002647,-0.009092788212001324,0,0.12729902565479279,0.06364951282739639,0,0,-0.013639181852340698,0,0.036371152848005295,0.05001033470034599,0,0,-0.018185576424002647,0,0.036371152848005295,0.036371152848005295,0,0,-0.004546394106000662,0,0.05455672740936279,0.036371152848005295,0,0,-0.022731969133019447,0,0,0.022731969133019447,0,-0.21822690963745117,-0.05001033470034599,0,0.036371152848005295,0.004546394106000662,0,-0.09092787653207779,-0.036371152848005295,0,0,0.009092788212001324,0,-0.14548461139202118,-0.031824756413698196,0,0,0.004546394106000662,0,-0.09092787653207779,-0.009092788212001324,0,0.018185576424002647,0.05455672740936279,0,-0.036371152848005295,-0.15912379324436188,0,0.09092787653207779,0,0,-0.018185576424002647,-0.07274230569601059,0,0,0.009092788212001324,0,-0.018185576424002647,0,0,0,0.013639181852340698,0,-0.20004133880138397,-0.018185576424002647,0,0.018185576424002647,0.15912379324436188,0,0,-0.031824756413698196,0,0,0.013639181852340698,0,-0.07274230569601059,-0.004546394106000662,0,0.018185576424002647,0.031824756413698196,0,0,-0.009092788212001324,0,0.09092787653207779,0.004546394106000662,0,0,-0.022731969133019447,0,0.036371152848005295,0.06819590926170349,0,-0.036371152848005295,0,0,0,0.036371152848005295,0,-0.036371152848005295,-0.009092788212001324,0,0,0.018185576424002647,0,0,-0.004546394106000662,0,0,0.05910312011837959,0,-0.018185576424002647,0,0,0,0,0,0,-0.11820624023675919,0,0,0.022731969133019447,0,-0.036371152848005295,-0.045463938266038895,0,0,0.018185576424002647,0,0,-0.07274230569601059,0,0,0.004546394106000662,0,-0.018185576424002647,-0.06819590926170349,0,0,0.009092788212001324,0,0,-0.022731969133019447,0,0,0.05001033470034599,0,0,-0.022731969133019447,0,0,0,0,0,-0.009092788212001324,0,0,0.027278363704681396,0,-0.07274230569601059,-0.11365985125303268,0,0.018185576424002647,0.009092788212001324,0,0,-0.027278363704681396,0,0,0.004546394106000662,0,-0.05455672740936279,-0.036371152848005295,0,0.20004133880138397,0.009092788212001324,0,0,-0.009092788212001324,0,0.10911345481872559,0.10911345481872559,0,-0.018185576424002647,0,0,0,0.022731969133019447,0,-0.09092787653207779,-0.018185576424002647,0,0.05455672740936279,0.013639181852340698,0,-0.018185576424002647,-0.022731969133019447,0,0.018185576424002647,0,0,-0.10911345481872559,-0.004546394106000662,0,0,0.031824756413698196,0,-0.018185576424002647,-0.009092788212001324,0,0.018185576424002647,0.009092788212001324,0,-0.036371152848005295,0,0,0,0.009092788212001324,0,-0.5273817181587219,-0.018185576424002647,0,0,0.013639181852340698,0,-0.07274230569601059,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-22 -->\nPHA  Push Accumulator On Stack\n      This instruction transfers the current value of the accumulator to the next location on the stack, automatically decrementing the stack to point to the next empty location.\n      The Push A instruction only affects the stack pointer register which is decremented by 1 as a result of the operation. It affects no flags.\n\nPLA  Pull Accumulator From Stack\n      This instruction adds 1 to the current value of the stack pointer and uses it to address the stack and loads the contents of the stack into the A register.\n      The PLA instruction does not affect the carry or overflow flags. It sets N if the bit 7 is on in accumulator A as a result of instructions, otherwise it is reset. If accumulator A is zero as a result of the PLA, then the Z flag is set, otherwise it is reset. The PLA instruction changes content of the accumulator A to the contents of the memory location at stack register plus 1 and also increments the stack register.\n\nTXS  Transfer Index X To Stack Pointer\n     This instruction transfers the value in the index register X to the stack pointer.\n     TXS changes only the stack pointer, making it equal to the content of the index register X. It does not affect any of the flags.","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/src/6502/cpu_6502.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-22"},{"name":"github.com/mist64_c64ref/src/6502/cpu_6502.txt","language":"asm","vector":[0,0,0,0,-0.051267895847558975,0,0,0.025633947923779488,0,-0.04101431742310524,-0.02050715871155262,0,0.12304294854402542,0.005126789677888155,0,-0.04101431742310524,-0.025633947923779488,0,0.02050715871155262,0,0,-0.02050715871155262,-0.005126789677888155,0,0,0.005126789677888155,0,0,-0.03588752821087837,0,0,0.04101431742310524,0,-0.02050715871155262,-0.005126789677888155,0,0,0,0,-0.02050715871155262,-0.01025357935577631,0,0.04101431742310524,0.07690184563398361,0,-0.06152147427201271,-0.07690184563398361,0,0.04101431742310524,0.07177505642175674,0,-0.02050715871155262,-0.01025357935577631,0,0.10253579169511795,0,0,0,-0.04101431742310524,0,0,0.04101431742310524,0,-0.02050715871155262,-0.01025357935577631,0,0.02050715871155262,0.01025357935577631,0,0,-0.06152147427201271,0,0,0.02050715871155262,0,-0.02050715871155262,-0.04101431742310524,0,0,0.02050715871155262,0,-0.04101431742310524,-0.025633947923779488,0,0.02050715871155262,0.005126789677888155,0,-0.02050715871155262,-0.27684664726257324,0,0.02050715871155262,0,0,-0.04101431742310524,-0.04101431742310524,0,0.02050715871155262,0,0,0,0,0,0.12304294854402542,0,0,-0.06152147427201271,-0.02050715871155262,0,0.02050715871155262,0.06152147427201271,0,-0.10253579169511795,-0.02050715871155262,0,0.02050715871155262,0.01025357935577631,0,-0.02050715871155262,-0.015380368568003178,0,0,0,0,-0.04101431742310524,0,0,0.24608589708805084,0,0,0,-0.01025357935577631,0,0.02050715871155262,0,0,0,-0.01025357935577631,0,0.02050715871155262,0.02050715871155262,0,0,-0.04614110663533211,0,0,0.025633947923779488,0,-0.10253579169511795,-0.01025357935577631,0,0.12304294854402542,0.051267895847558975,0,0,-0.005126789677888155,0,0.12304294854402542,0.03588752821087837,0,0,-0.02050715871155262,0,0.02050715871155262,0.04614110663533211,0,-0.02050715871155262,-0.005126789677888155,0,0.10253579169511795,0,0,0,-0.02050715871155262,0,0,0.02050715871155262,0,-0.16405726969242096,-0.025633947923779488,0,0.10253579169511795,0.015380368568003178,0,-0.08202863484621048,-0.04101431742310524,0,0.02050715871155262,0.01025357935577631,0,-0.10253579169511795,-0.02050715871155262,0,0,0.02050715871155262,0,-0.02050715871155262,-0.005126789677888155,0,0.02050715871155262,0.06152147427201271,0,-0.02050715871155262,-0.16405726969242096,0,0.12304294854402542,0.01025357935577631,0,-0.02050715871155262,-0.07177505642175674,0,0,0.01025357935577631,0,0,-0.01025357935577631,0,0.02050715871155262,0,0,-0.22557874023914337,-0.030760737136006355,0,0,0.15380369126796722,0,0,-0.01025357935577631,0,0,0.015380368568003178,0,-0.08202863484621048,-0.005126789677888155,0,0,0.01025357935577631,0,0,0,0,0,0,0,0,-0.05639468505978584,0,0.08202863484621048,0.06152147427201271,0,-0.16405726969242096,-0.005126789677888155,0,0,0.07177505642175674,0,-0.06152147427201271,-0.015380368568003178,0,0.02050715871155262,0.02050715871155262,0,-0.04101431742310524,-0.015380368568003178,0,0,0.07690184563398361,0,0,0,0,0,0,0,0,-0.08715542405843735,0,0,0.05639468505978584,0,0,-0.04101431742310524,0,0,0.01025357935577631,0,0,-0.05639468505978584,0,0,0,0,-0.02050715871155262,-0.02050715871155262,0,0,0.015380368568003178,0,0,-0.015380368568003178,0,0,0.06664826720952988,0,0,-0.02050715871155262,0,0,0.005126789677888155,0,0,0,0,0,0.04101431742310524,0,-0.06152147427201271,-0.12816974520683289,0,0.02050715871155262,0.005126789677888155,0,0,-0.025633947923779488,0,0,0.005126789677888155,0,-0.02050715871155262,-0.04614110663533211,0,0.1435501128435135,0,0,-0.04101431742310524,-0.01025357935577631,0,0.1435501128435135,0.06152147427201271,0,-0.02050715871155262,0,0,0,0.04614110663533211,0,-0.04101431742310524,-0.08202863484621048,0,0.08202863484621048,0.005126789677888155,0,-0.02050715871155262,-0.030760737136006355,0,0.02050715871155262,0.01025357935577631,0,-0.12304294854402542,-0.04614110663533211,0,0,0.030760737136006355,0,0,0,0,0.04101431742310524,0.030760737136006355,0,-0.02050715871155262,0,0,0,0.005126789677888155,0,-0.533186137676239,-0.005126789677888155,0,0,0.025633947923779488,0,-0.08202863484621048,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-23 -->\nTSX  Transfer Stack Pointer To Index X\n     This instruction transfers the value in the stack pointer to the index register X.\n     TSX does not affect the carry or overflow flags. It sets N if bit 7 is on in index X as a result of the instruction, otherwise it is reset. If index X is zero as a result of the TSX, the Z flag is set, other¬≠ wise it is reset. TSX changes the value of index X, making it equal to the content of the stack pointer.\n\nPHP  Push Processor Status On Stack\n     This instruction transfers the contents of the processor status register unchanged to the stack, as governed by the stack pointer.\n     The PHP instruction affects no registers or flags in the microprocessor.\n\nPLP  Pull Processor Status From Stack\n     This instruction transfers the next value on the stack to the Processor Status register, thereby changing all of the flags and setting the mode switches to the values from the stack.\n     The PLP instruction affects no registers in the processor other than the status register. This instruction could affect all flags in the status register.","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/src/6502/cpu_6502.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/6502/cpu_6502.txt#Page-1-23"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0.01444806158542633,0,0,-0.021672092378139496,0,0,0.01444806158542633,0,-0.02889612317085266,0,0,0.17337673902511597,0,0,-0.05779224634170532,-0.007224030792713165,0,0.05779224634170532,0.036120153963565826,0,0,-0.01444806158542633,0,0,0.007224030792713165,0,0,-0.007224030792713165,0,0,0.09391240030527115,0,0,0,0,0,0.04334418475627899,0,-0.02889612317085266,-0.07946433871984482,0,0,0.02889612317085266,0,-0.20227286219596863,-0.007224030792713165,0,0,0,0,0,0,0,0.2311689853668213,0.01444806158542633,0,0,-0.02889612317085266,0,0.05779224634170532,0.01444806158542633,0,0,0,0,0.02889612317085266,0,0,0,-0.02889612317085266,0,0,0.007224030792713165,0,0,0,0,0.02889612317085266,0.01444806158542633,0,-0.05779224634170532,0,0,0,0,0,-0.05779224634170532,0,0,0,0,0,-0.1444806158542633,-0.05056821554899216,0,0,0,0,0,-0.007224030792713165,0,0.20227286219596863,0,0,-0.17337673902511597,-0.021672092378139496,0,0,0.08668836951255798,0,-0.05779224634170532,-0.036120153963565826,0,0.02889612317085266,0.02889612317085266,0,0,-0.007224030792713165,0,0.02889612317085266,0,0,0,0,0,0.4334418475627899,0,0,-0.02889612317085266,0,0,0.02889612317085266,0.007224030792713165,0,0,-0.021672092378139496,0,0,0,0,-0.02889612317085266,-0.10113643109798431,0,0.02889612317085266,0,0,-0.05779224634170532,0,0,0.1444806158542633,0.11558449268341064,0,0,-0.036120153963565826,0,0.05779224634170532,0.04334418475627899,0,-0.1444806158542633,0,0,0.02889612317085266,0.01444806158542633,0,0,0,0,0,0.007224030792713165,0,0,-0.01444806158542633,0,0.05779224634170532,0.021672092378139496,0,-0.02889612317085266,-0.02889612317085266,0,0.05779224634170532,0,0,0,-0.04334418475627899,0,0,0,0,-0.02889612317085266,-0.07224030792713165,0,0.08668836951255798,0.007224030792713165,0,0,0,0,0.02889612317085266,0.10113643109798431,0,-0.02889612317085266,-0.08668836951255798,0,0.3756496012210846,0,0,0,-0.036120153963565826,0,0.17337673902511597,0.01444806158542633,0,-0.02889612317085266,0,0,0,0.01444806158542633,0,-0.02889612317085266,-0.007224030792713165,0,0,0.26006510853767395,0,0,-0.02889612317085266,0,0,0.02889612317085266,0,0,0,0,0,0,0,0,-0.01444806158542633,0,0,0.01444806158542633,0,0,-0.02889612317085266,0,0.02889612317085266,0.07224030792713165,0,0,-0.007224030792713165,0,0,0.02889612317085266,0,0,-0.12280852347612381,0,0,0.01444806158542633,0,0,0,0,0,0.05779224634170532,0,-0.1444806158542633,0,0,0,0.04334418475627899,0,-0.02889612317085266,-0.01444806158542633,0,0,0.036120153963565826,0,-0.02889612317085266,0,0,0,0,0,-0.02889612317085266,-0.01444806158542633,0,0,0.05056821554899216,0,-0.02889612317085266,-0.01444806158542633,0,0,0.01444806158542633,0,0,-0.02889612317085266,0,0,0.1878248006105423,0,0,-0.036120153963565826,0,0.02889612317085266,0.08668836951255798,0,-0.02889612317085266,-0.01444806158542633,0,0,0.05056821554899216,0,0,-0.05779224634170532,0,0,0,0,0,-0.01444806158542633,0,0,0.007224030792713165,0,-0.1444806158542633,0,0,0.05779224634170532,0.007224030792713165,0,0,0,0,0,0.10836046189069748,0,0,-0.007224030792713165,0,0.02889612317085266,0.021672092378139496,0,-0.05779224634170532,0,0,0.02889612317085266,0,0,0,-0.007224030792713165,0,0,0.007224030792713165,0,-0.05779224634170532,-0.01444806158542633,0,0,0.036120153963565826,0,0,-0.07224030792713165,0,0.02889612317085266,0.01444806158542633,0,0,-0.05056821554899216,0,0,0.007224030792713165,0,0,-0.01444806158542633,0,0,0,0,-0.02889612317085266,-0.01444806158542633,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-63 -->\n*** round FAC1 and put on stack\n.,AE43 20 1B BC JSR $BC1B       round FAC1\n.,AE46 A5 65    LDA $65         get FAC1 mantissa 4\n.,AE48 48       PHA             save it\n.,AE49 A5 64    LDA $64         get FAC1 mantissa 3\n.,AE4B 48       PHA             save it\n.,AE4C A5 63    LDA $63         get FAC1 mantissa 2\n.,AE4E 48       PHA             save it\n.,AE4F A5 62    LDA $62         get FAC1 mantissa 1\n.,AE51 48       PHA             save it\n.,AE52 A5 61    LDA $61         get FAC1 exponent\n.,AE54 48       PHA             save it\n.,AE55 6C 22 00 JMP ($0022)     return, sort of","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-63"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0,0,0,-0.022536015138030052,0,0,0.045072030276060104,0,0,0,0,0.1352161020040512,0.022536015138030052,0,0,0,0,0.09014406055212021,0.10141207277774811,0,0,-0.022536015138030052,0,0.045072030276060104,0.022536015138030052,0,0,0,0,0,0.0788760557770729,0,0,-0.022536015138030052,0,0,0.011268007569015026,0,-0.09014406055212021,0,0,0,0,0,0,-0.011268007569015026,0,0,0.0338040255010128,0,0,0,0,0.09014406055212021,0.011268007569015026,0,0,-0.022536015138030052,0,0.045072030276060104,0,0,0,-0.0788760557770729,0,0.045072030276060104,0,0,-0.09014406055212021,-0.011268007569015026,0,0,0,0,0,0,0,0,0.022536015138030052,0,-0.09014406055212021,0,0,0,0.011268007569015026,0,-0.045072030276060104,0,0,0,0,0,-0.045072030276060104,-0.022536015138030052,0,0.045072030276060104,0,0,0,0,0,0.40564829111099243,0.011268007569015026,0,-0.09014406055212021,0,0,0,0.0676080510020256,0,0,0,0,0.09014406055212021,0.045072030276060104,0,-0.045072030276060104,-0.011268007569015026,0,0,0.0338040255010128,0,-0.045072030276060104,0,0,0.3155042231082916,0.011268007569015026,0,0,0,0,0,0.011268007569015026,0,0,-0.056340038776397705,0,0,0,0,0,0,0,0.045072030276060104,0.011268007569015026,0,-0.1352161020040512,-0.011268007569015026,0,0.22536015510559082,0.045072030276060104,0,0,0,0,0,0.022536015138030052,0,0,0,0,0.09014406055212021,0.0338040255010128,0,-0.045072030276060104,-0.045072030276060104,0,0,0,0,0,-0.011268007569015026,0,0,0,0,0,-0.045072030276060104,0,0.09014406055212021,0,0,0,-0.022536015138030052,0,0,0,0,0,-0.022536015138030052,0,0.3155042231082916,0.0338040255010128,0,0,0,0,0.09014406055212021,0.20282414555549622,0,0,-0.045072030276060104,0,0.22536015510559082,0,0,0,-0.011268007569015026,0,0.045072030276060104,0.045072030276060104,0,0,-0.022536015138030052,0,0,0,0,-0.045072030276060104,-0.022536015138030052,0,0.045072030276060104,0.1915561407804489,0,0,0,0,0.045072030276060104,0.022536015138030052,0,0,0,0,0,0.011268007569015026,0,-0.3155042231082916,0,0,0,0.022536015138030052,0,-0.045072030276060104,-0.0676080510020256,0,0,0.11268007755279541,0,0,-0.022536015138030052,0,0,0,0,0,0,0,0.045072030276060104,0.045072030276060104,0,0,-0.022536015138030052,0,0,0.022536015138030052,0,0,0,0,0,0.011268007569015026,0,0,0,0,0.045072030276060104,0.056340038776397705,0,0,-0.022536015138030052,0,0,0,0,0,0,0,0,0.1577521115541458,0,-0.045072030276060104,-0.022536015138030052,0,0.045072030276060104,0.045072030276060104,0,0,-0.011268007569015026,0,0.045072030276060104,0.11268007755279541,0,0,-0.011268007569015026,0,0.045072030276060104,0.0338040255010128,0,-0.045072030276060104,0,0,0,0.10141207277774811,0,0,-0.045072030276060104,0,0.045072030276060104,0.022536015138030052,0,-0.045072030276060104,0,0,0,0.045072030276060104,0,0,-0.011268007569015026,0,0,0,0,0,-0.16902011632919312,0,0.045072030276060104,0.0788760557770729,0,0,-0.022536015138030052,0,0,0,0,-0.045072030276060104,0,0,0,0,0,0,0,0,0,0.0338040255010128,0,0,-0.0338040255010128,0,0,0.056340038776397705,0,0,0,0,0.045072030276060104,0,0,0,0,0,0,0.045072030276060104,0,0,-0.011268007569015026,0,0,0,0,-0.045072030276060104,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-78 -->\n*** do bad subscript error\n.,B245 A2 12    LDX #$12        error $12, bad subscript error\n.:B247 2C       .BYTE $2C       makes next line BIT $0EA2\n\n*** do illegal quantity error\n.,B248 A2 0E    LDX #$0E        error $0E, illegal quantity error\n.,B24A 4C 37 A4 JMP $A437       do error #X then warm start","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-78"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0.06865245848894119,0,0,-0.06865245848894119,-0.017163114622235298,0,0,0.034326229244470596,0,0,-0.06007090210914612,0,0.034326229244470596,0,0,0,-0.017163114622235298,0,0.13730491697788239,0.04290778562426567,0,0,-0.017163114622235298,0,0.034326229244470596,0.025744671002030373,0,-0.034326229244470596,-0.008581557311117649,0,0,0.10297868400812149,0,0,-0.051489342004060745,0,0,0.017163114622235298,0,0,0,0,0,0,0,-0.034326229244470596,-0.13730491697788239,0,0.034326229244470596,0,0,0,-0.025744671002030373,0,0.13730491697788239,0,0,0,-0.034326229244470596,0,0.06865245848894119,0.017163114622235298,0,-0.10297868400812149,-0.04290778562426567,0,0.06865245848894119,0.025744671002030373,0,-0.06865245848894119,-0.051489342004060745,0,0,0,0,0,-0.04290778562426567,0,0,0,0,-0.034326229244470596,-0.008581557311117649,0,0.034326229244470596,0,0,-0.13730491697788239,0,0,0,0,0,-0.034326229244470596,-0.04290778562426567,0,0,0.034326229244470596,0,0,-0.034326229244470596,0,0.27460983395576477,0,0,-0.034326229244470596,0,0,0,0.017163114622235298,0,-0.034326229244470596,0,0,0.034326229244470596,0.06865245848894119,0,0,-0.008581557311117649,0,0.06865245848894119,0.025744671002030373,0,-0.034326229244470596,-0.034326229244470596,0,0.34326228499412537,0,0,-0.034326229244470596,-0.008581557311117649,0,0,0.008581557311117649,0,-0.06865245848894119,-0.008581557311117649,0,0.034326229244470596,0.008581557311117649,0,-0.034326229244470596,-0.017163114622235298,0,0.13730491697788239,0.017163114622235298,0,-0.06865245848894119,-0.025744671002030373,0,0.17163114249706268,0.06865245848894119,0,0,0,0,0,0.034326229244470596,0,-0.034326229244470596,-0.08581557124853134,0,0,0.034326229244470596,0,0,-0.04290778562426567,0,0,0,0,0,-0.017163114622235298,0,0,0.008581557311117649,0,0,-0.025744671002030373,0,0.06865245848894119,0.025744671002030373,0,-0.10297868400812149,-0.08581557124853134,0,0,0,0,0,-0.034326229244470596,0,0.10297868400812149,0,0,0,0,0,0.034326229244470596,0.13730491697788239,0,-0.034326229244470596,-0.017163114622235298,0,0.41191473603248596,0,0,0,-0.034326229244470596,0,0.06865245848894119,0.034326229244470596,0,0,-0.017163114622235298,0,0,0.034326229244470596,0,-0.27460983395576477,-0.017163114622235298,0,0,0.18021270632743835,0,-0.034326229244470596,-0.017163114622235298,0,0,0.034326229244470596,0,0,-0.034326229244470596,0,0,0.025744671002030373,0,-0.10297868400812149,-0.025744671002030373,0,0.034326229244470596,0.06865245848894119,0,-0.06865245848894119,-0.034326229244470596,0,0,0.08581557124853134,0,-0.034326229244470596,0,0,0,0,0,-0.034326229244470596,-0.025744671002030373,0,0,0.008581557311117649,0,0,0,0,0,0.034326229244470596,0,-0.034326229244470596,0,0,0,0.017163114622235298,0,0,-0.025744671002030373,0,0,0.051489342004060745,0,0,-0.06865245848894119,0,0,0,0,0,0,0,0,0.051489342004060745,0,-0.034326229244470596,-0.008581557311117649,0,0.034326229244470596,0.025744671002030373,0,-0.06865245848894119,-0.051489342004060745,0,0,0.20595736801624298,0,-0.034326229244470596,-0.008581557311117649,0,0.034326229244470596,0.034326229244470596,0,-0.034326229244470596,0,0,0.034326229244470596,0.06865245848894119,0,0,-0.14588648080825806,0,0,0,0,-0.10297868400812149,-0.025744671002030373,0,0,0.008581557311117649,0,0,0,0,0,0.017163114622235298,0,-0.13730491697788239,-0.06007090210914612,0,0,0.10297868400812149,0,-0.034326229244470596,-0.04290778562426567,0,0,0,0,-0.06865245848894119,-0.034326229244470596,0,0.034326229244470596,0.008581557311117649,0,-0.034326229244470596,-0.025744671002030373,0,0.034326229244470596,0.034326229244470596,0,-0.06865245848894119,-0.017163114622235298,0,0,0.04290778562426567,0,-0.06865245848894119,-0.017163114622235298,0,0,0,0,0,-0.008581557311117649,0,0,0,0,0,0,0,0,0,0,-0.06865245848894119,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-82 -->\n*** check FNx syntax\n.,B3E1 A9 A5    LDA #$A5        set FN token\n.,B3E3 20 FF AE JSR $AEFF       scan for CHR$(A), else do syntax error then warm start\n.,B3E6 09 80    ORA #$80        set FN flag bit\n.,B3E8 85 10    STA $10         save FN name\n.,B3EA 20 92 B0 JSR $B092       search for FN variable\n.,B3ED 85 4E    STA $4E         save function pointer low byte\n.,B3EF 84 4F    STY $4F         save function pointer high byte\n.,B3F1 4C 8D AD JMP $AD8D       check if source is numeric and return, else do type\n                                mismatch","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-82"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0.008974838070571423,0,-0.12564773857593536,0,0,0.10769806057214737,0.008974838070571423,0,-0.017949676141142845,-0.09423580020666122,0,0.017949676141142845,0.004487419035285711,0,-0.14359740912914276,-0.022437095642089844,0,0.03589935228228569,0.03141193464398384,0,0,-0.004487419035285711,0,0,0.07628612965345383,0,-0.07179870456457138,0,0,0,0.11218547821044922,0,0,-0.06731128692626953,0,0,0.004487419035285711,0,-0.08974838256835938,0,0,0.03589935228228569,0.008974838070571423,0,0,-0.09423580020666122,0,0.017949676141142845,0,0,-0.017949676141142845,0,0,0.14359740912914276,0,0,0,-0.03141193464398384,0,0,0.06282386928796768,0,0,-0.013462257571518421,0,0.017949676141142845,0.013462257571518421,0,-0.017949676141142845,-0.004487419035285711,0,0,0.022437095642089844,0,0,-0.053849030286073685,0,0,0.008974838070571423,0,-0.053849030286073685,-0.008974838070571423,0,0.14359740912914276,0,0,-0.17949676513671875,-0.004487419035285711,0,0,0.004487419035285711,0,-0.017949676141142845,-0.008974838070571423,0,0.017949676141142845,0.03141193464398384,0,-0.017949676141142845,-0.06282386928796768,0,0.10769806057214737,0.053849030286073685,0,-0.08974838256835938,-0.008974838070571423,0,0,0.008974838070571423,0,0,-0.07179870456457138,0,0.03589935228228569,0.022437095642089844,0,-0.017949676141142845,0,0,0,0,0,0,-0.06282386928796768,0,0.3948929011821747,0,0,-0.08974838256835938,0,0,0,0.008974838070571423,0,0,-0.04487419128417969,0,0.017949676141142845,0.053849030286073685,0,0,0,0,0.017949676141142845,0.008974838070571423,0,-0.07179870456457138,-0.04038677364587784,0,0.08974838256835938,0.07179870456457138,0,0,0,0,0,0.004487419035285711,0,-0.12564773857593536,-0.04487419128417969,0,0,0.008974838070571423,0,0,-0.008974838070571423,0,0,0,0,-0.017949676141142845,-0.004487419035285711,0,0,0.022437095642089844,0,0,-0.03141193464398384,0,0.03589935228228569,0.07628612965345383,0,-0.16154709458351135,-0.08974838256835938,0,0.017949676141142845,0,0,-0.08974838256835938,-0.03589935228228569,0,0.053849030286073685,0.013462257571518421,0,-0.017949676141142845,-0.013462257571518421,0,0.017949676141142845,0.053849030286073685,0,0,-0.04487419128417969,0,0.4487419128417969,0,0,-0.017949676141142845,-0.004487419035285711,0,0.017949676141142845,0.017949676141142845,0,0,-0.04038677364587784,0,0,0.026924515143036842,0,-0.017949676141142845,-0.004487419035285711,0,0,0.2019338607788086,0,0,-0.08077354729175568,0,0,0.008974838070571423,0,-0.08974838256835938,0,0,0.07179870456457138,0.008974838070571423,0,-0.017949676141142845,-0.017949676141142845,0,0.017949676141142845,0.008974838070571423,0,-0.017949676141142845,-0.03589935228228569,0,0.08974838256835938,0.04487419128417969,0,0,-0.022437095642089844,0,0,0.008974838070571423,0,0,-0.06282386928796768,0,0,0.004487419035285711,0,-0.017949676141142845,-0.004487419035285711,0,0.017949676141142845,0.03589935228228569,0,0,-0.008974838070571423,0,0.12564773857593536,0,0,0,0,0,0,0.022437095642089844,0,0,-0.08526096493005753,0,0,0.008974838070571423,0,0,-0.04487419128417969,0,0.017949676141142845,0.026924515143036842,0,0,-0.022437095642089844,0,0,0.04487419128417969,0,-0.10769806057214737,-0.04487419128417969,0,0,0.22437095642089844,0,0,-0.013462257571518421,0,0.03589935228228569,0.013462257571518421,0,0,-0.004487419035285711,0,0.14359740912914276,0.026924515143036842,0,0,-0.03141193464398384,0,0,0,0,-0.12564773857593536,0,0,0,0.008974838070571423,0,0,-0.049361612647771835,0,0.017949676141142845,0.03589935228228569,0,-0.17949676513671875,-0.008974838070571423,0,0,0.10769806057214737,0,0,-0.03141193464398384,0,0,0.04487419128417969,0,-0.017949676141142845,0,0,0.08974838256835938,0.004487419035285711,0,-0.017949676141142845,0,0,0.017949676141142845,0.004487419035285711,0,0,-0.026924515143036842,0,0,0.03141193464398384,0,-0.10769806057214737,0,0,0.017949676141142845,0.06282386928796768,0,-0.017949676141142845,-0.03141193464398384,0,0,0,0,0,0,0,0,0,0,-0.017949676141142845,-0.004487419035285711,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-84 -->\n*** restore BASIC execute pointer and function variable from stack\n.,B449 68       PLA             pull BASIC execute pointer low byte\n.,B44A 85 7A    STA $7A         save BASIC execute pointer low byte\n.,B44C 68       PLA             pull BASIC execute pointer high byte\n.,B44D 85 7B    STA $7B         save BASIC execute pointer high byte\n                                put execute pointer and variable pointer into function\n.,B44F A0 00    LDY #$00        clear index\n.,B451 68       PLA             pull BASIC execute pointer low byte\n.,B452 91 4E    STA ($4E),Y     save to function\n.,B454 68       PLA             pull BASIC execute pointer high byte\n.,B455 C8       INY             increment index\n.,B456 91 4E    STA ($4E),Y     save to function\n.,B458 68       PLA             pull current variable address low byte\n.,B459 C8       INY             increment index\n.,B45A 91 4E    STA ($4E),Y     save to function\n.,B45C 68       PLA             pull current variable address high byte\n.,B45D C8       INY             increment index\n.,B45E 91 4E    STA ($4E),Y     save to function\n.,B460 68       PLA             pull ??\n.,B461 C8       INY             increment index\n.,B462 91 4E    STA ($4E),Y     save to function\n.,B464 60       RTS","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-84"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0.007169794291257858,0,0,-0.03584897145628929,0,0.028679177165031433,0.007169794291257858,0,0,-0.014339588582515717,0,0.057358354330062866,0,0,0,-0.03584897145628929,0,0.0860375314950943,0.07169794291257858,0,0,-0.014339588582515717,0,0.028679177165031433,0.014339588582515717,0,-0.028679177165031433,-0.04301876574754715,0,0,0.0860375314950943,0,-0.057358354330062866,-0.03584897145628929,0,0.028679177165031433,0.03584897145628929,0,0,0,0,0.028679177165031433,0.014339588582515717,0,-0.20075424015522003,-0.03584897145628929,0,0,0.014339588582515717,0,0,-0.007169794291257858,0,0.11471670866012573,0.028679177165031433,0,-0.0860375314950943,-0.028679177165031433,0,0,0.007169794291257858,0,0,0,0,0.0860375314950943,0.007169794291257858,0,0,-0.05018856003880501,0,0,0.07169794291257858,0,0,-0.014339588582515717,0,0.028679177165031433,0,0,-0.028679177165031433,-0.007169794291257858,0,0,0,0,-0.22943341732025146,-0.007169794291257858,0,0,0.07169794291257858,0,-0.0860375314950943,-0.014339588582515717,0,0,0,0,0,0,0,0.1720750629901886,0.05018856003880501,0,-0.0860375314950943,-0.007169794291257858,0,0.0860375314950943,0.028679177165031433,0,0,0,0,0.028679177165031433,0.04301876574754715,0,-0.057358354330062866,-0.007169794291257858,0,0,0.014339588582515717,0,0,-0.021509382873773575,0,0.3728293180465698,0,0,-0.20075424015522003,-0.03584897145628929,0,0,0.028679177165031433,0,-0.028679177165031433,-0.007169794291257858,0,0,0.014339588582515717,0,-0.028679177165031433,-0.10037712007761002,0,0.028679177165031433,0,0,0,-0.014339588582515717,0,0.1720750629901886,0.06452815234661102,0,-0.028679177165031433,-0.04301876574754715,0,0.028679177165031433,0.007169794291257858,0,-0.057358354330062866,-0.014339588582515717,0,0,0.04301876574754715,0,0,0,0,0.028679177165031433,0.014339588582515717,0,-0.028679177165031433,-0.014339588582515717,0,0.028679177165031433,0.014339588582515717,0,-0.0860375314950943,-0.014339588582515717,0,0.028679177165031433,0,0,0,-0.12905630469322205,0,0,0.03584897145628929,0,-0.0860375314950943,-0.05018856003880501,0,0.1720750629901886,0,0,0,0,0,0.057358354330062866,0.0860375314950943,0,-0.1720750629901886,-0.04301876574754715,0,0.3441501259803772,0.07886774092912674,0,-0.028679177165031433,-0.007169794291257858,0,0.0860375314950943,0.014339588582515717,0,0,-0.028679177165031433,0,0,0.007169794291257858,0,-0.028679177165031433,0,0,0.057358354330062866,0.20075424015522003,0,-0.028679177165031433,-0.10037712007761002,0,0,0.021509382873773575,0,0,-0.014339588582515717,0,0.028679177165031433,0.007169794291257858,0,0,-0.021509382873773575,0,0.028679177165031433,0.014339588582515717,0,-0.0860375314950943,-0.014339588582515717,0,0,0.09320732951164246,0,0,-0.014339588582515717,0,0,0.021509382873773575,0,-0.028679177165031433,-0.07886774092912674,0,0,0,0,-0.028679177165031433,0,0,0,0.04301876574754715,0,0,-0.03584897145628929,0,0,0.014339588582515717,0,0,-0.04301876574754715,0,0.14339588582515717,0.03584897145628929,0,-0.028679177165031433,0,0,0,0,0,0,-0.04301876574754715,0,0,0.09320732951164246,0,-0.028679177165031433,-0.007169794291257858,0,0,0.028679177165031433,0,-0.028679177165031433,-0.14339588582515717,0,0,0.1720750629901886,0,-0.028679177165031433,-0.03584897145628929,0,0.057358354330062866,0.04301876574754715,0,-0.028679177165031433,0,0,0,0.04301876574754715,0,0,-0.03584897145628929,0,0,0.05018856003880501,0,-0.057358354330062866,-0.014339588582515717,0,0.028679177165031433,0.007169794291257858,0,0,-0.014339588582515717,0,0.028679177165031433,0.014339588582515717,0,-0.057358354330062866,0,0,0,0.10754691809415817,0,0,-0.09320732951164246,0,0.057358354330062866,0,0,-0.057358354330062866,-0.007169794291257858,0,0,0,0,0,-0.021509382873773575,0,0,0.007169794291257858,0,-0.057358354330062866,-0.014339588582515717,0,0.14339588582515717,0.04301876574754715,0,-0.028679177165031433,-0.007169794291257858,0,0,0.007169794291257858,0,0,-0.014339588582515717,0,0,0.07169794291257858,0,0,-0.014339588582515717,0,0.14339588582515717,0.007169794291257858,0,-0.028679177165031433,-0.007169794291257858,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-102 -->\n*** perform subtraction, FAC1 from FAC2\n.,B853 A5 66    LDA $66         get FAC1 sign (b7)\n.,B855 49 FF    EOR #$FF        complement it\n.,B857 85 66    STA $66         save FAC1 sign (b7)\n.,B859 45 6E    EOR $6E         EOR with FAC2 sign (b7)\n.,B85B 85 6F    STA $6F         save sign compare (FAC1 EOR FAC2)\n.,B85D A5 61    LDA $61         get FAC1 exponent\n.,B85F 4C 6A B8 JMP $B86A       add FAC2 to FAC1 and return\n.,B862 20 99 B9 JSR $B999       shift FACX A times right (>8 shifts)\n.,B865 90 3C    BCC $B8A3       go subtract mantissas\n\n*** add (AY) to FAC1\n.,B867 20 8C BA JSR $BA8C       unpack memory (AY) into FAC2","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-102"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0.01502030249685049,0.011265227571129799,0,0,-0.0037550756242126226,0,0.01502030249685049,0.01877537928521633,0,-0.03004060499370098,-0.03004060499370098,0,0.01502030249685049,0,0,-0.03004060499370098,-0.09763196855783463,0,0.01502030249685049,0.03004060499370098,0,-0.01502030249685049,-0.03755075857043266,0,0,0.01877537928521633,0,0,-0.011265227571129799,0,0,0.12391749769449234,0,0,-0.06008120998740196,0,0.01502030249685049,0.026285529136657715,0,-0.01502030249685049,-0.022530455142259598,0,0.01502030249685049,0.007510151248425245,0,-0.06008120998740196,-0.09387689083814621,0,0,0.0037550756242126226,0,0,-0.0037550756242126226,0,0.135182723402977,0.022530455142259598,0,-0.045060910284519196,-0.04130583256483078,0,0.01502030249685049,0,0,0,-0.011265227571129799,0,0.03004060499370098,0.007510151248425245,0,0,-0.06008120998740196,0,0,0.05257105827331543,0,0,0,0,0,0.007510151248425245,0,0,-0.0037550756242126226,0,0.01502030249685049,0.007510151248425245,0,-0.22530454397201538,-0.007510151248425245,0,0.01502030249685049,0.07134643942117691,0,-0.15020303428173065,-0.01502030249685049,0,0.01502030249685049,0.011265227571129799,0,-0.01502030249685049,0,0,0.10514211654663086,0.026285529136657715,0,-0.15020303428173065,-0.01502030249685049,0,0.07510151714086533,0.007510151248425245,0,0,-0.01502030249685049,0,0.01502030249685049,0.007510151248425245,0,0,-0.007510151248425245,0,0,0.007510151248425245,0,0,-0.011265227571129799,0,0.40554818511009216,0,0,-0.18024364113807678,-0.045060910284519196,0,0,0.01502030249685049,0,-0.01502030249685049,-0.022530455142259598,0,0.01502030249685049,0.011265227571129799,0,-0.01502030249685049,-0.03004060499370098,0,0.045060910284519196,0.007510151248425245,0,-0.01502030249685049,-0.03004060499370098,0,0.135182723402977,0.0675913617014885,0,-0.01502030249685049,-0.022530455142259598,0,0.07510151714086533,0.011265227571129799,0,-0.03004060499370098,-0.04130583256483078,0,0.01502030249685049,0.01502030249685049,0,0,0,0,0,0.011265227571129799,0,0,-0.011265227571129799,0,0.045060910284519196,0,0,-0.01502030249685049,-0.0037550756242126226,0,0.01502030249685049,0.011265227571129799,0,-0.03004060499370098,-0.14269287884235382,0,0,0.026285529136657715,0,-0.03004060499370098,-0.07510151714086533,0,0.06008120998740196,0.011265227571129799,0,-0.03004060499370098,-0.007510151248425245,0,0.045060910284519196,0.056326135993003845,0,-0.045060910284519196,-0.07885658740997314,0,0.4355887770652771,0.07134643942117691,0,0,-0.0037550756242126226,0,0.10514211654663086,0.011265227571129799,0,-0.09012182056903839,0,0,0,0.0037550756242126226,0,-0.045060910284519196,-0.007510151248425245,0,0.01502030249685049,0.2065291702747345,0,-0.01502030249685049,-0.09763196855783463,0,0,0.0037550756242126226,0,-0.07510151714086533,-0.011265227571129799,0,0,0.007510151248425245,0,-0.01502030249685049,-0.007510151248425245,0,0,0.022530455142259598,0,0,-0.007510151248425245,0,0.06008120998740196,0.07134643942117691,0,0,-0.011265227571129799,0,0,0.04130583256483078,0,-0.01502030249685049,-0.03004060499370098,0,0,0.007510151248425245,0,0,0,0,0.01502030249685049,0.03379568085074425,0,-0.03004060499370098,-0.011265227571129799,0,0.01502030249685049,0.026285529136657715,0,0,-0.007510151248425245,0,0.07510151714086533,0.01502030249685049,0,0,-0.01502030249685049,0,0,0,0,0,-0.01502030249685049,0,0,0.03004060499370098,0,0,-0.01502030249685049,0,0.03004060499370098,0.026285529136657715,0,-0.045060910284519196,-0.07885658740997314,0,0,0.22154946625232697,0,-0.18024364113807678,-0.03755075857043266,0,0.03004060499370098,0.056326135993003845,0,-0.06008120998740196,-0.04881598427891731,0,0.01502030249685049,0.026285529136657715,0,0,-0.06008120998740196,0,0.03004060499370098,0.026285529136657715,0,-0.12016241997480392,-0.007510151248425245,0,0,0.0037550756242126226,0,0,-0.03755075857043266,0,0.01502030249685049,0,0,-0.16522333025932312,-0.007510151248425245,0,0,0.10138704627752304,0,0,-0.045060910284519196,0,0.045060910284519196,0.03004060499370098,0,-0.045060910284519196,-0.0037550756242126226,0,0,0.0037550756242126226,0,-0.01502030249685049,-0.011265227571129799,0,0.01502030249685049,0.011265227571129799,0,-0.12016241997480392,-0.0037550756242126226,0,0.07510151714086533,0.04130583256483078,0,0,-0.01877537928521633,0,0.01502030249685049,0.026285529136657715,0,0,-0.007510151248425245,0,0.01502030249685049,0.04130583256483078,0,-0.01502030249685049,0,0,0.135182723402977,0,0,-0.01502030249685049,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-112 -->\n*** unpack memory (AY) into FAC2\n.,BA8C 85 22    STA $22         save pointer low byte\n.,BA8E 84 23    STY $23         save pointer high byte\n.,BA90 A0 04    LDY #$04        5 bytes to get (0-4)\n.,BA92 B1 22    LDA ($22),Y     get mantissa 4\n.,BA94 85 6D    STA $6D         save FAC2 mantissa 4\n.,BA96 88       DEY             decrement index\n.,BA97 B1 22    LDA ($22),Y     get mantissa 3\n.,BA99 85 6C    STA $6C         save FAC2 mantissa 3\n.,BA9B 88       DEY             decrement index\n.,BA9C B1 22    LDA ($22),Y     get mantissa 2\n.,BA9E 85 6B    STA $6B         save FAC2 mantissa 2\n.,BAA0 88       DEY             decrement index\n.,BAA1 B1 22    LDA ($22),Y     get mantissa 1 + sign\n.,BAA3 85 6E    STA $6E         save FAC2 sign (b7)\n.,BAA5 45 66    EOR $66         EOR with FAC1 sign (b7)\n.,BAA7 85 6F    STA $6F         save sign compare (FAC1 EOR FAC2)\n.,BAA9 A5 6E    LDA $6E         recover FAC2 sign (b7)\n.,BAAB 09 80    ORA #$80        set 1xxx xxx (set normal bit)\n.,BAAD 85 6A    STA $6A         save FAC2 mantissa 1\n.,BAAF 88       DEY             decrement index\n.,BAB0 B1 22    LDA ($22),Y     get exponent byte\n.,BAB2 85 69    STA $69         save FAC2 exponent\n.,BAB4 A5 61    LDA $61         get FAC1 exponent\n.,BAB6 60       RTS","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-112"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0.012608012184500694,0.018912019208073616,0,0,0,0,0,0.009456009604036808,0,0,-0.03152003139257431,0,0.02521602436900139,0.015760015696287155,0,-0.02521602436900139,-0.08195208013057709,0,0.02521602436900139,0.047280047088861465,0,0,-0.044128045439720154,0,0.012608012184500694,0.009456009604036808,0,-0.012608012184500694,-0.006304006092250347,0,0,0.11032010614871979,0,0,-0.044128045439720154,0,0,0.015760015696287155,0,-0.012608012184500694,-0.03467203304171562,0,0.06304006278514862,0.012608012184500694,0,-0.16390416026115417,-0.1418401449918747,0,0.012608012184500694,0.015760015696287155,0,0,0,0,0.1134721115231514,0.012608012184500694,0,-0.03782403841614723,-0.02836802788078785,0,0.05043204873800278,0.0031520030461251736,0,0,-0.009456009604036808,0,0.012608012184500694,0.015760015696287155,0,0,-0.047280047088861465,0,0,0.040976040065288544,0,0,-0.012608012184500694,0,0,0.006304006092250347,0,-0.03782403841614723,-0.006304006092250347,0,0.03782403841614723,0.009456009604036808,0,-0.2017281949520111,-0.012608012184500694,0,0,0.0031520030461251736,0,-0.07564807683229446,-0.018912019208073616,0,0,0.009456009604036808,0,-0.03782403841614723,-0.0031520030461251736,0,0.08825609087944031,0.0031520030461251736,0,-0.1134721115231514,-0.006304006092250347,0,0.012608012184500694,0.012608012184500694,0,-0.012608012184500694,-0.015760015696287155,0,0.03782403841614723,0.018912019208073616,0,0,0,0,0.012608012184500694,0.006304006092250347,0,-0.02521602436900139,-0.009456009604036808,0,0.44128042459487915,0.006304006092250347,0,-0.12608012557029724,-0.03782403841614723,0,0.02521602436900139,0.0031520030461251736,0,0,-0.02521602436900139,0,0.02521602436900139,0.03467203304171562,0,-0.012608012184500694,-0.08195208013057709,0,0.02521602436900139,0.009456009604036808,0,-0.07564807683229446,-0.022064022719860077,0,0.1134721115231514,0.0567360557615757,0,-0.012608012184500694,-0.018912019208073616,0,0.05043204873800278,0.03152003139257431,0,0,-0.06304006278514862,0,0,0.006304006092250347,0,0,0,0,0,0.0031520030461251736,0,-0.012608012184500694,-0.006304006092250347,0,0.02521602436900139,0,0,0,-0.018912019208073616,0,0.03782403841614723,0.02521602436900139,0,-0.10086409747600555,-0.12292812019586563,0,0.012608012184500694,0.009456009604036808,0,-0.02521602436900139,-0.040976040065288544,0,0.16390416026115417,0.0031520030461251736,0,-0.02521602436900139,-0.018912019208073616,0,0.012608012184500694,0.047280047088861465,0,-0.02521602436900139,-0.06304006278514862,0,0.41606441140174866,0.006304006092250347,0,0,-0.009456009604036808,0,0.06304006278514862,0.022064022719860077,0,-0.1386881321668625,0,0,0,0.006304006092250347,0,-0.06304006278514862,-0.012608012184500694,0,0.06304006278514862,0.2269442230463028,0,0,-0.06934406608343124,0,0.02521602436900139,0.018912019208073616,0,-0.06304006278514862,0,0,0.012608012184500694,0.015760015696287155,0,-0.03782403841614723,-0.009456009604036808,0,0.012608012184500694,0.012608012184500694,0,-0.012608012184500694,-0.03782403841614723,0,0.08825609087944031,0.0567360557615757,0,-0.02521602436900139,-0.009456009604036808,0,0,0.040976040065288544,0,-0.02521602436900139,-0.040976040065288544,0,0.012608012184500694,0.0031520030461251736,0,0,0,0,0.012608012184500694,0.02836802788078785,0,-0.05043204873800278,-0.015760015696287155,0,0.012608012184500694,0.02521602436900139,0,-0.012608012184500694,0,0,0.012608012184500694,0.022064022719860077,0,-0.02521602436900139,-0.05043204873800278,0,0,0.006304006092250347,0,-0.012608012184500694,-0.012608012184500694,0,0.02521602436900139,0.08195208013057709,0,0,-0.022064022719860077,0,0,0.015760015696287155,0,-0.012608012184500694,-0.06304006278514862,0,0.02521602436900139,0.20803220570087433,0,-0.15129615366458893,-0.018912019208073616,0,0.012608012184500694,0.03152003139257431,0,-0.07564807683229446,-0.07880007475614548,0,0.012608012184500694,0.022064022719860077,0,0,-0.05988805741071701,0,0.012608012184500694,0.03467203304171562,0,-0.08825609087944031,-0.0031520030461251736,0,0,0.022064022719860077,0,0,-0.03152003139257431,0,0.02521602436900139,0.009456009604036808,0,-0.2521602511405945,-0.02521602436900139,0,0,0.11662411689758301,0,0,-0.03782403841614723,0,0.012608012184500694,0.05043204873800278,0,-0.02521602436900139,-0.012608012184500694,0,0,0.006304006092250347,0,0,-0.015760015696287155,0,0.02521602436900139,0.012608012184500694,0,-0.08825609087944031,-0.018912019208073616,0,0.03782403841614723,0.03467203304171562,0,-0.012608012184500694,-0.02836802788078785,0,0.012608012184500694,0.018912019208073616,0,0,-0.006304006092250347,0,0.012608012184500694,0.006304006092250347,0,-0.02521602436900139,-0.012608012184500694,0,0,0,0,-0.012608012184500694,-0.009456009604036808,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-116 -->\n*** unpack memory (AY) into FAC1\n.,BBA2 85 22    STA $22         save pointer low byte\n.,BBA4 84 23    STY $23         save pointer high byte\n.,BBA6 A0 04    LDY #$04        5 bytes to do\n.,BBA8 B1 22    LDA ($22),Y     get fifth byte\n.,BBAA 85 65    STA $65         save FAC1 mantissa 4\n.,BBAC 88       DEY             decrement index\n.,BBAD B1 22    LDA ($22),Y     get fourth byte\n.,BBAF 85 64    STA $64         save FAC1 mantissa 3\n.,BBB1 88       DEY             decrement index\n.,BBB2 B1 22    LDA ($22),Y     get third byte\n.,BBB4 85 63    STA $63         save FAC1 mantissa 2\n.,BBB6 88       DEY             decrement index\n.,BBB7 B1 22    LDA ($22),Y     get second byte\n.,BBB9 85 66    STA $66         save FAC1 sign (b7)\n.,BBBB 09 80    ORA #$80        set 1xxx xxxx (add normal bit)\n.,BBBD 85 62    STA $62         save FAC1 mantissa 1\n.,BBBF 88       DEY             decrement index\n.,BBC0 B1 22    LDA ($22),Y     get first byte (exponent)\n.,BBC2 85 61    STA $61         save FAC1 exponent\n.,BBC4 84 70    STY $70         clear FAC1 rounding byte\n.,BBC6 60       RTS\n\n*** pack FAC1 into $5C\n.,BBC7 A2 5C    LDX #$5C        set pointer low byte\n.:BBC9 2C       .BYTE $2C       makes next line BIT $57A2\n\n*** pack FAC1 into $57\n.,BBCA A2 57    LDX #$57        set pointer low byte\n.,BBCC A0 00    LDY #$00        set pointer high byte\n.,BBCE F0 04    BEQ $BBD4       pack FAC1 into (XY) and return, branch always\n\n*** pack FAC1 into variable pointer\n.,BBD0 A6 49    LDX $49         get destination pointer low byte\n.,BBD2 A4 4A    LDY $4A         get destination pointer high byte","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-116"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0.03261938691139221,0,0,0,0,0,0.008154846727848053,0,0,-0.020387116819620132,0,0.016309693455696106,0,0,-0.016309693455696106,-0.09785816073417664,0,0.03261938691139221,0.020387116819620132,0,0,-0.03669681027531624,0,0,0.008154846727848053,0,0,-0.0040774233639240265,0,0,0.11824527382850647,0,-0.016309693455696106,-0.040774233639240265,0,0,0.020387116819620132,0,-0.11416785418987274,-0.03669681027531624,0,0.016309693455696106,0.008154846727848053,0,-0.16309693455696106,-0.03669681027531624,0,0.03261938691139221,0,0,-0.016309693455696106,-0.0040774233639240265,0,0.03261938691139221,0.008154846727848053,0,-0.016309693455696106,-0.04892908036708832,0,0.016309693455696106,0,0,0,-0.01223227009177208,0,0.016309693455696106,0.008154846727848053,0,0,-0.016309693455696106,0,0.016309693455696106,0.03261938691139221,0,-0.016309693455696106,-0.02446454018354416,0,0,0.008154846727848053,0,-0.04892908036708832,-0.0040774233639240265,0,0.03261938691139221,0,0,-0.14678724110126495,-0.020387116819620132,0,0,0.008154846727848053,0,-0.08154846727848053,-0.020387116819620132,0,0.04892908036708832,0.0040774233639240265,0,-0.016309693455696106,-0.0040774233639240265,0,0.11416785418987274,0.0040774233639240265,0,-0.09785816073417664,0,0,0,0.008154846727848053,0,-0.016309693455696106,-0.016309693455696106,0,0.016309693455696106,0.028541963547468185,0,0,0,0,0,0,0,0,-0.0040774233639240265,0,0.4892908036708832,0,0,-0.11416785418987274,-0.053006503731012344,0,0.016309693455696106,0.0040774233639240265,0,0,-0.07339362055063248,0,0,0.008154846727848053,0,-0.016309693455696106,-0.08154846727848053,0,0.04892908036708832,0.016309693455696106,0,-0.03261938691139221,-0.028541963547468185,0,0.14678724110126495,0.016309693455696106,0,-0.016309693455696106,-0.01223227009177208,0,0.03261938691139221,0.01223227009177208,0,-0.09785816073417664,-0.01223227009177208,0,0,0.008154846727848053,0,0,0,0,0,0.01223227009177208,0,-0.03261938691139221,-0.020387116819620132,0,0.03261938691139221,0,0,0,-0.028541963547468185,0,0.03261938691139221,0.020387116819620132,0,-0.04892908036708832,-0.08154846727848053,0,0,0.0040774233639240265,0,-0.03261938691139221,-0.040774233639240265,0,0.04892908036708832,0.028541963547468185,0,-0.016309693455696106,-0.008154846727848053,0,0.03261938691139221,0.05708392709493637,0,-0.016309693455696106,-0.04892908036708832,0,0.4729810953140259,0.0040774233639240265,0,0,-0.01223227009177208,0,0.08154846727848053,0.008154846727848053,0,-0.11416785418987274,0,0,0,0,0,-0.04892908036708832,0,0,0,0.24872282147407532,0,-0.016309693455696106,-0.0611613504588604,0,0,0.016309693455696106,0,-0.09785816073417664,0,0,0,0,0,-0.016309693455696106,-0.008154846727848053,0,0,0.02446454018354416,0,0,-0.020387116819620132,0,0.09785816073417664,0.07339362055063248,0,-0.09785816073417664,-0.03669681027531624,0,0,0.020387116819620132,0,-0.016309693455696106,-0.08970331400632858,0,0,0.008154846727848053,0,-0.08154846727848053,-0.0040774233639240265,0,0,0.008154846727848053,0,-0.04892908036708832,-0.020387116819620132,0,0.016309693455696106,0.020387116819620132,0,-0.016309693455696106,0,0,0.016309693455696106,0.020387116819620132,0,0,-0.02446454018354416,0,0,0.0040774233639240265,0,-0.03261938691139221,-0.020387116819620132,0,0.04892908036708832,0.02446454018354416,0,0,-0.020387116819620132,0,0,0.02446454018354416,0,-0.016309693455696106,-0.04485165700316429,0,0,0.23649054765701294,0,-0.17940662801265717,-0.020387116819620132,0,0.016309693455696106,0.053006503731012344,0,-0.06523877382278442,-0.0611613504588604,0,0,0.028541963547468185,0,0,-0.04892908036708832,0,0,0,0,-0.08154846727848053,-0.01223227009177208,0,0,0.0040774233639240265,0,-0.016309693455696106,-0.04892908036708832,0,0.016309693455696106,0,0,-0.04892908036708832,-0.008154846727848053,0,0,0.1223227009177208,0,0,-0.028541963547468185,0,0.016309693455696106,0.053006503731012344,0,-0.04892908036708832,-0.04892908036708832,0,0,0,0,-0.016309693455696106,-0.01223227009177208,0,0.016309693455696106,0.01223227009177208,0,-0.03261938691139221,-0.04892908036708832,0,0.016309693455696106,0.03669681027531624,0,0,-0.028541963547468185,0,0.016309693455696106,0.016309693455696106,0,0,-0.03261938691139221,0,0,0.008154846727848053,0,0,0,0,0.016309693455696106,0,0,-0.016309693455696106,-0.02446454018354416,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-117 -->\n*** pack FAC1 into (XY)\n.,BBD4 20 1B BC JSR $BC1B       round FAC1\n.,BBD7 86 22    STX $22         save pointer low byte\n.,BBD9 84 23    STY $23         save pointer high byte\n.,BBDB A0 04    LDY #$04        set index\n.,BBDD A5 65    LDA $65         get FAC1 mantissa 4\n.,BBDF 91 22    STA ($22),Y     store in destination\n.,BBE1 88       DEY             decrement index\n.,BBE2 A5 64    LDA $64         get FAC1 mantissa 3\n.,BBE4 91 22    STA ($22),Y     store in destination\n.,BBE6 88       DEY             decrement index\n.,BBE7 A5 63    LDA $63         get FAC1 mantissa 2\n.,BBE9 91 22    STA ($22),Y     store in destination\n.,BBEB 88       DEY             decrement index\n.,BBEC A5 66    LDA $66         get FAC1 sign (b7)\n.,BBEE 09 7F    ORA #$7F        set bits x111 1111\n.,BBF0 25 62    AND $62         AND in FAC1 mantissa 1\n.,BBF2 91 22    STA ($22),Y     store in destination\n.,BBF4 88       DEY             decrement index\n.,BBF5 A5 61    LDA $61         get FAC1 exponent\n.,BBF7 91 22    STA ($22),Y     store in destination\n.,BBF9 84 70    STY $70         clear FAC1 rounding byte\n.,BBFB 60       RTS","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-117"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0.0200300682336092,0,0,-0.0100150341168046,0,0.0200300682336092,0.0050075170584023,0,0,0,0,0.0400601364672184,0,0,-0.10015033930540085,-0.015022550709545612,0,0.0200300682336092,0.0400601364672184,0,0,-0.035052619874477386,0,0,0.015022550709545612,0,0,-0.0050075170584023,0,0,0.09514281898736954,0,-0.0400601364672184,-0.06009020283818245,0,0,0.0200300682336092,0,0,-0.0050075170584023,0,0.0200300682336092,0.015022550709545612,0,-0.26039087772369385,-0.13520295917987823,0,0,0.015022550709545612,0,0,0,0,0.0801202729344368,0.030045101419091225,0,-0.06009020283818245,-0.0400601364672184,0,0.0200300682336092,0,0,0,-0.0200300682336092,0,0.0400601364672184,0.015022550709545612,0,0,-0.0400601364672184,0,0,0.025037584826350212,0,-0.0200300682336092,-0.0050075170584023,0,0,0.025037584826350212,0,-0.14021047949790955,-0.015022550709545612,0,0,0,0,-0.06009020283818245,-0.0050075170584023,0,0,0,0,-0.14021047949790955,-0.025037584826350212,0,0,0.0100150341168046,0,0,-0.0050075170584023,0,0.1602405458688736,0.025037584826350212,0,-0.0400601364672184,0,0,0,0.025037584826350212,0,-0.0200300682336092,-0.06009020283818245,0,0.06009020283818245,0.015022550709545612,0,0,-0.0050075170584023,0,0,0,0,0,0,0,0.38057127594947815,0,0,-0.0400601364672184,-0.0200300682336092,0,0.0400601364672184,0.0050075170584023,0,0,-0.0050075170584023,0,0.0200300682336092,0.015022550709545612,0,-0.0200300682336092,-0.13019543886184692,0,0.0200300682336092,0,0,-0.0400601364672184,-0.030045101419091225,0,0.10015033930540085,0.0400601364672184,0,-0.06009020283818245,-0.030045101419091225,0,0.10015033930540085,0.015022550709545612,0,-0.0200300682336092,-0.050075169652700424,0,0,0.025037584826350212,0,0,0,0,0.06009020283818245,0.015022550709545612,0,-0.2804209589958191,-0.030045101419091225,0,0.0400601364672184,0,0,0,-0.0801202729344368,0,0.0200300682336092,0,0,0,-0.04506765305995941,0,0,0.0100150341168046,0,-0.06009020283818245,-0.07010523974895477,0,0.1201804056763649,0.0050075170584023,0,-0.10015033930540085,0,0,0.0200300682336092,0.0801202729344368,0,-0.0200300682336092,-0.0200300682336092,0,0.38057127594947815,0,0,0,-0.0200300682336092,0,0.0801202729344368,0.030045101419091225,0,-0.0200300682336092,0,0,0.0200300682336092,0.0050075170584023,0,-0.14021047949790955,0,0,0.0200300682336092,0.2003006786108017,0,0,-0.04506765305995941,0,0,0.025037584826350212,0,0,0,0,0,0.0100150341168046,0,0,-0.0100150341168046,0,0.06009020283818245,0.0100150341168046,0,-0.0400601364672184,-0.030045101419091225,0,0.0200300682336092,0.050075169652700424,0,-0.0200300682336092,-0.030045101419091225,0,0.06009020283818245,0.05508268624544144,0,-0.06009020283818245,-0.07511275261640549,0,0,0,0,-0.0200300682336092,0,0,0,0.050075169652700424,0,-0.0200300682336092,-0.15523302555084229,0,0.0400601364672184,0.025037584826350212,0,-0.0200300682336092,0,0,0.06009020283818245,0.0200300682336092,0,0,0,0,0.0200300682336092,0,0,-0.0400601364672184,-0.035052619874477386,0,0.0200300682336092,0.06009020283818245,0,-0.0200300682336092,-0.08512778580188751,0,0,0.0100150341168046,0,0,-0.025037584826350212,0,0,0.19028563797473907,0,0,-0.035052619874477386,0,0.0200300682336092,0.0400601364672184,0,-0.0200300682336092,-0.0100150341168046,0,0.0200300682336092,0.050075169652700424,0,0,-0.0801202729344368,0,0,0.0100150341168046,0,-0.1201804056763649,-0.0050075170584023,0,0,0.015022550709545612,0,0,0,0,0.0200300682336092,0,0,-0.2003006786108017,0,0,0.0200300682336092,0.1251879185438156,0,0,-0.030045101419091225,0,0.06009020283818245,0.0200300682336092,0,-0.0801202729344368,-0.0100150341168046,0,0,0.035052619874477386,0,-0.0400601364672184,-0.035052619874477386,0,0,0.0050075170584023,0,-0.06009020283818245,-0.0200300682336092,0,0.0400601364672184,0.025037584826350212,0,0,-0.025037584826350212,0,0.0200300682336092,0.04506765305995941,0,0,-0.015022550709545612,0,0,0.030045101419091225,0,0,0,0,0,0.025037584826350212,0,-0.0400601364672184,-0.09013530611991882,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-120 -->\n*** save A as integer byte\n.,BC3C 85 62    STA $62         save FAC1 mantissa 1\n.,BC3E A9 00    LDA #$00        clear A\n.,BC40 85 63    STA $63         clear FAC1 mantissa 2\n.,BC42 A2 88    LDX #$88        set exponent\n                                set exponent = X, clear FAC1 3 and 4 and normalise\n.,BC44 A5 62    LDA $62         get FAC1 mantissa 1\n.,BC46 49 FF    EOR #$FF        complement it\n.,BC48 2A       ROL             sign bit into carry\n                                set exponent = X, clear mantissa 4 and 3 and normalise FAC1\n.,BC49 A9 00    LDA #$00        clear A\n.,BC4B 85 65    STA $65         clear FAC1 mantissa 4\n.,BC4D 85 64    STA $64         clear FAC1 mantissa 3\n                                set exponent = X and normalise FAC1\n.,BC4F 86 61    STX $61         set FAC1 exponent\n.,BC51 85 70    STA $70         clear FAC1 rounding byte\n.,BC53 85 66    STA $66         clear FAC1 sign (b7)\n.,BC55 4C D2 B8 JMP $B8D2       do ABS and normalise FAC1\n\n*** perform ABS()\n.,BC58 46 66    LSR $66         clear FAC1 sign, put zero in b7\n.,BC5A 60       RTS","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-120"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0.018396493047475815,0.022995615378022194,0,-0.018396493047475815,-0.018396493047475815,0,0.03679298609495163,0.013797369785606861,0,0,-0.009198246523737907,0,0.018396493047475815,0.009198246523737907,0,-0.018396493047475815,-0.009198246523737907,0,0.03679298609495163,0.04599123075604439,0,-0.018396493047475815,-0.03679298609495163,0,0,0.013797369785606861,0,0,-0.004599123261868954,0,0.03679298609495163,0.0965815857052803,0,0,-0.05978860333561897,0,0,0.0321938619017601,0,0,-0.018396493047475815,0,0.03679298609495163,0.009198246523737907,0,-0.29434388875961304,-0.08278422057628632,0,0,0.013797369785606861,0,0,0,0,0.07358597218990326,0.03679298609495163,0,-0.055189479142427444,-0.027594739571213722,0,0.055189479142427444,0.004599123261868954,0,-0.018396493047475815,-0.018396493047475815,0,0.07358597218990326,0,0,0,-0.0643877238035202,0,0,0.022995615378022194,0,0,0,0,0,0.009198246523737907,0,-0.03679298609495163,-0.004599123261868954,0,0.055189479142427444,0,0,-0.11037895828485489,-0.018396493047475815,0,0.018396493047475815,0,0,-0.16556844115257263,-0.027594739571213722,0,0,0.009198246523737907,0,-0.055189479142427444,-0.018396493047475815,0,0.16556844115257263,0.0321938619017601,0,-0.07358597218990326,-0.004599123261868954,0,0,0.009198246523737907,0,-0.018396493047475815,-0.013797369785606861,0,0.03679298609495163,0.022995615378022194,0,-0.018396493047475815,-0.018396493047475815,0,0,0,0,-0.018396493047475815,-0.004599123261868954,0,0.45991232991218567,0.018396493047475815,0,-0.09198246151208878,0,0,0.03679298609495163,0.004599123261868954,0,0,-0.013797369785606861,0,0,0.022995615378022194,0,-0.03679298609495163,-0.14717194437980652,0,0.018396493047475815,0,0,-0.018396493047475815,-0.027594739571213722,0,0.09198246151208878,0.04139211028814316,0,-0.055189479142427444,-0.03679298609495163,0,0.11037895828485489,0.0321938619017601,0,-0.055189479142427444,-0.04599123075604439,0,0,0.04139211028814316,0,0,0,0,0,0.018396493047475815,0,-0.1287754476070404,-0.009198246523737907,0,0.055189479142427444,0,0,0,-0.022995615378022194,0,0.055189479142427444,0.027594739571213722,0,0,-0.08278422057628632,0,0.03679298609495163,0.018396493047475815,0,-0.03679298609495163,-0.08278422057628632,0,0.14717194437980652,0.004599123261868954,0,-0.03679298609495163,-0.027594739571213722,0,0.018396493047475815,0.08278422057628632,0,-0.018396493047475815,-0.03679298609495163,0,0.3863263428211212,0,0,-0.018396493047475815,-0.013797369785606861,0,0.09198246151208878,0.022995615378022194,0,0,-0.013797369785606861,0,0,0.009198246523737907,0,-0.03679298609495163,-0.009198246523737907,0,0.018396493047475815,0.23455528914928436,0,0,-0.050590354949235916,0,0,0.027594739571213722,0,-0.03679298609495163,-0.004599123261868954,0,0.018396493047475815,0,0,-0.03679298609495163,-0.018396493047475815,0,0,0.018396493047475815,0,-0.03679298609495163,-0.009198246523737907,0,0.018396493047475815,0.04599123075604439,0,0,-0.027594739571213722,0,0,0.0643877238035202,0,-0.018396493047475815,-0.10118070989847183,0,0,0,0,-0.07358597218990326,0,0,0,0.018396493047475815,0,-0.07358597218990326,-0.07818509638309479,0,0,0.04139211028814316,0,-0.03679298609495163,-0.004599123261868954,0,0.055189479142427444,0.04599123075604439,0,-0.018396493047475815,0,0,0,0.018396493047475815,0,-0.018396493047475815,-0.018396493047475815,0,0.018396493047475815,0.07358597218990326,0,-0.03679298609495163,-0.027594739571213722,0,0,0.022995615378022194,0,-0.018396493047475815,-0.03679298609495163,0,0,0.19776229560375214,0,0,-0.050590354949235916,0,0.018396493047475815,0.04599123075604439,0,-0.055189479142427444,-0.013797369785606861,0,0.018396493047475815,0.04139211028814316,0,0,-0.03679298609495163,0,0,0.009198246523737907,0,-0.11037895828485489,-0.004599123261868954,0,0.018396493047475815,0.009198246523737907,0,-0.03679298609495163,-0.022995615378022194,0,0.018396493047475815,0.009198246523737907,0,-0.14717194437980652,-0.022995615378022194,0,0.018396493047475815,0.11497808247804642,0,0,-0.04139211028814316,0,0.07358597218990326,0.018396493047475815,0,-0.03679298609495163,0,0,0,0,0,-0.018396493047475815,-0.018396493047475815,0,0,0.004599123261868954,0,-0.11037895828485489,-0.04139211028814316,0,0.03679298609495163,0.022995615378022194,0,0,-0.050590354949235916,0,0.018396493047475815,0.027594739571213722,0,0,-0.0321938619017601,0,0,0.027594739571213722,0,0,-0.009198246523737907,0,0,0,0,-0.018396493047475815,-0.04139211028814316,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-123 -->\n*** perform INT()\n.,BCCC A5 61    LDA $61         get FAC1 exponent\n.,BCCE C9 A0    CMP #$A0        compare with max int\n.,BCD0 B0 20    BCS $BCF2       exit if >= (already int, too big for fractional part!)\n.,BCD2 20 9B BC JSR $BC9B       convert FAC1 floating to fixed\n.,BCD5 84 70    STY $70         save FAC1 rounding byte\n.,BCD7 A5 66    LDA $66         get FAC1 sign (b7)\n.,BCD9 84 66    STY $66         save FAC1 sign (b7)\n.,BCDB 49 80    EOR #$80        toggle FAC1 sign\n.,BCDD 2A       ROL             shift into carry\n.,BCDE A9 A0    LDA #$A0        set new exponent\n.,BCE0 85 61    STA $61         save FAC1 exponent\n.,BCE2 A5 65    LDA $65         get FAC1 mantissa 4\n.,BCE4 85 07    STA $07         save FAC1 mantissa 4 for power function\n.,BCE6 4C D2 B8 JMP $B8D2       do ABS and normalise FAC1\n\n*** clear FAC1 and return\n.,BCE9 85 62    STA $62         clear FAC1 mantissa 1\n.,BCEB 85 63    STA $63         clear FAC1 mantissa 2\n.,BCED 85 64    STA $64         clear FAC1 mantissa 3\n.,BCEF 85 65    STA $65         clear FAC1 mantissa 4\n.,BCF1 A8       TAY             clear Y\n.,BCF2 60       RTS","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-123"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0.012729110196232796,0.003182277549058199,0,0,-0.015911387279629707,0,0,0.003182277549058199,0,-0.012729110196232796,-0.006364555098116398,0,0.02545822039246559,0.012729110196232796,0,0,-0.00954683218151331,0,0.3691442012786865,0.0827392116189003,0,-0.012729110196232796,-0.01909366436302662,0,0,0.054098717868328094,0,-0.012729110196232796,-0.00954683218151331,0,0,0.02545822039246559,0,0,0,0,0.02545822039246559,0.003182277549058199,0,0,-0.00954683218151331,0,0.03818732872605324,0,0,-0.03818732872605324,-0.02227594144642353,0,0.012729110196232796,0.00954683218151331,0,-0.02545822039246559,-0.003182277549058199,0,0.24185308814048767,0,0,-0.02545822039246559,-0.03818732872605324,0,0.03818732872605324,0.06364554911851883,0,-0.06364554911851883,-0.012729110196232796,0,0.03818732872605324,0,0,-0.012729110196232796,-0.06046327203512192,0,0.012729110196232796,0.015911387279629707,0,0,-0.012729110196232796,0,0,0.012729110196232796,0,-0.02545822039246559,-0.015911387279629707,0,0.38187330961227417,0.012729110196232796,0,-0.07637465745210648,-0.035005051642656326,0,0.02545822039246559,0.012729110196232796,0,-0.02545822039246559,-0.01909366436302662,0,0,0.015911387279629707,0,-0.02545822039246559,-0.003182277549058199,0,0.20366576313972473,0,0,-0.012729110196232796,-0.00954683218151331,0,0,0.015911387279629707,0,-0.02545822039246559,-0.003182277549058199,0,0.05091644078493118,0.18457210063934326,0,0,-0.006364555098116398,0,0,0,0,0,-0.006364555098116398,0,0.40733152627944946,0.006364555098116398,0,-0.03818732872605324,-0.003182277549058199,0,0,0.028640497475862503,0,0,-0.006364555098116398,0,0.012729110196232796,0.031822774559259415,0,-0.012729110196232796,-0.02227594144642353,0,0.02545822039246559,0.00954683218151331,0,-0.06364554911851883,-0.012729110196232796,0,0.06364554911851883,0.12092654407024384,0,-0.012729110196232796,-0.015911387279629707,0,0.012729110196232796,0.01909366436302662,0,0,-0.035005051642656326,0,0,0.02227594144642353,0,0,-0.006364555098116398,0,0.012729110196232796,0.006364555098116398,0,0,-0.01909366436302662,0,0.012729110196232796,0.031822774559259415,0,-0.06364554911851883,-0.015911387279629707,0,0.012729110196232796,0.19093665480613708,0,-0.02545822039246559,-0.04455188289284706,0,0,0.01909366436302662,0,-0.012729110196232796,-0.01909366436302662,0,0.20366576313972473,0.006364555098116398,0,-0.02545822039246559,-0.01909366436302662,0,0.11456198990345001,0.10183288156986237,0,-0.012729110196232796,-0.01909366436302662,0,0.07637465745210648,0.006364555098116398,0,0,-0.01909366436302662,0,0.012729110196232796,0.028640497475862503,0,-0.012729110196232796,0,0,0,0,0,-0.06364554911851883,-0.003182277549058199,0,0.012729110196232796,0.21003031730651855,0,-0.012729110196232796,-0.01909366436302662,0,0,0.09228605031967163,0,0,-0.003182277549058199,0,0,0.006364555098116398,0,-0.02545822039246559,-0.00954683218151331,0,0,0.012729110196232796,0,-0.19093665480613708,-0.031822774559259415,0,0.012729110196232796,0.03818732872605324,0,0,-0.006364555098116398,0,0,0.015911387279629707,0,-0.012729110196232796,-0.00954683218151331,0,0.05091644078493118,0.003182277549058199,0,-0.03818732872605324,-0.006364555098116398,0,0,0.06682782620191574,0,-0.02545822039246559,-0.006364555098116398,0,0.03818732872605324,0.015911387279629707,0,-0.012729110196232796,-0.04773416370153427,0,0,0.015911387279629707,0,-0.012729110196232796,-0.015911387279629707,0,0.012729110196232796,0.003182277549058199,0,-0.012729110196232796,-0.006364555098116398,0,0,0.10183288156986237,0,0,-0.01909366436302662,0,0,0.15274931490421295,0,0,-0.02545822039246559,0,0.02545822039246559,0.04455188289284706,0,-0.012729110196232796,-0.006364555098116398,0,0.06364554911851883,0.006364555098116398,0,-0.02545822039246559,-0.012729110196232796,0,0.05091644078493118,0.05091644078493118,0,-0.012729110196232796,-0.035005051642656326,0,0.012729110196232796,0.006364555098116398,0,0,-0.012729110196232796,0,0,0.012729110196232796,0,-0.012729110196232796,0,0,0,0,0,-0.012729110196232796,-0.012729110196232796,0,0.012729110196232796,0.10183288156986237,0,0,-0.10501515865325928,0,0,0.006364555098116398,0,-0.07637465745210648,0,0,0.12729109823703766,0.003182277549058199,0,-0.012729110196232796,-0.00954683218151331,0,0,0.031822774559259415,0,-0.02545822039246559,-0.035005051642656326,0,0.02545822039246559,0.015911387279629707,0,-0.02545822039246559,-0.015911387279629707,0,0.02545822039246559,0.02227594144642353,0,-0.02545822039246559,-0.006364555098116398,0,0,0,0,-0.05091644078493118,-0.006364555098116398,0,0.02545822039246559,0.00954683218151331,0,-0.02545822039246559,-0.006364555098116398,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-128 -->\n*** constants\n.:BF11 80 00                    0.5, first two bytes\n.:BF13 00 00 00                 null return for undefined variables\n.:BF16 FA 0A 1F 00              -100 000 000\n.:BF1A 00 98 96 80               +10 000 000\n.:BF1E FF F0 BD C0                -1 000 000\n.:BF22 00 01 86 A0                  +100 000\n.:BF26 FF FF D8 F0                   -10 000\n.:BF2A 00 00 03 E8                    +1 000\n.:BF2E FF FF FF 9C                     - 100\n.:BF32 00 00 00 0A                       +10\n.:BF36 FF FF FF FF                        -1\n\n*** jiffy counts\n.:BF3A FF DF 0A 80              -2160000    10s hours\n.:BF3E 00 03 4B C0               +216000        hours\n.:BF42 FF FF 73 60                -36000    10s mins\n.:BF46 00 00 0E 10                 +3600        mins\n.:BF4A FF FF FD A8                  -600    10s secs\n.:BF4E 00 00 00 3C                   +60        secs\n\n*** not referenced\n.:BF52 EC                       checksum byte\n\n*** spare bytes, not referenced\n.:BF53 AA AA AA AA AA\n.:BF58 AA AA AA AA AA AA AA AA\n.:BF60 AA AA AA AA AA AA AA AA\n.:BF68 AA AA AA AA AA AA AA AA\n.:BF70 AA\n\n*** perform SQR()\n.,BF71 20 0C BC JSR $BC0C       round and copy FAC1 to FAC2\n.,BF74 A9 11    LDA #$11        set 0.5 pointer low address\n.,BF76 A0 BF    LDY #$BF        set 0.5 pointer high address\n.,BF78 20 A2 BB JSR $BBA2       unpack memory (AY) into FAC1","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-128"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0.030394015833735466,0,-0.017368009313941002,-0.02171001210808754,0,0.017368009313941002,0.017368009313941002,0,0,-0.034736018627882004,0,0.034736018627882004,0.008684004656970501,0,-0.034736018627882004,0,0,0.24315212666988373,0.05644603073596954,0,0,-0.017368009313941002,0,0,0.026052014902234077,0,-0.017368009313941002,0,0,0,0.0738140419125557,0,0,-0.0043420023284852505,0,0.052104029804468155,0.013026007451117039,0,-0.017368009313941002,-0.013026007451117039,0,0.017368009313941002,0,0,-0.10420805960893631,-0.07815603911876678,0,0,0.017368009313941002,0,-0.052104029804468155,0,0,0.08684004843235016,0.008684004656970501,0,0,-0.08684004843235016,0,0.017368009313941002,0,0,-0.034736018627882004,-0.013026007451117039,0,0.034736018627882004,0.013026007451117039,0,0,-0.034736018627882004,0,0,0.030394015833735466,0,0,0,0,0.052104029804468155,0,0,-0.052104029804468155,-0.0043420023284852505,0,0.08684004843235016,0.026052014902234077,0,-0.15631207823753357,-0.02171001210808754,0,0.017368009313941002,0.008684004656970501,0,-0.034736018627882004,-0.030394015833735466,0,0,0.008684004656970501,0,-0.017368009313941002,-0.013026007451117039,0,0.2605201303958893,0.013026007451117039,0,-0.034736018627882004,0,0,0.034736018627882004,0.017368009313941002,0,-0.017368009313941002,-0.02171001210808754,0,0.034736018627882004,0.12591807544231415,0,-0.08684004843235016,-0.008684004656970501,0,0.017368009313941002,0.0043420023284852505,0,-0.017368009313941002,-0.017368009313941002,0,0.5731443166732788,0,0,-0.12157606333494186,0,0,0.017368009313941002,0.03907801955938339,0,-0.052104029804468155,-0.017368009313941002,0,0,0.013026007451117039,0,-0.052104029804468155,-0.052104029804468155,0,0.017368009313941002,0.017368009313941002,0,-0.052104029804468155,-0.026052014902234077,0,0.13894407451152802,0.04342002421617508,0,-0.052104029804468155,-0.0043420023284852505,0,0,0.008684004656970501,0,-0.017368009313941002,-0.04342002421617508,0,0,0.026052014902234077,0,-0.017368009313941002,0,0,0,0.0043420023284852505,0,-0.017368009313941002,-0.04342002421617508,0,0.08684004843235016,0.026052014902234077,0,-0.017368009313941002,-0.030394015833735466,0,0.034736018627882004,0.04776202514767647,0,-0.06947203725576401,-0.09118205308914185,0,0.034736018627882004,0.02171001210808754,0,0,-0.017368009313941002,0,0.12157606333494186,0,0,0,-0.008684004656970501,0,0.06947203725576401,0.13894407451152802,0,0,-0.026052014902234077,0,0.15631207823753357,0.02171001210808754,0,-0.017368009313941002,-0.017368009313941002,0,0.052104029804468155,0.017368009313941002,0,-0.017368009313941002,-0.04776202514767647,0,0,0.013026007451117039,0,-0.10420805960893631,-0.008684004656970501,0,0,0.2952561676502228,0,0,-0.06947203725576401,0,0,0.06947203725576401,0,0,-0.026052014902234077,0,0,0,0,-0.017368009313941002,-0.030394015833735466,0,0.017368009313941002,0.008684004656970501,0,-0.034736018627882004,-0.026052014902234077,0,0.017368009313941002,0.08249804377555847,0,0,-0.030394015833735466,0,0,0.0043420023284852505,0,-0.017368009313941002,-0.034736018627882004,0,0.034736018627882004,0,0,-0.017368009313941002,-0.02171001210808754,0,0,0.02171001210808754,0,-0.052104029804468155,-0.008684004656970501,0,0.034736018627882004,0.04776202514767647,0,-0.017368009313941002,-0.017368009313941002,0,0.017368009313941002,0.026052014902234077,0,0,-0.034736018627882004,0,0,0.017368009313941002,0,-0.017368009313941002,0,0,0.017368009313941002,0.0738140419125557,0,-0.034736018627882004,-0.013026007451117039,0,0.017368009313941002,0.05644603073596954,0,-0.034736018627882004,-0.03907801955938339,0,0,0.08249804377555847,0,0,-0.017368009313941002,0,0.052104029804468155,0.026052014902234077,0,-0.034736018627882004,-0.013026007451117039,0,0.017368009313941002,0.06513003259897232,0,0,-0.06078803166747093,0,0.06947203725576401,0.008684004656970501,0,0,-0.0043420023284852505,0,0,0.008684004656970501,0,-0.017368009313941002,-0.02171001210808754,0,0,0.0043420023284852505,0,-0.10420805960893631,-0.013026007451117039,0,0.034736018627882004,0.15197008848190308,0,0,-0.04776202514767647,0,0.017368009313941002,0.013026007451117039,0,-0.17368009686470032,-0.013026007451117039,0,0,0,0,-0.017368009313941002,-0.02171001210808754,0,0.017368009313941002,0.02171001210808754,0,-0.052104029804468155,-0.02171001210808754,0,0.052104029804468155,0.034736018627882004,0,0,-0.03907801955938339,0,0,0.017368009313941002,0,0,-0.013026007451117039,0,0.034736018627882004,0.008684004656970501,0,-0.034736018627882004,-0.0043420023284852505,0,0.017368009313941002,0,0,-0.034736018627882004,-0.013026007451117039,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-130 -->\n*** exp(n) constant and series\n.:BFBF 81 38 AA 3B 29           1.44269504 = 1/LOG(2)\n.:BFC4 07                       series count\n.:BFC5 71 34 58 3E 56           2.14987637E-5\n.:BFCA 74 16 7E B3 1B           1.43523140E-4\n.:BFCF 77 2F EE E3 85           1.34226348E-3\n.:BFD4 7A 1D 84 1C 2A           9.61401701E-3\n.:BFD9 7C 63 59 58 0A           5.55051269E-2\n.:BFDE 7E 75 FD E7 C6           2.40226385E-1\n.:BFE3 80 31 72 18 10           6.93147186E-1\n.:BFE8 81 00 00 00 00           1.00000000\n\n*** perform EXP()\n.,BFED A9 BF    LDA #$BF        set 1.443 pointer low byte\n.,BFEF A0 BF    LDY #$BF        set 1.443 pointer high byte\n.,BFF1 20 28 BA JSR $BA28       do convert AY, FCA1*(AY)\n.,BFF4 A5 70    LDA $70         get FAC1 rounding byte\n.,BFF6 69 50    ADC #$50        +$50/$100\n.,BFF8 90 03    BCC $BFFD       skip rounding if no carry\n.,BFFA 20 23 BC JSR $BC23       round FAC1 (no check)\n.,BFFD 4C 00 E0 JMP $E000       continue EXP()","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-130"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0.035276878625154495,0.017638439312577248,0,0,-0.05291531980037689,0,0,0.008819219656288624,0,0,-0.04409610107541084,0,0.035276878625154495,0.008819219656288624,0,0,-0.026457659900188446,0,0.14110751450061798,0.07055375725030899,0,0,-0.017638439312577248,0,0,0.008819219656288624,0,0,-0.008819219656288624,0,0,0.09701141715049744,0,0,0,0,0,0.026457659900188446,0,-0.035276878625154495,-0.008819219656288624,0,0,0,0,-0.035276878625154495,-0.11464986205101013,0,0,0,0,0,0,0,0,0,0,0,-0.017638439312577248,0,0.035276878625154495,0,0,-0.035276878625154495,-0.04409610107541084,0,0.07055375725030899,0.017638439312577248,0,-0.07055375725030899,-0.07055375725030899,0,0,0.07937297970056534,0,0,0,0,0,0.035276878625154495,0,-0.035276878625154495,0,0,0,0,0,-0.21166127920150757,-0.017638439312577248,0,0,0.06173453852534294,0,-0.035276878625154495,-0.017638439312577248,0,0.035276878625154495,0.017638439312577248,0,-0.035276878625154495,0,0,0.21166127920150757,0,0,-0.10583063960075378,0,0,0,0.026457659900188446,0,0,-0.017638439312577248,0,0.035276878625154495,0.07055375725030899,0,0,-0.026457659900188446,0,0.035276878625154495,0,0,0,0,0,0.35276880860328674,0,0,-0.07055375725030899,-0.008819219656288624,0,0,0.008819219656288624,0,-0.035276878625154495,-0.026457659900188446,0,0,0,0,0,-0.017638439312577248,0,0.10583063960075378,0.008819219656288624,0,-0.10583063960075378,0,0,0.28221502900123596,0.008819219656288624,0,-0.035276878625154495,0,0,0,0.017638439312577248,0,0,-0.05291531980037689,0,0.035276878625154495,0.035276878625154495,0,0,-0.035276878625154495,0,0,0,0,0,-0.008819219656288624,0,0.07055375725030899,0,0,0,-0.026457659900188446,0,0.035276878625154495,0.008819219656288624,0,-0.17638440430164337,-0.13228830695152283,0,0.035276878625154495,0.035276878625154495,0,-0.035276878625154495,-0.017638439312577248,0,0.21166127920150757,0.026457659900188446,0,0,-0.017638439312577248,0,0.035276878625154495,0.10583063960075378,0,-0.035276878625154495,-0.06173453852534294,0,0.31749191880226135,0.017638439312577248,0,0,-0.008819219656288624,0,0.035276878625154495,0.026457659900188446,0,-0.035276878625154495,0,0,0,0.017638439312577248,0,-0.17638440430164337,0,0,0,0.18520362675189972,0,0,-0.035276878625154495,0,0,0.035276878625154495,0,0,-0.017638439312577248,0,0,0,0,-0.10583063960075378,0,0,0,0.05291531980037689,0,-0.07055375725030899,-0.05291531980037689,0,0.035276878625154495,0.14110751450061798,0,0,-0.026457659900188446,0,0.07055375725030899,0,0,0,-0.008819219656288624,0,0,0.017638439312577248,0,0,0,0,0.10583063960075378,0,0,0,0,0,0,0.04409610107541084,0,0,-0.008819219656288624,0,0,0.035276878625154495,0,0,-0.10583063960075378,0,0.035276878625154495,0.017638439312577248,0,-0.07055375725030899,-0.017638439312577248,0,0,0.10583063960075378,0,-0.10583063960075378,-0.008819219656288624,0,0,0.017638439312577248,0,0,-0.07055375725030899,0,0,0.15874595940113068,0,-0.035276878625154495,-0.008819219656288624,0,0.035276878625154495,0.026457659900188446,0,-0.035276878625154495,-0.026457659900188446,0,0,0.05291531980037689,0,0,-0.11464986205101013,0,0.035276878625154495,0,0,0,0,0,0.035276878625154495,0.008819219656288624,0,0,0,0,0,0.008819219656288624,0,-0.14110751450061798,-0.05291531980037689,0,0,0.08819220215082169,0,0,-0.05291531980037689,0,0,0.017638439312577248,0,-0.035276878625154495,-0.008819219656288624,0,0,0.035276878625154495,0,-0.035276878625154495,0,0,0.035276878625154495,0.026457659900188446,0,-0.10583063960075378,-0.026457659900188446,0,0.14110751450061798,0.12346907705068588,0,0,-0.008819219656288624,0,0.035276878625154495,0,0,0,0,0,0,0.008819219656288624,0,-0.035276878625154495,0,0,0.07055375725030899,0.017638439312577248,0,-0.035276878625154495,-0.035276878625154495,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-142 -->\n*** set filename\n.,E257 20 9E AD JSR $AD9E       evaluate expression\n.,E25A 20 A3 B6 JSR $B6A3       evaluate string\n.,E25D A6 22    LDX $22         get string pointer low byte\n.,E25F A4 23    LDY $23         get string pointer high byte\n.,E261 4C BD FF JMP $FFBD       set the filename and return\n\n*** perform COS()\n.,E264 A9 E0    LDA #$E0        set pi/2 pointer low byte\n.,E266 A0 E2    LDY #$E2        set pi/2 pointer high byte\n.,E268 20 67 B8 JSR $B867       add (AY) to FAC1","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-142"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0.012967586517333984,0,0,-0.034580230712890625,0,0,0.034580230712890625,0,0,-0.03890275955200195,0,0.017290115356445312,0.008645057678222656,0,-0.08645057678222656,0,0,0.10374069213867188,0.04754781723022461,0,0,-0.012967586517333984,0,0,0.02161264419555664,0,-0.017290115356445312,-0.004322528839111328,0,0,0.11670827865600586,0,0,-0.02161264419555664,0,0.017290115356445312,0.02161264419555664,0,0,-0.034580230712890625,0,0.06916046142578125,0.008645057678222656,0,-0.08645057678222656,-0.11238574981689453,0,0,0.012967586517333984,0,0,-0.008645057678222656,0,0.1556110382080078,0.008645057678222656,0,-0.034580230712890625,-0.02161264419555664,0,0,0.02161264419555664,0,0,-0.04754781723022461,0,0.034580230712890625,0.004322528839111328,0,-0.034580230712890625,-0.06483793258666992,0,0,0.03890275955200195,0,0,-0.008645057678222656,0,0.017290115356445312,0,0,-0.08645057678222656,-0.004322528839111328,0,0.017290115356445312,0,0,-0.24206161499023438,-0.017290115356445312,0,0,0,0,-0.034580230712890625,-0.012967586517333984,0,0.10374069213867188,0,0,-0.05187034606933594,0,0,0.1556110382080078,0.008645057678222656,0,-0.034580230712890625,0,0,0.017290115356445312,0.008645057678222656,0,0,-0.08212804794311523,0,0.017290115356445312,0.056192874908447266,0,0,-0.008645057678222656,0,0,0.004322528839111328,0,0,-0.012967586517333984,0,0.3803825378417969,0,0,-0.17290115356445312,0,0,0,0.017290115356445312,0,-0.017290115356445312,-0.004322528839111328,0,0,0.04322528839111328,0,0,-0.04322528839111328,0,0.05187034606933594,0.012967586517333984,0,-0.17290115356445312,-0.008645057678222656,0,0.17290115356445312,0.0778055191040039,0,-0.034580230712890625,-0.02161264419555664,0,0.017290115356445312,0.004322528839111328,0,-0.017290115356445312,-0.03890275955200195,0,0.017290115356445312,0.017290115356445312,0,0,-0.02161264419555664,0,0,0.004322528839111328,0,-0.06916046142578125,-0.008645057678222656,0,0.017290115356445312,0.017290115356445312,0,-0.06916046142578125,-0.060515403747558594,0,0.10374069213867188,0.008645057678222656,0,-0.12103080749511719,-0.14696598052978516,0,0.034580230712890625,0.017290115356445312,0,0,-0.02161264419555664,0,0.12103080749511719,0.05187034606933594,0,-0.017290115356445312,-0.02593517303466797,0,0.017290115356445312,0.0778055191040039,0,-0.017290115356445312,-0.02593517303466797,0,0.36309242248535156,0.008645057678222656,0,-0.017290115356445312,-0.004322528839111328,0,0.08645057678222656,0.008645057678222656,0,-0.10374069213867188,0,0,0,0,0,-0.1383209228515625,0,0,0.05187034606933594,0.19451379776000977,0,0,-0.1080632209777832,0,0,0.02593517303466797,0,-0.017290115356445312,-0.008645057678222656,0,0.017290115356445312,0,0,-0.05187034606933594,-0.004322528839111328,0,0.017290115356445312,0.02593517303466797,0,-0.05187034606933594,-0.08645057678222656,0,0.017290115356445312,0.09077310562133789,0,0,-0.017290115356445312,0,0,0.02593517303466797,0,-0.017290115356445312,-0.030257701873779297,0,0,0.008645057678222656,0,0,0,0,0,0.03890275955200195,0,-0.017290115356445312,-0.04322528839111328,0,0,0.008645057678222656,0,0,-0.034580230712890625,0,0.034580230712890625,0.060515403747558594,0,0,-0.06916046142578125,0,0,0.017290115356445312,0,-0.1556110382080078,0,0,0.017290115356445312,0.06483793258666992,0,-0.034580230712890625,-0.030257701873779297,0,0.017290115356445312,0.012967586517333984,0,-0.017290115356445312,-0.06916046142578125,0,0,0.18154621124267578,0,0,-0.017290115356445312,0,0.034580230712890625,0.06916046142578125,0,-0.017290115356445312,-0.06483793258666992,0,0.034580230712890625,0.03890275955200195,0,0,-0.0778055191040039,0,0.05187034606933594,0.030257701873779297,0,-0.034580230712890625,0,0,0,0.004322528839111328,0,-0.017290115356445312,-0.008645057678222656,0,0.017290115356445312,0.008645057678222656,0,-0.1556110382080078,-0.02593517303466797,0,0,0.10374069213867188,0,-0.017290115356445312,-0.06916046142578125,0,0.017290115356445312,0.008645057678222656,0,-0.034580230712890625,-0.004322528839111328,0,0.034580230712890625,0,0,-0.06916046142578125,-0.008645057678222656,0,0,0.012967586517333984,0,-0.10374069213867188,-0.04322528839111328,0,0.06916046142578125,0.04322528839111328,0,-0.017290115356445312,-0.017290115356445312,0,0,0.004322528839111328,0,0,-0.004322528839111328,0,0,0.02161264419555664,0,-0.034580230712890625,0,0,0,0,0,-0.017290115356445312,-0.09509563446044922,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-144 -->\n*** perform TAN()\n.,E2B4 20 CA BB JSR $BBCA       pack FAC1 into $57\n.,E2B7 A9 00    LDA #$00        clear A\n.,E2B9 85 12    STA $12         clear the comparison evaluation flag\n.,E2BB 20 6B E2 JSR $E26B       perform SIN()\n.,E2BE A2 4E    LDX #$4E        set sin(n) pointer low byte\n.,E2C0 A0 00    LDY #$00        set sin(n) pointer high byte\n.,E2C2 20 F6 E0 JSR $E0F6       pack FAC1 into (XY)\n.,E2C5 A9 57    LDA #$57        set n pointer low byte\n.,E2C7 A0 00    LDY #$00        set n pointer high byte\n.,E2C9 20 A2 BB JSR $BBA2       unpack memory (AY) into FAC1\n.,E2CC A9 00    LDA #$00        clear byte\n.,E2CE 85 66    STA $66         clear FAC1 sign (b7)\n.,E2D0 A5 12    LDA $12         get the comparison evaluation flag\n.,E2D2 20 DC E2 JSR $E2DC       save flag and go do series evaluation\n.,E2D5 A9 4E    LDA #$4E        set sin(n) pointer low byte\n.,E2D7 A0 00    LDY #$00        set sin(n) pointer high byte\n.,E2D9 4C 0F BB JMP $BB0F       convert AY and do (AY)/FAC1\n\n*** save comparison flag and do series evaluation\n.,E2DC 48       PHA             save comparison flag\n.,E2DD 4C 9D E2 JMP $E29D       add 0.25, ^2 then series evaluation","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-144"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0.019725745543837547,0,0,-0.019725745543837547,0,0,0.029588619247078896,0,-0.039451491087675095,-0.009862872771918774,0,0.039451491087675095,0.009862872771918774,0,0,0,0,0.15780596435070038,0.05917723849415779,0,0,0,0,0.039451491087675095,0.019725745543837547,0,0,-0.019725745543837547,0,0,0.08876585960388184,0,-0.039451491087675095,0,0,0,0.05917723849415779,0,0,-0.029588619247078896,0,0.039451491087675095,0.039451491087675095,0,0,-0.029588619247078896,0,0,0.009862872771918774,0,0,-0.019725745543837547,0,0,0.009862872771918774,0,-0.039451491087675095,-0.029588619247078896,0,0,0.05917723849415779,0,0,-0.019725745543837547,0,0.07890298217535019,0,0,0,-0.06904011219739914,0,0.039451491087675095,0,0,0,0,0,0,0,0,-0.07890298217535019,-0.04931436479091644,0,0,0,0,-0.039451491087675095,-0.07890298217535019,0,0,0.009862872771918774,0,-0.039451491087675095,-0.019725745543837547,0,0,0,0,-0.11835447698831558,0,0,0.27616044878959656,0,0,-0.11835447698831558,-0.04931436479091644,0,0,0.029588619247078896,0,0,0,0,0.039451491087675095,0.08876585960388184,0,-0.039451491087675095,-0.009862872771918774,0,0,0.029588619247078896,0,0,0,0,0.43396642804145813,0,0,0,-0.019725745543837547,0,0.039451491087675095,0.009862872771918774,0,0,0,0,0.039451491087675095,0.019725745543837547,0,-0.039451491087675095,-0.009862872771918774,0,0.039451491087675095,0,0,-0.039451491087675095,0,0,0.19725745916366577,0.009862872771918774,0,0,-0.019725745543837547,0,0,0.019725745543837547,0,-0.11835447698831558,0,0,0,0.039451491087675095,0,0,-0.009862872771918774,0,0,0.019725745543837547,0,-0.039451491087675095,-0.009862872771918774,0,0,0.029588619247078896,0,0,-0.039451491087675095,0,0.039451491087675095,0,0,-0.039451491087675095,-0.04931436479091644,0,0.039451491087675095,0,0,0,-0.019725745543837547,0,0.15780596435070038,0,0,0,-0.07890298217535019,0,0.07890298217535019,0.13808022439479828,0,0,-0.09862872958183289,0,0.35506343841552734,0,0,0,-0.009862872771918774,0,0.15780596435070038,0.019725745543837547,0,-0.11835447698831558,-0.019725745543837547,0,0,0,0,-0.11835447698831558,-0.009862872771918774,0,0.039451491087675095,0.22684608399868011,0,0,0,0,0.039451491087675095,0.05917723849415779,0,-0.039451491087675095,0,0,0,0.029588619247078896,0,-0.07890298217535019,-0.019725745543837547,0,0,0.019725745543837547,0,-0.039451491087675095,-0.029588619247078896,0,0,0.09862872958183289,0,0,0,0,0,0.009862872771918774,0,-0.039451491087675095,-0.05917723849415779,0,0,0,0,0,0,0,0.039451491087675095,0,0,0,-0.029588619247078896,0,0,0,0,0,0,0,0,0.039451491087675095,0,-0.11835447698831558,-0.019725745543837547,0,0.039451491087675095,0.029588619247078896,0,0,0,0,0.039451491087675095,0.07890298217535019,0,-0.039451491087675095,-0.019725745543837547,0,0.039451491087675095,0.039451491087675095,0,0,-0.009862872771918774,0,0,0.17753171920776367,0,0,-0.009862872771918774,0,0.039451491087675095,0.07890298217535019,0,0,-0.08876585960388184,0,0,0.06904011219739914,0,-0.039451491087675095,-0.08876585960388184,0,0,0.019725745543837547,0,0,0,0,0.039451491087675095,0.029588619247078896,0,0,-0.029588619247078896,0,0.07890298217535019,0,0,0,-0.039451491087675095,0,0,0.10849160701036453,0,-0.039451491087675095,-0.019725745543837547,0,0,0.009862872771918774,0,-0.039451491087675095,0,0,0.11835447698831558,0.009862872771918774,0,0,-0.029588619247078896,0,0,0.009862872771918774,0,-0.11835447698831558,-0.009862872771918774,0,0,0.06904011219739914,0,0,0,0,0,0,0,-0.07890298217535019,-0.029588619247078896,0,0,0,0,-0.15780596435070038,-0.05917723849415779,0,0,0.019725745543837547,0,-0.039451491087675095,-0.009862872771918774,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-148 -->\n*** BASIC cold start entry point\n.,E394 20 53 E4 JSR $E453       initialise the BASIC vector table\n.,E397 20 BF E3 JSR $E3BF       initialise the BASIC RAM locations\n.,E39A 20 22 E4 JSR $E422       print the start up message and initialise the memory\n                                pointers\n                                not ok ??\n.,E39D A2 FB    LDX #$FB        value for start stack\n.,E39F 9A       TXS             set stack pointer\n.,E3A0 D0 E4    BNE $E386       do \"READY.\" warm start, branch always","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-148"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0.023604609072208405,0,0,-0.028325529769062996,0,0,0.014162764884531498,0,0,-0.009441843256354332,0,0.05665105953812599,0.009441843256354332,0,-0.018883686512708664,-0.009441843256354332,0,0.22660423815250397,0.05665105953812599,0,0,-0.028325529769062996,0,0,0.08969751745462418,0,-0.018883686512708664,0,0,0,0.04248829558491707,0,0,-0.004720921628177166,0,0,0.004720921628177166,0,0,-0.014162764884531498,0,0.018883686512708664,0,0,0,-0.04720921814441681,0,0.018883686512708664,0,0,-0.03776737302541733,-0.009441843256354332,0,0.07553474605083466,0.014162764884531498,0,-0.018883686512708664,-0.009441843256354332,0,0.018883686512708664,0.004720921628177166,0,0,-0.018883686512708664,0,0.018883686512708664,0.03776737302541733,0,-0.05665105953812599,-0.018883686512708664,0,0,0.009441843256354332,0,0,-0.033046454191207886,0,0.018883686512708664,0.04248829558491707,0,-0.03776737302541733,-0.009441843256354332,0,0,0,0,-0.1510694921016693,-0.08969751745462418,0,0,0,0,-0.018883686512708664,-0.028325529769062996,0,0.018883686512708664,0.004720921628177166,0,-0.03776737302541733,-0.004720921628177166,0,0.3587900698184967,0,0,-0.11330211907625198,0,0,0,0.033046454191207886,0,-0.018883686512708664,-0.009441843256354332,0,0.03776737302541733,0.12274396419525146,0,-0.018883686512708664,-0.009441843256354332,0,0,0.004720921628177166,0,-0.018883686512708664,-0.014162764884531498,0,0.39655742049217224,0,0,-0.03776737302541733,-0.004720921628177166,0,0.09441843628883362,0.004720921628177166,0,0,-0.009441843256354332,0,0.07553474605083466,0.014162764884531498,0,0,0,0,0.03776737302541733,0.014162764884531498,0,-0.05665105953812599,-0.018883686512708664,0,0.24548792839050293,0.03776737302541733,0,-0.018883686512708664,-0.014162764884531498,0,0,0.009441843256354332,0,0,-0.014162764884531498,0,0.03776737302541733,0.009441843256354332,0,-0.07553474605083466,-0.028325529769062996,0,0,0,0,0,-0.004720921628177166,0,0.018883686512708664,0.009441843256354332,0,-0.03776737302541733,-0.018883686512708664,0,0.018883686512708664,0.009441843256354332,0,0,-0.08497659116983414,0,0.03776737302541733,0.004720921628177166,0,0,-0.023604609072208405,0,0.18883687257766724,0.028325529769062996,0,-0.03776737302541733,-0.018883686512708664,0,0.3210226893424988,0.17939503490924835,0,0,-0.09913935512304306,0,0.13218581676483154,0,0,-0.018883686512708664,-0.014162764884531498,0,0.018883686512708664,0.018883686512708664,0,-0.018883686512708664,-0.009441843256354332,0,0,0,0,-0.07553474605083466,-0.009441843256354332,0,0,0.21244147419929504,0,-0.03776737302541733,-0.023604609072208405,0,0.05665105953812599,0.1038602814078331,0,0,0,0,0.018883686512708664,0.03776737302541733,0,-0.07553474605083466,-0.004720921628177166,0,0.07553474605083466,0.018883686512708664,0,0,-0.028325529769062996,0,0,0.12274396419525146,0,-0.018883686512708664,-0.009441843256354332,0,0.018883686512708664,0.004720921628177166,0,-0.03776737302541733,0,0,0,0.023604609072208405,0,-0.018883686512708664,-0.04720921814441681,0,0,0.018883686512708664,0,-0.07553474605083466,-0.004720921628177166,0,0.018883686512708664,0.014162764884531498,0,-0.018883686512708664,-0.018883686512708664,0,0,0.014162764884531498,0,0,-0.014162764884531498,0,0.018883686512708664,0.018883686512708664,0,0,0,0,0.03776737302541733,0.09913935512304306,0,-0.03776737302541733,-0.028325529769062996,0,0.018883686512708664,0.1605113446712494,0,-0.018883686512708664,-0.03776737302541733,0,0,0.06609290838241577,0,-0.018883686512708664,-0.014162764884531498,0,0.018883686512708664,0.014162764884531498,0,-0.03776737302541733,-0.018883686512708664,0,0.018883686512708664,0.08969751745462418,0,0,-0.06609290838241577,0,0.018883686512708664,0,0,0,-0.023604609072208405,0,0,0.03776737302541733,0,-0.018883686512708664,-0.004720921628177166,0,0,0.009441843256354332,0,-0.05665105953812599,-0.04248829558491707,0,0,0.1369067281484604,0,0,-0.009441843256354332,0,0,0.023604609072208405,0,-0.018883686512708664,-0.009441843256354332,0,0,0.028325529769062996,0,0,-0.018883686512708664,0,0.03776737302541733,0.009441843256354332,0,-0.03776737302541733,-0.023604609072208405,0,0.018883686512708664,0.06137198209762573,0,-0.05665105953812599,-0.04248829558491707,0,0.07553474605083466,0.009441843256354332,0,0,-0.009441843256354332,0,0,0.009441843256354332,0,-0.16995318233966827,-0.018883686512708664,0,0,0.009441843256354332,0,-0.018883686512708664,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-154 -->\n*** baud rate tables for PAL C64\n                                baud rate word is calculated from ..\n                                \n                                (system clock / baud rate) / 2 - 100\n                                \n                                    system clock\n                                    ------------\n                                PAL       985248 Hz\n                                NTSC     1022727 Hz\n.:E4EC 19 26                      50   baud   985300\n.:E4EE 44 19                      75   baud   985200\n.:E4F0 1A 11                     110   baud   985160\n.:E4F2 E8 0D                     134.5 baud   984540\n.:E4F4 70 0C                     150   baud   985200\n.:E4F6 06 06                     300   baud   985200\n.:E4F8 D1 02                     600   baud   985200\n.:E4FA 37 01                    1200   baud   986400\n.:E4FC AE 00                    1800   baud   986400\n.:E4FE 69 00                    2400   baud   984000\n\n*** return the base address of the I/O devices\n.,E500 A2 00    LDX #$00        get the I/O base address low byte\n.,E502 A0 DC    LDY #$DC        get the I/O base address high byte\n.,E504 60       RTS\n\n*** return the x,y organization of the screen\n.,E505 A2 28    LDX #$28        get the x size\n.,E507 A0 19    LDY #$19        get the y size\n.,E509 60       RTS","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-154"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0,0,-0.03793557360768318,0,0,0,0.009483893401920795,0,0,-0.06638725101947784,0,0.03793557360768318,0,0,0,-0.01896778680384159,0,0.07587114721536636,0.0474194660782814,0,0,-0.009483893401920795,0,0,0.01896778680384159,0,0,-0.01896778680384159,0,0,0.12329061329364777,0,-0.03793557360768318,0,0,0,0,0,-0.11380672454833984,0,0,0,0,0,-0.07587114721536636,-0.02845168113708496,0,0,0,0,-0.03793557360768318,-0.03793557360768318,0,0.07587114721536636,0.03793557360768318,0,0,-0.02845168113708496,0,0.03793557360768318,0.009483893401920795,0,-0.07587114721536636,-0.01896778680384159,0,0.07587114721536636,0,0,0,-0.01896778680384159,0,0,0,0,0,0,0,0.03793557360768318,0.01896778680384159,0,0,0,0,0.03793557360768318,0,0,-0.03793557360768318,-0.1327745020389557,0,0,0.01896778680384159,0,-0.03793557360768318,-0.05690336227416992,0,0,0.05690336227416992,0,0,-0.01896778680384159,0,0.2655490040779114,0,0,-0.11380672454833984,0,0,0,0.01896778680384159,0,-0.03793557360768318,0,0,0.03793557360768318,0.03793557360768318,0,0,0,0,0.03793557360768318,0,0,0,0,0,0.34142017364501953,0,0,-0.03793557360768318,-0.02845168113708496,0,0,0.009483893401920795,0,0,-0.05690336227416992,0,0,0,0,0,-0.0474194660782814,0,0.03793557360768318,0.01896778680384159,0,-0.07587114721536636,-0.01896778680384159,0,0.2276134490966797,0.03793557360768318,0,0,0,0,0,0.01896778680384159,0,0,-0.03793557360768318,0,0.15174229443073273,0.03793557360768318,0,0,-0.01896778680384159,0,0,0.01896778680384159,0,-0.07587114721536636,-0.009483893401920795,0,0,0.01896778680384159,0,0,0,0,0.03793557360768318,0.01896778680384159,0,-0.2655490040779114,-0.02845168113708496,0,0,0,0,0,-0.01896778680384159,0,0.11380672454833984,0.009483893401920795,0,-0.03793557360768318,0,0,0.07587114721536636,0.1327745020389557,0,0,-0.12329061329364777,0,0.34142017364501953,0.009483893401920795,0,0,-0.03793557360768318,0,0,0.01896778680384159,0,0,-0.009483893401920795,0,0,0.01896778680384159,0,-0.11380672454833984,0,0,0,0.1801939755678177,0,0,-0.01896778680384159,0,0,0.01896778680384159,0,-0.03793557360768318,0,0,0.03793557360768318,0,0,-0.07587114721536636,0,0,0,0.01896778680384159,0,0,-0.0474194660782814,0,0,0.11380672454833984,0,0,-0.02845168113708496,0,0,0,0,0,-0.01896778680384159,0,0,0.07587114721536636,0,0,-0.009483893401920795,0,0,0.01896778680384159,0,-0.07587114721536636,-0.03793557360768318,0,0.2276134490966797,0.009483893401920795,0,0,-0.01896778680384159,0,0,0.03793557360768318,0,0,-0.1327745020389557,0,0,0,0,0,0,0,0,0.06638725101947784,0,0,-0.01896778680384159,0,0,0.0474194660782814,0,0,-0.009483893401920795,0,0,0.17071008682250977,0,-0.03793557360768318,-0.009483893401920795,0,0.03793557360768318,0,0,0,0,0,0,0.06638725101947784,0,-0.03793557360768318,-0.08535504341125488,0,0.07587114721536636,0,0,0,-0.009483893401920795,0,0,0.009483893401920795,0,0,-0.01896778680384159,0,0,0.02845168113708496,0,0,-0.03793557360768318,0,0,0.08535504341125488,0,-0.07587114721536636,-0.009483893401920795,0,0.07587114721536636,0,0,-0.03793557360768318,0,0,0,0,0,0,0,0,0,0.009483893401920795,0,-0.03793557360768318,-0.01896778680384159,0,0,0.05690336227416992,0,0,-0.03793557360768318,0,0.03793557360768318,0.11380672454833984,0,0,0,0,0,0.03793557360768318,0,-0.2655490040779114,0,0,0.03793557360768318,0,0,-0.07587114721536636,-0.01896778680384159,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-155 -->\n*** read/set the x,y cursor position\n.,E50A B0 07    BCS $E513       if read cursor go do read\n.,E50C 86 D6    STX $D6         save the cursor row\n.,E50E 84 D3    STY $D3         save the cursor column\n.,E510 20 6C E5 JSR $E56C       set the screen pointers for the cursor row, column\n.,E513 A6 D6    LDX $D6         get the cursor row\n.,E515 A4 D3    LDY $D3         get the cursor column\n.,E517 60       RTS","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-155"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0,0,-0.017804879695177078,-0.017804879695177078,0,0.017804879695177078,0.06676829606294632,0,0,-0.062317077070474625,0,0.07121951878070831,0.0044512199237942696,0,-0.017804879695177078,-0.022256098687648773,0,0.035609759390354156,0.035609759390354156,0,0,-0.008902439847588539,0,0.017804879695177078,0.0044512199237942696,0,-0.035609759390354156,-0.035609759390354156,0,0.017804879695177078,0.0845731794834137,0,0,-0.08902439475059509,0,0,0.031158538535237312,0,-0.017804879695177078,-0.022256098687648773,0,0.017804879695177078,0,0,-0.017804879695177078,-0.0801219567656517,0,0.053414639085531235,0.0044512199237942696,0,-0.017804879695177078,0,0,0.19585368037223816,0.017804879695177078,0,0,-0.026707319542765617,0,0,0.022256098687648773,0,0,-0.07121951878070831,0,0.017804879695177078,0.017804879695177078,0,-0.07121951878070831,-0.017804879695177078,0,0,0.0044512199237942696,0,0,-0.008902439847588539,0,0.12463415414094925,0.008902439847588539,0,-0.017804879695177078,-0.0044512199237942696,0,0,0.017804879695177078,0,-0.053414639085531235,-0.1735975742340088,0,0,0.008902439847588539,0,-0.017804879695177078,-0.013353659771382809,0,0.017804879695177078,0.0044512199237942696,0,-0.035609759390354156,-0.008902439847588539,0,0.10682927817106247,0.013353659771382809,0,-0.08902439475059509,0,0,0.017804879695177078,0.035609759390354156,0,-0.017804879695177078,-0.008902439847588539,0,0.017804879695177078,0.017804879695177078,0,-0.017804879695177078,-0.0044512199237942696,0,0.017804879695177078,0.04006097838282585,0,-0.14243903756141663,-0.022256098687648773,0,0.3917073607444763,0.008902439847588539,0,-0.017804879695177078,-0.0044512199237942696,0,0,0.0044512199237942696,0,0,-0.008902439847588539,0,0.017804879695177078,0.008902439847588539,0,-0.017804879695177078,-0.013353659771382809,0,0.035609759390354156,0.026707319542765617,0,-0.07121951878070831,-0.053414639085531235,0,0.12463415414094925,0.09792684018611908,0,0,-0.0044512199237942696,0,0.017804879695177078,0,0,-0.035609759390354156,-0.031158538535237312,0,0,0.008902439847588539,0,-0.035609759390354156,-0.035609759390354156,0,0,0.008902439847588539,0,-0.07121951878070831,-0.013353659771382809,0,0,0.07121951878070831,0,-0.035609759390354156,-0.044512197375297546,0,0.017804879695177078,0.0044512199237942696,0,-0.21365855634212494,-0.035609759390354156,0,0.017804879695177078,0,0,-0.053414639085531235,-0.013353659771382809,0,0.10682927817106247,0.013353659771382809,0,-0.035609759390354156,-0.017804879695177078,0,0.017804879695177078,0.05786585807800293,0,-0.10682927817106247,-0.12908537685871124,0,0.3382927179336548,0.013353659771382809,0,0,-0.013353659771382809,0,0.12463415414094925,0.008902439847588539,0,-0.053414639085531235,-0.013353659771382809,0,0,0.013353659771382809,0,-0.07121951878070831,-0.07121951878070831,0,0.017804879695177078,0.21365855634212494,0,0,-0.013353659771382809,0,0,0.008902439847588539,0,0,0,0,0.017804879695177078,0.013353659771382809,0,0,-0.017804879695177078,0,0.035609759390354156,0.022256098687648773,0,0,-0.035609759390354156,0,0.017804879695177078,0.062317077070474625,0,0,-0.0044512199237942696,0,0,0.013353659771382809,0,-0.017804879695177078,-0.022256098687648773,0,0.035609759390354156,0.013353659771382809,0,-0.017804879695177078,-0.022256098687648773,0,0,0.04896342009305954,0,-0.017804879695177078,-0.035609759390354156,0,0.017804879695177078,0,0,0,-0.017804879695177078,0,0.017804879695177078,0.013353659771382809,0,0,-0.12463415414094925,0,0,0.008902439847588539,0,0,-0.026707319542765617,0,0,0.0845731794834137,0,-0.017804879695177078,-0.022256098687648773,0,0.12463415414094925,0.008902439847588539,0,-0.017804879695177078,-0.06676829606294632,0,0,0.1691463589668274,0,-0.017804879695177078,-0.0044512199237942696,0,0.017804879695177078,0.06676829606294632,0,0,-0.035609759390354156,0,0,0.026707319542765617,0,-0.017804879695177078,-0.05786585807800293,0,0,0.013353659771382809,0,-0.17804878950119019,-0.0044512199237942696,0,0,0.0044512199237942696,0,-0.017804879695177078,-0.0044512199237942696,0,0,0.013353659771382809,0,-0.12463415414094925,-0.035609759390354156,0,0,0.11573171615600586,0,0,-0.0044512199237942696,0,0.035609759390354156,0.008902439847588539,0,-0.053414639085531235,0,0,0.035609759390354156,0.0044512199237942696,0,-0.14243903756141663,-0.013353659771382809,0,0.017804879695177078,0.026707319542765617,0,-0.035609759390354156,-0.026707319542765617,0,0,0.031158538535237312,0,-0.017804879695177078,-0.008902439847588539,0,0.017804879695177078,0.013353659771382809,0,0,-0.008902439847588539,0,0.017804879695177078,0.008902439847588539,0,-0.3382927179336548,-0.008902439847588539,0,0.017804879695177078,0,0,-0.017804879695177078,-0.017804879695177078,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-156 -->\n*** initialise the screen and keyboard\n.,E518 20 A0 E5 JSR $E5A0       initialise the vic chip\n.,E51B A9 00    LDA #$00        clear A\n.,E51D 8D 91 02 STA $0291       clear the shift mode switch\n.,E520 85 CF    STA $CF         clear the cursor blink phase\n.,E522 A9 48    LDA #$48        get the keyboard decode logic pointer low byte\n.,E524 8D 8F 02 STA $028F       save the keyboard decode logic pointer low byte\n.,E527 A9 EB    LDA #$EB        get the keyboard decode logic pointer high byte\n.,E529 8D 90 02 STA $0290       save the keyboard decode logic pointer high byte\n.,E52C A9 0A    LDA #$0A        set the maximum size of the keyboard buffer\n.,E52E 8D 89 02 STA $0289       save the maximum size of the keyboard buffer\n.,E531 8D 8C 02 STA $028C       save the repeat delay counter\n.,E534 A9 0E    LDA #$0E        set light blue\n.,E536 8D 86 02 STA $0286       save the current colour code\n.,E539 A9 04    LDA #$04        speed 4\n.,E53B 8D 8B 02 STA $028B       save the repeat speed counter\n.,E53E A9 0C    LDA #$0C        set the cursor flash timing\n.,E540 85 CD    STA $CD         save the cursor timing countdown\n.,E542 85 CC    STA $CC         save the cursor enable, $00 = flash cursor","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-156"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0.060755014419555664,0,0,-0.020251672714948654,0,0,0.04050334542989731,0,0,-0.060755014419555664,0,0.08100669085979462,0.010125836357474327,0,0,0,0,0.04050334542989731,0.050629179924726486,0,0,-0.010125836357474327,0,0,0.020251672714948654,0,0,-0.010125836357474327,0,0.08100669085979462,0.0911325216293335,0,0,-0.020251672714948654,0,0,0.020251672714948654,0,0,-0.060755014419555664,0,0,0,0,-0.08100669085979462,-0.07088085263967514,0,0,0.010125836357474327,0,0,0,0,0.04050334542989731,0,0,0,-0.020251672714948654,0,0,0,0,0,-0.020251672714948654,0,0.08100669085979462,0,0,0,0,0,0.04050334542989731,0.020251672714948654,0,0,0,0,0,0.030377507209777832,0,0,-0.020251672714948654,0,0,0,0,-0.04050334542989731,-0.020251672714948654,0,0,0,0,-0.08100669085979462,-0.020251672714948654,0,0,0,0,-0.04050334542989731,0,0,0.32402676343917847,0.060755014419555664,0,-0.12151002883911133,-0.030377507209777832,0,0,0.04050334542989731,0,0,0,0,0.04050334542989731,0.04050334542989731,0,0,-0.010125836357474327,0,0,0,0,0,-0.010125836357474327,0,0.364530086517334,0.04050334542989731,0,0,0,0,0.04050334542989731,0.010125836357474327,0,0,0,0,0,0,0,-0.08100669085979462,-0.04050334542989731,0,0.04050334542989731,0,0,-0.08100669085979462,-0.010125836357474327,0,0.20251671969890594,0.020251672714948654,0,0,-0.020251672714948654,0,0,0,0,-0.04050334542989731,-0.020251672714948654,0,0,0.04050334542989731,0,-0.12151002883911133,0,0,0,0.020251672714948654,0,-0.08100669085979462,-0.010125836357474327,0,0.08100669085979462,0,0,0,-0.010125836357474327,0,0.16201338171958923,0,0,-0.16201338171958923,-0.020251672714948654,0,0.04050334542989731,0.010125836357474327,0,0,-0.04050334542989731,0,0.12151002883911133,0.010125836357474327,0,-0.04050334542989731,-0.030377507209777832,0,0.08100669085979462,0.16201338171958923,0,-0.04050334542989731,-0.07088085263967514,0,0.364530086517334,0,0,0,-0.010125836357474327,0,0.08100669085979462,0.020251672714948654,0,-0.08100669085979462,0,0,0,0,0,-0.12151002883911133,0,0,0.04050334542989731,0.20251671969890594,0,0,0,0,0,0.030377507209777832,0,0,0,0,0,0,0,0,-0.04050334542989731,0,0,0.04050334542989731,0,0,-0.04050334542989731,0,0,0.10125835984945297,0,0,0,0,0.04050334542989731,0,0,0,-0.04050334542989731,0,0,0,0,0,-0.060755014419555664,0,0,0.010125836357474327,0,0,-0.04050334542989731,0,0,0.04050334542989731,0,0,0,0,0.24302005767822266,0.10125835984945297,0,-0.12151002883911133,-0.08100669085979462,0,0,0.030377507209777832,0,0,0,0,0.08100669085979462,0.060755014419555664,0,-0.04050334542989731,-0.020251672714948654,0,0,0.04050334542989731,0,-0.04050334542989731,-0.030377507209777832,0,0,0.182265043258667,0,0,-0.020251672714948654,0,0.04050334542989731,0.04050334542989731,0,0,-0.050629179924726486,0,0,0.08100669085979462,0,0,-0.0911325216293335,0,0,0.020251672714948654,0,-0.04050334542989731,0,0,0,0.010125836357474327,0,-0.08100669085979462,0,0,0,0,0,-0.08100669085979462,0,0,0,0.0911325216293335,0,0,0,0,0,0.010125836357474327,0,-0.04050334542989731,0,0,0,0.020251672714948654,0,-0.04050334542989731,-0.020251672714948654,0,0,0.010125836357474327,0,0,-0.020251672714948654,0,0.04050334542989731,0.050629179924726486,0,0,0,0,0.04050334542989731,0,0,-0.04050334542989731,-0.010125836357474327,0,0,0.12151002883911133,0,-0.04050334542989731,-0.0911325216293335,0,0,0,0,-0.04050334542989731,-0.020251672714948654,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-162 -->\n*** if open quote toggle cursor quote flag\n.,E684 C9 22    CMP #$22        comapre byte with \"\n.,E686 D0 08    BNE $E690       exit if not \"\n.,E688 A5 D4    LDA $D4         get cursor quote flag, $xx = quote, $00 = no quote\n.,E68A 49 01    EOR #$01        toggle it\n.,E68C 85 D4    STA $D4         save cursor quote flag\n.,E68E A9 22    LDA #$22        restore the \"\n.,E690 60       RTS","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-162"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0.015811635181307793,0.003952908795326948,0,-0.015811635181307793,-0.011858726851642132,0,0.06324654072523117,0.019764544442296028,0,-0.07905817776918411,-0.02767036110162735,0,0.015811635181307793,0,0,0,-0.04743490740656853,0,0.09486981481313705,0.0671994537115097,0,0,-0.08696399629116058,0,0,0.011858726851642132,0,0,-0.02767036110162735,0,0.015811635181307793,0.11858726292848587,0,0,-0.039529088884592056,0,0,0.02767036110162735,0,-0.015811635181307793,-0.003952908795326948,0,0.031623270362615585,0.007905817590653896,0,-0.015811635181307793,-0.08696399629116058,0,0,0.007905817590653896,0,-0.1106814444065094,-0.011858726851642132,0,0.09486981481313705,0.015811635181307793,0,-0.031623270362615585,-0.015811635181307793,0,0,0.011858726851642132,0,-0.031623270362615585,-0.023717453703284264,0,0.015811635181307793,0.011858726851642132,0,-0.015811635181307793,-0.05138781666755676,0,0.015811635181307793,0.011858726851642132,0,0,-0.019764544442296028,0,0.06324654072523117,0.019764544442296028,0,-0.015811635181307793,-0.003952908795326948,0,0.04743490740656853,0.003952908795326948,0,-0.12649308145046234,-0.11858726292848587,0,0.031623270362615585,0.015811635181307793,0,-0.015811635181307793,-0.007905817590653896,0,0,0.019764544442296028,0,-0.031623270362615585,-0.007905817590653896,0,0.1106814444065094,0.031623270362615585,0,-0.09486981481313705,-0.0553407222032547,0,0.031623270362615585,0.023717453703284264,0,-0.031623270362615585,0,0,0.015811635181307793,0.04743490740656853,0,-0.031623270362615585,0,0,0.06324654072523117,0.007905817590653896,0,0,-0.003952908795326948,0,0.39529088139533997,0.007905817590653896,0,-0.06324654072523117,-0.011858726851642132,0,0.031623270362615585,0.007905817590653896,0,-0.015811635181307793,-0.04743490740656853,0,0,0.015811635181307793,0,-0.015811635181307793,-0.019764544442296028,0,0.031623270362615585,0.003952908795326948,0,-0.04743490740656853,-0.07115235924720764,0,0.1106814444065094,0.04743490740656853,0,-0.06324654072523117,-0.015811635181307793,0,0.015811635181307793,0.003952908795326948,0,-0.09486981481313705,-0.04743490740656853,0,0,0.007905817590653896,0,-0.04743490740656853,-0.011858726851642132,0,0.06324654072523117,0.015811635181307793,0,-0.04743490740656853,-0.003952908795326948,0,0.015811635181307793,0.03557617962360382,0,-0.04743490740656853,-0.015811635181307793,0,0.015811635181307793,0.023717453703284264,0,-0.07905817776918411,-0.08696399629116058,0,0,0.019764544442296028,0,-0.09486981481313705,-0.015811635181307793,0,0.20555126667022705,0.007905817590653896,0,-0.031623270362615585,-0.015811635181307793,0,0.04743490740656853,0.0553407222032547,0,-0.015811635181307793,-0.10672853887081146,0,0.4427257776260376,0.023717453703284264,0,-0.031623270362615585,-0.019764544442296028,0,0.1106814444065094,0.011858726851642132,0,-0.015811635181307793,-0.019764544442296028,0,0,0.04743490740656853,0,-0.09486981481313705,-0.019764544442296028,0,0.031623270362615585,0.20159834623336792,0,-0.015811635181307793,-0.031623270362615585,0,0,0.039529088884592056,0,-0.031623270362615585,-0.007905817590653896,0,0.015811635181307793,0,0,-0.031623270362615585,-0.007905817590653896,0,0.04743490740656853,0.019764544442296028,0,-0.015811635181307793,-0.023717453703284264,0,0.015811635181307793,0.0553407222032547,0,-0.015811635181307793,-0.03557617962360382,0,0.015811635181307793,0.015811635181307793,0,-0.015811635181307793,-0.05138781666755676,0,0.015811635181307793,0,0,0,-0.05138781666755676,0,0,0.0553407222032547,0,0,-0.031623270362615585,0,0.04743490740656853,0.007905817590653896,0,0,-0.031623270362615585,0,0,0.011858726851642132,0,-0.06324654072523117,-0.04348199814558029,0,0.06324654072523117,0.003952908795326948,0,0,-0.04743490740656853,0,0,0.11858726292848587,0,0,-0.019764544442296028,0,0.031623270362615585,0.03557617962360382,0,-0.015811635181307793,-0.039529088884592056,0,0,0.22926871478557587,0,-0.04743490740656853,-0.019764544442296028,0,0.031623270362615585,0.0553407222032547,0,-0.15811635553836823,-0.015811635181307793,0,0,0.02767036110162735,0,-0.04743490740656853,-0.07115235924720764,0,0.015811635181307793,0.023717453703284264,0,-0.06324654072523117,-0.015811635181307793,0,0,0.003952908795326948,0,0,-0.023717453703284264,0,0.015811635181307793,0.023717453703284264,0,-0.12649308145046234,-0.015811635181307793,0,0,0.1225401759147644,0,-0.015811635181307793,-0.023717453703284264,0,0.031623270362615585,0.015811635181307793,0,-0.015811635181307793,-0.011858726851642132,0,0.015811635181307793,0.007905817590653896,0,-0.031623270362615585,-0.011858726851642132,0,0,0.015811635181307793,0,-0.09486981481313705,-0.011858726851642132,0,0.015811635181307793,0.02767036110162735,0,-0.031623270362615585,-0.015811635181307793,0,0.031623270362615585,0.02767036110162735,0,0,-0.023717453703284264,0,0,0,0,-0.23717452585697174,-0.04348199814558029,0,0.031623270362615585,0.04743490740656853,0,-0.015811635181307793,-0.011858726851642132,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-174 -->\n*** fetch a screen address\n.,E9F0 BD F0 EC LDA $ECF0,X     get the start of line low byte from the ROM table\n.,E9F3 85 D1    STA $D1         set the current screen line pointer low byte\n.,E9F5 B5 D9    LDA $D9,X       get the start of line high byte from the RAM table\n.,E9F7 29 03    AND #$03        mask 0000 00xx, line memory page\n.,E9F9 0D 88 02 ORA $0288       OR with the screen memory page\n.,E9FC 85 D2    STA $D2         save the current screen line pointer high byte\n.,E9FE 60       RTS\n\n*** clear screen line X\n.,E9FF A0 27    LDY #$27        set number of columns to clear\n.,EA01 20 F0 E9 JSR $E9F0       fetch a screen address\n.,EA04 20 24 EA JSR $EA24       calculate the pointer to colour RAM\n.,EA07 20 DA E4 JSR $E4DA       save the current colour to the colour RAM\n.,EA0A A9 20    LDA #$20        set [SPACE]\n.,EA0C 91 D1    STA ($D1),Y     clear character in current screen line\n.,EA0E 88       DEY             decrement index\n.,EA0F 10 F6    BPL $EA07       loop if more to do\n.,EA11 60       RTS\n\n*** orphan byte\n.,EA12 EA       NOP             unused\n\n*** print character A and colour X\n.,EA13 A8       TAY             copy the character\n.,EA14 A9 02    LDA #$02        set the count to $02, usually $14 ??\n.,EA16 85 CD    STA $CD         save the cursor countdown\n.,EA18 20 24 EA JSR $EA24       calculate the pointer to colour RAM\n.,EA1B 98       TYA             get the character back","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-174"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0,0,0,0,0,0.12331356108188629,0.03699406981468201,0,-0.09865085035562515,-0.04315974563360214,0,0.024662712588906288,0,0,-0.024662712588906288,-0.07398813962936401,0,0.024662712588906288,0.049325425177812576,0,0,-0.061656780540943146,0,0,0.006165678147226572,0,0,0,0,0,0.11714788526296616,0,0,-0.05549110472202301,0,0.024662712588906288,0.012331356294453144,0,-0.049325425177812576,0,0,0,0.012331356294453144,0,0,-0.09248517453670502,0,0,0.012331356294453144,0,-0.09865085035562515,0,0,0.12331356108188629,0,0,-0.049325425177812576,-0.024662712588906288,0,0.024662712588906288,0,0,0,-0.012331356294453144,0,0.024662712588906288,0.018497034907341003,0,-0.024662712588906288,0,0,0,0,0,0,-0.012331356294453144,0,0,0.03699406981468201,0,-0.024662712588906288,-0.006165678147226572,0,0.049325425177812576,0.006165678147226572,0,-0.14797627925872803,-0.09248517453670502,0,0.024662712588906288,0,0,-0.049325425177812576,-0.012331356294453144,0,0,0.018497034907341003,0,-0.024662712588906288,0,0,0.17263898253440857,0.061656780540943146,0,-0.09865085035562515,-0.049325425177812576,0,0,0.030828390270471573,0,0,-0.012331356294453144,0,0.024662712588906288,0.012331356294453144,0,-0.049325425177812576,0,0,0,0.012331356294453144,0,0,0,0,0.36994069814682007,0,0,-0.049325425177812576,-0.012331356294453144,0,0,0.018497034907341003,0,0,-0.049325425177812576,0,0.024662712588906288,0,0,0,0,0,0.049325425177812576,0.006165678147226572,0,-0.049325425177812576,-0.07398813962936401,0,0.12331356108188629,0.061656780540943146,0,-0.07398813962936401,-0.024662712588906288,0,0.024662712588906288,0.018497034907341003,0,-0.22196441888809204,-0.03699406981468201,0,0.024662712588906288,0.012331356294453144,0,0,-0.012331356294453144,0,0,0,0,-0.024662712588906288,-0.006165678147226572,0,0,0,0,0,-0.012331356294453144,0,0.049325425177812576,0.030828390270471573,0,-0.17263898253440857,-0.07398813962936401,0,0,0.012331356294453144,0,-0.1973017007112503,-0.030828390270471573,0,0.14797627925872803,0.012331356294453144,0,-0.049325425177812576,-0.012331356294453144,0,0.024662712588906288,0.08631949126720428,0,0,-0.09248517453670502,0,0.41926610469818115,0,0,-0.024662712588906288,-0.006165678147226572,0,0.049325425177812576,0.012331356294453144,0,0,-0.024662712588906288,0,0,0.030828390270471573,0,-0.07398813962936401,-0.024662712588906288,0,0.049325425177812576,0.19113601744174957,0,0,-0.030828390270471573,0,0,0.006165678147226572,0,-0.049325425177812576,0,0,0,0.012331356294453144,0,-0.049325425177812576,0,0,0.024662712588906288,0.024662712588906288,0,0,-0.024662712588906288,0,0,0.06782245635986328,0,0,-0.049325425177812576,0,0.049325425177812576,0.012331356294453144,0,-0.024662712588906288,-0.11098220944404602,0,0.024662712588906288,0.012331356294453144,0,-0.024662712588906288,-0.024662712588906288,0,0,0.030828390270471573,0,0,-0.024662712588906288,0,0.07398813962936401,0.006165678147226572,0,0,0,0,0,0.030828390270471573,0,0,-0.09248517453670502,0,0.07398813962936401,0,0,0,-0.09865085035562515,0,0,0.07398813962936401,0,0,-0.030828390270471573,0,0.049325425177812576,0.024662712588906288,0,0,-0.03699406981468201,0,0,0.2157987356185913,0,-0.049325425177812576,-0.024662712588906288,0,0.024662712588906288,0.024662712588906288,0,-0.09865085035562515,-0.006165678147226572,0,0,0.04315974563360214,0,0,-0.061656780540943146,0,0.024662712588906288,0.024662712588906288,0,-0.09865085035562515,0,0,0,0.006165678147226572,0,0,-0.03699406981468201,0,0.024662712588906288,0,0,-0.14797627925872803,-0.024662712588906288,0,0,0.10481652617454529,0,0,-0.012331356294453144,0,0,0,0,-0.024662712588906288,0,0,0,0.030828390270471573,0,0,-0.012331356294453144,0,0.024662712588906288,0.024662712588906288,0,0,-0.024662712588906288,0,0,0.030828390270471573,0,-0.024662712588906288,-0.018497034907341003,0,0.049325425177812576,0.04315974563360214,0,0,-0.05549110472202301,0,0,0.006165678147226572,0,-0.17263898253440857,0,0,0,0.03699406981468201,0,-0.024662712588906288,-0.006165678147226572,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-175 -->\n*** save the character and colour to the screen @ the cursor\n.,EA1C A4 D3    LDY $D3         get the cursor column\n.,EA1E 91 D1    STA ($D1),Y     save the character from current screen line\n.,EA20 8A       TXA             copy the colour to A\n.,EA21 91 F3    STA ($F3),Y     save to colour RAM\n.,EA23 60       RTS\n\n*** calculate the pointer to colour RAM\n.,EA24 A5 D1    LDA $D1         get current screen line pointer low byte\n.,EA26 85 F3    STA $F3         save pointer to colour RAM low byte\n.,EA28 A5 D2    LDA $D2         get current screen line pointer high byte\n.,EA2A 29 03    AND #$03        mask 0000 00xx, line memory page\n.,EA2C 09 D8    ORA #$D8        set  1101 01xx, colour memory page\n.,EA2E 85 F4    STA $F4         save pointer to colour RAM high byte\n.,EA30 60       RTS","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-175"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0.11693698912858963,0.012528963387012482,0,0,-0.0041763209737837315,0,0,0.025057926774024963,0,-0.016705283895134926,-0.008352641947567463,0,0.016705283895134926,0.04176321253180504,0,-0.03341056779026985,-0.02088160626590252,0,0.03341056779026985,0.04593953117728233,0,0,-0.029234247282147408,0,0.016705283895134926,0.025057926774024963,0,0,0,0,0,0.12111330777406693,0,0,-0.04593953117728233,0,0.05011585354804993,0.02088160626590252,0,0,0,0,0.03341056779026985,0.025057926774024963,0,-0.2672845423221588,-0.02088160626590252,0,0,0.008352641947567463,0,-0.11693698912858963,0,0,0.10023170709609985,0,0,-0.016705283895134926,-0.04593953117728233,0,0.016705283895134926,0,0,0,-0.016705283895134926,0,0.016705283895134926,0.025057926774024963,0,-0.05011585354804993,-0.008352641947567463,0,0.05011585354804993,0.029234247282147408,0,-0.05011585354804993,-0.029234247282147408,0,0.10023170709609985,0.008352641947567463,0,0,-0.016705283895134926,0,0.016705283895134926,0.008352641947567463,0,-0.1336422711610794,-0.0668211355805397,0,0.016705283895134926,0.0668211355805397,0,-0.0668211355805397,-0.016705283895134926,0,0,0.0668211355805397,0,-0.10023170709609985,0,0,0.10023170709609985,0.0041763209737837315,0,-0.11693698912858963,-0.012528963387012482,0,0,0.02088160626590252,0,-0.03341056779026985,-0.029234247282147408,0,0.016705283895134926,0.016705283895134926,0,-0.10023170709609985,0,0,0.016705283895134926,0.012528963387012482,0,0,-0.0041763209737837315,0,0.3341057002544403,0.008352641947567463,0,-0.016705283895134926,-0.0041763209737837315,0,0.05011585354804993,0.029234247282147408,0,-0.016705283895134926,-0.012528963387012482,0,0,0.02088160626590252,0,-0.03341056779026985,-0.1336422711610794,0,0.016705283895134926,0,0,-0.016705283895134926,-0.07517378032207489,0,0.10023170709609985,0.05011585354804993,0,-0.016705283895134926,-0.008352641947567463,0,0.08352642506361008,0.02088160626590252,0,0,-0.008352641947567463,0,0,0.012528963387012482,0,-0.0668211355805397,-0.025057926774024963,0,0.0668211355805397,0.025057926774024963,0,-0.08352642506361008,-0.04176321253180504,0,0.05011585354804993,0.05011585354804993,0,-0.016705283895134926,-0.0041763209737837315,0,0.0668211355805397,0.016705283895134926,0,0,-0.0709974616765976,0,0.10023170709609985,0.008352641947567463,0,-0.05011585354804993,-0.04593953117728233,0,0.15034756064414978,0.0041763209737837315,0,-0.016705283895134926,-0.058468494564294815,0,0.0668211355805397,0.05429217219352722,0,0,-0.09187906235456467,0,0.4844532310962677,0.025057926774024963,0,-0.05011585354804993,-0.025057926774024963,0,0.08352642506361008,0.037586890161037445,0,0,-0.05011585354804993,0,0,0.008352641947567463,0,-0.016705283895134926,-0.0041763209737837315,0,0,0.17122916877269745,0,0,-0.016705283895134926,0,0,0.03341056779026985,0,-0.05011585354804993,-0.008352641947567463,0,0,0.0041763209737837315,0,-0.03341056779026985,-0.016705283895134926,0,0.03341056779026985,0.008352641947567463,0,0,-0.008352641947567463,0,0.11693698912858963,0.06264481693506241,0,-0.016705283895134926,-0.008352641947567463,0,0,0.05011585354804993,0,0,-0.0668211355805397,0,0,0,0,0,-0.06264481693506241,0,0.0668211355805397,0.058468494564294815,0,0,-0.04593953117728233,0,0.03341056779026985,0.029234247282147408,0,0,-0.008352641947567463,0,0.016705283895134926,0.037586890161037445,0,-0.016705283895134926,-0.012528963387012482,0,0.05011585354804993,0.06264481693506241,0,-0.05011585354804993,-0.037586890161037445,0,0,0.10023170709609985,0,0,-0.008352641947567463,0,0.016705283895134926,0.037586890161037445,0,-0.016705283895134926,-0.03341056779026985,0,0.03341056779026985,0.24640294909477234,0,-0.016705283895134926,-0.04176321253180504,0,0.016705283895134926,0.04176321253180504,0,-0.05011585354804993,-0.025057926774024963,0,0.016705283895134926,0.025057926774024963,0,0,-0.037586890161037445,0,0,0,0,-0.0668211355805397,-0.008352641947567463,0,0,0.0041763209737837315,0,0,-0.05011585354804993,0,0.05011585354804993,0.0041763209737837315,0,-0.03341056779026985,-0.016705283895134926,0,0.016705283895134926,0.10023170709609985,0,0,-0.0041763209737837315,0,0,0.0709974616765976,0,-0.0668211355805397,-0.012528963387012482,0,0,0,0,-0.016705283895134926,-0.008352641947567463,0,0.03341056779026985,0.0041763209737837315,0,-0.016705283895134926,-0.0041763209737837315,0,0,0.058468494564294815,0,-0.05011585354804993,-0.0041763209737837315,0,0.016705283895134926,0.037586890161037445,0,-0.03341056779026985,0,0,0.016705283895134926,0.008352641947567463,0,-0.1336422711610794,-0.025057926774024963,0,0.10023170709609985,0.04176321253180504,0,-0.03341056779026985,-0.04593953117728233,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-211 -->\n*** serial bus device close\n.,F2EE 20 42 F6 JSR $F642       close serial bus device\n.,F2F1 68       PLA             restore file index\n\n*** close file index X\n.,F2F2 AA       TAX             copy index to file to close\n.,F2F3 C6 98    DEC $98         decrement the open file count\n.,F2F5 E4 98    CPX $98         compare the index with the open file count\n.,F2F7 F0 14    BEQ $F30D       exit if equal, last entry was closing file\n                                else entry was not last in list so copy last table entry\n                                file details over the details of the closing one\n.,F2F9 A4 98    LDY $98         get the open file count as index\n.,F2FB B9 59 02 LDA $0259,Y     get last+1 logical file number from logical file table\n.,F2FE 9D 59 02 STA $0259,X     save logical file number over closed file\n.,F301 B9 63 02 LDA $0263,Y     get last+1 device number from device number table\n.,F304 9D 63 02 STA $0263,X     save device number over closed file\n.,F307 B9 6D 02 LDA $026D,Y     get last+1 secondary address from secondary address table\n.,F30A 9D 6D 02 STA $026D,X     save secondary address over closed file\n.,F30D 18       CLC             flag ok\n.,F30E 60       RTS\n\n*** find a file\n.,F30F A9 00    LDA #$00        clear A\n.,F311 85 90    STA $90         clear the serial status byte\n.,F313 8A       TXA             copy the logical file number to A","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-211"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0.08169115334749222,0.015317090786993504,0,0,-0.010211394168436527,0,0,0.005105697084218264,0,-0.020422788336873055,-0.010211394168436527,0,0.020422788336873055,0.020422788336873055,0,-0.020422788336873055,-0.02552848495543003,0,0.020422788336873055,0.07658545672893524,0,-0.020422788336873055,-0.030634181573987007,0,0,0.02552848495543003,0,0,0,0,0,0.1072196364402771,0,0,-0.07658545672893524,0,0.04084557667374611,0.020422788336873055,0,-0.020422788336873055,-0.010211394168436527,0,0.04084557667374611,0.02552848495543003,0,-0.26549625396728516,-0.05105696991086006,0,0,0.010211394168436527,0,0,0,0,0.08169115334749222,0.010211394168436527,0,0,-0.02552848495543003,0,0,0,0,0,-0.010211394168436527,0,0.061268363147974014,0.010211394168436527,0,-0.020422788336873055,-0.005105697084218264,0,0.061268363147974014,0.005105697084218264,0,-0.061268363147974014,-0.03573988005518913,0,0.10211393982172012,0.020422788336873055,0,-0.020422788336873055,-0.010211394168436527,0,0,0,0,-0.12253672629594803,-0.127642422914505,0,0,0.02552848495543003,0,-0.04084557667374611,-0.020422788336873055,0,0,0.04084557667374611,0,-0.12253672629594803,0,0,0.12253672629594803,0.005105697084218264,0,-0.10211393982172012,-0.010211394168436527,0,0,0.010211394168436527,0,-0.020422788336873055,-0.010211394168436527,0,0.04084557667374611,0.010211394168436527,0,-0.12253672629594803,-0.015317090786993504,0,0.020422788336873055,0,0,0,-0.005105697084218264,0,0.3676101863384247,0,0,0,-0.010211394168436527,0,0,0.030634181573987007,0,-0.020422788336873055,-0.020422788336873055,0,0,0.030634181573987007,0,-0.020422788336873055,-0.13274812698364258,0,0.020422788336873055,0,0,-0.08169115334749222,-0.02552848495543003,0,0.12253672629594803,0.04084557667374611,0,0,-0.005105697084218264,0,0,0.010211394168436527,0,-0.020422788336873055,-0.020422788336873055,0,0,0.03573988005518913,0,-0.04084557667374611,-0.010211394168436527,0,0.10211393982172012,0.03573988005518913,0,-0.04084557667374611,-0.04084557667374611,0,0.061268363147974014,0.05105696991086006,0,0,-0.015317090786993504,0,0.020422788336873055,0,0,0,-0.061268363147974014,0,0.08169115334749222,0,0,-0.020422788336873055,-0.03573988005518913,0,0.22465066611766815,0.010211394168436527,0,-0.04084557667374611,-0.06637406349182129,0,0.020422788336873055,0.061268363147974014,0,0,-0.11232533305883408,0,0.4288785457611084,0.010211394168436527,0,-0.10211393982172012,-0.020422788336873055,0,0.08169115334749222,0.04084557667374611,0,0,-0.061268363147974014,0,0.020422788336873055,0.010211394168436527,0,-0.04084557667374611,-0.005105697084218264,0,0,0.18891079723834991,0,0,-0.005105697084218264,0,0,0.005105697084218264,0,-0.020422788336873055,-0.015317090786993504,0,0,0,0,0,-0.010211394168436527,0,0.04084557667374611,0.010211394168436527,0,-0.020422788336873055,-0.04084557667374611,0,0.020422788336873055,0.07147976011037827,0,-0.020422788336873055,-0.005105697084218264,0,0,0.010211394168436527,0,0,-0.07658545672893524,0,0,0,0,-0.020422788336873055,-0.020422788336873055,0,0.020422788336873055,0.07147976011037827,0,0,-0.020422788336873055,0,0,0.030634181573987007,0,0,0,0,0.020422788336873055,0.02552848495543003,0,0,-0.005105697084218264,0,0,0.05616266652941704,0,0,-0.02552848495543003,0,0,0.13785381615161896,0,-0.020422788336873055,-0.02552848495543003,0,0,0.010211394168436527,0,-0.020422788336873055,-0.030634181573987007,0,0,0.2144392728805542,0,-0.04084557667374611,-0.061268363147974014,0,0.04084557667374611,0.04084557667374611,0,-0.04084557667374611,-0.030634181573987007,0,0.04084557667374611,0.04084557667374611,0,0,-0.045951273292303085,0,0,0,0,-0.10211393982172012,-0.005105697084218264,0,0,0.010211394168436527,0,-0.020422788336873055,-0.04084557667374611,0,0.04084557667374611,0.005105697084218264,0,-0.08169115334749222,0,0,0.020422788336873055,0.11232533305883408,0,0,-0.010211394168436527,0,0.020422788336873055,0.010211394168436527,0,-0.04084557667374611,-0.015317090786993504,0,0,0,0,-0.020422788336873055,-0.005105697084218264,0,0,0.005105697084218264,0,0,-0.030634181573987007,0,0,0.04084557667374611,0,-0.061268363147974014,0,0,0.04084557667374611,0,0,-0.020422788336873055,-0.005105697084218264,0,0,0.010211394168436527,0,-0.24507345259189606,-0.010211394168436527,0,0.04084557667374611,0.02552848495543003,0,-0.04084557667374611,-0.010211394168436527,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-212 -->\n*** find file A\n.,F314 A6 98    LDX $98         get the open file count\n.,F316 CA       DEX             decrement the count to give the index\n.,F317 30 15    BMI $F32E       if no files just exit\n.,F319 DD 59 02 CMP $0259,X     compare the logical file number with the table logical\n                                file number\n.,F31C D0 F8    BNE $F316       if no match go try again\n.,F31E 60       RTS\n\n*** set file details from table,X\n.,F31F BD 59 02 LDA $0259,X     get logical file from logical file table\n.,F322 85 B8    STA $B8         save the logical file\n.,F324 BD 63 02 LDA $0263,X     get device number from device number table\n.,F327 85 BA    STA $BA         save the device number\n.,F329 BD 6D 02 LDA $026D,X     get secondary address from secondary address table\n.,F32C 85 B9    STA $B9         save the secondary address\n.,F32E 60       RTS\n\n*** close all channels and files\n.,F32F A9 00    LDA #$00        clear A\n.,F331 85 98    STA $98         clear the open file count","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-212"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0.028821848332881927,0,0,-0.04323277249932289,0,0,0.05284005403518677,0,-0.057643696665763855,-0.019214564934372902,0,0.038429129868745804,0.033625490963459015,0,-0.019214564934372902,-0.04803641512989998,0,0.057643696665763855,0.057643696665763855,0,0,-0.014410924166440964,0,0,0.0048036412335932255,0,0,-0.0048036412335932255,0,0.038429129868745804,0.11528739333152771,0,-0.019214564934372902,-0.057643696665763855,0,0,0.028821848332881927,0,-0.019214564934372902,-0.009607282467186451,0,0,0.028821848332881927,0,-0.019214564934372902,-0.10087646543979645,0,0,0.04323277249932289,0,0,-0.0048036412335932255,0,0.17293108999729156,0.057643696665763855,0,-0.057643696665763855,-0.033625490963459015,0,0,0.014410924166440964,0,0,-0.057643696665763855,0,0.07685825973749161,0.019214564934372902,0,-0.038429129868745804,-0.02401820756494999,0,0,0.0048036412335932255,0,-0.019214564934372902,-0.028821848332881927,0,0.019214564934372902,0.019214564934372902,0,-0.057643696665763855,-0.0048036412335932255,0,0.019214564934372902,0.02401820756494999,0,-0.07685825973749161,-0.038429129868745804,0,0.019214564934372902,0.014410924166440964,0,-0.019214564934372902,-0.02401820756494999,0,0.019214564934372902,0.014410924166440964,0,-0.019214564934372902,0,0,0.15371651947498322,0,0,-0.09607283025979996,-0.028821848332881927,0,0.019214564934372902,0.028821848332881927,0,-0.019214564934372902,-0.019214564934372902,0,0.11528739333152771,0.028821848332881927,0,0,-0.014410924166440964,0,0.019214564934372902,0.019214564934372902,0,0,-0.0048036412335932255,0,0.3650767505168915,0.019214564934372902,0,-0.019214564934372902,-0.028821848332881927,0,0,0.0048036412335932255,0,0,-0.014410924166440964,0,0.019214564934372902,0,0,-0.019214564934372902,-0.009607282467186451,0,0.019214564934372902,0,0,-0.057643696665763855,-0.019214564934372902,0,0.11528739333152771,0.08646554499864578,0,0,-0.028821848332881927,0,0,0.014410924166440964,0,-0.09607283025979996,-0.028821848332881927,0,0,0.04803641512989998,0,-0.057643696665763855,-0.019214564934372902,0,0,0.028821848332881927,0,-0.038429129868745804,-0.02401820756494999,0,0.11528739333152771,0.014410924166440964,0,-0.057643696665763855,-0.04803641512989998,0,0.057643696665763855,0.019214564934372902,0,-0.038429129868745804,-0.04323277249932289,0,0.13450196385383606,0.009607282467186451,0,-0.038429129868745804,-0.02401820756494999,0,0.19214566051959991,0.019214564934372902,0,-0.019214564934372902,-0.009607282467186451,0,0.019214564934372902,0.0816619023680687,0,-0.019214564934372902,-0.06725098192691803,0,0.46114957332611084,0.009607282467186451,0,-0.07685825973749161,-0.014410924166440964,0,0.11528739333152771,0.057643696665763855,0,-0.038429129868745804,0,0,0,0.009607282467186451,0,-0.17293108999729156,-0.014410924166440964,0,0.09607283025979996,0.19214566051959991,0,-0.019214564934372902,-0.014410924166440964,0,0,0.014410924166440964,0,-0.019214564934372902,0,0,0.019214564934372902,0.009607282467186451,0,-0.07685825973749161,-0.009607282467186451,0,0,0.019214564934372902,0,-0.057643696665763855,-0.033625490963459015,0,0.019214564934372902,0.057643696665763855,0,0,-0.0048036412335932255,0,0,0,0,-0.019214564934372902,-0.05284005403518677,0,0.057643696665763855,0,0,0,-0.028821848332881927,0,0.057643696665763855,0.04323277249932289,0,-0.057643696665763855,-0.033625490963459015,0,0.057643696665763855,0.057643696665763855,0,0,-0.028821848332881927,0,0,0.04803641512989998,0,0,-0.028821848332881927,0,0.038429129868745804,0.06725098192691803,0,-0.038429129868745804,-0.02401820756494999,0,0,0.10087646543979645,0,-0.057643696665763855,-0.02401820756494999,0,0.07685825973749161,0.014410924166440964,0,-0.019214564934372902,-0.028821848332881927,0,0,0.2353784292936325,0,-0.07685825973749161,-0.04323277249932289,0,0.019214564934372902,0.06244733929634094,0,-0.019214564934372902,-0.02401820756494999,0,0,0.038429129868745804,0,0,-0.11048375070095062,0,0,0.05284005403518677,0,-0.07685825973749161,-0.014410924166440964,0,0,0.028821848332881927,0,0,-0.009607282467186451,0,0.057643696665763855,0.014410924166440964,0,-0.11528739333152771,-0.038429129868745804,0,0.038429129868745804,0.09126918762922287,0,0,-0.033625490963459015,0,0.11528739333152771,0.009607282467186451,0,-0.057643696665763855,0,0,0.019214564934372902,0.0048036412335932255,0,-0.07685825973749161,-0.014410924166440964,0,0.038429129868745804,0.033625490963459015,0,-0.019214564934372902,-0.014410924166440964,0,0,0.057643696665763855,0,-0.057643696665763855,-0.028821848332881927,0,0.038429129868745804,0.028821848332881927,0,0,-0.02401820756494999,0,0.019214564934372902,0,0,-0.07685825973749161,-0.014410924166440964,0,0,0.019214564934372902,0,-0.019214564934372902,-0.028821848332881927,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-217 -->\n*** set the top of memory to F0xx\n.,F47D 38       SEC             read the top of memory\n.,F47E A9 F0    LDA #$F0        set $F000\n.,F480 4C 2D FE JMP $FE2D       set the top of memory and return\n\n*** initialise RS232 output\n.,F483 A9 7F    LDA #$7F        disable all interrupts\n.,F485 8D 0D DD STA $DD0D       save VIA 2 ICR\n.,F488 A9 06    LDA #$06        set RS232 DTR output, RS232 RTS output\n.,F48A 8D 03 DD STA $DD03       save VIA 2 DDRB, RS232 port\n.,F48D 8D 01 DD STA $DD01       save VIA 2 DRB, RS232 port\n.,F490 A9 04    LDA #$04        mask xxxx x1xx, set RS232 Tx DATA high\n.,F492 0D 00 DD ORA $DD00       OR it with VIA 2 DRA, serial port and video address\n.,F495 8D 00 DD STA $DD00       save VIA 2 DRA, serial port and video address\n.,F498 A0 00    LDY #$00        clear Y\n.,F49A 8C A1 02 STY $02A1       clear the RS-232 interrupt enable byte\n.,F49D 60       RTS\n\n*** load RAM from a device\n.,F49E 86 C3    STX $C3         set kernal setup pointer low byte\n.,F4A0 84 C4    STY $C4         set kernal setup pointer high byte\n.,F4A2 6C 30 03 JMP ($0330)     do LOAD vector, usually points to $F4A5","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-217"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0.030002344399690628,0.015001172199845314,0,0,-0.015001172199845314,0,0,0.007500586099922657,0,-0.030002344399690628,-0.015001172199845314,0,0.030002344399690628,0.007500586099922657,0,0,-0.03750292956829071,0,0.030002344399690628,0.03750292956829071,0,0,-0.007500586099922657,0,0,0.007500586099922657,0,0,0,0,0.060004688799381256,0.09750761836767197,0,-0.030002344399690628,-0.030002344399690628,0,0.030002344399690628,0.060004688799381256,0,0,-0.015001172199845314,0,0,0,0,0,-0.15751230716705322,0,0,0,0,-0.030002344399690628,0,0,0.15001171827316284,0.030002344399690628,0,0,-0.015001172199845314,0,0,0.007500586099922657,0,0,0,0,0.030002344399690628,0.04500351473689079,0,0,-0.007500586099922657,0,0.030002344399690628,0.03750292956829071,0,0,-0.09000702947378159,0,0.030002344399690628,0.015001172199845314,0,-0.030002344399690628,0,0,0.060004688799381256,0,0,-0.2100164145231247,0,0,0,0,0,-0.030002344399690628,-0.03750292956829071,0,0,0.030002344399690628,0,-0.030002344399690628,0,0,0.18001405894756317,0,0,-0.09000702947378159,-0.015001172199845314,0,0.030002344399690628,0.015001172199845314,0,0,0,0,0.030002344399690628,0.022501757368445396,0,0,-0.007500586099922657,0,0,0,0,-0.030002344399690628,0,0,0.3000234365463257,0.030002344399690628,0,-0.030002344399690628,-0.015001172199845314,0,0.030002344399690628,0.022501757368445396,0,0,0,0,0.060004688799381256,0,0,0,0,0,0.060004688799381256,0,0,-0.15001171827316284,-0.030002344399690628,0,0.24001875519752502,0.07500585913658142,0,-0.060004688799381256,-0.007500586099922657,0,0.030002344399690628,0,0,0,-0.060004688799381256,0,0,0.015001172199845314,0,0,0,0,0.060004688799381256,0.022501757368445396,0,-0.060004688799381256,-0.007500586099922657,0,0,0.015001172199845314,0,0,-0.015001172199845314,0,0.030002344399690628,0.03750292956829071,0,-0.060004688799381256,-0.10500820726156235,0,0.030002344399690628,0.007500586099922657,0,-0.15001171827316284,-0.060004688799381256,0,0.09000702947378159,0,0,-0.030002344399690628,-0.015001172199845314,0,0.030002344399690628,0.09000702947378159,0,0,-0.04500351473689079,0,0.39003047347068787,0.015001172199845314,0,0,-0.015001172199845314,0,0.24001875519752502,0.022501757368445396,0,0,0,0,0,0,0,-0.15001171827316284,-0.022501757368445396,0,0,0.15751230716705322,0,0,-0.015001172199845314,0,0.060004688799381256,0.022501757368445396,0,0,0,0,0.030002344399690628,0.030002344399690628,0,0,0,0,0.12000937759876251,0.04500351473689079,0,-0.030002344399690628,-0.0825064480304718,0,0.09000702947378159,0.1275099664926529,0,0,-0.030002344399690628,0,0.060004688799381256,0.015001172199845314,0,0,0,0,0,0,0,0,-0.007500586099922657,0,0,0.06750527769327164,0,-0.030002344399690628,-0.030002344399690628,0,0.060004688799381256,0,0,0,0,0,0,0.022501757368445396,0,0,-0.030002344399690628,0,0,0.022501757368445396,0,0,-0.07500585913658142,0,0.030002344399690628,0.052504103630781174,0,-0.030002344399690628,-0.022501757368445396,0,0,0.030002344399690628,0,0,-0.052504103630781174,0,0,0.19501523673534393,0,0,-0.007500586099922657,0,0.030002344399690628,0.12000937759876251,0,0,-0.007500586099922657,0,0,0.04500351473689079,0,0,-0.09750761836767197,0,0,0.007500586099922657,0,-0.060004688799381256,0,0,0,0.03750292956829071,0,-0.030002344399690628,0,0,0,0.015001172199845314,0,-0.24001875519752502,-0.007500586099922657,0,0,0.13501055538654327,0,0,-0.022501757368445396,0,0.030002344399690628,0.052504103630781174,0,-0.030002344399690628,0,0,0,0.04500351473689079,0,0,0,0,0.030002344399690628,0.015001172199845314,0,0,-0.03750292956829071,0,0.030002344399690628,0.060004688799381256,0,-0.18001405894756317,-0.030002344399690628,0,0,0.03750292956829071,0,0,0,0,0,0,0,0,0,0,0,0.015001172199845314,0,-0.060004688799381256,-0.015001172199845314,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-221 -->\n*** save RAM to device, A = index to start address, XY = end address low/high\n.,F5DD 86 AE    STX $AE         save end address low byte\n.,F5DF 84 AF    STY $AF         save end address high byte\n.,F5E1 AA       TAX             copy index to start pointer\n.,F5E2 B5 00    LDA $00,X       get start address low byte\n.,F5E4 85 C1    STA $C1         set I/O start addresses low byte\n.,F5E6 B5 01    LDA $01,X       get start address high byte\n.,F5E8 85 C2    STA $C2         set I/O start addresses high byte\n.,F5EA 6C 32 03 JMP ($0332)     go save, usually points to $F685","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-221"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0.02954847179353237,0.007387117948383093,0,0,-0.025854913517832756,0,0.05909694358706474,0.02216135524213314,0,0,-0.04432271048426628,0,0.014774235896766186,0,0,-0.05909694358706474,-0.014774235896766186,0,0.04432271048426628,0.04062914848327637,0,0,-0.007387117948383093,0,0,0.018467795103788376,0,-0.014774235896766186,-0.02216135524213314,0,0,0.10341965407133102,0,0,0,0,0,0.014774235896766186,0,0,-0.018467795103788376,0,0,0.02954847179353237,0,-0.08864542096853256,-0.025854913517832756,0,0,0.007387117948383093,0,0,-0.007387117948383093,0,0.04432271048426628,0.01108067762106657,0,-0.014774235896766186,-0.02954847179353237,0,0.04432271048426628,0.01108067762106657,0,-0.0738711804151535,-0.025854913517832756,0,0.0738711804151535,0,0,0,-0.02954847179353237,0,0,0.0480162687599659,0,0,-0.01108067762106657,0,0.014774235896766186,0.02216135524213314,0,0,-0.018467795103788376,0,0.02954847179353237,0,0,-0.04432271048426628,-0.11080677062273026,0,0,0,0,-0.08864542096853256,-0.08864542096853256,0,0,0.02216135524213314,0,-0.04432271048426628,-0.007387117948383093,0,0.17729084193706512,0.05170982703566551,0,-0.11819388717412949,0,0,0,0.007387117948383093,0,-0.014774235896766186,-0.02954847179353237,0,0.04432271048426628,0.025854913517832756,0,0,-0.01108067762106657,0,0.02954847179353237,0.0036935589741915464,0,-0.014774235896766186,-0.025854913517832756,0,0.5318725109100342,0,0,-0.04432271048426628,-0.0036935589741915464,0,0,0.007387117948383093,0,0,0,0,0.014774235896766186,0.007387117948383093,0,0,-0.05540338531136513,0,0.02954847179353237,0,0,-0.05909694358706474,0,0,0.08864542096853256,0.025854913517832756,0,0,-0.01108067762106657,0,0,0.03693559020757675,0,-0.02954847179353237,-0.04432271048426628,0,0,0.04062914848327637,0,-0.014774235896766186,-0.0036935589741915464,0,0,0.0036935589741915464,0,-0.04432271048426628,-0.0036935589741915464,0,0,0.01108067762106657,0,-0.014774235896766186,0,0,0.05909694358706474,0.014774235896766186,0,-0.02954847179353237,-0.03693559020757675,0,0,0.0036935589741915464,0,-0.02954847179353237,-0.04432271048426628,0,0.10341965407133102,0.01108067762106657,0,-0.02954847179353237,-0.02954847179353237,0,0.014774235896766186,0.08864542096853256,0,0,-0.11080677062273026,0,0.4136786162853241,0,0,0,-0.0480162687599659,0,0.02954847179353237,0.02954847179353237,0,-0.04432271048426628,0,0,0,0.02954847179353237,0,-0.04432271048426628,-0.007387117948383093,0,0,0.2696298062801361,0,0,-0.03693559020757675,0,0.014774235896766186,0.01108067762106657,0,-0.08864542096853256,0,0,0.014774235896766186,0.007387117948383093,0,-0.10341965407133102,-0.0036935589741915464,0,0,0.014774235896766186,0,0,-0.02954847179353237,0,0.16251659393310547,0.04432271048426628,0,-0.04432271048426628,0,0,0,0,0,-0.014774235896766186,-0.03693559020757675,0,0,0,0,-0.02954847179353237,-0.007387117948383093,0,0,0.01108067762106657,0,-0.02954847179353237,-0.025854913517832756,0,0.02954847179353237,0.01108067762106657,0,-0.02954847179353237,-0.025854913517832756,0,0.08864542096853256,0.0480162687599659,0,0,-0.014774235896766186,0,0,0,0,0,-0.014774235896766186,0,0.014774235896766186,0.05540338531136513,0,-0.04432271048426628,-0.014774235896766186,0,0.014774235896766186,0.014774235896766186,0,-0.0738711804151535,-0.01108067762106657,0,0,0.20683930814266205,0,-0.014774235896766186,-0.02216135524213314,0,0.02954847179353237,0.014774235896766186,0,0,-0.033242031931877136,0,0.02954847179353237,0.04432271048426628,0,-0.04432271048426628,-0.05170982703566551,0,0,0,0,0,-0.0036935589741915464,0,0.014774235896766186,0.018467795103788376,0,-0.014774235896766186,-0.04432271048426628,0,0.05909694358706474,0.014774235896766186,0,-0.02954847179353237,-0.05540338531136513,0,0.014774235896766186,0.13296812772750854,0,-0.014774235896766186,-0.01108067762106657,0,0.014774235896766186,0.08125829696655273,0,-0.014774235896766186,-0.02216135524213314,0,0.014774235896766186,0.0036935589741915464,0,0,-0.007387117948383093,0,0,0.007387117948383093,0,-0.05909694358706474,-0.02954847179353237,0,0.014774235896766186,0.02216135524213314,0,0,-0.014774235896766186,0,0.04432271048426628,0.014774235896766186,0,-0.02954847179353237,-0.02216135524213314,0,0,0.04432271048426628,0,-0.20683930814266205,-0.0036935589741915464,0,0,0,0,-0.16251659393310547,-0.01108067762106657,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-230 -->\n*** find specific tape header\n.,F7EA 20 2C F7 JSR $F72C       find tape header, exit with header in buffer\n.,F7ED B0 1D    BCS $F80C       just exit if error\n.,F7EF A0 05    LDY #$05        index to name\n.,F7F1 84 9F    STY $9F         save as tape buffer index\n.,F7F3 A0 00    LDY #$00        clear Y\n.,F7F5 84 9E    STY $9E         save as name buffer index\n.,F7F7 C4 B7    CPY $B7         compare with file name length\n.,F7F9 F0 10    BEQ $F80B       ok exit if match\n.,F7FB B1 BB    LDA ($BB),Y     get file name byte\n.,F7FD A4 9F    LDY $9F         get index to tape buffer\n.,F7FF D1 B2    CMP ($B2),Y     compare with tape header name byte\n.,F801 D0 E7    BNE $F7EA       if no match go get next header\n.,F803 E6 9E    INC $9E         else increment name buffer index\n.,F805 E6 9F    INC $9F         increment tape buffer index\n.,F807 A4 9E    LDY $9E         get name buffer index\n.,F809 D0 EC    BNE $F7F7       loop, branch always\n.,F80B 18       CLC             flag ok\n.,F80C 60       RTS\n\n*** bump tape pointer\n.,F80D 20 D0 F7 JSR $F7D0       get tape buffer start pointer in XY\n.,F810 E6 A6    INC $A6         increment tape buffer index\n.,F812 A4 A6    LDY $A6         get tape buffer index\n.,F814 C0 C0    CPY #$C0        compare with buffer length\n.,F816 60       RTS","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-230"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0.005700342822819948,0,0,0,0,0,0.028501713648438454,0,0,-0.005700342822819948,0,0.045602742582559586,0.017101028934121132,0,-0.045602742582559586,-0.017101028934121132,0,0.022801371291279793,0.045602742582559586,0,0,-0.017101028934121132,0,0.022801371291279793,0.022801371291279793,0,0,0,0,0.022801371291279793,0.09690582752227783,0,0,-0.08550514280796051,0,0,0.06840411573648453,0,0,-0.011400685645639896,0,0.045602742582559586,0,0,-0.045602742582559586,-0.1881113052368164,0,0.022801371291279793,0,0,0,0,0,0.022801371291279793,0.017101028934121132,0,-0.022801371291279793,-0.022801371291279793,0,0.022801371291279793,0,0,0,-0.034202057868242264,0,0.022801371291279793,0.028501713648438454,0,0,-0.011400685645639896,0,0,0,0,0,-0.07980480045080185,0,0,0.022801371291279793,0,0,0,0,0,0.022801371291279793,0,-0.09120548516511917,-0.028501713648438454,0,0,0.005700342822819948,0,-0.022801371291279793,-0.017101028934121132,0,0,0.011400685645639896,0,0,0,0,0.18241097033023834,0.005700342822819948,0,-0.06840411573648453,-0.005700342822819948,0,0,0.022801371291279793,0,0,-0.022801371291279793,0,0.022801371291279793,0.011400685645639896,0,0,0,0,0.022801371291279793,0.017101028934121132,0,0,0,0,0.41042467951774597,0.017101028934121132,0,0,0,0,0,0.005700342822819948,0,0,0,0,0.20521233975887299,0.028501713648438454,0,0,-0.022801371291279793,0,0.022801371291279793,0.017101028934121132,0,-0.045602742582559586,-0.039902400225400925,0,0.20521233975887299,0.017101028934121132,0,0,-0.011400685645639896,0,0.022801371291279793,0.011400685645639896,0,-0.045602742582559586,-0.07980480045080185,0,0,0.011400685645639896,0,0,0,0,0,0,0,-0.11400685459375381,-0.011400685645639896,0,0.022801371291279793,0,0,0,-0.017101028934121132,0,0.06840411573648453,0.011400685645639896,0,-0.022801371291279793,-0.045602742582559586,0,0.022801371291279793,0,0,-0.06840411573648453,-0.051303084939718246,0,0.13680823147296906,0.011400685645639896,0,-0.06840411573648453,0,0,0.045602742582559586,0.10260616987943649,0,0,-0.045602742582559586,0,0.34202057123184204,0,0,-0.022801371291279793,-0.005700342822819948,0,0.22801370918750763,0.011400685645639896,0,-0.045602742582559586,0,0,0,0.011400685645639896,0,-0.11400685459375381,0,0,0,0.2166130244731903,0,0,-0.011400685645639896,0,0.06840411573648453,0.005700342822819948,0,0,0,0,0,0.10830651223659515,0,0,0,0,0.022801371291279793,0.017101028934121132,0,-0.045602742582559586,-0.022801371291279793,0,0,0.10260616987943649,0,0,0,0,0,0.022801371291279793,0,0,-0.034202057868242264,0,0,0.005700342822819948,0,-0.022801371291279793,0,0,0.022801371291279793,0.005700342822819948,0,-0.022801371291279793,-0.06270377337932587,0,0.045602742582559586,0.017101028934121132,0,0,0,0,0.022801371291279793,0.039902400225400925,0,-0.022801371291279793,-0.011400685645639896,0,0,0.011400685645639896,0,0,-0.034202057868242264,0,0,0.06840411573648453,0,0,-0.034202057868242264,0,0.022801371291279793,0.022801371291279793,0,0,-0.022801371291279793,0,0.022801371291279793,0.17101028561592102,0,0,-0.017101028934121132,0,0.022801371291279793,0.11400685459375381,0,0,-0.022801371291279793,0,0.022801371291279793,0.045602742582559586,0,0,-0.07410445809364319,0,0.022801371291279793,0,0,-0.1596096009016037,0,0,0.022801371291279793,0.039902400225400925,0,0,0,0,0,0.005700342822819948,0,-0.3192192018032074,0,0,0,0.11400685459375381,0,0,-0.022801371291279793,0,0,0,0,-0.045602742582559586,0,0,0,0.051303084939718246,0,-0.06840411573648453,0,0,0.045602742582559586,0.005700342822819948,0,0,-0.022801371291279793,0,0,0.06270377337932587,0,-0.1596096009016037,-0.011400685645639896,0,0.045602742582559586,0.028501713648438454,0,0,-0.011400685645639896,0,0.045602742582559586,0.011400685645639896,0,-0.045602742582559586,-0.011400685645639896,0,0,0,0,-0.022801371291279793,-0.028501713648438454,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-239 -->\n*** copy I/O start address to buffer address\n.,FB8E A5 C2    LDA $C2         get I/O start address high byte\n.,FB90 85 AD    STA $AD         set buffer address high byte\n.,FB92 A5 C1    LDA $C1         get I/O start address low byte\n.,FB94 85 AC    STA $AC         set buffer address low byte\n.,FB96 60       RTS\n\n*** new tape byte setup\n.,FB97 A9 08    LDA #$08        eight bits to do\n.,FB99 85 A3    STA $A3         set bit count\n.,FB9B A9 00    LDA #$00        clear A\n.,FB9D 85 A4    STA $A4         clear tape bit cycle phase\n.,FB9F 85 A8    STA $A8         clear start bit first cycle done flag\n.,FBA1 85 9B    STA $9B         clear byte parity\n.,FBA3 85 A9    STA $A9         clear start bit check flag, set no start bit yet\n.,FBA5 60       RTS","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-239"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0.010684231296181679,0.008013173937797546,0,-0.042736925184726715,-0.032052695751190186,0,0.032052695751190186,0.018697405233979225,0,-0.05342115834355354,-0.03739481046795845,0,0.010684231296181679,0.010684231296181679,0,-0.042736925184726715,-0.045407984405756,0,0.021368462592363358,0.018697405233979225,0,0,-0.029381636530160904,0,0,0.013355289585888386,0,0,0,0,0.06410539150238037,0.1362239569425583,0,-0.010684231296181679,-0.05342115834355354,0,0.010684231296181679,0.03472375497221947,0,-0.032052695751190186,-0.008013173937797546,0,0,0,0,-0.032052695751190186,-0.06143433228135109,0,0,0.018697405233979225,0,-0.021368462592363358,-0.010684231296181679,0,0.09615808725357056,0.016026347875595093,0,-0.021368462592363358,-0.042736925184726715,0,0.032052695751190186,0.008013173937797546,0,-0.010684231296181679,-0.03739481046795845,0,0.08547385036945343,0.02403952181339264,0,-0.021368462592363358,-0.016026347875595093,0,0,0.016026347875595093,0,0,-0.013355289585888386,0,0.05342115834355354,0.029381636530160904,0,-0.021368462592363358,0,0,0.032052695751190186,0.005342115648090839,0,-0.09615808725357056,-0.029381636530160904,0,0.010684231296181679,0,0,-0.021368462592363358,-0.010684231296181679,0,0,0.029381636530160904,0,-0.042736925184726715,-0.02403952181339264,0,0.08547385036945343,0.018697405233979225,0,-0.010684231296181679,-0.03472375497221947,0,0.021368462592363358,0.005342115648090839,0,-0.021368462592363358,-0.02403952181339264,0,0.010684231296181679,0.013355289585888386,0,0,-0.013355289585888386,0,0.010684231296181679,0.008013173937797546,0,-0.010684231296181679,-0.008013173937797546,0,0.4914746582508087,0.03472375497221947,0,-0.06410539150238037,-0.018697405233979225,0,0,0.010684231296181679,0,-0.021368462592363358,-0.021368462592363358,0,0.021368462592363358,0.005342115648090839,0,-0.010684231296181679,-0.016026347875595093,0,0.042736925184726715,0,0,-0.08547385036945343,-0.03472375497221947,0,0.06410539150238037,0.04807904362678528,0,-0.010684231296181679,-0.013355289585888386,0,0.021368462592363358,0.016026347875595093,0,-0.010684231296181679,-0.029381636530160904,0,0,0.04807904362678528,0,-0.010684231296181679,-0.016026347875595093,0,0,0.005342115648090839,0,-0.08547385036945343,-0.005342115648090839,0,0.010684231296181679,0.02671057917177677,0,-0.021368462592363358,-0.02671057917177677,0,0.010684231296181679,0.02403952181339264,0,-0.08547385036945343,-0.056092217564582825,0,0.021368462592363358,0.008013173937797546,0,-0.0747896209359169,-0.016026347875595093,0,0.032052695751190186,0.010684231296181679,0,-0.0747896209359169,-0.021368462592363358,0,0.010684231296181679,0.045407984405756,0,0,-0.018697405233979225,0,0.5448958277702332,0.010684231296181679,0,-0.021368462592363358,-0.013355289585888386,0,0.13889501988887787,0.008013173937797546,0,-0.010684231296181679,-0.010684231296181679,0,0,0.013355289585888386,0,-0.05342115834355354,-0.018697405233979225,0,0.032052695751190186,0.24840839207172394,0,0,-0.042736925184726715,0,0.021368462592363358,0.005342115648090839,0,-0.12821078300476074,-0.010684231296181679,0,0.032052695751190186,0.010684231296181679,0,-0.021368462592363358,-0.005342115648090839,0,0.032052695751190186,0.03739481046795845,0,0,-0.045407984405756,0,0.042736925184726715,0.03472375497221947,0,-0.010684231296181679,-0.013355289585888386,0,0.032052695751190186,0.010684231296181679,0,0,-0.013355289585888386,0,0,0,0,-0.010684231296181679,-0.010684231296181679,0,0,0.02403952181339264,0,-0.021368462592363358,-0.04807904362678528,0,0.09615808725357056,0.013355289585888386,0,-0.010684231296181679,-0.013355289585888386,0,0.010684231296181679,0.02671057917177677,0,-0.032052695751190186,-0.04807904362678528,0,0,0.010684231296181679,0,-0.010684231296181679,-0.03739481046795845,0,0.010684231296181679,0.029381636530160904,0,-0.05342115834355354,-0.042736925184726715,0,0.032052695751190186,0.013355289585888386,0,-0.032052695751190186,-0.02403952181339264,0,0.010684231296181679,0.27511897683143616,0,-0.05342115834355354,-0.016026347875595093,0,0.021368462592363358,0.06944750994443893,0,-0.021368462592363358,-0.016026347875595093,0,0.021368462592363358,0.021368462592363358,0,0,-0.029381636530160904,0,0,0.021368462592363358,0,-0.09615808725357056,-0.005342115648090839,0,0,0.013355289585888386,0,-0.010684231296181679,-0.06410539150238037,0,0,0.018697405233979225,0,-0.09615808725357056,-0.013355289585888386,0,0.021368462592363358,0.13889501988887787,0,-0.021368462592363358,-0.016026347875595093,0,0.021368462592363358,0.021368462592363358,0,-0.021368462592363358,-0.010684231296181679,0,0,0.021368462592363358,0,-0.06410539150238037,-0.0026710578240454197,0,0.032052695751190186,0.010684231296181679,0,-0.032052695751190186,-0.02671057917177677,0,0.010684231296181679,0.016026347875595093,0,-0.021368462592363358,-0.013355289585888386,0,0.042736925184726715,0.05342115834355354,0,0,-0.008013173937797546,0,0.010684231296181679,0.005342115648090839,0,-0.05342115834355354,-0.018697405233979225,0,0,0,0,-0.010684231296181679,-0.02671057917177677,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-249 -->\n*** test RAM and find RAM end\n.,FD50 A9 00    LDA #$00        clear A\n.,FD52 A8       TAY             clear index\n.,FD53 99 02 00 STA $0002,Y     clear page 0, don't do $0000 or $0001\n.,FD56 99 00 02 STA $0200,Y     clear page 2\n.,FD59 99 00 03 STA $0300,Y     clear page 3\n.,FD5C C8       INY             increment index\n.,FD5D D0 F4    BNE $FD53       loop if more to do\n.,FD5F A2 3C    LDX #$3C        set cassette buffer pointer low byte\n.,FD61 A0 03    LDY #$03        set cassette buffer pointer high byte\n.,FD63 86 B2    STX $B2         save tape buffer start pointer low byte\n.,FD65 84 B3    STY $B3         save tape buffer start pointer high byte\n.,FD67 A8       TAY             clear Y\n.,FD68 A9 03    LDA #$03        set RAM test pointer high byte\n.,FD6A 85 C2    STA $C2         save RAM test pointer high byte\n.,FD6C E6 C2    INC $C2         increment RAM test pointer high byte\n.,FD6E B1 C1    LDA ($C1),Y     \n.,FD70 AA       TAX             \n.,FD71 A9 55    LDA #$55        \n.,FD73 91 C1    STA ($C1),Y     \n.,FD75 D1 C1    CMP ($C1),Y     \n.,FD77 D0 0F    BNE $FD88       \n.,FD79 2A       ROL             \n.,FD7A 91 C1    STA ($C1),Y     \n.,FD7C D1 C1    CMP ($C1),Y     \n.,FD7E D0 08    BNE $FD88       \n.,FD80 8A       TXA             \n.,FD81 91 C1    STA ($C1),Y     \n.,FD83 C8       INY             \n.,FD84 D0 E8    BNE $FD6E       \n.,FD86 F0 E4    BEQ $FD6C       \n.,FD88 98       TYA             \n.,FD89 AA       TAX             \n.,FD8A A4 C2    LDY $C2         \n.,FD8C 18       CLC             \n.,FD8D 20 2D FE JSR $FE2D       set the top of memory\n.,FD90 A9 08    LDA #$08        \n.,FD92 8D 82 02 STA $0282       save the OS start of memory high byte\n.,FD95 A9 04    LDA #$04        \n.,FD97 8D 88 02 STA $0288       save the screen memory page\n.,FD9A 60       RTS","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-249"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0,0,0,0,0,0,0.014037247747182846,0,0,-0.028074495494365692,0,0.056148990988731384,0,0,0,0,0,0.2807449698448181,0.08422348648309708,0,0,-0.014037247747182846,0,0,0.056148990988731384,0,-0.056148990988731384,0,0,0,0.14037248492240906,0,0,-0.028074495494365692,0,0,0,0,-0.056148990988731384,0,0,0,0.014037247747182846,0,0,-0.014037247747182846,0,0.056148990988731384,0,0,0,-0.056148990988731384,0,0.056148990988731384,0.014037247747182846,0,0,-0.028074495494365692,0,0,0,0,0,0,0,0.056148990988731384,0,0,0,0,0,0,0.014037247747182846,0,0,0,0,0,0.014037247747182846,0,0,0,0,0,0,0,-0.056148990988731384,-0.11229798197746277,0,0,0.04211174324154854,0,-0.056148990988731384,-0.028074495494365692,0,0,0.014037247747182846,0,0,0,0,0.3368939459323883,0.014037247747182846,0,-0.11229798197746277,-0.014037247747182846,0,0,0.028074495494365692,0,0,0,0,0.056148990988731384,0.14037248492240906,0,0,0,0,0,0,0,0,-0.04211174324154854,0,0.3368939459323883,0,0,0,0,0,0.056148990988731384,0.014037247747182846,0,0,-0.028074495494365692,0,0,0.014037247747182846,0,0,0,0,0.056148990988731384,0.09826073795557022,0,0,-0.014037247747182846,0,0.2807449698448181,0.028074495494365692,0,0,0,0,0,0,0,0,0,0,0.16844697296619415,0.028074495494365692,0,0,-0.014037247747182846,0,0,0,0,-0.056148990988731384,-0.014037247747182846,0,0,0,0,0,0,0,0.056148990988731384,0,0,0,-0.028074495494365692,0,0,0,0,0,-0.028074495494365692,0,0.22459596395492554,0,0,-0.056148990988731384,0,0,0.11229798197746277,0.16844697296619415,0,0,-0.11229798197746277,0,0,0.014037247747182846,0,0,-0.014037247747182846,0,0,0.028074495494365692,0,0,0,0,0.056148990988731384,0,0,-0.056148990988731384,0,0,0,0.1824842244386673,0,-0.11229798197746277,0,0,0.056148990988731384,0.09826073795557022,0,0,0,0,0,0,0,0,-0.014037247747182846,0,0,0.028074495494365692,0,0,0,0,0.056148990988731384,0.14037248492240906,0,0,-0.014037247747182846,0,0.056148990988731384,0,0,0,0,0,0,0.09826073795557022,0,0,0,0,0.056148990988731384,0.014037247747182846,0,0,-0.028074495494365692,0,0.056148990988731384,0,0,0,0,0,0.056148990988731384,0.04211174324154854,0,-0.056148990988731384,0,0,0,0,0,0,0,0,0,0.11229798197746277,0,0,-0.028074495494365692,0,0,0.056148990988731384,0,-0.056148990988731384,-0.014037247747182846,0,0,0,0,0,-0.014037247747182846,0,0.056148990988731384,0,0,0,0,0,0.056148990988731384,0.11229798197746277,0,0,-0.056148990988731384,0,0.2807449698448181,0,0,-0.056148990988731384,-0.056148990988731384,0,0,0.04211174324154854,0,0,0,0,0,0,0,0,0,0,0,0.08422348648309708,0,-0.056148990988731384,0,0,0,0.04211174324154854,0,-0.056148990988731384,0,0,0,0.028074495494365692,0,0,0,0,0,0.014037247747182846,0,0,0,0,0,0.09826073795557022,0,0,0,0,0,0.028074495494365692,0,0,0,0,0,0.07018624246120453,0,-0.22459596395492554,-0.028074495494365692,0,0.056148990988731384,0,0,-0.056148990988731384,-0.014037247747182846,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-250 -->\n*** tape IRQ vectors\n.:FD9B 6A FC                    $08 write tape leader IRQ routine\n.:FD9D CD FB                    $0A tape write IRQ routine\n.:FD9F 31 EA                    $0C normal IRQ vector\n.:FDA1 2C F9                    $0E read tape bits IRQ routine","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-250"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0,0,0,-0.07415196299552917,0,0,0.005296568386256695,0,0,-0.04237254709005356,0,0.02118627354502678,0.01059313677251339,0,0,-0.07415196299552917,0,0.04237254709005356,0.11652451008558273,0,-0.04237254709005356,-0.01059313677251339,0,0.02118627354502678,0.005296568386256695,0,0,-0.02118627354502678,0,0,0.07944852858781815,0,-0.04237254709005356,0,0,0,0.02118627354502678,0,-0.06355882436037064,0,0,0,0.01059313677251339,0,0,-0.1218210756778717,0,0.02118627354502678,0.06355882436037064,0,0,-0.005296568386256695,0,0.08474509418010712,0.01059313677251339,0,-0.02118627354502678,-0.02118627354502678,0,0,0.01059313677251339,0,0,-0.01059313677251339,0,0.02118627354502678,0,0,0,0,0,0,0,0,-0.02118627354502678,-0.005296568386256695,0,0.1906764656305313,0.02118627354502678,0,0,0,0,0.08474509418010712,0,0,-0.12711764872074127,-0.11652451008558273,0,0.04237254709005356,0.02118627354502678,0,-0.04237254709005356,-0.02118627354502678,0,0.02118627354502678,0.005296568386256695,0,0,0,0,0.14830392599105835,0.005296568386256695,0,-0.1059313714504242,0,0,0,0.01588970609009266,0,0,0,0,0.02118627354502678,0.02118627354502678,0,-0.02118627354502678,-0.03707598149776459,0,0,0.01059313677251339,0,-0.04237254709005356,-0.01059313677251339,0,0.33898037672042847,0.005296568386256695,0,-0.06355882436037064,-0.0529656857252121,0,0,0.02648284286260605,0,-0.08474509418010712,-0.03177941218018532,0,0,0,0,-0.02118627354502678,-0.005296568386256695,0,0.02118627354502678,0.01059313677251339,0,-0.14830392599105835,0,0,0.12711764872074127,0.04237254709005356,0,-0.02118627354502678,-0.01059313677251339,0,0.04237254709005356,0.005296568386256695,0,0,-0.04237254709005356,0,0.02118627354502678,0.01059313677251339,0,0,0,0,0,0.005296568386256695,0,-0.06355882436037064,-0.02118627354502678,0,0,0.09533823281526566,0,-0.16949018836021423,0,0,0.02118627354502678,0.04237254709005356,0,-0.08474509418010712,-0.06355882436037064,0,0,0.02118627354502678,0,-0.04237254709005356,-0.02118627354502678,0,0.25423529744148254,0.02118627354502678,0,-0.04237254709005356,0,0,0.02118627354502678,0.07415196299552917,0,-0.04237254709005356,-0.10063480585813522,0,0.3177941143512726,0.005296568386256695,0,0,-0.005296568386256695,0,0.08474509418010712,0.01059313677251339,0,0,-0.01059313677251339,0,0,0,0,-0.14830392599105835,-0.02118627354502678,0,0.25423529744148254,0.1747867614030838,0,-0.02118627354502678,-0.03177941218018532,0,0,0.01059313677251339,0,0,-0.0529656857252121,0,0.04237254709005356,0.005296568386256695,0,-0.04237254709005356,-0.01059313677251339,0,0,0.01059313677251339,0,0,-0.08474509418010712,0,0,0.06355882436037064,0,-0.02118627354502678,-0.02648284286260605,0,0,0.02118627354502678,0,0,0,0,0,0.01588970609009266,0,-0.08474509418010712,0,0,0.04237254709005356,0.02118627354502678,0,-0.04237254709005356,-0.03707598149776459,0,0.02118627354502678,0,0,0,-0.08474509418010712,0,0.02118627354502678,0.01588970609009266,0,0,-0.04237254709005356,0,0.02118627354502678,0,0,0,-0.02648284286260605,0,0,0.1747867614030838,0,-0.06355882436037064,-0.02118627354502678,0,0,0.03177941218018532,0,-0.04237254709005356,-0.0529656857252121,0,0.02118627354502678,0.16949018836021423,0,-0.12711764872074127,-0.01059313677251339,0,0.1059313714504242,0.04766911640763283,0,0,0,0,0,0.03707598149776459,0,-0.02118627354502678,-0.10063480585813522,0,0,0.12711764872074127,0,0,-0.01059313677251339,0,0,0.005296568386256695,0,0,-0.005296568386256695,0,0.02118627354502678,0.02118627354502678,0,-0.16949018836021423,-0.03177941218018532,0,0,0.08474509418010712,0,0,-0.01588970609009266,0,0.02118627354502678,0,0,-0.04237254709005356,-0.03177941218018532,0,0,0,0,0,-0.005296568386256695,0,0,0.005296568386256695,0,0,-0.07944852858781815,0,0,0.0529656857252121,0,0,-0.02648284286260605,0,0.04237254709005356,0.02118627354502678,0,0,0,0,0,0.01588970609009266,0,-0.1906764656305313,0,0,0.02118627354502678,0.01059313677251339,0,-0.02118627354502678,-0.01588970609009266,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-253 -->\n*** read the top of memory\n.,FE27 AE 83 02 LDX $0283       get memory top low byte\n.,FE2A AC 84 02 LDY $0284       get memory top high byte\n\n*** set the top of memory\n.,FE2D 8E 83 02 STX $0283       set memory top low byte\n.,FE30 8C 84 02 STY $0284       set memory top high byte\n.,FE33 60       RTS\n\n*** read/set the bottom of memory, Cb = 1 to read, Cb = 0 to set\n.,FE34 90 06    BCC $FE3C       if Cb clear go set the bottom of memory\n.,FE36 AE 81 02 LDX $0281       get the OS start of memory low byte\n.,FE39 AC 82 02 LDY $0282       get the OS start of memory high byte\n.,FE3C 8E 81 02 STX $0281       save the OS start of memory low byte\n.,FE3F 8C 82 02 STY $0282       save the OS start of memory high byte\n.,FE42 60       RTS\n\n*** NMI vector\n.,FE43 78       SEI             disable the interrupts\n.,FE44 6C 18 03 JMP ($0318)     do NMI vector","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-253"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0,0.04655420780181885,0,0,-0.005476965568959713,0,0,0.07393903285264969,0,-0.043815724551677704,-0.030123310163617134,0,0.021907862275838852,0.010953931137919426,0,0,-0.07667751610279083,0,0.10953930765390396,0.016430895775556564,0,-0.010953931137919426,-0.008215447887778282,0,0.03286179155111313,0.008215447887778282,0,0,-0.013692413456737995,0,0.010953931137919426,0.10953930765390396,0,-0.03286179155111313,-0.08489296585321426,0,0.021907862275838852,0.038338758051395416,0,-0.010953931137919426,-0.0027384827844798565,0,0,0.021907862275838852,0,-0.021907862275838852,-0.10680082440376282,0,0.15335503220558167,0.0027384827844798565,0,0,-0.013692413456737995,0,0.15335503220558167,0.08489296585321426,0,0,-0.016430895775556564,0,0.010953931137919426,0,0,0,-0.043815724551677704,0,0.05476965382695198,0.0027384827844798565,0,-0.05476965382695198,-0.013692413456737995,0,0,0.03286179155111313,0,-0.010953931137919426,-0.005476965568959713,0,0.08763144910335541,0.008215447887778282,0,0,-0.0027384827844798565,0,0.010953931137919426,0.019169379025697708,0,-0.09858537465333939,-0.024646343663334846,0,0.021907862275838852,0.010953931137919426,0,-0.021907862275838852,-0.008215447887778282,0,0,0.0027384827844798565,0,0,0,0,0.09858537465333939,0,0,-0.07667751610279083,-0.024646343663334846,0,0,0.013692413456737995,0,0,-0.0027384827844798565,0,0.1862168312072754,0.057508137077093124,0,-0.010953931137919426,-0.008215447887778282,0,0.010953931137919426,0.05203117057681084,0,-0.010953931137919426,-0.005476965568959713,0,0.42720329761505127,0.005476965568959713,0,-0.05476965382695198,-0.05476965382695198,0,0,0.013692413456737995,0,0,-0.008215447887778282,0,0.03286179155111313,0.0027384827844798565,0,-0.03286179155111313,-0.010953931137919426,0,0.021907862275838852,0.07941599935293198,0,-0.09858537465333939,-0.038338758051395416,0,0.06572358310222626,0.07667751610279083,0,-0.021907862275838852,0,0,0,0.013692413456737995,0,-0.03286179155111313,-0.04655420780181885,0,0,0.02738482691347599,0,-0.021907862275838852,-0.02738482691347599,0,0,0.04107724130153656,0,0,-0.013692413456737995,0,0.16430896520614624,0.043815724551677704,0,0,-0.019169379025697708,0,0.010953931137919426,0.005476965568959713,0,-0.07667751610279083,-0.04929268732666969,0,0.043815724551677704,0.024646343663334846,0,0,-0.013692413456737995,0,0.043815724551677704,0.0027384827844798565,0,-0.010953931137919426,0,0,0.010953931137919426,0.05476965382695198,0,-0.05476965382695198,-0.04929268732666969,0,0.4162493646144867,0.005476965568959713,0,-0.03286179155111313,-0.0027384827844798565,0,0.15335503220558167,0.0931084156036377,0,-0.010953931137919426,-0.005476965568959713,0,0.021907862275838852,0.005476965568959713,0,-0.05476965382695198,-0.016430895775556564,0,0.010953931137919426,0.21907861530780792,0,-0.05476965382695198,-0.02738482691347599,0,0.010953931137919426,0.02738482691347599,0,0,-0.0027384827844798565,0,0,0.024646343663334846,0,-0.021907862275838852,-0.016430895775556564,0,0.010953931137919426,0.013692413456737995,0,-0.05476965382695198,-0.057508137077093124,0,0.021907862275838852,0.038338758051395416,0,0,-0.013692413456737995,0,0.010953931137919426,0,0,-0.010953931137919426,-0.021907862275838852,0,0.03286179155111313,0.038338758051395416,0,-0.010953931137919426,-0.010953931137919426,0,0,0.038338758051395416,0,-0.010953931137919426,0,0,0.010953931137919426,0.08489296585321426,0,0,0,0,0,0.019169379025697708,0,-0.010953931137919426,-0.05203117057681084,0,0.010953931137919426,0.021907862275838852,0,-0.010953931137919426,-0.0027384827844798565,0,0.010953931137919426,0.043815724551677704,0,-0.010953931137919426,-0.005476965568959713,0,0.1424010992050171,0.008215447887778282,0,-0.021907862275838852,-0.05203117057681084,0,0,0.21360164880752563,0,-0.15335503220558167,-0.021907862275838852,0,0.010953931137919426,0.07667751610279083,0,-0.010953931137919426,-0.005476965568959713,0,0.010953931137919426,0.03560027480125427,0,0,-0.04655420780181885,0,0.010953931137919426,0.005476965568959713,0,-0.15335503220558167,-0.02738482691347599,0,0,0.05203117057681084,0,0,-0.0027384827844798565,0,0.03286179155111313,0.0027384827844798565,0,-0.1862168312072754,-0.013692413456737995,0,0,0.1122777909040451,0,0,-0.04107724130153656,0,0.16430896520614624,0.010953931137919426,0,-0.03286179155111313,0,0,0,0.013692413456737995,0,-0.07667751610279083,-0.013692413456737995,0,0,0.021907862275838852,0,0,-0.030123310163617134,0,0.05476965382695198,0.016430895775556564,0,-0.010953931137919426,-0.010953931137919426,0,0.010953931137919426,0.005476965568959713,0,0,-0.008215447887778282,0,0.021907862275838852,0,0,-0.043815724551677704,-0.010953931137919426,0,0.021907862275838852,0.005476965568959713,0,-0.010953931137919426,-0.005476965568959713,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-257 -->\n*** ??\n.,FED6 AD 01 DD LDA $DD01       read VIA 2 DRB, RS232 port\n.,FED9 29 01    AND #$01        mask 0000 000x, RS232 Rx DATA\n.,FEDB 85 A7    STA $A7         save the RS232 received data bit\n.,FEDD AD 06 DD LDA $DD06       get VIA 2 timer B low byte\n.,FEE0 E9 1C    SBC #$1C        \n.,FEE2 6D 99 02 ADC $0299       \n.,FEE5 8D 06 DD STA $DD06       save VIA 2 timer B low byte\n.,FEE8 AD 07 DD LDA $DD07       get VIA 2 timer B high byte\n.,FEEB 6D 9A 02 ADC $029A       \n.,FEEE 8D 07 DD STA $DD07       save VIA 2 timer B high byte\n.,FEF1 A9 11    LDA #$11        set timer B single shot, start timer B\n.,FEF3 8D 0F DD STA $DD0F       save VIA 2 CRB\n.,FEF6 AD A1 02 LDA $02A1       get the RS-232 interrupt enable byte\n.,FEF9 8D 0D DD STA $DD0D       save VIA 2 ICR\n.,FEFC A9 FF    LDA #$FF        \n.,FEFE 8D 06 DD STA $DD06       save VIA 2 timer B low byte\n.,FF01 8D 07 DD STA $DD07       save VIA 2 timer B high byte\n.,FF04 4C 59 EF JMP $EF59       \n.,FF07 AD 95 02 LDA $0295       nonstandard bit timing low byte\n.,FF0A 8D 06 DD STA $DD06       save VIA 2 timer B low byte\n.,FF0D AD 96 02 LDA $0296       nonstandard bit timing high byte\n.,FF10 8D 07 DD STA $DD07       save VIA 2 timer B high byte\n.,FF13 A9 11    LDA #$11        set timer B single shot, start timer B\n.,FF15 8D 0F DD STA $DD0F       save VIA 2 CRB\n.,FF18 A9 12    LDA #$12        \n.,FF1A 4D A1 02 EOR $02A1       EOR with the RS-232 interrupt enable byte\n.,FF1D 8D A1 02 STA $02A1       save the RS-232 interrupt enable byte\n.,FF20 A9 FF    LDA #$FF        \n.,FF22 8D 06 DD STA $DD06       save VIA 2 timer B low byte\n.,FF25 8D 07 DD STA $DD07       save VIA 2 timer B high byte\n.,FF28 AE 98 02 LDX $0298       \n.,FF2B 86 A8    STX $A8         \n.,FF2D 60       RTS","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-257"},{"name":"github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","language":"asm","vector":[0.014620953239500523,0,0,0,-0.014620953239500523,0,0,0.051173336803913116,0,0,-0.007310476619750261,0,0.029241906479001045,0.007310476619750261,0,-0.04386286064982414,-0.02193143032491207,0,0.014620953239500523,0.05482857674360275,0,-0.014620953239500523,-0.018276192247867584,0,0.014620953239500523,0.025586668401956558,0,-0.014620953239500523,-0.007310476619750261,0,0.014620953239500523,0.1681409627199173,0,0,-0.025586668401956558,0,0,0.018276192247867584,0,0,-0.03289714455604553,0,0,0.014620953239500523,0,-0.014620953239500523,-0.04386286064982414,0,0,0.007310476619750261,0,-0.014620953239500523,0,0,0.13158857822418213,0.04751809686422348,0,-0.029241906479001045,-0.02193143032491207,0,0,0.014620953239500523,0,-0.014620953239500523,-0.010965715162456036,0,0.014620953239500523,0.0036552383098751307,0,-0.029241906479001045,-0.0036552383098751307,0,0,0.0036552383098751307,0,0,-0.014620953239500523,0,0.05848381295800209,0.014620953239500523,0,-0.029241906479001045,-0.007310476619750261,0,0.029241906479001045,0.007310476619750261,0,-0.08772572129964828,-0.04751809686422348,0,0,0.010965715162456036,0,-0.029241906479001045,-0.029241906479001045,0,0,0.029241906479001045,0,-0.014620953239500523,0,0,0.14620953798294067,0.0036552383098751307,0,-0.05848381295800209,-0.014620953239500523,0,0.014620953239500523,0.014620953239500523,0,-0.05848381295800209,-0.02193143032491207,0,0.014620953239500523,0.007310476619750261,0,-0.014620953239500523,-0.014620953239500523,0,0,0.025586668401956558,0,0,-0.007310476619750261,0,0.4971124231815338,0.007310476619750261,0,-0.05848381295800209,-0.010965715162456036,0,0.014620953239500523,0.0036552383098751307,0,0,-0.007310476619750261,0,0.029241906479001045,0.010965715162456036,0,0,-0.007310476619750261,0,0.014620953239500523,0.02193143032491207,0,-0.04386286064982414,-0.014620953239500523,0,0.13158857822418213,0.0694495290517807,0,-0.029241906479001045,-0.029241906479001045,0,0.14620953798294067,0.007310476619750261,0,0,-0.025586668401956558,0,0.014620953239500523,0.010965715162456036,0,-0.014620953239500523,-0.014620953239500523,0,0.04386286064982414,0.02193143032491207,0,-0.029241906479001045,-0.007310476619750261,0,0,0.03655238449573517,0,0,-0.014620953239500523,0,0.05848381295800209,0.014620953239500523,0,-0.029241906479001045,-0.04386286064982414,0,0.029241906479001045,0,0,0,-0.02193143032491207,0,0.19007238745689392,0.007310476619750261,0,-0.014620953239500523,-0.010965715162456036,0,0.014620953239500523,0.07310476899147034,0,-0.029241906479001045,-0.051173336803913116,0,0.4971124231815338,0.007310476619750261,0,-0.04386286064982414,-0.03289714455604553,0,0.04386286064982414,0.010965715162456036,0,-0.014620953239500523,-0.007310476619750261,0,0,0,0,-0.029241906479001045,0,0,0,0.255866676568985,0,0,-0.040207620710134506,0,0.014620953239500523,0.010965715162456036,0,-0.029241906479001045,-0.0036552383098751307,0,0,0.018276192247867584,0,-0.04386286064982414,-0.0036552383098751307,0,0.014620953239500523,0.010965715162456036,0,-0.014620953239500523,-0.02193143032491207,0,0.014620953239500523,0.06579428911209106,0,0,-0.014620953239500523,0,0,0.07310476899147034,0,0,-0.0036552383098751307,0,0.029241906479001045,0.007310476619750261,0,-0.014620953239500523,-0.010965715162456036,0,0.04386286064982414,0.05482857674360275,0,-0.08772572129964828,-0.02193143032491207,0,0.08772572129964828,0,0,0,-0.0036552383098751307,0,0.014620953239500523,0.03289714455604553,0,-0.05848381295800209,-0.02193143032491207,0,0,0.014620953239500523,0,0,0,0,0,0.1096571534872055,0,-0.029241906479001045,-0.014620953239500523,0,0.07310476899147034,0.014620953239500523,0,0,-0.03655238449573517,0,0,0.2485562115907669,0,-0.04386286064982414,-0.029241906479001045,0,0.014620953239500523,0.02193143032491207,0,-0.029241906479001045,-0.010965715162456036,0,0.04386286064982414,0.03655238449573517,0,0,-0.029241906479001045,0,0.08772572129964828,0.0036552383098751307,0,-0.029241906479001045,-0.014620953239500523,0,0.014620953239500523,0.010965715162456036,0,-0.05848381295800209,-0.018276192247867584,0,0.029241906479001045,0,0,-0.07310476899147034,-0.02193143032491207,0,0.014620953239500523,0.13158857822418213,0,0,-0.02193143032491207,0,0.08772572129964828,0.010965715162456036,0,-0.029241906479001045,0,0,0.029241906479001045,0.007310476619750261,0,0,0,0,0,0.018276192247867584,0,0,-0.018276192247867584,0,0,0.05482857674360275,0,-0.029241906479001045,-0.051173336803913116,0,0.029241906479001045,0.08041524142026901,0,-0.014620953239500523,0,0,0,0.010965715162456036,0,-0.08772572129964828,-0.03289714455604553,0,0,0.010965715162456036,0,-0.014620953239500523,-0.007310476619750261,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-258 -->\n*** ??\n.,FF2E AA       TAX             \n.,FF2F AD 96 02 LDA $0296       nonstandard bit timing high byte\n.,FF32 2A       ROL             \n.,FF33 A8       TAY             \n.,FF34 8A       TXA             \n.,FF35 69 C8    ADC #$C8        \n.,FF37 8D 99 02 STA $0299       \n.,FF3A 98       TYA             \n.,FF3B 69 00    ADC #$00        add any carry\n.,FF3D 8D 9A 02 STA $029A       \n.,FF40 60       RTS\n\n*** unused bytes\n.,FF41 EA       NOP             waste cycles\n.,FF42 EA       NOP             waste cycles\n\n*** save the status and do the IRQ routine\n.,FF43 08       PHP             save the processor status\n.,FF44 68       PLA             pull the processor status\n.,FF45 29 EF    AND #$EF        mask xxx0 xxxx, clear the break bit\n.,FF47 48       PHA             save the modified processor status\n\n*** IRQ vector\n.,FF48 48       PHA             save A\n.,FF49 8A       TXA             copy X\n.,FF4A 48       PHA             save X\n.,FF4B 98       TYA             copy Y\n.,FF4C 48       PHA             save Y\n.,FF4D BA       TSX             copy stack pointer\n.,FF4E BD 04 01 LDA $0104,X     get stacked status register\n.,FF51 29 10    AND #$10        mask BRK flag\n.,FF53 F0 03    BEQ $FF58       branch if not BRK\n.,FF55 6C 16 03 JMP ($0316)     else do BRK vector (iBRK)\n.,FF58 6C 14 03 JMP ($0314)     do IRQ vector (iIRQ)","sourcePath":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64disasm_en.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64disasm/c64disasm_en.txt#Page-1-258"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0,0.0053025223314762115,0,0,-0.07953783124685287,0,0.021210089325904846,0.0053025223314762115,0,-0.06363026797771454,-0.0053025223314762115,0,0.06363026797771454,0.05832774192094803,0,-0.08484035730361938,-0.02651260979473591,0,0.08484035730361938,0.010605044662952423,0,-0.021210089325904846,-0.03181513398885727,0,0,0.0053025223314762115,0,0,0,0,0,0.03181513398885727,0,0,-0.03181513398885727,0,0.06363026797771454,0.05302521958947182,0,0,-0.08484035730361938,0,0.08484035730361938,0.04242017865180969,0,0,-0.05832774192094803,0,0.021210089325904846,0.0053025223314762115,0,-0.06363026797771454,-0.010605044662952423,0,0.06363026797771454,0.010605044662952423,0,-0.06363026797771454,-0.03181513398885727,0,0,0.010605044662952423,0,0,-0.03181513398885727,0,0.021210089325904846,0.010605044662952423,0,0,-0.02651260979473591,0,0,0.010605044662952423,0,0,-0.05832774192094803,0,0.10605043917894363,0.03711765632033348,0,-0.10605043917894363,0,0,0.08484035730361938,0.010605044662952423,0,-0.16968071460723877,-0.21210087835788727,0,0,0.04242017865180969,0,-0.04242017865180969,-0.04242017865180969,0,0.06363026797771454,0.0053025223314762115,0,0,-0.010605044662952423,0,0.16968071460723877,0.010605044662952423,0,-0.08484035730361938,-0.03711765632033348,0,0.021210089325904846,0.047722697257995605,0,-0.021210089325904846,-0.05302521958947182,0,0.021210089325904846,0.04242017865180969,0,0,-0.021210089325904846,0,0,0,0,0,0,0,0.19089078903198242,0.0053025223314762115,0,-0.16968071460723877,0,0,0,0.03711765632033348,0,-0.021210089325904846,-0.015907566994428635,0,0.021210089325904846,0.04242017865180969,0,0,0,0,0.021210089325904846,0.010605044662952423,0,0,-0.03711765632033348,0,0.19089078903198242,0.05832774192094803,0,0,-0.07423531264066696,0,0,0.021210089325904846,0,-0.021210089325904846,0,0,0,0.010605044662952423,0,-0.021210089325904846,-0.0053025223314762115,0,0,0.0053025223314762115,0,-0.021210089325904846,-0.010605044662952423,0,0.021210089325904846,0.05832774192094803,0,-0.23331096768379211,-0.06363026797771454,0,0.021210089325904846,0.047722697257995605,0,-0.021210089325904846,-0.09544539451599121,0,0.19089078903198242,0,0,-0.10605043917894363,-0.04242017865180969,0,0,0.047722697257995605,0,0,0,0,0.021210089325904846,0.08484035730361938,0,0,-0.14847062528133392,0,0.12726053595542908,0.02651260979473591,0,-0.08484035730361938,-0.03181513398885727,0,0,0.010605044662952423,0,0,0,0,0,0.0053025223314762115,0,-0.23331096768379211,-0.015907566994428635,0,0.021210089325904846,0.11135296523571014,0,0,-0.10605043917894363,0,0,0.021210089325904846,0,-0.04242017865180969,-0.015907566994428635,0,0,0.010605044662952423,0,-0.04242017865180969,0,0,0,0.010605044662952423,0,-0.021210089325904846,0,0,0.04242017865180969,0.11135296523571014,0,-0.06363026797771454,0,0,0.021210089325904846,0.021210089325904846,0,0,-0.010605044662952423,0,0.04242017865180969,0.0053025223314762115,0,0,-0.02651260979473591,0,0.04242017865180969,0.015907566994428635,0,0,-0.02651260979473591,0,0.021210089325904846,0.010605044662952423,0,-0.04242017865180969,-0.11665548384189606,0,0,0.015907566994428635,0,-0.021210089325904846,-0.010605044662952423,0,0.06363026797771454,0.09544539451599121,0,-0.04242017865180969,-0.05302521958947182,0,0,0.02651260979473591,0,-0.04242017865180969,-0.02651260979473591,0,0,0.03181513398885727,0,0,-0.04242017865180969,0,0.021210089325904846,0.06363026797771454,0,0,-0.05302521958947182,0,0.021210089325904846,0.015907566994428635,0,-0.06363026797771454,0,0,0,0.04242017865180969,0,0,-0.1378655731678009,0,0,0.015907566994428635,0,-0.021210089325904846,-0.0053025223314762115,0,0.10605043917894363,0.0053025223314762115,0,-0.16968071460723877,-0.021210089325904846,0,0.08484035730361938,0,0,0,-0.021210089325904846,0,0,0.047722697257995605,0,-0.021210089325904846,-0.05302521958947182,0,0.021210089325904846,0.021210089325904846,0,-0.04242017865180969,-0.03711765632033348,0,0.021210089325904846,0.015907566994428635,0,-0.04242017865180969,0,0,0.021210089325904846,0.02651260979473591,0,-0.04242017865180969,0,0,0,0.06893278658390045,0,-0.08484035730361938,0,0,0.06363026797771454,0.010605044662952423,0,0,-0.02651260979473591,0,0,0,0,-0.42420175671577454,-0.015907566994428635,0,0.06363026797771454,0.03181513398885727,0,-0.08484035730361938,-0.02651260979473591,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#Page-1-2 -->\nThe most familiar type of graphics display is the ordinary text that\n                          appears when you turn the machine on.  The area of RAM which is\n                          displayed on the screen is determined by the Video Matrix Base Address\n                          Nybble of the VIC-II Memory Control Register (53272, $D018).  The\n                          address of the dot-data which is used to assign a shape to each text\n                          character based on an 8 by 8 matrix of lit or unlit dots is determined\n                          by the other half of the Memory Control Register at 53272 ($D018).\n                          More information on how the data is used to represent the character\n                          shapes may be found at the alternate entry for 49152 ($C000), the\n                          Character Generator ROM.\n\nText character graphics may employ one of the two sets of text and\n                          graphics characters in the Character Generator ROM, or the user may\n                          substitute a completely different set of graphics or text characters\n                          in RAM.\n\nNormally, the text graphics screen uses a background color which is\n                          common to all text characters, and that value is stored in Background\n                          Color Register 0 (53281, $D021).  The color of the frame around the\n                          screen is determined by the Border Color Register at 53280 ($D020).","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#Page-1-2"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0,0.026295563206076622,0,0,-0.1227126270532608,0,0,0.004382594022899866,0,-0.03506075218319893,0,0,0.03506075218319893,0.026295563206076622,0,0,-0.021912969648838043,0,0.03506075218319893,0.0613563135266304,0,-0.07012150436639786,-0.026295563206076622,0,0,0.004382594022899866,0,0,0,0,0,0.06573890894651413,0,0,-0.026295563206076622,0,0,0,0,-0.017530376091599464,-0.013147781603038311,0,0.017530376091599464,0.017530376091599464,0,0,-0.026295563206076622,0,0,0.004382594022899866,0,-0.017530376091599464,-0.026295563206076622,0,0.28048601746559143,0.026295563206076622,0,-0.017530376091599464,-0.12709522247314453,0,0.017530376091599464,0.008765188045799732,0,-0.017530376091599464,-0.008765188045799732,0,0.07012150436639786,0.013147781603038311,0,-0.07012150436639786,-0.013147781603038311,0,0.017530376091599464,0.008765188045799732,0,-0.017530376091599464,-0.048208534717559814,0,0,0.008765188045799732,0,-0.14024300873279572,-0.008765188045799732,0,0.017530376091599464,0,0,-0.14024300873279572,-0.1665385663509369,0,0,0.043825939297676086,0,-0.03506075218319893,-0.048208534717559814,0,0.017530376091599464,0,0,0,-0.008765188045799732,0,0.10518225282430649,0.004382594022899866,0,-0.1227126270532608,-0.017530376091599464,0,0.08765187859535217,0.017530376091599464,0,0,-0.004382594022899866,0,0.017530376091599464,0.026295563206076622,0,0,-0.048208534717559814,0,0,0,0,-0.07012150436639786,0,0,0.17530375719070435,0.013147781603038311,0,-0.017530376091599464,0,0,0.03506075218319893,0.0306781567633152,0,-0.017530376091599464,-0.021912969648838043,0,0.15777337551116943,0.008765188045799732,0,-0.017530376091599464,0,0,0,0.008765188045799732,0,0,-0.013147781603038311,0,0.14024300873279572,0.14024300873279572,0,-0.07012150436639786,-0.013147781603038311,0,0,0.017530376091599464,0,0,-0.013147781603038311,0,0,0.03506075218319893,0,0,-0.048208534717559814,0,0.017530376091599464,0.008765188045799732,0,0,-0.052591126412153244,0,0.03506075218319893,0.004382594022899866,0,-0.3856682777404785,-0.07012150436639786,0,0.017530376091599464,0.008765188045799732,0,0,-0.07450409978628159,0,0,0.004382594022899866,0,-0.08765187859535217,-0.0306781567633152,0,0,0.013147781603038311,0,0,-0.004382594022899866,0,0.017530376091599464,0.052591126412153244,0,0,-0.14462560415267944,0,0.19283413887023926,0.048208534717559814,0,-0.07012150436639786,-0.021912969648838043,0,0,0.008765188045799732,0,-0.017530376091599464,0,0,0,0,0,-0.07012150436639786,-0.043825939297676086,0,0.017530376091599464,0.09641706943511963,0,0,-0.008765188045799732,0,0.10518225282430649,0.026295563206076622,0,-0.15777337551116943,-0.026295563206076622,0,0,0.07888668775558472,0,-0.03506075218319893,-0.008765188045799732,0,0.052591126412153244,0,0,-0.017530376091599464,0,0,0,0.07012150436639786,0,-0.08765187859535217,-0.03944334387779236,0,0,0.004382594022899866,0,0,0,0,0,0,0,0,-0.004382594022899866,0,0.14024300873279572,0.07888668775558472,0,-0.017530376091599464,-0.004382594022899866,0,0,0.021912969648838043,0,-0.03506075218319893,-0.19721673429012299,0,0.017530376091599464,0.026295563206076622,0,0,-0.017530376091599464,0,0,0.004382594022899866,0,-0.017530376091599464,-0.048208534717559814,0,0.03506075218319893,0,0,-0.052591126412153244,-0.03506075218319893,0,0,0.013147781603038311,0,0,-0.03506075218319893,0,0.052591126412153244,0.09641706943511963,0,0,-0.043825939297676086,0,0.1227126270532608,0.004382594022899866,0,-0.052591126412153244,-0.008765188045799732,0,0,0.026295563206076622,0,0,-0.06573890894651413,0,0.03506075218319893,0.0306781567633152,0,-0.017530376091599464,0,0,0,0.05697372183203697,0,-0.017530376091599464,-0.07888668775558472,0,0.03506075218319893,0,0,-0.017530376091599464,-0.03506075218319893,0,0,0.07012150436639786,0,-0.052591126412153244,-0.013147781603038311,0,0,0.008765188045799732,0,-0.17530375719070435,-0.048208534717559814,0,0.017530376091599464,0.03944334387779236,0,0,-0.004382594022899866,0,0,0,0,-0.017530376091599464,0,0,0.017530376091599464,0.10518225282430649,0,-0.052591126412153244,-0.026295563206076622,0,0.017530376091599464,0,0,-0.017530376091599464,-0.017530376091599464,0,0,0.008765188045799732,0,-0.3330771327018738,0,0,0.017530376091599464,0.004382594022899866,0,-0.08765187859535217,-0.008765188045799732,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#Page-1-8 -->\nThe dot patterns of each sprite correspond to the bit patterns of the\n                          sprite shape data.  Each byte of shape data in memory consists of a\n                          number from 0 to 255.  This number can be represented by eight binary\n                          digits of 0 or 1.\n\nEach binary digit has a bit value that is two times greater than the\n                          last.  If the digit in the zero bit place is a 1, it has a value of 1\n                          (we count bit places from 0 to 7).  A 1 in the first bit place has a\n                          value of 2, the second bit has a value of 4, the third has a value of\n                          8, the fourth has a value of 16, the fifth a value of 32, the sixth a\n                          value of 64, and the seventh a value of 128.\n\nBy making all of the possible combinations of 0's and 1's in all eight\n                          bit places, and adding the bit values of every bit place that contains\n                          a 1, we can represent every number from 0 to 255 as a series of 1's\n                          and 0's.\n\nIf you think of every 0 as a dot having the same color as the\n                          background, and every 1 as a dot which is the color of the sprite, you\n                          can see how a series of bytes could be used to represent the sprite\n                          shape.","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#Page-1-8"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0,0,0,0,-0.0669117122888565,0,0.20588219165802002,0.0360293835401535,0,-0.020588219165802002,-0.0051470547914505005,0,0.08235287666320801,0.030882328748703003,0,-0.020588219165802002,-0.046323493123054504,0,0.020588219165802002,0.010294109582901001,0,-0.12352931499481201,-0.061764657497406006,0,0,0.010294109582901001,0,0,-0.0051470547914505005,0,0,0.041176438331604004,0,-0.020588219165802002,-0.041176438331604004,0,0,0.010294109582901001,0,-0.020588219165802002,0,0,0.041176438331604004,0.010294109582901001,0,-0.020588219165802002,-0.046323493123054504,0,0,0.010294109582901001,0,-0.10294109582901001,-0.010294109582901001,0,0.041176438331604004,0.010294109582901001,0,-0.041176438331604004,-0.015441164374351501,0,0,0.010294109582901001,0,-0.020588219165802002,-0.015441164374351501,0,0.041176438331604004,0.015441164374351501,0,-0.020588219165802002,-0.025735273957252502,0,0.020588219165802002,0,0,0,-0.030882328748703003,0,0,0.025735273957252502,0,-0.18529397249221802,0,0,0.041176438331604004,0.015441164374351501,0,-0.10294109582901001,-0.21617630124092102,0,0,0.010294109582901001,0,-0.041176438331604004,-0.051470547914505005,0,0.020588219165802002,0.0051470547914505005,0,0,-0.010294109582901001,0,0.20588219165802002,0.10808815062046051,0,-0.020588219165802002,-0.020588219165802002,0,0.020588219165802002,0.041176438331604004,0,-0.041176438331604004,-0.020588219165802002,0,0.061764657497406006,0.010294109582901001,0,0,-0.0669117122888565,0,0,0.010294109582901001,0,0,0,0,0.267646849155426,0.010294109582901001,0,-0.10294109582901001,-0.025735273957252502,0,0.020588219165802002,0.0051470547914505005,0,0,-0.041176438331604004,0,0,0.020588219165802002,0,-0.020588219165802002,-0.010294109582901001,0,0,0,0,0,-0.056617602705955505,0,0.10294109582901001,0.025735273957252502,0,-0.20588219165802002,-0.020588219165802002,0,0.020588219165802002,0.0051470547914505005,0,0,-0.010294109582901001,0,0,0.020588219165802002,0,0,-0.010294109582901001,0,0,0.010294109582901001,0,-0.061764657497406006,-0.0051470547914505005,0,0,0.0051470547914505005,0,-0.22647041082382202,-0.09779404103755951,0,0.061764657497406006,0.025735273957252502,0,-0.020588219165802002,-0.056617602705955505,0,0.041176438331604004,0,0,-0.061764657497406006,-0.030882328748703003,0,0,0.020588219165802002,0,0,0,0,0.041176438331604004,0.10294109582901001,0,-0.020588219165802002,-0.11838226020336151,0,0.16470575332641602,0.015441164374351501,0,-0.12352931499481201,-0.025735273957252502,0,0,0.030882328748703003,0,0,0,0,0,0.051470547914505005,0,-0.18529397249221802,-0.0051470547914505005,0,0.041176438331604004,0.15441164374351501,0,-0.041176438331604004,-0.056617602705955505,0,0.041176438331604004,0.015441164374351501,0,-0.020588219165802002,-0.030882328748703003,0,0,0,0,-0.020588219165802002,-0.010294109582901001,0,0.020588219165802002,0,0,-0.061764657497406006,-0.0051470547914505005,0,0,0.051470547914505005,0,-0.041176438331604004,-0.10808815062046051,0,0.020588219165802002,0.020588219165802002,0,0,-0.0051470547914505005,0,0.061764657497406006,0,0,0,-0.025735273957252502,0,0,0.010294109582901001,0,-0.16470575332641602,-0.041176438331604004,0,0.020588219165802002,0,0,-0.041176438331604004,-0.11838226020336151,0,0.020588219165802002,0.041176438331604004,0,-0.041176438331604004,-0.015441164374351501,0,0,0.025735273957252502,0,-0.041176438331604004,-0.030882328748703003,0,0,0,0,-0.020588219165802002,-0.046323493123054504,0,0.041176438331604004,0.030882328748703003,0,0,-0.0360293835401535,0,0.041176438331604004,0.08235287666320801,0,-0.061764657497406006,-0.072058767080307,0,0.020588219165802002,0.0051470547914505005,0,-0.12352931499481201,0,0,0,0.051470547914505005,0,0,-0.09779404103755951,0,0,0.025735273957252502,0,-0.020588219165802002,-0.030882328748703003,0,0.020588219165802002,0.0360293835401535,0,0,-0.010294109582901001,0,0.020588219165802002,0,0,0,-0.010294109582901001,0,0,0.07720582187175751,0,0,-0.056617602705955505,0,0,0.0051470547914505005,0,-0.020588219165802002,-0.020588219165802002,0,0.020588219165802002,0.010294109582901001,0,-0.020588219165802002,-0.0051470547914505005,0,0.020588219165802002,0.030882328748703003,0,-0.020588219165802002,0,0,0,0.025735273957252502,0,-0.041176438331604004,-0.133823424577713,0,0.041176438331604004,0.015441164374351501,0,0,-0.020588219165802002,0,0,0.010294109582901001,0,-0.43235260248184204,-0.020588219165802002,0,0.020588219165802002,0,0,-0.020588219165802002,-0.0360293835401535,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#Page-1-13 -->\nThese locations determine the horizontal and vertical position at\n                          which each sprite will be displayed on the screen.  Each sprite has\n                          its own horizontal and vertical position register.  In addition, all\n                          of the sprites share a common register which is used to extend the\n                          range of horizontal positions.\n\nVertical positions for each sprite range from 0 to 255, and these\n                          indicate the vertical position of the top line of the sprite's 21-line\n                          length.  Since there are only 200 visible scan lines in the screen\n                          display, some of these vertical positions will result in the sprite\n                          being partially or wholly offscreen.\n\nThe visible viewing area starts at line 50 and extends to line 249.\n                          Therefore, any sprite whose vertical position is 29 ($1D) or less will\n                          be completely above the visible picture.  At vertical position 30\n                          ($1E), the bottom line of the sprite display becomes visible at the\n                          top of the screen.  At position 230 ($E6), the bottom line of the\n                          sprite is lost from view off the bottom of the screen, and at vertical\n                          position 250 ($FA), the entire sprite disappears from view off the\n                          bottom edge of the screen.","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#Page-1-13"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0,0.010666552931070328,0,-0.021333105862140656,-0.037332933396101,0,0,0.02666638232767582,0,-0.04266621172428131,-0.010666552931070328,0,0.10666552931070328,0,0,-0.06399931758642197,-0.03199965879321098,0,0.04266621172428131,0.047999486327171326,0,-0.021333105862140656,-0.047999486327171326,0,0,0.01599982939660549,0,-0.021333105862140656,-0.03199965879321098,0,0.04266621172428131,0.021333105862140656,0,0,0,0,0.021333105862140656,0.01599982939660549,0,-0.04266621172428131,-0.010666552931070328,0,0.08533242344856262,0,0,-0.06399931758642197,-0.06399931758642197,0,0,0.005333276465535164,0,-0.08533242344856262,-0.14399845898151398,0,0.04266621172428131,0.005333276465535164,0,0,-0.05866603925824165,0,0,0.021333105862140656,0,-0.04266621172428131,-0.010666552931070328,0,0.04266621172428131,0,0,-0.021333105862140656,-0.04266621172428131,0,0,0.005333276465535164,0,0,0,0,0.021333105862140656,0,0,-0.12799863517284393,-0.021333105862140656,0,0.06399931758642197,0,0,-0.08533242344856262,-0.20799778401851654,0,0,0.047999486327171326,0,-0.04266621172428131,-0.05333276465535164,0,0,0,0,-0.021333105862140656,-0.010666552931070328,0,0.1919979453086853,0,0,-0.021333105862140656,-0.03199965879321098,0,0,0.05866603925824165,0,-0.021333105862140656,-0.04266621172428131,0,0.149331733584404,0.021333105862140656,0,0,-0.010666552931070328,0,0,0.005333276465535164,0,0,-0.010666552931070328,0,0.17066484689712524,0.021333105862140656,0,-0.06399931758642197,-0.010666552931070328,0,0,0.03199965879321098,0,0,-0.02666638232767582,0,0,0.04266621172428131,0,0,-0.047999486327171326,0,0,0,0,-0.2773303687572479,-0.04266621172428131,0,0.149331733584404,0.02666638232767582,0,-0.10666552931070328,-0.005333276465535164,0,0,0,0,0,-0.02666638232767582,0,0,0.021333105862140656,0,0,-0.07999914884567261,0,0,0,0,0,-0.02666638232767582,0,0.04266621172428131,0.01599982939660549,0,-0.149331733584404,-0.06399931758642197,0,0.06399931758642197,0.03199965879321098,0,-0.04266621172428131,-0.05866603925824165,0,0,0,0,-0.04266621172428131,-0.021333105862140656,0,0.021333105862140656,0,0,-0.149331733584404,-0.021333105862140656,0,0.06399931758642197,0.09599897265434265,0,0,-0.11199880391359329,0,0.08533242344856262,0.010666552931070328,0,0,-0.01599982939660549,0,0.021333105862140656,0.074665866792202,0,0,-0.005333276465535164,0,0,0,0,-0.21333105862140656,-0.010666552931070328,0,0.021333105862140656,0.11199880391359329,0,-0.021333105862140656,-0.047999486327171326,0,0.021333105862140656,0.010666552931070328,0,-0.021333105862140656,-0.005333276465535164,0,0.04266621172428131,0,0,-0.04266621172428131,-0.005333276465535164,0,0,0.010666552931070328,0,-0.04266621172428131,-0.13866518437862396,0,0.021333105862140656,0.07999914884567261,0,0,-0.06399931758642197,0,0,0.021333105862140656,0,0,-0.01599982939660549,0,0,0,0,-0.021333105862140656,-0.021333105862140656,0,0.10666552931070328,0.010666552931070328,0,-0.17066484689712524,0,0,0,0.021333105862140656,0,0,-0.08533242344856262,0,0,0.04266621172428131,0,-0.04266621172428131,-0.02666638232767582,0,0.021333105862140656,0,0,-0.04266621172428131,-0.021333105862140656,0,0,0.01599982939660549,0,0,-0.10666552931070328,0,0.021333105862140656,0.047999486327171326,0,0,-0.021333105862140656,0,0,0.04266621172428131,0,-0.04266621172428131,-0.010666552931070328,0,0.08533242344856262,0.010666552931070328,0,-0.021333105862140656,-0.005333276465535164,0,0,0.047999486327171326,0,-0.06399931758642197,-0.11199880391359329,0,0,0.010666552931070328,0,0,-0.01599982939660549,0,0.021333105862140656,0.047999486327171326,0,-0.021333105862140656,-0.010666552931070328,0,0,0.021333105862140656,0,-0.021333105862140656,-0.021333105862140656,0,0,0.04266621172428131,0,-0.2773303687572479,-0.037332933396101,0,0,0.010666552931070328,0,-0.10666552931070328,0,0,0.021333105862140656,0,0,0,0,0,0,0,0,-0.06399931758642197,-0.07999914884567261,0,0,0.09066569805145264,0,0,-0.11199880391359329,0,0,0,0,-0.04266621172428131,0,0,0,0,0,-0.40532901883125305,-0.021333105862140656,0,0.04266621172428131,0.010666552931070328,0,-0.021333105862140656,-0.021333105862140656,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#Page-1-15 -->\nThe horizontal position value indicates the position of the leftmost\n                          dot of the sprite's 24-dot width.  The visible display is restricted\n                          to the 320 dot positions between positions 24 and 344.  At position 0\n                          the whole sprite is past the left edge of the visible screen.  At\n                          position 1 the rightmost dot enters the display area, and at position\n                          24 ($18) the entire sprite is displayed on screen.  At position 321\n                          ($141) the rightmost dot goes past the right edge of the visible\n                          display area, and a position 355 ($158) the whole sprite has moved out\n                          of sight, off the right edge of the screen.\n\nThese registers are all initialized to 0 at power-up.\n\n$D000        SP0X         Sprite 0 Horizontal Position\n\n$D001        SP0Y         Sprite 0 Vertical Position\n\n$D002        SP1X         Sprite 1 Horizontal Position\n\n$D003        SP1Y         Sprite 1 Vertical Position\n\n$D004        SP2X         Sprite 2 Horizontal Position\n\n$D005        SP2Y         Sprite 2 Vertical Position\n\n$D006        SP3X         Sprite 3 Horizontal Position\n\n$D007        SP3Y         Sprite 3 Vertical Position\n\n$D008        SP4X         Sprite 4 Horizontal Position\n\n$D009        SP4Y         Sprite 4 Vertical Position\n\n$D00A        SP5X         Sprite 5 Horizontal Position\n\n$D00B        SP5Y         Sprite 5 Vertical Position\n\n$D00C        SP6X         Sprite 6 Horizontal Position","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#Page-1-15"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0.03196932375431061,0.007992330938577652,0,0,-0.055946316570043564,0,0.03196932375431061,0.03996165469288826,0,0,0,0,0.03196932375431061,0.06393864750862122,0,0,-0.03996165469288826,0,0.06393864750862122,0,0,-0.03196932375431061,-0.015984661877155304,0,0,0.023976992815732956,0,0,0,0,0,0.07193098217248917,0,-0.03196932375431061,-0.007992330938577652,0,0,0.015984661877155304,0,0,-0.015984661877155304,0,0,0.03996165469288826,0,0,-0.023976992815732956,0,0.03196932375431061,0.07193098217248917,0,-0.03196932375431061,0,0,0,0.055946316570043564,0,-0.03196932375431061,-0.015984661877155304,0,0,0,0,-0.03196932375431061,-0.023976992815732956,0,0.03196932375431061,0.055946316570043564,0,-0.03196932375431061,-0.015984661877155304,0,0.03196932375431061,0,0,-0.03196932375431061,-0.007992330938577652,0,0.03196932375431061,0,0,-0.19181594252586365,-0.015984661877155304,0,0.09590797126293182,0,0,-0.22378526628017426,-0.12787729501724243,0,0,0.015984661877155304,0,-0.06393864750862122,-0.015984661877155304,0,0.03196932375431061,0.015984661877155304,0,-0.03196932375431061,-0.015984661877155304,0,0.4475705325603485,0.015984661877155304,0,-0.09590797126293182,0,0,0.03196932375431061,0.023976992815732956,0,-0.03196932375431061,0,0,0.03196932375431061,0.03196932375431061,0,0,-0.015984661877155304,0,0,0.015984661877155304,0,0,0,0,0.22378526628017426,0.023976992815732956,0,-0.15984661877155304,-0.015984661877155304,0,0,0,0,0,0,0,0.03196932375431061,0.007992330938577652,0,-0.06393864750862122,0,0,0.03196932375431061,0.03196932375431061,0,0,-0.015984661877155304,0,0.15984661877155304,0.007992330938577652,0,-0.03196932375431061,-0.023976992815732956,0,0,0.015984661877155304,0,-0.06393864750862122,-0.015984661877155304,0,0,0.03196932375431061,0,0,-0.015984661877155304,0,0.03196932375431061,0.03996165469288826,0,0,-0.023976992815732956,0,0.03196932375431061,0.015984661877155304,0,-0.22378526628017426,-0.10390030592679977,0,0.03196932375431061,0.07193098217248917,0,0,-0.11988496780395508,0,0.06393864750862122,0,0,-0.15984661877155304,-0.03196932375431061,0,0,0.015984661877155304,0,-0.06393864750862122,-0.015984661877155304,0,0.03196932375431061,0.22378526628017426,0,0,-0.11189263314008713,0,0.15984661877155304,0.023976992815732956,0,-0.03196932375431061,-0.023976992815732956,0,0,0.023976992815732956,0,0,0,0,0.03196932375431061,0.007992330938577652,0,-0.09590797126293182,0,0,0.15984661877155304,0.11988496780395508,0,0,-0.07992330938577652,0,0.03196932375431061,0.015984661877155304,0,0,-0.007992330938577652,0,0,0.015984661877155304,0,-0.03196932375431061,-0.03196932375431061,0,0.03196932375431061,0.015984661877155304,0,0,-0.007992330938577652,0,0,0.07992330938577652,0,-0.03196932375431061,-0.015984661877155304,0,0,0,0,-0.06393864750862122,-0.03196932375431061,0,0,0.007992330938577652,0,0,-0.007992330938577652,0,0,0.015984661877155304,0,0,-0.007992330938577652,0,0,0.015984661877155304,0,-0.06393864750862122,-0.11988496780395508,0,0,0.023976992815732956,0,0,-0.007992330938577652,0,0.03196932375431061,0.03996165469288826,0,0,-0.08791564404964447,0,0,0.007992330938577652,0,0,-0.07992330938577652,0,0.06393864750862122,0.03996165469288826,0,0,-0.055946316570043564,0,0.09590797126293182,0.07992330938577652,0,0,-0.03196932375431061,0,0,0.007992330938577652,0,0,-0.007992330938577652,0,0.03196932375431061,0.12787729501724243,0,0,-0.07193098217248917,0,0.06393864750862122,0.08791564404964447,0,0,-0.007992330938577652,0,0.03196932375431061,0.023976992815732956,0,-0.03196932375431061,0,0,0.06393864750862122,0,0,0,-0.015984661877155304,0,0.06393864750862122,0.07193098217248917,0,0,-0.03996165469288826,0,0.09590797126293182,0,0,-0.03196932375431061,-0.015984661877155304,0,0,0.007992330938577652,0,-0.03196932375431061,-0.04795398563146591,0,0.09590797126293182,0.007992330938577652,0,-0.03196932375431061,0,0,0,0.03996165469288826,0,0,-0.007992330938577652,0,0,0,0,0,-0.04795398563146591,0,0,0,0,-0.25575459003448486,0,0,0.03196932375431061,0.023976992815732956,0,-0.03196932375431061,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#Page-1-28 -->\nTo keep things simple, however, let's assume that you have selected to\n                          use the default bank of VIC-II memory, which is the first 16K.  You\n                          would have to select locations 8192-16383 ($2000-$3FFF) for screen\n                          memory, because the VIC-II chip sees an image of the character ROM in\n                          the first half of the 16K block (at locations 4096-8192\n                          ($1000-$1FFF)).  Color memory could be placed at the default location\n                          of text display memory, at 1024-2047 ($400-$7FF).  Placement of bitmap\n                          display and color memory is controlled by the VIC Memory Control\n                          Register at 53272 ($D018).","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#Page-1-28"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0.018988721072673798,0.009494360536336899,0,0,-0.037977442145347595,0,0.037977442145347595,0.023735901340842247,0,-0.037977442145347595,-0.033230260014534,0,0.07595488429069519,0.018988721072673798,0,-0.018988721072673798,-0.033230260014534,0,0.018988721072673798,0.037977442145347595,0,-0.018988721072673798,-0.09019642323255539,0,0,0.004747180268168449,0,-0.018988721072673798,-0.004747180268168449,0,0,0.08544924110174179,0,0,-0.023735901340842247,0,0,0.028483081609010696,0,-0.018988721072673798,-0.009494360536336899,0,0.05696616321802139,0.018988721072673798,0,-0.018988721072673798,-0.023735901340842247,0,0.018988721072673798,0.033230260014534,0,-0.09494360536336899,0,0,0.15190976858139038,0.023735901340842247,0,-0.018988721072673798,-0.004747180268168449,0,0,0.037977442145347595,0,-0.07595488429069519,-0.018988721072673798,0,0.037977442145347595,0.009494360536336899,0,0,-0.009494360536336899,0,0.018988721072673798,0.009494360536336899,0,0,-0.018988721072673798,0,0.09494360536336899,0.014241540804505348,0,-0.20887592434883118,-0.004747180268168449,0,0.07595488429069519,0.023735901340842247,0,-0.11393232643604279,-0.19938156008720398,0,0,0.018988721072673798,0,-0.037977442145347595,-0.018988721072673798,0,0.05696616321802139,0.018988721072673798,0,0,0,0,0.34179696440696716,0.023735901340842247,0,-0.037977442145347595,-0.023735901340842247,0,0,0.042724620550870895,0,0,-0.014241540804505348,0,0.07595488429069519,0.014241540804505348,0,-0.037977442145347595,-0.009494360536336899,0,0.018988721072673798,0,0,-0.018988721072673798,-0.018988721072673798,0,0.265842080116272,0.009494360536336899,0,-0.09494360536336899,-0.004747180268168449,0,0.037977442145347595,0.009494360536336899,0,0,-0.047471802681684494,0,0.018988721072673798,0.028483081609010696,0,-0.07595488429069519,-0.009494360536336899,0,0.018988721072673798,0.018988721072673798,0,-0.037977442145347595,-0.047471802681684494,0,0.09494360536336899,0.09019642323255539,0,0,-0.014241540804505348,0,0,0.009494360536336899,0,0,-0.037977442145347595,0,0.018988721072673798,0.033230260014534,0,-0.018988721072673798,0,0,0.018988721072673798,0.018988721072673798,0,-0.05696616321802139,0,0,0,0.06171334162354469,0,-0.15190976858139038,-0.10918514430522919,0,0.09494360536336899,0.042724620550870895,0,-0.05696616321802139,-0.05696616321802139,0,0,0,0,-0.09494360536336899,-0.018988721072673798,0,0.07595488429069519,0.033230260014534,0,-0.05696616321802139,0,0,0.018988721072673798,0.18039284646511078,0,-0.018988721072673798,-0.11867950111627579,0,0.265842080116272,0.004747180268168449,0,-0.09494360536336899,-0.009494360536336899,0,0,0.042724620550870895,0,0,-0.018988721072673798,0,0,0.018988721072673798,0,-0.09494360536336899,-0.018988721072673798,0,0.018988721072673798,0.15190976858139038,0,0,-0.052218981087207794,0,0.018988721072673798,0.023735901340842247,0,-0.018988721072673798,-0.004747180268168449,0,0.037977442145347595,0.009494360536336899,0,-0.037977442145347595,-0.042724620550870895,0,0,0.009494360536336899,0,-0.037977442145347595,-0.018988721072673798,0,0.037977442145347595,0.047471802681684494,0,-0.07595488429069519,-0.004747180268168449,0,0.018988721072673798,0.014241540804505348,0,-0.018988721072673798,-0.004747180268168449,0,0.018988721072673798,0.014241540804505348,0,0,-0.033230260014534,0,0.037977442145347595,0.047471802681684494,0,0,-0.033230260014534,0,0.037977442145347595,0,0,0,-0.09494360536336899,0,0.018988721072673798,0.05696616321802139,0,-0.018988721072673798,-0.028483081609010696,0,0.018988721072673798,0.004747180268168449,0,-0.018988721072673798,-0.047471802681684494,0,0.018988721072673798,0.06171334162354469,0,0,-0.08070205897092819,0,0,0.028483081609010696,0,-0.037977442145347595,-0.037977442145347595,0,0.037977442145347595,0.132921040058136,0,-0.018988721072673798,-0.05696616321802139,0,0.037977442145347595,0.014241540804505348,0,-0.15190976858139038,0,0,0,0.08544924110174179,0,0,-0.05696616321802139,0,0.037977442145347595,0.009494360536336899,0,0,0,0,0.05696616321802139,0.028483081609010696,0,-0.018988721072673798,-0.018988721072673798,0,0.037977442145347595,0.023735901340842247,0,0,-0.023735901340842247,0,0.05696616321802139,0.066460520029068,0,0,-0.042724620550870895,0,0.037977442145347595,0.028483081609010696,0,0,-0.037977442145347595,0,0.05696616321802139,0.014241540804505348,0,-0.018988721072673798,-0.028483081609010696,0,0.018988721072673798,0.014241540804505348,0,0,-0.009494360536336899,0,0,0.042724620550870895,0,0,0,0,0.018988721072673798,0.018988721072673798,0,0,0,0,0.037977442145347595,0.014241540804505348,0,-0.39876312017440796,-0.014241540804505348,0,0.018988721072673798,0.014241540804505348,0,-0.037977442145347595,-0.023735901340842247,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#BINOT-X-AND-3POKE-BYPEEKBY-AND-NOT-3CABI-OR-COCABI-12 -->\nBit 0.  This bit enables the Raster Compare IRQ.  The conditions for\n                          this IRQ are met when the raster scan reaches the video line indicated\n                          by the value written to the Raster Register at 53266 ($D012) and Bit 7\n                          of 53265 ($D011).  Again, an explanation of the terminology is in\n                          order.\n\nIn the normal TV display, a beam of electrons (raster) scans the\n                          screen, starting in the top-left corner, and moving in a straight line\n                          to the right, lighting up appropriate parts of the screen line on the\n                          way.  When it comes to the right edge, the beam moves down a line, and\n                          starts again from the left.  There are 262 such line that are scanned\n                          by the 64 display, 200 of which form the visible screen area.  This\n                          scan updates the complete screen display 60 times every second.\n\nThe VIC-II chip keeps track of which line is being scanned, and stores\n                          the scan number in the Raster Register at 53266 and 53265 ($D012 and\n                          $D011).  The Raster Register has two functions.  When read, it tells\n                          what line is presently being scanned.  But when written to, it\n                          designates a particular scan line as the place where a raster\n                          interrupt will occur.","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#BINOT-X-AND-3POKE-BYPEEKBY-AND-NOT-3CABI-OR-COCABI-12"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0,0.005530033726245165,0,0,-0.033180203288793564,0,0.01106006745249033,0.0027650168631225824,0,0,-0.030415186658501625,0,0.02212013490498066,0.0027650168631225824,0,-0.01106006745249033,-0.005530033726245165,0,0.033180203288793564,0.016590101644396782,0,-0.01106006745249033,-0.0027650168631225824,0,0.01106006745249033,0.0027650168631225824,0,0,0,0,0,0.03594521805644035,0,-0.02212013490498066,-0.0027650168631225824,0,0.01106006745249033,0.01935511827468872,0,0,0,0,0.01106006745249033,0.01106006745249033,0,-0.01106006745249033,-0.016590101644396782,0,0.033180203288793564,0,0,0,-0.005530033726245165,0,0.055300336331129074,0,0,-0.01106006745249033,-0.013825084082782269,0,0,0.016590101644396782,0,-0.033180203288793564,-0.008295050822198391,0,0,0.005530033726245165,0,0,-0.005530033726245165,0,0,0,0,0,-0.030415186658501625,0,0.033180203288793564,0.0027650168631225824,0,-0.02212013490498066,0,0,0.02212013490498066,0.013825084082782269,0,-0.08848053961992264,-0.06359539180994034,0,0.01106006745249033,0.013825084082782269,0,-0.02212013490498066,-0.008295050822198391,0,0,0,0,0,0,0,0.7631446719169617,0.01106006745249033,0,-0.04424026980996132,0,0,0.033180203288793564,0.01106006745249033,0,-0.033180203288793564,-0.05806535482406616,0,0.033180203288793564,0.01935511827468872,0,-0.01106006745249033,-0.005530033726245165,0,0.01106006745249033,0.005530033726245165,0,-0.02212013490498066,-0.013825084082782269,0,0.06636040657758713,0,0,-0.07742047309875488,-0.01106006745249033,0,0.02212013490498066,0.013825084082782269,0,0,0,0,0.033180203288793564,0.005530033726245165,0,-0.02212013490498066,-0.005530033726245165,0,0.01106006745249033,0.016590101644396782,0,-0.055300336331129074,0,0,0.055300336331129074,0.03594521805644035,0,-0.06636040657758713,-0.005530033726245165,0,0,0.005530033726245165,0,-0.02212013490498066,-0.016590101644396782,0,0.02212013490498066,0,0,0,-0.0027650168631225824,0,0.04424026980996132,0,0,-0.01106006745249033,-0.005530033726245165,0,0,0.02212013490498066,0,-0.13272081315517426,-0.013825084082782269,0,0.01106006745249033,0.01106006745249033,0,-0.01106006745249033,-0.04700528830289841,0,0.01106006745249033,0.005530033726245165,0,-0.02212013490498066,-0.0248851515352726,0,0,0,0,-0.01106006745249033,0,0,0.01106006745249033,0.38433733582496643,0,0,-0.052535321563482285,0,0.1437808722257614,0.01935511827468872,0,-0.01106006745249033,-0.01935511827468872,0,0.01106006745249033,0.016590101644396782,0,0,-0.005530033726245165,0,0,0.008295050822198391,0,-0.06636040657758713,-0.01106006745249033,0,0,0.03871023654937744,0,0,-0.04147525504231453,0,0,0.01935511827468872,0,-0.01106006745249033,-0.0027650168631225824,0,0.02212013490498066,0.01935511827468872,0,-0.01106006745249033,-0.01106006745249033,0,0.02212013490498066,0.005530033726245165,0,0,-0.033180203288793564,0,0,0.030415186658501625,0,-0.01106006745249033,-0.033180203288793564,0,0.01106006745249033,0.0027650168631225824,0,0,-0.013825084082782269,0,0.033180203288793564,0.01935511827468872,0,-0.01106006745249033,0,0,0.033180203288793564,0.03594521805644035,0,-0.01106006745249033,-0.008295050822198391,0,0,0,0,0,-0.0746554583311081,0,0.02212013490498066,0.005530033726245165,0,0,-0.005530033726245165,0,0,0.005530033726245165,0,-0.21014128625392914,-0.01106006745249033,0,0.01106006745249033,0.008295050822198391,0,0,-0.01106006745249033,0,0,0.01106006745249033,0,-0.055300336331129074,-0.02212013490498066,0,0,0.0746554583311081,0,0,-0.01106006745249033,0,0.033180203288793564,0.005530033726245165,0,0,0,0,0,0.19078616797924042,0,0,-0.04424026980996132,0,0,0.008295050822198391,0,0,-0.008295050822198391,0,0.033180203288793564,0.008295050822198391,0,0,-0.008295050822198391,0,0.02212013490498066,0.013825084082782269,0,0,-0.01106006745249033,0,0,0.027650168165564537,0,-0.01106006745249033,-0.01935511827468872,0,0,0.005530033726245165,0,-0.02212013490498066,-0.005530033726245165,0,0.02212013490498066,0.013825084082782269,0,-0.01106006745249033,-0.005530033726245165,0,0,0.01935511827468872,0,-0.01106006745249033,-0.01935511827468872,0,0,0.030415186658501625,0,-0.055300336331129074,-0.02212013490498066,0,0,0,0,0,-0.005530033726245165,0,0.01106006745249033,0.016590101644396782,0,-0.1216607466340065,0,0,0.01106006745249033,0.01106006745249033,0,-0.01106006745249033,-0.10783565789461136,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#BINOT-X-AND-3POKE-BYPEEKBY-AND-NOT-3CABI-OR-COCABI-26 -->\nSprite multicolor mode is very similar to text and bitmap multicolor\n                          modes (see Bit 4 of 53270, $D016).  Normally, the color of each dot of\n                          the sprite is controlled by a single bit of sprite shape data.  When\n                          the mode is enabled for a sprite, by setting the corresponding bit of\n                          this register to 1, the bits of sprite shape data are grouped together\n                          in pairs, with each pair of bits controlling a double-wide dot of the\n                          sprite display.  By sacrificing some of the horizontal resolution (the\n                          sprite, although the same size, is now only 12 dots wide), you gain\n                          the use of two additional colors.  The four possible combinations of\n                          these bit-pairs display dot colors from the following sources:\n\n|    |\t\t\t\t\t     |\n\t\t\t  |----|---------------------------------------------|\n                          | 00 | Background Color Register 0 (transparent)   |\n                          | 01 | Sprite Multicolor Register 0 (53285, $D025) |\n                          | 10 | Sprite Color Registers (53287-94, $D027-E)  |\n                          | 11 | Sprite Multicolor Register 1 (53286, $D026) |","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#BINOT-X-AND-3POKE-BYPEEKBY-AND-NOT-3CABI-OR-COCABI-26"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0,0.005355332978069782,0,0,-0.026776665821671486,0,0.06426399946212769,0.010710665956139565,0,-0.02142133191227913,-0.02142133191227913,0,0.08568532764911652,0.010710665956139565,0,-0.04284266382455826,-0.0696193277835846,0,0.04284266382455826,0.026776665821671486,0,0,-0.005355332978069782,0,0.04284266382455826,0.005355332978069782,0,-0.02142133191227913,0,0,0.06426399946212769,0.08032999187707901,0,-0.02142133191227913,-0.005355332978069782,0,0.02142133191227913,0.026776665821671486,0,0,-0.02142133191227913,0,0.04284266382455826,0.005355332978069782,0,-0.04284266382455826,-0.04284266382455826,0,0.04284266382455826,0,0,-0.02142133191227913,-0.005355332978069782,0,0.06426399946212769,0.010710665956139565,0,-0.04284266382455826,-0.05355333164334297,0,0,0.04284266382455826,0,0,-0.005355332978069782,0,0.06426399946212769,0.048197995871305466,0,0,0,0,0,0.026776665821671486,0,0,-0.026776665821671486,0,0,0.026776665821671486,0,-0.06426399946212769,0,0,0.02142133191227913,0.010710665956139565,0,-0.06426399946212769,-0.1499493271112442,0,0.02142133191227913,0.026776665821671486,0,-0.04284266382455826,-0.05890866369009018,0,0.02142133191227913,0,0,-0.02142133191227913,-0.02142133191227913,0,0.4284266531467438,0.03748733177781105,0,-0.1499493271112442,-0.010710665956139565,0,0.06426399946212769,0.04284266382455826,0,-0.08568532764911652,-0.026776665821671486,0,0.06426399946212769,0.02142133191227913,0,0,0,0,0.06426399946212769,0.02142133191227913,0,-0.02142133191227913,-0.02142133191227913,0,0.23563465476036072,0.03213199973106384,0,-0.04284266382455826,-0.010710665956139565,0,0,0.02142133191227913,0,0,0,0,0.06426399946212769,0.02142133191227913,0,-0.02142133191227913,-0.02142133191227913,0,0,0.03213199973106384,0,-0.06426399946212769,-0.010710665956139565,0,0.10710666328668594,0.04284266382455826,0,-0.1499493271112442,-0.03213199973106384,0,0.04284266382455826,0,0,0,0,0,0.04284266382455826,0.03213199973106384,0,0,0,0,0.04284266382455826,0,0,-0.02142133191227913,-0.026776665821671486,0,0.02142133191227913,0.02142133191227913,0,-0.10710666328668594,-0.03213199973106384,0,0.04284266382455826,0.026776665821671486,0,0,-0.03213199973106384,0,0.04284266382455826,0.02142133191227913,0,-0.2784773111343384,-0.026776665821671486,0,0.02142133191227913,0.02142133191227913,0,-0.02142133191227913,-0.010710665956139565,0,0.02142133191227913,0.2142133265733719,0,0,-0.1445939838886261,0,0.23563465476036072,0.03748733177781105,0,-0.02142133191227913,-0.06426399946212769,0,0.02142133191227913,0.03213199973106384,0,0,0,0,0.02142133191227913,0.048197995871305466,0,-0.17137065529823303,-0.01606599986553192,0,0,0.1392386555671692,0,-0.02142133191227913,-0.03213199973106384,0,0.04284266382455826,0.010710665956139565,0,0,0,0,0,0.04284266382455826,0,-0.02142133191227913,-0.01606599986553192,0,0.06426399946212769,0.01606599986553192,0,0,-0.03748733177781105,0,0.02142133191227913,0.05890866369009018,0,-0.06426399946212769,-0.0749746635556221,0,0.02142133191227913,0.03213199973106384,0,0,-0.010710665956139565,0,0.04284266382455826,0.03213199973106384,0,-0.04284266382455826,-0.005355332978069782,0,0.06426399946212769,0.03748733177781105,0,-0.06426399946212769,-0.02142133191227913,0,0,0.010710665956139565,0,-0.08568532764911652,-0.05355333164334297,0,0.02142133191227913,0.03748733177781105,0,0,0,0,0,0.02142133191227913,0,-0.02142133191227913,-0.1392386555671692,0,0,0.010710665956139565,0,0,-0.026776665821671486,0,0,0.01606599986553192,0,-0.04284266382455826,-0.01606599986553192,0,0,0.12317265570163727,0,0,-0.02142133191227913,0,0.04284266382455826,0.01606599986553192,0,0,-0.005355332978069782,0,0,0.11781732738018036,0,0,-0.12317265570163727,0,0.04284266382455826,0.01606599986553192,0,0,-0.03213199973106384,0,0.04284266382455826,0.03748733177781105,0,-0.04284266382455826,0,0,0,0.01606599986553192,0,0,-0.01606599986553192,0,0,0.09104066342115402,0,0,-0.010710665956139565,0,0,0.010710665956139565,0,-0.10710666328668594,-0.03213199973106384,0,0.08568532764911652,0.026776665821671486,0,0,-0.005355332978069782,0,0.06426399946212769,0.02142133191227913,0,0,-0.03748733177781105,0,0.04284266382455826,0.05890866369009018,0,-0.02142133191227913,-0.0696193277835846,0,0.04284266382455826,0.010710665956139565,0,0,-0.04284266382455826,0,0,0.02142133191227913,0,-0.2784773111343384,0,0,0.02142133191227913,0.010710665956139565,0,-0.08568532764911652,-0.01606599986553192,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#BINOT-X-AND-3POKE-BYPEEKBY-AND-NOT-3CABI-OR-COCABI-28 -->\nThis register can be used to double the width of any sprite.  Setting\n                          any bit of this register to 1 will cause each dot of the corresponding\n                          sprite shape to be displayed twice as wide as normal, so that without\n                          changing its horizontal resolution, the sprite takes up twice as much\n                          space.  The horizontal expansion feature can be used alone, or in\n                          combination with the vertical expansion register at 53271 ($D017).\n\n$D01E-$D01F               Sprite Collision Detection Registers\n\nWhile Bit 2 of the VIC IRQ Register at 53273 ($D019) is set to 1\n                          anytime two sprites overlap, and Bit 1 is set to 1, when a sprite\n                          shape is touching the foreground text or bit-graphics display, these\n                          registers specify which sprites were involved in the collision.  Every\n                          bit that is set to 1 indicates that the corresponding sprite was\n                          involved in the collision.  Reading these registers clears them so\n                          that they can detect the next collision.  Therefore, if you plan to\n                          make multiple tests on the values stored here, it may be necessary to\n                          copy it to a RAM variable for further reference.","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#BINOT-X-AND-3POKE-BYPEEKBY-AND-NOT-3CABI-OR-COCABI-28"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0,0.01310918852686882,0,0,-0.02621837705373764,0,0,0.0043697296641767025,0,0,-0.0436972975730896,0,0.01747891865670681,0,0,-0.03495783731341362,-0.01747891865670681,0,0.03495783731341362,0.01747891865670681,0,0,-0.04806702584028244,0,0.01747891865670681,0.01310918852686882,0,0,-0.0043697296641767025,0,0.01747891865670681,0.06991567462682724,0,0,0,0,0.01747891865670681,0.0873945951461792,0,0,-0.01747891865670681,0,0.03495783731341362,0.0436972975730896,0,0,-0.06991567462682724,0,0.0873945951461792,0.0043697296641767025,0,-0.03495783731341362,0,0,0.05243675410747528,0,0,-0.01747891865670681,-0.07428540289402008,0,0.03495783731341362,0.0436972975730896,0,-0.03495783731341362,0,0,0,0,0,0,-0.03058810718357563,0,0,0,0,0,-0.03058810718357563,0,0.15731026232242584,0.008739459328353405,0,-0.05243675410747528,0,0,0,0,0,-0.4020151197910309,-0.11798270046710968,0,0,0,0,-0.05243675410747528,-0.008739459328353405,0,0.01747891865670681,0,0,0,-0.008739459328353405,0,0.33209943771362305,0.008739459328353405,0,-0.03495783731341362,0,0,0.01747891865670681,0.008739459328353405,0,-0.05243675410747528,-0.01747891865670681,0,0.03495783731341362,0.01747891865670681,0,0,0,0,0.03495783731341362,0.008739459328353405,0,0,-0.01747891865670681,0,0.10487350821495056,0.008739459328353405,0,-0.15731026232242584,-0.0043697296641767025,0,0.03495783731341362,0.01747891865670681,0,0,-0.0043697296641767025,0,0.05243675410747528,0.0218486487865448,0,0,0,0,0,0.05243675410747528,0,-0.1747891902923584,-0.01747891865670681,0,0.10487350821495056,0.0655459463596344,0,-0.06991567462682724,-0.01747891865670681,0,0,0.03495783731341362,0,0,-0.01747891865670681,0,0.03495783731341362,0,0,0,0,0,0.01747891865670681,0,0,0,-0.01310918852686882,0,0.05243675410747528,0.10050377994775772,0,-0.10487350821495056,-0.02621837705373764,0,0.01747891865670681,0,0,-0.03495783731341362,-0.21411675214767456,0,0,0,0,-0.03495783731341362,-0.03932756558060646,0,0,0.01310918852686882,0,-0.15731026232242584,0,0,0.01747891865670681,0.16604971885681152,0,-0.01747891865670681,-0.07428540289402008,0,0.20974701642990112,0.008739459328353405,0,0,-0.03058810718357563,0,0.03495783731341362,0.01747891865670681,0,0,0,0,0.03495783731341362,0.01747891865670681,0,-0.27966269850730896,0,0,0.01747891865670681,0.05680648609995842,0,0,-0.0873945951461792,0,0,0.02621837705373764,0,-0.19226810336112976,0,0,0,0.03058810718357563,0,0,0,0,0,0.0043697296641767025,0,-0.01747891865670681,-0.0873945951461792,0,0,0.05680648609995842,0,-0.01747891865670681,-0.03495783731341362,0,0,0.008739459328353405,0,0,0,0,0,0.03932756558060646,0,-0.01747891865670681,-0.008739459328353405,0,0,0.0218486487865448,0,0,-0.0043697296641767025,0,0,0.03495783731341362,0,-0.03495783731341362,-0.06117621436715126,0,0.03495783731341362,0.008739459328353405,0,0,-0.01747891865670681,0,0,0,0,0,-0.01747891865670681,0,0,0.03932756558060646,0,0,-0.09176432341337204,0,0,0.008739459328353405,0,-0.06991567462682724,-0.109243243932724,0,0,0.10487350821495056,0,-0.01747891865670681,-0.01310918852686882,0,0.03495783731341362,0.0218486487865448,0,-0.01747891865670681,0,0,0.01747891865670681,0.10050377994775772,0,0,-0.14857080578804016,0,0.03495783731341362,0.01310918852686882,0,0,-0.01310918852686882,0,0.15731026232242584,0.008739459328353405,0,-0.03495783731341362,-0.09613405168056488,0,0.06991567462682724,0.008739459328353405,0,0,0,0,0,0.02621837705373764,0,0,-0.04806702584028244,0,0,0.008739459328353405,0,-0.05243675410747528,-0.008739459328353405,0,0.0873945951461792,0.01310918852686882,0,0,0,0,0,0,0,-0.05243675410747528,-0.05243675410747528,0,0,0.02621837705373764,0,-0.05243675410747528,-0.01747891865670681,0,0.01747891865670681,0,0,0,-0.01747891865670681,0,0,0.02621837705373764,0,-0.22722594439983368,0,0,0,0.0043697296641767025,0,-0.01747891865670681,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#BINOT-X-AND-3POKE-BYPEEKBY-AND-NOT-3CABI-OR-COCABI-34 -->\nThis register sets the color that is displayed by the 11 bit-pair in\n                          multicolor sprite graphics.  The default color value is 0 (black).\n\n$D027-$D02E               Sprite Color Registers\n\nThese registers are used to set the color to be displayed by bits of\n                          hi-res sprite data having a value of 1, and by bit-pairs of multicolor\n                          sprite data having a value of 10.  The color of each sprite is\n                          determined by its own individual color register.\n\n$D027        SP0COL       Sprite 0 Color Register (the default color value is 1, white)\n\n$D028        SP1COL       Sprite 1 Color Register (the default color value is 2, red)\n\n$D029        SP2COL       Sprite 2 Color Register (the default color value is 3, cyan)\n\n$D02A        SP3COL       Sprite 3 Color Register (the default color value is 4, purple)\n\n$D02B        SP4COL       Sprite 4 Color Register (the default color value is 5, green)\n\n$D02C        SP5COL       Sprite 5 Color Register (the default color value is 6, blue)\n\n$D02D        SP6COL       Sprite 6 Color Register (the default color value is 7, yellow)\n\n$D02E        SP7COL       Sprite 7 Color Register (the default color value is 12, medium gray)\n\n$D02F-$D03F               Not Connected","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#BINOT-X-AND-3POKE-BYPEEKBY-AND-NOT-3CABI-OR-COCABI-34"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0,0.011957411654293537,0,0,-0.041850943118333817,0,0.14348894357681274,0.041850943118333817,0,0,-0.023914823308587074,0,0.07174447178840637,0.011957411654293537,0,-0.07174447178840637,-0.07174447178840637,0,0.023914823308587074,0.035872235894203186,0,-0.04782964661717415,-0.023914823308587074,0,0.023914823308587074,0.023914823308587074,0,0,-0.005978705827146769,0,0.023914823308587074,0.05978705734014511,0,-0.023914823308587074,-0.011957411654293537,0,0.023914823308587074,0.035872235894203186,0,0,0,0,0,0.005978705827146769,0,-0.023914823308587074,-0.04782964661717415,0,0.04782964661717415,0,0,0,0,0,0.16740377247333527,0.005978705827146769,0,-0.07174447178840637,-0.0956592932343483,0,0,0.011957411654293537,0,0,-0.017936117947101593,0,0.023914823308587074,0.029893528670072556,0,0,-0.005978705827146769,0,0,0.005978705827146769,0,0,-0.029893528670072556,0,0,0,0,-0.04782964661717415,-0.023914823308587074,0,0.023914823308587074,0.029893528670072556,0,-0.07174447178840637,-0.19729728996753693,0,0.0956592932343483,0.04782964661717415,0,-0.04782964661717415,-0.04782964661717415,0,0,0.011957411654293537,0,0,-0.011957411654293537,0,0.16740377247333527,0.0777231752872467,0,-0.023914823308587074,0,0,0.04782964661717415,0.035872235894203186,0,0,-0.041850943118333817,0,0.0956592932343483,0.011957411654293537,0,0,-0.023914823308587074,0,0.07174447178840637,0.029893528670072556,0,0,-0.011957411654293537,0,0.2869778871536255,0.011957411654293537,0,-0.04782964661717415,-0.011957411654293537,0,0,0.029893528670072556,0,-0.04782964661717415,-0.011957411654293537,0,0.11957411468029022,0.005978705827146769,0,0,-0.011957411654293537,0,0.023914823308587074,0.029893528670072556,0,-0.04782964661717415,0,0,0.23914822936058044,0.0956592932343483,0,0,-0.035872235894203186,0,0,0,0,-0.07174447178840637,0,0,0,0.011957411654293537,0,-0.023914823308587074,0,0,0.04782964661717415,0,0,-0.023914823308587074,-0.041850943118333817,0,0.04782964661717415,0.005978705827146769,0,-0.16740377247333527,-0.029893528670072556,0,0.023914823308587074,0.023914823308587074,0,0,-0.035872235894203186,0,0.04782964661717415,0.04782964661717415,0,-0.2869778871536255,-0.035872235894203186,0,0,0,0,0,-0.011957411654293537,0,0.04782964661717415,0.0956592932343483,0,-0.023914823308587074,-0.10163799673318863,0,0.1913185864686966,0.04782964661717415,0,-0.04782964661717415,-0.017936117947101593,0,0.04782964661717415,0.04782964661717415,0,0,0,0,0.023914823308587074,0.07174447178840637,0,-0.1913185864686966,0,0,0,0.16142505407333374,0,0,-0.041850943118333817,0,0.023914823308587074,0.005978705827146769,0,-0.04782964661717415,-0.035872235894203186,0,0,0.06576576828956604,0,-0.023914823308587074,0,0,0.023914823308587074,0.017936117947101593,0,-0.023914823308587074,-0.029893528670072556,0,0.023914823308587074,0.12555281817913055,0,-0.023914823308587074,0,0,0,0,0,0,-0.041850943118333817,0,0.023914823308587074,0.011957411654293537,0,-0.07174447178840637,-0.011957411654293537,0,0,0.06576576828956604,0,-0.04782964661717415,-0.029893528670072556,0,0.04782964661717415,0.023914823308587074,0,-0.04782964661717415,-0.08370188623666763,0,0.023914823308587074,0.017936117947101593,0,0,0,0,0,0.023914823308587074,0,-0.023914823308587074,-0.14348894357681274,0,0,0,0,0,-0.011957411654293537,0,0.07174447178840637,0.029893528670072556,0,-0.04782964661717415,-0.029893528670072556,0,0,0.11957411468029022,0,0,-0.035872235894203186,0,0.07174447178840637,0.023914823308587074,0,-0.04782964661717415,0,0,0.023914823308587074,0.05380835384130478,0,0,-0.10163799673318863,0,0.023914823308587074,0.011957411654293537,0,0,0,0,0.04782964661717415,0.035872235894203186,0,0,-0.023914823308587074,0,0,0.017936117947101593,0,0,-0.011957411654293537,0,0,0.08370188623666763,0,0,-0.023914823308587074,0,0,0.011957411654293537,0,-0.16740377247333527,-0.023914823308587074,0,0.023914823308587074,0.029893528670072556,0,-0.023914823308587074,0,0,0.04782964661717415,0.017936117947101593,0,0,-0.04782964661717415,0,0,0.05978705734014511,0,-0.04782964661717415,-0.023914823308587074,0,0,0.023914823308587074,0,-0.04782964661717415,-0.041850943118333817,0,0.04782964661717415,0.011957411654293537,0,-0.35872235894203186,-0.005978705827146769,0,0.0956592932343483,0.011957411654293537,0,-0.07174447178840637,-0.017936117947101593,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#PULSE-WIDTHREGISTER-VALUE4095-2 -->\nBit 0.  Bit 0 is used to gate the sound.  Setting this bit to a 1\n                          while selecting one of the four waveforms will start the\n                          attack/decay/sustain part of the cycle.  Setting this bit back to 0\n                          (while keeping the same waveform setting) anytime after a note has\n                          started playing will begin the release cycle of the note.  Of course,\n                          in order for the gate bit to have an effect, the frequency and\n                          attack/decay/sustain/release (ADSR) registers must be set, as well as\n                          the pulse width, if necessary, and the volume control set to a nonzero\n                          value.\n\nBit 1.  This bit is used to synchronize the fundamental frequency of\n                          Oscillator 1 with the fundamental frequency of Oscillator 3, allowing\n                          you to create a wide range of complex harmonic structures from voice\n                          1.  Synchronization occurs when this bit is set to 1.  Oscillator 3\n                          must be set to some frequency other than zero, but no other voice 3\n                          parameters will affect the output from voice 1.","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#PULSE-WIDTHREGISTER-VALUE4095-2"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0,0.03060552105307579,0,0,-0.018363313749432564,0,0.12242208421230316,0.009181656874716282,0,0,0,0,0.012242208234965801,0,0,-0.07345325499773026,-0.021423865109682083,0,0.012242208234965801,0.024484416469931602,0,-0.012242208234965801,-0.006121104117482901,0,0,0.0030605520587414503,0,0,-0.012242208234965801,0,0.012242208234965801,0.0030605520587414503,0,0,-0.012242208234965801,0,0,0.012242208234965801,0,-0.024484416469931602,-0.006121104117482901,0,0.024484416469931602,0.012242208234965801,0,-0.024484416469931602,-0.024484416469931602,0,0.024484416469931602,0,0,-0.06121104210615158,0,0,0.048968832939863205,0.006121104117482901,0,0,-0.024484416469931602,0,0.024484416469931602,0.0030605520587414503,0,-0.012242208234965801,-0.006121104117482901,0,0,0,0,0,-0.012242208234965801,0,0,0,0,0,0,0,0,0,0,-0.06121104210615158,-0.006121104117482901,0,0,0.021423865109682083,0,-0.07345325499773026,-0.03366607427597046,0,0,0.015302760526537895,0,-0.024484416469931602,-0.015302760526537895,0,0.03672662749886513,0.0030605520587414503,0,0,0,0,0.3672662675380707,0.06427159905433655,0,-0.024484416469931602,0,0,0,0.006121104117482901,0,0,-0.21423865854740143,0,0.024484416469931602,0.006121104117482901,0,-0.024484416469931602,-0.009181656874716282,0,0,0.0030605520587414503,0,0,0,0,0.07345325499773026,0.006121104117482901,0,-0.03672662749886513,-0.009181656874716282,0,0.012242208234965801,0.0030605520587414503,0,-0.012242208234965801,-0.015302760526537895,0,0,0.012242208234965801,0,0,-0.018363313749432564,0,0,0.012242208234965801,0,-0.03672662749886513,-0.03672662749886513,0,0.08569546043872833,0.02754496969282627,0,-0.012242208234965801,-0.0030605520587414503,0,0,0.015302760526537895,0,0,-0.015302760526537895,0,0,0,0,0,0,0,0.012242208234965801,0.0030605520587414503,0,0,-0.012242208234965801,0,0.12242208421230316,0,0,-0.048968832939863205,-0.03060552105307579,0,0.012242208234965801,0,0,0,-0.042847730219364166,0,0,0,0,-0.012242208234965801,-0.012242208234965801,0,0.07345325499773026,0.018363313749432564,0,0,-0.0030605520587414503,0,0.012242208234965801,0.18363313376903534,0,0,-0.02754496969282627,0,0.012242208234965801,0.006121104117482901,0,0,-0.006121104117482901,0,0.024484416469931602,0.012242208234965801,0,0,-0.012242208234965801,0,0.024484416469931602,0.03060552105307579,0,-0.024484416469931602,0,0,0,0.0397871769964695,0,0,-0.03672662749886513,0,0,0.009181656874716282,0,0,-0.009181656874716282,0,0.012242208234965801,0,0,-0.024484416469931602,0,0,0,0.0030605520587414503,0,0,-0.018363313749432564,0,0,0.042847730219364166,0,0,-0.012242208234965801,0,0,0.006121104117482901,0,0,-0.006121104117482901,0,0.08569546043872833,0.006121104117482901,0,-0.012242208234965801,-0.015302760526537895,0,0.012242208234965801,0.018363313749432564,0,-0.012242208234965801,0,0,0.012242208234965801,0.06733214855194092,0,0,-0.02754496969282627,0,0.012242208234965801,0.006121104117482901,0,0,0,0,0,0,0,-0.7100480794906616,-0.006121104117482901,0,0,0.03672662749886513,0,-0.012242208234965801,-0.015302760526537895,0,0.012242208234965801,0.006121104117482901,0,0,-0.018363313749432564,0,0,0.006121104117482901,0,-0.03672662749886513,-0.006121104117482901,0,0.012242208234965801,0.021423865109682083,0,-0.012242208234965801,0,0,0,0.10405877232551575,0,-0.024484416469931602,-0.018363313749432564,0,0,0,0,-0.024484416469931602,0,0,0.012242208234965801,0.006121104117482901,0,-0.012242208234965801,-0.006121104117482901,0,0.012242208234965801,0.006121104117482901,0,-0.03672662749886513,-0.012242208234965801,0,0,0.018363313749432564,0,0,-0.009181656874716282,0,0.012242208234965801,0.0030605520587414503,0,-0.048968832939863205,-0.0030605520587414503,0,0,0,0,0,0,0,0,0.042847730219364166,0,-0.024484416469931602,-0.015302760526537895,0,0,0.02754496969282627,0,0,-0.009181656874716282,0,0,0.006121104117482901,0,-0.012242208234965801,0,0,0,0.006121104117482901,0,-0.06121104210615158,0,0,0.024484416469931602,0.0030605520587414503,0,-0.024484416469931602,-0.3550240397453308,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#REGISTER-VALUEATTACK16DECAY-2 -->\n|    |                  |\n                          |----|------------------|\n                          |  0 | 6 milliseconds   |\n                          |  1 | 24 milliseconds  |\n                          |  2 | 48 milliseconds  |\n                          |  3 | 72 milliseconds  |\n                          |  4 | 114 milliseconds |\n                          |  5 | 168 milliseconds |\n                          |  6 | 204 milliseconds |\n                          |  7 | 240 milliseconds |\n                          |  8 | 300 milliseconds |\n                          |  9 | 750 milliseconds |\n                          | 10 | 1.5 seconds      |\n                          | 11 | 2.4 seconds      |\n                          | 12 | 3 seconds        |\n                          | 13 | 9 seconds        |\n                          | 14 | 15 seconds       |\n                          | 15 | 24 seconds       |\n\n$D407-$D414               Voice 2 and Voice 3 Controls\n\nThe various control registers for these two voices correspond almost\n                          exactly to those of voice 1.  The one exception is that the sync and\n                          ring-modulation bits of voice 2 operate on Oscillators 1 and 2, while\n                          the same bits of the Control Register for voice 3 uses Oscillators 2\n                          and 3.\n\n$D407        FRELO2       Voice 2 Frequency Control (low byte)\n\n$D408        FREHI2       Voice 2 Frequency Control (high byte)\n\n$D409        PWLO2        Voice 2 Pulse Waveform Width (low byte)","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#REGISTER-VALUEATTACK16DECAY-2"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0.04203081503510475,0.010507703758776188,0,0,-0.04203081503510475,0,0.04203081503510475,0.03152311220765114,0,0,-0.010507703758776188,0,0.12609244883060455,0.010507703758776188,0,-0.04203081503510475,-0.07355392724275589,0,0.0840616300702095,0.04203081503510475,0,-0.0840616300702095,-0.010507703758776188,0,0.04203081503510475,0.021015407517552376,0,0,0,0,0,0.04203081503510475,0,0,-0.010507703758776188,0,0.04203081503510475,0.021015407517552376,0,-0.04203081503510475,0,0,0.0840616300702095,0.04203081503510475,0,0,-0.03152311220765114,0,0,0.021015407517552376,0,-0.04203081503510475,-0.021015407517552376,0,0.12609244883060455,0,0,0,-0.021015407517552376,0,0,0.010507703758776188,0,0,0,0,0,0.021015407517552376,0,-0.04203081503510475,-0.052538517862558365,0,0,0.010507703758776188,0,0,-0.021015407517552376,0,0.04203081503510475,0,0,-0.12609244883060455,0,0,0,0.021015407517552376,0,-0.0840616300702095,-0.0840616300702095,0,0.04203081503510475,0.021015407517552376,0,-0.0840616300702095,-0.052538517862558365,0,0,0.03152311220765114,0,-0.04203081503510475,-0.021015407517552376,0,0.2521848976612091,0.021015407517552376,0,-0.0840616300702095,-0.010507703758776188,0,0.04203081503510475,0.06304622441530228,0,0,-0.03152311220765114,0,0.37827733159065247,0.04203081503510475,0,-0.04203081503510475,-0.04203081503510475,0,0,0.03152311220765114,0,-0.0840616300702095,0,0,0.2521848976612091,0,0,-0.0840616300702095,-0.021015407517552376,0,0,0.04203081503510475,0,0,-0.021015407517552376,0,0,0.04203081503510475,0,-0.0840616300702095,0,0,0.04203081503510475,0,0,0,-0.021015407517552376,0,0.29421570897102356,0.07355392724275589,0,0,0,0,0,0.021015407517552376,0,-0.04203081503510475,0,0,0,0.010507703758776188,0,0,-0.03152311220765114,0,0,0,0,-0.04203081503510475,-0.010507703758776188,0,0.04203081503510475,0.021015407517552376,0,-0.168123260140419,-0.06304622441530228,0,0.04203081503510475,0,0,-0.04203081503510475,-0.06304622441530228,0,0.04203081503510475,0.021015407517552376,0,-0.12609244883060455,-0.04203081503510475,0,0,0,0,-0.04203081503510475,-0.021015407517552376,0,0.0840616300702095,0.12609244883060455,0,0,-0.0840616300702095,0,0.168123260140419,0.021015407517552376,0,-0.04203081503510475,-0.021015407517552376,0,0,0.19964636862277985,0,0,-0.021015407517552376,0,0,0.010507703758776188,0,-0.12609244883060455,-0.04203081503510475,0,0,0.1576155573129654,0,0,-0.052538517862558365,0,0,0.021015407517552376,0,0,-0.021015407517552376,0,0.04203081503510475,0.010507703758776188,0,0,-0.04203081503510475,0,0.0840616300702095,0.021015407517552376,0,-0.04203081503510475,0,0,0.04203081503510475,0.1576155573129654,0,-0.0840616300702095,-0.010507703758776188,0,0,0.021015407517552376,0,0,-0.021015407517552376,0,0.0840616300702095,0,0,0,-0.010507703758776188,0,0.0840616300702095,0.03152311220765114,0,-0.04203081503510475,-0.021015407517552376,0,0.04203081503510475,0.021015407517552376,0,-0.0840616300702095,-0.0840616300702095,0,0,0.021015407517552376,0,-0.04203081503510475,-0.03152311220765114,0,0,0.021015407517552376,0,-0.04203081503510475,-0.06304622441530228,0,0,0.010507703758776188,0,0,-0.052538517862558365,0,0.04203081503510475,0.04203081503510475,0,0,-0.021015407517552376,0,0,0.09456933289766312,0,-0.0840616300702095,-0.04203081503510475,0,0.0840616300702095,0,0,0,-0.010507703758776188,0,0,0.06304622441530228,0,0,-0.0840616300702095,0,0,0.010507703758776188,0,0,0,0,0.04203081503510475,0.09456933289766312,0,0,-0.010507703758776188,0,0.0840616300702095,0.021015407517552376,0,0,-0.021015407517552376,0,0.04203081503510475,0.10507703572511673,0,-0.04203081503510475,-0.04203081503510475,0,0,0.021015407517552376,0,-0.04203081503510475,-0.04203081503510475,0,0,0,0,0,-0.021015407517552376,0,0,0.052538517862558365,0,-0.0840616300702095,0,0,0,0.11558473855257034,0,0,-0.021015407517552376,0,0,0.021015407517552376,0,0,-0.052538517862558365,0,0,0,0,-0.168123260140419,-0.021015407517552376,0,0,0,0,-0.0840616300702095,-0.03152311220765114,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#FREQUENCYREGISTER-VALUE5830Hz-16 -->\nThe keyboard is so necessary to the computer's operation that you may\n                          have a hard time thinking of it as a peripheral device.  Nonetheless,\n                          it cannot be directly read by the 6510 microprocessor.  Instead, the\n                          keys are connected in a matrix of eight rows by eight columns to CIA\n                          #1 Ports A and B.  The layout of this matrix is shown below.\n\nWRITE TO PORT A               READ PORT B (56321, $DC01)\n                              56320/$DC00\n                                       Bit 7   Bit 6   Bit 5   Bit 4   Bit 3   Bit 2   Bit 1   Bit 0","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#FREQUENCYREGISTER-VALUE5830Hz-16"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0.1263647973537445,0,0,0,-0.015795599669218063,0,0,0.015795599669218063,0,0,0,0,0.06318239867687225,0,0,-0.06318239867687225,0,0,0.1263647973537445,0.015795599669218063,0,0,0,0,0,0.03159119933843613,0,0,0,0,0,0.04738680273294449,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.04738680273294449,0,0,0,0,-0.18954721093177795,0,0,0.1263647973537445,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.03159119933843613,0,0,0,0,0,0,0,0,0,0,-0.06318239867687225,-0.03159119933843613,0,0,0,0,-0.1263647973537445,-0.03159119933843613,0,0,0.06318239867687225,0,0,0,0,0.5686416029930115,0,0,-0.06318239867687225,0,0,0,0.03159119933843613,0,0,-0.03159119933843613,0,0.18954721093177795,0.06318239867687225,0,0,0,0,0,0,0,0,0,0,0.18954721093177795,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.06318239867687225,0.015795599669218063,0,0,-0.09477360546588898,0,0.3790944218635559,0.06318239867687225,0,0,0,0,0,0,0,0,-0.015795599669218063,0,0,0,0,0,0,0,0,0,0,-0.18954721093177795,0,0,0,0,0,-0.06318239867687225,0,0,0.06318239867687225,0,0,0,-0.03159119933843613,0,0,0,0,0,-0.07897800207138062,0,0.06318239867687225,0,0,0,0,0,0.1263647973537445,0.28432080149650574,0,0,-0.04738680273294449,0,0.06318239867687225,0,0,0,-0.015795599669218063,0,0,0.1263647973537445,0,0,0,0,0,0,0,-0.06318239867687225,0,0,0,0.11056920140981674,0,0,-0.015795599669218063,0,0,0.03159119933843613,0,0,0,0,0,0,0,0,0,0,0,0.03159119933843613,0,0,0,0,0,0.18954721093177795,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.04738680273294449,0,0,0.03159119933843613,0,0,-0.09477360546588898,0,0,0,0,0,-0.03159119933843613,0,0,0.03159119933843613,0,0,0,0,0,0,0,0,0,0,0,0.03159119933843613,0,0,0,0,0,0.06318239867687225,0,0,-0.015795599669218063,0,0,0.03159119933843613,0,0,-0.03159119933843613,0,0,0,0,0,0,0,0,0.14216040074825287,0,0,-0.04738680273294449,0,0.06318239867687225,0,0,0,0,0,0,0.04738680273294449,0,0,0,0,0,0,0,-0.06318239867687225,0,0,0,0.04738680273294449,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.015795599669218063,0,0,0,0,0,0.09477360546588898,0,-0.06318239867687225,0,0,0,0,0,0,0,0,0,0,0,-0.06318239867687225,0,0,0,0,0,-0.06318239867687225,-0.04738680273294449,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#Bit-6-RSHIFT-HOME-LIRA -->\nBit 6    /       ^       =       RSHIFT  HOME    ;       *       LIRA\n\nBit 5    ,       @       :       .       -       L       P       +","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#Bit-6-RSHIFT-HOME-LIRA"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0.042710576206445694,0,0,0,-0.08542115241289139,0,0.042710576206445694,0.032032933086156845,0,0,0,0,0.042710576206445694,0.021355288103222847,0,-0.042710576206445694,-0.05338821932673454,0,0.042710576206445694,0,0,0,0,0,0.08542115241289139,0.032032933086156845,0,0,-0.021355288103222847,0,0,0.021355288103222847,0,0,-0.010677644051611423,0,0,0,0,0,-0.021355288103222847,0,0,0,0,0,-0.09609879553318024,0,0,0.021355288103222847,0,0,0,0,0.12813173234462738,0.042710576206445694,0,0,-0.05338821932673454,0,0,0.05338821932673454,0,0,0,0,0.042710576206445694,0.06406586617231369,0,0,-0.010677644051611423,0,0,0,0,0,-0.010677644051611423,0,0,0.010677644051611423,0,-0.08542115241289139,0,0,0.042710576206445694,0,0,-0.34168460965156555,-0.06406586617231369,0,0.08542115241289139,0.042710576206445694,0,-0.12813173234462738,-0.021355288103222847,0,0,0.021355288103222847,0,-0.042710576206445694,0,0,0.42710575461387634,0.021355288103222847,0,-0.08542115241289139,0,0,0.042710576206445694,0.021355288103222847,0,0,-0.021355288103222847,0,0.042710576206445694,0.021355288103222847,0,0,-0.021355288103222847,0,0,0.042710576206445694,0,0,0,0,0.17084230482578278,0.010677644051611423,0,-0.21355287730693817,-0.021355288103222847,0,0,0,0,0,0,0,0.042710576206445694,0.010677644051611423,0,0,-0.010677644051611423,0,0.042710576206445694,0,0,-0.12813173234462738,0,0,0.21355287730693817,0.06406586617231369,0,-0.17084230482578278,-0.010677644051611423,0,0,0,0,0,-0.042710576206445694,0,0,0.032032933086156845,0,0,0,0,0,0.010677644051611423,0,0,-0.021355288103222847,0,0,0.021355288103222847,0,-0.17084230482578278,-0.042710576206445694,0,0.12813173234462738,0.042710576206445694,0,0,-0.17084230482578278,0,0,0.042710576206445694,0,-0.042710576206445694,-0.06406586617231369,0,0,0,0,0,-0.021355288103222847,0,0.042710576206445694,0.21355287730693817,0,0,-0.07474350929260254,0,0.08542115241289139,0.042710576206445694,0,-0.042710576206445694,-0.010677644051611423,0,0,0.032032933086156845,0,0,0,0,0,0.010677644051611423,0,-0.042710576206445694,0,0,0,0.09609879553318024,0,0,-0.11745408922433853,0,0.08542115241289139,0.010677644051611423,0,-0.042710576206445694,0,0,0.042710576206445694,0.042710576206445694,0,0,0,0,0.08542115241289139,0.021355288103222847,0,-0.042710576206445694,-0.06406586617231369,0,0,0.10677643865346909,0,-0.042710576206445694,-0.08542115241289139,0,0.042710576206445694,0,0,0,0,0,0,0,0,0,0,0,0,0.032032933086156845,0,0,0,0,0,0,0,0,-0.08542115241289139,0,0,0.07474350929260254,0,0,0,0,0,0,0,0,-0.021355288103222847,0,0,0,0,-0.08542115241289139,-0.021355288103222847,0,0,0.032032933086156845,0,0,-0.08542115241289139,0,0.042710576206445694,0.06406586617231369,0,-0.08542115241289139,-0.05338821932673454,0,0,0,0,0,-0.010677644051611423,0,0.042710576206445694,0.10677643865346909,0,-0.042710576206445694,-0.042710576206445694,0,0,0.010677644051611423,0,0,0,0,0,0.05338821932673454,0,-0.042710576206445694,-0.021355288103222847,0,0,0.021355288103222847,0,-0.17084230482578278,0,0,0.042710576206445694,0.08542115241289139,0,0,-0.07474350929260254,0,0.042710576206445694,0,0,-0.08542115241289139,-0.021355288103222847,0,0.08542115241289139,0.032032933086156845,0,0,0,0,0.08542115241289139,0.010677644051611423,0,0,-0.032032933086156845,0,0,0.05338821932673454,0,0,-0.042710576206445694,0,0,0,0,0,0,0,0,0,0,-0.12813173234462738,0,0,0.08542115241289139,0,0,-0.042710576206445694,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#TIMELATCH-VALUECLOCK-SPEED-3 -->\n$DC04        TIMALO       Timer A (low byte)\n\n$DC05        TIMAHI       Timer A (high byte)\n\n$DC06        TIMBLO       Timer B (low byte)\n\n$DC07        TIMBHI       Timer B (high byte)\n\n$DC08-$DC0B               Time of Day Clock (TOD)\n\nIn addition to the two general-purpose timers, the 6526 CIA chip has a\n                          special-purpose Time of Day Clock, which keeps time in a format that\n                          humans can understand a little more easily than microseconds.","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#TIMELATCH-VALUECLOCK-SPEED-3"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0.024108199402689934,0,0,0,-0.07835164666175842,0,0.09643279761075974,0.0060270498506724834,0,0,0,0,0.12054099887609482,0,0,-0.07232459634542465,-0.06027049943804741,0,0.04821639880537987,0.0421893484890461,0,-0.024108199402689934,-0.024108199402689934,0,0,0.0060270498506724834,0,-0.024108199402689934,-0.012054099701344967,0,0.024108199402689934,0.04821639880537987,0,-0.024108199402689934,-0.018081149086356163,0,0,0.024108199402689934,0,0,-0.012054099701344967,0,0,0.012054099701344967,0,-0.024108199402689934,-0.06629754602909088,0,0.04821639880537987,0,0,-0.024108199402689934,0,0,0.07232459634542465,0.012054099701344967,0,-0.04821639880537987,-0.036162298172712326,0,0,0.0421893484890461,0,0,-0.07232459634542465,0,0.09643279761075974,0.036162298172712326,0,-0.04821639880537987,-0.018081149086356163,0,0,0,0,0,-0.030135249719023705,0,0.024108199402689934,0.09040574729442596,0,-0.09643279761075974,0,0,0,0.0060270498506724834,0,-0.21697379648685455,-0.19286559522151947,0,0.024108199402689934,0.024108199402689934,0,-0.09643279761075974,-0.030135249719023705,0,0.04821639880537987,0.012054099701344967,0,0,0,0,0.1687573939561844,0.05424344912171364,0,-0.07232459634542465,0,0,0.04821639880537987,0.07232459634542465,0,-0.04821639880537987,-0.0421893484890461,0,0.12054099887609482,0.024108199402689934,0,-0.024108199402689934,-0.030135249719023705,0,0,0,0,0,-0.012054099701344967,0,0.2651901841163635,0.012054099701344967,0,-0.12054099887609482,-0.018081149086356163,0,0.04821639880537987,0.018081149086356163,0,0,-0.0060270498506724834,0,0.09643279761075974,0,0,-0.07232459634542465,-0.018081149086356163,0,0,0.030135249719023705,0,0,-0.012054099701344967,0,0.1446491926908493,0.04821639880537987,0,-0.024108199402689934,-0.024108199402689934,0,0,0.0060270498506724834,0,-0.024108199402689934,0,0,0,0.04821639880537987,0,0,-0.024108199402689934,0,0.024108199402689934,0,0,-0.04821639880537987,-0.018081149086356163,0,0,0.030135249719023705,0,-0.1687573939561844,-0.07835164666175842,0,0.024108199402689934,0.012054099701344967,0,0,-0.11451394855976105,0,0,0.012054099701344967,0,-0.19286559522151947,-0.06027049943804741,0,0.024108199402689934,0.06629754602909088,0,-0.04821639880537987,0,0,0.024108199402689934,0.0843786969780922,0,0,-0.13259509205818176,0,0.1446491926908493,0.036162298172712326,0,-0.07232459634542465,-0.036162298172712326,0,0,0.06629754602909088,0,-0.04821639880537987,-0.012054099701344967,0,0,0.024108199402689934,0,-0.2651901841163635,0,0,0,0.1627303510904312,0,0,-0.07835164666175842,0,0.04821639880537987,0.036162298172712326,0,0,-0.0060270498506724834,0,0.024108199402689934,0.04821639880537987,0,-0.04821639880537987,-0.0421893484890461,0,0.04821639880537987,0.0060270498506724834,0,-0.024108199402689934,-0.0060270498506724834,0,0,0.07232459634542465,0,-0.024108199402689934,-0.012054099701344967,0,0.024108199402689934,0,0,0,-0.018081149086356163,0,0.024108199402689934,0.012054099701344967,0,0,-0.0060270498506724834,0,0,0.030135249719023705,0,-0.024108199402689934,-0.036162298172712326,0,0,0,0,0,-0.0843786969780922,0,0.024108199402689934,0.036162298172712326,0,0,-0.012054099701344967,0,0.04821639880537987,0,0,-0.024108199402689934,-0.09643279761075974,0,0,0.018081149086356163,0,-0.07232459634542465,-0.04821639880537987,0,0,0.012054099701344967,0,0,-0.05424344912171364,0,0,0.07835164666175842,0,-0.024108199402689934,-0.06027049943804741,0,0.07232459634542465,0.012054099701344967,0,-0.024108199402689934,-0.024108199402689934,0,0,0.0421893484890461,0,-0.024108199402689934,-0.15067625045776367,0,0.024108199402689934,0.012054099701344967,0,0,-0.012054099701344967,0,0.04821639880537987,0.05424344912171364,0,0,-0.0060270498506724834,0,0.024108199402689934,0.012054099701344967,0,0,-0.024108199402689934,0,0,0.09040574729442596,0,0,-0.0421893484890461,0,0,0.012054099701344967,0,-0.07232459634542465,-0.012054099701344967,0,0.07232459634542465,0.036162298172712326,0,-0.12054099887609482,-0.018081149086356163,0,0.04821639880537987,0.012054099701344967,0,-0.024108199402689934,0,0,0,0.036162298172712326,0,-0.04821639880537987,-0.018081149086356163,0,0.1687573939561844,0,0,0,-0.0060270498506724834,0,0,0.012054099701344967,0,-0.38573119044303894,0,0,0.04821639880537987,0.030135249719023705,0,-0.04821639880537987,-0.024108199402689934,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#TIMELATCH-VALUECLOCK-SPEED-17 -->\nBit 5.  Bit 5 is used to control just what it is Timer A is counting.\n                          If this bit is set to 1, it counts the microprocessor machine cycles\n                          (which occur at the rate of 1,022,730 cycles per second).  If the bit\n                          is set to 0, the timer counts pulses on the CNT line, which is\n                          connected to pin 4 of the User Port.  This allows you to use the CIA\n                          as a frequency counter or an event counter, or to measure pulse width\n                          or delay times of external signals.\n\nBit 6.  Whether the Serial Port Register is currently inputting or\n                          outputting data (see the entry for that register at 56332 ($DC0C) for\n                          more information) is controlled by this bit.\n\nBit 7.  This bit allows you to select from software whether the Time\n                          of Day Clock will use a 50 Hz or 60 Hz signal on the TOD pin in order\n                          to keep accurate time (the 64 uses a 60 Hz signal on that pin).\n\n$DC0F        CIACRB       Control Register B","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#TIMELATCH-VALUECLOCK-SPEED-17"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0.03898591175675392,0,0,0,-0.029239432886242867,0,0.03898591175675392,0.00974647793918848,0,0,-0.029239432886242867,0,0.03898591175675392,0.029239432886242867,0,-0.07797182351350784,-0.00974647793918848,0,0.03898591175675392,0.029239432886242867,0,-0.07797182351350784,0,0,0,0.00974647793918848,0,-0.03898591175675392,0,0,0,0.03898591175675392,0,0,-0.00974647793918848,0,0,0.04873238876461983,0,0,0,0,0.07797182351350784,0,0,0,-0.04873238876461983,0,0,0,0,0,-0.00974647793918848,0,0.07797182351350784,0.00974647793918848,0,0,0,0,0.03898591175675392,0.01949295587837696,0,0,-0.029239432886242867,0,0,0.01949295587837696,0,-0.03898591175675392,0,0,0.03898591175675392,0,0,-0.03898591175675392,-0.01949295587837696,0,0.03898591175675392,0.029239432886242867,0,-0.15594364702701569,-0.029239432886242867,0,0.11695773154497147,0,0,-0.11695773154497147,-0.03898591175675392,0,0,0,0,-0.07797182351350784,-0.01949295587837696,0,0.07797182351350784,0.01949295587837696,0,-0.03898591175675392,0,0,0.6237745881080627,0.029239432886242867,0,-0.07797182351350784,0,0,0.03898591175675392,0.029239432886242867,0,0,-0.03898591175675392,0,0.07797182351350784,0.01949295587837696,0,0,-0.03898591175675392,0,0.07797182351350784,0,0,0,-0.029239432886242867,0,0.1949295550584793,0.00974647793918848,0,-0.07797182351350784,0,0,0.03898591175675392,0.00974647793918848,0,-0.03898591175675392,0,0,0.07797182351350784,0.03898591175675392,0,-0.07797182351350784,0,0,0.07797182351350784,0,0,0,0,0,0.23391546308994293,0.05847886577248573,0,0,0,0,0,0.01949295587837696,0,-0.03898591175675392,-0.01949295587837696,0,0.03898591175675392,0,0,-0.03898591175675392,-0.01949295587837696,0,0,0.01949295587837696,0,-0.03898591175675392,-0.01949295587837696,0,0,0.01949295587837696,0,-0.11695773154497147,-0.08771830052137375,0,0.03898591175675392,0.06822534650564194,0,-0.03898591175675392,-0.05847886577248573,0,0.03898591175675392,0,0,-0.03898591175675392,-0.04873238876461983,0,0.03898591175675392,0.04873238876461983,0,0,-0.029239432886242867,0,0.03898591175675392,0.31188729405403137,0,0,-0.05847886577248573,0,0.15594364702701569,0.01949295587837696,0,-0.03898591175675392,-0.00974647793918848,0,0.03898591175675392,0.04873238876461983,0,0,0,0,0,0.04873238876461983,0,-0.03898591175675392,0,0,0,0.10721125453710556,0,-0.03898591175675392,-0.05847886577248573,0,0.03898591175675392,0.029239432886242867,0,0,-0.03898591175675392,0,0.07797182351350784,0.03898591175675392,0,-0.03898591175675392,-0.04873238876461983,0,0,0.03898591175675392,0,0,0,0,0,0.11695773154497147,0,0,0,0,0.03898591175675392,0.01949295587837696,0,-0.03898591175675392,-0.01949295587837696,0,0,0.01949295587837696,0,0,-0.01949295587837696,0,0,0.01949295587837696,0,0,-0.01949295587837696,0,0,0.00974647793918848,0,0,-0.05847886577248573,0,0.03898591175675392,0.01949295587837696,0,0,-0.029239432886242867,0,0.03898591175675392,0.029239432886242867,0,0,-0.029239432886242867,0,0,0.029239432886242867,0,0,-0.03898591175675392,0,0,0.04873238876461983,0,-0.03898591175675392,-0.029239432886242867,0,0.03898591175675392,0.07797182351350784,0,0,-0.03898591175675392,0,0.03898591175675392,0.03898591175675392,0,0,-0.00974647793918848,0,0,0.15594364702701569,0,0,-0.03898591175675392,0,0,0.00974647793918848,0,0,-0.01949295587837696,0,0.07797182351350784,0.03898591175675392,0,0,0,0,0,0.05847886577248573,0,-0.07797182351350784,-0.01949295587837696,0,0,0.04873238876461983,0,0,-0.01949295587837696,0,0,0.00974647793918848,0,0,-0.00974647793918848,0,0,0.03898591175675392,0,-0.03898591175675392,-0.03898591175675392,0,0.03898591175675392,0.01949295587837696,0,0,0,0,0,0.05847886577248573,0,-0.03898591175675392,0,0,0.03898591175675392,0,0,-0.03898591175675392,-0.00974647793918848,0,0,0.029239432886242867,0,-0.07797182351350784,-0.00974647793918848,0,0,0.01949295587837696,0,-0.03898591175675392,-0.00974647793918848,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#POKE-648AD256-REM-AD-IS-THE-ACTUAL-ADDRESS-OF-SCREEN-MEMORY-8 -->\nThe CIA chip has an on-chip serial port, which allows you to send or\n                          receive a byte of data one bit at a time, with the most significant\n                          bit (Bit 7) being transferred first.  For more information about its\n                          use, see the entry for location 56332 ($DC0C).  The 64's Operating\n                          System does not use this facility.\n\n$DD0D        CI2ICR       Interrupt Control Register","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#POKE-648AD256-REM-AD-IS-THE-ACTUAL-ADDRESS-OF-SCREEN-MEMORY-8"},{"name":"github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","language":"asm","vector":[0,0.016044845804572105,0,0,-0.03208969160914421,0,0.06417938321828842,0.026741409674286842,0,-0.021393127739429474,-0.010696563869714737,0,0.0855725109577179,0.026741409674286842,0,-0.0855725109577179,-0.04813453555107117,0,0.06417938321828842,0.016044845804572105,0,-0.06417938321828842,0,0,0.021393127739429474,0.0053482819348573685,0,-0.021393127739429474,-0.010696563869714737,0,0.06417938321828842,0.04278625547885895,0,-0.04278625547885895,-0.026741409674286842,0,0,0.026741409674286842,0,0,-0.010696563869714737,0,0.04278625547885895,0.04278625547885895,0,0,-0.04278625547885895,0,0.06417938321828842,0.016044845804572105,0,0,-0.016044845804572105,0,0.021393127739429474,0.010696563869714737,0,-0.06417938321828842,0,0,0.021393127739429474,0.04813453555107117,0,-0.04278625547885895,-0.016044845804572105,0,0.04278625547885895,0.010696563869714737,0,-0.04278625547885895,0,0,0.021393127739429474,0.026741409674286842,0,0,-0.0053482819348573685,0,0,0.016044845804572105,0,-0.21393127739429474,-0.04813453555107117,0,0.0855725109577179,0.016044845804572105,0,-0.12835876643657684,-0.09626907110214233,0,0.021393127739429474,0.016044845804572105,0,-0.06417938321828842,-0.03743797168135643,0,0.021393127739429474,0,0,0,-0.0053482819348573685,0,0.5134350657463074,0.03208969160914421,0,-0.06417938321828842,-0.021393127739429474,0,0.021393127739429474,0.04278625547885895,0,0,-0.04813453555107117,0,0.04278625547885895,0.03743797168135643,0,-0.04278625547885895,-0.03743797168135643,0,0.021393127739429474,0.021393127739429474,0,0,-0.010696563869714737,0,0.23532439768314362,0.04278625547885895,0,-0.10696563869714737,-0.021393127739429474,0,0.10696563869714737,0.0053482819348573685,0,-0.021393127739429474,0,0,0.021393127739429474,0.021393127739429474,0,-0.021393127739429474,0,0,0,0.03208969160914421,0,-0.021393127739429474,0,0,0.19253814220428467,0.021393127739429474,0,-0.06417938321828842,-0.03743797168135643,0,0,0.03208969160914421,0,-0.0855725109577179,-0.021393127739429474,0,0,0.026741409674286842,0,-0.021393127739429474,-0.026741409674286842,0,0,0.010696563869714737,0,0,0,0,0.021393127739429474,0.021393127739429474,0,-0.0855725109577179,-0.11231391876935959,0,0.021393127739429474,0.04813453555107117,0,-0.04278625547885895,-0.06417938321828842,0,0.021393127739429474,0.021393127739429474,0,-0.19253814220428467,-0.03208969160914421,0,0.021393127739429474,0.016044845804572105,0,0,-0.016044845804572105,0,0.021393127739429474,0.2567175328731537,0,-0.04278625547885895,-0.07487594336271286,0,0.1711450219154358,0.016044845804572105,0,-0.10696563869714737,-0.010696563869714737,0,0.021393127739429474,0.021393127739429474,0,0,-0.021393127739429474,0,0,0.026741409674286842,0,-0.1711450219154358,-0.0053482819348573685,0,0.021393127739429474,0.13905532658100128,0,-0.021393127739429474,-0.07487594336271286,0,0.04278625547885895,0.06952766329050064,0,0,-0.026741409674286842,0,0.021393127739429474,0.016044845804572105,0,-0.021393127739429474,-0.016044845804572105,0,0,0.016044845804572105,0,0,-0.021393127739429474,0,0.021393127739429474,0.09626907110214233,0,-0.021393127739429474,-0.03208969160914421,0,0.021393127739429474,0.010696563869714737,0,-0.06417938321828842,-0.04278625547885895,0,0.06417938321828842,0.016044845804572105,0,-0.04278625547885895,-0.010696563869714737,0,0.021393127739429474,0.0053482819348573685,0,-0.06417938321828842,-0.016044845804572105,0,0,0.016044845804572105,0,-0.021393127739429474,-0.053482819348573685,0,0,0.021393127739429474,0,-0.04278625547885895,-0.03208969160914421,0,0,0.016044845804572105,0,-0.021393127739429474,-0.09626907110214233,0,0.021393127739429474,0.010696563869714737,0,-0.021393127739429474,-0.053482819348573685,0,0.04278625547885895,0.03208969160914421,0,0,-0.053482819348573685,0,0.04278625547885895,0.09092079102993011,0,0,-0.06952766329050064,0,0.021393127739429474,0.016044845804572105,0,0,0,0,0,0.12835876643657684,0,0,-0.10161735862493515,0,0,0.016044845804572105,0,0,-0.010696563869714737,0,0.04278625547885895,0.03208969160914421,0,-0.021393127739429474,-0.010696563869714737,0,0.0855725109577179,0.016044845804572105,0,0,-0.010696563869714737,0,0.021393127739429474,0.058831099420785904,0,-0.021393127739429474,-0.026741409674286842,0,0,0.03743797168135643,0,0,-0.016044845804572105,0,0.0855725109577179,0.016044845804572105,0,-0.021393127739429474,-0.03743797168135643,0,0.021393127739429474,0.03208969160914421,0,0,-0.026741409674286842,0,0.04278625547885895,0.058831099420785904,0,0,-0.04813453555107117,0,0.021393127739429474,0,0,-0.06417938321828842,-0.03208969160914421,0,0,0,0,-0.1711450219154358,-0.026741409674286842,0,0.021393127739429474,0,0,-0.04278625547885895,-0.010696563869714737,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#POKE-648AD256-REM-AD-IS-THE-ACTUAL-ADDRESS-OF-SCREEN-MEMORY-12 -->\n$DE00-$DEFF               Reserved for I/O Expansion\n\nThis range of locations is not used directly by the 64's internal\n                          hardware.  It is, however, accessible via pin 7 of the Expansion Port.\n                          It can be used to control cartridges which are connected to this port.\n                          For example, the CP/M module uses this space to control which\n                          microprocessor is in control of the system.  The Z-80 microprocessor\n                          is turned on and off by writing to 56832 ($DE00).\n\nAnother cartridge which uses this space is Simon's BASIC.  This 16K\n                          cartridge is addressed at memory locations 32768-49151 ($8000-$BFFF),\n                          which means that it overlaps the regular BASIC ROM at 40960-49151\n                          ($A000-$BFFF).  But since it contains additions to BASIC, it must use\n                          the BASIC ROM as well.  This problem is solved by copying the\n                          cartridge at 32768-40959 ($8000-$9FFF) to RAM, and turning the\n                          cartridge on and off by writing to or reading from location 56832\n                          ($DE00).\n\n$DF00-$DFFF               CIA #2 Register Images","sourcePath":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64io/c64io_mapc64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64io/c64io_mapc64.txt#POKE-648AD256-REM-AD-IS-THE-ACTUAL-ADDRESS-OF-SCREEN-MEMORY-12"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","language":"asm","vector":[0.01716121844947338,0.012870914302766323,0,0,0,0,0.01716121844947338,0.06864487379789352,0,-0.10296731442213058,-0.01716121844947338,0,0.05148365721106529,0.00858060922473669,0,-0.01716121844947338,-0.01716121844947338,0,0.05148365721106529,0.038612741976976395,0,-0.01716121844947338,-0.04290304705500603,0,0.08580609411001205,0.00858060922473669,0,-0.01716121844947338,-0.01716121844947338,0,0.01716121844947338,0.04290304705500603,0,-0.01716121844947338,-0.00858060922473669,0,0,0,0,-0.05148365721106529,-0.021451523527503014,0,0,0.012870914302766323,0,-0.01716121844947338,-0.012870914302766323,0,0.03432243689894676,0.01716121844947338,0,0,0,0,0.08580609411001205,0.01716121844947338,0,0,-0.08151578903198242,0,0.03432243689894676,0,0,-0.01716121844947338,-0.004290304612368345,0,0.01716121844947338,0.01716121844947338,0,0,-0.04719335213303566,0,0.01716121844947338,0.00858060922473669,0,-0.01716121844947338,-0.025741828605532646,0,0.05148365721106529,0.055773962289094925,0,-0.06864487379789352,-0.021451523527503014,0,0.15445096790790558,0.012870914302766323,0,-0.3947080373764038,-0.04719335213303566,0,0,0.06864487379789352,0,-0.12012853473424911,-0.03003213368356228,0,0.03432243689894676,0.012870914302766323,0,0,-0.03003213368356228,0,0.30890193581581116,0.00858060922473669,0,-0.01716121844947338,-0.06006426736712456,0,0.01716121844947338,0.04719335213303566,0,-0.01716121844947338,-0.012870914302766323,0,0.13728974759578705,0.025741828605532646,0,0,-0.00858060922473669,0,0.03432243689894676,0.06864487379789352,0,-0.05148365721106529,-0.012870914302766323,0,0.25741827487945557,0.012870914302766323,0,-0.24025706946849823,-0.00858060922473669,0,0.06864487379789352,0.00858060922473669,0,-0.05148365721106529,-0.04719335213303566,0,0,0,0,0,-0.012870914302766323,0,0.05148365721106529,0.021451523527503014,0,0,-0.004290304612368345,0,0.13728974759578705,0.04290304705500603,0,-0.01716121844947338,-0.004290304612368345,0,0,0.021451523527503014,0,0,-0.012870914302766323,0,0,0.00858060922473669,0,-0.10296731442213058,0,0,0.03432243689894676,0.01716121844947338,0,-0.13728974759578705,-0.04719335213303566,0,0.05148365721106529,0.025741828605532646,0,0,-0.03432243689894676,0,0.06864487379789352,0.08580609411001205,0,-0.03432243689894676,-0.21451523900032043,0,0,0.004290304612368345,0,-0.06864487379789352,-0.06864487379789352,0,0.08580609411001205,0.04290304705500603,0,0,-0.004290304612368345,0,0.03432243689894676,0.1587412804365158,0,-0.03432243689894676,-0.021451523527503014,0,0.13728974759578705,0.04290304705500603,0,0,-0.01716121844947338,0,0,0.07293517887592316,0,-0.05148365721106529,0,0,0.01716121844947338,0.021451523527503014,0,-0.01716121844947338,-0.05148365721106529,0,0.06864487379789352,0.14158006012439728,0,0,-0.12441883981227875,0,0,0.04719335213303566,0,-0.01716121844947338,-0.03003213368356228,0,0,0.021451523527503014,0,-0.01716121844947338,-0.004290304612368345,0,0,0.03003213368356228,0,-0.05148365721106529,-0.004290304612368345,0,0,0.06864487379789352,0,-0.03432243689894676,-0.021451523527503014,0,0.01716121844947338,0,0,-0.05148365721106529,-0.004290304612368345,0,0.01716121844947338,0.00858060922473669,0,-0.08580609411001205,-0.05148365721106529,0,0,0.038612741976976395,0,-0.05148365721106529,-0.06864487379789352,0,0.01716121844947338,0.03432243689894676,0,-0.12012853473424911,-0.004290304612368345,0,0,0.038612741976976395,0,-0.03432243689894676,-0.01716121844947338,0,0.08580609411001205,0.004290304612368345,0,-0.01716121844947338,-0.038612741976976395,0,0,0.055773962289094925,0,0,-0.01716121844947338,0,0.10296731442213058,0.055773962289094925,0,-0.01716121844947338,-0.11583822965621948,0,0.01716121844947338,0.06864487379789352,0,0,-0.03003213368356228,0,0.03432243689894676,0.00858060922473669,0,-0.08580609411001205,-0.025741828605532646,0,0,0.08580609411001205,0,-0.01716121844947338,-0.012870914302766323,0,0.01716121844947338,0.038612741976976395,0,-0.01716121844947338,-0.004290304612368345,0,0,0.03432243689894676,0,-0.01716121844947338,-0.00858060922473669,0,0.01716121844947338,0.00858060922473669,0,-0.01716121844947338,-0.021451523527503014,0,0,0.06435456871986389,0,0,-0.08580609411001205,0,0.03432243689894676,0.01716121844947338,0,-0.15445096790790558,-0.03003213368356228,0,0,0.00858060922473669,0,0,-0.025741828605532646,0,0.03432243689894676,0.021451523527503014,0,-0.06864487379789352,-0.04290304705500603,0,0.01716121844947338,0.03432243689894676,0,-0.03432243689894676,-0.03003213368356228,0,0.10296731442213058,0.00858060922473669,0,-0.01716121844947338,-0.06006426736712456,0,0.01716121844947338,0,0,-0.05148365721106529,-0.04290304705500603,0,0.13728974759578705,0.05148365721106529,0,-0.03432243689894676,-0.04290304705500603,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#Page-1-4 -->\nschaltet den Speicherbereich 40960 bis 49151 ($A000 bis $BFFF) zwischen dem \n                     Basic-√úbersetzer (Interpreter) im ROM und freiem RAM um (Normalzustand = 1).\n\nBit 1\n\nschaltet den Speicherbereich 57344 bis 65535 ($E000 bis $FFFF) zwischen dem \n                     Betriebssystem (Kernel) im ROM und freiem RAM um (Normalzustand = 1).\n\nBit 2\n\nschaltet den Speicherbereich 53248 bis 57343 ($D000 bis $DFFF) zwischen \n                     Zeichen-ROM und Ein-/Ausgabe-ROM um (Normalzustand = 1).\n\nBit 3\n\nsendet serielle Daten zum Kassettenrecorder (Normalzustand = 0).\n\nBit 4\n\npr√ºft, ob eine der Tasten des Recorders gedr√ºckt ist, welche den Motor \n                     einschalten (Normalzustand = 1).\n\nBit 5\n\nschaltet den Motor des Recorders ein und aus (Normalzustand = 1).\n\n#### Die RAM-ROM-Umschaltung\n\nSie wissen, da√ü Ihr C 64 deswegen so hei√üt, weil er 64 KByte Speicherpl√§tze \n                     hat. Nur stimmt das nicht! Er hat n√§mlich 88 KByte und m√º√üte eigentlich C 88 \n                     hei√üen.\n\nDa mit den 16 Bit der High-/Low-Byte-Methode (siehe Texteinschub Nr. 2) nur 64 \n                     KByte adressierbar sind, m√ºssen die restlichen 22 KByte bei Bedarf eingeschoben \n                     werden - und das machen die oben erw√§hnten Bit 0 bis 2 des Datenregisters.\n\nIn Bild 1 sehen Sie die drei oben erw√§hnten Speicherbl√∂cke, die sowohl mit RAM \n                     als auch mit ROM belegt sind, einer davon gleich doppelt. Ich habe ihnen \n                     folgende Namen gegeben:","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem/c64mem_64er.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#Page-1-4"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","language":"asm","vector":[0,0,0,-0.019718315452337265,-0.004929578863084316,0,0,0.009859157726168633,0,-0.019718315452337265,-0.024647893384099007,0,0.019718315452337265,0.03943663090467453,0,-0.019718315452337265,-0.019718315452337265,0,0.019718315452337265,0.08380283415317535,0,0,-0.019718315452337265,0,0.019718315452337265,0.03943663090467453,0,-0.07887326180934906,-0.014788735657930374,0,0,0.09366199374198914,0,0,-0.019718315452337265,0,0,0.009859157726168633,0,-0.09859157353639603,-0.02957747131586075,0,0,0.024647893384099007,0,-0.019718315452337265,-0.014788735657930374,0,0.019718315452337265,0.03450705111026764,0,-0.03943663090467453,-0.009859157726168633,0,0,0,0,-0.0591549426317215,-0.0591549426317215,0,0.03943663090467453,0.019718315452337265,0,-0.0591549426317215,0,0,0,0.004929578863084316,0,0,-0.014788735657930374,0,0,0.004929578863084316,0,0,-0.02957747131586075,0,0.0591549426317215,0.004929578863084316,0,0,-0.024647893384099007,0,0.03943663090467453,0.03450705111026764,0,-0.25633808970451355,-0.024647893384099007,0,0.019718315452337265,0.03943663090467453,0,-0.07887326180934906,-0.04436620697379112,0,0.118309885263443,0,0,0,-0.014788735657930374,0,0.2957747280597687,0,0,-0.019718315452337265,-0.024647893384099007,0,0.0591549426317215,0.014788735657930374,0,-0.019718315452337265,-0.009859157726168633,0,0.03943663090467453,0.009859157726168633,0,-0.019718315452337265,0,0,0.03943663090467453,0.009859157726168633,0,-0.0591549426317215,-0.04436620697379112,0,0.236619770526886,0.014788735657930374,0,-0.19718314707279205,0,0,0.0591549426317215,0.009859157726168633,0,-0.09859157353639603,-0.054225366562604904,0,0.03943663090467453,0.004929578863084316,0,-0.03943663090467453,-0.014788735657930374,0,0.0591549426317215,0.014788735657930374,0,-0.03943663090467453,-0.024647893384099007,0,0.2760564088821411,0.004929578863084316,0,-0.019718315452337265,-0.03943663090467453,0,0,0.019718315452337265,0,0,-0.03450705111026764,0,0.03943663090467453,0,0,-0.019718315452337265,0,0,0,0,0,-0.03943663090467453,-0.024647893384099007,0,0,0.03450705111026764,0,-0.019718315452337265,0,0,0.03943663090467453,0.019718315452337265,0,-0.0591549426317215,-0.13309861719608307,0,0.03943663090467453,0.009859157726168633,0,-0.07887326180934906,-0.03943663090467453,0,0.25633808970451355,0.0591549426317215,0,-0.03943663090467453,-0.004929578863084316,0,0.118309885263443,0.16267609596252441,0,-0.019718315452337265,-0.019718315452337265,0,0.3352113366127014,0.04929578676819801,0,-0.03943663090467453,-0.024647893384099007,0,0,0.019718315452337265,0,-0.03943663090467453,-0.014788735657930374,0,0.09859157353639603,0.019718315452337265,0,-0.019718315452337265,-0.03450705111026764,0,0.13802820444107056,0.12323946505784988,0,-0.03943663090467453,-0.10352115333080292,0,0,0.03450705111026764,0,-0.03943663090467453,-0.04929578676819801,0,0.03943663090467453,0.024647893384099007,0,0,-0.03943663090467453,0,0.019718315452337265,0.02957747131586075,0,-0.019718315452337265,-0.019718315452337265,0,0.019718315452337265,0.13802820444107056,0,-0.118309885263443,-0.03450705111026764,0,0.019718315452337265,0,0,-0.0591549426317215,-0.004929578863084316,0,0.019718315452337265,0.024647893384099007,0,-0.019718315452337265,-0.019718315452337265,0,0,0,0,-0.0591549426317215,-0.03450705111026764,0,0,0.009859157726168633,0,-0.019718315452337265,-0.024647893384099007,0,0,0.019718315452337265,0,-0.0591549426317215,-0.02957747131586075,0,0.019718315452337265,0.019718315452337265,0,0,-0.03943663090467453,0,0,0.14295777678489685,0,0,-0.019718315452337265,0,0,0.06901410222053528,0,-0.019718315452337265,-0.07394368201494217,0,0.0591549426317215,0.1725352555513382,0,0,-0.03943663090467453,0,0.03943663090467453,0.02957747131586075,0,-0.019718315452337265,-0.019718315452337265,0,0.019718315452337265,0.12323946505784988,0,-0.019718315452337265,-0.014788735657930374,0,0.019718315452337265,0.08380283415317535,0,-0.019718315452337265,-0.024647893384099007,0,0.019718315452337265,0.009859157726168633,0,-0.03943663090467453,-0.024647893384099007,0,0,0.02957747131586075,0,-0.019718315452337265,-0.014788735657930374,0,0,0.06901410222053528,0,0,-0.0591549426317215,0,0,0.024647893384099007,0,-0.09859157353639603,-0.08380283415317535,0,0.019718315452337265,0.019718315452337265,0,0,-0.03943663090467453,0,0,0.024647893384099007,0,-0.019718315452337265,-0.019718315452337265,0,0,0.06901410222053528,0,0,-0.03450705111026764,0,0,0,0,-0.019718315452337265,-0.009859157726168633,0,0.0591549426317215,0.009859157726168633,0,-0.03943663090467453,-0.03450705111026764,0,0.07887326180934906,0.009859157726168633,0,-0.0591549426317215,-0.009859157726168633,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#PRINT-PEEK-10-10 -->\nSie sehen, die Flagge f√ºr die kombinierten Vergleichsoperatoren entspricht der \n                     Summe ihrer Einzelwerte. Nur die Verkn√ºpfung √ºber OR nicht, denn die ergibt 0.\n\n$0013                Flagge zur Kennzeichnung des laufenden Ein-/Ausgabeger√§tes\n\nImmer dann, wenn von Basic Daten ein- oder ausgegeben werden, schaut die \n                     entsprechende Routine des √úbersetzers in Zelle 19 nach, um welches \n                     Peripherieger√§t es sich handelt. Zur Debatte stehen Tastatur, Datasette, RS232-\n                     User-Port, Bildschirm, Drucker und Floppy-Laufwerk.\n\nDie Flagge ihrerseits ist ausschlaggebend f√ºr die feinen Unterschiede, wie zum \n                     Beispiel das Fragezeichen, bei Eingabe von der Tastatur (INPUT) oder die \n                     Anweisung ¬ªPress Play on Tape¬´ bei Eingabe von der Datasette.\n\nBeim Einschalten des Rechners setzt die Initialisierungsroutine des \n                     Betriebssystems, die beim VC 20 ab Adresse 58276 ($E3A4), beim C 64 ab 58303 \n                     ($E3BF) beginnt, die Flagge in Zelle 19auf 0. Die Null bedeutet Eingabe √ºber \n                     Tastatur und Ausgabe √ºber Bildschirm.\n\nWenn Sie einen Disassembler haben, drucken Sie doch einmal das Assemblerlisting \n                     aus. Sie werden in Adresse 58324/58325 ($E3D4/$E3D5), beim C 64 in 58354/58355 \n                     ($E3F2/$E3F3) den Befehl finden, der eine Null nach Zelle 19 ($0013) bringt.","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem/c64mem_64er.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#PRINT-PEEK-10-10"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","language":"asm","vector":[0.029724376276135445,0.02229328267276287,0,-0.029724376276135445,-0.06687984615564346,0,0,0.029724376276135445,0,-0.029724376276135445,-0.014862188138067722,0,0.029724376276135445,0.029724376276135445,0,-0.11889750510454178,-0.06687984615564346,0,0.05944875255227089,0.04458656534552574,0,0,0,0,0,0.06687984615564346,0,-0.05944875255227089,-0.02229328267276287,0,0,0.05944875255227089,0,0,-0.014862188138067722,0,0.029724376276135445,0.014862188138067722,0,-0.05944875255227089,-0.007431094069033861,0,0.029724376276135445,0.02229328267276287,0,0,-0.029724376276135445,0,0,0.04458656534552574,0,0,0,0,0.14862188696861267,0,0,-0.029724376276135445,-0.06687984615564346,0,0.029724376276135445,0.02229328267276287,0,0,-0.014862188138067722,0,0.029724376276135445,0,0,0,-0.014862188138067722,0,0,0,0,-0.029724376276135445,-0.03715547174215317,0,0.11889750510454178,0,0,-0.029724376276135445,-0.007431094069033861,0,0.05944875255227089,0.029724376276135445,0,-0.35669252276420593,-0.029724376276135445,0,0,0.029724376276135445,0,-0.08917313069105148,-0.014862188138067722,0,0.05944875255227089,0.05944875255227089,0,-0.029724376276135445,-0.02229328267276287,0,0.35669252276420593,0,0,-0.029724376276135445,-0.02229328267276287,0,0.029724376276135445,0.02229328267276287,0,-0.029724376276135445,-0.06687984615564346,0,0.05944875255227089,0.029724376276135445,0,0,-0.02229328267276287,0,0,0.007431094069033861,0,-0.05944875255227089,-0.029724376276135445,0,0.17834626138210297,0.014862188138067722,0,-0.17834626138210297,0,0,0,0.029724376276135445,0,0,-0.029724376276135445,0,0,0.029724376276135445,0,-0.029724376276135445,-0.007431094069033861,0,0.05944875255227089,0.007431094069033861,0,-0.029724376276135445,-0.007431094069033861,0,0.14862188696861267,0.08174203336238861,0,-0.029724376276135445,-0.014862188138067722,0,0,0.02229328267276287,0,0,-0.007431094069033861,0,0,0.02229328267276287,0,0,0,0,0,0,0,-0.05944875255227089,-0.04458656534552574,0,0.08917313069105148,0.06687984615564346,0,-0.08917313069105148,-0.014862188138067722,0,0.05944875255227089,0.029724376276135445,0,-0.05944875255227089,-0.18577735126018524,0,0,0,0,-0.26751938462257385,-0.052017658948898315,0,0.05944875255227089,0.029724376276135445,0,0,-0.014862188138067722,0,0.14862188696861267,0.1932084560394287,0,-0.029724376276135445,-0.029724376276135445,0,0.17834626138210297,0.029724376276135445,0,0,-0.02229328267276287,0,0,0.03715547174215317,0,-0.029724376276135445,-0.007431094069033861,0,0.029724376276135445,0,0,-0.05944875255227089,-0.03715547174215317,0,0.11889750510454178,0.09660422801971436,0,0,-0.11889750510454178,0,0,0.014862188138067722,0,-0.029724376276135445,0,0,0.029724376276135445,0,0,-0.05944875255227089,-0.029724376276135445,0,0,0.029724376276135445,0,0,-0.014862188138067722,0,0,0.08174203336238861,0,-0.08917313069105148,-0.029724376276135445,0,0,0.007431094069033861,0,-0.029724376276135445,0,0,0,0,0,0,0,0,0,0.03715547174215317,0,0,-0.03715547174215317,0,0.17834626138210297,0.052017658948898315,0,-0.029724376276135445,-0.04458656534552574,0,0,0.03715547174215317,0,-0.029724376276135445,-0.029724376276135445,0,0.029724376276135445,0,0,-0.029724376276135445,-0.1411907821893692,0,0,0.05944875255227089,0,-0.08917313069105148,-0.007431094069033861,0,0.029724376276135445,0.08917313069105148,0,0,-0.10403531789779663,0,0.05944875255227089,0.08917313069105148,0,0,-0.02229328267276287,0,0.05944875255227089,0.014862188138067722,0,0,-0.02229328267276287,0,0.05944875255227089,0.10403531789779663,0,-0.029724376276135445,-0.03715547174215317,0,0.029724376276135445,0.06687984615564346,0,-0.029724376276135445,-0.007431094069033861,0,0.029724376276135445,0.014862188138067722,0,0,-0.014862188138067722,0,0.029724376276135445,0.014862188138067722,0,-0.029724376276135445,-0.04458656534552574,0,0.029724376276135445,0.04458656534552574,0,0,-0.04458656534552574,0,0,0,0,-0.11889750510454178,-0.04458656534552574,0,0.029724376276135445,0,0,0,-0.02229328267276287,0,0,0.014862188138067722,0,-0.029724376276135445,-0.007431094069033861,0,0,0.03715547174215317,0,-0.029724376276135445,-0.007431094069033861,0,0,0.08917313069105148,0,0,-0.014862188138067722,0,0.05944875255227089,0,0,-0.05944875255227089,-0.014862188138067722,0,0.05944875255227089,0.014862188138067722,0,-0.029724376276135445,-0.029724376276135445,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#5-POKE-191-3 -->\nDiese werden als Stapelspeicher (Stack) f√ºr Angaben √ºber vorl√§ufige \n                     Zeichenketten - auf englisch ¬ªTemporary String Descriptor¬´ - verwendet.\n\nDie Speicherzelle 22 ($0016) ihrerseits enth√§lt einen Zeiger auf den jeweils \n                     n√§chsten verf√ºgbaren Platz in diesem Speicher ab Zelle 25. Da er eine Kapazit√§t \n                     von 3 * 3 Byte hat, zeigt der Zeiger auf die Zelle 25 ($0019), wenn er leer ist. \n                     Bei einem Eintrag zeigt er auf 28 ($001C), bei zwei Eintr√§gen auf 31 ($001F) und \n                     schlie√ülich auf 34 ($0022), wenn der Speicher voll ist.\n\nEine Zeichenkette ist dann ¬ªvorl√§ufig¬´, wenn sie noch nicht einer \n                     Stringvariablen zugeordnet worden ist, zum Beispiel ¬ªMahlzeit¬´ in dem Basic-\n                     Befehl","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem/c64mem_64er.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#5-POKE-191-3"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","language":"asm","vector":[0.059977512806653976,0.029988756403326988,0,-0.01999250426888466,-0.03998500853776932,0,0.01999250426888466,0.03498688340187073,0,-0.03998500853776932,-0.02499062940478325,0,0.01999250426888466,0.0499812588095665,0,-0.059977512806653976,-0.099962517619133,0,0.1399475336074829,0.02499062940478325,0,0,-0.00999625213444233,0,0,0.029988756403326988,0,0,-0.02499062940478325,0,0.059977512806653976,0.059977512806653976,0,-0.01999250426888466,-0.01999250426888466,0,0,0.01999250426888466,0,-0.2399100512266159,-0.03498688340187073,0,0.059977512806653976,0.01999250426888466,0,0,-0.01999250426888466,0,0.03998500853776932,0.03498688340187073,0,-0.01999250426888466,0,0,0.11995502561330795,0.014994378201663494,0,-0.01999250426888466,-0.04498313367366791,0,0.059977512806653976,0.02499062940478325,0,-0.01999250426888466,-0.004998126067221165,0,0.01999250426888466,0,0,0,-0.00999625213444233,0,0,0,0,-0.01999250426888466,-0.06497564166784286,0,0.01999250426888466,0.00999625213444233,0,-0.059977512806653976,-0.00999625213444233,0,0.01999250426888466,0.014994378201663494,0,-0.199925035238266,-0.03498688340187073,0,0,0.03998500853776932,0,-0.11995502561330795,-0.0499812588095665,0,0.03998500853776932,0.0499812588095665,0,-0.01999250426888466,-0.01999250426888466,0,0.3398725688457489,0.014994378201663494,0,-0.03998500853776932,-0.03998500853776932,0,0.099962517619133,0.014994378201663494,0,0,-0.029988756403326988,0,0.01999250426888466,0.07497189193964005,0,-0.03998500853776932,-0.01999250426888466,0,0.01999250426888466,0.00999625213444233,0,-0.03998500853776932,-0.004998126067221165,0,0.2798950672149658,0.054979387670755386,0,-0.11995502561330795,-0.02499062940478325,0,0,0,0,0,-0.12495315074920654,0,0.01999250426888466,0.029988756403326988,0,-0.01999250426888466,-0.00999625213444233,0,0.059977512806653976,0.02499062940478325,0,0,-0.01999250426888466,0,0.1399475336074829,0.06997376680374146,0,-0.03998500853776932,-0.014994378201663494,0,0,0.03498688340187073,0,0,-0.00999625213444233,0,0.01999250426888466,0.014994378201663494,0,0,0,0,0.01999250426888466,0,0,-0.059977512806653976,-0.02499062940478325,0,0.07997001707553864,0.01999250426888466,0,0,-0.029988756403326988,0,0.059977512806653976,0.00999625213444233,0,-0.059977512806653976,-0.10496065020561218,0,0,0,0,-0.2798950672149658,-0.07497189193964005,0,0.099962517619133,0.02499062940478325,0,0,-0.014994378201663494,0,0.11995502561330795,0.17493441700935364,0,-0.01999250426888466,-0.02499062940478325,0,0.199925035238266,0.06497564166784286,0,0,-0.01999250426888466,0,0,0.02499062940478325,0,-0.099962517619133,-0.02499062940478325,0,0.03998500853776932,0.014994378201663494,0,-0.07997001707553864,-0.029988756403326988,0,0.099962517619133,0.1449456512928009,0,0,-0.07497189193964005,0,0.059977512806653976,0.03498688340187073,0,-0.059977512806653976,0,0,0.01999250426888466,0.00999625213444233,0,-0.01999250426888466,-0.00999625213444233,0,0,0.04498313367366791,0,0,-0.004998126067221165,0,0,0.06997376680374146,0,-0.1399475336074829,-0.07997001707553864,0,0,0.014994378201663494,0,0,0,0,0.01999250426888466,0.01999250426888466,0,-0.099962517619133,-0.004998126067221165,0,0.03998500853776932,0.03998500853776932,0,-0.03998500853776932,-0.03498688340187073,0,0.07997001707553864,0.054979387670755386,0,-0.03998500853776932,-0.004998126067221165,0,0.01999250426888466,0.03498688340187073,0,-0.07997001707553864,-0.029988756403326988,0,0.01999250426888466,0,0,0,-0.1449456512928009,0,0.01999250426888466,0.054979387670755386,0,-0.07997001707553864,-0.014994378201663494,0,0.03998500853776932,0.06497564166784286,0,-0.01999250426888466,-0.059977512806653976,0,0.099962517619133,0.099962517619133,0,-0.059977512806653976,-0.029988756403326988,0,0,0.00999625213444233,0,-0.01999250426888466,-0.054979387670755386,0,0,0.10496065020561218,0,-0.03998500853776932,-0.0499812588095665,0,0.01999250426888466,0.07497189193964005,0,-0.03998500853776932,0,0,0.03998500853776932,0.03498688340187073,0,-0.01999250426888466,-0.03998500853776932,0,0.01999250426888466,0.014994378201663494,0,0,-0.01999250426888466,0,0.01999250426888466,0.06997376680374146,0,0,-0.029988756403326988,0,0,0,0,-0.059977512806653976,-0.06997376680374146,0,0.03998500853776932,0.004998126067221165,0,0,-0.004998126067221165,0,0,0.02499062940478325,0,-0.01999250426888466,-0.0499812588095665,0,0,0.054979387670755386,0,-0.059977512806653976,-0.029988756403326988,0,0.01999250426888466,0.03998500853776932,0,-0.01999250426888466,-0.01999250426888466,0,0.01999250426888466,0.014994378201663494,0,-0.01999250426888466,-0.03998500853776932,0,0.059977512806653976,0.014994378201663494,0,-0.07997001707553864,-0.014994378201663494,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#POKE-2235OPEN-14CMD-1LIST -->\nPOKE 22,35:OPEN 1,4:CMD 1:LIST\n\nwird der Text ohne Zeilennummern ausgedruckt. Sie k√∂nnen ihn vorher nach \n                     Belieben ver√§ndern.\n\nWie gesagt, nur nicht mit RUN starten, denn das bringt unweigerlich eine \n                     Fehlermeldung.\n\n$0017-$0018          Zeiger auf die Adresse der letzten Zeichenkette im ¬ªTemporary String Stack¬´\n\nDer Inhalt dieser 2 Byte zeigt auf den zuletzt benutzten Speicherplatz \n                     Innerhalb der Adresse 22 bis 33. Das hei√üt, da√ü der Wert in 23 ($0017) immer um 3 \n                     kleiner ist als der in 22 ($0016), w√§hrend der Wert in 24 ($0018) eine Null ist.\n\n$0019-$0021          Stapelspeicher f√ºr Angaben √ºber vorl√§ufige Zeichenketten\n\nDas ist also der Speicherbereich, von dem in den beiden vorigen Abschnitten \n                     dauernd die Rede war. Ich gebe zu, ¬ªDescriptor Stack for Temporary Strings¬´ \n                     dr√ºckt die Sache pr√§ziser aus als der deutsche Text.\n\nDie Bedeutung eines ¬ªvorl√§ufigen¬´ Strings habe ich oben in der Beschreibung der \n                     Speicherzelle 22 erkl√§rt.\n\nWas ein Stapelspeicher (Stack) ist, entnehmen Sie bitte dem Texteinschub 6. \n                     Jeder der 3 Byte langen Angaben im Stack von 22 bis 33 enth√§lt die L√§nge sowie \n                     die Anfangs- und Endadressen eines vorl√§ufigen Strings, ausgedruckt als \n                     Verschiebung im Basic-Speicherbereich.\n\n$0022-$0025          Verschiedene Zwischenspeicher","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem/c64mem_64er.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#POKE-2235OPEN-14CMD-1LIST"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","language":"asm","vector":[0.027282629162073135,0.006820657290518284,0,-0.013641314581036568,0,0,0,0.017051642760634422,0,0,-0.003410328645259142,0,0.027282629162073135,0.020461970940232277,0,-0.06820657104253769,-0.010230985470116138,0,0.027282629162073135,0.013641314581036568,0,0,-0.02387230098247528,0,0.013641314581036568,0.027282629162073135,0,-0.040923941880464554,-0.034103285521268845,0,0,0.034103285521268845,0,-0.013641314581036568,0,0,0.013641314581036568,0.006820657290518284,0,-0.08184788376092911,-0.013641314581036568,0,0,0.010230985470116138,0,0,-0.003410328645259142,0,0,0.017051642760634422,0,-0.013641314581036568,-0.006820657290518284,0,0.013641314581036568,0.003410328645259142,0,0,-0.013641314581036568,0,0.027282629162073135,0.020461970940232277,0,0,-0.017051642760634422,0,0,0.017051642760634422,0,0,-0.027282629162073135,0,0.040923941880464554,0,0,-0.013641314581036568,-0.020461970940232277,0,0.06820657104253769,0.020461970940232277,0,-0.040923941880464554,-0.0375136137008667,0,0.027282629162073135,0.020461970940232277,0,-0.21826103329658508,-0.006820657290518284,0,0,0.017051642760634422,0,-0.05456525832414627,-0.02387230098247528,0,0.05456525832414627,0.02387230098247528,0,0,-0.006820657290518284,0,0.6820657253265381,0,0,-0.027282629162073135,-0.010230985470116138,0,0.013641314581036568,0.017051642760634422,0,-0.027282629162073135,-0.09207887202501297,0,0.05456525832414627,0.013641314581036568,0,0,0,0,0.013641314581036568,0.010230985470116138,0,-0.013641314581036568,-0.020461970940232277,0,0.13641314208507538,0.010230985470116138,0,-0.13641314208507538,-0.006820657290518284,0,0.05456525832414627,0.006820657290518284,0,-0.027282629162073135,-0.051154930144548416,0,0.013641314581036568,0.006820657290518284,0,-0.06820657104253769,-0.017051642760634422,0,0,0.003410328645259142,0,0,-0.006820657290518284,0,0.10913051664829254,0.006820657290518284,0,0,-0.003410328645259142,0,0.027282629162073135,0.013641314581036568,0,-0.013641314581036568,0,0,0,0.003410328645259142,0,0,0,0,0,0.020461970940232277,0,-0.040923941880464554,-0.013641314581036568,0,0.027282629162073135,0.04433427378535271,0,0,-0.02387230098247528,0,0.040923941880464554,0.020461970940232277,0,-0.013641314581036568,-0.12277182936668396,0,0,0,0,-0.040923941880464554,-0.03069295734167099,0,0.05456525832414627,0.03069295734167099,0,-0.013641314581036568,-0.010230985470116138,0,0.05456525832414627,0.3512638509273529,0,0,-0.017051642760634422,0,0.10913051664829254,0.013641314581036568,0,0,-0.020461970940232277,0,0.027282629162073135,0.034103285521268845,0,-0.027282629162073135,-0.003410328645259142,0,0.040923941880464554,0.006820657290518284,0,-0.013641314581036568,-0.006820657290518284,0,0.040923941880464554,0.0750272274017334,0,-0.027282629162073135,-0.08525821566581726,0,0.013641314581036568,0.034103285521268845,0,0,-0.013641314581036568,0,0,0.010230985470116138,0,-0.040923941880464554,-0.04433427378535271,0,0.013641314581036568,0,0,0,-0.003410328645259142,0,0,0.057975586503744125,0,-0.05456525832414627,-0.020461970940232277,0,0.05456525832414627,0.013641314581036568,0,-0.06820657104253769,-0.006820657290518284,0,0,0,0,0,-0.003410328645259142,0,0.013641314581036568,0.003410328645259142,0,-0.040923941880464554,-0.020461970940232277,0,0.040923941880464554,0.020461970940232277,0,0,0,0,0,0.020461970940232277,0,-0.040923941880464554,-0.006820657290518284,0,0.013641314581036568,0.010230985470116138,0,-0.2319023460149765,-0.02387230098247528,0,0,0.04433427378535271,0,0,-0.017051642760634422,0,0.013641314581036568,0.034103285521268845,0,0,-0.05456525832414627,0,0.040923941880464554,0.05456525832414627,0,0,-0.013641314581036568,0,0,0.027282629162073135,0,-0.040923941880464554,-0.013641314581036568,0,0.027282629162073135,0.19097840785980225,0,-0.06820657104253769,-0.013641314581036568,0,0.013641314581036568,0.02387230098247528,0,0,-0.020461970940232277,0,0,0.020461970940232277,0,-0.013641314581036568,0,0,0,0.003410328645259142,0,0,-0.02387230098247528,0,0.013641314581036568,0.040923941880464554,0,0,-0.034103285521268845,0,0,0.013641314581036568,0,-0.027282629162073135,-0.034103285521268845,0,0.040923941880464554,0.03069295734167099,0,-0.013641314581036568,-0.051154930144548416,0,0.027282629162073135,0,0,-0.05456525832414627,0,0,0,0.034103285521268845,0,-0.013641314581036568,-0.020461970940232277,0,0.013641314581036568,0.027282629162073135,0,-0.040923941880464554,-0.003410328645259142,0,0.040923941880464554,0,0,-0.013641314581036568,-0.020461970940232277,0,0.027282629162073135,0.006820657290518284,0,-0.027282629162073135,-0.12618215382099152,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#POKE-2235OPEN-14CMD-1LIST-2 -->\nDiese vier Speicherzellen werden vom Basic-√úbersetzer (Interpreter) f√ºr \n                     verschiedene Zwischenergebnisse und Flaggen benutzt, die aber dem Programmierer \n                     nichts nutzen.\n\n$0026-$002A          Arbeitsspeicher f√ºr arithmetische Operationen\n\nDiese Speicherzellen werden von den Basic-Routinen bei der Multiplikation und \n                     Division als ¬ªNotizblatt¬´ verwendet. Auch die Routinen, welche die \n                     erforderliche Speichergr√∂√üe beim Definieren eines Zahlenfeldes (Array) \n                     ausrechnen, benutzen diesen Bereich.\n\n$002B-$002C          Zeiger auf den Anfang der Basic-Programme im Speicher\n\nDieser Zeiger, in der Low-/High-Byte-Darstellung, gibt dem Basic-√úbersetzer an, \n                     ab welcher Speicherzelle das Basic-Programm beginnt. Normalerweise ist diese \n                     Adresse fest vorgegeben. Beim C 64 zum Beispiel zeigt der Zeiger auf 2049 \n                     ($0801). Beim VC 20 ist die Lage schon schwieriger, denn der Speicherbeginn \n                     h√§ngt davon ab, welche Speichererweiterung eingesetzt ist. Die folgende Tabelle \n                     3 gibt dar√ºber Auskunft.\n\nTabelle 3: Beginn des Programmspeichers\n\n| C 64          | 2049 ($0801) |\n                     |---------------|--------------|\n                     | VC 20 (GV)    | 4097 ($1001) |\n                     | VC 20 (+3 K)  | 1025 ($0401) |\n                     | VC 20 (+ 8 K) | 4609 ($1201) |\n\nMit dem Befehl","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem/c64mem_64er.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#POKE-2235OPEN-14CMD-1LIST-2"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","language":"asm","vector":[0.024847116321325302,0.012423558160662651,0,-0.024847116321325302,-0.012423558160662651,0,0.049694232642650604,0.0745413526892662,0,0,-0.055906012654304504,0,0.049694232642650604,0.0372706763446331,0,-0.024847116321325302,-0.01863533817231655,0,0.024847116321325302,0.062117792665958405,0,0,-0.01863533817231655,0,0.024847116321325302,0.055906012654304504,0,-0.09938846528530121,-0.012423558160662651,0,0,0.0807531327009201,0,-0.024847116321325302,-0.0062117790803313255,0,0.024847116321325302,0.031058896332979202,0,-0.0745413526892662,-0.043482456356287,0,0.024847116321325302,0.0745413526892662,0,0,-0.0062117790803313255,0,0,0.062117792665958405,0,0,-0.0372706763446331,0,0.09938846528530121,0.012423558160662651,0,-0.049694232642650604,-0.0745413526892662,0,0.09938846528530121,0.012423558160662651,0,-0.024847116321325302,0,0,0,0,0,0,-0.012423558160662651,0,0.024847116321325302,0.0062117790803313255,0,-0.024847116321325302,-0.0372706763446331,0,0.0745413526892662,0.012423558160662651,0,-0.0745413526892662,-0.024847116321325302,0,0,0.012423558160662651,0,-0.24847117066383362,-0.062117792665958405,0,0,0.024847116321325302,0,-0.0745413526892662,-0.012423558160662651,0,0.049694232642650604,0.012423558160662651,0,0,-0.024847116321325302,0,0.39755386114120483,0.024847116321325302,0,-0.024847116321325302,0,0,0.0745413526892662,0.043482456356287,0,0,-0.01863533817231655,0,0.09938846528530121,0.012423558160662651,0,-0.024847116321325302,-0.0062117790803313255,0,0,0.0372706763446331,0,-0.09938846528530121,-0.0745413526892662,0,0.2981654107570648,0.01863533817231655,0,-0.12423558533191681,-0.012423558160662651,0,0,0.024847116321325302,0,-0.09938846528530121,-0.043482456356287,0,0.024847116321325302,0.031058896332979202,0,-0.024847116321325302,-0.0062117790803313255,0,0.0745413526892662,0.012423558160662651,0,0,0,0,0.12423558533191681,0.062117792665958405,0,0,-0.0372706763446331,0,0,0.0807531327009201,0,-0.024847116321325302,-0.012423558160662651,0,0.024847116321325302,0.012423558160662651,0,0,-0.012423558160662651,0,0.049694232642650604,0.01863533817231655,0,-0.0745413526892662,-0.043482456356287,0,0.049694232642650604,0.043482456356287,0,0,-0.0372706763446331,0,0.09938846528530121,0,0,-0.024847116321325302,-0.1304473578929901,0,0,0,0,-0.0745413526892662,-0.043482456356287,0,0.1490827053785324,0.031058896332979202,0,-0.024847116321325302,-0.012423558160662651,0,0.0745413526892662,0.20498871803283691,0,0,-0.0372706763446331,0,0.22362405061721802,0.049694232642650604,0,-0.024847116321325302,-0.0062117790803313255,0,0.024847116321325302,0.055906012654304504,0,-0.0745413526892662,-0.01863533817231655,0,0.049694232642650604,0.012423558160662651,0,-0.024847116321325302,-0.049694232642650604,0,0.1490827053785324,0.1615062654018402,0,-0.049694232642650604,-0.0683295726776123,0,0,0.0062117790803313255,0,-0.049694232642650604,-0.049694232642650604,0,0,0.01863533817231655,0,0,-0.0372706763446331,0,0,0.0372706763446331,0,0,-0.0062117790803313255,0,0.024847116321325302,0.0683295726776123,0,-0.09938846528530121,-0.01863533817231655,0,0,0.0062117790803313255,0,0,-0.012423558160662651,0,0,0.012423558160662651,0,-0.049694232642650604,0,0,0,0.049694232642650604,0,0,-0.049694232642650604,0,0,0.049694232642650604,0,-0.049694232642650604,-0.0062117790803313255,0,0,0.049694232642650604,0,0,-0.012423558160662651,0,0.0745413526892662,0.0062117790803313255,0,-0.024847116321325302,-0.043482456356287,0,0,0.09317668527364731,0,-0.024847116321325302,-0.031058896332979202,0,0.09938846528530121,0.0372706763446331,0,-0.09938846528530121,-0.062117792665958405,0,0.0745413526892662,0.11181202530860901,0,0,-0.031058896332979202,0,0.049694232642650604,0.024847116321325302,0,-0.024847116321325302,-0.0372706763446331,0,0.0745413526892662,0.12423558533191681,0,-0.024847116321325302,-0.01863533817231655,0,0.049694232642650604,0.09317668527364731,0,0,-0.024847116321325302,0,0.049694232642650604,0.024847116321325302,0,-0.049694232642650604,-0.031058896332979202,0,0.12423558533191681,0,0,0,-0.024847116321325302,0,0.049694232642650604,0.0745413526892662,0,-0.049694232642650604,-0.031058896332979202,0,0.024847116321325302,0.012423558160662651,0,-0.12423558533191681,-0.0745413526892662,0,0.024847116321325302,0.0062117790803313255,0,0,-0.0062117790803313255,0,0,0.01863533817231655,0,-0.024847116321325302,-0.024847116321325302,0,0,0.031058896332979202,0,-0.024847116321325302,0,0,0.024847116321325302,0,0,-0.049694232642650604,-0.031058896332979202,0,0.024847116321325302,0.0062117790803313255,0,-0.09938846528530121,0,0,0.049694232642650604,0.049694232642650604,0,-0.024847116321325302,-0.031058896332979202,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#DEF-FNAAX-7 -->\n$006F                Flagge f√ºr Vorzeichenvergleich der Gleitkomma-Akkumulatoren Nr. 1 und Nr. 2\n\nWenn die Zahl in beiden Akkumulatoren gleiche Vorzeichen hat, steht in \n                     Speicherzelle 111 eine 0, bei verschiedenen Vorzeichen eine 255.\n\n$0070                Rundungsspeicher des Gleitkomma-Akkumulators Nr. 1\n\nEs kann vorkommen, da√ü die Mantisse einer Gleitkommazahl mehr Stellen hat, als \n                     mit den vier Mantissen-Bytes des Akkumulators Nr. 1 (Zelle 97 bis 102) \n                     dargestellt werden k√∂nnen. In diesem Fall werden die hintersten, das hei√üt die \n                     unwichtigsten Stellen hinter dem Komma in der Zelle 112 abgelegt. Von dort \n                     werden sie geholt, um die Genauigkeit von mathematischen Operationen zu erh√∂hen \n                     und auch um Endresultate abrunden zu k√∂nnen.\n\n$0071-$0072          Zwischenspeicher f√ºr verschiedene Routinen\n\nDiese Speicherzellen werden von sehr vielen Routinen des √úbersetzers und des \n                     Betriebssystems, wie zum Beispiel Zeichenkettenverarbeitung, interne Uhr (TI$), \n                     Bestimmung der Gr√∂√üe von Feldern (Arrays) und etlichen anderen verwendet.\n\n$0073-$008A          Teilprogramm ¬ªN√§chstes Zeichen eines Basic-Textes holen¬´ (CHRGET-Routine)","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem/c64mem_64er.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#DEF-FNAAX-7"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","language":"asm","vector":[0.0627250075340271,0.020908335223793983,0,-0.020908335223793983,0,0,0.08363334089517593,0.020908335223793983,0,-0.020908335223793983,-0.015681251883506775,0,0.0627250075340271,0.03658958524465561,0,-0.04181667044758797,-0.05749792233109474,0,0.04181667044758797,0.052270837128162384,0,0,0,0,0.0627250075340271,0.08363334089517593,0,-0.04181667044758797,-0.026135418564081192,0,0.0627250075340271,0.07317917048931122,0,-0.020908335223793983,-0.015681251883506775,0,0,0.010454167611896992,0,-0.1254500150680542,-0.020908335223793983,0,0.020908335223793983,0.08363334089517593,0,0,-0.015681251883506775,0,0.04181667044758797,0.04181667044758797,0,0,0,0,0.0627250075340271,0,0,-0.22999168932437897,-0.08363334089517593,0,0.08363334089517593,0.015681251883506775,0,-0.0627250075340271,0,0,0,0.010454167611896992,0,0,-0.010454167611896992,0,0.0627250075340271,0.015681251883506775,0,-0.020908335223793983,-0.04181667044758797,0,0.1254500150680542,0.03136250376701355,0,-0.04181667044758797,-0.005227083805948496,0,0.020908335223793983,0.005227083805948496,0,-0.08363334089517593,-0.04181667044758797,0,0.04181667044758797,0.04181667044758797,0,-0.1254500150680542,-0.047043751925230026,0,0.020908335223793983,0.03136250376701355,0,-0.020908335223793983,-0.010454167611896992,0,0.39725837111473083,0.04181667044758797,0,-0.020908335223793983,-0.010454167611896992,0,0.020908335223793983,0.052270837128162384,0,0,-0.026135418564081192,0,0.1254500150680542,0.020908335223793983,0,-0.020908335223793983,0,0,0,0.03658958524465561,0,-0.0627250075340271,-0.026135418564081192,0,0.22999168932437897,0.047043751925230026,0,-0.020908335223793983,-0.020908335223793983,0,0.020908335223793983,0.005227083805948496,0,-0.04181667044758797,-0.0627250075340271,0,0,0.03136250376701355,0,-0.04181667044758797,-0.010454167611896992,0,0.04181667044758797,0.026135418564081192,0,0,-0.005227083805948496,0,0.14635834097862244,0.03136250376701355,0,-0.020908335223793983,-0.1254500150680542,0,0,0.07840625941753387,0,0,-0.03136250376701355,0,0,0.010454167611896992,0,0,0,0,0,0.03136250376701355,0,0,-0.03658958524465561,0,0.08363334089517593,0.06795208901166916,0,0,-0.020908335223793983,0,0.04181667044758797,0.015681251883506775,0,-0.020908335223793983,-0.047043751925230026,0,0.020908335223793983,0.026135418564081192,0,-0.14635834097862244,-0.0627250075340271,0,0.16726668179035187,0.026135418564081192,0,0,-0.010454167611896992,0,0.16726668179035187,0.19862918555736542,0,-0.020908335223793983,-0.026135418564081192,0,0.2509000301361084,0.03136250376701355,0,-0.020908335223793983,-0.020908335223793983,0,0.04181667044758797,0.07840625941753387,0,0,-0.015681251883506775,0,0.04181667044758797,0.020908335223793983,0,-0.0627250075340271,-0.03658958524465561,0,0.08363334089517593,0.13067708909511566,0,0,-0.020908335223793983,0,0,0.020908335223793983,0,-0.1254500150680542,-0.020908335223793983,0,0.020908335223793983,0.015681251883506775,0,0,-0.03136250376701355,0,0,0.03658958524465561,0,0,-0.005227083805948496,0,0.020908335223793983,0.07317917048931122,0,-0.16726668179035187,-0.04181667044758797,0,0,0.005227083805948496,0,-0.020908335223793983,0,0,0.020908335223793983,0.010454167611896992,0,-0.04181667044758797,0,0,0,0.015681251883506775,0,-0.020908335223793983,-0.05749792233109474,0,0,0.0627250075340271,0,0,-0.015681251883506775,0,0,0.020908335223793983,0,0,-0.010454167611896992,0,0.08363334089517593,0.026135418564081192,0,-0.020908335223793983,-0.07840625941753387,0,0,0.11499584466218948,0,0,-0.010454167611896992,0,0.020908335223793983,0.088860422372818,0,-0.020908335223793983,-0.03136250376701355,0,0.0627250075340271,0.13590417802333832,0,-0.04181667044758797,-0.04181667044758797,0,0.020908335223793983,0.026135418564081192,0,0,-0.005227083805948496,0,0.08363334089517593,0.12022292613983154,0,-0.04181667044758797,-0.03658958524465561,0,0.020908335223793983,0.047043751925230026,0,-0.020908335223793983,0,0,0,0.03136250376701355,0,-0.04181667044758797,-0.06795208901166916,0,0.14635834097862244,0.010454167611896992,0,0,-0.015681251883506775,0,0.04181667044758797,0.05749792233109474,0,0,-0.005227083805948496,0,0,0.015681251883506775,0,-0.10454167425632477,-0.09408750385046005,0,0.020908335223793983,0,0,0,-0.020908335223793983,0,0.020908335223793983,0.020908335223793983,0,-0.020908335223793983,-0.020908335223793983,0,0.020908335223793983,0.03658958524465561,0,0,-0.015681251883506775,0,0.0627250075340271,0,0,0,0,0,0,0,0,-0.0627250075340271,0,0,0.08363334089517593,0.04181667044758797,0,-0.08363334089517593,-0.010454167611896992,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#FOR-X139-TO-143PRINT-PEEKXNEXT-4 -->\n$0092                Zeltkonstante beim Lesen vom Band\n\nDie Speicherzelle enth√§lt eine vom Betriebssystem einstellbare Zahl, welche die \n                     kleinen Unterschiede in der Aufnahmegeschwindigkeit ausgleicht, die bei \n                     verschiedenen Datasetten vorkommen k√∂nnen.\n\nDiese Zeitkonstante steht im Zusammenhang mit der Zahl, die in den \n                     Speicherzellen 176 und 177 steht.\n\nEine Ver√§nderung der Konstante in Basic ist nicht m√∂glich.\n\n$0093                Flagge f√ºr LOAD oder VERIFY\n\nDiese Flagge dient dem Betriebssystem, um zu unterscheiden, ob eine LOAD-\n                     Operation nur LOADen oder aber VERIFYen soll.\n\nSie ist identisch mit der Flagge des Basic-√úbersetzers in Speicherzelle 10. \n                     Genauere Hinweise bitte ich der Beschreibung von Zelle 10 zu entnehmen.\n\n$0094                Flagge f√ºr Floppy/Drucker-Ausgang\n\nDas Betriebssystem benutzt diese Speicherzelle, um anzuzeigen, da√ü ein Zeichen \n                     im Ausgabepuffer steht, welches zum Floppy-Ger√§t oder zum Drucker geleitet \n                     werden soll. Diese Flagge setzt alle am seriellen Port angeschlossenen Ger√§te \n                     in den Zustand ¬ªListen¬´, das hei√üt bereit zu sein, Daten aufzunehmen.\n\n$0095                Zeichen im Ausgabepuffer\n\nIn dieser Speicherzelle wird das Zeichen abgelegt, welches als n√§chstes √ºber \n                     den Serial-Port zum Floppy-Ger√§t oder zum Drucker transportiert wird, sobald \n                     die Flagge in 148 die Bereitschaft anzeigt.","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem/c64mem_64er.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#FOR-X139-TO-143PRINT-PEEKXNEXT-4"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","language":"asm","vector":[0,0.013675411231815815,0,0,-0.004558470565825701,0,0.036467764526605606,0.036467764526605606,0,0,-0.03190929442644119,0,0.10940328985452652,0.07749399542808533,0,-0.036467764526605606,-0.04558470472693443,0,0.05470164492726326,0.0683770552277565,0,-0.036467764526605606,0,0,0.036467764526605606,0.0683770552277565,0,-0.05470164492726326,0,0,0.018233882263302803,0.08661093562841415,0,0,-0.022792352363467216,0,0.018233882263302803,0,0,-0.05470164492726326,-0.009116941131651402,0,0.036467764526605606,0.036467764526605606,0,-0.018233882263302803,-0.018233882263302803,0,0,0.04102623462677002,0,0,-0.004558470565825701,0,0.036467764526605606,0,0,-0.05470164492726326,-0.03190929442644119,0,0.05470164492726326,0.013675411231815815,0,-0.036467764526605606,-0.004558470565825701,0,0,0,0,0,0,0,0.018233882263302803,0.004558470565825701,0,-0.05470164492726326,-0.05470164492726326,0,0.07293552905321121,0.004558470565825701,0,-0.07293552905321121,-0.004558470565825701,0,0.018233882263302803,0.004558470565825701,0,-0.16410493850708008,-0.022792352363467216,0,0.018233882263302803,0.013675411231815815,0,-0.12763717770576477,-0.036467764526605606,0,0.036467764526605606,0.009116941131651402,0,0,-0.009116941131651402,0,0.547016441822052,0.018233882263302803,0,-0.018233882263302803,-0.018233882263302803,0,0.018233882263302803,0.0683770552277565,0,0,-0.018233882263302803,0,0.09116940945386887,0.02735082246363163,0,-0.018233882263302803,-0.018233882263302803,0,0.018233882263302803,0.02735082246363163,0,0,-0.03190929442644119,0,0.16410493850708008,0.03190929442644119,0,-0.018233882263302803,-0.009116941131651402,0,0,0.022792352363467216,0,-0.018233882263302803,-0.02735082246363163,0,0.018233882263302803,0.036467764526605606,0,0,-0.009116941131651402,0,0.12763717770576477,0.013675411231815815,0,-0.018233882263302803,-0.004558470565825701,0,0.12763717770576477,0.018233882263302803,0,0,-0.02735082246363163,0,0,0.036467764526605606,0,0,-0.022792352363467216,0,0,0,0,0,0,0,0.018233882263302803,0.009116941131651402,0,0,-0.04102623462677002,0,0.05470164492726326,0.04102623462677002,0,-0.018233882263302803,-0.036467764526605606,0,0.07293552905321121,0.009116941131651402,0,-0.09116940945386887,-0.08205246925354004,0,0.12763717770576477,0.009116941131651402,0,-0.10940328985452652,-0.07293552905321121,0,0.16410493850708008,0.018233882263302803,0,0,0,0,0.12763717770576477,0.273508220911026,0,0,-0.018233882263302803,0,0.2370404601097107,0.013675411231815815,0,-0.05470164492726326,-0.009116941131651402,0,0,0.04558470472693443,0,-0.036467764526605606,-0.009116941131651402,0,0.07293552905321121,0.018233882263302803,0,-0.036467764526605606,0,0,0.16410493850708008,0.10940328985452652,0,-0.018233882263302803,-0.018233882263302803,0,0,0.013675411231815815,0,-0.018233882263302803,-0.018233882263302803,0,0.018233882263302803,0.018233882263302803,0,-0.018233882263302803,-0.013675411231815815,0,0,0.0683770552277565,0,0,-0.009116941131651402,0,0.018233882263302803,0.0683770552277565,0,-0.14587105810642242,-0.013675411231815815,0,0.018233882263302803,0.009116941131651402,0,-0.018233882263302803,-0.004558470565825701,0,0.018233882263302803,0,0,-0.018233882263302803,0,0,0.018233882263302803,0.018233882263302803,0,-0.07293552905321121,-0.013675411231815815,0,0.036467764526605606,0.04102623462677002,0,-0.036467764526605606,-0.018233882263302803,0,0,0.036467764526605606,0,-0.07293552905321121,-0.04558470472693443,0,0.05470164492726326,0.0683770552277565,0,0,-0.0683770552277565,0,0,0.10028634965419769,0,0,-0.018233882263302803,0,0.036467764526605606,0.0683770552277565,0,-0.018233882263302803,-0.04102623462677002,0,0.09116940945386887,0.12307870388031006,0,-0.036467764526605606,-0.05926011502742767,0,0.05470164492726326,0.009116941131651402,0,0,-0.018233882263302803,0,0.07293552905321121,0.1732218712568283,0,0,-0.022792352363467216,0,0.05470164492726326,0.08661093562841415,0,-0.018233882263302803,-0.009116941131651402,0,0,0.022792352363467216,0,0,-0.013675411231815815,0,0.036467764526605606,0.013675411231815815,0,-0.018233882263302803,-0.009116941131651402,0,0,0.04102623462677002,0,0,-0.004558470565825701,0,0,0.009116941131651402,0,-0.05470164492726326,-0.07749399542808533,0,0.018233882263302803,0.013675411231815815,0,0,-0.009116941131651402,0,0,0.04102623462677002,0,0,-0.013675411231815815,0,0,0.04102623462677002,0,-0.036467764526605606,-0.036467764526605606,0,0,0.018233882263302803,0,0,-0.018233882263302803,0,0,0,0,-0.036467764526605606,-0.036467764526605606,0,0.018233882263302803,0.03190929442644119,0,-0.036467764526605606,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#5-POKE-16079POKE-16125POKE-1620-3 -->\n$00A8                Bitz√§hler f√ºr RS232-Eingabe und bei Band-Ein-/Ausgabe\n\nDie Speicherzelle 168 wird als Z√§hler verwendet, der dies mal nicht die Bytes, \n                     sondern die Anzahl der Bits z√§hlt, die sowohl √ºber den User-Port als auch √ºber \n                     den Kassetten-Port geleitet werden. Das dient dem Betriebssystem dazu, zu \n                     wissen, wann ein volles Wort abgearbeitet worden ist.\n\n$00A9                RS232-Flagge f√ºr Startbit-Pr√ºfung\n\nEin RS232-Datentransfer pr√ºft, ob ein Start-Bit empfangen worden ist. Im \n                     positiven Fall steht in Zelle 169 die Zahl 144, im negativen Fall eine 0.\n\n$00AA                RS232-Eingabe- und Zwischenspeicher f√ºr Kassetten-Routinen\n\nBei der Speicherzelle 165 haben wir gesehen, da√ü ein Band Synchronisationsbits \n                     enth√§lt. Die Speicherzelle 170 wird dabei als Flagge benutzt, die angibt, ob \n                     ein gelesenes Zeichen Synchronisierungs-Bits oder ein Datenwort darstellt.\n\nDie RS232-Routinen verwenden Zelle 17 0 dagegen als Speicher, in welchem die \n                     eingelesenen Bits zu einem Byte zusammengefa√üt werden, bevor sie im \n                     Eingabepuffer am oberen Ende des Programmspeichers abgelegt werden (siehe auch \n                     Speicherzellen 55/56).\n\n$00AB                Quersummenpr√ºfung und Z√§hler f√ºr Band-Header bei RS232- und \n                     Kassetten-Operationen","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem/c64mem_64er.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#5-POKE-16079POKE-16125POKE-1620-3"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","language":"asm","vector":[0.10308593511581421,0.0051542967557907104,0,-0.020617187023162842,-0.010308593511581421,0,0.12370312213897705,0.051542967557907104,0,0,-0.0051542967557907104,0,0.10308593511581421,0.07216015458106995,0,-0.041234374046325684,-0.046388670802116394,0,0.061851561069488525,0.03608007729053497,0,-0.020617187023162842,-0.0051542967557907104,0,0.041234374046325684,0.030925780534744263,0,-0.08246874809265137,-0.0051542967557907104,0,0.020617187023162842,0.056697264313697815,0,0,-0.010308593511581421,0,0,0.010308593511581421,0,-0.10308593511581421,-0.020617187023162842,0,0.020617187023162842,0.03608007729053497,0,0,-0.010308593511581421,0,0,0.08762304484844208,0,0,-0.0051542967557907104,0,0.020617187023162842,0.010308593511581421,0,-0.08246874809265137,0,0,0.041234374046325684,0,0,-0.020617187023162842,-0.015462890267372131,0,0.020617187023162842,0.03608007729053497,0,0,-0.010308593511581421,0,0.041234374046325684,0.015462890267372131,0,-0.041234374046325684,-0.051542967557907104,0,0.12370312213897705,0.015462890267372131,0,-0.020617187023162842,-0.010308593511581421,0,0,0.030925780534744263,0,-0.18555468320846558,-0.010308593511581421,0,0.020617187023162842,0.025771483778953552,0,-0.08246874809265137,-0.025771483778953552,0,0.12370312213897705,0.08246874809265137,0,0,-0.030925780534744263,0,0.4948124885559082,0.061851561069488525,0,-0.020617187023162842,-0.0051542967557907104,0,0.061851561069488525,0.07216015458106995,0,-0.061851561069488525,-0.025771483778953552,0,0.061851561069488525,0.030925780534744263,0,-0.061851561069488525,-0.010308593511581421,0,0,0.03608007729053497,0,0,-0.041234374046325684,0,0.22678905725479126,0.03608007729053497,0,-0.020617187023162842,-0.010308593511581421,0,0.020617187023162842,0.0051542967557907104,0,-0.12370312213897705,-0.051542967557907104,0,0,0.020617187023162842,0,-0.020617187023162842,0,0,0.020617187023162842,0.0051542967557907104,0,0,0,0,0.1443203091621399,0.010308593511581421,0,-0.020617187023162842,-0.051542967557907104,0,0.020617187023162842,0.030925780534744263,0,0,-0.010308593511581421,0,0,0.03608007729053497,0,0,0,0,0.020617187023162842,0.025771483778953552,0,0,-0.020617187023162842,0,0.020617187023162842,0.061851561069488525,0,-0.041234374046325684,-0.015462890267372131,0,0.08246874809265137,0.015462890267372131,0,-0.020617187023162842,-0.0979316383600235,0,0.08246874809265137,0.015462890267372131,0,-0.10308593511581421,-0.051542967557907104,0,0.10308593511581421,0.06700585782527924,0,-0.020617187023162842,0,0,0.041234374046325684,0.2628691494464874,0,-0.020617187023162842,-0.015462890267372131,0,0.18555468320846558,0.03608007729053497,0,-0.041234374046325684,-0.03608007729053497,0,0.041234374046325684,0.056697264313697815,0,0,-0.03608007729053497,0,0.061851561069488525,0.030925780534744263,0,-0.041234374046325684,0,0,0.1443203091621399,0.13916601240634918,0,-0.020617187023162842,-0.020617187023162842,0,0,0.025771483778953552,0,0,-0.06700585782527924,0,0,0.010308593511581421,0,-0.020617187023162842,-0.030925780534744263,0,0.020617187023162842,0.015462890267372131,0,0,0,0,0.020617187023162842,0.07216015458106995,0,-0.12370312213897705,-0.03608007729053497,0,0.020617187023162842,0.015462890267372131,0,-0.041234374046325684,0,0,0,0,0,0,0,0,0.061851561069488525,0.015462890267372131,0,-0.061851561069488525,-0.020617187023162842,0,0.12370312213897705,0.020617187023162842,0,-0.08246874809265137,-0.025771483778953552,0,0,0.046388670802116394,0,-0.020617187023162842,-0.010308593511581421,0,0.08246874809265137,0.051542967557907104,0,-0.020617187023162842,-0.061851561069488525,0,0,0.08246874809265137,0,0,-0.015462890267372131,0,0.061851561069488525,0.020617187023162842,0,0,-0.056697264313697815,0,0.10308593511581421,0.0979316383600235,0,-0.041234374046325684,-0.041234374046325684,0,0.020617187023162842,0.051542967557907104,0,0,0,0,0.041234374046325684,0.1546289026737213,0,0,-0.025771483778953552,0,0.020617187023162842,0.08762304484844208,0,0,-0.025771483778953552,0,0,0.015462890267372131,0,-0.041234374046325684,-0.015462890267372131,0,0.041234374046325684,0,0,0,-0.010308593511581421,0,0.10308593511581421,0.06700585782527924,0,0,-0.0051542967557907104,0,0.020617187023162842,0.015462890267372131,0,0,-0.09277734160423279,0,0,0.010308593511581421,0,-0.020617187023162842,-0.025771483778953552,0,0.061851561069488525,0.0051542967557907104,0,-0.020617187023162842,0,0,0.020617187023162842,0.06700585782527924,0,-0.041234374046325684,-0.03608007729053497,0,0.020617187023162842,0.06700585782527924,0,0,-0.041234374046325684,0,0.061851561069488525,0,0,-0.020617187023162842,-0.010308593511581421,0,0.020617187023162842,0.046388670802116394,0,-0.020617187023162842,-0.010308593511581421,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#5-POKE-16079POKE-16125POKE-1620-5 -->\nDieser Zeiger kann sehr n√ºtzlich sein, um Programme entweder schon beim SAVEn \n                     oder aber erst beim LOADen gezielt auf andere als urspr√ºnglich verwendete \n                     Speicherbereiche zu bringen. Dazu sind aber noch einige andere Zellen \n                     notwendig, bis hin zu dem schon erw√§hnten Zeiger in 193 und 194.\n\n$00AE-$00AF          Zeiger auf die Endadresse f√ºr Ein-/Ausgabe, Zwischenspeicher f√ºr den \n                     Bildschirmeditor\n\nDieser Zeiger ist der Zwilling zu 172 und 173, nur zeigt er seinerseits auf die \n                     letzte Adresse des zu bewegenden Programms.\n\n$00B0-$00B1          Zeitkonstante\n\nDer Wert in dieser Speicherzelle wird verwendet, um die Zeitkonstante zum Lesen \n                     vom Band in der Zelle 146 einzustellen.\n\n$00B2-$00B3          Zeiger auf den Kassetten-Puffer\n\nBeim Einschalten des Computers werden diese Speicherzellen in Low-/High-Byte-\n                     Darstellung auf die Anfangsadresse des Kassetten-Puffers gesetzt. Beim VC 20 \n                     und C 64 ist dies die Adresse 828 ($033C).\n\nDurch Verbiegen dieses Zeigers kann der Kassettenpuffer auf beliebige Pl√§tze \n                     des Speichers, aber nicht unterhalb der Adresse 512 verschoben werden. Das kann \n                     durchaus sinnvoll sein, um im Kassettenpuffer abgelegte Maschinenprogramme vor \n                     √úberschreiben durch Kassettenoperationen zu sch√ºtzen.\n\n$00B4                RS232-Bit-Z√§hler und -Zwischenspeicher f√ºr Kassetten-Operationen","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem/c64mem_64er.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#5-POKE-16079POKE-16125POKE-1620-5"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","language":"asm","vector":[0.033967290073633194,0.008491822518408298,0,0,-0.012737734243273735,0,0.016983645036816597,0.033967290073633194,0,0,-0.0551968477666378,0,0.033967290073633194,0.016983645036816597,0,-0.016983645036816597,-0.0551968477666378,0,0.016983645036816597,0.09765595942735672,0,-0.033967290073633194,0,0,0.033967290073633194,0.05095093697309494,0,-0.033967290073633194,-0.059442758560180664,0,0,0.059442758560180664,0,-0.016983645036816597,-0.016983645036816597,0,0,0.008491822518408298,0,-0.06793458014726639,-0.012737734243273735,0,0.016983645036816597,0.033967290073633194,0,-0.016983645036816597,-0.02122955583035946,0,0,0.029721379280090332,0,-0.033967290073633194,-0.008491822518408298,0,0.033967290073633194,0.02547546848654747,0,-0.016983645036816597,-0.016983645036816597,0,0.033967290073633194,0.008491822518408298,0,-0.033967290073633194,-0.008491822518408298,0,0.016983645036816597,0.008491822518408298,0,-0.016983645036816597,-0.029721379280090332,0,0.016983645036816597,0.004245911259204149,0,0,-0.0551968477666378,0,0.033967290073633194,0.033967290073633194,0,-0.033967290073633194,-0.016983645036816597,0,0,0.008491822518408298,0,-0.18682008981704712,-0.02122955583035946,0,0.016983645036816597,0.04245911166071892,0,-0.06793458014726639,-0.02547546848654747,0,0.033967290073633194,0.059442758560180664,0,0,-0.008491822518408298,0,0.5434766411781311,0.008491822518408298,0,-0.033967290073633194,-0.008491822518408298,0,0.033967290073633194,0.02122955583035946,0,-0.016983645036816597,-0.02547546848654747,0,0.033967290073633194,0.012737734243273735,0,0,-0.02122955583035946,0,0.033967290073633194,0.029721379280090332,0,-0.05095093697309494,-0.029721379280090332,0,0.23777103424072266,0.004245911259204149,0,-0.11888551712036133,-0.016983645036816597,0,0.016983645036816597,0.029721379280090332,0,-0.016983645036816597,-0.033967290073633194,0,0,0.02122955583035946,0,-0.033967290073633194,-0.038213200867176056,0,0.06793458014726639,0.004245911259204149,0,-0.05095093697309494,-0.02122955583035946,0,0.13586916029453278,0.02122955583035946,0,0,-0.012737734243273735,0,0,0.02122955583035946,0,0,-0.02547546848654747,0,0,0.012737734243273735,0,0,-0.008491822518408298,0,0.016983645036816597,0.02122955583035946,0,0,-0.004245911259204149,0,0,0.02122955583035946,0,-0.016983645036816597,-0.02122955583035946,0,0.033967290073633194,0.004245911259204149,0,-0.11888551712036133,-0.10614778101444244,0,0.033967290073633194,0.008491822518408298,0,-0.15285280346870422,-0.04245911166071892,0,0.15285280346870422,0.029721379280090332,0,0,-0.008491822518408298,0,0.10190187394618988,0.2759842276573181,0,0,-0.02547546848654747,0,0.20380374789237976,0.038213200867176056,0,-0.033967290073633194,-0.016983645036816597,0,0,0.02547546848654747,0,-0.016983645036816597,0,0,0.10190187394618988,0.02122955583035946,0,-0.016983645036816597,-0.02547546848654747,0,0.08491822332143784,0.12737734615802765,0,-0.033967290073633194,-0.06368867307901382,0,0,0.012737734243273735,0,-0.033967290073633194,-0.016983645036816597,0,0,0.008491822518408298,0,0,-0.02547546848654747,0,0,0.033967290073633194,0,-0.016983645036816597,-0.029721379280090332,0,0.016983645036816597,0.06793458014726639,0,-0.15285280346870422,-0.016983645036816597,0,0.033967290073633194,0.004245911259204149,0,0,-0.004245911259204149,0,0,0,0,-0.016983645036816597,-0.008491822518408298,0,0,0.016983645036816597,0,-0.033967290073633194,-0.004245911259204149,0,0.16983644664287567,0.008491822518408298,0,-0.033967290073633194,-0.016983645036816597,0,0,0.02122955583035946,0,-0.033967290073633194,-0.06368867307901382,0,0.016983645036816597,0.02122955583035946,0,-0.06793458014726639,-0.07642640173435211,0,0.016983645036816597,0.08491822332143784,0,-0.016983645036816597,-0.008491822518408298,0,0.05095093697309494,0.05095093697309494,0,-0.05095093697309494,-0.04670502245426178,0,0.016983645036816597,0.10614778101444244,0,-0.033967290073633194,-0.033967290073633194,0,0.11888551712036133,0.008491822518408298,0,0,-0.008491822518408298,0,0.05095093697309494,0.18682008981704712,0,-0.11888551712036133,-0.016983645036816597,0,0.016983645036816597,0.05095093697309494,0,-0.016983645036816597,-0.02122955583035946,0,0.016983645036816597,0.008491822518408298,0,-0.016983645036816597,-0.016983645036816597,0,0.016983645036816597,0.008491822518408298,0,-0.033967290073633194,-0.012737734243273735,0,0.016983645036816597,0.059442758560180664,0,0,-0.038213200867176056,0,0.05095093697309494,0.012737734243273735,0,-0.016983645036816597,-0.08067231625318527,0,0.016983645036816597,0.016983645036816597,0,-0.016983645036816597,-0.008491822518408298,0,0.016983645036816597,0.016983645036816597,0,-0.05095093697309494,-0.02122955583035946,0,0,0.033967290073633194,0,-0.033967290073633194,-0.016983645036816597,0,0.05095093697309494,0.08491822332143784,0,-0.033967290073633194,-0.016983645036816597,0,0.016983645036816597,0,0,-0.033967290073633194,-0.016983645036816597,0,0.08491822332143784,0.012737734243273735,0,-0.033967290073633194,-0.033967290073633194,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#100-IF-PEEK673-AND-1-THEN-100-6 -->\n(Die n√§chsten 12 Speicherzellen enthalten 6 Vektoren, deren Bedeutung bei der \n                     √úbersetzung von Basic-Programmen im Texteinschub Nr. 31 ¬ªIndirekte Sprung-\n                     Vektoren¬´ n√§her erkl√§rt wird.)\n\n$0302-$0303          Vektor auf die Hauptroutine zur Ausf√ºhrung von Basic-Befehlen\n\nDieser Vektor zeigt auf die Adresse 42115 ($A483), beim VC 20 auf 50307 \n                     ($C483). Die dort beginnende Routine steuert den Direkt-Modus, indem sie \n                     entweder direkt eingegebene Befehle ausf√ºhrt oder mit Zeilennummer eingegebene \n                     Anweisungen speichert.\n\n$0304-$0305          Vektor auf die Basic-Routine, die ASCII-Text in Token umwandelt\n\nDieser Vektor zeigt auf 42364 ($A57C), beim VC 20 auf 50556 ($C57C). Dort \n                     beginnt eine Routine, die nach dem Dr√ºcken der RETURN-Taste alle Anweisungen \n                     der damit eingegebenen Zeile absucht und Text beziehungsweise W√∂rter, die nicht \n                     zwischen G√§nsef√º√üen stehen, als Basic-Befehle interpretiert und sie dann in \n                     sogenannte ¬ªToken¬´ umwandelt. Token sind Codezahlen, die im Computer anstelle \n                     von Textbefehlen verwendet werden. Sie sind im Texteinschub Nr. 32 ¬ªDie \n                     Kurzschrift von Basic¬´ n√§her beschrieben.\n\nDieser Vektor kann verbogen werden, um zus√§tzliche Basic-Befehle zu erfinden \n                     und in das Betriebssystem einzubauen.\n\n$0306-$0307          Vektor auf die Basic-Routine, die Token in ASCII-Werte zur√ºckwandelt (LIST)","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem/c64mem_64er.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#100-IF-PEEK673-AND-1-THEN-100-6"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","language":"asm","vector":[0.019105980172753334,0.009552990086376667,0,0,-0.009552990086376667,0,0,0.02388247475028038,0,0,-0.03821196034550667,0,0.019105980172753334,0.03821196034550667,0,-0.019105980172753334,-0.06687092781066895,0,0.019105980172753334,0.10030639171600342,0,-0.019105980172753334,-0.014329484663903713,0,0.019105980172753334,0.014329484663903713,0,-0.05731793865561485,-0.014329484663903713,0,0,0.08597690612077713,0,0,-0.03343546390533447,0,0,0.009552990086376667,0,-0.19105979800224304,-0.03343546390533447,0,0,0.028658969327807426,0,0,-0.0047764950431883335,0,0,0.03821196034550667,0,-0.019105980172753334,-0.0047764950431883335,0,0.07642392069101334,0,0,0,-0.019105980172753334,0,0.19105979800224304,0.009552990086376667,0,-0.019105980172753334,-0.03343546390533447,0,0,0,0,-0.07642392069101334,-0.02388247475028038,0,0,0.03343546390533447,0,0,-0.04776494950056076,0,0.019105980172753334,0.009552990086376667,0,-0.03821196034550667,-0.014329484663903713,0,0,0.02388247475028038,0,-0.17195381224155426,-0.03343546390533447,0,0,0.06687092781066895,0,-0.05731793865561485,-0.05731793865561485,0,0.019105980172753334,0.04776494950056076,0,-0.019105980172753334,-0.0047764950431883335,0,0.3630135953426361,0.0047764950431883335,0,-0.03821196034550667,-0.009552990086376667,0,0.03821196034550667,0.009552990086376667,0,-0.03821196034550667,-0.019105980172753334,0,0.03821196034550667,0.009552990086376667,0,-0.019105980172753334,-0.009552990086376667,0,0.019105980172753334,0.019105980172753334,0,0,-0.03343546390533447,0,0.32480165362358093,0.014329484663903713,0,-0.07642392069101334,-0.02388247475028038,0,0.019105980172753334,0.02388247475028038,0,-0.05731793865561485,-0.09552989900112152,0,0,0,0,-0.03821196034550667,-0.0047764950431883335,0,0.09552989900112152,0.0047764950431883335,0,-0.09552989900112152,-0.014329484663903713,0,0.09552989900112152,0.042988453060388565,0,-0.019105980172753334,-0.009552990086376667,0,0,0.10508288443088531,0,0,-0.009552990086376667,0,0,0,0,0,-0.03821196034550667,0,0,0,0,0,-0.009552990086376667,0,0.03821196034550667,0.014329484663903713,0,-0.03821196034550667,-0.03343546390533447,0,0.019105980172753334,0,0,-0.1146358773112297,-0.09552989900112152,0,0.03821196034550667,0.009552990086376667,0,-0.07642392069101334,-0.042988453060388565,0,0.21016576886177063,0.009552990086376667,0,-0.05731793865561485,-0.014329484663903713,0,0.05731793865561485,0.19105979800224304,0,-0.019105980172753334,-0.03343546390533447,0,0.30569568276405334,0.04776494950056076,0,-0.09552989900112152,-0.042988453060388565,0,0,0.02388247475028038,0,-0.05731793865561485,-0.009552990086376667,0,0.03821196034550667,0.009552990086376667,0,-0.019105980172753334,0,0,0.15284784138202667,0.16717731952667236,0,-0.019105980172753334,-0.042988453060388565,0,0,0.014329484663903713,0,0,-0.03343546390533447,0,0,0.0047764950431883335,0,-0.019105980172753334,-0.03343546390533447,0,0,0.04776494950056076,0,-0.019105980172753334,-0.04776494950056076,0,0.05731793865561485,0.04776494950056076,0,-0.07642392069101334,-0.05731793865561485,0,0.03821196034550667,0,0,-0.019105980172753334,0,0,0.019105980172753334,0,0,-0.019105980172753334,-0.0047764950431883335,0,0.03821196034550667,0.019105980172753334,0,-0.03821196034550667,0,0,0.15284784138202667,0.06687092781066895,0,-0.019105980172753334,-0.02388247475028038,0,0.019105980172753334,0.009552990086376667,0,-0.03821196034550667,-0.07642392069101334,0,0,0.019105980172753334,0,-0.03821196034550667,-0.03821196034550667,0,0,0.10985937714576721,0,0,-0.03821196034550667,0,0.03821196034550667,0.028658969327807426,0,-0.019105980172753334,-0.05254144221544266,0,0.05731793865561485,0.15284784138202667,0,-0.09552989900112152,-0.06209443137049675,0,0.09552989900112152,0.0047764950431883335,0,0,-0.03343546390533447,0,0,0.10985937714576721,0,-0.019105980172753334,-0.019105980172753334,0,0.019105980172753334,0.08597690612077713,0,-0.019105980172753334,-0.019105980172753334,0,0.019105980172753334,0.009552990086376667,0,-0.03821196034550667,-0.0047764950431883335,0,0.03821196034550667,0.0047764950431883335,0,0,-0.009552990086376667,0,0,0.08120041340589523,0,0,-0.028658969327807426,0,0,0.03343546390533447,0,-0.03821196034550667,-0.05254144221544266,0,0.019105980172753334,0.019105980172753334,0,-0.05731793865561485,-0.019105980172753334,0,0,0.03343546390533447,0,-0.03821196034550667,-0.03343546390533447,0,0.03821196034550667,0.042988453060388565,0,-0.05731793865561485,-0.02388247475028038,0,0,0.07642392069101334,0,-0.019105980172753334,-0.009552990086376667,0,0.03821196034550667,0.009552990086376667,0,-0.05731793865561485,-0.019105980172753334,0,0.1146358773112297,0,0,-0.09552989900112152,-0.019105980172753334,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#90-DATA-7626199-2 -->\nDieser Vektor zeigt auf die Adresse 42980 ($A7E4), beim VC 20 auf 51172 \n                     ($C7E4). Diese Routine pr√ºft das n√§chste Token, ob es g√ºltig ist. Wenn der \n                     ASCII-Wert des Token kleiner als 128 ist, wird er als Zeichen einerVariablen \n                     angesehen, und das System springt auf die LET-Routine. Das erkl√§rt, warum zur \n                     Definition einer Variablen der LET-Befehl auch weggelassen werden kann.\n\nDurch Verbiegen dieses Vektors kann zum Beispiel eine Trace-Routine gebaut \n                     werden, welche zuerst die Nummer der Zeile ausdruckt, die gerade ausgef√ºhrt \n                     wird, bevor sie auf die urspr√ºngliche Zieladresse des Vektors zur√ºckkehrt.\n\n$030A-$030B          Vektor auf die Basic-Routine, die einen numerischen Ausdruck in eine \n                     Gleitkommazahl umwandelt\n\nDieser Vektor zeigt auf 44675 ($AE83), beim VC 20 auf 52867 ($CE83). Hier \n                     beginnt eine Routine, die einen einzelnen numerischen Wert, wenn er Teil eines \n                     Ausdrucks ist, von seinem ASCII-Wert in eine Gleitkomma-Zahl umwandelt.\n\nIst der Ausdruck eine Konstante, wird diese Umwandlung durchgef√ºhrt.\n\nIst der Ausdruck eine Variable, wird ihr Zahlenwert aus dem Variablenspeicher geholt.\n\nIst der Ausdruck die Zahl ¬ªpi¬´, wird der Zahlenwert f√ºr ¬ªpi¬´ in den Gleitkomma-Akkumulator gebracht.\n\n$030C-$030F          Speicher f√ºr Register","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem/c64mem_64er.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#90-DATA-7626199-2"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","language":"asm","vector":[0,0.007897553965449333,0,0,-0.007897553965449333,0,0,0.035538993775844574,0,0,-0.023692661896348,0,0.03159021586179733,0.023692661896348,0,0,-0.047385323792696,0,0.03159021586179733,0.07502676546573639,0,-0.015795107930898666,0,0,0.06318043172359467,0.015795107930898666,0,-0.047385323792696,-0.019743885844945908,0,0,0.035538993775844574,0,-0.015795107930898666,-0.011846330948174,0,0,0,0,-0.047385323792696,-0.019743885844945908,0,0.015795107930898666,0.015795107930898666,0,-0.015795107930898666,-0.007897553965449333,0,0.015795107930898666,0.019743885844945908,0,-0.03159021586179733,-0.019743885844945908,0,0.11056575924158096,0.007897553965449333,0,-0.015795107930898666,-0.035538993775844574,0,0.03159021586179733,0,0,0,-0.015795107930898666,0,0,0.015795107930898666,0,-0.03159021586179733,-0.035538993775844574,0,0,0.007897553965449333,0,0,-0.011846330948174,0,0,0.011846330948174,0,-0.03159021586179733,0,0,0.015795107930898666,0.04343654587864876,0,-0.2843119502067566,-0.05133410170674324,0,0.015795107930898666,0.06318043172359467,0,-0.07897554337978363,-0.02764143981039524,0,0.094770647585392,0.03159021586179733,0,0,-0.003948776982724667,0,0.5054434537887573,0,0,-0.03159021586179733,-0.003948776982724667,0,0.047385323792696,0.015795107930898666,0,0,-0.011846330948174,0,0.07897554337978363,0.015795107930898666,0,-0.03159021586179733,-0.011846330948174,0,0,0.047385323792696,0,-0.015795107930898666,-0.023692661896348,0,0.189541295170784,0.011846330948174,0,-0.1421559751033783,-0.007897553965449333,0,0.015795107930898666,0.007897553965449333,0,-0.07897554337978363,-0.023692661896348,0,0.06318043172359467,0.011846330948174,0,-0.06318043172359467,-0.007897553965449333,0,0.1421559751033783,0.007897553965449333,0,-0.015795107930898666,-0.019743885844945908,0,0.094770647585392,0.05528287962079048,0,-0.015795107930898666,-0.011846330948174,0,0,0.019743885844945908,0,-0.015795107930898666,0,0,0,0,0,0,-0.015795107930898666,0,0,0.003948776982724667,0,-0.015795107930898666,-0.003948776982724667,0,0.03159021586179733,0,0,0,-0.023692661896348,0,0.015795107930898666,0.011846330948174,0,-0.094770647585392,-0.15795108675956726,0,0,0.011846330948174,0,-0.189541295170784,-0.039487771689891815,0,0.2369266152381897,0.047385323792696,0,0,0,0,0.03159021586179733,0.2685168385505676,0,-0.07897554337978363,-0.039487771689891815,0,0.1421559751033783,0.05528287962079048,0,-0.015795107930898666,-0.003948776982724667,0,0,0.039487771689891815,0,-0.047385323792696,-0.015795107930898666,0,0.03159021586179733,0,0,-0.03159021586179733,-0.007897553965449333,0,0.07897554337978363,0.10266820341348648,0,-0.07897554337978363,-0.07107798755168915,0,0,0.015795107930898666,0,-0.11056575924158096,-0.04343654587864876,0,0,0.047385323792696,0,0,-0.04343654587864876,0,0.03159021586179733,0.07107798755168915,0,-0.015795107930898666,-0.011846330948174,0,0,0.047385323792696,0,-0.047385323792696,-0.019743885844945908,0,0.047385323792696,0.003948776982724667,0,0,-0.011846330948174,0,0.047385323792696,0.003948776982724667,0,-0.015795107930898666,-0.007897553965449333,0,0,0.02764143981039524,0,-0.07897554337978363,-0.011846330948174,0,0.12636086344718933,0.023692661896348,0,-0.015795107930898666,0,0,0,0.007897553965449333,0,-0.015795107930898666,-0.05528287962079048,0,0,0,0,-0.047385323792696,-0.094770647585392,0,0,0.11846330761909485,0,-0.015795107930898666,-0.007897553965449333,0,0.06318043172359467,0.019743885844945908,0,0,-0.11056575924158096,0,0.047385323792696,0.07502676546573639,0,0,-0.02764143981039524,0,0.03159021586179733,0.023692661896348,0,0,-0.023692661896348,0,0.015795107930898666,0.1421559751033783,0,0,-0.023692661896348,0,0,0.05133410170674324,0,-0.015795107930898666,-0.039487771689891815,0,0,0.019743885844945908,0,-0.015795107930898666,-0.06318043172359467,0,0.015795107930898666,0,0,0,-0.003948776982724667,0,0,0.06318043172359467,0,0,-0.04343654587864876,0,0.015795107930898666,0.003948776982724667,0,-0.015795107930898666,-0.04343654587864876,0,0,0.039487771689891815,0,-0.03159021586179733,-0.015795107930898666,0,0.015795107930898666,0.059231653809547424,0,-0.06318043172359467,-0.011846330948174,0,0.015795107930898666,0.023692661896348,0,0,-0.04343654587864876,0,0,0.06318043172359467,0,0,-0.011846330948174,0,0.06318043172359467,0,0,-0.094770647585392,-0.007897553965449333,0,0.12636086344718933,0,0,-0.015795107930898666,-0.02764143981039524,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#90-DATA-7626199-11 -->\n$031C-$031D          Vektor auf die CLOSE-Routine des Betriebssystems\n\nDieser Vektor zeigt auf die Adresse 62097 ($F291) - beim VC 20 auf 62282 \n                     ($F34A). Ab hier beginnt eine Routine, die beim CLOSE-Befehl zuerst pr√ºft, ob \n                     die Datei-Nummer in der Tabelle der er√∂ffneten Datei enthalten ist. Dann holt \n                     sie die dazugeh√∂rige Ger√§te-Nummer und Sekund√§r-Adresse und schlie√üt den Kanal \n                     und die Datei.\n\n$031E-$031F          Vektor auf die CHKIN-Routine des Betriebssystems\n\nDiese Routine beginnt ab Adresse 61966 ($F20E) - beim VC 20 ab 62161 ($F2C7). \n                     Sie er√∂ffnet einen Datenkanal zur √úbernahme von Daten von dem Ger√§t, das durch \n                     den OPEN-Befehl angegeben worden ist.\n\n$0320-$0321          Vektor auf die CKOUT-Routine des Betriebssystems\n\nDieser Vektor zeigt auf die Adresse 62032 ($F250) - beim VC 20 auf 62217 \n                     ($F309). Dort beginnt die Routine, welche einen Datenkanal zur Abgabe von Daten \n                     an das im OPEN-Befehl angegebene Ger√§t aufmacht.\n\n$0322-$0323          Vektor auf die CLRCHN-Routine des Betriebssystems\n\nDer Name dieser Routine ist die Abk√ºrzung f√ºr ¬ªclear channel¬´. Diese Routine, \n                     die ab Adresse 62259 ($F333) - beim VC 20 ab 62461 ($F3F3) - beginnt, setzt \n                     alle Kan√§le in den Einschaltzustand zur√ºck. Das hei√üt, das Eingabeger√§t ist die \n                     Tastatur, das Ausgabeger√§t ist der Bildschirm.","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem/c64mem_64er.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#90-DATA-7626199-11"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","language":"asm","vector":[0,0.004748196806758642,0,-0.03798557445406914,-0.009496393613517284,0,0,0.02848917990922928,0,-0.01899278722703457,-0.02848917990922928,0,0.03798557445406914,0.03323737904429436,0,-0.03798557445406914,-0.01424458995461464,0,0.01899278722703457,0.0237409844994545,0,-0.01899278722703457,-0.0237409844994545,0,0.01899278722703457,0.01424458995461464,0,-0.05697835981845856,-0.01424458995461464,0,0,0.01899278722703457,0,-0.01899278722703457,-0.02848917990922928,0,0.01899278722703457,0.004748196806758642,0,-0.03798557445406914,-0.009496393613517284,0,0,0.047481968998909,0,0,-0.01424458995461464,0,0.01899278722703457,0.02848917990922928,0,-0.03798557445406914,-0.004748196806758642,0,0.01899278722703457,0.009496393613517284,0,-0.01899278722703457,-0.004748196806758642,0,0.01899278722703457,0.004748196806758642,0,-0.01899278722703457,-0.009496393613517284,0,0,0.01899278722703457,0,-0.03798557445406914,-0.03798557445406914,0,0.01899278722703457,0.004748196806758642,0,0,-0.02848917990922928,0,0.01899278722703457,0.01899278722703457,0,-0.07597114890813828,-0.01424458995461464,0,0,0.03798557445406914,0,-0.3038845956325531,-0.01899278722703457,0,0,0.047481968998909,0,-0.094963937997818,-0.04273376986384392,0,0.03798557445406914,0.02848917990922928,0,0,-0.02848917990922928,0,0.5507908463478088,0,0,-0.05697835981845856,-0.0237409844994545,0,0.07597114890813828,0.02848917990922928,0,-0.01899278722703457,-0.02848917990922928,0,0.094963937997818,0.009496393613517284,0,-0.01899278722703457,-0.009496393613517284,0,0,0.01424458995461464,0,-0.03798557445406914,-0.02848917990922928,0,0.284891813993454,0.01424458995461464,0,-0.11395671963691711,-0.009496393613517284,0,0.01899278722703457,0.009496393613517284,0,-0.03798557445406914,-0.02848917990922928,0,0.03798557445406914,0.004748196806758642,0,-0.07597114890813828,0,0,0.15194229781627655,0.009496393613517284,0,0,-0.02848917990922928,0,0.13294951617717743,0.009496393613517284,0,-0.01899278722703457,-0.009496393613517284,0,0.01899278722703457,0.02848917990922928,0,0,-0.01424458995461464,0,0.03798557445406914,0.004748196806758642,0,0,-0.01899278722703457,0,0,0.01424458995461464,0,-0.01899278722703457,0,0,0.01899278722703457,0.009496393613517284,0,-0.03798557445406914,-0.03798557445406914,0,0.07597114890813828,0.009496393613517284,0,-0.11395671963691711,-0.17093507945537567,0,0.01899278722703457,0,0,-0.05697835981845856,-0.05223016440868378,0,0.094963937997818,0.0237409844994545,0,-0.01899278722703457,-0.004748196806758642,0,0.01899278722703457,0.28964000940322876,0,-0.05697835981845856,-0.03323737904429436,0,0.07597114890813828,0.061726558953523636,0,-0.03798557445406914,-0.0237409844994545,0,0.01899278722703457,0.047481968998909,0,-0.03798557445406914,-0.01899278722703457,0,0.03798557445406914,0,0,-0.01899278722703457,-0.0237409844994545,0,0.07597114890813828,0.15194229781627655,0,-0.01899278722703457,-0.06647475808858871,0,0,0.01424458995461464,0,-0.01899278722703457,-0.0237409844994545,0,0.01899278722703457,0.0237409844994545,0,-0.03798557445406914,-0.05223016440868378,0,0,0.07597114890813828,0,0,-0.004748196806758642,0,0.01899278722703457,0.0712229534983635,0,-0.07597114890813828,-0.01899278722703457,0,0.03798557445406914,0.009496393613517284,0,-0.01899278722703457,0,0,0.03798557445406914,0.0237409844994545,0,-0.03798557445406914,-0.009496393613517284,0,0,0.004748196806758642,0,-0.05697835981845856,-0.01424458995461464,0,0.11395671963691711,0.01424458995461464,0,-0.03798557445406914,-0.0237409844994545,0,0,0.03798557445406914,0,-0.05697835981845856,-0.06647475808858871,0,0.03798557445406914,0.01424458995461464,0,-0.03798557445406914,-0.02848917990922928,0,0,0.05223016440868378,0,0,-0.02848917990922928,0,0.01899278722703457,0.009496393613517284,0,0,-0.10446032881736755,0,0.05697835981845856,0.03798557445406914,0,0,-0.04273376986384392,0,0,0.01899278722703457,0,-0.03798557445406914,-0.01899278722703457,0,0.01899278722703457,0.15669049322605133,0,0,-0.0237409844994545,0,0,0.05697835981845856,0,-0.03798557445406914,-0.01424458995461464,0,0,0.0237409844994545,0,0,-0.01424458995461464,0,0.07597114890813828,0.009496393613517284,0,-0.01899278722703457,-0.02848917990922928,0,0.01899278722703457,0.0712229534983635,0,0,-0.02848917990922928,0,0.01899278722703457,0.01424458995461464,0,0,-0.047481968998909,0,0,0.02848917990922928,0,0,-0.02848917990922928,0,0.03798557445406914,0.05697835981845856,0,-0.07597114890813828,-0.01899278722703457,0,0,0.03323737904429436,0,-0.01899278722703457,-0.03323737904429436,0,0.01899278722703457,0.061726558953523636,0,-0.01899278722703457,-0.01899278722703457,0,0.05697835981845856,0.009496393613517284,0,-0.01899278722703457,-0.02848917990922928,0,0.094963937997818,0.01899278722703457,0,-0.05697835981845856,-0.0237409844994545,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#90-DATA-7626199-14 -->\nNach dem Einschalten zeigt dieser Vektor auf die BREAK-Routine, genauso wie der \n                     Vektor in Speicherzelle 790 und 791. Er ist ein √úberbleibsel aus dem PET-\n                     Betriebssystem, das aber beim VC 20 und C 64 keine Rolle spielt. Hier k√∂nnen \n                     also eigene Vektoren definiert und eingesetzt werden.\n\n$0330-$0331          Vektor auf die LOAD-Routine des Betriebssystems\n\nDieser Vektor zeigt auf die Adresse 62622 ($F49E) - beim VC 20 auf 62793 \n                     ($F549). Die dort beginnende Routine transferiert Daten von einem Eingabeger√§t \n                     direkt in den RAM-Speicher. Sie kann auch zum VERIFYen durch Vergleich der \n                     geladen mit den gespeicherten Daten verwendet werden.\n\n$0332-$0333          Vektor auf die SAVE-Routine des Betriebssystems\n\nDiese Routine ist das Gegenst√ºck zur LOAD-Routine. Sie beginnt ab Adresse 62941 \n                     ($F5DD) - beim VC 20 ab 63103 ($F685).\n\n$0334-$033B          Freier Speicherbereich\n\nDiese 8 Byte stehen zur freien Verf√ºgung.\n\n$033C-$03FB          Kassettenpuffer\n\nDiese 192 Byte beherbergen den Kassettenpuffer. Der Name kennzeichnet diesen \n                     Speicherbereich als Zwischenspeicher f√ºr Ein- und Ausgabe-Operationen von und \n                     auf Band.\n\nDabei unterscheiden sich die normalen LOAD-, SAVE- und VERIFY-Befehle von den \n                     Datei-Befehlen INPUT#, GET# und PRINT#.","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem/c64mem_64er.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64er.txt#90-DATA-7626199-14"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0.016918310895562172,0,0,0,-0.004229577723890543,0,0,0.010573944076895714,0,-0.008459155447781086,-0.021147888153791428,0,0.016918310895562172,0.016918310895562172,0,-0.008459155447781086,-0.006344366353005171,0,0.06767324358224869,0.03172183409333229,0,0,-0.03172183409333229,0,0.016918310895562172,0.012688732706010342,0,-0.008459155447781086,-0.004229577723890543,0,0.016918310895562172,0.0401809886097908,0,0,-0.006344366353005171,0,0,0.006344366353005171,0,0,-0.021147888153791428,0,0.042295776307582855,0.006344366353005171,0,-0.008459155447781086,-0.021147888153791428,0,0,0.004229577723890543,0,-0.016918310895562172,0,0,0.042295776307582855,0.004229577723890543,0,-0.008459155447781086,-0.012688732706010342,0,0,0.019033100455999374,0,-0.016918310895562172,0,0,0.042295776307582855,0.014803522266447544,0,-0.033836621791124344,-0.008459155447781086,0,0.008459155447781086,0.004229577723890543,0,-0.008459155447781086,-0.008459155447781086,0,0.008459155447781086,0.021147888153791428,0,-0.059214089065790176,-0.004229577723890543,0,0.016918310895562172,0.006344366353005171,0,-0.033836621791124344,-0.029607044532895088,0,0,0,0,-0.05075493082404137,-0.02326267771422863,0,0,0.012688732706010342,0,0,-0.0021147888619452715,0,0.778242290019989,0.004229577723890543,0,-0.033836621791124344,-0.019033100455999374,0,0.016918310895562172,0.012688732706010342,0,-0.008459155447781086,-0.006344366353005171,0,0.016918310895562172,0.033836621791124344,0,-0.008459155447781086,0,0,0.016918310895562172,0.010573944076895714,0,-0.008459155447781086,-0.010573944076895714,0,0.18610142171382904,0.014803522266447544,0,-0.025377465412020683,-0.0021147888619452715,0,0.025377465412020683,0.006344366353005171,0,-0.033836621791124344,-0.014803522266447544,0,0,0.021147888153791428,0,-0.008459155447781086,-0.006344366353005171,0,0.016918310895562172,0.008459155447781086,0,0,-0.010573944076895714,0,0.08459155261516571,0.021147888153791428,0,-0.008459155447781086,-0.014803522266447544,0,0.008459155447781086,0.0021147888619452715,0,-0.016918310895562172,-0.012688732706010342,0,0.025377465412020683,0.021147888153791428,0,0,-0.016918310895562172,0,0.025377465412020683,0.004229577723890543,0,-0.16918310523033142,-0.010573944076895714,0,0,0.012688732706010342,0,-0.016918310895562172,-0.029607044532895088,0,0.025377465412020683,0.012688732706010342,0,-0.033836621791124344,-0.021147888153791428,0,0.016918310895562172,0,0,-0.008459155447781086,-0.027492254972457886,0,0.0761324018239975,0.008459155447781086,0,-0.008459155447781086,-0.0021147888619452715,0,0.05075493082404137,0.39123594760894775,0,0,-0.03172183409333229,0,0.09305071085691452,0.008459155447781086,0,-0.008459155447781086,-0.014803522266447544,0,0.025377465412020683,0.012688732706010342,0,0,-0.004229577723890543,0,0.008459155447781086,0.008459155447781086,0,-0.05075493082404137,-0.006344366353005171,0,0.016918310895562172,0.09728028625249863,0,0,-0.014803522266447544,0,0.016918310895562172,0.029607044532895088,0,0,-0.016918310895562172,0,0.008459155447781086,0.004229577723890543,0,0,-0.006344366353005171,0,0.025377465412020683,0.012688732706010342,0,0,0,0,0.016918310895562172,0.042295776307582855,0,-0.016918310895562172,-0.004229577723890543,0,0.016918310895562172,0.014803522266447544,0,0,-0.010573944076895714,0,0.008459155447781086,0.012688732706010342,0,0,-0.004229577723890543,0,0,0.02326267771422863,0,-0.008459155447781086,-0.08670634031295776,0,0.016918310895562172,0,0,-0.008459155447781086,-0.012688732706010342,0,0.016918310895562172,0.02326267771422863,0,-0.059214089065790176,-0.025377465412020683,0,0.016918310895562172,0.010573944076895714,0,-0.008459155447781086,-0.006344366353005171,0,0,0.0401809886097908,0,0,-0.019033100455999374,0,0.008459155447781086,0.029607044532895088,0,-0.025377465412020683,-0.008459155447781086,0,0.025377465412020683,0.04652535542845726,0,-0.008459155447781086,-0.016918310895562172,0,0.025377465412020683,0.012688732706010342,0,-0.059214089065790176,0,0,0,0.19879014790058136,0,-0.008459155447781086,-0.033836621791124344,0,0.033836621791124344,0.012688732706010342,0,-0.008459155447781086,-0.0021147888619452715,0,0,0.012688732706010342,0,-0.042295776307582855,-0.0021147888619452715,0,0.008459155447781086,0.008459155447781086,0,-0.016918310895562172,-0.0021147888619452715,0,0,0.059214089065790176,0,0,-0.006344366353005171,0,0,0.014803522266447544,0,-0.025377465412020683,-0.016918310895562172,0,0.033836621791124344,0.008459155447781086,0,0,-0.0021147888619452715,0,0.016918310895562172,0.008459155447781086,0,-0.016918310895562172,0,0,0,0.021147888153791428,0,-0.008459155447781086,-0.006344366353005171,0,0.033836621791124344,0.010573944076895714,0,-0.008459155447781086,-0.008459155447781086,0,0.008459155447781086,0.014803522266447544,0,-0.059214089065790176,-0.029607044532895088,0,0,0.014803522266447544,0,-0.042295776307582855,-0.04652535542845726,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#Page-1 -->\n- C64 RAM Map (64 intern)\n-\n-  Baloui, Br√ºckmann, Englisch, Felt, Gelfand, Gerits, Krsnik:\n-  Das neue Commodore-64-intern-Buch.\n-  DuÃàsseldorf: Data-Becker, 1990.\n-  ISBN 3890113079\n-\n- OCRed and formatted by Michael Steil <mist64@mac.com>\n-\n- Corrections (typos as well as content), translations etc.\n- welcome at: https://github.com/mist64/c64ref\n-\n------------------------------------------------------------\n-\n# This plain text file is formatted so that it can be automatically\n# parsed in order to create cross-references etc.\n# * Lines starting with \"-\" is top-level information. The first line\n#   is the title. Lines starting with \"--\" are separators.\n# * Lines starting with \"#\" are internal comments.\n# * Hex addresses start at column 0.\n# * Symbols start at column 13.\n# * The description starts at column 21.\n# * All lines of the description until the first blank line are\n#   combined into the heading.\n# * A '.' character at the end of a heading line represents a hard\n#   line break.\n# * The remaining text is in MarkDown format.\n# * All addresses are 4 digits and have a leading '$'.\n# The encoding is UTF-8.\n\n$0000        D6510   Datenrichtungsregister f√ºr Prozessor-\n                     Port\n\nBit 0 - 6; 0= Eingang 1= Ausgang\n\n$0001        R6510   Prozessorport\n\nIm Prozessorport kann man angeben,\n                     welche Speicherbereiche ein- oder\n                     ausgeschaltet werden.\n\nBitbeschreibung:","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#Page-1"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0.009235929697751999,0,-0.012314572930335999,-0.006157286465167999,0,0.012314572930335999,0.006157286465167999,0,-0.024629145860671997,-0.012314572930335999,0,0.024629145860671997,0.018471859395503998,0,-0.012314572930335999,-0.006157286465167999,0,0.012314572930335999,0.052336934953927994,0,-0.024629145860671997,0,0,0.012314572930335999,0.009235929697751999,0,0,0,0,0,0.027707789093255997,0,-0.024629145860671997,0,0,0.012314572930335999,0,0,-0.012314572930335999,-0.024629145860671997,0,0,0.015393216162919998,0,0,-0.0030786432325839996,0,0,0.033865075558423996,0,-0.012314572930335999,-0.006157286465167999,0,0.036943718791007996,0.040022362023591995,0,0,-0.043101005256175995,0,0.07388743758201599,0,0,-0.024629145860671997,-0.0030786432325839996,0,0.012314572930335999,0.009235929697751999,0,-0.012314572930335999,-0.018471859395503998,0,0,0,0,-0.024629145860671997,-0.018471859395503998,0,0.024629145860671997,0.006157286465167999,0,-0.012314572930335999,-0.0030786432325839996,0,0.024629145860671997,0.0030786432325839996,0,-0.036943718791007996,-0.006157286465167999,0,0,0.012314572930335999,0,-0.012314572930335999,-0.027707789093255997,0,0.024629145860671997,0.015393216162919998,0,0,-0.009235929697751999,0,0.7142452001571655,0.006157286465167999,0,-0.012314572930335999,-0.012314572930335999,0,0.012314572930335999,0.012314572930335999,0,0,-0.08928065001964569,0,0.09851658344268799,0.006157286465167999,0,-0.012314572930335999,-0.015393216162919998,0,0.024629145860671997,0.006157286465167999,0,0,0,0,0.09851658344268799,0.009235929697751999,0,-0.012314572930335999,-0.015393216162919998,0,0,0.027707789093255997,0,0,-0.006157286465167999,0,0.012314572930335999,0.0030786432325839996,0,-0.012314572930335999,0,0,0.012314572930335999,0.006157286465167999,0,0,-0.006157286465167999,0,0.07388743758201599,0.018471859395503998,0,0,-0.012314572930335999,0,0,0.036943718791007996,0,-0.036943718791007996,-0.012314572930335999,0,0,0.015393216162919998,0,0,-0.006157286465167999,0,0.012314572930335999,0.015393216162919998,0,-0.12314572930335999,-0.033865075558423996,0,0.036943718791007996,0.012314572930335999,0,0,-0.006157286465167999,0,0.024629145860671997,0.015393216162919998,0,-0.049258291721343994,-0.027707789093255997,0,0,0,0,0,-0.006157286465167999,0,0.036943718791007996,0.015393216162919998,0,0,0,0,0.012314572930335999,0.35712260007858276,0,0,-0.009235929697751999,0,0.06157286465167999,0.012314572930335999,0,0,-0.012314572930335999,0,0,0.049258291721343994,0,0,-0.009235929697751999,0,0.06157286465167999,0.015393216162919998,0,-0.012314572930335999,-0.006157286465167999,0,0.06157286465167999,0.05541557818651199,0,-0.024629145860671997,-0.009235929697751999,0,0.036943718791007996,0.0030786432325839996,0,0,-0.006157286465167999,0,0,0.009235929697751999,0,-0.012314572930335999,-0.006157286465167999,0,0.012314572930335999,0.006157286465167999,0,0,-0.006157286465167999,0,0,0.040022362023591995,0,-0.07388743758201599,-0.0030786432325839996,0,0,0,0,-0.012314572930335999,-0.018471859395503998,0,0.012314572930335999,0,0,0,-0.0030786432325839996,0,0,0.015393216162919998,0,-0.012314572930335999,-0.06157286465167999,0,0.06157286465167999,0.036943718791007996,0,-0.012314572930335999,-0.006157286465167999,0,0,0.015393216162919998,0,0,-0.027707789093255997,0,0,0,0,-0.33249345421791077,-0.006157286465167999,0,0,0.024629145860671997,0,-0.012314572930335999,-0.0030786432325839996,0,0,0.012314572930335999,0,0,-0.009235929697751999,0,0.036943718791007996,0.030786432325839996,0,-0.012314572930335999,-0.0030786432325839996,0,0.08620201051235199,0.006157286465167999,0,0,0,0,0.012314572930335999,0.20934773981571198,0,0,-0.009235929697751999,0,0.024629145860671997,0.033865075558423996,0,0,-0.012314572930335999,0,0,0.043101005256175995,0,-0.049258291721343994,-0.0030786432325839996,0,0,0.006157286465167999,0,0,-0.006157286465167999,0,0.036943718791007996,0.030786432325839996,0,0,-0.0030786432325839996,0,0.06157286465167999,0,0,-0.08620201051235199,-0.036943718791007996,0,0,0.0030786432325839996,0,0,-0.009235929697751999,0,0.012314572930335999,0.009235929697751999,0,-0.036943718791007996,0,0,0,0.018471859395503998,0,0,-0.006157286465167999,0,0.012314572930335999,0.030786432325839996,0,0,-0.015393216162919998,0,0,0,0,-0.012314572930335999,0,0,0.024629145860671997,0.0030786432325839996,0,-0.049258291721343994,-0.19703316688537598,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#Page-1-2 -->\n|       |                                  |\n                     |-------|----------------------------------|\n                     | Bit 0 | 1 = BASIC-ROM,  0= RAM           |\n                     | Bit 1 | 1 = KERNAL-ROM, 0= RAM           |\n                     | Bit 2 | 1 = I/O         0= Zeichensatz   |\n                     | Bit 3 | Datenausgabe von Datasette       |\n                     | Bit 4 | 0 = Taste bei Datasette gedr√ºckt |\n                     |       | 1 = nicht gedr√ºckt               |\n                     | Bit 5 | 1 = Motor an, 0= Motor aus       |\n\nDie Bits 6 und 7 sind unbenutzt und\n                     immer 0\n\n$0002                unbenutzt\n\n$0003-$0004  ADRAY1  Vektor f√ºr Umwandlung von Flie√ükomma\n                     nach Fest\n\nVon diesen Adressen aus beginnt der\n                     Interpreter, eine Gleitkommazahl in\n                     eine ganze Zahl umzuwandeln. Der\n                     Vektor deutet auf die Adresse $B1AA.\n\n$0005-$0006  ADRAY2  Vektor f√ºr Umwandlung von Fest nach\n                     Flie√ükomma\n\nDiese Routine verwandelt eine ganze\n                     Zahl in eine Flie√ükommazahl. Der\n                     Zeiger steht auf $B391.\n\n$0007        CHARAC  Suchzeichen\n\nDie Speicherzelle $0007 wird oft von\n                     BASIC-Programmen als Suchzeiger f√ºr\n                     Texteingaben verwendet.\n\n$0008        ENDCHR  Hochkomma-Flag","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#Page-1-2"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0.02918045036494732,0,-0.04668872058391571,-0.011672180145978928,0,0.04668872058391571,0.023344360291957855,0,0,-0.02918045036494732,0,0.023344360291957855,0.03501654043793678,0,-0.023344360291957855,-0.08754134923219681,0,0.04668872058391571,0.04668872058391571,0,-0.07003308087587357,-0.005836090072989464,0,0.023344360291957855,0.01750827021896839,0,-0.023344360291957855,0,0,0.023344360291957855,0.07003308087587357,0,0,-0.011672180145978928,0,0,0,0,-0.2100992351770401,-0.011672180145978928,0,0.04668872058391571,0.052524808794260025,0,-0.023344360291957855,-0.011672180145978928,0,0,0.04668872058391571,0,0,-0.02918045036494732,0,0.04668872058391571,0,0,-0.09337744116783142,-0.023344360291957855,0,0.023344360291957855,0,0,-0.023344360291957855,-0.011672180145978928,0,0.023344360291957855,0.01750827021896839,0,-0.09337744116783142,-0.023344360291957855,0,0,0.023344360291957855,0,0,-0.023344360291957855,0,0.023344360291957855,0.005836090072989464,0,-0.023344360291957855,0,0,0.04668872058391571,0.0408526286482811,0,-0.1634105145931244,-0.05836090072989464,0,0,0.01750827021896839,0,-0.023344360291957855,-0.01750827021896839,0,0,0.005836090072989464,0,-0.023344360291957855,-0.03501654043793678,0,0.4201984703540802,0.023344360291957855,0,-0.04668872058391571,0,0,0.023344360291957855,0.06419698894023895,0,-0.04668872058391571,-0.01750827021896839,0,0.04668872058391571,0.023344360291957855,0,-0.04668872058391571,-0.0408526286482811,0,0,0.011672180145978928,0,0,-0.01750827021896839,0,0.2100992351770401,0.02918045036494732,0,-0.023344360291957855,-0.03501654043793678,0,0,0.005836090072989464,0,-0.04668872058391571,-0.10504961758852005,0,0.023344360291957855,0.02918045036494732,0,-0.023344360291957855,-0.011672180145978928,0,0.1634105145931244,0,0,0,-0.005836090072989464,0,0.11672180145978928,0.023344360291957855,0,-0.07003308087587357,-0.052524808794260025,0,0,0.02918045036494732,0,-0.09337744116783142,-0.011672180145978928,0,0.023344360291957855,0.01750827021896839,0,0,-0.05836090072989464,0,0.023344360291957855,0,0,-0.1634105145931244,-0.011672180145978928,0,0.11672180145978928,0.011672180145978928,0,0,-0.011672180145978928,0,0.09337744116783142,0.02918045036494732,0,-0.07003308087587357,-0.09337744116783142,0,0,0.011672180145978928,0,-0.07003308087587357,-0.011672180145978928,0,0.14006616175174713,0,0,-0.023344360291957855,-0.011672180145978928,0,0.023344360291957855,0.21593531966209412,0,0,-0.052524808794260025,0,0.28013232350349426,0.01750827021896839,0,0,-0.02918045036494732,0,0,0.023344360291957855,0,0,-0.03501654043793678,0,0.07003308087587357,0.011672180145978928,0,-0.04668872058391571,0,0,0.14006616175174713,0.11088570952415466,0,-0.023344360291957855,-0.01750827021896839,0,0,0.011672180145978928,0,0,-0.0408526286482811,0,0,0.01750827021896839,0,-0.04668872058391571,-0.01750827021896839,0,0.023344360291957855,0.08754134923219681,0,0,0,0,0,0.05836090072989464,0,-0.09337744116783142,-0.08754134923219681,0,0.023344360291957855,0.011672180145978928,0,0,-0.052524808794260025,0,0.11672180145978928,0.011672180145978928,0,0,0,0,0.023344360291957855,0.023344360291957855,0,-0.023344360291957855,-0.10504961758852005,0,0.023344360291957855,0.06419698894023895,0,-0.04668872058391571,-0.005836090072989464,0,0,0.052524808794260025,0,0,-0.05836090072989464,0,0.2100992351770401,0,0,-0.023344360291957855,-0.03501654043793678,0,0,0.07586916536092758,0,-0.023344360291957855,-0.01750827021896839,0,0,0.023344360291957855,0,-0.023344360291957855,-0.0408526286482811,0,0.07003308087587357,0.14006616175174713,0,-0.14006616175174713,-0.005836090072989464,0,0.023344360291957855,0,0,0,-0.005836090072989464,0,0.023344360291957855,0.14006616175174713,0,0,-0.03501654043793678,0,0,0.07586916536092758,0,-0.023344360291957855,-0.023344360291957855,0,0,0.011672180145978928,0,-0.023344360291957855,-0.011672180145978928,0,0.07003308087587357,0,0,0,-0.023344360291957855,0,0.023344360291957855,0.06419698894023895,0,-0.04668872058391571,-0.005836090072989464,0,0,0,0,-0.04668872058391571,-0.05836090072989464,0,0,0.01750827021896839,0,0,-0.005836090072989464,0,0.023344360291957855,0.09921352565288544,0,-0.04668872058391571,0,0,0.04668872058391571,0.0408526286482811,0,0,-0.02918045036494732,0,0,0.011672180145978928,0,0,-0.04668872058391571,0,0.023344360291957855,0.005836090072989464,0,-0.11672180145978928,0,0,0.023344360291957855,0.11088570952415466,0,-0.023344360291957855,-0.052524808794260025,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#Page-1-3 -->\nW√§hrend der Umwandlung von\n                     BASIC-Befehlen in Tokens wird die\n                     Speicherzelle $0008 als Zwischenspeicher\n                     f√ºr BASIC-Texteingaben verwendet.\n\n$0009        TRMPOS  Speicher f√ºr Spalte beim TAB-Befehl\n\nNach der Ausf√ºhrung von TAB oder SPC\n                     wird die Cursorposition in der\n                     Speicherzelle 9 zwischengespeichert.\n\n$000A        VERCK   0= LOAD, 1= Verify, Flag des Interpreters\n\nWeil die Routine von LOAD und VERIFY\n                     identisch ist, wird ein Flag ben√∂tigt,\n                     um zu unterscheiden, ob ein LOAD oder\n                     ein VERIFY-Vorgang ausgef√ºhrt worden\n                     ist.\n\n$000B        COUNT   Zeiger im Eingabepuffer, Anzahl der\n                     Dimensionen\n\nDie Speicherzelle $000B wird dazu\n                     verwendet, die Anzahl der Dimensionen\n                     zu berechnen. Au√üerdem wird noch die\n                     L√§nge der Tokenzeile hier angegeben.\n\n$000C        DIMFLG  Flag f√ºr DIM\n\nDiese Speicherzelle wird benutzt, um\n                     festzustellen, ob die Variable ein\n                     Array oder schon eine dimensionierte\n                     Variable ist.\n\n$000D                Typflag $00= numerisch, $FF= String\n\nDas Flag zeigt dem BASIC-Interpreter\n                     an, ob es sich um Zahlenwerte oder um\n                     einen String handelt.\n\n$000E        INTFLG  $80= Integer, $00= Real","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#Page-1-3"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0.03171807527542114,0,0,0,0,0.042290765792131424,0.010572691448032856,0,0,-0.03171807527542114,0,0.08458153158426285,0.021145382896065712,0,0,-0.09515421837568283,0,0.042290765792131424,0.010572691448032856,0,-0.08458153158426285,0,0,0.08458153158426285,0.03171807527542114,0,-0.12687230110168457,-0.010572691448032856,0,0,0.09515421837568283,0,0,0,0,0,0,0,-0.08458153158426285,-0.021145382896065712,0,0,0.010572691448032856,0,0,-0.03171807527542114,0,0,0.021145382896065712,0,0,-0.010572691448032856,0,0.08458153158426285,0,0,-0.1691630631685257,-0.021145382896065712,0,0.25374460220336914,0.010572691448032856,0,-0.21145382523536682,0,0,0.042290765792131424,0.03171807527542114,0,-0.042290765792131424,-0.042290765792131424,0,0,0.03171807527542114,0,0,-0.042290765792131424,0,0.08458153158426285,0.021145382896065712,0,0,0,0,0,0,0,-0.12687230110168457,-0.06343615055084229,0,0,0,0,-0.042290765792131424,-0.03171807527542114,0,0,0.010572691448032856,0,0,-0.010572691448032856,0,0.3806168735027313,0.021145382896065712,0,-0.042290765792131424,0,0,0.042290765792131424,0.06343615055084229,0,-0.042290765792131424,0,0,0.08458153158426285,0.021145382896065712,0,0,-0.042290765792131424,0,0,0.042290765792131424,0,0,-0.07400883734226227,0,0.25374460220336914,0.010572691448032856,0,0,-0.042290765792131424,0,0,0,0,-0.042290765792131424,-0.042290765792131424,0,0,0.010572691448032856,0,0,0,0,0.042290765792131424,0.021145382896065712,0,0,0,0,0.25374460220336914,0.042290765792131424,0,0,-0.09515421837568283,0,0.042290765792131424,0.12687230110168457,0,0,-0.10572691261768341,0,0,0.021145382896065712,0,0,-0.021145382896065712,0,0,0,0,0,-0.010572691448032856,0,0.12687230110168457,0.042290765792131424,0,0,0,0,0.042290765792131424,0.010572691448032856,0,-0.042290765792131424,-0.08458153158426285,0,0,0,0,-0.042290765792131424,-0.03171807527542114,0,0.042290765792131424,0.010572691448032856,0,0,0,0,0.042290765792131424,0.19030843675136566,0,-0.042290765792131424,-0.052863456308841705,0,0.21145382523536682,0.021145382896065712,0,0,-0.03171807527542114,0,0,0.042290765792131424,0,0,0,0,0.042290765792131424,0.010572691448032856,0,-0.12687230110168457,0,0,0.08458153158426285,0.14801767468452454,0,-0.042290765792131424,0,0,0,0.010572691448032856,0,0,-0.042290765792131424,0,0.042290765792131424,0.021145382896065712,0,0,-0.03171807527542114,0,0.042290765792131424,0.021145382896065712,0,0,0,0,0.12687230110168457,0.12687230110168457,0,-0.08458153158426285,-0.021145382896065712,0,0,0.021145382896065712,0,0,0,0,0,0,0,0,0,0,0,0.021145382896065712,0,-0.042290765792131424,-0.042290765792131424,0,0.042290765792131424,0.12687230110168457,0,-0.042290765792131424,-0.052863456308841705,0,0,0.03171807527542114,0,0,-0.03171807527542114,0,0.08458153158426285,0,0,0,-0.021145382896065712,0,0,0.042290765792131424,0,0,0,0,0,0.021145382896065712,0,-0.042290765792131424,-0.052863456308841705,0,0.042290765792131424,0.10572691261768341,0,-0.1691630631685257,-0.010572691448032856,0,0,0,0,0,0,0,0.042290765792131424,0.11629960685968399,0,0,-0.07400883734226227,0,0.08458153158426285,0.052863456308841705,0,0,-0.03171807527542114,0,0,0.021145382896065712,0,-0.042290765792131424,0,0,0,0.021145382896065712,0,0,0,0,0,0.08458153158426285,0,0,0,0,0,0.06343615055084229,0,-0.042290765792131424,-0.052863456308841705,0,0,0,0,0,0,0,0.042290765792131424,0.010572691448032856,0,-0.08458153158426285,0,0,0,0.06343615055084229,0,-0.042290765792131424,-0.021145382896065712,0,0.042290765792131424,0.03171807527542114,0,0,-0.021145382896065712,0,0,0,0,-0.12687230110168457,0,0,0,0.042290765792131424,0,-0.042290765792131424,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#Page-1-4 -->\nWenn eine Gleitkommazahl auftritt,\n                     steht in der Speicherzelle $00, bei\n                     einer ganzen Zahl eine $80.\n\n$000F        GARBFL  Hochkommaflag bei LIST\n\nDurch diese Speicherzelle wird beim\n                     LIST-Befehl durch ein Hochkomma\n                     erkannt, ob eine Textkette folgt.\n                     Zus√§tzlich wird in dieser\n                     Speicherzelle markiert, ob eine\n                     Garbage Collection durchgef√ºhrt\n                     werden mu√ü oder nicht.\n\n$0010        SUBFLG  Flag f√ºr FN\n\nHier wird angezeigt, ob es sich um eine\n                     Array-Variable oder um eine mit DEF FN\n                     definierte Variable handelt.","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#Page-1-4"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0.08664993941783905,0.043324969708919525,0,-0.021662484854459763,0,0,0,0.054156213998794556,0,0,-0.03249372914433479,0,0.021662484854459763,0.03249372914433479,0,-0.08664993941783905,-0.07581869512796402,0,0.021662484854459763,0.03249372914433479,0,0,-0.021662484854459763,0,0.021662484854459763,0.010831242427229881,0,-0.043324969708919525,0,0,0.06498745828866959,0.05957183241844177,0,-0.021662484854459763,-0.016246864572167397,0,0.021662484854459763,0.010831242427229881,0,-0.06498745828866959,-0.010831242427229881,0,0.021662484854459763,0.027078106999397278,0,0,-0.016246864572167397,0,0.08664993941783905,0.03249372914433479,0,-0.021662484854459763,-0.005415621213614941,0,0.021662484854459763,0.005415621213614941,0,-0.06498745828866959,-0.010831242427229881,0,0.021662484854459763,0,0,-0.043324969708919525,0,0,0,0.010831242427229881,0,-0.021662484854459763,-0.016246864572167397,0,0,0,0,0,-0.027078106999397278,0,0.10831242799758911,0.005415621213614941,0,0,0,0,0.021662484854459763,0,0,-0.08664993941783905,-0.010831242427229881,0,0,0.043324969708919525,0,-0.15163739025592804,-0.043324969708919525,0,0.021662484854459763,0.06498745828866959,0,-0.043324969708919525,-0.010831242427229881,0,0.49823716282844543,0,0,-0.043324969708919525,0,0,0.043324969708919525,0.010831242427229881,0,0,-0.04874059185385704,0,0.15163739025592804,0.016246864572167397,0,0,0,0,0,0.027078106999397278,0,0,-0.021662484854459763,0,0.32493728399276733,0.043324969708919525,0,-0.021662484854459763,-0.03790934756398201,0,0.021662484854459763,0.016246864572167397,0,-0.021662484854459763,-0.03790934756398201,0,0.021662484854459763,0.010831242427229881,0,0,0,0,0.043324969708919525,0.043324969708919525,0,-0.06498745828866959,-0.016246864572167397,0,0.15163739025592804,0.016246864572167397,0,-0.043324969708919525,-0.03790934756398201,0,0,0.010831242427229881,0,-0.021662484854459763,-0.027078106999397278,0,0,0.010831242427229881,0,0,-0.010831242427229881,0,0.043324969708919525,0,0,-0.15163739025592804,0,0,0.12997491657733917,0.054156213998794556,0,0,0,0,0.08664993941783905,0.016246864572167397,0,-0.12997491657733917,-0.043324969708919525,0,0.043324969708919525,0,0,-0.08664993941783905,-0.07581869512796402,0,0.08664993941783905,0.010831242427229881,0,-0.043324969708919525,-0.021662484854459763,0,0.043324969708919525,0.24911858141422272,0,0,-0.027078106999397278,0,0.2382873296737671,0.03790934756398201,0,-0.021662484854459763,-0.016246864572167397,0,0,0.09748118370771408,0,0,-0.005415621213614941,0,0.10831242799758911,0,0,-0.021662484854459763,0,0,0.043324969708919525,0.16788426041603088,0,-0.021662484854459763,-0.03249372914433479,0,0.021662484854459763,0.016246864572167397,0,-0.043324969708919525,-0.010831242427229881,0,0,0.016246864572167397,0,0,-0.010831242427229881,0,0,0.03790934756398201,0,-0.06498745828866959,-0.03790934756398201,0,0,0.08123432099819183,0,-0.10831242799758911,-0.03790934756398201,0,0.021662484854459763,0.005415621213614941,0,0,-0.010831242427229881,0,0,0.021662484854459763,0,0,-0.005415621213614941,0,0.043324969708919525,0.027078106999397278,0,-0.043324969708919525,-0.09206555783748627,0,0.08664993941783905,0.0704030767083168,0,0,-0.010831242427229881,0,0,0.043324969708919525,0,0,-0.0704030767083168,0,0,0.021662484854459763,0,-0.021662484854459763,-0.043324969708919525,0,0.021662484854459763,0.0704030767083168,0,0,-0.021662484854459763,0,0.06498745828866959,0.027078106999397278,0,0,-0.021662484854459763,0,0.043324969708919525,0.11914366483688354,0,-0.10831242799758911,-0.04874059185385704,0,0.021662484854459763,0.005415621213614941,0,-0.021662484854459763,-0.010831242427229881,0,0,0.17871549725532532,0,0,-0.021662484854459763,0,0,0.03249372914433479,0,-0.021662484854459763,-0.010831242427229881,0,0.021662484854459763,0.04874059185385704,0,-0.021662484854459763,-0.021662484854459763,0,0,0,0,-0.021662484854459763,0,0,0.043324969708919525,0.08123432099819183,0,0,-0.03790934756398201,0,0,0.005415621213614941,0,0,-0.05957183241844177,0,0,0.016246864572167397,0,0,0,0,0.021662484854459763,0.010831242427229881,0,0,-0.016246864572167397,0,0,0.05957183241844177,0,0,-0.03249372914433479,0,0,0.043324969708919525,0,0,-0.005415621213614941,0,0,0,0,-0.021662484854459763,0,0,0.06498745828866959,0.010831242427229881,0,-0.06498745828866959,-0.04874059185385704,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ -->\n$0011        INPFLG  $00= INPUT, $40= GET, $98= READ\n\nDiese Speicherzelle gibt an, in welche\n                     Routine der BASIC-Interpreter\n                     verzweigen soll.\n\n$0012        TANSGN  Vorzeichen bei ATN\n\nDie Speicherzelle $0012 wird von den\n                     trigonometrischen Funktionen zur\n                     Bestimmung des Vorzeichens verwendet.\n                     Zus√§tzlich dient die Speicherzelle $0012\n                     als Vergleichsoperator f√ºr\n                     Vergleichsoperationen.\n\n$0013        CHANNL  aktives I/O-Ger√§t $00= Direkteingabe\n\nDie Speicherzelle $0013 wird als Zeiger\n                     f√ºr die Peripherieger√§te wie Tastatur,\n                     Datasette, RS232, User-Port,\n                     Bildschirm, Drucker und Floppy\n                     verwendet.\n\n$0014-$0015  LINNUM  Integer-Adresse z.B. Zeilennummer\n\nIn dieser Speicherzelle werden die\n                     Zeilennummern von den Befehlen wie\n                     ON..GOTO, GOTO, GOSUB, ON..GOSUB\n                     und der Zeilenausgabe beim\n                     LIST-Befehl gespeichert.\n\n$0016        TEMPPT  Zeiger auf Stringstack\n\nDie Speicherzelle $0016 zeigt auf den\n                     n√§chsten freien Speicherplatz im\n                     Stringstack.\n\n$0017-$0018  LASTPT  Zeiger auf zuletzt verwendeten String\n\nDer Inhalt dieser beiden Bytes zeigt\n                     auf den zuletzt verwendeten\n                     Speicherplatz.\n\n$0019-$0021  TEMPST  Stringstack","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0.019859494641423225,0.014894620515406132,0,0,0,0,0.019859494641423225,0.029789241030812263,0,0,0,0,0.019859494641423225,0.019859494641423225,0,-0.019859494641423225,-0.009929747320711613,0,0.0794379785656929,0.029789241030812263,0,-0.019859494641423225,-0.014894620515406132,0,0.019859494641423225,0.019859494641423225,0,-0.03971898928284645,-0.014894620515406132,0,0.03971898928284645,0.03475411608815193,0,0,-0.009929747320711613,0,0,0.019859494641423225,0,-0.11915696412324905,-0.05461360886693001,0,0,0.04468386247754097,0,0,-0.019859494641423225,0,0.03971898928284645,0.014894620515406132,0,-0.03971898928284645,-0.009929747320711613,0,0.03971898928284645,0,0,-0.019859494641423225,0,0,0,0.014894620515406132,0,0,-0.009929747320711613,0,0,0.009929747320711613,0,-0.019859494641423225,-0.009929747320711613,0,0.03971898928284645,0.014894620515406132,0,0,-0.04964873567223549,0,0.19859494268894196,0.014894620515406132,0,-0.0794379785656929,0,0,0,0.03971898928284645,0,-0.13901646435260773,-0.03475411608815193,0,0.03971898928284645,0.014894620515406132,0,-0.05957848206162453,-0.014894620515406132,0,0.019859494641423225,0.03971898928284645,0,0,-0.004964873660355806,0,0.6355038285255432,0.009929747320711613,0,-0.019859494641423225,-0.014894620515406132,0,0.019859494641423225,0.024824367836117744,0,0,-0.009929747320711613,0,0.05957848206162453,0.03971898928284645,0,-0.03971898928284645,-0.009929747320711613,0,0,0.019859494641423225,0,-0.03971898928284645,-0.019859494641423225,0,0.17873544991016388,0.029789241030812263,0,0,0,0,0,0,0,-0.03971898928284645,-0.06454335898160934,0,0,0.004964873660355806,0,0,-0.004964873660355806,0,0.019859494641423225,0.029789241030812263,0,-0.019859494641423225,-0.019859494641423225,0,0.13901646435260773,0.024824367836117744,0,0,-0.03475411608815193,0,0,0.009929747320711613,0,-0.17873544991016388,-0.004964873660355806,0,0.019859494641423225,0,0,0,-0.014894620515406132,0,0.019859494641423225,0.019859494641423225,0,-0.03971898928284645,0,0,0.05957848206162453,0.1042623445391655,0,0,-0.04468386247754097,0,0.03971898928284645,0.004964873660355806,0,0,-0.06950823217630386,0,0,0.024824367836117744,0,-0.03971898928284645,-0.03971898928284645,0,0.11915696412324905,0.014894620515406132,0,-0.019859494641423225,0,0,0.03971898928284645,0.3376114070415497,0,-0.019859494641423225,-0.024824367836117744,0,0.05957848206162453,0.014894620515406132,0,-0.03971898928284645,-0.004964873660355806,0,0.03971898928284645,0.03475411608815193,0,-0.019859494641423225,-0.019859494641423225,0,0.09929747134447098,0.004964873660355806,0,-0.03971898928284645,-0.019859494641423225,0,0.05957848206162453,0.09433259814977646,0,0,-0.004964873660355806,0,0,0.019859494641423225,0,0,-0.024824367836117744,0,0.019859494641423225,0.004964873660355806,0,0,-0.009929747320711613,0,0,0.019859494641423225,0,-0.03971898928284645,-0.009929747320711613,0,0.019859494641423225,0.06950823217630386,0,-0.11915696412324905,-0.029789241030812263,0,0.019859494641423225,0,0,0,-0.08936772495508194,0,0,0.019859494641423225,0,-0.019859494641423225,-0.009929747320711613,0,0.019859494641423225,0.019859494641423225,0,-0.019859494641423225,-0.024824367836117744,0,0.11915696412324905,0.029789241030812263,0,-0.019859494641423225,0,0,0,0.019859494641423225,0,-0.05957848206162453,-0.004964873660355806,0,0.05957848206162453,0.009929747320711613,0,0,-0.019859494641423225,0,0,0.10922721773386002,0,0,-0.029789241030812263,0,0.03971898928284645,0.019859494641423225,0,0,-0.04468386247754097,0,0.03971898928284645,0.03971898928284645,0,0,-0.03475411608815193,0,0,0.024824367836117744,0,-0.019859494641423225,-0.009929747320711613,0,0.019859494641423225,0.208524689078331,0,-0.019859494641423225,-0.024824367836117744,0,0.03971898928284645,0.03475411608815193,0,0,0,0,0.019859494641423225,0.014894620515406132,0,-0.09929747134447098,-0.009929747320711613,0,0.03971898928284645,0.009929747320711613,0,-0.019859494641423225,-0.009929747320711613,0,0,0.04468386247754097,0,-0.019859494641423225,-0.019859494641423225,0,0,0.009929747320711613,0,0,-0.06950823217630386,0,0.019859494641423225,0.009929747320711613,0,-0.019859494641423225,0,0,0.019859494641423225,0.004964873660355806,0,0,-0.014894620515406132,0,0.019859494641423225,0.04468386247754097,0,-0.03971898928284645,-0.009929747320711613,0,0.019859494641423225,0.05957848206162453,0,0,-0.05461360886693001,0,0.0794379785656929,0.004964873660355806,0,-0.05957848206162453,-0.029789241030812263,0,0.019859494641423225,0.03475411608815193,0,-0.019859494641423225,-0.009929747320711613,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-2 -->\nDie Angaben im Stringstack enthalten\n                     die Stringl√§nge sowie die Anfangs-\n                     und Endadressen des vorherigen\n                     Strings.\n\n$0022-$0025  INDEX   Zeiger f√ºr diverse Zwecke\n\nDiese Speicherzellen benutzt der\n                     Interpreter, um verschiedene\n                     Zwischenergebnisse zu speichern.\n\n$0026-$002A  RES     Register f√ºr Funktionsauswertung und\n                     Arithmetik\n\nDiese Speicherzellen werden vom\n                     BASIC-Interpreter auch zum Speichern\n                     von Zwischenergebnissen bei der\n                     Multiplikation und Division benutzt.\n\n$002B-$002C  TXTTAB  Zeiger auf BASIC-Programm Anfang\n\nDer Anfangsbereich des BASIC ist in\n                     Low- und Highbyte angegeben. Man kann\n                     durch die beiden Bytes den BASIC-Start\n                     abfragen oder ver√§ndern.\n\n$002D-$002E  VARTAB  Zeiger auf BASIC-Programmende\n\nDieser Zeiger teilt dem Interpreter\n                     das BASIC-Ende mit, damit die\n                     Variablen hinter dem Programm abgelegt\n                     werden k√∂nnen.\n\n$002F-$0030  ARYTAB  Zeiger auf Start der Arrays\n\nDas LOW- und HIGH-Byte der Adressen\n                     geben dem BASIC-Interpreter die\n                     Information, ab welcher Speicherzelle\n                     die Arrays eines BASIC-Programms\n                     gespeichert sind.\n\n$0031-$0032  STREND  Zeiger auf Ende der Datenfelder","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-2"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0,0,0,-0.021167872473597527,0,0.021167872473597527,0.03704378008842468,0,-0.04233574494719505,-0.010583936236798763,0,0.021167872473597527,0.04233574494719505,0,-0.0846714898943901,-0.09525542706251144,0,0.12700724601745605,0.04233574494719505,0,-0.04233574494719505,-0.015875905752182007,0,0,0.026459841057658195,0,-0.06350362300872803,-0.010583936236798763,0,0.0846714898943901,0.04762771353125572,0,-0.06350362300872803,0,0,0.04233574494719505,0,0,-0.06350362300872803,-0.015875905752182007,0,0.021167872473597527,0.04233574494719505,0,0,-0.005291968118399382,0,0.021167872473597527,0.04762771353125572,0,0,-0.005291968118399382,0,0.04233574494719505,0,0,-0.06350362300872803,-0.010583936236798763,0,0.021167872473597527,0,0,-0.04233574494719505,0,0,0.021167872473597527,0.015875905752182007,0,-0.021167872473597527,-0.03704378008842468,0,0,0.010583936236798763,0,-0.021167872473597527,-0.026459841057658195,0,0.12700724601745605,0.026459841057658195,0,-0.04233574494719505,-0.005291968118399382,0,0,0,0,-0.0846714898943901,-0.026459841057658195,0,0,0.04233574494719505,0,-0.06350362300872803,-0.04233574494719505,0,0.021167872473597527,0.031751811504364014,0,-0.021167872473597527,-0.010583936236798763,0,0.5715326070785522,0.010583936236798763,0,-0.021167872473597527,-0.021167872473597527,0,0.04233574494719505,0.010583936236798763,0,-0.04233574494719505,-0.04762771353125572,0,0.06350362300872803,0.06350362300872803,0,-0.021167872473597527,-0.031751811504364014,0,0.04233574494719505,0.010583936236798763,0,0,-0.031751811504364014,0,0.1905108541250229,0.06350362300872803,0,0,-0.07408756017684937,0,0.021167872473597527,0.021167872473597527,0,-0.0846714898943901,-0.03704378008842468,0,0.021167872473597527,0.021167872473597527,0,-0.04233574494719505,0,0,0,0.015875905752182007,0,-0.021167872473597527,0,0,0.10583936423063278,0.021167872473597527,0,-0.021167872473597527,-0.03704378008842468,0,0.021167872473597527,0.010583936236798763,0,-0.06350362300872803,-0.021167872473597527,0,0.021167872473597527,0.015875905752182007,0,0,-0.010583936236798763,0,0.0846714898943901,0,0,-0.04233574494719505,-0.015875905752182007,0,0,0.06350362300872803,0,0,-0.021167872473597527,0,0.06350362300872803,0.005291968118399382,0,-0.04233574494719505,-0.04762771353125572,0,0,0.005291968118399382,0,-0.04233574494719505,-0.031751811504364014,0,0.1693429797887802,0.021167872473597527,0,-0.021167872473597527,-0.010583936236798763,0,0.021167872473597527,0.2857663035392761,0,-0.04233574494719505,-0.021167872473597527,0,0.14817512035369873,0.04233574494719505,0,0,-0.03704378008842468,0,0,0.031751811504364014,0,-0.021167872473597527,-0.010583936236798763,0,0.1693429797887802,0.026459841057658195,0,-0.021167872473597527,-0.010583936236798763,0,0.14817512035369873,0.10054739564657211,0,-0.021167872473597527,-0.021167872473597527,0,0,0.04233574494719505,0,0,-0.05291968211531639,0,0,0.010583936236798763,0,0,-0.03704378008842468,0,0.021167872473597527,0.021167872473597527,0,-0.10583936423063278,-0.026459841057658195,0,0,0.06350362300872803,0,-0.10583936423063278,-0.026459841057658195,0,0.021167872473597527,0.015875905752182007,0,-0.021167872473597527,-0.031751811504364014,0,0,0.015875905752182007,0,-0.021167872473597527,0,0,0,0.05291968211531639,0,-0.04233574494719505,-0.03704378008842468,0,0.12700724601745605,0.005291968118399382,0,-0.04233574494719505,-0.010583936236798763,0,0,0.03704378008842468,0,0,-0.026459841057658195,0,0,0,0,-0.021167872473597527,-0.026459841057658195,0,0,0.11642330139875412,0,-0.04233574494719505,-0.021167872473597527,0,0.04233574494719505,0.010583936236798763,0,0,-0.04233574494719505,0,0.0846714898943901,0.07408756017684937,0,-0.1693429797887802,-0.015875905752182007,0,0,0.005291968118399382,0,-0.021167872473597527,-0.015875905752182007,0,0.04233574494719505,0.22755463421344757,0,0,-0.015875905752182007,0,0.021167872473597527,0.0846714898943901,0,0,-0.021167872473597527,0,0,0.015875905752182007,0,-0.021167872473597527,-0.005291968118399382,0,0,0.010583936236798763,0,0,0,0,0.021167872473597527,0.05821165069937706,0,0,-0.05291968211531639,0,0,0.005291968118399382,0,-0.021167872473597527,-0.07408756017684937,0,0,0.015875905752182007,0,0,-0.021167872473597527,0,0.021167872473597527,0,0,-0.021167872473597527,-0.015875905752182007,0,0.021167872473597527,0.026459841057658195,0,0,-0.026459841057658195,0,0.04233574494719505,0.0687955915927887,0,0,-0.03704378008842468,0,0,0.005291968118399382,0,-0.04233574494719505,0,0,0.0846714898943901,0.021167872473597527,0,-0.06350362300872803,-0.021167872473597527,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-3 -->\nDiese beiden Speicherzellen zeigen auf\n                     das Ende der Arrays. Zu beachten ist,\n                     da√ü die Zeichenketten r√ºckw√§rts\n                     gespeichert werden.\n\n$0033-$0034  FRETOP  Zeiger auf Stringgrenze\n\nDer Inhalt dieser Speicherzellen\n                     zeigt auf das Ende des Textspeichers,\n                     der aber noch zugleich das obere Ende\n                     des frei verf√ºgbaren RAM-Bereichs\n                     anzeigt.\n\n$0035-$0036  FRESPC  Hilfszeiger f√ºr Strings\n\nIn diesen Zellen wird die Adresse der\n                     Zeichenkette verzeichnet, die als\n                     letzte von Routinen zur\n                     Stringmanipulation abgespeichert\n                     worden ist.\n\n$0037-$0038  MEMSIZ  Zeiger auf BASIC-RAM-Ende\n\nDieser Zeiger gibt dem Interpreter an,\n                     welches die h√∂chste von BASIC\n                     verwendbare Speicheradresse ist.\n\n$0039-$003A  CURLIN  augenblickliche BASIC-Zeilennummer\n\nIn diesen Speicherzellen wird die\n                     Zeilennummer verzeichnet, welche\n                     gerade ausgef√ºhrt wird.\n\n$003B-$003C  OLDLIN  Zeilennummer f√ºr CONT\n\nFalls eine Unterbrechung des\n                     Programmablaufs durch den Befehl STOP\n                     oder √ºber die STOP-Taste erfolgt,\n                     wird in den Speicheradressen $003B-$003C\n                     die Zeilennummer gespeichert, die\n                     gerade abgearbeitet wurde.\n\n$003D-$003E  OLDTXT  Zeiger auf n√§chstes Statement f√ºr CONT","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-3"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0.027676818892359734,0,0,-0.027676818892359734,0,0,0.07380485534667969,0,0,-0.013838409446179867,0,0.036902427673339844,0.1199328824877739,0,-0.036902427673339844,-0.023064015433192253,0,0.05535363778471947,0.036902427673339844,0,-0.018451213836669922,-0.018451213836669922,0,0.05535363778471947,0.013838409446179867,0,-0.11070727556943893,-0.009225606918334961,0,0.036902427673339844,0.041515231132507324,0,0,-0.018451213836669922,0,0,0.036902427673339844,0,-0.018451213836669922,-0.013838409446179867,0,0.036902427673339844,0.05996644124388695,0,0,-0.018451213836669922,0,0,0.08303046226501465,0,-0.036902427673339844,-0.036902427673339844,0,0.14760971069335938,0,0,-0.05535363778471947,-0.0046128034591674805,0,0,0,0,0,0,0,0,0.009225606918334961,0,-0.05535363778471947,-0.013838409446179867,0,0.018451213836669922,0.0046128034591674805,0,-0.018451213836669922,-0.018451213836669922,0,0.05535363778471947,0.013838409446179867,0,-0.036902427673339844,0,0,0.05535363778471947,0,0,-0.14760971069335938,-0.041515231132507324,0,0.018451213836669922,0.036902427673339844,0,-0.018451213836669922,-0.018451213836669922,0,0.018451213836669922,0,0,0,0,0,0.4981827437877655,0,0,-0.07380485534667969,0,0,0.018451213836669922,0.023064015433192253,0,-0.036902427673339844,-0.023064015433192253,0,0.09225606173276901,0.041515231132507324,0,0,-0.023064015433192253,0,0.018451213836669922,0.041515231132507324,0,0,-0.05535363778471947,0,0.22141455113887787,0.07841765880584717,0,-0.036902427673339844,-0.0046128034591674805,0,0,0,0,0,-0.013838409446179867,0,0,0.023064015433192253,0,-0.018451213836669922,-0.0046128034591674805,0,0.018451213836669922,0.0046128034591674805,0,0,-0.023064015433192253,0,0.11070727556943893,0.09225606173276901,0,0,-0.03228962421417236,0,0,0,0,-0.018451213836669922,0,0,0.018451213836669922,0.013838409446179867,0,0,-0.046128030866384506,0,0.018451213836669922,0.009225606918334961,0,0,-0.009225606918334961,0,0,0.027676818892359734,0,0,-0.018451213836669922,0,0.18451212346553802,0.03228962421417236,0,-0.05535363778471947,-0.07380485534667969,0,0,0.009225606918334961,0,-0.05535363778471947,-0.009225606918334961,0,0.14760971069335938,0.009225606918334961,0,-0.036902427673339844,0,0,0.018451213836669922,0.24909137189388275,0,0,-0.05535363778471947,0,0.12915849685668945,0.027676818892359734,0,-0.036902427673339844,-0.023064015433192253,0,0,0.046128030866384506,0,-0.018451213836669922,0,0,0.2398657649755478,0.009225606918334961,0,-0.07380485534667969,0,0,0.22141455113887787,0.1199328824877739,0,0,-0.027676818892359734,0,0,0.013838409446179867,0,-0.018451213836669922,-0.0046128034591674805,0,0,0.013838409446179867,0,0,-0.036902427673339844,0,0,0.018451213836669922,0,-0.05535363778471947,0,0,0.018451213836669922,0.05535363778471947,0,-0.07380485534667969,-0.0046128034591674805,0,0.05535363778471947,0.009225606918334961,0,0,-0.009225606918334961,0,0,0.009225606918334961,0,-0.018451213836669922,-0.009225606918334961,0,0,0.046128030866384506,0,-0.036902427673339844,-0.013838409446179867,0,0,0,0,0,0,0,0,0.09225606173276901,0,0,-0.041515231132507324,0,0.018451213836669922,0.0046128034591674805,0,-0.018451213836669922,-0.03228962421417236,0,0.05535363778471947,0.08764325827360153,0,-0.05535363778471947,-0.027676818892359734,0,0.05535363778471947,0.023064015433192253,0,0,-0.036902427673339844,0,0.2398657649755478,0.06919205188751221,0,-0.018451213836669922,-0.023064015433192253,0,0,0.0046128034591674805,0,-0.018451213836669922,-0.009225606918334961,0,0.018451213836669922,0.24447856843471527,0,-0.018451213836669922,-0.05535363778471947,0,0.018451213836669922,0.11532007902860641,0,-0.018451213836669922,-0.009225606918334961,0,0.07380485534667969,0.023064015433192253,0,-0.018451213836669922,-0.009225606918334961,0,0,0.0046128034591674805,0,0,0,0,0.05535363778471947,0.05535363778471947,0,-0.07380485534667969,-0.036902427673339844,0,0,0.009225606918334961,0,0,-0.036902427673339844,0,0,0.027676818892359734,0,0,-0.0046128034591674805,0,0.018451213836669922,0.0046128034591674805,0,0,-0.009225606918334961,0,0,0.027676818892359734,0,0,-0.018451213836669922,0,0,0,0,0,-0.0046128034591674805,0,0,0.0046128034591674805,0,-0.07380485534667969,0,0,0.07380485534667969,0.013838409446179867,0,-0.018451213836669922,-0.009225606918334961,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-5 -->\nDiese Speicherzellen dienen als\n                     Zwischenspeicher f√ºr mathematische\n                     Operationen. Au√üerdem werden die\n                     Speicherzellen auch noch vom\n                     READ-Befehl als Zwischenspeicher\n                     verwendet.\n\n$004D        OPMASK  Maske f√ºr Vergleichsoperationen\n\nDieser Zeiger wird von mathematischen\n                     Routinen als Vergleichsoperator\n                     verwendet, da√ü hei√üt um festzustellen,\n                     ob ein Wert kleiner, gleich oder\n                     gr√∂√üer ist.\n\n$004E-$004F          Zeiger f√ºr FN\n\nIn $004E-$004F ist die Adresse angegeben,\n                     wo die Variablen und ihr Wert abgelegt\n                     sind.\n\n$0050-$0052          Stringdescriptor\n\n$0053                Schrittweite f√ºr Garbage Collection\n\n$0054                Konstante $4C JMP f√ºr Funktionen\n\nHier ist die Konstante f√ºr JMP ($4C)\n                     festgelegt.\n\n$0055-$0056          Sprungvektor f√ºr Funktionen\n\nIn $0055-$0056 werden die Sprungvektoren\n                     f√ºr die Funktionen angegeben.\n\n$0057-$005B  TEMPF1  Register f√ºr Arithmetik, Akku #3\n\nDie Register werden f√ºr die\n                     Zwischenspeicherung von\n                     Polynomauswertungen (TAN) ben√ñtigt.\n\n$005C-$0060  TEMPF2  Register f√ºr Arithmetik, Akku #4\n\nsiehe oben\n\n$0061-$0066  FAC     Flie√ükommaakku #1, FAC\n\nDiese Register werden f√ºr die\n                     Berechnung von Flie√ükommazahlen\n                     verwendet.\n\n$0066        FACSGN  Vorzeichen von FAC","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-5"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0.01730353757739067,0.008651768788695335,0,0,-0.004325884394347668,0,0.01730353757739067,0.06921415030956268,0,-0.03460707515478134,-0.008651768788695335,0,0.01730353757739067,0.05191061273217201,0,0,-0.038932960480451584,0,0.01730353757739067,0.01730353757739067,0,-0.06921415030956268,-0.04758472740650177,0,0,0.038932960480451584,0,-0.05191061273217201,0,0,0.01730353757739067,0.05191061273217201,0,-0.03460707515478134,-0.008651768788695335,0,0,0.012977653183043003,0,-0.13842830061912537,-0.025955306366086006,0,0.01730353757739067,0.04758472740650177,0,0,-0.038932960480451584,0,0,0.06488826125860214,0,-0.05191061273217201,-0.008651768788695335,0,0.05191061273217201,0.008651768788695335,0,-0.05191061273217201,-0.056236498057842255,0,0.01730353757739067,0.012977653183043003,0,-0.01730353757739067,-0.012977653183043003,0,0,0.025955306366086006,0,0,-0.012977653183043003,0,0,0.012977653183043003,0,0,-0.01730353757739067,0,0.05191061273217201,0.004325884394347668,0,-0.06921415030956268,-0.008651768788695335,0,0.01730353757739067,0,0,-0.1211247593164444,-0.04758472740650177,0,0,0,0,-0.01730353757739067,-0.01730353757739067,0,0,0.012977653183043003,0,0,0,0,0.6056237816810608,0.012977653183043003,0,-0.01730353757739067,-0.038932960480451584,0,0.01730353757739067,0.012977653183043003,0,0,-0.008651768788695335,0,0.10382122546434402,0.008651768788695335,0,0,-0.03460707515478134,0,0.01730353757739067,0.01730353757739067,0,0,-0.025955306366086006,0,0.25955304503440857,0.03460707515478134,0,-0.01730353757739067,-0.0302811898291111,0,0.01730353757739067,0,0,-0.01730353757739067,-0.0908435732126236,0,0,0.021629421040415764,0,0,0,0,0.06921415030956268,0,0,0,-0.0302811898291111,0,0.08651768416166306,0.0302811898291111,0,-0.01730353757739067,-0.038932960480451584,0,0,0.01730353757739067,0,-0.03460707515478134,-0.01730353757739067,0,0,0.012977653183043003,0,0,-0.004325884394347668,0,0.01730353757739067,0.004325884394347668,0,-0.05191061273217201,-0.021629421040415764,0,0.03460707515478134,0.0302811898291111,0,-0.01730353757739067,-0.038932960480451584,0,0.13842830061912537,0.021629421040415764,0,-0.03460707515478134,-0.0605623796582222,0,0,0,0,-0.05191061273217201,-0.008651768788695335,0,0.06921415030956268,0,0,-0.01730353757739067,-0.004325884394347668,0,0.05191061273217201,0.3028118908405304,0,0,-0.0302811898291111,0,0.20764245092868805,0.008651768788695335,0,0,-0.008651768788695335,0,0.01730353757739067,0.056236498057842255,0,0,0,0,0.1211247593164444,0.012977653183043003,0,-0.08651768416166306,-0.008651768788695335,0,0.15573184192180634,0.13410241901874542,0,0,-0.008651768788695335,0,0,0.012977653183043003,0,-0.05191061273217201,-0.025955306366086006,0,0.01730353757739067,0,0,-0.01730353757739067,-0.012977653183043003,0,0,0.038932960480451584,0,-0.05191061273217201,-0.008651768788695335,0,0.05191061273217201,0.04325884208083153,0,-0.06921415030956268,-0.04325884208083153,0,0.01730353757739067,0.004325884394347668,0,0,-0.01730353757739067,0,0,0,0,-0.01730353757739067,-0.012977653183043003,0,0,0.021629421040415764,0,0,-0.038932960480451584,0,0.01730353757739067,0.021629421040415764,0,0,-0.012977653183043003,0,0.01730353757739067,0.06921415030956268,0,-0.08651768416166306,-0.01730353757739067,0,0.01730353757739067,0,0,-0.03460707515478134,-0.025955306366086006,0,0,0.04758472740650177,0,0,-0.025955306366086006,0,0.06921415030956268,0.0302811898291111,0,0,-0.0302811898291111,0,0.10382122546434402,0.10382122546434402,0,-0.05191061273217201,-0.004325884394347668,0,0,0.008651768788695335,0,-0.08651768416166306,0,0,0.05191061273217201,0.211968332529068,0,0,-0.04758472740650177,0,0,0.08219180256128311,0,-0.01730353757739067,0,0,0.01730353757739067,0.025955306366086006,0,-0.05191061273217201,-0.025955306366086006,0,0.03460707515478134,0.012977653183043003,0,-0.03460707515478134,-0.008651768788695335,0,0.05191061273217201,0.06488826125860214,0,-0.01730353757739067,-0.0302811898291111,0,0.01730353757739067,0.0302811898291111,0,-0.08651768416166306,-0.038932960480451584,0,0.01730353757739067,0.008651768788695335,0,-0.01730353757739067,0,0,0.05191061273217201,0.01730353757739067,0,0,-0.008651768788695335,0,0,0.021629421040415764,0,0,-0.004325884394347668,0,0,0.008651768788695335,0,-0.01730353757739067,-0.008651768788695335,0,0,0.008651768788695335,0,-0.08651768416166306,-0.04325884208083153,0,0,0.012977653183043003,0,-0.03460707515478134,-0.0302811898291111,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-6 -->\nDer Zeiger gibt an, ob der Wert, der\n                     im FAC steht, positiv oder negativ\n                     ist.\n\n$0067        SGNFLG  Z√§hler f√ºr Polynomauswertung\n\nDiese Speicherzelle dient als Z√§hler\n                     f√ºr die Polynomauswertung.\n\n$0068        BITS    Rundungsbyte f√ºr FAC\n\nHier wird angegeben, ob der Wert, der\n                     im FAC steht, auf- oder abgerundet\n                     werden soll.\n\n$0069-$006E          Flie√ükommaakku#2, ARG\n\nDiese Register werden f√ºr die\n                     Berechnung von Flie√ükommazahlen\n                     verwendet.\n\n$006E        ARGSGN  Vorzeichen von ARG\n\nHier wird angegeben, ob der Wert, der\n                     im ARG steht, positiv oder negativ ist.\n\n$006F        ARISGN  Vergleichsbyte der Vorzeichen von FAC\n                     und ARG\n\nDiese Speicherzelle gibt dem\n                     Interpreter an, ob die Vorzeichen der\n                     beiden Akkus √ºbereinstimmen.\n\n$0070        FACOV   FAC-Rundungsbyte\n\n$0071-$0072  FBUFPT  Zeiger f√ºr Polynomauswertung\n\nHier ist in LOW- und HIGH-Byte\n                     angegeben, was ausgewertet werden\n                     sol 1.\n\n$0073-$008A  CHRGET  CHRGET-Routine\n\nDiese Routine holt ein Zeichen aus dem\n                     BASIC-Text.\n\n$007A-$007B  TXTPTR  Programmzeiger\n\nIn diesen Speicherzellen wird in LOW-\n                     und HIGH-Byte die Anfangsadresse des\n                     als n√§chstes auszuf√ºhrenden Befehls\n                     im BASIC-RAM angegeben.\n\n$008B-$008F  RNDX    letzter RND-Wert","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-6"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0.006399746052920818,0,-0.025598984211683273,0,0,0.05119796842336655,0.01919923909008503,0,0,-0.006399746052920818,0,0.07679695636034012,0.07039720565080643,0,-0.025598984211683273,-0.05119796842336655,0,0.05119796842336655,0.044798221439123154,0,0,-0.031998731195926666,0,0.05119796842336655,0.01919923909008503,0,-0.12799492478370667,-0.006399746052920818,0,0.025598984211683273,0.05119796842336655,0,0,-0.05119796842336655,0,0.025598984211683273,0.044798221439123154,0,-0.12799492478370667,-0.01919923909008503,0,0,0.1023959368467331,0,-0.025598984211683273,-0.012799492105841637,0,0.025598984211683273,0.044798221439123154,0,0,-0.012799492105841637,0,0.025598984211683273,0.012799492105841637,0,-0.15359391272068024,-0.06399746239185333,0,0.07679695636034012,0,0,0,0,0,0.05119796842336655,0,0,-0.12799492478370667,-0.012799492105841637,0,0.05119796842336655,0.006399746052920818,0,0,-0.006399746052920818,0,0.1023959368467331,0.01919923909008503,0,-0.025598984211683273,-0.012799492105841637,0,0,0.012799492105841637,0,-0.07679695636034012,-0.044798221439123154,0,0.025598984211683273,0.044798221439123154,0,-0.1023959368467331,-0.06399746239185333,0,0.05119796842336655,0.006399746052920818,0,-0.05119796842336655,-0.012799492105841637,0,0.4607817232608795,0.025598984211683273,0,-0.05119796842336655,-0.012799492105841637,0,0.025598984211683273,0.044798221439123154,0,-0.025598984211683273,-0.012799492105841637,0,0.1023959368467331,0.025598984211683273,0,0,0,0,0,0.025598984211683273,0,-0.05119796842336655,-0.06399746239185333,0,0.23039086163043976,0.044798221439123154,0,0,-0.01919923909008503,0,0,0.01919923909008503,0,0,-0.07679695636034012,0,0,0,0,-0.025598984211683273,-0.012799492105841637,0,0,0.012799492105841637,0,0,-0.012799492105841637,0,0.17919288575649261,0.031998731195926666,0,-0.025598984211683273,-0.08319669961929321,0,0,0.07039720565080643,0,0,0,0,0,0.025598984211683273,0,0,-0.07039720565080643,0,0.025598984211683273,0.031998731195926666,0,-0.05119796842336655,-0.025598984211683273,0,0.025598984211683273,0.05119796842336655,0,0,-0.012799492105841637,0,0.07679695636034012,0,0,-0.025598984211683273,-0.03839847818017006,0,0.025598984211683273,0.012799492105841637,0,-0.05119796842336655,-0.05119796842336655,0,0.12799492478370667,0.025598984211683273,0,-0.025598984211683273,-0.031998731195926666,0,0.07679695636034012,0.23039086163043976,0,-0.025598984211683273,-0.044798221439123154,0,0.2047918736934662,0.031998731195926666,0,-0.1023959368467331,-0.044798221439123154,0,0.025598984211683273,0.05119796842336655,0,-0.025598984211683273,-0.006399746052920818,0,0.15359391272068024,0.012799492105841637,0,-0.05119796842336655,-0.025598984211683273,0,0.17919288575649261,0.13439466059207916,0,0,-0.006399746052920818,0,0,0.012799492105841637,0,-0.05119796842336655,0,0,0,0.012799492105841637,0,0,-0.044798221439123154,0,0,0.006399746052920818,0,-0.05119796842336655,0,0,0.025598984211683273,0.09599619358778,0,-0.025598984211683273,-0.044798221439123154,0,0.07679695636034012,0,0,0,-0.006399746052920818,0,0.05119796842336655,0.006399746052920818,0,-0.025598984211683273,0,0,0.025598984211683273,0.01919923909008503,0,0,-0.06399746239185333,0,0.025598984211683273,0.031998731195926666,0,0,0,0,0,0.05119796842336655,0,-0.05119796842336655,-0.044798221439123154,0,0.025598984211683273,0.025598984211683273,0,0,-0.025598984211683273,0,0,0.08959644287824631,0,0,-0.01919923909008503,0,0,0.03839847818017006,0,0,-0.031998731195926666,0,0.12799492478370667,0.10879568010568619,0,-0.07679695636034012,-0.07679695636034012,0,0.025598984211683273,0.025598984211683273,0,-0.05119796842336655,-0.025598984211683273,0,0,0.19199238717556,0,0,-0.03839847818017006,0,0,0.09599619358778,0,-0.05119796842336655,-0.006399746052920818,0,0.07679695636034012,0.025598984211683273,0,-0.025598984211683273,-0.025598984211683273,0,0.12799492478370667,0,0,0,-0.012799492105841637,0,0,0.05759771540760994,0,-0.025598984211683273,-0.025598984211683273,0,0.025598984211683273,0.012799492105841637,0,-0.1023959368467331,-0.012799492105841637,0,0,0.03839847818017006,0,0,-0.006399746052920818,0,0,0.025598984211683273,0,0,-0.012799492105841637,0,0,0.05759771540760994,0,0,-0.006399746052920818,0,0,0.012799492105841637,0,-0.025598984211683273,0,0,0,0,0,-0.07679695636034012,-0.025598984211683273,0,0.07679695636034012,0.01919923909008503,0,-0.12799492478370667,-0.012799492105841637,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-8 -->\nDieses Register hat die Aufgabe, kleine\n                     Unterschiede bei der Aufnahmegeschwindigkeit\n                     auszugleichen.\n\n$0093        VERCK   Flag f√ºr LOAD $00, oder f√ºr VERIFY $01\n\nDieses Flag dient dem Betriebssystem\n                     dazu, um zu unterscheiden, ob eine\n                     LOAD oder eine VERIFY Operation\n                     erfolgt.\n\n$0094        C3P0    Flag bei IEC-Ausgabe\n\nDiese Adresse setzt bei Floppy und\n                     Drucker den \"LISTEN\" Zustand.\n\n$0095        BSOUR   Ausgabepuffer f√ºr IEC-Bus\n\nHier wird das Zeichen abgelegt,\n                     welches √ºber den seriellen Port zur\n                     Floppy oder zum Drucker geschickt\n                     werden soll, sobald die Adresse $0094\n                     Bereitschaft zeigt.\n\n$0096        SYNO    Flag f√ºr EOT vom Band empfangen\n\nIn $0096 werden die Daten\n                     zwischengespeichert, die vom Band\n                     gelesen werden.\n\n$0097        XSAV    Zwischenspeicher f√ºr Register\n\nBeim Lesen von Band wird hier das\n                     X-Register zwischengespeichert.\n\n$0098        LDTND   Anzahl der offenen Files\n\nIn dieser Speicherzelle wird\n                     festgehalten, wie viele Files gleichzeitig\n                     ge√∂ffnet sind.\n\n$0099        DFLTN   aktives Eingabeger√§t","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-8"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0.015063055790960789,0,0,0,0,0.030126111581921577,0.011297292076051235,0,-0.015063055790960789,-0.003765763947740197,0,0.015063055790960789,0.026360347867012024,0,-0.015063055790960789,-0.037657637149095535,0,0.030126111581921577,0.02259458415210247,0,0,-0.011297292076051235,0,0.060252223163843155,0.02259458415210247,0,-0.015063055790960789,-0.02259458415210247,0,0.030126111581921577,0.04518916830420494,0,0,-0.011297292076051235,0,0.015063055790960789,0,0,-0.030126111581921577,-0.003765763947740197,0,0,0.018828818574547768,0,-0.015063055790960789,-0.007531527895480394,0,0,0.037657637149095535,0,-0.030126111581921577,0,0,0.04518916830420494,0.007531527895480394,0,-0.030126111581921577,-0.04142340272665024,0,0.030126111581921577,0.015063055790960789,0,0,0,0,0,0.007531527895480394,0,-0.030126111581921577,-0.026360347867012024,0,0,0.003765763947740197,0,0,-0.003765763947740197,0,0,0.015063055790960789,0,0,-0.003765763947740197,0,0.015063055790960789,0.003765763947740197,0,-0.1054413914680481,-0.02259458415210247,0,0,0.026360347867012024,0,-0.030126111581921577,-0.02259458415210247,0,0,0.003765763947740197,0,0,0,0,0.692900538444519,0.015063055790960789,0,-0.015063055790960789,-0.018828818574547768,0,0.015063055790960789,0.011297292076051235,0,0,-0.09790986031293869,0,0.07531527429819107,0.015063055790960789,0,-0.015063055790960789,0,0,0.015063055790960789,0.030126111581921577,0,0,-0.007531527895480394,0,0.1054413914680481,0.026360347867012024,0,-0.030126111581921577,-0.011297292076051235,0,0,0.011297292076051235,0,-0.030126111581921577,-0.018828818574547768,0,0,0.007531527895480394,0,-0.015063055790960789,-0.018828818574547768,0,0,0.011297292076051235,0,0,-0.015063055790960789,0,0.1054413914680481,0.02259458415210247,0,0,-0.015063055790960789,0,0,0.015063055790960789,0,0,0,0,0,0.007531527895480394,0,0,-0.015063055790960789,0,0.015063055790960789,0.003765763947740197,0,-0.015063055790960789,-0.011297292076051235,0,0.060252223163843155,0.007531527895480394,0,0,0,0,0.04518916830420494,0.011297292076051235,0,-0.015063055790960789,-0.060252223163843155,0,0.015063055790960789,0,0,-0.060252223163843155,-0.015063055790960789,0,0.060252223163843155,0.003765763947740197,0,-0.015063055790960789,0,0,0.030126111581921577,0.3464502692222595,0,0,-0.018828818574547768,0,0.09037833660840988,0.018828818574547768,0,-0.04518916830420494,-0.011297292076051235,0,0,0.037657637149095535,0,-0.015063055790960789,-0.007531527895480394,0,0.07531527429819107,0.015063055790960789,0,-0.030126111581921577,-0.003765763947740197,0,0.09037833660840988,0.05648645758628845,0,0,-0.018828818574547768,0,0,0.007531527895480394,0,-0.07531527429819107,-0.015063055790960789,0,0,0.015063055790960789,0,0,-0.011297292076051235,0,0,0.007531527895480394,0,-0.04518916830420494,0,0,0.015063055790960789,0.05648645758628845,0,-0.015063055790960789,-0.007531527895480394,0,0.030126111581921577,0,0,-0.015063055790960789,-0.003765763947740197,0,0.015063055790960789,0,0,0,-0.007531527895480394,0,0.015063055790960789,0.018828818574547768,0,0,-0.015063055790960789,0,0.015063055790960789,0.037657637149095535,0,0,0,0,0,0.02259458415210247,0,-0.04518916830420494,-0.015063055790960789,0,0.015063055790960789,0.007531527895480394,0,-0.3615133464336395,-0.030126111581921577,0,0,0.030126111581921577,0,0,-0.007531527895480394,0,0,0.018828818574547768,0,0,-0.026360347867012024,0,0.04518916830420494,0.04518916830420494,0,-0.04518916830420494,-0.030126111581921577,0,0.015063055790960789,0,0,-0.015063055790960789,-0.007531527895480394,0,0.030126111581921577,0.2108827829360962,0,-0.04518916830420494,-0.018828818574547768,0,0.04518916830420494,0.048954930156469345,0,0,0,0,0,0.018828818574547768,0,0,-0.04142340272665024,0,0,0.003765763947740197,0,0,0,0,0.030126111581921577,0.026360347867012024,0,0,-0.030126111581921577,0,0.015063055790960789,0.007531527895480394,0,-0.04518916830420494,-0.015063055790960789,0,0.030126111581921577,0.015063055790960789,0,0,-0.011297292076051235,0,0.015063055790960789,0.007531527895480394,0,-0.030126111581921577,0,0,0,0.03389187529683113,0,0,0,0,0.015063055790960789,0.007531527895480394,0,0,0,0,0,0,0,-0.04518916830420494,-0.02259458415210247,0,0.04518916830420494,0.011297292076051235,0,-0.04518916830420494,-0.18452243506908417,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-9 -->\nIn dieser Speicherzelle wird\n                     festgehalten, welches Ger√§t zur\n                     Eingabe verwendet werden soll.\n                     Die Nummern sind folgenderma√üen\n                     festgelegt:\n                     \n                     |      |                     |\n                     |------|---------------------|\n                     | 0    | Tastatur            |\n                     | 1    | Datasette           |\n                     | 2    | RS232 und User-Port |\n                     | 3    | Bildschirm          |\n                     | 4-5  | Drucker             |\n                     | 8-11 | Laufwerke           |\n\n$009A        DFLTO   aktives Ausgabeger√§t\n\nDiese Speicherzelle ist mit der\n                     vorherigen zu vergleichen, nur steht\n                     hier die Nummer des Ger√§ts, √ºber das\n                     die Ausgabe erfolgt.\n\n$009B        PRTY    Parit√§t f√ºr Band\n\n√úber diese Speicherzelle findet eine\n                     Parity-Pr√ºfung (Quersummenbildung)\n                     statt. Dies dient dazu, um Lese- und\n                     Schreibfehler zu vermeiden.\n\n$009C        DPSW    Flag f√ºr Byte empfangen\n\nHier wird festgelegt, ob das gelesene\n                     Byte die Quersumme richtig gebildet\n                     hat oder nicht.\n\n$009D        MSGFLG  Flag f√ºr Direktmodus $80, Programm $00","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-9"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0.02178906463086605,0,0,-0.02723633125424385,0,0.02178906463086605,0.0544726625084877,0,0,-0.02723633125424385,0,0.02178906463086605,0.04902539774775505,0,0,-0.130734384059906,0,0.02178906463086605,0.02723633125424385,0,-0.130734384059906,-0.01634179800748825,0,0.065367192029953,0.0544726625084877,0,-0.065367192029953,-0.010894532315433025,0,0.02178906463086605,0.05991993099451065,0,-0.02178906463086605,-0.010894532315433025,0,0.02178906463086605,0.02723633125424385,0,-0.02178906463086605,0,0,0.02178906463086605,0.0544726625084877,0,0,-0.010894532315433025,0,0.02178906463086605,0.0435781292617321,0,0,-0.005447266157716513,0,0.0435781292617321,0.02178906463086605,0,-0.0435781292617321,-0.0326835960149765,0,0.0435781292617321,0,0,-0.0435781292617321,-0.005447266157716513,0,0,0.02178906463086605,0,0,-0.010894532315433025,0,0,0.010894532315433025,0,0,-0.0435781292617321,0,0.0871562585234642,0.01634179800748825,0,-0.0435781292617321,0,0,0,0.010894532315433025,0,-0.1089453250169754,-0.0326835960149765,0,0.02178906463086605,0.010894532315433025,0,-0.0435781292617321,-0.02723633125424385,0,0,0,0,-0.065367192029953,-0.01634179800748825,0,0.501148521900177,0.010894532315433025,0,-0.02178906463086605,-0.010894532315433025,0,0.02178906463086605,0.0326835960149765,0,-0.02178906463086605,-0.005447266157716513,0,0.0871562585234642,0.010894532315433025,0,0,-0.07081446051597595,0,0.065367192029953,0.0435781292617321,0,-0.130734384059906,-0.0326835960149765,0,0.2396797239780426,0.0326835960149765,0,-0.02178906463086605,-0.0544726625084877,0,0.0435781292617321,0.010894532315433025,0,-0.02178906463086605,-0.01634179800748825,0,0,0.01634179800748825,0,0,-0.005447266157716513,0,0.0435781292617321,0.02723633125424385,0,-0.02178906463086605,0,0,0.1743125170469284,0.0326835960149765,0,0,-0.02178906463086605,0,0,0.0326835960149765,0,0,-0.02178906463086605,0,0,0,0,0,0,0,0,0.010894532315433025,0,-0.0435781292617321,-0.010894532315433025,0,0.0871562585234642,0.0435781292617321,0,-0.065367192029953,-0.02178906463086605,0,0.130734384059906,0.005447266157716513,0,-0.1089453250169754,-0.0544726625084877,0,0.02178906463086605,0.010894532315433025,0,-0.1743125170469284,-0.0326835960149765,0,0.1089453250169754,0,0,-0.02178906463086605,-0.0326835960149765,0,0.1743125170469284,0.25602152943611145,0,0,-0.02723633125424385,0,0.1089453250169754,0.01634179800748825,0,-0.0435781292617321,-0.02178906463086605,0,0.02178906463086605,0.0435781292617321,0,0,0,0,0.130734384059906,0.03813086450099945,0,-0.0435781292617321,-0.065367192029953,0,0.1743125170469284,0.12528713047504425,0,-0.02178906463086605,-0.010894532315433025,0,0,0.02723633125424385,0,-0.0435781292617321,-0.0435781292617321,0,0,0.01634179800748825,0,-0.02178906463086605,-0.01634179800748825,0,0.0435781292617321,0.02723633125424385,0,-0.0435781292617321,-0.01634179800748825,0,0.0435781292617321,0.09260352700948715,0,-0.0871562585234642,-0.005447266157716513,0,0.065367192029953,0.005447266157716513,0,0,0,0,0,0.005447266157716513,0,0,0,0,0,0.010894532315433025,0,-0.02178906463086605,-0.0326835960149765,0,0,0.0544726625084877,0,-0.065367192029953,-0.0435781292617321,0,0,0.065367192029953,0,-0.0435781292617321,-0.0544726625084877,0,0.0871562585234642,0.010894532315433025,0,-0.02178906463086605,-0.0871562585234642,0,0,0.0762617290019989,0,-0.02178906463086605,-0.02178906463086605,0,0.0435781292617321,0.0871562585234642,0,0,-0.02723633125424385,0,0.0871562585234642,0.05991993099451065,0,-0.1743125170469284,-0.0326835960149765,0,0,0.010894532315433025,0,-0.02178906463086605,-0.01634179800748825,0,0.02178906463086605,0.19065432250499725,0,-0.02178906463086605,-0.02723633125424385,0,0.065367192029953,0.09260352700948715,0,0,-0.01634179800748825,0,0.0435781292617321,0.02178906463086605,0,0,-0.02178906463086605,0,0.0435781292617321,0.01634179800748825,0,0,-0.0435781292617321,0,0,0.08170899748802185,0,0,-0.02723633125424385,0,0.0435781292617321,0.0326835960149765,0,-0.0435781292617321,-0.04902539774775505,0,0,0.0326835960149765,0,0,0,0,0.02178906463086605,0.010894532315433025,0,0,-0.005447266157716513,0,0,0.0435781292617321,0,-0.0435781292617321,-0.010894532315433025,0,0,0,0,0,-0.0326835960149765,0,0.02178906463086605,0,0,-0.065367192029953,-0.02178906463086605,0,0.02178906463086605,0.0435781292617321,0,-0.0435781292617321,-0.02178906463086605,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-10 -->\nIn dieser Speicherzelle wird\n                     angegeben, welche Fehlermeldungen\n                     zugelassen werden und welche nicht.\n                     $00 unterdr√ºckt alle Fehlermeldungen,\n                     $80 kommt dem normalen Eingabemodus\n                     gleich und $C0 l√§√üt alle Fehlermeldungen\n                     zu. Diese Zust√§nde k√∂nnen\n                     alle k√ºnstlich erzeugt werden.\n\n$009E        PTR1    Bandpass 1 Checksumme\n\nDiese Speicherzelle wird zur\n                     √úberpr√ºfung von Bytes bei Kassettenoperationen\n                     benutzt.\n\n$009F        PTR2    Bandpass 2 Fehlerkorrektur\n\nHier werden die Fehler korrigiert,\n                     die bei Kassettenoperationen aufgetreten\n                     sind.\n\n$00A0-$00A2  TIME    Time\n\nIn diesen Speicherzellen wird die\n                     Uhrzeit √ºber die Interruptroutine\n                     erh√∂ht.\n\n$00A3        R2D2    Bitz√§hler f√ºr serielle Ausgabe\n\nDieses Register wird als Zwischenspeicher\n                     von Ein-/Ausgaberoutinen\n                     benutzt.\n\n$00A4        FIRT    Z√§hler f√ºr Band\n\nsiehe oben\n\n$00A5        CNTDN   Z√§hler f√ºr Band schreiben\n\nDiese Speicherzelle wird als Z√§hler\n                     des Synchron-Bits verwendet.\n\n$00A6        BUFPT   Zeiger in Bandpuffer\n\nDieses Register wird als Z√§hler\n                     benutzt, welcher angibt, wie viele\n                     Bytes aus dem Bandpuffer gelesen\n                     oder in den Bandpuffer geschrieben\n                     worden sind.\n\n$00A7-$00AB          Arbeitsspeicher f√ºr Ein-/Ausgabe","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-10"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0.04110734164714813,0.020553670823574066,0,0,-0.025692088529467583,0,0.020553670823574066,0.010276835411787033,0,-0.08221468329429626,-0.01541525311768055,0,0.020553670823574066,0.08221468329429626,0,-0.0616610124707222,-0.07193785160779953,0,0.04110734164714813,0.0462457612156868,0,0,-0.01541525311768055,0,0,0.020553670823574066,0,-0.08221468329429626,0,0,0.020553670823574066,0.020553670823574066,0,-0.020553670823574066,-0.01541525311768055,0,0,0.01541525311768055,0,-0.04110734164714813,-0.010276835411787033,0,0.020553670823574066,0.0462457612156868,0,-0.04110734164714813,-0.035968925803899765,0,0,0.035968925803899765,0,0,-0.01541525311768055,0,0.020553670823574066,0,0,-0.0616610124707222,-0.010276835411787033,0,0.020553670823574066,0.010276835411787033,0,0,0,0,0,0,0,-0.08221468329429626,-0.01541525311768055,0,0.020553670823574066,0.035968925803899765,0,-0.020553670823574066,-0.05652259662747383,0,0.1233220249414444,0.010276835411787033,0,-0.020553670823574066,0,0,0.020553670823574066,0.010276835411787033,0,-0.10276835411787033,-0.010276835411787033,0,0.020553670823574066,0.051384177058935165,0,-0.0616610124707222,-0.0308305062353611,0,0.020553670823574066,0.0462457612156868,0,0,-0.0051384177058935165,0,0.5343954563140869,0.01541525311768055,0,-0.020553670823574066,-0.051384177058935165,0,0.020553670823574066,0.035968925803899765,0,0,-0.05652259662747383,0,0.1849830448627472,0.025692088529467583,0,0,-0.0051384177058935165,0,0.020553670823574066,0,0,0,-0.04110734164714813,0,0.22609038650989532,0.0462457612156868,0,-0.0616610124707222,-0.020553670823574066,0,0,0.01541525311768055,0,-0.0616610124707222,-0.025692088529467583,0,0,0.01541525311768055,0,-0.04110734164714813,-0.020553670823574066,0,0.04110734164714813,0,0,0,0,0,0.16442936658859253,0.01541525311768055,0,-0.0616610124707222,-0.0308305062353611,0,0,0.020553670823574066,0,0,-0.0051384177058935165,0,0,0,0,0,-0.0462457612156868,0,0.04110734164714813,0.010276835411787033,0,-0.020553670823574066,-0.010276835411787033,0,0.04110734164714813,0.0616610124707222,0,-0.0616610124707222,-0.010276835411787033,0,0.04110734164714813,0.010276835411787033,0,-0.0616610124707222,-0.051384177058935165,0,0.04110734164714813,0.025692088529467583,0,-0.20553670823574066,-0.04110734164714813,0,0.0616610124707222,0.010276835411787033,0,-0.020553670823574066,0,0,0.04110734164714813,0.2723361551761627,0,0,-0.01541525311768055,0,0.08221468329429626,0.035968925803899765,0,-0.0616610124707222,-0.0051384177058935165,0,0.020553670823574066,0.10276835411787033,0,-0.04110734164714813,0,0,0.10276835411787033,0.01541525311768055,0,-0.10276835411787033,-0.020553670823574066,0,0.14387570321559906,0.11818361282348633,0,-0.020553670823574066,-0.0462457612156868,0,0,0.010276835411787033,0,-0.04110734164714813,-0.0308305062353611,0,0.04110734164714813,0,0,0,-0.04110734164714813,0,0,0.025692088529467583,0,-0.0616610124707222,-0.0051384177058935165,0,0.020553670823574066,0.08221468329429626,0,-0.14387570321559906,-0.04110734164714813,0,0.04110734164714813,0.0051384177058935165,0,0,-0.010276835411787033,0,0,0,0,0,0,0,0,0.025692088529467583,0,-0.08221468329429626,-0.025692088529467583,0,0.10276835411787033,0.025692088529467583,0,-0.020553670823574066,-0.0308305062353611,0,0.020553670823574066,0.020553670823574066,0,-0.04110734164714813,-0.051384177058935165,0,0.10276835411787033,0.025692088529467583,0,-0.10276835411787033,-0.107906773686409,0,0.020553670823574066,0.0616610124707222,0,-0.020553670823574066,-0.01541525311768055,0,0,0.025692088529467583,0,0,-0.025692088529467583,0,0.14387570321559906,0.0462457612156868,0,-0.04110734164714813,-0.0462457612156868,0,0.0616610124707222,0.01541525311768055,0,-0.020553670823574066,-0.020553670823574066,0,0.020553670823574066,0.1849830448627472,0,0,-0.05652259662747383,0,0,0.0770762637257576,0,0,-0.010276835411787033,0,0.020553670823574066,0.0462457612156868,0,0,-0.020553670823574066,0,0.04110734164714813,0.025692088529467583,0,-0.020553670823574066,0,0,0,0.05652259662747383,0,-0.020553670823574066,-0.0462457612156868,0,0,0.010276835411787033,0,0,-0.08735310286283493,0,0,0.020553670823574066,0,0,-0.010276835411787033,0,0,0.010276835411787033,0,0,0,0,0.0616610124707222,0.04110734164714813,0,-0.04110734164714813,-0.05652259662747383,0,0,0.051384177058935165,0,0,-0.010276835411787033,0,0.020553670823574066,0.010276835411787033,0,-0.020553670823574066,-0.020553670823574066,0,0.10276835411787033,0.0616610124707222,0,-0.020553670823574066,-0.05652259662747383,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-11 -->\nDiese Register werden h√§ufig von\n                     Kassettenoperationen und der RS-232\n                     Schnittstelle als Zwischenspeicher\n                     benutzt.\n\n$00AC-$00AD          Zeiger f√ºr Bandpuffer und Scrolling\n\nDiese Speicherzellen dienen in erster\n                     Linie als Zeiger auf die Adresse, ab\n                     welcher ein Programm geladen oder\n                     gespeichert werden soll. Zweitens\n                     dienen sie auch als Zwischenspeicher\n                     w√§hrend des Scrollings des Video-RAM\n                     und beim Einf√ºgen zus√§tzlicher Zeilen.\n\n$00AE-$00AF          Zeiger auf Programmende bei LOAD/SAVE\n\n√Ñhnlich wie $00AC-$00AD funktionieren\n                     diese beiden Speicherzellen. Sie\n                     Zeigen immer auf das Byte, das gerade\n                     gelesen oder gespeichert wurde.\n\n$00B0-$00B1          Zeitkonstante beim Lesen von Band\n\nDer Wert in den Speicherzellen wird\n                     benutzt, um die Zeitkonstante beim\n                     Lesen von Band einzustellen.\n\n$00B2-$00B3  TAPE1   Zeiger auf Bandpuffer\n\nDiese beiden Speicherzellen zeigen auf\n                     den Bandpuffer ($033C)\n\n$00B4        BITTS   Bitz√§hler f√ºr Band\n\nHier wird die Anzahl der √ºbertragenden\n                     Bits gez√§hlt.\n\n$00B5        NXTBIT  n√§chstes Bit f√ºr RS-232\n\nDiese Speicherzelle enth√§lt immer das\n                     n√§chste Bit, das bei RS-232 Operationen\n                     √ºbertragen werden soll.\n\n$00B6        RODATA  Puffer f√ºr auszugebendes Byte","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-11"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0.04347119852900505,0,-0.021735599264502525,0,0,0.04347119852900505,0.03260339796543121,0,-0.06520679593086243,-0.010867799632251263,0,0.06520679593086243,0.03260339796543121,0,0,-0.0869423970580101,0,0.021735599264502525,0.021735599264502525,0,-0.021735599264502525,-0.016301698982715607,0,0.04347119852900505,0.04890510067343712,0,-0.021735599264502525,-0.03260339796543121,0,0.021735599264502525,0.04347119852900505,0,-0.0869423970580101,-0.021735599264502525,0,0.021735599264502525,0.016301698982715607,0,-0.04347119852900505,-0.010867799632251263,0,0,0.06520679593086243,0,0,-0.021735599264502525,0,0,0.027169499546289444,0,-0.021735599264502525,0,0,0.021735599264502525,0,0,-0.10867799818515778,-0.010867799632251263,0,0,0.021735599264502525,0,0,-0.005433899816125631,0,0,0,0,-0.04347119852900505,-0.016301698982715607,0,0.021735599264502525,0.010867799632251263,0,-0.04347119852900505,-0.027169499546289444,0,0.04347119852900505,0.010867799632251263,0,-0.04347119852900505,-0.010867799632251263,0,0.04347119852900505,0.005433899816125631,0,-0.15214920043945312,-0.027169499546289444,0,0.04347119852900505,0.010867799632251263,0,-0.0869423970580101,-0.03260339796543121,0,0.04347119852900505,0.016301698982715607,0,0,-0.010867799632251263,0,0.565125584602356,0.021735599264502525,0,-0.021735599264502525,-0.04347119852900505,0,0.021735599264502525,0.05433899909257889,0,-0.04347119852900505,0,0,0.021735599264502525,0.016301698982715607,0,0,-0.010867799632251263,0,0.021735599264502525,0.021735599264502525,0,0,-0.010867799632251263,0,0.2608271837234497,0.027169499546289444,0,-0.021735599264502525,-0.0706406980752945,0,0,0.010867799632251263,0,-0.13041359186172485,-0.027169499546289444,0,0,0.016301698982715607,0,0,-0.016301698982715607,0,0.0869423970580101,0.005433899816125631,0,-0.021735599264502525,-0.010867799632251263,0,0.13041359186172485,0.016301698982715607,0,0,-0.05433899909257889,0,0.04347119852900505,0.016301698982715607,0,-0.021735599264502525,0,0,0,0,0,0,-0.021735599264502525,0,0,0.010867799632251263,0,-0.04347119852900505,-0.027169499546289444,0,0.13041359186172485,0.03260339796543121,0,0,-0.021735599264502525,0,0.13041359186172485,0.021735599264502525,0,-0.04347119852900505,-0.07607460021972656,0,0,0.021735599264502525,0,-0.13041359186172485,-0.04890510067343712,0,0.0869423970580101,0.021735599264502525,0,-0.021735599264502525,0,0,0.06520679593086243,0.282562792301178,0,0,-0.016301698982715607,0,0.13041359186172485,0.016301698982715607,0,-0.0869423970580101,-0.03260339796543121,0,0.021735599264502525,0.010867799632251263,0,-0.04347119852900505,-0.005433899816125631,0,0.13041359186172485,0.021735599264502525,0,-0.0869423970580101,-0.016301698982715607,0,0.10867799818515778,0.14671529829502106,0,0,-0.010867799632251263,0,0,0.005433899816125631,0,0,-0.0706406980752945,0,0,0.010867799632251263,0,-0.021735599264502525,-0.005433899816125631,0,0,0.04890510067343712,0,-0.06520679593086243,-0.03260339796543121,0,0.04347119852900505,0.0706406980752945,0,-0.06520679593086243,-0.010867799632251263,0,0.04347119852900505,0.021735599264502525,0,-0.04347119852900505,-0.010867799632251263,0,0.021735599264502525,0,0,-0.06520679593086243,-0.005433899816125631,0,0,0.005433899816125631,0,-0.04347119852900505,-0.04890510067343712,0,0.06520679593086243,0.06520679593086243,0,0,0,0,0,0.06520679593086243,0,-0.04347119852900505,-0.03260339796543121,0,0.0869423970580101,0.005433899816125631,0,0,-0.07607460021972656,0,0.021735599264502525,0.05433899909257889,0,0,-0.021735599264502525,0,0,0.04347119852900505,0,0,-0.03803730010986328,0,0.06520679593086243,0.07607460021972656,0,-0.10867799818515778,-0.06520679593086243,0,0,0.021735599264502525,0,-0.021735599264502525,-0.021735599264502525,0,0.06520679593086243,0.20648819208145142,0,-0.06520679593086243,-0.04890510067343712,0,0.021735599264502525,0.05977289751172066,0,0,-0.010867799632251263,0,0.021735599264502525,0.005433899816125631,0,0,0,0,0.06520679593086243,0.005433899816125631,0,0,-0.010867799632251263,0,0,0.06520679593086243,0,0,-0.03803730010986328,0,0,0.021735599264502525,0,-0.021735599264502525,-0.06520679593086243,0,0.04347119852900505,0.021735599264502525,0,0,-0.021735599264502525,0,0,0.03260339796543121,0,0,-0.03803730010986328,0,0,0.03260339796543121,0,-0.021735599264502525,-0.021735599264502525,0,0,0.04347119852900505,0,0,-0.005433899816125631,0,0,0,0,-0.021735599264502525,-0.021735599264502525,0,0.021735599264502525,0.04347119852900505,0,-0.04347119852900505,-0.010867799632251263,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-12 -->\nDieses Register wird als Ausgabezwischenspeicher\n                     benutzt.\n\n$00B7        FNLEN   L√§nge des Filenamens\n\nIn dieser Speicherzelle wird\n                     angegeben, aus wie vielen Zeichen der\n                     Filename besteht.\n\n$00B8        LA      logische Filenummer\n\nIn dieser Speicherzelle wird die\n                     logische Filenummer verzeichnet.\n\n$00B9        SA      Sekund√§radresse\n\nHier steht die jeweilige Sekund√§radresse.\n\n$00BA        FA      Ger√§tenummer\n\nEntsprechend ist auch in dieser\n                     Speicherzelle die Ger√§tenummer zu\n                     finden.\n\n$00BB-$00BC  FNADR   Zeiger auf Filenamen\n\nIn diesen Speicherzellen steht ein\n                     Zeiger, der in LOW- und HIGH-Byte-\n                     Darstellung auf den Filenamen zeigt.\n\n$00BD        ROPRTY  Arbeitsspeicher serielle Ein-/Ausgabe\n\nHier wird von den RS-232-Routinen ein\n                     Pr√ºfbyte abgelegt (Parity-Pr√ºfung).\n\n$00BE        FSBLK   Passz√§hler f√ºr Band\n\nIn dieser Speicherzelle ist angegeben,\n                     wie viele Blockteile von Band gelesen\n                     oder auf Band geschrieben werden\n                     sollen.\n\n$00BF        MYCH    Puffer f√ºr serielle Ausgabe\n\nBeim Laden eines Programms von Band\n                     wird diese Speicherzelle dazu benutzt,\n                     um die einzelnen Bits zu einem Byte\n                     zusammenzusetzen.\n\n$00C0        CAS1    Flag f√ºr Bandmotor","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-12"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0.014970649033784866,0,0,-0.009980432689189911,0,0.019960865378379822,0.03493151441216469,0,-0.019960865378379822,-0.0049902163445949554,0,0.039921730756759644,0.059882596135139465,0,-0.059882596135139465,-0.03493151441216469,0,0.019960865378379822,0.0449119471013546,0,-0.059882596135139465,-0.024951081722974777,0,0.019960865378379822,0.029941298067569733,0,-0.039921730756759644,0,0,0.039921730756759644,0.029941298067569733,0,-0.019960865378379822,-0.009980432689189911,0,0,0.014970649033784866,0,-0.15968692302703857,-0.0049902163445949554,0,0.019960865378379822,0.0898238942027092,0,0,-0.014970649033784866,0,0.059882596135139465,0.05489237979054451,0,0,-0.009980432689189911,0,0.059882596135139465,0.009980432689189911,0,-0.039921730756759644,-0.029941298067569733,0,0.019960865378379822,0.009980432689189911,0,0,0,0,0.019960865378379822,0.029941298067569733,0,-0.019960865378379822,-0.03493151441216469,0,0.039921730756759644,0.024951081722974777,0,0,-0.029941298067569733,0,0.019960865378379822,0.014970649033784866,0,-0.019960865378379822,0,0,0,0.019960865378379822,0,-0.1796477884054184,-0.024951081722974777,0,0,0,0,-0.039921730756759644,-0.024951081722974777,0,0.019960865378379822,0.0049902163445949554,0,0,0,0,0.558904230594635,0.009980432689189911,0,-0.019960865378379822,-0.039921730756759644,0,0.019960865378379822,0.029941298067569733,0,0,-0.039921730756759644,0,0.07984346151351929,0.009980432689189911,0,-0.019960865378379822,-0.029941298067569733,0,0,0.009980432689189911,0,0,-0.019960865378379822,0,0.19960865378379822,0.049902163445949554,0,-0.07984346151351929,-0.024951081722974777,0,0.059882596135139465,0.0049902163445949554,0,-0.039921730756759644,-0.08483367413282394,0,0,0.019960865378379822,0,0,0,0,0.07984346151351929,0.029941298067569733,0,-0.039921730756759644,-0.0049902163445949554,0,0.15968692302703857,0.03493151441216469,0,-0.019960865378379822,-0.019960865378379822,0,0.019960865378379822,0.03493151441216469,0,-0.019960865378379822,0,0,0.019960865378379822,0.014970649033784866,0,0,-0.014970649033784866,0,0.059882596135139465,0.024951081722974777,0,-0.09980432689189911,-0.014970649033784866,0,0.059882596135139465,0.014970649033784866,0,-0.039921730756759644,-0.009980432689189911,0,0.13972605764865875,0.014970649033784866,0,-0.019960865378379822,-0.09980432689189911,0,0,0.0049902163445949554,0,-0.019960865378379822,-0.024951081722974777,0,0.13972605764865875,0.009980432689189911,0,-0.059882596135139465,0,0,0.039921730756759644,0.289432555437088,0,0,-0.019960865378379822,0,0.11976519227027893,0.009980432689189911,0,0,-0.009980432689189911,0,0.019960865378379822,0.039921730756759644,0,-0.019960865378379822,-0.009980432689189911,0,0.15968692302703857,0.0049902163445949554,0,-0.059882596135139465,-0.0049902163445949554,0,0.1796477884054184,0.10978475958108902,0,0,-0.05489237979054451,0,0,0.03493151441216469,0,0,-0.03493151441216469,0,0,0.0049902163445949554,0,0,-0.009980432689189911,0,0,0.049902163445949554,0,-0.059882596135139465,-0.024951081722974777,0,0.059882596135139465,0.07984346151351929,0,-0.07984346151351929,-0.049902163445949554,0,0.059882596135139465,0.014970649033784866,0,0,-0.009980432689189911,0,0,0.024951081722974777,0,-0.019960865378379822,0,0,0,0.0449119471013546,0,-0.019960865378379822,-0.059882596135139465,0,0.019960865378379822,0.03493151441216469,0,0,-0.019960865378379822,0,0,0.07485324144363403,0,-0.11976519227027893,-0.014970649033784866,0,0.039921730756759644,0.009980432689189911,0,-0.039921730756759644,-0.009980432689189911,0,0,0.07485324144363403,0,0,-0.03493151441216469,0,0,0.019960865378379822,0,0,-0.0449119471013546,0,0.11976519227027893,0.059882596135139465,0,-0.059882596135139465,-0.009980432689189911,0,0.019960865378379822,0.014970649033784866,0,-0.019960865378379822,-0.009980432689189911,0,0.039921730756759644,0.21956951916217804,0,0,-0.03493151441216469,0,0,0.09481410682201385,0,-0.019960865378379822,0,0,0.019960865378379822,0.019960865378379822,0,0,-0.0049902163445949554,0,0.09980432689189911,0,0,0,0,0,0.019960865378379822,0.049902163445949554,0,-0.019960865378379822,-0.049902163445949554,0,0.019960865378379822,0.0449119471013546,0,-0.059882596135139465,-0.049902163445949554,0,0.019960865378379822,0.029941298067569733,0,0,0,0,0.059882596135139465,0.019960865378379822,0,-0.039921730756759644,-0.019960865378379822,0,0.019960865378379822,0.039921730756759644,0,-0.019960865378379822,-0.014970649033784866,0,0,0.014970649033784866,0,0,-0.0049902163445949554,0,0.039921730756759644,0.0049902163445949554,0,-0.039921730756759644,-0.059882596135139465,0,0,0.03493151441216469,0,-0.039921730756759644,-0.0449119471013546,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-13 -->\nDer Motor der Datasette kann nur\n                     eingeschaltet werden, wenn die\n                     Speicherzelle ungleich Null ist.\n\n$00C1-$00C2  STAL    Startadresse f√ºr Ein-/Ausgabe\n\nIn diesen Registern ist in LOW- und\n                     HIGH-Byte-Darstellung angegeben, ab\n                     welcher Adresse ein Programm geladen\n                     oder gespeichert wird.\n\n$00C3-$00C4  MEMUSS  Endadresse f√ºr Ein-/Ausgabe\n\nHier steht in LOU- und HIGH-Byte der\n                     Zeiger auf den Tape-Header im\n                     Bandpuffer.\n\n$00C5        LSTX    Nummer der gedr√ºckten Taste\n\nHier wird die Nummer der gedr√ºckten\n                     Taste gespeichert (64= keine Taste).\n\n$00C6        NDX     Anzahl der gedr√ºckten Tasten\n\nHier steht die jeweilige Anzahl der\n                     Zeichen, die im Tastaturpuffer\n                     gespeichert sind.\n\n$00C7        RVS     Flag f√ºr RVS-Modus\n\nDiese Speicherzelle gibt an, ob die\n                     auszugebenden Zeichen revers oder\n                     normal dargestellt werden sollen\n                     (0= normal, 1= revers).\n\n$00C8        INDX    Zeilenende f√ºr Eingabe\n\nDieses Register enth√§lt die Position\n                     des letzen Zeichens in einer Zeile.\n\n$00C9        LSXP    Cursorzeile f√ºr Eingabe\n\nDiese Speicherzelle dient dazu, um die\n                     Zeile des letzten eingegebenen Zeichens\n                     festzustellen.\n\n$00CA                Cursorspalte f√ºr Eingabe","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-13"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0.03552750125527382,0,-0.02030142955482006,-0.005075357388705015,0,0.04060285910964012,0.025376787409186363,0,-0.04060285910964012,-0.01015071477741003,0,0.02030142955482006,0.06597964465618134,0,-0.02030142955482006,-0.08120571821928024,0,0.04060285910964012,0.025376787409186363,0,-0.10150714963674545,-0.030452145263552666,0,0.02030142955482006,0.045678216964006424,0,0,0,0,0.02030142955482006,0.045678216964006424,0,-0.02030142955482006,-0.01015071477741003,0,0,0.015226072631776333,0,-0.22331573069095612,0,0,0,0.04060285910964012,0,-0.2030142992734909,-0.015226072631776333,0,0.02030142955482006,0.04060285910964012,0,-0.04060285910964012,-0.01015071477741003,0,0.04060285910964012,0,0,-0.08120571821928024,-0.02030142955482006,0,0.08120571821928024,0.030452145263552666,0,-0.04060285910964012,0,0,0,0.01015071477741003,0,-0.06090429052710533,-0.04060285910964012,0,0,0.015226072631776333,0,0,-0.04060285910964012,0,0.02030142955482006,0.02030142955482006,0,-0.06090429052710533,0,0,0,0,0,-0.16241143643856049,-0.04060285910964012,0,0.02030142955482006,0.015226072631776333,0,-0.04060285910964012,-0.015226072631776333,0,0,0.01015071477741003,0,0,-0.01015071477741003,0,0.48723432421684265,0.02030142955482006,0,-0.02030142955482006,-0.03552750125527382,0,0.02030142955482006,0.015226072631776333,0,-0.04060285910964012,-0.01015071477741003,0,0.10150714963674545,0.025376787409186363,0,0,-0.050753574818372726,0,0.02030142955482006,0.015226072631776333,0,-0.02030142955482006,0,0,0.28422001004219055,0.04060285910964012,0,-0.02030142955482006,-0.04060285910964012,0,0.02030142955482006,0,0,-0.02030142955482006,-0.11673322319984436,0,0.02030142955482006,0.015226072631776333,0,-0.02030142955482006,-0.10150714963674545,0,0.08120571821928024,0.015226072631776333,0,-0.02030142955482006,-0.025376787409186363,0,0.10150714963674545,0.025376787409186363,0,0,-0.04060285910964012,0,0.02030142955482006,0.045678216964006424,0,-0.02030142955482006,-0.02030142955482006,0,0.04060285910964012,0,0,0,-0.03552750125527382,0,0.06090429052710533,0,0,-0.02030142955482006,-0.01015071477741003,0,0.10150714963674545,0.02030142955482006,0,-0.02030142955482006,-0.030452145263552666,0,0.06090429052710533,0.005075357388705015,0,-0.04060285910964012,-0.08628107607364655,0,0.02030142955482006,0.01015071477741003,0,-0.08120571821928024,-0.025376787409186363,0,0.10150714963674545,0,0,-0.08120571821928024,0,0,0.06090429052710533,0.24361716210842133,0,0,-0.030452145263552666,0,0.14211000502109528,0.015226072631776333,0,0,-0.025376787409186363,0,0.02030142955482006,0.050753574818372726,0,0,-0.005075357388705015,0,0.12180858105421066,0.02030142955482006,0,-0.06090429052710533,-0.02030142955482006,0,0.16241143643856049,0.14718537032604218,0,0,-0.015226072631776333,0,0,0.02030142955482006,0,0,-0.03552750125527382,0,0.04060285910964012,0.015226072631776333,0,0,-0.01015071477741003,0,0,0.045678216964006424,0,-0.12180858105421066,-0.015226072631776333,0,0.06090429052710533,0.050753574818372726,0,-0.12180858105421066,-0.05582893267273903,0,0.08120571821928024,0.01015071477741003,0,0,-0.06090429052710533,0,0,0.025376787409186363,0,0,-0.01015071477741003,0,0.02030142955482006,0.04060285910964012,0,-0.02030142955482006,-0.030452145263552666,0,0.04060285910964012,0.07105500251054764,0,0,-0.02030142955482006,0,0,0.030452145263552666,0,-0.06090429052710533,-0.03552750125527382,0,0.02030142955482006,0.01015071477741003,0,0,-0.04060285910964012,0,0.02030142955482006,0.05582893267273903,0,0,-0.05582893267273903,0,0.02030142955482006,0.030452145263552666,0,0,-0.04060285910964012,0,0.12180858105421066,0.07613036036491394,0,-0.12180858105421066,-0.01015071477741003,0,0,0.01015071477741003,0,-0.02030142955482006,0,0,0.06090429052710533,0.1827128678560257,0,0,-0.03552750125527382,0,0.02030142955482006,0.08628107607364655,0,-0.02030142955482006,-0.01015071477741003,0,0.02030142955482006,0.025376787409186363,0,0,0,0,0.02030142955482006,0.025376787409186363,0,0,-0.005075357388705015,0,0,0.07105500251054764,0,-0.02030142955482006,-0.06597964465618134,0,0,0.03552750125527382,0,-0.04060285910964012,-0.06597964465618134,0,0.04060285910964012,0.045678216964006424,0,0,-0.005075357388705015,0,0.02030142955482006,0.02030142955482006,0,-0.02030142955482006,-0.005075357388705015,0,0,0.03552750125527382,0,-0.02030142955482006,-0.01015071477741003,0,0,0.025376787409186363,0,0,-0.005075357388705015,0,0,0.01015071477741003,0,-0.08120571821928024,-0.030452145263552666,0,0.02030142955482006,0.025376787409186363,0,-0.02030142955482006,-0.005075357388705015,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-14 -->\nDiese Speicherzelle dient dazu, um die\n                     Spalte des letzten eingegebenen\n                     Zeichens festzustellen.\n\n$00CB        SFDX    gedr√ºckte Taste\n\nHier steht der jeweilige Code der\n                     gedr√ºckten Taste. (64= keine Taste).\n\n$00CC        BLNSW   Flag f√ºr Cursor\n\nDer Cursor wird ausgeschaltet, wenn\n                     in dieser Speicherzelle ein gr√∂√üerer\n                     Wert als Null steht.\n\n$00CD        BLNCT   Z√§hler f√ºr Cursor blinken\n\nDiese Speicherzelle dient als Z√§hler\n                     f√ºr die Cursor-Blinkphase. Wenn der\n                     Wert 20 in dieser Speicherzelle\n                     abgez√§hlt ist, wird der Cursor eingeschaltet.\n\n$00CE        GDBLN   Zeichen unter dem Cursor\n\nHier ist jeweils der Bildschirmcode\n                     eines Zeichens angegeben, das sich\n                     gerade unter dem Cursor befindet.\n\n$00CF        BLNON   Flag f√ºr Cursor\n\nIn diesem Register wird festgehalten,\n                     in welcher Blink-Phase sich der Cursor\n                     gerade befindet.\n\n$00D0        CRSW    Flag f√ºr Eingabe von Tastatur oder\n                     Bildschirm\n\nHier wird die L√§nge der zu\n                     √ºbertragenden Zeichen gespeichert.\n\n$00D1-$00D2  PNT     Zeiger auf Start der Bildschirmzeile\n\nIn diesen Speicherzellen wird in LOW-\n                     und HIGH-Byte-Darstellung angezeigt,\n                     wo sich im Video-RAM die Zeile befindet,\n                     auf der der Cursor gerade\n                     steht.\n\n$00D3        PNTR    Cursorspalte","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-14"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0.02000950649380684,0.02000950649380684,0,0,0,0,0,0.01000475324690342,0,-0.06002851948142052,-0.00500237662345171,0,0.02000950649380684,0.02000950649380684,0,-0.02000950649380684,-0.08003802597522736,0,0.02000950649380684,0.05002376809716225,0,-0.04001901298761368,-0.02000950649380684,0,0.1000475361943245,0.025011884048581123,0,-0.02000950649380684,-0.01000475324690342,0,0.02000950649380684,0.03001425974071026,0,-0.04001901298761368,0,0,0,0.025011884048581123,0,-0.1600760519504547,-0.01000475324690342,0,0,0.01500712987035513,0,-0.04001901298761368,-0.025011884048581123,0,0,0.01500712987035513,0,0,-0.00500237662345171,0,0.04001901298761368,0.01000475324690342,0,-0.06002851948142052,-0.04502138867974281,0,0.06002851948142052,0.01500712987035513,0,-0.04001901298761368,-0.01000475324690342,0,0,0.02000950649380684,0,-0.1000475361943245,-0.01000475324690342,0,0,0.02000950649380684,0,0,-0.03501663729548454,0,0.08003802597522736,0,0,-0.04001901298761368,0,0,0,0,0,-0.04001901298761368,-0.04502138867974281,0,0,0,0,-0.06002851948142052,-0.03001425974071026,0,0,0.05502614378929138,0,-0.04001901298761368,-0.01000475324690342,0,0.5802757143974304,0.01000475324690342,0,-0.04001901298761368,-0.03501663729548454,0,0.02000950649380684,0.025011884048581123,0,-0.02000950649380684,-0.01000475324690342,0,0.14006654918193817,0.01000475324690342,0,0,-0.02000950649380684,0,0.02000950649380684,0.05002376809716225,0,-0.04001901298761368,-0.01000475324690342,0,0.28013309836387634,0.02000950649380684,0,0,-0.05502614378929138,0,0,0,0,-0.1000475361943245,-0.08504040539264679,0,0,0.01000475324690342,0,0,-0.025011884048581123,0,0.06002851948142052,0.00500237662345171,0,-0.04001901298761368,0,0,0.1000475361943245,0.03001425974071026,0,0,-0.03001425974071026,0,0,0.03001425974071026,0,0,-0.03001425974071026,0,0.04001901298761368,0,0,0,-0.05002376809716225,0,0,0.00500237662345171,0,-0.02000950649380684,-0.02000950649380684,0,0.08003802597522736,0.04502138867974281,0,0,-0.02000950649380684,0,0.04001901298761368,0.00500237662345171,0,-0.02000950649380684,-0.02000950649380684,0,0,0,0,-0.04001901298761368,-0.03001425974071026,0,0.200095072388649,0,0,-0.04001901298761368,-0.02000950649380684,0,0.02000950649380684,0.2901378571987152,0,0,-0.04001901298761368,0,0.08003802597522736,0.01000475324690342,0,0,-0.02000950649380684,0,0.02000950649380684,0.07503565400838852,0,-0.04001901298761368,0,0,0.06002851948142052,0.01000475324690342,0,-0.02000950649380684,-0.03501663729548454,0,0.06002851948142052,0.1450689285993576,0,-0.02000950649380684,-0.00500237662345171,0,0,0.00500237662345171,0,-0.02000950649380684,-0.06002851948142052,0,0.02000950649380684,0.025011884048581123,0,-0.04001901298761368,-0.00500237662345171,0,0.04001901298761368,0.03501663729548454,0,-0.04001901298761368,-0.03001425974071026,0,0.08003802597522736,0.05002376809716225,0,-0.14006654918193817,-0.04001901298761368,0,0,0,0,0,-0.01000475324690342,0,0,0.02000950649380684,0,-0.02000950649380684,0,0,0,0.01000475324690342,0,-0.04001901298761368,-0.025011884048581123,0,0.18008555471897125,0.05502614378929138,0,-0.04001901298761368,-0.01000475324690342,0,0.04001901298761368,0.02000950649380684,0,-0.02000950649380684,-0.03501663729548454,0,0.06002851948142052,0,0,0,-0.02000950649380684,0,0,0.12005703896284103,0,0,-0.03001425974071026,0,0,0.01000475324690342,0,0,-0.01000475324690342,0,0.04001901298761368,0.04001901298761368,0,-0.14006654918193817,-0.01500712987035513,0,0,0.01000475324690342,0,-0.02000950649380684,-0.03001425974071026,0,0.04001901298761368,0.175083190202713,0,-0.02000950649380684,-0.02000950649380684,0,0.02000950649380684,0.03501663729548454,0,0,-0.01500712987035513,0,0.04001901298761368,0.03501663729548454,0,0,-0.01000475324690342,0,0,0.01500712987035513,0,-0.04001901298761368,-0.03001425974071026,0,0,0.09004277735948563,0,0,-0.02000950649380684,0,0.02000950649380684,0.04001901298761368,0,-0.08003802597522736,-0.09504515677690506,0,0.02000950649380684,0,0,0,0,0,0.02000950649380684,0.01500712987035513,0,0,-0.02000950649380684,0,0,0.025011884048581123,0,0,-0.02000950649380684,0,0,0.09004277735948563,0,0,-0.02000950649380684,0,0,0.03001425974071026,0,-0.08003802597522736,-0.01000475324690342,0,0,0.03001425974071026,0,-0.04001901298761368,-0.00500237662345171,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-15 -->\nHier wird die Spaltenposition des\n                     Cursors festgehalten.\n\n$00D4        QTSW    Flag f√ºr Hochkommamodus\n\nFalls in dieser Speicherzelle eine\n                     Null steht, dann befindet sich der\n                     Computer im Normalmodus. Andere\n                     Werte bewirken den Hochkommamodus.\n\n$00D5        LNMX    L√§nge der Bildschirmzeile\n\nDer Inhalt dieser Speicherzelle\n                     entscheidet, ob eine neue Zeile\n                     angefangen werden mu√ü oder nicht.\n\n$00D6        TBLX    Cursorzeile\n\nHier wird die Zeilenposition des\n                     Cursors festgehalten.\n\n$00D7        DATA    Speicher f√ºr ASCII-Tasten-Code\n\nBevor ein Zeichen in den\n                     Tastaturpuffer gebracht wird, wird es\n                     vorher hier zwischengespeichert.\n\n$00D8        INSRT   Anzahl der Inserts\n\nHier wird die Anzahl der Inserts\n                     festgelegt.\n\n$00D9-$00F2  LDTB1   MSB der Bildschirmzeilenanf√§nge\n\nAlle 25 Speicherzellen enthalten\n                     Informationen √ºber die Zeilen des\n                     Bildschirms.\n\n$00F3-$00F4  USER    Zeiger in Farb-RAM\n\nDiese Speicherzellen zeigen auf die\n                     Stelle im Farb-RAM, an der der Cursor\n                     auf der Zeile steht.\n\n$00F5-$00F6  KEYTAB  Zeiger auf Tastatur-Dekodiertabelle\n\nDiese Speicherzellen zeigen auf die\n                     Tastatur-Dekodiertabelle.\n\n$00F7-$00F8  RIBUF   Zeiger auf RS-232 Eingabepuffer\n\nDiese Register zeigen auf die\n                     Anfangsadresse des Eingabepuffers.","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-15"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0,0,-0.0218169204890728,0,0,0,0.0109084602445364,0,-0.0218169204890728,0,0,0.0436338409781456,0.03272537887096405,0,0,-0.038179609924554825,0,0.0218169204890728,0.038179609924554825,0,0,-0.0218169204890728,0,0.0218169204890728,0.0218169204890728,0,-0.0654507577419281,-0.016362689435482025,0,0.0218169204890728,0.038179609924554825,0,-0.0218169204890728,-0.016362689435482025,0,0.0654507577419281,0.0218169204890728,0,-0.1090845987200737,-0.03272537887096405,0,0,0.0436338409781456,0,-0.0218169204890728,-0.0054542301222682,0,0,0.049088068306446075,0,0,-0.0109084602445364,0,0.1745353639125824,0.0109084602445364,0,-0.0218169204890728,0,0,0.0436338409781456,0.0054542301222682,0,-0.0218169204890728,-0.016362689435482025,0,0,0.0218169204890728,0,-0.0654507577419281,-0.016362689435482025,0,0.0218169204890728,0,0,0,-0.03272537887096405,0,0.0654507577419281,0.0109084602445364,0,-0.0654507577419281,0,0,0,0.027271149680018425,0,-0.0654507577419281,-0.0218169204890728,0,0,0.016362689435482025,0,-0.0436338409781456,-0.05454229936003685,0,0.0872676819562912,0.0218169204890728,0,-0.0218169204890728,-0.016362689435482025,0,0.6326906681060791,0.0054542301222682,0,-0.0218169204890728,-0.0218169204890728,0,0.0436338409781456,0.0436338409781456,0,-0.0218169204890728,0,0,0.0654507577419281,0.0109084602445364,0,0,0,0,0,0.0109084602445364,0,-0.0436338409781456,-0.03272537887096405,0,0.2399861216545105,0.027271149680018425,0,0,-0.0218169204890728,0,0.0436338409781456,0.038179609924554825,0,-0.0654507577419281,-0.059996530413627625,0,0,0.0054542301222682,0,0,-0.0109084602445364,0,0.0436338409781456,0,0,0,-0.0054542301222682,0,0.1309015154838562,0.09817613661289215,0,0,-0.027271149680018425,0,0,0.03272537887096405,0,-0.0436338409781456,-0.0109084602445364,0,0.0218169204890728,0.016362689435482025,0,0,-0.038179609924554825,0,0,0.0109084602445364,0,-0.0654507577419281,0,0,0,0.03272537887096405,0,0,-0.03272537887096405,0,0.0436338409781456,0.0109084602445364,0,0,-0.03272537887096405,0,0,0,0,-0.0654507577419281,-0.027271149680018425,0,0.1090845987200737,0.0436338409781456,0,-0.0436338409781456,-0.0109084602445364,0,0.0436338409781456,0.3272537887096405,0,-0.0654507577419281,-0.016362689435482025,0,0.1527184396982193,0.027271149680018425,0,-0.0218169204890728,-0.03272537887096405,0,0,0.03272537887096405,0,0,-0.0054542301222682,0,0.0872676819562912,0,0,-0.0218169204890728,-0.027271149680018425,0,0.0654507577419281,0.1309015154838562,0,0,0,0,0.0436338409781456,0.027271149680018425,0,0,-0.03272537887096405,0,0.0218169204890728,0.0054542301222682,0,-0.0654507577419281,-0.016362689435482025,0,0,0.027271149680018425,0,-0.0654507577419281,-0.0054542301222682,0,0,0.08181344717741013,0,-0.0872676819562912,-0.027271149680018425,0,0.0436338409781456,0,0,0,-0.027271149680018425,0,0.0218169204890728,0.0109084602445364,0,-0.0436338409781456,0,0,0.0218169204890728,0.0436338409781456,0,-0.0436338409781456,-0.038179609924554825,0,0.0872676819562912,0.0109084602445364,0,-0.0218169204890728,-0.0054542301222682,0,0.0218169204890728,0.0218169204890728,0,-0.0436338409781456,-0.016362689435482025,0,0.0872676819562912,0.0054542301222682,0,0,-0.03272537887096405,0,0,0.07090499252080917,0,0,-0.038179609924554825,0,0,0.0218169204890728,0,0,-0.049088068306446075,0,0.0654507577419281,0.07635921984910965,0,-0.0436338409781456,-0.0218169204890728,0,0.0218169204890728,0.0218169204890728,0,-0.0218169204890728,-0.0054542301222682,0,0.0218169204890728,0.20180650055408478,0,0,-0.016362689435482025,0,0,0.0436338409781456,0,-0.0218169204890728,-0.0054542301222682,0,0.0436338409781456,0.038179609924554825,0,-0.0654507577419281,0,0,0.0436338409781456,0.0109084602445364,0,0,-0.0436338409781456,0,0.0654507577419281,0.059996530413627625,0,-0.0218169204890728,-0.03272537887096405,0,0,0.0109084602445364,0,0,-0.059996530413627625,0,0,0.0218169204890728,0,0,0,0,0.0436338409781456,0.0218169204890728,0,0,-0.0218169204890728,0,0,0.0436338409781456,0,-0.0218169204890728,-0.0218169204890728,0,0,0.0436338409781456,0,0,-0.0218169204890728,0,0.0436338409781456,0.016362689435482025,0,-0.0218169204890728,-0.0218169204890728,0,0.0218169204890728,0.0436338409781456,0,-0.0872676819562912,-0.016362689435482025,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-16 -->\n$00F9-$00FA  ROBUF   Zeiger auf RS-232 Ausgabepuffer\n\nDiese Register zeigen auf die\n                     Anfangsadresse des Ausgabepuffers.\n\n$00FB-$00FE          unbenutzt\n\n$00FF-$010A  BASZPT  Puffer f√ºr Umwandlung Flie√ükomma nach\n                     ASCII\n\nDiese Register werden f√ºr die\n                     Zwischenspeicherung von Flie√ükommazahlen\n                     benutzt.\n\n$0100-$013E  BAD     Speicher f√ºr Korrektur bei Bandeingabe\n\nBeim Laden von Band werden hier die\n                     Daten zwischengespeichert, aus denen\n                     das Betriebssystem erkennen kann,\n                     welche Bytes fehlerhaft sind.\n\n$013F-$01FF          Prozessorstack\n\nDer Stack ist generell ein\n                     Zwischenspeicher, in dem der Programmierer\n                     Daten ablegen kann. Au√üerdem\n                     wird er vom Prozessor dazu\n                     benutzt, bei einem Interrupt oder\n                     einem Unterprogrammaufruf die\n                     Adresse, von der aus verzweigt wurde,\n                     zwischenzuspeichern. Dies geschieht in\n                     der Reihenfolge HIGH- und LOW-Byte.\n                     Die Daten werden im Stack von der\n                     Adresse $01FF zur Adresse $0100 hin\n                     abgelegt. Bei einem BREAK wird zus√§tzlich\n                     der Prozessorstatus im Stack\n                     abgelegt.\n\n$0200-$0258  BUF     BASIC-Eingabepuffer","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-16"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0,0,-0.04308804124593735,-0.010772010311484337,0,0.021544020622968674,0.021544020622968674,0,-0.06463205814361572,-0.005386005155742168,0,0.021544020622968674,0.04308804124593735,0,-0.021544020622968674,-0.06463205814361572,0,0.10772009938955307,0.037702035158872604,0,0,-0.026930024847388268,0,0.06463205814361572,0.021544020622968674,0,-0.21544019877910614,-0.005386005155742168,0,0.0861760824918747,0.053860049694776535,0,-0.06463205814361572,0,0,0.0861760824918747,0.005386005155742168,0,-0.10772009938955307,-0.021544020622968674,0,0.06463205814361572,0.04847404733300209,0,-0.06463205814361572,-0.03231602907180786,0,0,0.005386005155742168,0,0,-0.01615801453590393,0,0.0861760824918747,0,0,-0.12926411628723145,-0.04308804124593735,0,0,0.010772010311484337,0,-0.021544020622968674,0,0,0,0,0,-0.04308804124593735,-0.021544020622968674,0,0.021544020622968674,0.005386005155742168,0,0,-0.026930024847388268,0,0.0861760824918747,0.037702035158872604,0,-0.0861760824918747,0,0,0.04308804124593735,0.005386005155742168,0,-0.04308804124593735,-0.026930024847388268,0,0.04308804124593735,0.01615801453590393,0,-0.0861760824918747,-0.01615801453590393,0,0,0.01615801453590393,0,-0.04308804124593735,-0.03231602907180786,0,0.5601445436477661,0.01615801453590393,0,-0.021544020622968674,-0.037702035158872604,0,0.021544020622968674,0.01615801453590393,0,-0.021544020622968674,-0.05924605578184128,0,0.06463205814361572,0.053860049694776535,0,0,-0.005386005155742168,0,0,0.037702035158872604,0,-0.06463205814361572,-0.10772009938955307,0,0.21544019877910614,0.06463205814361572,0,0,-0.04847404733300209,0,0,0.04847404733300209,0,-0.0861760824918747,-0.05924605578184128,0,0,0.03231602907180786,0,0,-0.03231602907180786,0,0,0.005386005155742168,0,-0.021544020622968674,0,0,0.10772009938955307,0.04308804124593735,0,-0.021544020622968674,-0.07540407031774521,0,0.021544020622968674,0.021544020622968674,0,-0.04308804124593735,-0.021544020622968674,0,0.04308804124593735,0,0,-0.021544020622968674,-0.026930024847388268,0,0,0.010772010311484337,0,0,-0.021544020622968674,0,0,0.04847404733300209,0,0,-0.04308804124593735,0,0.04308804124593735,0.021544020622968674,0,-0.021544020622968674,-0.026930024847388268,0,0,0.021544020622968674,0,-0.12926411628723145,-0.053860049694776535,0,0.10772009938955307,0.010772010311484337,0,-0.06463205814361572,-0.021544020622968674,0,0.0861760824918747,0.28007227182388306,0,-0.021544020622968674,-0.021544020622968674,0,0.1723521649837494,0.010772010311484337,0,0,-0.01615801453590393,0,0.021544020622968674,0.03231602907180786,0,0,-0.010772010311484337,0,0.021544020622968674,0.005386005155742168,0,-0.04308804124593735,-0.04847404733300209,0,0.021544020622968674,0.11310610920190811,0,-0.021544020622968674,-0.005386005155742168,0,0,0.026930024847388268,0,0,-0.04308804124593735,0,0,0.01615801453590393,0,0,-0.053860049694776535,0,0,0.021544020622968674,0,-0.04308804124593735,-0.026930024847388268,0,0.021544020622968674,0.07540407031774521,0,-0.021544020622968674,-0.037702035158872604,0,0.06463205814361572,0.026930024847388268,0,0,-0.037702035158872604,0,0.021544020622968674,0.021544020622968674,0,-0.021544020622968674,-0.010772010311484337,0,0.06463205814361572,0.021544020622968674,0,-0.021544020622968674,-0.03231602907180786,0,0.06463205814361572,0,0,-0.04308804124593735,-0.005386005155742168,0,0.021544020622968674,0.021544020622968674,0,-0.021544020622968674,-0.021544020622968674,0,0.021544020622968674,0.005386005155742168,0,-0.19389618933200836,-0.06463205814361572,0,0,0.07540407031774521,0,-0.021544020622968674,-0.053860049694776535,0,0.021544020622968674,0.053860049694776535,0,0,-0.021544020622968674,0,0.0861760824918747,0.09694809466600418,0,-0.06463205814361572,-0.021544020622968674,0,0.021544020622968674,0.010772010311484337,0,-0.021544020622968674,-0.010772010311484337,0,0,0.15080814063549042,0,0,-0.026930024847388268,0,0.021544020622968674,0.01615801453590393,0,0,-0.01615801453590393,0,0,0.01615801453590393,0,-0.04308804124593735,0,0,0.0861760824918747,0,0,-0.04308804124593735,-0.01615801453590393,0,0,0.053860049694776535,0,-0.021544020622968674,-0.021544020622968674,0,0,0.010772010311484337,0,-0.0861760824918747,-0.03231602907180786,0,0.021544020622968674,0.03231602907180786,0,0,0,0,0,0.010772010311484337,0,-0.021544020622968674,-0.01615801453590393,0,0,0.05924605578184128,0,-0.04308804124593735,-0.01615801453590393,0,0.04308804124593735,0.037702035158872604,0,0,-0.03231602907180786,0,0,0.021544020622968674,0,-0.04308804124593735,-0.01615801453590393,0,0,0.010772010311484337,0,-0.021544020622968674,-0.09694809466600418,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-17 -->\nNach der Eingabe eines Befehls oder\n                     einer Programmzeile werden diese\n                     Daten in diesen Bereich zwischengespeichert,\n                     um dann wieder weiterverarbeitet zu werden.\n\n$0259-$0262  LAT     Tabelle der logischen Filenummern\n\nIn dieser Tabelle werden die logischen\n                     Filenummern der Reihe nach, von 1-10,\n                     eingetragen. Beim Schlie√üen einer\n                     Datei werden diese Eintr√§ge wieder\n                     entfernt.\n\n$0263-$026C  FAT     Tabelle der Ger√§tenummern\n\nDiese Tabelle entspricht $0259-$0262,\n                     nur mit dem Unterschied, da√ü hier die\n                     Ger√§teadressen vermerkt werden.\n\n$026D-$0276  SAT     Tabelle der Sekund√§radressen\n\nDiese Tabelle entspricht $0259-$0262,\n                     nur mit dem Unterschied, da√ü hier die\n                     Sekund√§radressen vermerkt werden.\n\n$0277-$0280  KEYD    Tastaturpuffer\n\nHier werden die Tastencodes zwischengespeichert,\n                     die nicht sofort vom\n                     Betriebssystem weiterverarbeitet\n                     werden k√∂nnen.\n\n$0281-$0282  MEMSTR  Start des BASIC-RAM\n\nNach einem Reset oder einem Kaltstart\n                     wird dieser Zeiger auf den n√§chsten\n                     freien Speicherplatz gesetzt.\n\n$0283-$0284  MEMSIZ  Ende des BASIC-RAM\n\nDieser Zeiger wird nach einem Reset\n                     oder einem Kaltstart auf den letzten\n                     verf√ºgbaren freien RAM-Speicherplatz\n                     gesetzt.","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-17"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0.01176348514854908,0,0,-0.00588174257427454,0,0.03529045358300209,0.008822613395750523,0,-0.03529045358300209,-0.00294087128713727,0,0.01176348514854908,0.00588174257427454,0,-0.01176348514854908,-0.020586097612977028,0,0.02352697029709816,0.014704355970025063,0,-0.04705394059419632,-0.01176348514854908,0,0.02352697029709816,0.017645226791501045,0,0,-0.01176348514854908,0,0.01176348514854908,0.014704355970025063,0,0,-0.00294087128713727,0,0.01176348514854908,0.00294087128713727,0,0,-0.00294087128713727,0,0.01176348514854908,0.041172195225954056,0,-0.02352697029709816,-0.008822613395750523,0,0,0.008822613395750523,0,-0.02352697029709816,0,0,0.05881742388010025,0.008822613395750523,0,-0.03529045358300209,-0.008822613395750523,0,0.01176348514854908,0.01176348514854908,0,-0.01176348514854908,0,0,0,0.014704355970025063,0,-0.02352697029709816,-0.03529045358300209,0,0,0.00588174257427454,0,0,-0.00588174257427454,0,0.02352697029709816,0,0,-0.05881742388010025,-0.00294087128713727,0,0,0.00588174257427454,0,-0.04705394059419632,-0.017645226791501045,0,0.01176348514854908,0.02352697029709816,0,-0.02352697029709816,-0.01176348514854908,0,0.01176348514854908,0,0,0,-0.00294087128713727,0,0.4234854578971863,0.02352697029709816,0,-0.01176348514854908,-0.02352697029709816,0,0.01176348514854908,0.00588174257427454,0,0,-0.1823340207338333,0,0.02352697029709816,0.01176348514854908,0,-0.01176348514854908,-0.026467841118574142,0,0.01176348514854908,0.01176348514854908,0,0,0,0,0.08234439045190811,0.008822613395750523,0,0,-0.00588174257427454,0,0.01176348514854908,0.008822613395750523,0,-0.02352697029709816,-0.00294087128713727,0,0,0.008822613395750523,0,0,-0.017645226791501045,0,0.02352697029709816,0,0,-0.01176348514854908,-0.01176348514854908,0,0.07058090716600418,0.029408711940050125,0,-0.01176348514854908,-0.017645226791501045,0,0,0.020586097612977028,0,0,-0.008822613395750523,0,0,0,0,0,-0.01176348514854908,0,0,0.00294087128713727,0,-0.02352697029709816,-0.00294087128713727,0,0.04705394059419632,0.017645226791501045,0,0,-0.029408711940050125,0,0.03529045358300209,0.00588174257427454,0,-0.01176348514854908,-0.03529045358300209,0,0,0.00588174257427454,0,-0.03529045358300209,-0.01176348514854908,0,0.03529045358300209,0.00588174257427454,0,-0.02352697029709816,0,0,0.04705394059419632,0.21468359231948853,0,0,-0.014704355970025063,0,0.05881742388010025,0.017645226791501045,0,-0.01176348514854908,-0.00588174257427454,0,0.01176348514854908,0.01176348514854908,0,-0.01176348514854908,-0.00588174257427454,0,0.04705394059419632,0.014704355970025063,0,-0.01176348514854908,-0.008822613395750523,0,0.03529045358300209,0.04411306977272034,0,0,-0.00294087128713727,0,0.01176348514854908,0.01176348514854908,0,-0.01176348514854908,-0.02352697029709816,0,0,0.00588174257427454,0,0,0,0,0.01176348514854908,0.014704355970025063,0,-0.04705394059419632,-0.00588174257427454,0,0.02352697029709816,0.03823132440447807,0,-0.02352697029709816,-0.00588174257427454,0,0,0.00294087128713727,0,-0.01176348514854908,-0.00588174257427454,0,0,0,0,0,-0.00588174257427454,0,0,0.014704355970025063,0,0,-0.020586097612977028,0,0,0.026467841118574142,0,-0.01176348514854908,-0.00294087128713727,0,0.02352697029709816,0.017645226791501045,0,-0.02352697029709816,-0.01176348514854908,0,0,0,0,-0.7058091163635254,-0.017645226791501045,0,0,0.02352697029709816,0,-0.01176348514854908,-0.026467841118574142,0,0,0.02352697029709816,0,0,-0.01176348514854908,0,0.01176348514854908,0.03234958276152611,0,-0.02352697029709816,-0.01176348514854908,0,0.01176348514854908,0.008822613395750523,0,-0.01176348514854908,-0.00588174257427454,0,0.01176348514854908,0.12939833104610443,0,-0.02352697029709816,-0.008822613395750523,0,0,0.020586097612977028,0,0,0,0,0,0.01176348514854908,0,0,-0.008822613395750523,0,0.05881742388010025,0.00294087128713727,0,-0.01176348514854908,0,0,0,0.026467841118574142,0,0,-0.02352697029709816,0,0.01176348514854908,0.014704355970025063,0,-0.01176348514854908,-0.017645226791501045,0,0.02352697029709816,0,0,0,-0.00588174257427454,0,0.02352697029709816,0.00588174257427454,0,-0.04705394059419632,-0.00294087128713727,0,0,0.017645226791501045,0,0,-0.00294087128713727,0,0,0,0,0,-0.00588174257427454,0,0.01176348514854908,0.01176348514854908,0,-0.03529045358300209,-0.01176348514854908,0,0.04705394059419632,0,0,-0.02352697029709816,-0.35878628492355347,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-18 -->\n$0285        TIMOUT  Timeout-Flag f√ºr seriellen IEC-Bus\n\nAlle Z√§hler in dieser Speicherzelle,\n                     die gr√∂√üer als 128 sind, bedeuten, da√ü\n                     ein Ger√§t angeschlossen ist. Die\n                     kleineren Werte bedeuten das\n                     Gegenteil.\n\n$0286        COLOR   augenblickliche Farbe\n\nHier wird die augenblickliche\n                     Zeichenfarbe festgelegt:\n                     \n                     |    |            |\n                     |----|------------|\n                     |  0 | schwarz    |\n                     |  1 | wei√ü       |\n                     |  2 | rot        |\n                     |  3 | lila       |\n                     |  4 | purpur     |\n                     |  5 | gr√ºn       |\n                     |  6 | blau       |\n                     |  7 | gelb       |\n                     |  8 | orange     |\n                     |  9 | braun      |\n                     | 10 | hellrot    |\n                     | 11 | dunkelgrau |\n                     | 12 | mittelgrau |\n                     | 13 | hellgr√ºn   |\n                     | 14 | hellblau   |\n                     | 15 | hellgrau   |\n\n$0287        GDCOL   Farbe unter dem Cursor\n\nIn dieser Speicherzelle merkt sich das\n                     Betriebssystem, welche Farbe gerade\n                     unter dem Cursor steht.\n\n$0288        HIBASE  HIGH-Byte Video-RAM\n\nDieses HIGH-Byte gibt dem Betriebssystem an,\n                     ab welcher Adresse das Video-RAM zu finden\n                     ist.\n\n$0289        XMAX    L√§nge des Tastaturpuffers","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-18"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0.012053443118929863,0.0060267215594649315,0,-0.012053443118929863,-0.0030133607797324657,0,0,0.00904008187353611,0,0,-0.0030133607797324657,0,0.012053443118929863,0.030133606866002083,0,0,-0.024106886237859726,0,0.08437409996986389,0.01808016374707222,0,-0.04821377247571945,-0.00904008187353611,0,0,0.01808016374707222,0,-0.012053443118929863,-0.0030133607797324657,0,0.024106886237859726,0.02712024562060833,0,0,-0.015066803433001041,0,0,0.012053443118929863,0,-0.012053443118929863,-0.01808016374707222,0,0,0.030133606866002083,0,-0.012053443118929863,-0.012053443118929863,0,0,0.01808016374707222,0,-0.012053443118929863,0,0,0.024106886237859726,0,0,-0.012053443118929863,0,0,0.024106886237859726,0.0030133607797324657,0,0,0,0,0.024106886237859726,0.00904008187353611,0,-0.024106886237859726,-0.012053443118929863,0,0.012053443118929863,0.0030133607797324657,0,0,-0.00904008187353611,0,0,0.0030133607797324657,0,-0.012053443118929863,0,0,0.012053443118929863,0,0,-0.04821377247571945,-0.015066803433001041,0,0.012053443118929863,0.012053443118929863,0,-0.024106886237859726,-0.0060267215594649315,0,0,0.0060267215594649315,0,0,-0.00904008187353611,0,0.7955272197723389,0.0030133607797324657,0,-0.012053443118929863,-0.0060267215594649315,0,0.012053443118929863,0.0060267215594649315,0,0,-0.0452004112303257,0,0.04821377247571945,0.042187049984931946,0,0,-0.024106886237859726,0,0.012053443118929863,0,0,-0.024106886237859726,-0.0060267215594649315,0,0.060267213732004166,0.02712024562060833,0,0,-0.0060267215594649315,0,0.03616032749414444,0.0030133607797324657,0,-0.012053443118929863,-0.00904008187353611,0,0.012053443118929863,0.0030133607797324657,0,0,-0.0060267215594649315,0,0,0.0030133607797324657,0,-0.024106886237859726,-0.012053443118929863,0,0.08437409996986389,0.01808016374707222,0,0,-0.00904008187353611,0,0,0.01808016374707222,0,0,0,0,0,0.012053443118929863,0,0,-0.012053443118929863,0,0.024106886237859726,0.0060267215594649315,0,-0.03616032749414444,0,0,0.024106886237859726,0,0,-0.012053443118929863,-0.0060267215594649315,0,0.03616032749414444,0.00904008187353611,0,-0.012053443118929863,-0.02712024562060833,0,0,0.0060267215594649315,0,-0.04821377247571945,-0.012053443118929863,0,0.04821377247571945,0,0,-0.012053443118929863,0,0,0.04821377247571945,0.39776360988616943,0,-0.012053443118929863,-0.012053443118929863,0,0.08437409996986389,0.00904008187353611,0,-0.012053443118929863,-0.0030133607797324657,0,0,0.02712024562060833,0,-0.04821377247571945,-0.0030133607797324657,0,0.07232065498828888,0.0060267215594649315,0,-0.04821377247571945,-0.012053443118929863,0,0.07232065498828888,0.03314696624875069,0,0,0,0,0,0.03917368873953819,0,0,-0.01808016374707222,0,0.012053443118929863,0.0060267215594649315,0,0,-0.0030133607797324657,0,0.012053443118929863,0.0060267215594649315,0,-0.024106886237859726,-0.012053443118929863,0,0.012053443118929863,0.042187049984931946,0,-0.03616032749414444,-0.0030133607797324657,0,0.012053443118929863,0,0,0,-0.0030133607797324657,0,0,0,0,-0.012053443118929863,-0.0030133607797324657,0,0.024106886237859726,0.01808016374707222,0,0,-0.021093524992465973,0,0,0.01808016374707222,0,-0.012053443118929863,-0.0060267215594649315,0,0.012053443118929863,0.024106886237859726,0,-0.024106886237859726,-0.012053443118929863,0,0,0.0030133607797324657,0,-0.1808016449213028,-0.024106886237859726,0,0,0.024106886237859726,0,0,-0.00904008187353611,0,0,0.02712024562060833,0,0,-0.01808016374707222,0,0.060267213732004166,0.0452004112303257,0,-0.024106886237859726,-0.012053443118929863,0,0.012053443118929863,0,0,-0.012053443118929863,-0.024106886237859726,0,0.012053443118929863,0.23504213988780975,0,0,-0.02712024562060833,0,0.012053443118929863,0.03917368873953819,0,-0.024106886237859726,0,0,0.024106886237859726,0.012053443118929863,0,-0.012053443118929863,0,0,0.024106886237859726,0.00904008187353611,0,0,-0.0060267215594649315,0,0,0.021093524992465973,0,0,-0.012053443118929863,0,0,0.015066803433001041,0,0,-0.021093524992465973,0,0,0.00904008187353611,0,0,0,0,0.012053443118929863,0,0,-0.012053443118929863,-0.012053443118929863,0,0,0.03314696624875069,0,0,0,0,0,0,0,0,-0.0060267215594649315,0,0,0.0060267215594649315,0,-0.024106886237859726,-0.012053443118929863,0,0.012053443118929863,0.0060267215594649315,0,-0.012053443118929863,-0.09944090247154236,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-19 -->\nDieses Register gibt an, wie viele\n                     Speicherzellen des Tastaturpuffers\n                     belegt werden sollen.\n\n$028A        RPTFLG  Flag f√ºr Repeatfunktion f√ºr alle\n                     Tasten\n\nIn dieser Speicherzelle wird dem\n                     Betriebssystem angegeben, welche Tasten\n                     eine Repeat-Funktion haben und welche\n                     nicht:\n\n|     |                                           |\n                     |-----|-------------------------------------------|\n                     |   0 | nur Cursor-, Insert/Delete- und Leertaste |\n                     |  64 | keine Taste                               |\n                     | 128 | alle Tasten                               |\n\n$028B        KOUNT   Z√§hler f√ºr Repeatgeschwindigkeit\n\nDiese Speicherzelle dient als Z√§hler,\n                     die die Repeat-Geschwindigkeit\n                     festlegt.\n\n$028C        DELAY   Z√§hler f√ºr Repeatverz√∂gerung\n\nHier wird angegeben, wie lange eine\n                     Taste gedr√ºckt sein mu√ü, bis die\n                     Repeat-Funktion einsetzt.\n\n$028D        SHFLAG  Flag f√ºr SHIFT, Commodore und CTRL\n\nIn diesem Register stehen die\n                     Tastencodes der Steuertasten:","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-19"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0.010132995434105396,0,-0.027021322399377823,0,0,0.027021322399377823,0.003377665299922228,0,-0.040531981736421585,-0.016888326033949852,0,0.013510661199688911,0.040531981736421585,0,-0.027021322399377823,-0.027021322399377823,0,0.040531981736421585,0.047287315130233765,0,-0.027021322399377823,-0.010132995434105396,0,0,0.043909650295972824,0,0,-0.006755330599844456,0,0.013510661199688911,0.020265990868210793,0,0,-0.006755330599844456,0,0.013510661199688911,0,0,-0.054042644798755646,-0.010132995434105396,0,0,0.016888326033949852,0,0,-0.003377665299922228,0,0.027021322399377823,0.023643657565116882,0,-0.09457463026046753,-0.003377665299922228,0,0.027021322399377823,0.003377665299922228,0,-0.027021322399377823,-0.006755330599844456,0,0.06755330413579941,0,0,-0.013510661199688911,0,0,0.09457463026046753,0,0,-0.08106396347284317,-0.020265990868210793,0,0,0.016888326033949852,0,0,-0.013510661199688911,0,0.040531981736421585,0.006755330599844456,0,-0.013510661199688911,0,0,0.054042644798755646,0,0,-0.06755330413579941,-0.020265990868210793,0,0.013510661199688911,0.006755330599844456,0,-0.013510661199688911,-0.010132995434105396,0,0,0.003377665299922228,0,0,-0.013510661199688911,0,0.6890437006950378,0.013510661199688911,0,-0.027021322399377823,-0.020265990868210793,0,0.054042644798755646,0.006755330599844456,0,0,-0.10470762103796005,0,0.013510661199688911,0.020265990868210793,0,-0.013510661199688911,-0.013510661199688911,0,0,0,0,0,-0.006755330599844456,0,0.12159594893455505,0.027021322399377823,0,0,-0.010132995434105396,0,0,0.016888326033949852,0,-0.027021322399377823,-0.030398987233638763,0,0,0.020265990868210793,0,-0.013510661199688911,-0.003377665299922228,0,0.040531981736421585,0.016888326033949852,0,0,-0.050664979964494705,0,0.09457463026046753,0.013510661199688911,0,-0.027021322399377823,-0.016888326033949852,0,0,0.033776652067899704,0,-0.013510661199688911,-0.006755330599844456,0,0,0.050664979964494705,0,-0.013510661199688911,-0.040531981736421585,0,0,0,0,0,-0.003377665299922228,0,0.040531981736421585,0.020265990868210793,0,0,-0.006755330599844456,0,0.013510661199688911,0.027021322399377823,0,-0.013510661199688911,-0.040531981736421585,0,0,0.010132995434105396,0,-0.027021322399377823,-0.010132995434105396,0,0.10808528959751129,0.003377665299922228,0,-0.013510661199688911,0,0,0.013510661199688911,0.3445218503475189,0,0,-0.023643657565116882,0,0.054042644798755646,0.030398987233638763,0,0,-0.003377665299922228,0,0,0.006755330599844456,0,-0.013510661199688911,-0.013510661199688911,0,0.06755330413579941,0.006755330599844456,0,-0.013510661199688911,-0.010132995434105396,0,0.06755330413579941,0.06417564302682877,0,-0.013510661199688911,-0.006755330599844456,0,0.013510661199688911,0.010132995434105396,0,0,-0.020265990868210793,0,0,0,0,0,-0.006755330599844456,0,0,0.023643657565116882,0,-0.027021322399377823,0,0,0.040531981736421585,0.050664979964494705,0,-0.027021322399377823,-0.027021322399377823,0,0,0,0,0,-0.006755330599844456,0,0,0.006755330599844456,0,0,-0.030398987233638763,0,0,0.006755330599844456,0,-0.013510661199688911,-0.006755330599844456,0,0.013510661199688911,0.037154316902160645,0,0,-0.003377665299922228,0,0,0.030398987233638763,0,0,-0.027021322399377823,0,0,0,0,-0.36478784680366516,-0.013510661199688911,0,0,0.06417564302682877,0,0,-0.010132995434105396,0,0,0.020265990868210793,0,-0.027021322399377823,-0.016888326033949852,0,0.08106396347284317,0.030398987233638763,0,-0.040531981736421585,-0.003377665299922228,0,0.040531981736421585,0,0,-0.013510661199688911,-0.006755330599844456,0,0.08106396347284317,0.20603758096694946,0,-0.013510661199688911,-0.013510661199688911,0,0.013510661199688911,0.047287315130233765,0,-0.013510661199688911,-0.006755330599844456,0,0,0.010132995434105396,0,-0.013510661199688911,-0.003377665299922228,0,0,0,0,0,0,0,0.013510661199688911,0.030398987233638763,0,0,-0.013510661199688911,0,0,0.020265990868210793,0,-0.013510661199688911,-0.020265990868210793,0,0,0,0,0,-0.003377665299922228,0,0,0.010132995434105396,0,-0.027021322399377823,0,0,0.013510661199688911,0.023643657565116882,0,-0.013510661199688911,-0.013510661199688911,0,0.013510661199688911,0.006755330599844456,0,0,-0.003377665299922228,0,0,0,0,-0.040531981736421585,-0.003377665299922228,0,0.013510661199688911,0,0,-0.013510661199688911,-0.18239392340183258,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-20 -->\n|   |                           |\n                     |---|---------------------------|\n                     | 1 | SHIFT                     |\n                     | 2 | Commodore                 |\n                     | 3 | SHIFT und Commodore       |\n                     | 4 | CTRL                      |\n                     | 5 | SHIFT und CTRL            |\n                     | 6 | Commodore und CTRL        |\n                     | 7 | SHIFT, Commodore und CTRL |\n\n$028E        LSTSHF  SHIFT-Flag\n\nHier steht die zuletzt gedr√ºckte\n                     Steuertaste.\n\n$028F-$0290  KEYLOG  Zeiger f√ºr Tastatur-Dekodierung\n\nHier steht ein Zeiger, der auf die\n                     Betriebssystemroutine f√ºr die Tastatur-\n                     Dekodierung zeigt.\n\n$0291        MODE    Flag f√ºr SHIFT/Commodore gesperrt\n\nFalls in der Speicherzelle eine 128\n                     steht, wird eine Umschaltung mit\n                     SHIFT/Commodore verriegelt. Bei einer\n                     0 wird die Umschaltung zugelassen.\n\n$0292        AUTODN  Flag f√ºr Scrollen\n\nWenn in dieser Speicherzelle eine 0\n                     steht, setzt der Scroll-Vorgang ein.\n                     Bei einem gr√∂√üeren Wert setzt dieser\n                     Vorgang nicht ein.\n\n$0293        M51CTR  RS-232 Kontrollwert\n\nHier wird die √úbertragungsgeschwindigkeit\n                     der RS-232 Schnittstelle festgelegt:\n                     Bits 0-3 steuern die √úbertragungsgeschwindigkeit:","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-20"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0.006659502163529396,0,0,0,0,0,0.0013319003628566861,0,-0.0053276014514267445,0,0,0.0053276014514267445,0,0,-0.0053276014514267445,-0.0026638007257133722,0,0.021310405805706978,0.014650904573500156,0,0,-0.006659502163529396,0,0,0.0013319003628566861,0,-0.0053276014514267445,0,0,0.021310405805706978,0.0053276014514267445,0,0,-0.0026638007257133722,0,0,0.0013319003628566861,0,-0.010655202902853489,-0.00399570120498538,0,0,0.0026638007257133722,0,-0.0053276014514267445,-0.0026638007257133722,0,0,0.0026638007257133722,0,-0.01598280481994152,0,0,0.01598280481994152,0,0,0,-0.00799140240997076,0,0.010655202902853489,0,0,-0.010655202902853489,-0.0026638007257133722,0,0,0.0053276014514267445,0,-0.010655202902853489,-0.013319004327058792,0,0.0053276014514267445,0.00799140240997076,0,0,-0.0013319003628566861,0,0.0053276014514267445,0,0,-0.01598280481994152,0,0,0,0,0,-0.010655202902853489,-0.014650904573500156,0,0,0,0,-0.0053276014514267445,-0.011987103149294853,0,0.058603618294000626,0,0,0,0,0,0.7085710167884827,0.0013319003628566861,0,-0.0053276014514267445,-0.0026638007257133722,0,0.010655202902853489,0.00399570120498538,0,0,-0.125198632478714,0,0.04794841259717941,0.010655202902853489,0,-0.0053276014514267445,0,0,0,0,0,0,-0.0026638007257133722,0,0.03196560963988304,0.010655202902853489,0,-0.0053276014514267445,0,0,0.0053276014514267445,0.0053276014514267445,0,0,-0.00799140240997076,0,0,0,0,0,-0.0026638007257133722,0,0.010655202902853489,0.0026638007257133722,0,0,-0.009323302656412125,0,0.042620811611413956,0.00799140240997076,0,-0.0053276014514267445,-0.0013319003628566861,0,0,0.0053276014514267445,0,0,-0.0053276014514267445,0,0,0.0013319003628566861,0,0,-0.0053276014514267445,0,0,0.0026638007257133722,0,-0.0053276014514267445,-0.00399570120498538,0,0.026638008654117584,0.0026638007257133722,0,0,-0.009323302656412125,0,0.0053276014514267445,0.0026638007257133722,0,0,-0.010655202902853489,0,0,0.00399570120498538,0,-0.010655202902853489,-0.0026638007257133722,0,0.01598280481994152,0.029301809147000313,0,-0.0053276014514267445,0,0,0.0053276014514267445,0.35428550839424133,0,0,-0.009323302656412125,0,0,0.0053276014514267445,0,0,-0.0026638007257133722,0,0.0053276014514267445,0.023974206298589706,0,-0.0053276014514267445,-0.0026638007257133722,0,0.010655202902853489,0,0,-0.010655202902853489,-0.0013319003628566861,0,0,0.01731470413506031,0,0,-0.00399570120498538,0,0,0.00799140240997076,0,0,0,0,0,0,0,0,-0.0013319003628566861,0,0,0.010655202902853489,0,-0.010655202902853489,0,0,0,0.021310405805706978,0,-0.0053276014514267445,-0.0053276014514267445,0,0,0,0,0,-0.0013319003628566861,0,0,0,0,-0.0053276014514267445,-0.00399570120498538,0,0,0.00399570120498538,0,-0.026638008654117584,-0.0026638007257133722,0,0,0.01598280481994152,0,0,-0.0026638007257133722,0,0.0053276014514267445,0.0026638007257133722,0,0,-0.0026638007257133722,0,0.0053276014514267445,0.0013319003628566861,0,-0.49013933539390564,-0.0053276014514267445,0,0,0.009323302656412125,0,0,-0.006659502163529396,0,0,0.0026638007257133722,0,0,-0.0026638007257133722,0,0,0,0,0,-0.0013319003628566861,0,0.021310405805706978,0.01731470413506031,0,-0.010655202902853489,-0.0026638007257133722,0,0,0.18247035145759583,0,0,-0.006659502163529396,0,0.010655202902853489,0.0026638007257133722,0,-0.0053276014514267445,0,0,0,0.011987103149294853,0,-0.0053276014514267445,-0.0013319003628566861,0,0,0,0,0,0,0,0.0053276014514267445,0.00799140240997076,0,0,-0.006659502163529396,0,0,0.0013319003628566861,0,-0.01598280481994152,-0.0026638007257133722,0,0,0,0,-0.0053276014514267445,0,0,0.010655202902853489,0.0026638007257133722,0,-0.021310405805706978,-0.0026638007257133722,0,0.01598280481994152,0.010655202902853489,0,0,-0.014650904573500156,0,0,0,0,0,0,0,0,0.0026638007257133722,0,-0.026638008654117584,0,0,0,0.0026638007257133722,0,-0.010655202902853489,-0.2464015781879425,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-21 -->\n| Bitmuster     | Wert     | Baudrate   |\n                     |---------------|----------|------------|\n                     | 0000          | 0        | 50 Baud    |\n                     | 0001          | 1        | 50 Baud    |\n                     | 0010          | 2        | 75 Baud    |\n                     | 0011          | 3        | 110 Baud   |\n                     | 0100          | 4        | 134.5 Baud |\n                     | 0101          | 5        | 150 Baud   |\n                     | 0110          | 6        | 300 Baud   |\n                     | 0111          | 7        | 600 Baud   |\n                     | 1000          | 8        | 1200 Baud  |\n                     | 1001          | 9        | 1800 Baud  |\n                     | 1010          | 10       | 2400 Baud  |\n\nBit 4 nicht belegt\n                     Die Bits 5 und 6 steuern die L√§nge\n                     der √úbertragung:\n\n| Bitmuster     | Wert     | L√§nge |\n                     |---------------|----------|-------|\n                     | 00            | 0        | 8-Bit |\n                     | 01            | 32       | 7-Bit |\n                     | 10            | 64       | 6-Bit |\n                     | 11            | 96       | 5-Bit |\n\nBit 7 gibt die Anzahl der STOP-Bits an:\n\n| Bitmuster     | Wert     | Anzahl      |\n                     |---------------|----------|-------------|\n                     | 0             | 0        | 1-STOP-Bit  |\n                     | 1             | 128      | 2-STOP-Bits |\n\n$0294        M51CDR  RS-232 Befehlswort","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-21"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0.010147382505238056,0,0,-0.007610537111759186,0,0,0.007610537111759186,0,-0.040589530020952225,0,0,0.010147382505238056,0.025368457660079002,0,-0.010147382505238056,-0.010147382505238056,0,0.020294765010476112,0.017757920548319817,0,-0.010147382505238056,-0.010147382505238056,0,0.010147382505238056,0.002536845626309514,0,-0.010147382505238056,0,0,0.020294765010476112,0.030442148447036743,0,-0.010147382505238056,-0.005073691252619028,0,0,0,0,-0.040589530020952225,-0.005073691252619028,0,0,0.010147382505238056,0,0,-0.002536845626309514,0,0,0.010147382505238056,0,-0.020294765010476112,-0.010147382505238056,0,0.020294765010476112,0,0,-0.010147382505238056,-0.010147382505238056,0,0.040589530020952225,0.002536845626309514,0,0,0,0,0.010147382505238056,0.005073691252619028,0,-0.060884296894073486,-0.030442148447036743,0,0.020294765010476112,0.007610537111759186,0,0,-0.012684228830039501,0,0.020294765010476112,0,0,-0.010147382505238056,-0.002536845626309514,0,0,0.005073691252619028,0,-0.040589530020952225,-0.020294765010476112,0,0,0.010147382505238056,0,-0.010147382505238056,-0.007610537111759186,0,0.010147382505238056,0.002536845626309514,0,-0.010147382505238056,0,0,0.7306115627288818,0,0,-0.020294765010476112,-0.020294765010476112,0,0.010147382505238056,0.010147382505238056,0,-0.010147382505238056,-0.1065475195646286,0,0.040589530020952225,0.010147382505238056,0,-0.010147382505238056,-0.007610537111759186,0,0.020294765010476112,0.005073691252619028,0,0,-0.005073691252619028,0,0.07103168219327927,0.020294765010476112,0,0,-0.007610537111759186,0,0.010147382505238056,0.005073691252619028,0,-0.010147382505238056,-0.022831611335277557,0,0,0,0,0,0,0,0,0.010147382505238056,0,0,-0.012684228830039501,0,0.07103168219327927,0.010147382505238056,0,0,-0.005073691252619028,0,0,0.020294765010476112,0,0,0,0,0,0.007610537111759186,0,0,-0.030442148447036743,0,0,0.010147382505238056,0,0,-0.005073691252619028,0,0.040589530020952225,0.010147382505238056,0,-0.010147382505238056,-0.005073691252619028,0,0.030442148447036743,0,0,0,-0.030442148447036743,0,0.020294765010476112,0.002536845626309514,0,-0.020294765010476112,-0.005073691252619028,0,0.030442148447036743,0.005073691252619028,0,-0.020294765010476112,-0.005073691252619028,0,0.010147382505238056,0.3678426444530487,0,0,-0.020294765010476112,0,0.040589530020952225,0.010147382505238056,0,0,-0.007610537111759186,0,0,0.020294765010476112,0,-0.020294765010476112,-0.005073691252619028,0,0.040589530020952225,0.010147382505238056,0,-0.010147382505238056,-0.010147382505238056,0,0.020294765010476112,0.03805268555879593,0,-0.040589530020952225,-0.002536845626309514,0,0,0.010147382505238056,0,0,-0.007610537111759186,0,0.010147382505238056,0.002536845626309514,0,0,-0.002536845626309514,0,0.020294765010476112,0.005073691252619028,0,-0.040589530020952225,-0.002536845626309514,0,0.010147382505238056,0.03551584109663963,0,-0.050736915320158005,-0.010147382505238056,0,0,0,0,-0.010147382505238056,0,0,0,0,0,0,-0.005073691252619028,0,0,0.005073691252619028,0,-0.010147382505238056,-0.002536845626309514,0,0.010147382505238056,0.030442148447036743,0,0,-0.005073691252619028,0,0,0.017757920548319817,0,0,-0.015221074223518372,0,0.020294765010476112,0.015221074223518372,0,-0.40589532256126404,-0.010147382505238056,0,0,0.020294765010476112,0,-0.010147382505238056,-0.012684228830039501,0,0,0.005073691252619028,0,0,-0.010147382505238056,0,0.040589530020952225,0.020294765010476112,0,-0.010147382505238056,-0.002536845626309514,0,0.020294765010476112,0.002536845626309514,0,-0.010147382505238056,-0.012684228830039501,0,0,0.20294766128063202,0,0,-0.010147382505238056,0,0.040589530020952225,0.012684228830039501,0,-0.010147382505238056,-0.022831611335277557,0,0,0.010147382505238056,0,0,-0.002536845626309514,0,0,0.010147382505238056,0,0,0,0,0.010147382505238056,0.027905302122235298,0,0,-0.020294765010476112,0,0,0.007610537111759186,0,-0.020294765010476112,-0.027905302122235298,0,0,0,0,0,-0.005073691252619028,0,0,0,0,-0.040589530020952225,0,0,0.010147382505238056,0.017757920548319817,0,0,-0.005073691252619028,0,0,0.005073691252619028,0,0,0,0,0.010147382505238056,0,0,-0.040589530020952225,0,0,0.020294765010476112,0.010147382505238056,0,-0.010147382505238056,-0.20294766128063202,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-22 -->\nDie einzelnen Bits steuern das\n                     'Handshake'-Protokol1.\n\n$0295-$0296  M51AJB  Bit-Timing\n\nDie M√∂glichkeit, eine freiw√§hlbare\n                     √úbertragungsgeschwindigkeit einzustellen,\n                     wurde vorgesehen, aber nicht\n                     eingebaut.\n\n$0297        RSSTAT  RS-232 Status\n\nHier werden die Fehlermeldungen der\n                     RS-232 Schnittstelle angezeigt:\n\n| Bit | Wert  | Bedeutung                        |\n                     |-----|-------|----------------------------------|\n                     |  0  |   1   | Fehler bei Parity-Pr√ºfung        |\n                     |  1  |   2   | Fehler in der Bitfolge           |\n                     |  2  |   4   | √úberlauf des Eingabepuffers      |\n                     |  3  |   8   | Eingabepuffer ist leer           |\n                     |  4  |  16   | das CTS-Signal fehlt             |\n                     |  5  |  32   | nicht belegt                     |\n                     |  6  |  64   | Das DSR-Signal fehlt             |\n                     |  7  | 128   | Die √úbertragung ist unterbrochen |\n\n$0298        BITNUM  Anzahl der Datenbits f√ºr RS-232\n\nDiese Speicherzelle wird verwendet,\n                     um die Wortl√§nge festzustellen.\n\n$0299-$029A  BAUDOF  RS-232 Baud-Rate","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-22"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0.028157224878668785,0,0,0,0,0.01877148263156414,0.09855028986930847,0,-0.07508593052625656,0,0,0.07508593052625656,0.028157224878668785,0,-0.03754296526312828,-0.03285009413957596,0,0.01877148263156414,0.03285009413957596,0,0,-0.03285009413957596,0,0.03754296526312828,0.014078612439334393,0,0,-0.004692870657891035,0,0.01877148263156414,0.03285009413957596,0,0,-0.00938574131578207,0,0,0,0,-0.11262889951467514,0,0,0,0.03754296526312828,0,-0.01877148263156414,-0.004692870657891035,0,0,0.03754296526312828,0,0,0,0,0.01877148263156414,0.03754296526312828,0,0,-0.028157224878668785,0,0.03754296526312828,0,0,-0.07508593052625656,-0.004692870657891035,0,0.01877148263156414,0,0,-0.07508593052625656,-0.028157224878668785,0,0.01877148263156414,0.01877148263156414,0,0,-0.03754296526312828,0,0.07508593052625656,0.05162157863378525,0,-0.09385741502046585,0,0,0,0,0,-0.09385741502046585,-0.00938574131578207,0,0,0.028157224878668785,0,-0.11262889951467514,-0.046928707510232925,0,0.07508593052625656,0.01877148263156414,0,0,0,0,0.5819159746170044,0.00938574131578207,0,-0.01877148263156414,-0.05162157863378525,0,0.03754296526312828,0.046928707510232925,0,0,-0.01877148263156414,0,0.01877148263156414,0.00938574131578207,0,0,0,0,0,0.06570018827915192,0,0,0,0,0.28157225251197815,0.023464353755116463,0,-0.01877148263156414,-0.004692870657891035,0,0,0.004692870657891035,0,-0.07508593052625656,-0.07039306312799454,0,0.01877148263156414,0.004692870657891035,0,0,-0.00938574131578207,0,0.15017186105251312,0.004692870657891035,0,0,-0.004692870657891035,0,0.13140037655830383,0.00938574131578207,0,-0.01877148263156414,0,0,0.01877148263156414,0.028157224878668785,0,-0.07508593052625656,-0.03754296526312828,0,0,0.023464353755116463,0,0,-0.03754296526312828,0,0.01877148263156414,0.028157224878668785,0,-0.01877148263156414,-0.014078612439334393,0,0.11262889951467514,0.03754296526312828,0,0,-0.046928707510232925,0,0.01877148263156414,0,0,0,-0.046928707510232925,0,0,0.00938574131578207,0,-0.09385741502046585,-0.05631444975733757,0,0.09385741502046585,0.06100732088088989,0,-0.01877148263156414,0,0,0.01877148263156414,0.2909579873085022,0,-0.01877148263156414,-0.014078612439334393,0,0.09385741502046585,0.028157224878668785,0,0,-0.014078612439334393,0,0,0.00938574131578207,0,0,0,0,0.07508593052625656,0.004692870657891035,0,-0.01877148263156414,-0.01877148263156414,0,0.03754296526312828,0.15955761075019836,0,0,-0.01877148263156414,0,0,0.004692870657891035,0,0,-0.03754296526312828,0,0,0.01877148263156414,0,-0.01877148263156414,0,0,0,0.07977880537509918,0,-0.11262889951467514,0,0,0,0.06570018827915192,0,-0.15017186105251312,-0.03754296526312828,0,0.01877148263156414,0.00938574131578207,0,0,-0.0422358363866806,0,0,0,0,0,0,0,0.03754296526312828,0.014078612439334393,0,-0.07508593052625656,-0.00938574131578207,0,0.07508593052625656,0.06570018827915192,0,0,-0.01877148263156414,0,0,0.014078612439334393,0,-0.05631444975733757,-0.01877148263156414,0,0.03754296526312828,0.004692870657891035,0,0,-0.046928707510232925,0,0,0.06570018827915192,0,0,-0.03285009413957596,0,0.1877148300409317,0.00938574131578207,0,0,-0.03285009413957596,0,0.05631444975733757,0.046928707510232925,0,-0.01877148263156414,-0.028157224878668785,0,0.01877148263156414,0.01877148263156414,0,-0.05631444975733757,0,0,0.01877148263156414,0.18302196264266968,0,0,-0.014078612439334393,0,0.01877148263156414,0.028157224878668785,0,-0.01877148263156414,0,0,0,0.004692870657891035,0,0,0,0,0.03754296526312828,0,0,0,-0.00938574131578207,0,0.05631444975733757,0.07039306312799454,0,0,-0.06100732088088989,0,0.07508593052625656,0,0,-0.05631444975733757,-0.09385741502046585,0,0,0.014078612439334393,0,0,0,0,0,0.03754296526312828,0,0,0,0,0.03754296526312828,0.05162157863378525,0,0,-0.0422358363866806,0,0.09385741502046585,0.0422358363866806,0,0,-0.01877148263156414,0,0,0,0,-0.01877148263156414,-0.028157224878668785,0,0.03754296526312828,0.023464353755116463,0,-0.05631444975733757,-0.004692870657891035,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-23 -->\nDie √úbertragungsrate errechnet sich\n                     aus der Systemfrequenz (985.25) KHz\n                     dividiert duch die Baudrate.\n                     Dieser Wert steht in LOW- und\n                     HIGH-Byte-Darstellung in den beiden\n                     Speicherzellen. Er wird vom Betriebssystem\n                     abgerufen.\n\n$029B        RIDBE   Zeiger f√ºr empfangenes Byte RS-232\n\nWenn man den Inhalt der Speicherzelle\n                     mit dem Wert in $00F7-$00F8 addiert,\n                     erh√§lt man die Adresse des zuletzt im\n                     Eingabepuffer eingegebenen Bytes.\n\n$029C        RIDBS   Zeiger auf Input von RS-232\n\nWenn man den Inhalt der Speicherzelle\n                     mit dem Wert in $00F7-$00F8 addiert,\n                     erh√§lt man die Adresse des ersten im\n                     Eingabepuffer eingegebenen Bytes.\n\n$029D        RODBS   Zeiger auf zu √úbertragendes Byte\n                     RS-232\n\nWenn man den Inhalt der Speicherzelle\n                     mit dem Wert in $00F9-$00FA addiert,\n                     erh√§lt man die Adresse des ersten im\n                     Ausgabepuffer eingegebenen Bytes.\n\n$029E        RODBE   Zeiger auf Ausgabe auf RS-232\n\nWenn man den Inhalt der Speicherzelle\n                     mit dem Wert in $00F9-$00FA addiert,\n                     erh√§lt man die Adresse des zuletzt im\n                     Ausgabepuffer eingegebenen Bytes.\n\n$029F-$02A0  IRQTMP  Speicher f√ºr IRQ w√§hrend Bandbetrieb","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-23"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","language":"asm","vector":[0,0.013429306447505951,0,-0.017905741930007935,-0.013429306447505951,0,0.017905741930007935,0.004476435482501984,0,-0.03581148386001587,-0.04028791934251785,0,0.07162296772003174,0.0805758386850357,0,-0.053717225790023804,-0.044764354825019836,0,0.017905741930007935,0.022382177412509918,0,0,-0.013429306447505951,0,0.03581148386001587,0.04924079030752182,0,-0.017905741930007935,-0.031335048377513885,0,0.03581148386001587,0.04924079030752182,0,0,0,0,0,0,0,-0.053717225790023804,-0.013429306447505951,0,0.017905741930007935,0.05819366127252579,0,-0.053717225790023804,-0.008952870965003967,0,0,0.044764354825019836,0,0,-0.008952870965003967,0,0.053717225790023804,0.008952870965003967,0,-0.053717225790023804,-0.03581148386001587,0,0.053717225790023804,0.008952870965003967,0,-0.07162296772003174,0,0,0.017905741930007935,0.022382177412509918,0,-0.07162296772003174,-0.008952870965003967,0,0.017905741930007935,0.008952870965003967,0,0,-0.026858612895011902,0,0.03581148386001587,0.008952870965003967,0,-0.10743445158004761,-0.008952870965003967,0,0,0.017905741930007935,0,-0.1611516773700714,-0.044764354825019836,0,0,0.017905741930007935,0,-0.03581148386001587,-0.008952870965003967,0,0.03581148386001587,0.008952870965003967,0,-0.03581148386001587,-0.013429306447505951,0,0.6087952256202698,0.013429306447505951,0,-0.03581148386001587,-0.03581148386001587,0,0.03581148386001587,0.044764354825019836,0,0,-0.03581148386001587,0,0.053717225790023804,0.008952870965003967,0,-0.017905741930007935,-0.004476435482501984,0,0.017905741930007935,0.017905741930007935,0,-0.017905741930007935,-0.013429306447505951,0,0.21486890316009521,0.053717225790023804,0,-0.053717225790023804,-0.017905741930007935,0,0.03581148386001587,0.004476435482501984,0,-0.017905741930007935,-0.031335048377513885,0,0.017905741930007935,0.031335048377513885,0,-0.017905741930007935,-0.04028791934251785,0,0.03581148386001587,0.008952870965003967,0,-0.03581148386001587,0,0,0.10743445158004761,0.026858612895011902,0,-0.08952870965003967,-0.026858612895011902,0,0.017905741930007935,0.03581148386001587,0,-0.03581148386001587,-0.03581148386001587,0,0,0.013429306447505951,0,0,-0.03581148386001587,0,0.03581148386001587,0.013429306447505951,0,0,-0.017905741930007935,0,0.053717225790023804,0.022382177412509918,0,-0.017905741930007935,-0.053717225790023804,0,0.017905741930007935,0,0,-0.12534019351005554,-0.0805758386850357,0,0.03581148386001587,0,0,-0.03581148386001587,-0.022382177412509918,0,0.053717225790023804,0.022382177412509918,0,-0.017905741930007935,-0.022382177412509918,0,0.017905741930007935,0.31335046887397766,0,-0.017905741930007935,-0.04028791934251785,0,0.12534019351005554,0.026858612895011902,0,0,-0.004476435482501984,0,0,0.026858612895011902,0,-0.053717225790023804,-0.013429306447505951,0,0.1611516773700714,0.013429306447505951,0,-0.03581148386001587,-0.017905741930007935,0,0.14324593544006348,0.12534019351005554,0,-0.03581148386001587,-0.04028791934251785,0,0,0.022382177412509918,0,0,-0.008952870965003967,0,0,0.017905741930007935,0,0,-0.013429306447505951,0,0.08952870965003967,0.026858612895011902,0,-0.03581148386001587,-0.017905741930007935,0,0.03581148386001587,0.053717225790023804,0,-0.07162296772003174,-0.05819366127252579,0,0,0.013429306447505951,0,0,-0.031335048377513885,0,0,0,0,0,0,0,0,0.031335048377513885,0,0,-0.013429306447505951,0,0.03581148386001587,0.04028791934251785,0,-0.017905741930007935,-0.026858612895011902,0,0.017905741930007935,0.013429306447505951,0,-0.07162296772003174,-0.0805758386850357,0,0.03581148386001587,0.022382177412509918,0,-0.03581148386001587,-0.017905741930007935,0,0,0.03581148386001587,0,-0.017905741930007935,-0.03581148386001587,0,0,0.008952870965003967,0,-0.017905741930007935,-0.04924079030752182,0,0.14324593544006348,0.06267009675502777,0,-0.07162296772003174,-0.008952870965003967,0,0.017905741930007935,0.008952870965003967,0,-0.017905741930007935,-0.03581148386001587,0,0.08952870965003967,0.23277464509010315,0,-0.053717225790023804,-0.026858612895011902,0,0.03581148386001587,0.0805758386850357,0,0,-0.017905741930007935,0,0,0.013429306447505951,0,0,-0.004476435482501984,0,0.03581148386001587,0.004476435482501984,0,0,-0.004476435482501984,0,0.017905741930007935,0.09848158061504364,0,0,-0.031335048377513885,0,0.017905741930007935,0.026858612895011902,0,-0.07162296772003174,-0.04028791934251785,0,0.017905741930007935,0.004476435482501984,0,0,-0.004476435482501984,0,0,0.008952870965003967,0,0,-0.008952870965003967,0,0,0.026858612895011902,0,-0.017905741930007935,-0.022382177412509918,0,0.017905741930007935,0.022382177412509918,0,-0.017905741930007935,-0.017905741930007935,0,0.03581148386001587,0.008952870965003967,0,-0.08952870965003967,-0.03581148386001587,0,0.03581148386001587,0.026858612895011902,0,-0.017905741930007935,-0.017905741930007935,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-24 -->\nBei Kassettenoperationen wird hier in\n                     LOW- und HIGH-Byte-Darstellung der\n                     Vektor f√ºr die Interruptroutine\n                     gespeichert.\n\n$02A1        ENABL   CIA 2 NMI-Flag\n\nDiese Speicherzelle erh√§lt den Wert\n                     des Interruptsteuerregisters, das die\n                     RS-232 Schnittstelle steuert.\n\n$02A2        CASTON  CIA 1 Timer A\n\nBei Bandroutinen wird hier das\n                     HIGH-Byte von Timer A zwischengespeichert.\n\n$02A3        KIKA26  CIA 1 Interruptflag\n\nBei Bandroutinen wird in dieser\n                     Speicherzelle festgelegt, welche IRQs\n                     freigegeben sind und welche nicht.\n\n$02A4        STUPID  CIA 1 Flag f√ºr Timer A\n\nHier wird bei Bandroutinen angegeben,\n                     ob Timer A l√§uft oder nicht. Wenn hier\n                     eine $00 steht, ist der Timer\n                     freigegeben, andernfalls ist er\n                     gesperrt.\n\n$02A5        LINTMP  Bildschirmzeile\n\n$02A6        PALNTS  Flag f√ºr PAL- (1) o. NTSC-Version (0)\n\nHier steht ein Wert, der angibt, ob es\n                     sich um eine PAL- oder eine NTSC-\n                     Version handelt.\n\n$0300-$0301  IERROR  $E38B Vektor f√ºr BASIC-Warmstart\n\n$0302-$0303  IMAIN   $A483 Vektor f√ºr Eingabe einer Zeile\n\n$0304-$0305  ICRNCH  $A57C Vektor f√ºr Umwandlung in Interpretercode\n\n$0306-$0307  IQPLOP  $A71A Vektor f√ºr Umwandlung in Klartext (LIST)\n\n$0308-$0309  IGONE   $A7E4 Vektor f√ºr BASIC-Befehlsadresse\n                           holen","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64intern.txt#0011-INPFLG-00-INPUT-40-GET-98-READ-24"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_64map.txt","language":"asm","vector":[0,0,0,-0.04884955286979675,-0.07327432930469513,0,0,0.012212388217449188,0,0,0,0,0.0976991057395935,0,0,-0.04884955286979675,0,0,0.04884955286979675,0,0,0,-0.024424776434898376,0,0,0.012212388217449188,0,0,0,0,0,0.15876105427742004,0,0,0,0,0,0.012212388217449188,0,0,-0.012212388217449188,0,0,0,0,-0.14654865860939026,-0.024424776434898376,0,0,0.04884955286979675,0,0,0,0,0,0.024424776434898376,0,0,-0.04884955286979675,0,0,0.024424776434898376,0,-0.04884955286979675,0,0,0.0976991057395935,0.012212388217449188,0,0,-0.024424776434898376,0,0,0,0,0,-0.012212388217449188,0,0,0.04884955286979675,0,0,-0.024424776434898376,0,0.04884955286979675,0.036637164652347565,0,-0.04884955286979675,0,0,0,0.012212388217449188,0,-0.04884955286979675,-0.036637164652347565,0,0,0.012212388217449188,0,0,-0.024424776434898376,0,0.2930973172187805,0.024424776434898376,0,-0.0976991057395935,-0.012212388217449188,0,0.04884955286979675,0.04884955286979675,0,0,-0.024424776434898376,0,0.04884955286979675,0.024424776434898376,0,0,-0.036637164652347565,0,0,0,0,0,0,0,0.0976991057395935,0,0,0,0,0,0,0,0,0,-0.012212388217449188,0,0,0,0,0,-0.07327432930469513,0,0,0,0,0,0,0,0.24424776434898376,0,0,0,0,0,0,0,0,0,-0.024424776434898376,0,0,0.06106194108724594,0,0,0,0,0.04884955286979675,0.012212388217449188,0,0,-0.024424776434898376,0,0,0.012212388217449188,0,0,0,0,0.04884955286979675,0.024424776434898376,0,0,-0.036637164652347565,0,0,0,0,0,-0.024424776434898376,0,0,0.024424776434898376,0,0,-0.012212388217449188,0,0.04884955286979675,0.15876105427742004,0,0,-0.04884955286979675,0,0.6350442171096802,0.024424776434898376,0,0,-0.012212388217449188,0,0.04884955286979675,0.024424776434898376,0,-0.04884955286979675,-0.012212388217449188,0,0,0,0,-0.0976991057395935,0,0,0.0976991057395935,0.07327432930469513,0,0,-0.012212388217449188,0,0,0.012212388217449188,0,0,0,0,0,0,0,0,0,0,0.04884955286979675,0,0,0,0,0,0,0.12212388217449188,0,-0.04884955286979675,0,0,0,0,0,0,-0.036637164652347565,0,0.04884955286979675,0,0,0,0,0,0.04884955286979675,0.024424776434898376,0,-0.04884955286979675,0,0,0.04884955286979675,0,0,0,-0.012212388217449188,0,0.0976991057395935,0.04884955286979675,0,-0.04884955286979675,0,0,0,0,0,0,0,0,0,0,0,-0.14654865860939026,0,0,0,0.036637164652347565,0,0,-0.012212388217449188,0,0,0.3175221085548401,0,0,-0.012212388217449188,0,0,0.024424776434898376,0,-0.04884955286979675,-0.024424776434898376,0,0,0.07327432930469513,0,0,-0.07327432930469513,0,0,0.06106194108724594,0,0,0,0,0,0.012212388217449188,0,0,0,0,0,0,0,0,0,0,0.04884955286979675,0.04884955286979675,0,0,0,0,0.04884955286979675,0,0,-0.0976991057395935,-0.024424776434898376,0,0.04884955286979675,0,0,0,0,0,0,0.024424776434898376,0,-0.04884955286979675,0,0,0,0.08548671752214432,0,0,-0.024424776434898376,0,0.0976991057395935,0.024424776434898376,0,-0.04884955286979675,0,0,0.04884955286979675,0.04884955286979675,0,0,-0.024424776434898376,0,0,0.012212388217449188,0,-0.04884955286979675,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_64map.txt#Page-1-3 -->\n,0073  INC $7A\n                         ,0075  BNE $0079\n                         ,0077  INC $7B\n                         ,0079  LDA $0801\n                         ,007C  CMP #$3A\n                         ,007E  BCS $008A\n                         ,0080  CMP #$20\n                         ,0082  BEQ $0073\n                         ,0084  SEC\n                         ,0085  SBC #$30\n                         ,0087  SEC\n                         ,0088  SBC #$D0\n                         ,008A  RTS","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64map.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_64map.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_64map.txt#Page-1-3"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","language":"asm","vector":[0,0.012341917492449284,0,-0.049367669969797134,-0.024683834984898567,0,0,0.024683834984898567,0,0,0,0,0.049367669969797134,0,0,0,-0.024683834984898567,0,0.049367669969797134,0,0,0,-0.049367669969797134,0,0,0.024683834984898567,0,0,0,0,0,0.024683834984898567,0,0,-0.012341917492449284,0,0.049367669969797134,0,0,0,-0.037025753408670425,0,0.049367669969797134,0,0,0,-0.037025753408670425,0,0.049367669969797134,0,0,0,-0.024683834984898567,0,0.09873533993959427,0.049367669969797134,0,0,-0.037025753408670425,0,0,0,0,0,0,0,0.049367669969797134,0.06170958653092384,0,0,-0.037025753408670425,0,0.049367669969797134,0.024683834984898567,0,0,-0.012341917492449284,0,0,0.037025753408670425,0,0,-0.012341917492449284,0,0.049367669969797134,0.012341917492449284,0,-0.1481030136346817,-0.07405150681734085,0,0,0,0,-0.049367669969797134,-0.024683834984898567,0,0.049367669969797134,0,0,0,-0.024683834984898567,0,0.4443090260028839,0,0,-0.049367669969797134,-0.024683834984898567,0,0.049367669969797134,0.049367669969797134,0,0,0,0,0.049367669969797134,0.024683834984898567,0,-0.049367669969797134,0,0,0,0,0,-0.09873533993959427,0,0,0.3949413597583771,0,0,-0.049367669969797134,0,0,0,0.024683834984898567,0,-0.049367669969797134,-0.024683834984898567,0,0,0.024683834984898567,0,0,0,0,0.049367669969797134,0.024683834984898567,0,0,0,0,0.24683834612369537,0.049367669969797134,0,0,-0.012341917492449284,0,0,0,0,0,-0.012341917492449284,0,0.09873533993959427,0.024683834984898567,0,0,-0.012341917492449284,0,0,0.049367669969797134,0,0,-0.012341917492449284,0,0.049367669969797134,0,0,-0.09873533993959427,0,0,0.09873533993959427,0.024683834984898567,0,0,-0.08639342337846756,0,0,0.012341917492449284,0,-0.09873533993959427,-0.024683834984898567,0,0,0.037025753408670425,0,0,0,0,0.09873533993959427,0.22215451300144196,0,0,-0.06170958653092384,0,0.09873533993959427,0.024683834984898567,0,-0.049367669969797134,-0.012341917492449284,0,0,0.024683834984898567,0,-0.049367669969797134,-0.037025753408670425,0,0,0,0,-0.049367669969797134,-0.049367669969797134,0,0,0.20981259644031525,0,0,-0.024683834984898567,0,0,0.012341917492449284,0,-0.049367669969797134,-0.024683834984898567,0,0,0,0,0,0,0,0.24683834612369537,0.024683834984898567,0,-0.049367669969797134,0,0,0,0.135761097073555,0,-0.049367669969797134,0,0,0.049367669969797134,0.012341917492449284,0,-0.049367669969797134,0,0,0.049367669969797134,0.06170958653092384,0,0,0,0,0,0.024683834984898567,0,0,0,0,0,0.024683834984898567,0,0,-0.049367669969797134,0,0,0.06170958653092384,0,-0.09873533993959427,0,0,0.09873533993959427,0.012341917492449284,0,0,-0.049367669969797134,0,0,0,0,0,0,0,0,0.06170958653092384,0,0,-0.037025753408670425,0,0,0.049367669969797134,0,0,-0.037025753408670425,0,0,0.012341917492449284,0,-0.09873533993959427,-0.024683834984898567,0,0,0.11107725650072098,0,0,-0.037025753408670425,0,0,0.012341917492449284,0,0,0,0,0,0.012341917492449284,0,-0.049367669969797134,-0.037025753408670425,0,0,0,0,-0.049367669969797134,-0.024683834984898567,0,0,0.22215451300144196,0,-0.049367669969797134,-0.037025753408670425,0,0.09873533993959427,0,0,-0.049367669969797134,-0.037025753408670425,0,0,0.024683834984898567,0,0,-0.024683834984898567,0,0,0.037025753408670425,0,-0.049367669969797134,0,0,0.049367669969797134,0.06170958653092384,0,0,0,0,0.049367669969797134,0,0,0,0,0,0,0.024683834984898567,0,-0.1481030136346817,-0.049367669969797134,0,0,0.049367669969797134,0,-0.049367669969797134,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#Page-1-2 -->\n$0005-$0006  ADRAY2  Store here the addr of the\n                     routine to convert [Y,A] to a floating\n                     point number in the FAC.\n\n$0007        CHARAC  A delimiting character.\n\n$0007        INTEGR  A one-byte integer from \"QINT\".\n\n$0008        ENDCHR  The other delimiting character.\n\n$0009        TRMPOS  Position of terminal carriage.\n\n$000B        COUNT   A general counter.","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_src.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#Page-1-2"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","language":"asm","vector":[0.05385282635688782,0.013463206589221954,0,0,0,0,0,0.013463206589221954,0,0,0,0,0.05385282635688782,0.04038961976766586,0,0,-0.04038961976766586,0,0.05385282635688782,0.013463206589221954,0,0,-0.02692641317844391,0,0,0.02692641317844391,0,0,0,0,0,0,0,0,0,0,0,0.05385282635688782,0,-0.05385282635688782,0,0,0,0,0,0,-0.013463206589221954,0,0,0,0,-0.05385282635688782,0,0,0,0,0,-0.05385282635688782,-0.04038961976766586,0,0,0.02692641317844391,0,0,-0.02692641317844391,0,0,0,0,-0.05385282635688782,0,0,0,0.02692641317844391,0,0,-0.02692641317844391,0,0,0.02692641317844391,0,-0.05385282635688782,-0.013463206589221954,0,0,0.02692641317844391,0,-0.05385282635688782,0,0,0,0,0,-0.10770565271377563,-0.05385282635688782,0,0,0.02692641317844391,0,0,0,0,0.5385282635688782,0,0,-0.10770565271377563,0,0,0.10770565271377563,0.02692641317844391,0,-0.05385282635688782,0,0,0.16155847907066345,0.02692641317844391,0,0,0,0,0,0,0,0,0,0,0.3769697844982147,0.013463206589221954,0,0,0,0,0,0,0,0,-0.04038961976766586,0,0,0,0,0,0,0,0.05385282635688782,0,0,0,-0.02692641317844391,0,0.2692641317844391,0.02692641317844391,0,-0.10770565271377563,-0.02692641317844391,0,0,0,0,0,0,0,0,0,0,0,-0.02692641317844391,0,0,0,0,0,0,0,0.05385282635688782,0.013463206589221954,0,0,-0.02692641317844391,0,0.05385282635688782,0,0,0,-0.02692641317844391,0,0.05385282635688782,0.013463206589221954,0,-0.16155847907066345,-0.06731603294610977,0,0.05385282635688782,0.013463206589221954,0,0,0,0,0.10770565271377563,0.28272733092308044,0,0,-0.05385282635688782,0,0,0.05385282635688782,0,0,-0.05385282635688782,0,0,0.09424244612455368,0,0,0,0,0,0,0,-0.05385282635688782,0,0,0,0.20194809138774872,0,0,0,0,0,0.013463206589221954,0,-0.16155847907066345,0,0,0,0,0,-0.10770565271377563,0,0,0,0.02692641317844391,0,0,0,0,0,0.13463206589221954,0,0,-0.06731603294610977,0,0,0,0,-0.05385282635688782,0,0,0,0,0,0,-0.013463206589221954,0,0,0,0,0,-0.013463206589221954,0,0,0.02692641317844391,0,0,0,0,0,0.02692641317844391,0,0,-0.013463206589221954,0,0,0.02692641317844391,0,0,-0.08077923953533173,0,0,0.02692641317844391,0,0,-0.013463206589221954,0,0,0.05385282635688782,0,0,-0.013463206589221954,0,0.05385282635688782,0,0,0,-0.02692641317844391,0,0,0,0,-0.05385282635688782,0,0,0,0.13463206589221954,0,0,-0.05385282635688782,0,0,0.02692641317844391,0,0,-0.013463206589221954,0,0.10770565271377563,0.04038961976766586,0,0,-0.08077923953533173,0,0,0,0,0,-0.05385282635688782,0,0,0.09424244612455368,0,0,0,0,0,0,0,0,0,0,0.05385282635688782,0,0,0,-0.02692641317844391,0,0,0.013463206589221954,0,0,0,0,0.05385282635688782,0.06731603294610977,0,-0.05385282635688782,-0.02692641317844391,0,0.05385282635688782,0,0,0,0,0,0.05385282635688782,0,0,0,0,0,0,0,0,-0.10770565271377563,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#000C-DIMFLG-2 -->\n$0016        TEMPPT  Pointer at first free temp descriptor.\n\nInitialized to point to TEMPST.\n\n$0017-$0018  LASTPT  Pointer to last-used string temporary.\n\n$0019-$0021  TEMPST  Storage for NUMTMP temp descriptors.\n\n$0022-$0025  INDEX   Indexes.","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_src.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#000C-DIMFLG-2"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","language":"asm","vector":[0.028575802221894264,0.021431852132081985,0,-0.028575802221894264,-0.0500076562166214,0,0.05715160444378853,0.014287901110947132,0,0,-0.021431852132081985,0,0.05715160444378853,0.028575802221894264,0,-0.028575802221894264,-0.028575802221894264,0,0.05715160444378853,0.03571975231170654,0,-0.08572740852832794,-0.021431852132081985,0,0.028575802221894264,0.007143950555473566,0,-0.05715160444378853,0,0,0.028575802221894264,0.014287901110947132,0,0,-0.014287901110947132,0,0,0,0,-0.05715160444378853,-0.014287901110947132,0,0.17145481705665588,0.04286370426416397,0,0,-0.014287901110947132,0,0.05715160444378853,0.007143950555473566,0,-0.028575802221894264,-0.028575802221894264,0,0.028575802221894264,0.014287901110947132,0,-0.2000306248664856,-0.04286370426416397,0,0.028575802221894264,0,0,-0.028575802221894264,-0.03571975231170654,0,0,0.014287901110947132,0,-0.05715160444378853,-0.021431852132081985,0,0,0.028575802221894264,0,0,-0.03571975231170654,0,0.028575802221894264,0.028575802221894264,0,-0.08572740852832794,0,0,0.05715160444378853,0,0,-0.05715160444378853,-0.021431852132081985,0,0,0.014287901110947132,0,-0.05715160444378853,-0.028575802221894264,0,0,0.028575802221894264,0,0,-0.014287901110947132,0,0.34290963411331177,0.04286370426416397,0,-0.028575802221894264,-0.05715160444378853,0,0.08572740852832794,0.028575802221894264,0,-0.028575802221894264,-0.021431852132081985,0,0.028575802221894264,0.028575802221894264,0,0,-0.04286370426416397,0,0,0.014287901110947132,0,0,-0.03571975231170654,0,0.4572128355503082,0.028575802221894264,0,-0.08572740852832794,0,0,0,0.014287901110947132,0,0,-0.03571975231170654,0,0,0.08572740852832794,0,-0.028575802221894264,0,0,0,0.03571975231170654,0,-0.028575802221894264,-0.014287901110947132,0,0.14287900924682617,0.014287901110947132,0,0,-0.10715925693511963,0,0.028575802221894264,0.03571975231170654,0,0,-0.014287901110947132,0,0,0,0,0,-0.03571975231170654,0,0,0.007143950555473566,0,-0.028575802221894264,0,0,0.08572740852832794,0.014287901110947132,0,-0.2000306248664856,-0.04286370426416397,0,0.05715160444378853,0.028575802221894264,0,-0.028575802221894264,-0.03571975231170654,0,0,0.014287901110947132,0,-0.11430320888757706,-0.028575802221894264,0,0.028575802221894264,0.014287901110947132,0,-0.028575802221894264,0,0,0.028575802221894264,0.17145481705665588,0,0,-0.021431852132081985,0,0,0.0500076562166214,0,-0.05715160444378853,-0.021431852132081985,0,0,0.021431852132081985,0,0,-0.007143950555473566,0,0,0.014287901110947132,0,-0.05715160444378853,0,0,0.028575802221894264,0.24289432168006897,0,-0.05715160444378853,-0.0500076562166214,0,0,0.014287901110947132,0,-0.17145481705665588,-0.021431852132081985,0,0,0.007143950555473566,0,-0.14287900924682617,-0.028575802221894264,0,0.05715160444378853,0.007143950555473566,0,-0.028575802221894264,-0.014287901110947132,0,0,0.07143950462341309,0,-0.14287900924682617,-0.014287901110947132,0,0,0.05715160444378853,0,0,0,0,0,0.014287901110947132,0,-0.028575802221894264,-0.007143950555473566,0,0,0.007143950555473566,0,-0.05715160444378853,-0.06429555267095566,0,0.05715160444378853,0.0500076562166214,0,0,-0.10715925693511963,0,0.05715160444378853,0.028575802221894264,0,-0.2286064177751541,-0.028575802221894264,0,0,0,0,-0.028575802221894264,-0.05715160444378853,0,0,0.021431852132081985,0,0,-0.03571975231170654,0,0,0.028575802221894264,0,-0.028575802221894264,-0.014287901110947132,0,0.05715160444378853,0,0,0,-0.04286370426416397,0,0.05715160444378853,0,0,-0.028575802221894264,0,0,0,0.08572740852832794,0,0,-0.03571975231170654,0,0.028575802221894264,0.03571975231170654,0,0,-0.03571975231170654,0,0,0.007143950555473566,0,-0.028575802221894264,-0.08572740852832794,0,0.08572740852832794,0,0,0,-0.07143950462341309,0,0,0.14287900924682617,0,-0.028575802221894264,-0.03571975231170654,0,0.028575802221894264,0,0,0,-0.07143950462341309,0,0,0,0,0,-0.007143950555473566,0,0,0,0,-0.028575802221894264,-0.021431852132081985,0,0.05715160444378853,0.03571975231170654,0,0,-0.028575802221894264,0,0.05715160444378853,0.03571975231170654,0,0,0,0,0,0.028575802221894264,0,-0.028575802221894264,-0.11430320888757706,0,0.028575802221894264,0,0,-0.028575802221894264,-0.021431852132081985,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#0029-RESLO-2 -->\n$0047-$0048  VARPNT  Pointer to variable in memory.\n\n$0047        FDECPT  Pointer into power of tens of \"FOUT\".\n\n$0049-$004A  FORPNT  A variable's pointer for \"FOR\" loops\n                     and \"LET\" statements.\n\n$0049        LSTPNT  Pntr to list string.\n\n$0049        ANDMSK  The mask used by WAIT for ANDing.\n\n$004A        EORMSK  The mask for EORing in wait.\n\n$004B-$004C  OPPTR   Pointer to current op's entry in \"OPTAB\".\n\n$004B        VARTXT  Pointer into list of variables.\n\n$004D        OPMASK  Mask created by current operator.\n\n$004E-$0052  TEMPF3  A third FAC temporary (4 bytes).\n\n$004E-$004F  DEFPNT  Pointer used in function definition.\n\n$004E        GRBPNT  Another used in garbage collection.\n\n$0050-$0052  DSCPNT  Pointer to a string descriptor.\n\n$0053        FOUR6   Variable constant used by garb collect.","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_src.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#0029-RESLO-2"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","language":"asm","vector":[0,0,0,0,-0.0714285746216774,0,0,0.040816325694322586,0,-0.040816325694322586,-0.020408162847161293,0,0.08163265138864517,0.030612245202064514,0,0,-0.010204081423580647,0,0.040816325694322586,0.030612245202064514,0,0,-0.0714285746216774,0,0,0.010204081423580647,0,0,-0.051020409911870956,0,0,0,0,0,-0.010204081423580647,0,0,0,0,0,0,0,0.08163265138864517,0,0,0,-0.030612245202064514,0,0.040816325694322586,0,0,-0.040816325694322586,-0.020408162847161293,0,0.040816325694322586,0,0,-0.08163265138864517,-0.020408162847161293,0,0,0.040816325694322586,0,0,0,0,0.040816325694322586,0.020408162847161293,0,-0.040816325694322586,-0.06122449040412903,0,0,0,0,0,-0.06122449040412903,0,0.08163265138864517,0.020408162847161293,0,0,-0.010204081423580647,0,0.040816325694322586,0,0,-0.040816325694322586,0,0,0,0,0,-0.040816325694322586,-0.020408162847161293,0,0,0,0,-0.040816325694322586,-0.010204081423580647,0,0.44897958636283875,0,0,-0.08163265138864517,-0.020408162847161293,0,0.040816325694322586,0.040816325694322586,0,0,0,0,0.040816325694322586,0.020408162847161293,0,0,-0.010204081423580647,0,0,0,0,0,0,0,0.44897958636283875,0.010204081423580647,0,0,0,0,0,0,0,0,-0.030612245202064514,0,0,0.040816325694322586,0,0,-0.020408162847161293,0,0.040816325694322586,0.020408162847161293,0,-0.040816325694322586,-0.020408162847161293,0,0.2448979616165161,0.020408162847161293,0,-0.040816325694322586,-0.040816325694322586,0,0.08163265138864517,0,0,0,-0.010204081423580647,0,0.040816325694322586,0.020408162847161293,0,0,-0.030612245202064514,0,0,0,0,0,-0.010204081423580647,0,0,0.051020409911870956,0,-0.20408163964748383,0,0,0.16326530277729034,0.020408162847161293,0,-0.08163265138864517,-0.051020409911870956,0,0.040816325694322586,0,0,-0.040816325694322586,-0.030612245202064514,0,0.12244898080825806,0,0,-0.040816325694322586,-0.020408162847161293,0,0.040816325694322586,0.22448979318141937,0,-0.040816325694322586,-0.040816325694322586,0,0,0.020408162847161293,0,-0.040816325694322586,-0.010204081423580647,0,0,0.020408162847161293,0,0,0,0,0,0,0,-0.040816325694322586,-0.010204081423580647,0,0,0.2448979616165161,0,0,0,0,0,0.010204081423580647,0,0,0,0,0.08163265138864517,0,0,0,0,0,0.08163265138864517,0.020408162847161293,0,0,-0.020408162847161293,0,0,0.12244898080825806,0,-0.16326530277729034,-0.020408162847161293,0,0.08163265138864517,0.06122449040412903,0,-0.040816325694322586,0,0,0,0.030612245202064514,0,0,-0.010204081423580647,0,0,0.010204081423580647,0,0,-0.020408162847161293,0,0,0,0,-0.040816325694322586,-0.10204081982374191,0,0,0.09183673560619354,0,0,-0.051020409911870956,0,0,0.020408162847161293,0,0,-0.020408162847161293,0,0,0.08163265138864517,0,-0.040816325694322586,-0.020408162847161293,0,0,0.030612245202064514,0,0,-0.030612245202064514,0,0.040816325694322586,0,0,0,-0.030612245202064514,0,0,0,0,-0.12244898080825806,-0.010204081423580647,0,0,0.11224489659070969,0,-0.08163265138864517,-0.040816325694322586,0,0,0.010204081423580647,0,0,0,0,0,0.010204081423580647,0,0,0,0,0,0.040816325694322586,0,-0.040816325694322586,0,0,0,0.15306122601032257,0,-0.040816325694322586,0,0,0,0,0,-0.040816325694322586,-0.08163265138864517,0,0.040816325694322586,0.040816325694322586,0,0,-0.020408162847161293,0,0,0.010204081423580647,0,-0.12244898080825806,-0.010204081423580647,0,0,0.06122449040412903,0,-0.040816325694322586,-0.010204081423580647,0,0,0.020408162847161293,0,0,-0.020408162847161293,0,0,0.010204081423580647,0,0,0,0,0,0,0,-0.040816325694322586,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#005C-0060-TEMPF2 -->\n$005C-$0060  TEMPF2\n\n$005D        LOWDS   Location of last byte transferred into.\n\n$005F        LOWTR   Last thing to move in BLT.\n\n$0058        ARYPNT  A pointer used in array building.\n\n$005F        GRBTOP  A pointer used in garbage collection.\n\n$005D        DECCNT  Number of places before decimal point.\n\n$005E        TENEXP  Has a DPT been input?\n\n$005F        DPTFLG  Base ten exponent.\n\n$0060        EXPSGN  Sign of base ten exponent.\n\n$0061-$0066  FAC     The floating accumulator","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_src.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#005C-0060-TEMPF2"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","language":"asm","vector":[0,0.009331542067229748,0,0,-0.06532078981399536,0,0.03732616826891899,0.02799462527036667,0,0,-0.009331542067229748,0,0.03732616826891899,0,0,-0.03732616826891899,-0.06532078981399536,0,0.03732616826891899,0.046657707542181015,0,0,-0.046657707542181015,0,0,0.009331542067229748,0,-0.03732616826891899,-0.03732616826891899,0,0,0,0,-0.03732616826891899,-0.018663084134459496,0,0,0.018663084134459496,0,0,-0.03732616826891899,0,0.07465233653783798,0.05598925054073334,0,0,-0.11197850108146667,0,0.03732616826891899,0,0,-0.03732616826891899,-0.03732616826891899,0,0,0,0,-0.03732616826891899,-0.018663084134459496,0,0,0.05598925054073334,0,0,-0.009331542067229748,0,0.03732616826891899,0.02799462527036667,0,-0.03732616826891899,-0.018663084134459496,0,0,0.009331542067229748,0,0,0,0,0,0.046657707542181015,0,0,-0.018663084134459496,0,0,0,0,-0.14930467307567596,-0.018663084134459496,0,0,0.009331542067229748,0,-0.14930467307567596,-0.018663084134459496,0,0,0,0,0,0,0,0.29860934615135193,0.02799462527036667,0,-0.07465233653783798,-0.05598925054073334,0,0.03732616826891899,0.018663084134459496,0,0,-0.018663084134459496,0,0.03732616826891899,0.018663084134459496,0,0,-0.009331542067229748,0,0.07465233653783798,0,0,0,-0.018663084134459496,0,0.4479140043258667,0,0,-0.07465233653783798,-0.03732616826891899,0,0,0.018663084134459496,0,-0.03732616826891899,-0.018663084134459496,0,0,0.03732616826891899,0,-0.03732616826891899,-0.018663084134459496,0,0.07465233653783798,0.018663084134459496,0,0,-0.018663084134459496,0,0.22395700216293335,0.009331542067229748,0,-0.07465233653783798,-0.02799462527036667,0,0,0.02799462527036667,0,0,-0.02799462527036667,0,0,0.018663084134459496,0,0,-0.03732616826891899,0,0,0,0,0,-0.009331542067229748,0,0.03732616826891899,0.018663084134459496,0,-0.18663083016872406,0,0,0.11197850108146667,0,0,-0.03732616826891899,-0.0839838758111,0,0,0,0,-0.11197850108146667,-0.07465233653783798,0,0.03732616826891899,0.009331542067229748,0,-0.03732616826891899,-0.009331542067229748,0,0.03732616826891899,0.14930467307567596,0,0,-0.046657707542181015,0,0,0.018663084134459496,0,-0.07465233653783798,-0.009331542067229748,0,0,0.018663084134459496,0,-0.07465233653783798,0,0,0,0.046657707542181015,0,-0.22395700216293335,0,0,0,0.23328854143619537,0,0,-0.046657707542181015,0,0,0.009331542067229748,0,0,-0.018663084134459496,0,0.07465233653783798,0,0,-0.03732616826891899,-0.02799462527036667,0,0.11197850108146667,0.03732616826891899,0,0,-0.009331542067229748,0,0.03732616826891899,0.11197850108146667,0,0,-0.03732616826891899,0,0.11197850108146667,0.018663084134459496,0,0,0,0,0,0.009331542067229748,0,0,-0.009331542067229748,0,0.03732616826891899,0,0,0,-0.009331542067229748,0,0,0.018663084134459496,0,0,-0.09331541508436203,0,0.03732616826891899,0.06532078981399536,0,-0.22395700216293335,-0.02799462527036667,0,0,0,0,0,-0.05598925054073334,0,0,0.018663084134459496,0,-0.03732616826891899,-0.018663084134459496,0,0,0.018663084134459496,0,0,-0.03732616826891899,0,0,0,0,-0.07465233653783798,-0.07465233653783798,0,0.07465233653783798,0,0,-0.07465233653783798,-0.03732616826891899,0,0,0.07465233653783798,0,-0.07465233653783798,-0.13064157962799072,0,0,0.009331542067229748,0,0,0,0,0.03732616826891899,0.009331542067229748,0,-0.03732616826891899,0,0,0.11197850108146667,0.05598925054073334,0,-0.11197850108146667,-0.018663084134459496,0,0,0.1679677516222,0,-0.07465233653783798,-0.018663084134459496,0,0,0.018663084134459496,0,-0.03732616826891899,-0.009331542067229748,0,0.07465233653783798,0.05598925054073334,0,0,-0.009331542067229748,0,0,0.018663084134459496,0,-0.03732616826891899,0,0,0,0.07465233653783798,0,0,-0.018663084134459496,0,0.03732616826891899,0,0,-0.03732616826891899,0,0,0,0.018663084134459496,0,-0.03732616826891899,-0.11197850108146667,0,0,0,0,-0.03732616826891899,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#0061-FACEXP -->\n$0061        FACEXP\n\n$0061        DSCTMP  This is where temp descs are built.\n\n$0062        FACHO   Most significant byte of mantissa.\n\n$0063        FACMOH  One more.\n\n$0064        FACMO   Middle order of mantissa.\n\n$0064        INDICE  Indice is set up here by \"QINT\".\n\n$0065        FACLO   Least sig byte of mantissa.\n\n$0066        FACSGN  Sign of FAC (0 or -1) when unpacked.\n\n$0067        SGNFLG  Sign of FAC is preserved here by \"FIN\".\n\n$0067        DEGREE  A count used by polynomials.\n\n$0068        BITS    Something for \"SHIFTR\" to use.\n\n$0069-$006E          The floating argument (unpacked)","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_src.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#0061-FACEXP"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","language":"asm","vector":[0.12466228753328323,0.010388524271547794,0,0,-0.015582785941660404,0,0.06233114376664162,0.010388524271547794,0,-0.08310819417238235,-0.010388524271547794,0,0.04155409708619118,0.005194262135773897,0,-0.04155409708619118,-0.04155409708619118,0,0.04155409708619118,0.0259713102132082,0,-0.08310819417238235,-0.02077704854309559,0,0,0.06752540916204453,0,0,-0.010388524271547794,0,0.08310819417238235,0.010388524271547794,0,-0.06233114376664162,-0.02077704854309559,0,0,0,0,-0.04155409708619118,0,0,0.14543934166431427,0.0519426204264164,0,-0.02077704854309559,-0.0519426204264164,0,0.04155409708619118,0.010388524271547794,0,-0.02077704854309559,0,0,0.06233114376664162,0.005194262135773897,0,-0.04155409708619118,-0.07791393250226974,0,0.06233114376664162,0.03116557188332081,0,0,-0.0259713102132082,0,0.02077704854309559,0.02077704854309559,0,-0.02077704854309559,-0.010388524271547794,0,0.02077704854309559,0.0259713102132082,0,0,-0.010388524271547794,0,0.02077704854309559,0.03116557188332081,0,-0.06233114376664162,-0.04155409708619118,0,0.04155409708619118,0.005194262135773897,0,-0.06233114376664162,-0.06233114376664162,0,0,0,0,-0.02077704854309559,-0.03116557188332081,0,0,0.06752540916204453,0,-0.02077704854309559,-0.005194262135773897,0,0.311655730009079,0.03635983541607857,0,-0.04155409708619118,-0.09349671751260757,0,0.04155409708619118,0.0259713102132082,0,-0.02077704854309559,-0.02077704854309559,0,0.06233114376664162,0.0259713102132082,0,-0.02077704854309559,-0.04155409708619118,0,0.02077704854309559,0,0,0,0,0,0.3739868700504303,0.04155409708619118,0,-0.24932457506656647,-0.03116557188332081,0,0.08310819417238235,0.005194262135773897,0,0,-0.03116557188332081,0,0,0.07791393250226974,0,0,-0.015582785941660404,0,0,0.02077704854309559,0,-0.02077704854309559,-0.010388524271547794,0,0.1038852408528328,0.03116557188332081,0,-0.02077704854309559,-0.02077704854309559,0,0.04155409708619118,0.0519426204264164,0,0,-0.005194262135773897,0,0,0.010388524271547794,0,0,-0.010388524271547794,0,0.02077704854309559,0.010388524271547794,0,-0.1038852408528328,-0.010388524271547794,0,0,0.0259713102132082,0,-0.06233114376664162,-0.04155409708619118,0,0.04155409708619118,0.02077704854309559,0,-0.04155409708619118,-0.03635983541607857,0,0.02077704854309559,0.010388524271547794,0,-0.1662163883447647,-0.010388524271547794,0,0.06233114376664162,0.015582785941660404,0,0,-0.0259713102132082,0,0.22854752838611603,0.1558278650045395,0,0,-0.0519426204264164,0,0.04155409708619118,0.02077704854309559,0,-0.08310819417238235,-0.0259713102132082,0,0,0.06233114376664162,0,0,-0.010388524271547794,0,0.04155409708619118,0.0259713102132082,0,-0.1662163883447647,-0.02077704854309559,0,0.04155409708619118,0.19738195836544037,0,0,-0.13505081832408905,0,0.02077704854309559,0.0519426204264164,0,-0.22854752838611603,-0.02077704854309559,0,0,0,0,-0.02077704854309559,0,0,0.08310819417238235,0.02077704854309559,0,0,-0.0259713102132082,0,0.02077704854309559,0.0519426204264164,0,-0.04155409708619118,-0.02077704854309559,0,0,0.05713688209652901,0,-0.04155409708619118,-0.005194262135773897,0,0.02077704854309559,0.010388524271547794,0,0,-0.005194262135773897,0,0,0.0259713102132082,0,0,-0.06233114376664162,0,0.02077704854309559,0.015582785941660404,0,-0.02077704854309559,-0.03116557188332081,0,0.02077704854309559,0.0259713102132082,0,-0.2077704817056656,-0.0259713102132082,0,0.02077704854309559,0.015582785941660404,0,0,-0.08310819417238235,0,0.02077704854309559,0.03635983541607857,0,0,-0.015582785941660404,0,0,0.12466228753328323,0,0,-0.015582785941660404,0,0,0.02077704854309559,0,0,-0.04674835875630379,0,0.02077704854309559,0,0,-0.04155409708619118,-0.005194262135773897,0,0.02077704854309559,0.09869097918272018,0,-0.02077704854309559,-0.09349671751260757,0,0,0.03116557188332081,0,0,-0.005194262135773897,0,0,0.0259713102132082,0,0,-0.11946802586317062,0,0.08310819417238235,0.005194262135773897,0,-0.02077704854309559,-0.010388524271547794,0,0,0.13505081832408905,0,0,-0.06233114376664162,0,0,0.03116557188332081,0,-0.04155409708619118,-0.02077704854309559,0,0.06233114376664162,0,0,-0.04155409708619118,-0.02077704854309559,0,0,0.010388524271547794,0,-0.02077704854309559,-0.005194262135773897,0,0.04155409708619118,0.0259713102132082,0,0,-0.005194262135773897,0,0.06233114376664162,0.02077704854309559,0,-0.06233114376664162,-0.010388524271547794,0,0,0.010388524271547794,0,-0.12466228753328323,-0.1038852408528328,0,0,0.015582785941660404,0,-0.06233114376664162,-0.0259713102132082,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#006E-ARGSGN -->\n$006E        ARGSGN\n\n$006F        ARISGN  A sign reflecting the result.\n\n$006F-$0070  STRNG1  Pointer to a string or descriptor.\n\n$0070        FACOV   Overflow byte of the FAC.\n\n$0071-$0072  FBUFPT  Pointer into FBUFFR used by FOUT.\n\n$0071-$0072  BUFPTR  Pointer to buf used by \"CRUNCH\".\n\n$0071-$0072  STRNG2  Pointer to string or desc.\n\n$0071-$0072  POLYPT  Pointer into polynomial coefficients.\n\n$0071-$0072  CURTOL  Absolute linear index is formed here.\n\n$0073-$008A  CHRGET  RAM code.\n\nThis code gets changed throughout execution.\n                     It is made to be fast this way.\n                     Also, [X] and [Y] are not disturbed.\n                     \n                     \"CHRGET\" using [TXTPTR] as the current text pntr,\n                     fetches a new character into ACCA after incrementing [TXTPTR]\n                     and sets condition codes according to what's in ACCA.\n\n* not C = numeric (\"0\" thru \"9\")\n                     * Z = \":\" or end-of-line (a null)\n\n[ACCA] = new char.\n                     \n                     [TXTPTR]=[TXTPTR]+1\n\nThe following exists in ROM if ROM exists and is loaded\n                     down here by init. Otherwise it is just loaded into this\n                     RAM like all the rest of RAM is loaded.","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_src.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#006E-ARGSGN"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","language":"asm","vector":[0.06437602639198303,0.024141009896993637,0,-0.032188013195991516,-0.048282019793987274,0,0.22531607747077942,0.008047003298997879,0,-0.16094006597995758,-0.008047003298997879,0,0.06437602639198303,0.040235016494989395,0,-0.032188013195991516,-0.032188013195991516,0,0.1931280791759491,0.008047003298997879,0,0,-0.016094006597995758,0,0,0.032188013195991516,0,0,-0.07242302596569061,0,0,0.008047003298997879,0,0,-0.024141009896993637,0,0,0,0,0,-0.024141009896993637,0,0,0,0,-0.1931280791759491,-0.056329019367694855,0,0,0.032188013195991516,0,0,-0.016094006597995758,0,0.032188013195991516,0.008047003298997879,0,-0.06437602639198303,-0.008047003298997879,0,0.032188013195991516,0,0,0,-0.016094006597995758,0,0.032188013195991516,0.016094006597995758,0,-0.1931280791759491,-0.016094006597995758,0,0.09656403958797455,0.032188013195991516,0,-0.032188013195991516,-0.032188013195991516,0,0,0.008047003298997879,0,-0.06437602639198303,0,0,0.032188013195991516,0,0,-0.12875205278396606,-0.032188013195991516,0,0,0,0,-0.06437602639198303,-0.048282019793987274,0,0.09656403958797455,0.032188013195991516,0,-0.06437602639198303,-0.056329019367694855,0,0.4184441566467285,0.11265803873538971,0,-0.032188013195991516,-0.08851703256368637,0,0.032188013195991516,0.040235016494989395,0,0,-0.024141009896993637,0,0.032188013195991516,0.10461103916168213,0,0,-0.016094006597995758,0,0.032188013195991516,0,0,-0.032188013195991516,0,0,0.1931280791759491,0.008047003298997879,0,-0.09656403958797455,0,0,0,0,0,0,-0.008047003298997879,0,0.12875205278396606,0.008047003298997879,0,0,-0.11265803873538971,0,0,0,0,-0.032188013195991516,-0.008047003298997879,0,0.1931280791759491,0.016094006597995758,0,0,-0.032188013195991516,0,0.09656403958797455,0.016094006597995758,0,-0.032188013195991516,-0.016094006597995758,0,0.06437602639198303,0.032188013195991516,0,0,-0.10461103916168213,0,0,0.048282019793987274,0,-0.06437602639198303,-0.016094006597995758,0,0.032188013195991516,0,0,-0.06437602639198303,-0.032188013195991516,0,0.032188013195991516,0.024141009896993637,0,-0.032188013195991516,-0.07242302596569061,0,0.09656403958797455,0.016094006597995758,0,-0.12875205278396606,-0.048282019793987274,0,0.032188013195991516,0.048282019793987274,0,0,-0.032188013195991516,0,0.06437602639198303,0.20922207832336426,0,-0.16094006597995758,-0.024141009896993637,0,0.032188013195991516,0.016094006597995758,0,-0.032188013195991516,-0.016094006597995758,0,0,0.032188013195991516,0,-0.09656403958797455,-0.008047003298997879,0,0,0.07242302596569061,0,-0.09656403958797455,-0.056329019367694855,0,0,0.11265803873538971,0,0,-0.056329019367694855,0,0.032188013195991516,0.048282019793987274,0,-0.032188013195991516,0,0,0,0.06437602639198303,0,-0.06437602639198303,0,0,0,0,0,0,-0.016094006597995758,0,0,0.09656403958797455,0,0,0,0,0.032188013195991516,0.048282019793987274,0,0,-0.06437602639198303,0,0,0.032188013195991516,0,-0.06437602639198303,0,0,0,0.008047003298997879,0,-0.06437602639198303,-0.048282019793987274,0,0,0.024141009896993637,0,-0.16094006597995758,-0.032188013195991516,0,0,0.024141009896993637,0,-0.032188013195991516,-0.06437602639198303,0,0.032188013195991516,0.07242302596569061,0,-0.032188013195991516,-0.07242302596569061,0,0.032188013195991516,0.016094006597995758,0,-0.06437602639198303,-0.016094006597995758,0,0,0.040235016494989395,0,0,-0.11265803873538971,0,0.032188013195991516,0.016094006597995758,0,0,-0.032188013195991516,0,0,0.024141009896993637,0,-0.032188013195991516,-0.06437602639198303,0,0.032188013195991516,0.10461103916168213,0,-0.06437602639198303,-0.056329019367694855,0,0,0.008047003298997879,0,-0.032188013195991516,0,0,0,0.024141009896993637,0,0,-0.016094006597995758,0,0,0.008047003298997879,0,-0.06437602639198303,-0.040235016494989395,0,0.06437602639198303,0.048282019793987274,0,-0.032188013195991516,-0.024141009896993637,0,0,0,0,0,0,0,0,0.048282019793987274,0,0,0,0,0.032188013195991516,0,0,-0.032188013195991516,-0.040235016494989395,0,0.06437602639198303,0.048282019793987274,0,-0.06437602639198303,-0.032188013195991516,0,0,0.024141009896993637,0,0,-0.08851703256368637,0,0,0.016094006597995758,0,-0.032188013195991516,-0.016094006597995758,0,0,0.016094006597995758,0,-0.06437602639198303,-0.032188013195991516,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#00AF-EAH -->\n$00AF        EAH\n\n$00B0        CMP0    Cassette: software servo (+/- adjust to time calcs)\n\n$00B1        TEMP    Cassette: used to hold dipole time during type calculations\n\n$00B2-$00B3  TAPE1   Address of tape buffer #1y.\n\n$00B4        BITTS   RS-232 trns bit count\n\n$00B4        SNSW1   Cassette: flags if we have byte SYNC (a longlong)\n\n$00B5        NXTBIT  RS-232 trns next bit to be sent\n\n$00B5        DIFF    Cassette: used to preserve SYNO (outside of bit routines)\n\n$00B6        RODATA  RS-232 trns byte buffer\n\n$00B6        PRP     Cassette: has combined error values from bit routines\n\n$00B7        FNLEN   Length current file n str\n\n$00B8        LA      Current file logical addr\n\n$00B9        SA      Current file 2nd addr\n\n$00BA        FA      Current file primary addr\n\n$00BB-$00BC  FNADR   Addr current file name str\n\n$00BD        ROPRTY  RS-232 trns parity buffer","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_src.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#00AF-EAH"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","language":"asm","vector":[0.06816971302032471,0,0,0,0,0,0,0.034084856510162354,0,0,-0.034084856510162354,0,0.06816971302032471,0,0,0,-0.017042428255081177,0,0.20450913906097412,0.034084856510162354,0,0,-0.034084856510162354,0,0,0.017042428255081177,0,0,-0.08521214127540588,0,0,0,0,-0.06816971302032471,-0.017042428255081177,0,0,0.017042428255081177,0,-0.06816971302032471,0,0,0,0,0,0,-0.11929700523614883,0,0,0.06816971302032471,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.06816971302032471,0,0,-0.06816971302032471,0,0,0,0,0,0,0,0,0,0,0,-0.20450913906097412,0,0,0,0,0,-0.13633942604064941,-0.017042428255081177,0,0.06816971302032471,0,0,-0.13633942604064941,-0.034084856510162354,0,0.06816971302032471,0.034084856510162354,0,0,-0.017042428255081177,0,0.34084856510162354,0,0,-0.06816971302032471,0,0,0.06816971302032471,0.034084856510162354,0,0,0,0,0.06816971302032471,0.10225456953048706,0,0,0,0,0,0,0,0,0,0,0.13633942604064941,0,0,-0.06816971302032471,-0.034084856510162354,0,0,0.017042428255081177,0,0,-0.05112728476524353,0,0,0,0,0,-0.017042428255081177,0,0,0,0,0,0,0,0.47718802094459534,0,0,0,0,0,0,0,0,0,-0.05112728476524353,0,0.06816971302032471,0.06816971302032471,0,0,-0.034084856510162354,0,0.06816971302032471,0,0,0,0,0,0,0,0,0,-0.10225456953048706,0,0.13633942604064941,0,0,-0.13633942604064941,-0.06816971302032471,0,0,0.034084856510162354,0,-0.06816971302032471,-0.06816971302032471,0,0,0.034084856510162354,0,0,0,0,0.06816971302032471,0.17042428255081177,0,-0.20450913906097412,-0.034084856510162354,0,0,0.034084856510162354,0,-0.06816971302032471,-0.017042428255081177,0,0.06816971302032471,0.05112728476524353,0,0,0,0,0,0,0,-0.06816971302032471,0,0,0,0.08521214127540588,0,0,-0.034084856510162354,0,0,0.05112728476524353,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.017042428255081177,0,0,0.23859401047229767,0,0,-0.017042428255081177,0,0,0,0,0,0,0,0,0.034084856510162354,0,-0.06816971302032471,0,0,0,0.034084856510162354,0,0,0,0,0,0,0,-0.06816971302032471,0,0,0,0.08521214127540588,0,0,-0.08521214127540588,0,0,0,0,0,-0.034084856510162354,0,0,0,0,0,-0.05112728476524353,0,0,0.034084856510162354,0,0,-0.13633942604064941,0,0,0.017042428255081177,0,0,-0.06816971302032471,0,0.06816971302032471,0.05112728476524353,0,-0.06816971302032471,0,0,0,0.08521214127540588,0,-0.06816971302032471,-0.05112728476524353,0,0,0.017042428255081177,0,0,0,0,0,0.017042428255081177,0,0,0,0,0,0,0,-0.20450913906097412,0,0,0.13633942604064941,0.034084856510162354,0,0,-0.017042428255081177,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.034084856510162354,0,0,0.11929700523614883,0,0,0,0,0,0,0,0,-0.034084856510162354,0,0,0.017042428255081177,0,0,0,0,0,0.017042428255081177,0,-0.06816971302032471,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#00BD-OCHAR -->\n$00BD        OCHAR\n\n$00BE        FSBLK   Cassette: indicate which block we're looking at (0 to exit)\n\n$00BF        MYCH    Cassette: holds input byte being built\n\n$00C0        CAS1    Cassette manual/controlled switch","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_src.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#00BD-OCHAR"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","language":"asm","vector":[0,0,0,0,0,0,0,0.03700532391667366,0,0,0,0,0.07401064783334732,0,0,-0.07401064783334732,-0.01850266195833683,0,0.07401064783334732,0,0,0,-0.03700532391667366,0,0,0.03700532391667366,0,0,0,0,0,0.07401064783334732,0,0,-0.03700532391667366,0,0,0,0,0,0,0,0.07401064783334732,0,0,0,-0.01850266195833683,0,0,0.03700532391667366,0,-0.07401064783334732,0,0,0,0,0,0,-0.05550798773765564,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.01850266195833683,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.07401064783334732,-0.01850266195833683,0,0,0,0,-0.07401064783334732,-0.07401064783334732,0,0,0,0,0,0,0,0.5920851826667786,0,0,-0.07401064783334732,0,0,0.07401064783334732,0.03700532391667366,0,0,-0.05550798773765564,0,0.07401064783334732,0.03700532391667366,0,-0.07401064783334732,0,0,0,0,0,-0.07401064783334732,0,0,0.14802129566669464,0,0,0,0,0,0.14802129566669464,0,0,0,-0.01850266195833683,0,0,0.03700532391667366,0,-0.07401064783334732,0,0,0,0.03700532391667366,0,0,-0.05550798773765564,0,0.370053231716156,0,0,0,0,0,0,0,0,-0.07401064783334732,0,0,0,0.01850266195833683,0,0,0,0,0,0,0,0,-0.01850266195833683,0,0,0,0,0,0,0,0.14802129566669464,0,0,0,-0.03700532391667366,0,0,0,0,-0.07401064783334732,-0.03700532391667366,0,0,0,0,0,0,0,0.14802129566669464,0.2960425913333893,0,0,-0.03700532391667366,0,0,0.03700532391667366,0,0,-0.03700532391667366,0,0,0.03700532391667366,0,0,-0.03700532391667366,0,0,0,0,-0.07401064783334732,-0.03700532391667366,0,0,0.092513307929039,0,0,-0.01850266195833683,0,0,0.092513307929039,0,-0.07401064783334732,0,0,0,0,0,0,-0.03700532391667366,0,0,0,0,0,0,0,0.07401064783334732,0.185026615858078,0,0,0,0,0,0.01850266195833683,0,0,-0.03700532391667366,0,0,0,0,-0.07401064783334732,-0.01850266195833683,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.07401064783334732,0,0,0,0,0,0,0,-0.07401064783334732,-0.03700532391667366,0,0,0,0,0,0,0,0,0.07401064783334732,0,0,-0.01850266195833683,0,0,0,0,0,-0.01850266195833683,0,0,0,0,-0.07401064783334732,0,0,0,0.14802129566669464,0,0,-0.05550798773765564,0,0.14802129566669464,0.01850266195833683,0,-0.07401064783334732,0,0,0,0.01850266195833683,0,0,-0.05550798773765564,0,0,0,0,0,-0.01850266195833683,0,0.07401064783334732,0.03700532391667366,0,0,0,0,0,0.07401064783334732,0,-0.07401064783334732,0,0,0,0,0,0,-0.01850266195833683,0,0,0,0,0,-0.03700532391667366,0,0,0.092513307929039,0,0,0,0,0,0,0,0,-0.01850266195833683,0,0,0,0,0,0,0,0,0,0,-0.14802129566669464,-0.03700532391667366,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#00C3-00C4-TMP2 -->\n$00C3-$00C4  TMP2\n\n$00C5        LSTX    Key scan index\n\n$00C6        NDX     Index to keyboard q\n\n$00C7        RVS     RVS field on flag","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_src.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#00C3-00C4-TMP2"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","language":"asm","vector":[0.09044312685728073,0.007536927238106728,0,-0.03014770895242691,-0.03014770895242691,0,0.09044312685728073,0.007536927238106728,0,-0.12059083580970764,0,0,0.09044312685728073,0.015073854476213455,0,-0.03014770895242691,-0.022610781714320183,0,0.03014770895242691,0,0,-0.03014770895242691,-0.022610781714320183,0,0,0.022610781714320183,0,0,-0.007536927238106728,0,0.06029541790485382,0.022610781714320183,0,-0.03014770895242691,-0.015073854476213455,0,0,0.007536927238106728,0,-0.03014770895242691,-0.052758488804101944,0,0.03014770895242691,0,0,0,-0.022610781714320183,0,0,0.015073854476213455,0,-0.03014770895242691,0,0,0,0.015073854476213455,0,-0.03014770895242691,-0.03768463432788849,0,0.03014770895242691,0.015073854476213455,0,-0.03014770895242691,-0.015073854476213455,0,0.09044312685728073,0.007536927238106728,0,0,-0.015073854476213455,0,0.03014770895242691,0,0,0,-0.03014770895242691,0,0.03014770895242691,0.022610781714320183,0,0,-0.007536927238106728,0,0.03014770895242691,0.007536927238106728,0,-0.21103395521640778,-0.09044312685728073,0,0,0.03768463432788849,0,-0.03014770895242691,-0.03014770895242691,0,0.09044312685728073,0.052758488804101944,0,-0.03014770895242691,-0.015073854476213455,0,0.5125110745429993,0.06029541790485382,0,-0.06029541790485382,-0.06029541790485382,0,0.03014770895242691,0.045221563428640366,0,0,-0.03014770895242691,0,0.06029541790485382,0.015073854476213455,0,0,-0.03014770895242691,0,0,0,0,0,0,0,0.2713293731212616,0.03768463432788849,0,-0.18088625371456146,-0.022610781714320183,0,0,0,0,0,-0.022610781714320183,0,0,0.022610781714320183,0,0,0,0,0,0.007536927238106728,0,0,-0.022610781714320183,0,0.3014770746231079,0,0,0,-0.03768463432788849,0,0.03014770895242691,0.015073854476213455,0,-0.15073853731155396,-0.022610781714320183,0,0.03014770895242691,0.052758488804101944,0,0,0,0,0.06029541790485382,0.022610781714320183,0,-0.12059083580970764,-0.015073854476213455,0,0.03014770895242691,0.022610781714320183,0,0,0,0,0.03014770895242691,0.015073854476213455,0,0,-0.11305391043424606,0,0,0,0,-0.03014770895242691,-0.022610781714320183,0,0,0.052758488804101944,0,-0.03014770895242691,-0.015073854476213455,0,0.03014770895242691,0.25625553727149963,0,-0.03014770895242691,-0.07536926865577698,0,0.03014770895242691,0.022610781714320183,0,0,-0.015073854476213455,0,0.03014770895242691,0.052758488804101944,0,-0.03014770895242691,-0.007536927238106728,0,0,0.022610781714320183,0,-0.03014770895242691,-0.03014770895242691,0,0,0.15827547013759613,0,0,-0.09798005223274231,0,0,0.007536927238106728,0,-0.03014770895242691,-0.007536927238106728,0,0,0,0,-0.06029541790485382,0,0,0.03014770895242691,0.015073854476213455,0,0,-0.007536927238106728,0,0,0.15073853731155396,0,-0.06029541790485382,-0.007536927238106728,0,0.03014770895242691,0.022610781714320183,0,-0.03014770895242691,-0.07536926865577698,0,0.03014770895242691,0.015073854476213455,0,0,-0.007536927238106728,0,0.09044312685728073,0.03014770895242691,0,0,-0.0678323432803154,0,0.03014770895242691,0.022610781714320183,0,0,-0.007536927238106728,0,0.06029541790485382,0.03768463432788849,0,0,0,0,0,0.007536927238106728,0,-0.06029541790485382,-0.015073854476213455,0,0,0.007536927238106728,0,-0.06029541790485382,-0.015073854476213455,0,0,0.022610781714320183,0,0,-0.0678323432803154,0,0.03014770895242691,0.015073854476213455,0,-0.03014770895242691,-0.007536927238106728,0,0,0.03768463432788849,0,-0.03014770895242691,-0.022610781714320183,0,0.03014770895242691,0.12812776863574982,0,0,-0.03014770895242691,0,0.03014770895242691,0.007536927238106728,0,-0.03014770895242691,0,0,0,0.015073854476213455,0,-0.09044312685728073,-0.015073854476213455,0,0,0,0,-0.03014770895242691,-0.03014770895242691,0,0.03014770895242691,0.08290620148181915,0,0,-0.045221563428640366,0,0.03014770895242691,0,0,-0.06029541790485382,-0.03014770895242691,0,0.03014770895242691,0.015073854476213455,0,0,-0.015073854476213455,0,0,0.015073854476213455,0,-0.03014770895242691,0,0,0,0.12059083580970764,0,-0.03014770895242691,0,0,0.03014770895242691,0.022610781714320183,0,0,-0.03768463432788849,0,0,0.03768463432788849,0,-0.18088625371456146,0,0,0.03014770895242691,0.015073854476213455,0,-0.06029541790485382,-0.06029541790485382,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#028C-DELAY-2 -->\n$0300-$0301  IERROR  indirect ERROR (output error in .X)\n$0302-$0303  IMAIN   indirect MAIN (system direct loop)\n$0304-$0305  ICRNCH  indirect CRUNCH (tokenization routine)\n$0306-$0307  IQPLOP  indirect LIST (char list)\n$0308-$0309  IGONE   indirect GONE (char dispatch)\n$030A-$030B  IEVAL   indirect EVAL (symbol evaluation)\n$030C        SAREG   .A reg\n$030D        SXREG   .X reg\n$030E        SYREG   .Y reg\n$030F        SPREG   .P reg\n$0310-$0312  USRPOK  user function dispatch\n\n#\n# KERNAL\n#\n\n$0314-$0315  CINV    IRQ RAM vector\n\n$0316-$0317  CBINV   BRK instr RAM vector\n\n$0318-$0319  NMINV   NMI RAM vector\n\n$031A-$032D          Indirects for code\n\nConforms to KERNAL spec 8/19/80","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_src.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_src.txt#028C-DELAY-2"},{"name":"github.com/mist64_c64ref/src/c64mem/c64mem_sta.txt","language":"asm","vector":[0.05703368037939072,0,0,-0.05703368037939072,-0.05228087306022644,0,0.07604490220546722,0.01425842009484768,0,-0.07604490220546722,-0.04277525842189789,0,0.03802245110273361,0.0047528063878417015,0,-0.019011225551366806,-0.033269647508859634,0,0.2851684093475342,0.05703368037939072,0,-0.019011225551366806,-0.047528065741062164,0,0,0.0047528063878417015,0,0,0,0,0.019011225551366806,0.05703368037939072,0,0,-0.0047528063878417015,0,0,0.0047528063878417015,0,0,-0.02851684018969536,0,0.03802245110273361,0,0,0,-0.04277525842189789,0,0.019011225551366806,0.0047528063878417015,0,-0.15208980441093445,-0.01425842009484768,0,0,0.01425842009484768,0,0,-0.0998089388012886,0,0,0.02851684018969536,0,-0.019011225551366806,-0.033269647508859634,0,0.019011225551366806,0.02851684018969536,0,0,-0.019011225551366806,0,0,0.009505612775683403,0,-0.019011225551366806,-0.019011225551366806,0,0.03802245110273361,0.06178648769855499,0,-0.13307859003543854,0,0,0,0.009505612775683403,0,-0.03802245110273361,-0.09505613148212433,0,0.03802245110273361,0,0,-0.019011225551366806,-0.033269647508859634,0,0.09505613148212433,0.033269647508859634,0,0,-0.047528065741062164,0,0.24714595079421997,0.03802245110273361,0,-0.05703368037939072,-0.05228087306022644,0,0.05703368037939072,0.023764032870531082,0,-0.019011225551366806,-0.019011225551366806,0,0.15208980441093445,0.1425842046737671,0,-0.019011225551366806,-0.009505612775683403,0,0.07604490220546722,0.0047528063878417015,0,-0.19011226296424866,-0.009505612775683403,0,0.24714595079421997,0.009505612775683403,0,-0.03802245110273361,-0.0047528063878417015,0,0,0.0047528063878417015,0,0,-0.023764032870531082,0,0.11406736075878143,0.019011225551366806,0,-0.03802245110273361,0,0,0,0.019011225551366806,0,0,-0.07604490220546722,0,0.20912349224090576,0,0,0,-0.009505612775683403,0,0.019011225551366806,0,0,-0.05703368037939072,-0.01425842009484768,0,0.019011225551366806,0.009505612775683403,0,-0.03802245110273361,-0.0047528063878417015,0,0,0,0,-0.17110103368759155,-0.05703368037939072,0,0,0.023764032870531082,0,-0.20912349224090576,-0.0807977095246315,0,0.019011225551366806,0.01425842009484768,0,-0.09505613148212433,-0.02851684018969536,0,0.019011225551366806,0.019011225551366806,0,-0.09505613148212433,-0.019011225551366806,0,0.19011226296424866,0.07604490220546722,0,0,0,0,0.019011225551366806,0.12357297539710999,0,0,-0.07129210233688354,0,0.15208980441093445,0.02851684018969536,0,-0.019011225551366806,-0.019011225551366806,0,0.019011225551366806,0.09030332416296005,0,-0.03802245110273361,-0.023764032870531082,0,0,0.05703368037939072,0,-0.13307859003543854,-0.11406736075878143,0,0.019011225551366806,0.13307859003543854,0,-0.019011225551366806,-0.023764032870531082,0,0.05703368037939072,0.07129210233688354,0,-0.019011225551366806,-0.0047528063878417015,0,0.07604490220546722,0.05703368037939072,0,-0.019011225551366806,-0.019011225551366806,0,0,0.0047528063878417015,0,0,0,0,0.03802245110273361,0.10456174612045288,0,0,0,0,0.019011225551366806,0.019011225551366806,0,0,-0.02851684018969536,0,0.03802245110273361,0.01425842009484768,0,-0.03802245110273361,-0.05703368037939072,0,0,0,0,-0.05703368037939072,-0.08555051684379578,0,0.019011225551366806,0,0,-0.07604490220546722,-0.10931455343961716,0,0,0.01425842009484768,0,-0.05703368037939072,-0.047528065741062164,0,0.019011225551366806,0.009505612775683403,0,-0.03802245110273361,-0.05228087306022644,0,0,0.10456174612045288,0,0,-0.033269647508859634,0,0.019011225551366806,0.009505612775683403,0,-0.03802245110273361,-0.009505612775683403,0,0,0.08555051684379578,0,-0.019011225551366806,-0.01425842009484768,0,0.019011225551366806,0.033269647508859634,0,-0.09505613148212433,-0.019011225551366806,0,0,0.06178648769855499,0,0,-0.0807977095246315,0,0.03802245110273361,0.023764032870531082,0,0,-0.01425842009484768,0,0,0.06653929501771927,0,-0.03802245110273361,-0.01425842009484768,0,0,0.05703368037939072,0,-0.019011225551366806,-0.05703368037939072,0,0,0.06178648769855499,0,-0.019011225551366806,-0.009505612775683403,0,0,0.019011225551366806,0,-0.19011226296424866,0,0,0.019011225551366806,0.03802245110273361,0,-0.05703368037939072,-0.009505612775683403,0,0.05703368037939072,0.019011225551366806,0,-0.03802245110273361,-0.019011225551366806,0,0,0.05228087306022644,0,-0.03802245110273361,-0.02851684018969536,0,0.11406736075878143,0.01425842009484768,0,0,-0.05228087306022644,0,0,0.0047528063878417015,0,-0.17110103368759155,-0.03802245110273361,0,0,0.009505612775683403,0,-0.03802245110273361,-0.06178648769855499,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/c64mem_sta.txt#Page-1-15 -->\n* Bit #0: 1 = One or more of left Shift, right Shift or Shift Lock is currently being pressed or locked.\n                     * Bit #1: 1 = Commodore is currently being pressed.\n                     * Bit #2: 1 = Control is currently being pressed.\n\n$028E        LSTSHF  Previous value of shift key indicator\n\nBits:\n\n* Bit #0: 1 = One or more of left Shift, right Shift or Shift Lock was pressed or locked at the time of previous check.\n                     * Bit #1: 1 = Commodore was pressed at the time of previous check.\n                     * Bit #2: 1 = Control was pressed at the time of previous check.\n\n$028F-$0290  KEYLOG  Execution address of routine that, based on the status of shift keys, sets the pointer at memory address $00F5-$00F6 to the appropriate conversion table for converting keyboard matrix codes to PETSCII codes.\n\nDefault: $EB48.\n\n$0291        MODE    Commodore-Shift switch\n\nBits:\n\n* Bit #7: 0 = Commodore-Shift is disabled; 1 = Commodore-Shift is enabled, the key combination will toggle between the uppercase/graphics and lowercase/uppercase character set.\n\n$0292        AUTODN  Scroll direction switch during scrolling the screen\n\nValues:\n\n* $00: Insertion of line before current line, current line and all lines below it must be scrolled 1 line downwards.\n                     * $01-$FF: Bottom of screen reached, complete screen must be scrolled 1 line upwards.\n\n$0293        M51CTR  RS232 control register\n\nBits:","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/c64mem_sta.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/c64mem_sta.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/c64mem_sta.txt#Page-1-15"},{"name":"github.com/mist64_c64ref/src/c64mem/symbols.txt","language":"asm","vector":[0.07216356694698334,0.015034075826406479,0,-0.060136303305625916,-0.027061335742473602,0,0.07216356694698334,0.030068151652812958,0,-0.04810904338955879,-0.015034075826406479,0,0.09621808677911758,0.039088595658540726,0,-0.08419082313776016,-0.024054521694779396,0,0.04810904338955879,0.009020445868372917,0,-0.18040890991687775,-0.03608178347349167,0,0.060136303305625916,0.03307496756315231,0,-0.03608178347349167,-0.04510222747921944,0,0.03608178347349167,0.04209541156888008,0,-0.03608178347349167,-0.030068151652812958,0,0.024054521694779396,0.02104770578444004,0,-0.04810904338955879,-0.039088595658540726,0,0.04810904338955879,0.024054521694779396,0,-0.012027260847389698,-0.02104770578444004,0,0.04810904338955879,0.07817719131708145,0,-0.03608178347349167,-0.030068151652812958,0,0.03608178347349167,0.027061335742473602,0,-0.22851794958114624,-0.04209541156888008,0,0.07216356694698334,0.04209541156888008,0,-0.024054521694779396,-0.018040891736745834,0,0.060136303305625916,0.024054521694779396,0,-0.21649068593978882,-0.024054521694779396,0,0.03608178347349167,0.03307496756315231,0,0,-0.0811840072274208,0,0.024054521694779396,0.04209541156888008,0,-0.060136303305625916,-0.024054521694779396,0,0.04810904338955879,0.018040891736745834,0,-0.060136303305625916,-0.03307496756315231,0,0.024054521694779396,0.04209541156888008,0,-0.04810904338955879,-0.04510222747921944,0,0.03608178347349167,0.054122671484947205,0,-0.012027260847389698,-0.03608178347349167,0,0.1563543826341629,0.05111585929989815,0,-0.04810904338955879,-0.04810904338955879,0,0.22851794958114624,0.054122671484947205,0,-0.060136303305625916,-0.06614993512630463,0,0.04810904338955879,0.027061335742473602,0,-0.024054521694779396,-0.09922490268945694,0,0.060136303305625916,0.039088595658540726,0,-0.024054521694779396,-0.02104770578444004,0,0.19243617355823517,0.030068151652812958,0,-0.04810904338955879,-0.027061335742473602,0,0.04810904338955879,0.015034075826406479,0,-0.03608178347349167,-0.030068151652812958,0,0.03608178347349167,0.03608178347349167,0,-0.04810904338955879,-0.027061335742473602,0,0.03608178347349167,0.039088595658540726,0,-0.060136303305625916,-0.027061335742473602,0,0.10824534296989441,0.024054521694779396,0,-0.03608178347349167,-0.12628623843193054,0,0.03608178347349167,0.039088595658540726,0,-0.07216356694698334,-0.02104770578444004,0,0,0.04510222747921944,0,-0.024054521694779396,-0.11425897479057312,0,0.012027260847389698,0.027061335742473602,0,-0.22851794958114624,-0.018040891736745834,0,0.03608178347349167,0.027061335742473602,0,-0.03608178347349167,-0.03608178347349167,0,0.04810904338955879,0.030068151652812958,0,-0.03608178347349167,-0.03608178347349167,0,0.060136303305625916,0.027061335742473602,0,-0.024054521694779396,-0.03307496756315231,0,0.012027260847389698,0.030068151652812958,0,-0.09621808677911758,-0.015034075826406479,0,0.03608178347349167,0.08419082313776016,0,-0.012027260847389698,-0.03608178347349167,0,0.04810904338955879,0.13229987025260925,0,-0.04810904338955879,-0.04510222747921944,0,0.03608178347349167,0.04209541156888008,0,-0.060136303305625916,-0.027061335742473602,0,0.07216356694698334,0.04810904338955879,0,-0.012027260847389698,-0.024054521694779396,0,0.19243617355823517,0.12027260661125183,0,-0.07216356694698334,-0.04510222747921944,0,0.03608178347349167,0.03608178347349167,0,-0.024054521694779396,-0.06314311921596527,0,0.04810904338955879,0.03307496756315231,0,-0.024054521694779396,-0.03307496756315231,0,0.04810904338955879,0.027061335742473602,0,-0.04810904338955879,-0.039088595658540726,0,0.012027260847389698,0.060136303305625916,0,-0.2525724768638611,-0.030068151652812958,0,0.07216356694698334,0.030068151652812958,0,-0.024054521694779396,-0.039088595658540726,0,0.024054521694779396,0.012027260847389698,0,-0.03608178347349167,-0.02104770578444004,0,0.024054521694779396,0.015034075826406479,0,-0.060136303305625916,-0.17138846218585968,0,0.07216356694698334,0.03608178347349167,0,-0.024054521694779396,-0.024054521694779396,0,0.060136303305625916,0.039088595658540726,0,-0.09621808677911758,-0.07216356694698334,0,0.024054521694779396,0.039088595658540726,0,-0.09621808677911758,-0.012027260847389698,0,0.012027260847389698,0.012027260847389698,0,-0.03608178347349167,-0.06314311921596527,0,0.03608178347349167,0.030068151652812958,0,-0.012027260847389698,-0.02104770578444004,0,0.04810904338955879,0.030068151652812958,0,-0.03608178347349167,-0.03608178347349167,0,0.012027260847389698,0.027061335742473602,0,-0.024054521694779396,-0.03307496756315231,0,0.04810904338955879,0.0751703754067421,0,-0.08419082313776016,-0.018040891736745834,0,0.060136303305625916,0.15334756672382355,0,-0.03608178347349167,-0.05111585929989815,0,0.024054521694779396,0.030068151652812958,0,-0.04810904338955879,-0.018040891736745834,0,0.012027260847389698,0.039088595658540726,0,-0.03608178347349167,-0.018040891736745834,0,0.060136303305625916,0.07216356694698334,0,-0.024054521694779396,-0.03608178347349167,0,0.03608178347349167,0.018040891736745834,0,-0.07216356694698334,-0.1353066861629486,0,0.060136303305625916,0.04510222747921944,0,-0.024054521694779396,-0.024054521694779396,0,0.024054521694779396,0.02104770578444004,0,-0.024054521694779396,-0.03307496756315231,0,0.060136303305625916,0.039088595658540726,0,-0.03608178347349167,-0.039088595658540726,0,0.04810904338955879,0.04510222747921944,0,-0.03608178347349167,-0.030068151652812958,0,0.024054521694779396,0.030068151652812958,0,-0.04810904338955879,-0.054122671484947205,0,0.07216356694698334,0.015034075826406479,0,-0.060136303305625916,-0.10523852705955505,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/c64mem/symbols.txt#Page-1 -->\n$0000 D6510\n$0001 R6510\n#0002        # unnamed in Programmer's Reference Manual; part of \"BLANK0\" 3 (!) byte register area in BASIC source\n$0003 ADRAY1\n$0005 ADRAY2\n$0007 CHARAC # also INTEGR\n$0008 ENDCHR\n$0009 TRMPOS\n$000A VERCK\n$000B COUNT\n$000C DIMFLG\n$000D VALTYP\n$000E INTFLG\n$000F GARBFL\n$0010 SUBFLG\n$0011 INPFLG\n$0012 TANSGN\n$0013 CHANNL # unnamed in Programmer's Reference Manual\n$0014 LINNUM\n$0016 TEMPPT\n$0017 LASTPT\n$0019 TEMPST\n$0022 INDEX\n$0022 INDEX1\n$0024 INDEX2\n$0026 RESHO\n$002B TXTTAB\n$002D VARTAB\n$002F ARYTAB\n$0031 STREND\n$0033 FRETOP\n$0035 FRESPC\n$0037 MEMSIZ\n$0039 CURLIN\n$003B OLDLIN\n$003D OLDTXT\n$003F DATLIN\n$0041 DATPTR\n$0043 INPPTR\n$0045 VARNAM\n$0047 VARPNT\n$0049 FORPNT\n$004B OPPTR\n$004B VARTXT\n$004D OPMASK\n$004E DEFPNT\n$004E TEMPF3\n$0050 DSCPNT\n$0053 FOUR6\n$0054 JMPER\n$0057 TEMPF1\n$005C TEMPF2\n$0061 FAC\n$0061 FACEXP\n$0062 FACHO\n$0066 FACSGN\n$0067 SGNFLG\n$0068 BITS\n$0069 ARGEXP # aka ARG, AFAC, FAC2\n$006A ARGHO\n$006E ARGSGN\n$006F ARISGN\n$0070 FACOV\n$0071 FBUFPT\n$0073 CHRGET\n$0079 CHRGOT\n$007A TXTPTR\n$008B RNDX\n$0090 STATUS\n$0091 STKEY\n$0092 SVXT\n$0093 VERCK\n$0094 C3P0\n$0095 BSOUR\n$0096 SYNO\n$0097 XSAV   # unnamed in Programmer's Reference Manual\n$0098 LDTND\n$0099 DFLTN\n$009A DFLTO\n$009B PRTY\n$009C DPSW\n$009D MSGFLG\n$009E PTR1\n$009F PTR2\n$00A0 TIME\n$00A3 PCNTR  # unnamed in Programmer's Reference Manual\n$00A3 R2D2   # unnamed in Programmer's Reference Manual\n$00A4 BSOUR1 # unnamed in Programmer's Reference Manual\n$00A4 FIRT   # unnamed in Programmer's Reference Manual\n$00A5 CNTDN\n$00A6 BUFPT\n$00A7 INBIT\n$00A8 BITCI\n$00A9 RINONE\n$00AA RIDATA\n$00AB RIPRTY\n$00AC SAL\n$00AE EAL\n$00B0 CMP0\n$00B2 TAPE1\n$00B4 BITTS\n$00B5 NXTBIT\n$00B6 RODATA\n$00B7 FNLEN\n$00B8 LA\n$00B9 SA\n$00BA FA\n$00BB FNADR\n$00BD ROPRTY\n$00BE FSBLK\n$00BF MYCH\n$00C0 CAS1\n$00C1 STAL\n$00C3 MEMUSS\n$00C5 LSTX\n$00C6 NDX\n$00C7 RVS\n$00C8 INDX\n$00C9 LSXP\n$00CB SFDX\n$00CC BLNSW\n$00CD BLNCT\n$00CE GDBLN\n$00CF BLNON\n$00D0 CRSW\n$00D1 PNT\n$00D3 PNTR\n$00D4 QTSW\n$00D5 LNMX\n$00D6 TBLX\n$00D7 DATA   # unnamed in Programmer's Reference Manual\n$00D8 INSRT\n$00D9 LDTB1\n$00F3 USER\n$00F5 KEYTAB\n$00F7 RIBUF\n$00F9 ROBUF\n$00FB FREKZP\n$00FF BASZPT\n$0100 BAD\n$0200 BUF\n$0259 LAT\n$0263 FAT\n$026D SAT\n$0277 KEYD\n$0281 MEMSTR\n$0283 MEMSIZ\n$0285 TIMOUT\n$0286 COLOR\n$0287 GDCOL\n$0288 HIBASE\n$0289 XMAX\n$028A RPTFLG\n$028B KOUNT\n$028C DELAY\n$028D SHFLAG\n$028E LSTSHF\n$028F KEYLOG\n$0291 MODE\n$0292 AUTODN\n$0293 M51CTR\n$0294 M51CDR\n$0295 M51AJB\n$0297 RSSTAT\n$0298 BITNUM\n$0299 BAUDOF\n$029B RIDBE\n$029C RIDBS\n$029D RODBS\n$029E RODBE\n$029F IRQTMP\n$02A1 ENABL\n$02A2 CASTON # unnamed in Programmer's Reference Manual\n$02A3 KIKA26 # unnamed in Programmer's Reference Manual\n$02A4 STUPID # unnamed in Programmer's Reference Manual\n$02A5 LINTMP # unnamed in Programmer's Reference Manual\n$02A6 PALNTS # unnamed in Programmer's Reference Manual\n$0300 IERROR\n$0302 IMAIN\n$0304 ICRNCH\n$0306 IQPLOP\n$0308 IGONE\n$030A IEVAL\n$030C SAREG\n$030D SXREG\n$030E SYREG\n$030F SPREG\n$0310 USRPOK\n$0311 USRADD # from Programmer's Reference Manual; not in KERNAL/BASIC source!\n$0314 CINV\n$0316 CBINV\n$0318 NMINV\n$031A IOPEN\n$031C ICLOSE\n$031E ICHKIN\n$0320 ICKOUT\n$0322 ICLRCH\n$0324 IBASIN\n$0326 IBSOUT\n$0328 ISTOP\n$032A IGETIN\n$032C ICLALL\n$032E USRCMD\n$0330 ILOAD\n$0332 ISAVE\n$033C TBUFFR\n$0400 VICSCN","sourcePath":"external/github.com/mist64_c64ref/src/c64mem/symbols.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/symbols.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/c64mem/symbols.txt#Page-1"},{"name":"github.com/mist64_c64ref/src/kernal/kernal_64intern.txt","language":"asm","vector":[0,0,0,0,-0.007042253389954567,0,0.018779342994093895,0.004694835748523474,0,-0.018779342994093895,-0.0211267601698637,0,0.04694835841655731,0.018779342994093895,0,-0.009389671497046947,-0.0211267601698637,0,0.06572769582271576,0.03286384791135788,0,0,-0.025821596384048462,0,0.009389671497046947,0.01643192395567894,0,-0.028169013559818268,-0.004694835748523474,0,0.018779342994093895,0.030516432598233223,0,-0.018779342994093895,-0.007042253389954567,0,0.018779342994093895,0.009389671497046947,0,0,-0.039906103163957596,0,0.04694835841655731,0.004694835748523474,0,-0.018779342994093895,-0.018779342994093895,0,0,0.011737089604139328,0,-0.009389671497046947,-0.002347417874261737,0,0.009389671497046947,0.007042253389954567,0,0,-0.014084506779909134,0,0,0.0211267601698637,0,-0.009389671497046947,0,0,0.04694835841655731,0.009389671497046947,0,-0.028169013559818268,-0.004694835748523474,0,0.009389671497046947,0.004694835748523474,0,-0.028169013559818268,-0.004694835748523474,0,0.028169013559818268,0.0211267601698637,0,-0.04694835841655731,-0.004694835748523474,0,0.018779342994093895,0.007042253389954567,0,-0.06572769582271576,-0.03755868598818779,0,0,0.004694835748523474,0,-0.04694835841655731,-0.030516432598233223,0,0.018779342994093895,0.007042253389954567,0,0,-0.002347417874261737,0,0.7699530720710754,0.011737089604139328,0,-0.028169013559818268,-0.025821596384048462,0,0,0.025821596384048462,0,-0.009389671497046947,-0.007042253389954567,0,0.03755868598818779,0.03286384791135788,0,-0.018779342994093895,-0.002347417874261737,0,0.018779342994093895,0.004694835748523474,0,-0.028169013559818268,-0.0211267601698637,0,0.1690140813589096,0.01643192395567894,0,-0.028169013559818268,-0.01643192395567894,0,0.018779342994093895,0.014084506779909134,0,-0.018779342994093895,-0.011737089604139328,0,0.018779342994093895,0.023474179208278656,0,-0.009389671497046947,-0.011737089604139328,0,0.018779342994093895,0.004694835748523474,0,0,-0.007042253389954567,0,0.12206573039293289,0.007042253389954567,0,-0.018779342994093895,-0.01643192395567894,0,0.009389671497046947,0,0,-0.018779342994093895,-0.007042253389954567,0,0.028169013559818268,0.025821596384048462,0,-0.009389671497046947,-0.014084506779909134,0,0.028169013559818268,0.004694835748523474,0,-0.13145539164543152,-0.01643192395567894,0,0,0.023474179208278656,0,-0.009389671497046947,-0.023474179208278656,0,0.018779342994093895,0.014084506779909134,0,-0.028169013559818268,-0.035211268812417984,0,0.018779342994093895,0,0,-0.028169013559818268,-0.023474179208278656,0,0.09389671683311462,0.018779342994093895,0,-0.009389671497046947,-0.002347417874261737,0,0.06572769582271576,0.38732394576072693,0,0,-0.03286384791135788,0,0.0845070406794548,0.002347417874261737,0,-0.009389671497046947,-0.018779342994093895,0,0.018779342994093895,0.018779342994093895,0,-0.028169013559818268,-0.009389671497046947,0,0.018779342994093895,0.014084506779909134,0,-0.056338027119636536,-0.018779342994093895,0,0.028169013559818268,0.09624413400888443,0,-0.009389671497046947,-0.01643192395567894,0,0.028169013559818268,0.025821596384048462,0,-0.03755868598818779,-0.009389671497046947,0,0.009389671497046947,0.011737089604139328,0,0,-0.011737089604139328,0,0,0.014084506779909134,0,0,-0.004694835748523474,0,0.018779342994093895,0.06572769582271576,0,-0.018779342994093895,-0.009389671497046947,0,0.009389671497046947,0.01643192395567894,0,0,-0.014084506779909134,0,0.009389671497046947,0.014084506779909134,0,0,-0.007042253389954567,0,0,0.01643192395567894,0,-0.009389671497046947,-0.06572769582271576,0,0.028169013559818268,0,0,-0.009389671497046947,-0.007042253389954567,0,0.009389671497046947,0.0211267601698637,0,-0.06572769582271576,-0.0211267601698637,0,0.009389671497046947,0.011737089604139328,0,-0.009389671497046947,-0.0211267601698637,0,0,0.05399060994386673,0,-0.009389671497046947,-0.01643192395567894,0,0,0.03755868598818779,0,-0.028169013559818268,-0.01643192395567894,0,0.028169013559818268,0.0422535203397274,0,-0.028169013559818268,-0.01643192395567894,0,0.018779342994093895,0.014084506779909134,0,-0.04694835841655731,-0.014084506779909134,0,0,0.20187793672084808,0,-0.009389671497046947,-0.035211268812417984,0,0.018779342994093895,0.014084506779909134,0,-0.009389671497046947,-0.007042253389954567,0,0.009389671497046947,0.023474179208278656,0,-0.06572769582271576,-0.023474179208278656,0,0,0.009389671497046947,0,-0.009389671497046947,-0.007042253389954567,0,0.009389671497046947,0.0422535203397274,0,0,-0.007042253389954567,0,0,0.014084506779909134,0,-0.009389671497046947,-0.014084506779909134,0,0.03755868598818779,0.009389671497046947,0,0,-0.002347417874261737,0,0.018779342994093895,0.009389671497046947,0,-0.009389671497046947,0,0,0,0.030516432598233223,0,0,-0.009389671497046947,0,0.03755868598818779,0.01643192395567894,0,-0.009389671497046947,-0.009389671497046947,0,0.009389671497046947,0.011737089604139328,0,-0.07511737197637558,-0.035211268812417984,0,0.009389671497046947,0.011737089604139328,0,-0.056338027119636536,-0.03755868598818779,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/kernal/kernal_64intern.txt#Page-1 -->\n- C64 KERNAL API (64 intern)\n-\n- Baloui, Br√ºckmann, Englisch, Felt, Gelfand, Gerits, Krsnik:\n- Das neue Commodore-64-intern-Buch.\n- DuÃàsseldorf: Data-Becker, 1990.\n- ISBN 3890113079\n-\n- Corrections (typos as well as content), translations etc.\n- welcome at: https://github.com/mist64/c64ref\n-\n----------------------------------------------\n-\n# This plain text file is formatted so that it can be automatically\n# parsed in order to create cross-references etc.\n# * Lines starting with \"-\" is top-level information. The first line\n#   is the title. Lines starting with \"--\" are separators.\n# * Lines starting with \"#\" are internal comments.\n# * Hex addresses start at column 0.\n# * Symbols start at column 7.\n# * The description starts at column 15.\n# * All lines of the description until the first blank line are\n#   combined into the heading.\n# * The remaining text is in MarkDown format.\n# The encoding is UTF-8.\n\n$FF81          Video-Reset\n\n$FF84          CIAs initialisieren\n\n$FF87          RAM l√∂schen/testen\n\n$FF8A          I/O initialisieren\n\n$FF8D          I/O Vektoren initialisieren\n\n$FF90          Setzt Flag f√ºr Ausgabe von Systemmeldung\n\n$FF93          schickt Sekund√§radresse nach einem LISTEN-Befehl\n               auf den IEC-Bus\n\n$FF96          schickt Sekund√§radresse nach einem TALK-Befehl\n               auf den IEC-Bus\n\n$FF99          holt bei gesetzem Carry-Flag die h√∂chste RAM-\n               Adresse nach X und Y, bei gel√∂schtem Carry-\n               Flag wird die Adresse von X und Y gesetzt.","sourcePath":"external/github.com/mist64_c64ref/src/kernal/kernal_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/kernal_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/kernal/kernal_64intern.txt#Page-1"},{"name":"github.com/mist64_c64ref/src/kernal/kernal_64intern.txt","language":"asm","vector":[0.034244053065776825,0.01284151989966631,0,0,0,0,0,0.017122026532888412,0,-0.10273215919733047,0,0,0.017122026532888412,0.02140253223478794,0,0,-0.04280506446957588,0,0.05136607959866524,0.034244053065776825,0,-0.06848810613155365,-0.004280506633222103,0,0.017122026532888412,0.034244053065776825,0,-0.154098242521286,0,0,0.017122026532888412,0.059927091002464294,0,-0.017122026532888412,0,0,0,0.017122026532888412,0,-0.034244053065776825,-0.004280506633222103,0,0.017122026532888412,0.008561013266444206,0,0,-0.004280506633222103,0,0,0.02140253223478794,0,-0.034244053065776825,-0.008561013266444206,0,0.10273215919733047,0,0,0,-0.02568303979933262,0,0,0.01284151989966631,0,-0.017122026532888412,0,0,0.017122026532888412,0.02140253223478794,0,-0.17122025787830353,0,0,0.017122026532888412,0.004280506633222103,0,-0.017122026532888412,-0.034244053065776825,0,0.017122026532888412,0.02568303979933262,0,-0.017122026532888412,-0.017122026532888412,0,0.034244053065776825,0.034244053065776825,0,-0.17122025787830353,-0.034244053065776825,0,0,0.017122026532888412,0,-0.154098242521286,-0.08561012893915176,0,0.17122025787830353,0.04280506446957588,0,0,0,0,0.5136607885360718,0.004280506633222103,0,-0.017122026532888412,-0.077049121260643,0,0,0.008561013266444206,0,0,-0.01284151989966631,0,0.11985418200492859,0.02568303979933262,0,0,-0.034244053065776825,0,0,0.008561013266444206,0,0,-0.077049121260643,0,0.11985418200492859,0.017122026532888412,0,-0.034244053065776825,-0.017122026532888412,0,0,0,0,-0.08561012893915176,-0.017122026532888412,0,0,0.008561013266444206,0,0,0,0,0.08561012893915176,0.004280506633222103,0,0,-0.017122026532888412,0,0.11985418200492859,0.059927091002464294,0,-0.1369762122631073,0,0,0.017122026532888412,0,0,0,-0.008561013266444206,0,0,0.008561013266444206,0,-0.034244053065776825,-0.08989063650369644,0,0.06848810613155365,0.008561013266444206,0,-0.06848810613155365,-0.01284151989966631,0,0.05136607959866524,0.01284151989966631,0,0,-0.008561013266444206,0,0.06848810613155365,0.02568303979933262,0,0,-0.08561012893915176,0,0.017122026532888412,0,0,-0.10273215919733047,-0.077049121260643,0,0.1369762122631073,0.09417114406824112,0,-0.017122026532888412,-0.008561013266444206,0,0.1369762122631073,0.26111090183258057,0,0,-0.02568303979933262,0,0.20546431839466095,0.008561013266444206,0,0,-0.04280506446957588,0,0,0.06848810613155365,0,-0.017122026532888412,0,0,0.034244053065776825,0,0,-0.017122026532888412,-0.02568303979933262,0,0.08561012893915176,0.06420759856700897,0,0,-0.017122026532888412,0,0,0.01284151989966631,0,-0.06848810613155365,-0.059927091002464294,0,0.017122026532888412,0.004280506633222103,0,0,-0.0385245606303215,0,0.017122026532888412,0.04708557203412056,0,0,-0.004280506633222103,0,0.017122026532888412,0.059927091002464294,0,-0.1369762122631073,-0.077049121260643,0,0.034244053065776825,0.01284151989966631,0,0,0,0,0.10273215919733047,0,0,0,-0.02568303979933262,0,0,0.059927091002464294,0,0,-0.034244053065776825,0,0.10273215919733047,0.02568303979933262,0,0,-0.004280506633222103,0,0.017122026532888412,0.0385245606303215,0,-0.10273215919733047,-0.04280506446957588,0,0,0.01284151989966631,0,-0.05136607959866524,-0.055646587163209915,0,0,0.07276861369609833,0,0,-0.01284151989966631,0,0,0.077049121260643,0,0,-0.04280506446957588,0,0.034244053065776825,0.10273215919733047,0,-0.034244053065776825,-0.0385245606303215,0,0,0.04280506446957588,0,0,-0.008561013266444206,0,0,0.14553722739219666,0,0,-0.01284151989966631,0,0.017122026532888412,0.04280506446957588,0,0,0,0,0.034244053065776825,0.029963545501232147,0,0,-0.034244053065776825,0,0,0.008561013266444206,0,0,0,0,0,0.0385245606303215,0,-0.017122026532888412,-0.008561013266444206,0,0,0.008561013266444206,0,-0.017122026532888412,-0.08989063650369644,0,0.017122026532888412,0.017122026532888412,0,0,0,0,0.034244053065776825,0.07276861369609833,0,0,0,0,0,0.029963545501232147,0,0,-0.034244053065776825,0,0.034244053065776825,0.055646587163209915,0,-0.034244053065776825,0,0,0.017122026532888412,0.008561013266444206,0,-0.06848810613155365,-0.059927091002464294,0,0.034244053065776825,0.017122026532888412,0,-0.17122025787830353,-0.04280506446957588,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/kernal/kernal_64intern.txt#Page-1-2 -->\n$FF9C          dieselbe Funktion wie $FF99, jedoch f√ºr den\n               RAM-Anfang\n\n$FF9F          fragt die Tastatur ab\n\n$FFA2          setzt das Time-out-Flag f√ºr den IEC-Bus\n\n$FFA5          holt ein Byte vom IEC-Bus in den Akku\n\n$FFA8          gibt ein Byte aus dem Akku an den IEC-Bus aus\n\n$FFAB          sendet UNTALK-Befehl auf den IEC-Bus\n\n$FFAE          sendet UNLISTEN-Befehl auf den IEC-Bus\n\n$FFB1          sendet LISTEN-Befehl auf den IEC-Bus\n\n$FFB4          sendet TALK-Befehl zum IEC-Bus\n\n$FFB7          holt das Statuswort in den Akku\n\n$FFBA          setzt die Fileparameter, Akku mu√ü logische\n               Filenummer enthalten, X = Ger√§tenummer und\n               Y = Sekund√§radresse\n\n$FFBD          setzt Parameter des Filenamens, Akku mu√ü\n               L√§nge des Namens enthalten, X und Y enthalten\n               die Adresse des Filenamens (Low- und High-Byte)\n\n$FFC0          OPEN-Befehl, √∂ffnet logische Datei\n\n$FFC3          CLOSE-Befehl, schlie√üt logische Datei,\n               Akku mu√ü logische Filenummer enthalten\n\n$FFC6          CHKIN setzt folgende Eingabe auf logische\n               Datei, die in X √ºbergeben wird.\n               Die logische Datei mu√ü vorher mit der\n               OPEN-Routine ge√∂ffnet werden.\n\n$FFC9          CKOUT setzt folgende Ausgabe auf logische\n               Datei, die in X √ºbergeben wird.\n               Die logische Datei mu√ü vorher mit der\n               OPEN-Routine ge√∂ffnet werden.\n\n$FFCC          CLRCH setzt die Ein- und Ausgabe wieder\n               auf Standard (Tastatur/Bildschirm)","sourcePath":"external/github.com/mist64_c64ref/src/kernal/kernal_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/kernal_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/kernal/kernal_64intern.txt#Page-1-2"},{"name":"github.com/mist64_c64ref/src/kernal/kernal_64intern.txt","language":"asm","vector":[0,0.006827887613326311,0,0,-0.013655775226652622,0,0,0.02048366144299507,0,0,-0.006827887613326311,0,0.027311550453305244,0.006827887613326311,0,-0.027311550453305244,-0.04096732288599014,0,0.027311550453305244,0.06827887147665024,0,0,-0.027311550453305244,0,0.027311550453305244,0.013655775226652622,0,-0.08193464577198029,0,0,0.027311550453305244,0.08193464577198029,0,0,0,0,0,0.013655775226652622,0,-0.05462310090661049,-0.027311550453305244,0,0.027311550453305244,0.013655775226652622,0,-0.027311550453305244,-0.013655775226652622,0,0,0.013655775226652622,0,0,-0.03413943573832512,0,0.027311550453305244,0.04096732288599014,0,0,-0.07510676234960556,0,0.027311550453305244,0,0,0,-0.006827887613326311,0,0.027311550453305244,0.04096732288599014,0,-0.13655774295330048,-0.006827887613326311,0,0,0.006827887613326311,0,0,-0.03413943573832512,0,0.05462310090661049,0.013655775226652622,0,0,-0.013655775226652622,0,0,0.04096732288599014,0,-0.16386929154396057,-0.03413943573832512,0,0,0.006827887613326311,0,-0.10924620181322098,-0.027311550453305244,0,0,0.02048366144299507,0,0,0,0,0.4096732437610626,0,0,-0.027311550453305244,-0.006827887613326311,0,0,0.027311550453305244,0,0,-0.05462310090661049,0,0.08193464577198029,0.013655775226652622,0,0,-0.006827887613326311,0,0.05462310090661049,0.013655775226652622,0,-0.08193464577198029,-0.04096732288599014,0,0.10924620181322098,0.013655775226652622,0,-0.027311550453305244,-0.013655775226652622,0,0,0,0,-0.05462310090661049,-0.03413943573832512,0,0.027311550453305244,0.013655775226652622,0,0,-0.013655775226652622,0,0.05462310090661049,0.006827887613326311,0,-0.10924620181322098,0,0,0.35505014657974243,0.02048366144299507,0,-0.08193464577198029,-0.006827887613326311,0,0.027311550453305244,0.02048366144299507,0,0,0,0,0,0.013655775226652622,0,0,-0.08193464577198029,0,0.10924620181322098,0.013655775226652622,0,-0.08193464577198029,-0.027311550453305244,0,0.027311550453305244,0.027311550453305244,0,0,0,0,0.08193464577198029,0.02048366144299507,0,-0.027311550453305244,-0.08193464577198029,0,0.027311550453305244,0,0,-0.05462310090661049,-0.06145098805427551,0,0.27311548590660095,0,0,-0.05462310090661049,-0.006827887613326311,0,0.05462310090661049,0.22532027959823608,0,0,-0.027311550453305244,0,0.27311548590660095,0,0,0,-0.013655775226652622,0,0,0.04096732288599014,0,-0.05462310090661049,0,0,0,0.027311550453305244,0,-0.05462310090661049,-0.04096732288599014,0,0.05462310090661049,0.06145098805427551,0,-0.027311550453305244,-0.02048366144299507,0,0.05462310090661049,0.006827887613326311,0,-0.08193464577198029,-0.027311550453305244,0,0,0.02048366144299507,0,-0.027311550453305244,-0.02048366144299507,0,0,0.03413943573832512,0,-0.027311550453305244,-0.05462310090661049,0,0.027311550453305244,0.17752507328987122,0,-0.08193464577198029,-0.05462310090661049,0,0.05462310090661049,0.02048366144299507,0,0,-0.006827887613326311,0,0,0,0,-0.027311550453305244,0,0,0.027311550453305244,0.06145098805427551,0,0,-0.04096732288599014,0,0.08193464577198029,0.02048366144299507,0,0,0,0,0,0.047795213758945465,0,-0.027311550453305244,-0.047795213758945465,0,0.05462310090661049,0.013655775226652622,0,-0.16386929154396057,-0.027311550453305244,0,0,0.15021352469921112,0,-0.027311550453305244,-0.027311550453305244,0,0,0.027311550453305244,0,0,-0.04096732288599014,0,0,0.13655774295330048,0,-0.05462310090661049,-0.027311550453305244,0,0,0,0,-0.027311550453305244,-0.027311550453305244,0,0,0.10241831094026566,0,0,-0.03413943573832512,0,0.027311550453305244,0.027311550453305244,0,0,-0.013655775226652622,0,0.027311550453305244,0.047795213758945465,0,-0.027311550453305244,-0.04096732288599014,0,0.027311550453305244,0.013655775226652622,0,0,-0.03413943573832512,0,0,0.027311550453305244,0,-0.05462310090661049,-0.02048366144299507,0,0.05462310090661049,0.013655775226652622,0,-0.10924620181322098,-0.05462310090661049,0,0,0.03413943573832512,0,0,0,0,0.08193464577198029,0.013655775226652622,0,0,-0.04096732288599014,0,0,0.10241831094026566,0,-0.027311550453305244,-0.02048366144299507,0,0,0.047795213758945465,0,-0.027311550453305244,0,0,0.08193464577198029,0,0,-0.05462310090661049,-0.013655775226652622,0,0,0.05462310090661049,0,-0.05462310090661049,-0.10241831094026566,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/kernal/kernal_64intern.txt#Page-1-3 -->\n$FFCF          BASIN Eingabe, holt ein Zeichen in den Akku\n\n$FFD2          BSOUT Ausgabe, gibt Zeichen im Akku aus\n\n$FFD5          LOAD, l√§dt Programm in den Speicher\n\n$FFD8          SAVE, speichert Programm ab\n\n$FFDB          setzt die laufende Zeit neu\n\n$FFDE          holt die laufende Zeit\n\n$FFE1          fragt die STOP-Taste ab\n\n$FFE4          GET, holt ein Zeichen in den Akku\n\n$FFE7          CLALL, setzt alle Ein-/Ausgabekan√§le\n               zur√ºck, die Dateien werden jedoch\n               nicht geschlossen\n\n$FFEA          erh√∂ht die laufende Zeit um eine\n               sechzigstel Sekunde\n\n$FFED          SCREEN holt die Anzahl der Zeilen und\n               Spalten des Bildschirms\n\n$FFF0          bei gel√∂schtem Carry-Flag wird der Cursor\n               auf die Position X/Y gesetzt, bei gesetztem\n               Carry-Flag wird die Cursorposition nach X/Y\n               geholt (X-Reg = Zeile, Y-Reg = Spalte)\n\n$FFF3          holt die Startadresse des I/O-Bausteins","sourcePath":"external/github.com/mist64_c64ref/src/kernal/kernal_64intern.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/kernal_64intern.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/kernal/kernal_64intern.txt#Page-1-3"},{"name":"github.com/mist64_c64ref/src/kernal/kernal_fk.txt","language":"asm","vector":[0,0.0017900405218824744,0,-0.007160162087529898,-0.0053701214492321014,0,0.02864064835011959,0.007160162087529898,0,-0.014320324175059795,-0.04117093235254288,0,0.021480485796928406,0.010740242898464203,0,-0.021480485796928406,-0.014320324175059795,0,0.05012113228440285,0.019690444692969322,0,-0.007160162087529898,-0.021480485796928406,0,0.007160162087529898,0.012530283071100712,0,0,-0.003580081043764949,0,0.02864064835011959,0.008950202725827694,0,0,-0.0053701214492321014,0,0,0.003580081043764949,0,-0.007160162087529898,-0.014320324175059795,0,0.035800810903310776,0.003580081043764949,0,-0.02864064835011959,-0.021480485796928406,0,0.021480485796928406,0.007160162087529898,0,-0.007160162087529898,-0.003580081043764949,0,0,0.008950202725827694,0,0,-0.039380889385938644,0,0,0.012530283071100712,0,-0.007160162087529898,-0.0017900405218824744,0,0.035800810903310776,0.025060566142201424,0,0,0,0,0.014320324175059795,0.003580081043764949,0,-0.007160162087529898,-0.012530283071100712,0,0.007160162087529898,0.014320324175059795,0,-0.05012113228440285,-0.007160162087529898,0,0.007160162087529898,0,0,-0.035800810903310776,-0.019690444692969322,0,0,0.003580081043764949,0,-0.014320324175059795,-0.014320324175059795,0,0,0.0017900405218824744,0,0,-0.0053701214492321014,0,0.7804576754570007,0.016110364347696304,0,-0.02864064835011959,-0.019690444692969322,0,0,0.012530283071100712,0,-0.007160162087529898,-0.010740242898464203,0,0.014320324175059795,0.025060566142201424,0,-0.02864064835011959,-0.0053701214492321014,0,0,0.0053701214492321014,0,-0.007160162087529898,-0.017900405451655388,0,0.15752355754375458,0.017900405451655388,0,-0.04296097159385681,-0.003580081043764949,0,0,0.003580081043764949,0,-0.014320324175059795,-0.012530283071100712,0,0.014320324175059795,0.017900405451655388,0,-0.007160162087529898,-0.016110364347696304,0,0.014320324175059795,0.012530283071100712,0,0,-0.0053701214492321014,0,0.17900404334068298,0,0,-0.007160162087529898,-0.007160162087529898,0,0.014320324175059795,0.0017900405218824744,0,-0.007160162087529898,-0.007160162087529898,0,0.021480485796928406,0.019690444692969322,0,-0.007160162087529898,0,0,0.06444145739078522,0.008950202725827694,0,-0.15036340057849884,-0.012530283071100712,0,0.007160162087529898,0.008950202725827694,0,-0.007160162087529898,-0.025060566142201424,0,0.014320324175059795,0.007160162087529898,0,-0.021480485796928406,-0.017900405451655388,0,0.014320324175059795,0,0,-0.02864064835011959,-0.008950202725827694,0,0.05012113228440285,0.0053701214492321014,0,-0.014320324175059795,-0.0017900405218824744,0,0.05012113228440285,0.39022883772850037,0,0,-0.02327052690088749,0,0.021480485796928406,0.0017900405218824744,0,-0.007160162087529898,-0.008950202725827694,0,0.014320324175059795,0.007160162087529898,0,0,-0.016110364347696304,0,0,0.007160162087529898,0,-0.05728129670023918,-0.007160162087529898,0,0.014320324175059795,0.08413190394639969,0,-0.014320324175059795,-0.026850607246160507,0,0.021480485796928406,0.012530283071100712,0,-0.08592194318771362,-0.008950202725827694,0,0.007160162087529898,0.008950202725827694,0,-0.007160162087529898,-0.003580081043764949,0,0.07160162180662155,0.014320324175059795,0,0,0,0,0.014320324175059795,0.08950202167034149,0,-0.035800810903310776,-0.0053701214492321014,0,0.014320324175059795,0.016110364347696304,0,-0.014320324175059795,-0.010740242898464203,0,0,0.016110364347696304,0,-0.007160162087529898,-0.0053701214492321014,0,0,0.03222072869539261,0,-0.014320324175059795,-0.07518170028924942,0,0.007160162087529898,0.003580081043764949,0,-0.007160162087529898,-0.0053701214492321014,0,0.007160162087529898,0.016110364347696304,0,-0.05012113228440285,-0.010740242898464203,0,0.007160162087529898,0.010740242898464203,0,0,-0.016110364347696304,0,0,0.026850607246160507,0,-0.007160162087529898,-0.019690444692969322,0,0.007160162087529898,0.026850607246160507,0,-0.07160162180662155,-0.008950202725827694,0,0.014320324175059795,0.010740242898464203,0,-0.014320324175059795,-0.007160162087529898,0,0.014320324175059795,0.007160162087529898,0,-0.035800810903310776,0,0,0,0.19511441886425018,0,-0.007160162087529898,-0.035800810903310776,0,0.007160162087529898,0.007160162087529898,0,-0.007160162087529898,-0.008950202725827694,0,0,0.014320324175059795,0,-0.02864064835011959,-0.05012113228440285,0,0.007160162087529898,0.003580081043764949,0,-0.014320324175059795,-0.0053701214492321014,0,0.007160162087529898,0.07518170028924942,0,0,-0.010740242898464203,0,0.007160162087529898,0.007160162087529898,0,-0.035800810903310776,-0.021480485796928406,0,0.021480485796928406,0.010740242898464203,0,0,-0.008950202725827694,0,0.014320324175059795,0.003580081043764949,0,0,-0.003580081043764949,0,0,0.044751010835170746,0,-0.007160162087529898,-0.008950202725827694,0,0.021480485796928406,0.007160162087529898,0,-0.007160162087529898,-0.0053701214492321014,0,0,0.008950202725827694,0,-0.035800810903310776,-0.026850607246160507,0,0.007160162087529898,0.019690444692969322,0,-0.021480485796928406,-0.03759085014462471,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/kernal/kernal_fk.txt#Page-1 -->\n- C64 KERNAL API (Frank Kontros)\n-\n- C64 KERNAL jump table, composed by Frank Kontros (jeno@kontr.uzhgorod.ua).\n- http://www.zimmers.net/anonftp/pub/cbm/c64/programming/documents/c64-kernal.txt\n-\n- Corrections (typos as well as content), translations etc.\n- welcome at: https://github.com/mist64/c64ref\n-\n----------------------------------------------\n-\n# This plain text file is formatted so that it can be automatically\n# parsed in order to create cross-references etc.\n# * Lines starting with \"-\" is top-level information. The first line\n#   is the title. Lines starting with \"--\" are separators.\n# * Lines starting with \"#\" are internal comments.\n# * Hex addresses start at column 0.\n# * Symbols start at column 7.\n# * The description starts at column 15.\n# * All lines of the description until the first blank line are\n#   combined into the heading.\n# * The remaining text is in MarkDown format.\n# The encoding is UTF-8.\n\n$FF81  CINT    init VIC & screen editor\n\n- - -  - - -  A X Y\n\n$FF84  IOINIT  initialize CIA & IRQ\n\n- - -  - - -  A X Y\n\n$FF87  RAMTAS  RAM test & search RAM end\n\n- - -  - - -  A X Y\n\n$FF8A  RESTOR  restore default I/O vectors\n\n- - -  - - -  A - Y\n\n$FF8D  VECTOR  read/set I/O vectors\n\nin: C=0 moves from Y/X to vectors      - X Y  - X -  A - Y\n                       C=1 moves vectors to Y/X           - X Y  - X -  A - Y\n\n$FF90  SETMSG  enable/disable KERNAL messages\n\nin: A bit7=1 error msgs on             A - -  - - -  A - -\n                         bit6=1 control msgs on\n\n$FF93  SECOND  send secondary addr after listen","sourcePath":"external/github.com/mist64_c64ref/src/kernal/kernal_fk.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/kernal_fk.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/kernal/kernal_fk.txt#Page-1"},{"name":"github.com/mist64_c64ref/src/kernal/kernal_fk.txt","language":"asm","vector":[0.011993962340056896,0,0,0,-0.002998490585014224,0,0.011993962340056896,0.014992453157901764,0,-0.011993962340056896,-0.002998490585014224,0,0.023987924680113792,0.002998490585014224,0,0,-0.002998490585014224,0,0.11993962526321411,0.017990943044424057,0,0,-0.005996981170028448,0,0,0.002998490585014224,0,0,0,0,0.011993962340056896,0.017990943044424057,0,0,0,0,0,0,0,-0.011993962340056896,0,0,0,0,0,0,-0.026986416429281235,0,0,0.011993962340056896,0,-0.011993962340056896,0,0,0.011993962340056896,0.005996981170028448,0,0,-0.05397283285856247,0,0,0,0,-0.011993962340056896,0,0,0.011993962340056896,0.03298339620232582,0,0,-0.005996981170028448,0,0.023987924680113792,0,0,0,-0.002998490585014224,0,0.011993962340056896,0.011993962340056896,0,0,-0.005996981170028448,0,0,0,0,-0.023987924680113792,-0.017990943044424057,0,0,0,0,-0.023987924680113792,-0.008995471522212029,0,0,0.014992453157901764,0,0,0,0,0.7796075940132141,0.005996981170028448,0,-0.011993962340056896,-0.005996981170028448,0,0,0.014992453157901764,0,0,0,0,0.011993962340056896,0.059969812631607056,0,0,0,0,0.023987924680113792,0,0,-0.011993962340056896,0,0,0.035981886088848114,0.005996981170028448,0,-0.023987924680113792,0,0,0,0.008995471522212029,0,0,-0.008995471522212029,0,0.011993962340056896,0,0,0,0,0,0,0,0,-0.011993962340056896,-0.005996981170028448,0,0.09595169872045517,0.005996981170028448,0,-0.011993962340056896,0,0,0.035981886088848114,0,0,0,-0.014992453157901764,0,0.035981886088848114,0.008995471522212029,0,0,0,0,0.19190339744091034,0.011993962340056896,0,-0.11993962526321411,-0.005996981170028448,0,0,0.005996981170028448,0,-0.011993962340056896,0,0,0.059969812631607056,0,0,-0.011993962340056896,-0.014992453157901764,0,0.011993962340056896,0,0,-0.011993962340056896,-0.011993962340056896,0,0,0.005996981170028448,0,0,0,0,0.011993962340056896,0.38980379700660706,0,0,-0.014992453157901764,0,0.07196377217769623,0,0,0,-0.002998490585014224,0,0,0.008995471522212029,0,0,0,0,0,0.014992453157901764,0,-0.035981886088848114,-0.008995471522212029,0,0.023987924680113792,0.023987924680113792,0,0,-0.011993962340056896,0,0.023987924680113792,0.029984906315803528,0,-0.167915478348732,0,0,0,0.005996981170028448,0,0,0,0,0.13193358480930328,0.002998490585014224,0,0,-0.005996981170028448,0,0,0.047975849360227585,0,-0.011993962340056896,-0.008995471522212029,0,0,0.017990943044424057,0,-0.023987924680113792,0,0,0,0.017990943044424057,0,0,-0.002998490585014224,0,0,0.09895019233226776,0,-0.011993962340056896,-0.059969812631607056,0,0.035981886088848114,0,0,0,-0.008995471522212029,0,0,0.03298339620232582,0,0,-0.005996981170028448,0,0.011993962340056896,0.011993962340056896,0,0,-0.005996981170028448,0,0,0.002998490585014224,0,0,0,0,0,0.005996981170028448,0,0,-0.005996981170028448,0,0,0.035981886088848114,0,0,-0.005996981170028448,0,0.035981886088848114,0,0,-0.011993962340056896,0,0,0,0.19490189850330353,0,0,-0.0209894347935915,0,0,0.011993962340056896,0,0,0,0,0,0.014992453157901764,0,0,-0.083957739174366,0,0,0.005996981170028448,0,-0.035981886088848114,-0.002998490585014224,0,0.011993962340056896,0.07496226578950882,0,0,-0.005996981170028448,0,0,0,0,-0.023987924680113792,-0.005996981170028448,0,0,0.002998490585014224,0,0,-0.011993962340056896,0,0,0,0,-0.011993962340056896,-0.002998490585014224,0,0,0.023987924680113792,0,0,-0.008995471522212029,0,0.023987924680113792,0.026986416429281235,0,0,0,0,0,0.008995471522212029,0,-0.035981886088848114,0,0,0,0.05397283285856247,0,-0.011993962340056896,-0.029984906315803528,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/kernal/kernal_fk.txt#Page-1-4 -->\nout:keyboard:A=0 if puffer empty       - - -  A - -  A X Y\n                       RS232:status byte                  - - -  A - -  A - -\n                       serial:status byte                 - - -  A - -  A - -\n                       tape:status byte                   - - -  A - -  A - Y\n\n$FFE7  CLALL   close or abort all files\n\n- - -  - - -  A X -\n\n$FFEA  UDTIM   update jiffy clock\n\n- - -  - - -  A X -\n\n$FFED  SCREEN  return screen size\n\nout:X=columns, Y=rows                  - - -  - X Y  - X Y\n\n$FFF0  PLOT    read/set cursor position\n\nin: C=0, X=row, Y=column               - X Y  - X Y  - - -\n                   out:C=1, X=row, Y=column               - - -  - X Y  - X Y\n\n$FFF3  IOBASE  returns the addr of I/O devices\n\nout:Y/X=addr($DC00)                    - - -  - X Y  - X Y","sourcePath":"external/github.com/mist64_c64ref/src/kernal/kernal_fk.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/kernal_fk.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/kernal/kernal_fk.txt#Page-1-4"},{"name":"github.com/mist64_c64ref/src/kernal/kernal_mlr.txt","language":"asm","vector":[0,0.04044532775878906,0,0,-0.09100198745727539,0,0,0.08089065551757812,0,-0.16178131103515625,-0.030333995819091797,0,0.04044532775878906,0.010111331939697266,0,-0.08089065551757812,-0.04044532775878906,0,0.04044532775878906,0.02022266387939453,0,-0.04044532775878906,0,0,0,0.010111331939697266,0,-0.04044532775878906,-0.02022266387939453,0,0,0.05055665969848633,0,0,-0.010111331939697266,0,0,0.030333995819091797,0,0,-0.010111331939697266,0,0,0,0,0,-0.02022266387939453,0,0,0.030333995819091797,0,0,-0.02022266387939453,0,0,0.010111331939697266,0,-0.04044532775878906,-0.04044532775878906,0,0,0.04044532775878906,0,-0.04044532775878906,0,0,0,0,0,-0.04044532775878906,0,0,0,0,0,0,-0.030333995819091797,0,0,0.010111331939697266,0,-0.12133598327636719,-0.010111331939697266,0,0.04044532775878906,0,0,-0.2022266387939453,-0.12133598327636719,0,0,0.030333995819091797,0,-0.04044532775878906,-0.02022266387939453,0,0,0.02022266387939453,0,0,0,0,0.48534393310546875,0,0,-0.04044532775878906,-0.08089065551757812,0,0,0.04044532775878906,0,0,-0.060667991638183594,0,0.04044532775878906,0.030333995819091797,0,0,-0.060667991638183594,0,0,0.030333995819091797,0,0,-0.02022266387939453,0,0.2022266387939453,0,0,-0.12133598327636719,-0.010111331939697266,0,0.04044532775878906,0,0,-0.04044532775878906,0,0,0,0,0,0,-0.010111331939697266,0,0.04044532775878906,0,0,0,0,0,0.2022266387939453,0.010111331939697266,0,0,-0.02022266387939453,0,0,0,0,-0.12133598327636719,-0.02022266387939453,0,0.12133598327636719,0,0,0,-0.030333995819091797,0,0,0,0,-0.04044532775878906,-0.02022266387939453,0,0.08089065551757812,0.02022266387939453,0,-0.04044532775878906,-0.060667991638183594,0,0.08089065551757812,0.02022266387939453,0,-0.12133598327636719,-0.10111331939697266,0,0.04044532775878906,0,0,-0.08089065551757812,-0.030333995819091797,0,0.08089065551757812,0,0,0,0,0,0.04044532775878906,0.24267196655273438,0,0,-0.08089065551757812,0,0.2022266387939453,0.010111331939697266,0,-0.04044532775878906,-0.010111331939697266,0,0.04044532775878906,0.02022266387939453,0,-0.04044532775878906,0,0,0,0,0,-0.08089065551757812,-0.04044532775878906,0,0.12133598327636719,0.11122465133666992,0,0,-0.08089065551757812,0,0.04044532775878906,0.030333995819091797,0,0,-0.030333995819091797,0,0,0,0,0,-0.010111331939697266,0,0,0.02022266387939453,0,0,0,0,0,0.10111331939697266,0,-0.04044532775878906,0,0,0.04044532775878906,0,0,-0.04044532775878906,-0.060667991638183594,0,0,0.060667991638183594,0,0,0,0,0.04044532775878906,0,0,0,-0.030333995819091797,0,0.08089065551757812,0.04044532775878906,0,0,-0.030333995819091797,0,0,0.04044532775878906,0,0,-0.07077932357788086,0,0.08089065551757812,0.02022266387939453,0,-0.08089065551757812,-0.04044532775878906,0,0.04044532775878906,0.04044532775878906,0,-0.16178131103515625,-0.030333995819091797,0,0.12133598327636719,0.030333995819091797,0,0,-0.05055665969848633,0,0,0.10111331939697266,0,-0.04044532775878906,-0.030333995819091797,0,0,0.02022266387939453,0,0,-0.02022266387939453,0,0,0.12133598327636719,0,-0.04044532775878906,-0.05055665969848633,0,0,0.060667991638183594,0,0,0,0,0.04044532775878906,0.030333995819091797,0,0,0,0,0,0,0,0,0,0,0,0.05055665969848633,0,-0.04044532775878906,-0.030333995819091797,0,0,0.010111331939697266,0,-0.08089065551757812,-0.030333995819091797,0,0.08089065551757812,0.02022266387939453,0,0,-0.02022266387939453,0,0,0.010111331939697266,0,0,0,0,0,0.07077932357788086,0,-0.04044532775878906,0,0,0,0.04044532775878906,0,0,-0.030333995819091797,0,0,0.030333995819091797,0,-0.24267196655273438,0,0,0.04044532775878906,0.04044532775878906,0,-0.04044532775878906,-0.05055665969848633,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt#FF87-RAMTAS-RAMTAS -->\n$FF87  RAMTAS  RAMTAS\n\nThis routine clears zero-page RAM (locations $02-$FF) and\n               initializes Kernal memory pointers in zero page. For the 64\n               only, the routine also clears pages 2 and 3 (locations\n               $0200-$03FF), tests all RAM locations from $0400 upwards\n               until ROM is encountered, and sets the top-of-memory\n               pointer. For the 128, the routine sets the BASIC restart vector\n               ($0A00) to point to BASIC's cold-start entry address, $4000.","sourcePath":"external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/kernal_mlr.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt#FF87-RAMTAS-RAMTAS"},{"name":"github.com/mist64_c64ref/src/kernal/kernal_mlr.txt","language":"asm","vector":[0,0,0,-0.11126862466335297,-0.06490669399499893,0,0.03708954155445099,0.009272385388612747,0,0,0,0,0.18544770777225494,0,0,-0.03708954155445099,-0.009272385388612747,0,0.03708954155445099,0,0,0,-0.009272385388612747,0,0,0.009272385388612747,0,0,0,0,0,0.02781715616583824,0,0,0,0,0,0,0,0,-0.03708954155445099,0,0.11126862466335297,0,0,0,-0.08345146477222443,0,0,0.009272385388612747,0,0,0,0,0,0.009272385388612747,0,0,-0.06490669399499893,0,0,0.05563431233167648,0,-0.07417908310890198,-0.018544770777225494,0,0.07417908310890198,0.06490669399499893,0,0,0,0,0.11126862466335297,0.009272385388612747,0,0,-0.02781715616583824,0,0,0.05563431233167648,0,-0.03708954155445099,-0.03708954155445099,0,0,0,0,-0.2967163324356079,-0.16690292954444885,0,0,0.018544770777225494,0,-0.03708954155445099,-0.018544770777225494,0,0,0,0,0,-0.05563431233167648,0,0.2596267759799957,0.018544770777225494,0,-0.07417908310890198,0,0,0,0.09272385388612747,0,0,-0.018544770777225494,0,0.03708954155445099,0.018544770777225494,0,0,-0.009272385388612747,0,0,0,0,-0.03708954155445099,0,0,0.2967163324356079,0,0,-0.11126862466335297,0,0,0.03708954155445099,0,0,0,0,0,0,0.05563431233167648,0,0,0,0,0,0,0,-0.14835816621780396,0,0,0.22253724932670593,0,0,0,-0.018544770777225494,0,0,0,0,-0.03708954155445099,-0.06490669399499893,0,0.03708954155445099,0.03708954155445099,0,0,0,0,0.07417908310890198,0.05563431233167648,0,0,-0.009272385388612747,0,0,0.02781715616583824,0,-0.18544770777225494,-0.02781715616583824,0,0.03708954155445099,0.02781715616583824,0,0,-0.14835816621780396,0,0,0,0,-0.03708954155445099,-0.018544770777225494,0,0,0.02781715616583824,0,-0.03708954155445099,-0.018544770777225494,0,0.03708954155445099,0.12981338798999786,0,0,-0.12054100632667542,0,0.11126862466335297,0.009272385388612747,0,0,-0.009272385388612747,0,0,0.018544770777225494,0,0,-0.02781715616583824,0,0,0.009272385388612747,0,-0.11126862466335297,-0.018544770777225494,0,0.03708954155445099,0.1947200894355774,0,0,-0.06490669399499893,0,0.03708954155445099,0.02781715616583824,0,-0.18544770777225494,0,0,0,0,0,0,0,0,0.03708954155445099,0,0,0,-0.07417908310890198,0,0.03708954155445099,0.11126862466335297,0,-0.11126862466335297,0,0,0,0.02781715616583824,0,0,-0.018544770777225494,0,0,0.018544770777225494,0,0,0,0,0,0.03708954155445099,0,0,0,0,0,0,0,0,-0.11126862466335297,0,0,0.03708954155445099,0,0,0,0,0,0.02781715616583824,0,0,-0.018544770777225494,0,0,0,0,-0.03708954155445099,-0.02781715616583824,0,0,0.018544770777225494,0,0,-0.07417908310890198,0,0,0.05563431233167648,0,0,-0.009272385388612747,0,0,0,0,0,0,0,0,0.06490669399499893,0,0,-0.07417908310890198,0,0,0.018544770777225494,0,0,0,0,0,0.02781715616583824,0,-0.07417908310890198,-0.09272385388612747,0,0,0,0,-0.11126862466335297,-0.009272385388612747,0,0,0.09272385388612747,0,0,-0.02781715616583824,0,0,0.02781715616583824,0,-0.03708954155445099,-0.05563431233167648,0,0.11126862466335297,0,0,-0.03708954155445099,0,0,0.11126862466335297,0,0,0,-0.03708954155445099,0,0,0.05563431233167648,0,0,0,0,0.11126862466335297,0,0,-0.07417908310890198,-0.009272385388612747,0,0,0.009272385388612747,0,-0.3338058590888977,0,0,0.03708954155445099,0.018544770777225494,0,-0.03708954155445099,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt#FFDE-RDTIM-RDTIM -->\n$FFDE  RDTIM   RDTIM\n\nThis routine returns the current value of the jiffy dock. The\n               dock value corresponds to the number of jiffies (1 /60-second\n               intervals) that have elapsed since the system was turned on or\n               reset, or the number of jiffies since midnight if the dock value\n               has been set. The low byte of the clock value (location $A2) is\n               returned in .A, the middle byte (location $A1) in .X, and the\n               high byte location $A0) in .Y.","sourcePath":"external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/kernal_mlr.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt#FFDE-RDTIM-RDTIM"},{"name":"github.com/mist64_c64ref/src/kernal/kernal_mlr.txt","language":"asm","vector":[0,0.007180506829172373,0,0,-0.007180506829172373,0,0.02872202731668949,0.014361013658344746,0,-0.02872202731668949,-0.021541520953178406,0,0.05744405463337898,0.021541520953178406,0,-0.02872202731668949,-0.021541520953178406,0,0.02872202731668949,0.007180506829172373,0,-0.02872202731668949,-0.007180506829172373,0,0.02872202731668949,0.02872202731668949,0,-0.02872202731668949,0,0,0,0.050263550132513046,0,0,-0.007180506829172373,0,0,0.014361013658344746,0,0,-0.014361013658344746,0,0,0.014361013658344746,0,-0.11488810926675797,-0.007180506829172373,0,0,0.007180506829172373,0,-0.02872202731668949,0,0,0.05744405463337898,0.007180506829172373,0,-0.02872202731668949,-0.021541520953178406,0,0,0.050263550132513046,0,0,-0.014361013658344746,0,0.02872202731668949,0,0,-0.1436101347208023,-0.014361013658344746,0,0.08616608381271362,0,0,-0.1436101347208023,-0.08616608381271362,0,0.02872202731668949,0.021541520953178406,0,-0.1436101347208023,-0.014361013658344746,0,0,0,0,-0.25849825143814087,-0.20105420053005219,0,0.08616608381271362,0.014361013658344746,0,-0.02872202731668949,-0.02872202731668949,0,0.02872202731668949,0,0,-0.11488810926675797,-0.007180506829172373,0,0.3446643352508545,0.02872202731668949,0,-0.05744405463337898,-0.014361013658344746,0,0,0.02872202731668949,0,0,-0.021541520953178406,0,0.05744405463337898,0.014361013658344746,0,0,-0.014361013658344746,0,0,0.014361013658344746,0,0,-0.021541520953178406,0,0.2872202694416046,0.007180506829172373,0,-0.05744405463337898,0,0,0,0,0,0,0,0,0.02872202731668949,0.007180506829172373,0,0,-0.05744405463337898,0,0,0,0,0,-0.014361013658344746,0,0.17233216762542725,0.03590253368020058,0,0,-0.014361013658344746,0,0,0.007180506829172373,0,-0.05744405463337898,0,0,0.08616608381271362,0.014361013658344746,0,-0.02872202731668949,-0.07180506736040115,0,0.02872202731668949,0.04308304190635681,0,-0.05744405463337898,-0.07898557931184769,0,0.02872202731668949,0.03590253368020058,0,-0.02872202731668949,-0.07180506736040115,0,0.05744405463337898,0,0,-0.02872202731668949,-0.13642963767051697,0,0.02872202731668949,0.04308304190635681,0,-0.08616608381271362,-0.050263550132513046,0,0.02872202731668949,0.014361013658344746,0,-0.02872202731668949,-0.06462456285953522,0,0.05744405463337898,0.17233216762542725,0,0,-0.12924912571907043,0,0.20105420053005219,0.007180506829172373,0,-0.02872202731668949,-0.014361013658344746,0,0,0.02872202731668949,0,-0.05744405463337898,0,0,0,0.007180506829172373,0,-0.02872202731668949,-0.007180506829172373,0,0.02872202731668949,0.15797115862369537,0,0,-0.03590253368020058,0,0.02872202731668949,0.007180506829172373,0,-0.02872202731668949,-0.007180506829172373,0,0.02872202731668949,0.021541520953178406,0,-0.05744405463337898,-0.007180506829172373,0,0,0,0,0,0,0,0,0.08616608381271362,0,-0.05744405463337898,0,0,0.08616608381271362,0,0,0,-0.05744405463337898,0,0,0.04308304190635681,0,0,-0.021541520953178406,0,0,0.02872202731668949,0,0,-0.03590253368020058,0,0,0.014361013658344746,0,-0.02872202731668949,-0.014361013658344746,0,0.05744405463337898,0.03590253368020058,0,0,-0.050263550132513046,0,0,0.03590253368020058,0,-0.02872202731668949,-0.07898557931184769,0,0,0.021541520953178406,0,0,-0.050263550132513046,0,0,0.02872202731668949,0,-0.02872202731668949,-0.06462456285953522,0,0.02872202731668949,0.1220686212182045,0,0,-0.021541520953178406,0,0,0.007180506829172373,0,0,-0.05744405463337898,0,0.02872202731668949,0.08616608381271362,0,0,-0.02872202731668949,0,0,0.014361013658344746,0,0,0,0,0.02872202731668949,0.02872202731668949,0,0,-0.014361013658344746,0,0.02872202731668949,0.014361013658344746,0,0,-0.02872202731668949,0,0,0.07180506736040115,0,0,-0.014361013658344746,0,0,0,0,-0.02872202731668949,-0.02872202731668949,0,0.08616608381271362,0.050263550132513046,0,0,0,0,0,0,0,-0.02872202731668949,0,0,0,0.04308304190635681,0,-0.1436101347208023,0,0,0,0,0,-0.02872202731668949,-0.02872202731668949,0,0,0.050263550132513046,0,-0.40210840106010437,-0.007180506829172373,0,0.02872202731668949,0.007180506829172373,0,-0.05744405463337898,-0.02872202731668949,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt#FFBA-SETLFS-SETLFS -->\n$FFBA  SETLFS  SETLFS\n\nThis routine assigns the logical file number (location $B8), de-\n               vice number (location $BA), and secondary address location\n               $B9) for the current I/O operation. Call the routine with the\n               accumulator holding the logical file number, .X holding the\n               device number, and .Y holding the secondary address. All reg-\n               ister values are preserved during the routine. Refer to the\n               LOAD and SAVE routines for the special significance of the\n               secondary address in those cases. When OPENing files to se-\n               rial devices, it's vital that each logical file have a unique\n               secondary address, In the 128 Kernal, the LKUPLA and\n               LKUPSA routines can be used to find unused logical file num-\n               bers and secondary addresses.","sourcePath":"external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/kernal_mlr.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt#FFBA-SETLFS-SETLFS"},{"name":"github.com/mist64_c64ref/src/kernal/kernal_mlr.txt","language":"asm","vector":[0,0,0,0,-0.052346374839544296,0,0.10469274967908859,0.026173187419772148,0,-0.0348975844681263,-0.052346374839544296,0,0.0348975844681263,0.01744879223406315,0,0,0,0,0.0348975844681263,0.061070773750543594,0,0,-0.008724396117031574,0,0,0.01744879223406315,0,0,0,0,0,0.0348975844681263,0,0,0,0,0,0,0,0,-0.008724396117031574,0,0,0.01744879223406315,0,-0.0348975844681263,-0.052346374839544296,0,0,0.008724396117031574,0,0,0,0,0.0348975844681263,0.008724396117031574,0,-0.0348975844681263,-0.01744879223406315,0,0,0.0348975844681263,0,0,-0.01744879223406315,0,0.0348975844681263,0.008724396117031574,0,0,0,0,0.0348975844681263,0.008724396117031574,0,0,-0.061070773750543594,0,0,0,0,-0.1395903378725052,0,0,0,0,0,-0.20938549935817719,-0.20938549935817719,0,0,0.0348975844681263,0,-0.0348975844681263,-0.052346374839544296,0,0.0697951689362526,0,0,0,0,0,0.31407827138900757,0.0697951689362526,0,-0.0348975844681263,-0.01744879223406315,0,0,0.026173187419772148,0,-0.0348975844681263,0,0,0.10469274967908859,0.01744879223406315,0,0,-0.008724396117031574,0,0.1395903378725052,0.008724396117031574,0,0,-0.01744879223406315,0,0.3489758372306824,0.008724396117031574,0,-0.10469274967908859,0,0,0,0.01744879223406315,0,0,0,0,0.0348975844681263,0,0,0,-0.01744879223406315,0,0,0.008724396117031574,0,-0.0697951689362526,0,0,0.20938549935817719,0.01744879223406315,0,0,-0.01744879223406315,0,0,0.008724396117031574,0,0,-0.01744879223406315,0,0.10469274967908859,0.01744879223406315,0,-0.10469274967908859,0,0,0.0697951689362526,0.01744879223406315,0,0,0,0,0,0.01744879223406315,0,-0.1395903378725052,-0.0697951689362526,0,0.0348975844681263,0,0,-0.0697951689362526,-0.10469274967908859,0,0,0,0,0,-0.0348975844681263,0,0.10469274967908859,0.0348975844681263,0,-0.0348975844681263,0,0,0.0697951689362526,0.15703913569450378,0,0,-0.12214154750108719,0,0.0697951689362526,0.01744879223406315,0,0,-0.0436219796538353,0,0,0.052346374839544296,0,-0.0348975844681263,0,0,0,0.09596835821866989,0,-0.0697951689362526,-0.008724396117031574,0,0.0348975844681263,0.1832123100757599,0,0,-0.052346374839544296,0,0.0348975844681263,0.008724396117031574,0,-0.0697951689362526,0,0,0,0.01744879223406315,0,-0.0697951689362526,0,0,0.0348975844681263,0,0,0,-0.0348975844681263,0,0.0348975844681263,0.10469274967908859,0,-0.10469274967908859,0,0,0,0,0,0,-0.008724396117031574,0,0,0.052346374839544296,0,0,-0.052346374839544296,0,0,0.0436219796538353,0,0,-0.008724396117031574,0,0,0,0,0,-0.0697951689362526,0,0.0697951689362526,0.026173187419772148,0,0,-0.0348975844681263,0,0.0348975844681263,0.008724396117031574,0,0,0,0,0,0.052346374839544296,0,-0.0348975844681263,-0.052346374839544296,0,0.0348975844681263,0.0348975844681263,0,-0.0697951689362526,-0.052346374839544296,0,0.0348975844681263,0.0348975844681263,0,0,-0.008724396117031574,0,0.0697951689362526,0.01744879223406315,0,0,-0.01744879223406315,0,0,0.07851956784725189,0,0,-0.0436219796538353,0,0.0348975844681263,0.01744879223406315,0,0,-0.008724396117031574,0,0,0.0436219796538353,0,0,-0.0348975844681263,0,0.0348975844681263,0.0348975844681263,0,-0.0697951689362526,-0.0348975844681263,0,0,0.10469274967908859,0,0,-0.026173187419772148,0,0,0.01744879223406315,0,0,-0.052346374839544296,0,0.0697951689362526,0.008724396117031574,0,0,0,0,0,0,0,0,-0.01744879223406315,0,0,0.052346374839544296,0,-0.0697951689362526,0,0,0,0,0,0,0,0,0,0.061070773750543594,0,-0.41877099871635437,-0.026173187419772148,0,0.0697951689362526,0.0348975844681263,0,-0.10469274967908859,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt#FFBD-SETNAM-SETNAM -->\n$FFBD  SETNAM  SETNAM\n\nThis routine assigns the length (location $B7) and address\n               locations $BB-$BC) of the filename for the current I/O opera-\n               tion. Call the routine with the length of the filename in .A and\n               the address of the first character of the name in .X (low byte)\n               and .Y (high byte). If no name is used for the current opera-\n               tion, load the accumulator with 0; the values in .X and .Y are\n               then irrelevant, All register values are preserved during this\n               routine.","sourcePath":"external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/kernal_mlr.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt#FFBD-SETNAM-SETNAM"},{"name":"github.com/mist64_c64ref/src/kernal/kernal_mlr.txt","language":"asm","vector":[0.16816969215869904,0,0,-0.04204242303967476,0,0,0,0.052553027868270874,0,-0.04204242303967476,-0.031531814485788345,0,0.04204242303967476,0,0,0,-0.04204242303967476,0,0.12612725794315338,0,0,0,-0.01051060575991869,0,0.04204242303967476,0.01051060575991869,0,0,-0.02102121151983738,0,0,0.031531814485788345,0,0,-0.01051060575991869,0,0,0,0,0,0,0,0.08408484607934952,0,0,0,-0.08408484607934952,0,0,0.01051060575991869,0,0,0,0,0.08408484607934952,0,0,0,-0.08408484607934952,0,0,0.06306362897157669,0,-0.08408484607934952,0,0,0,0.02102121151983738,0,0,0,0,0.08408484607934952,0,0,0,-0.06306362897157669,0,0,0.01051060575991869,0,-0.08408484607934952,0,0,0.04204242303967476,0,0,-0.2102121114730835,-0.16816969215869904,0,0,0,0,-0.04204242303967476,-0.02102121151983738,0,0,0.08408484607934952,0,-0.04204242303967476,-0.031531814485788345,0,0.33633938431739807,0,0,-0.04204242303967476,-0.02102121151983738,0,0,0.02102121151983738,0,0,0,0,0.04204242303967476,0.06306362897157669,0,0,0,0,0,0.04204242303967476,0,-0.04204242303967476,-0.01051060575991869,0,0.2942969501018524,0,0,-0.12612725794315338,0,0,0,0,0,0,0,0,0,0.04204242303967476,0,0,-0.01051060575991869,0,0,0,0,-0.12612725794315338,0,0,0.2102121114730835,0.04204242303967476,0,0,0,0,0,0,0,0,-0.0735742375254631,0,0.04204242303967476,0,0,-0.04204242303967476,0,0,0.04204242303967476,0.04204242303967476,0,0,-0.01051060575991869,0,0,0.031531814485788345,0,0,-0.04204242303967476,0,0.04204242303967476,0.031531814485788345,0,-0.04204242303967476,-0.10510605573654175,0,0,0,0,-0.16816969215869904,-0.031531814485788345,0,0,0,0,-0.04204242303967476,-0.02102121151983738,0,0.04204242303967476,0.16816969215869904,0,0,-0.10510605573654175,0,0.12612725794315338,0,0,-0.04204242303967476,-0.01051060575991869,0,0,0.06306362897157669,0,0,-0.01051060575991869,0,0,0,0,-0.08408484607934952,-0.031531814485788345,0,0.04204242303967476,0.15765908360481262,0,0,-0.06306362897157669,0,0,0.031531814485788345,0,-0.25225451588630676,0,0,0,0.01051060575991869,0,0,0,0,0,0,0,0,-0.06306362897157669,0,0,0.10510605573654175,0,-0.16816969215869904,0,0,0.04204242303967476,0.02102121151983738,0,0,0,0,0,0.02102121151983738,0,0,-0.02102121151983738,0,0,0.04204242303967476,0,0,0,0,0,0,0,-0.04204242303967476,-0.02102121151983738,0,0,0.02102121151983738,0,0,-0.02102121151983738,0,0,0.02102121151983738,0,0,-0.08408484607934952,0,0,0,0,0,-0.04204242303967476,0,0.08408484607934952,0.031531814485788345,0,-0.04204242303967476,-0.052553027868270874,0,0,0.06306362897157669,0,0,-0.031531814485788345,0,0,0,0,0,-0.01051060575991869,0,0,0.08408484607934952,0,-0.04204242303967476,-0.052553027868270874,0,0,0.02102121151983738,0,0,0,0,0,0.01051060575991869,0,0,-0.12612725794315338,0,0,0,0,-0.12612725794315338,-0.01051060575991869,0,0,0.0735742375254631,0,0,-0.031531814485788345,0,0,0,0,-0.04204242303967476,-0.08408484607934952,0,0.12612725794315338,0.02102121151983738,0,0,0,0,0.04204242303967476,0,0,0,-0.031531814485788345,0,0,0.052553027868270874,0,-0.04204242303967476,0,0,0,0,0,0,-0.02102121151983738,0,0,0.01051060575991869,0,-0.33633938431739807,-0.01051060575991869,0,0,0.01051060575991869,0,-0.04204242303967476,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt#FFDB-SETTIM-SETTIM -->\n$FFDB  SETTIM  SETTIM\n\nThis routine sets the value in the software jiffy dock. The\n               value in the accumulator is transferred to the low byte (loca-\n               tion $A2), the value in .X to the middle byte (location $A1),\n               and the value in .Y to the high byte (location $A0). The speci-\n               fied value should be less than $4F1A01, which corresponds to\n               24:00:00 hours.","sourcePath":"external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/kernal_mlr.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt#FFDB-SETTIM-SETTIM"},{"name":"github.com/mist64_c64ref/src/kernal/kernal_mlr.txt","language":"asm","vector":[0,0.020948437973856926,0,0,-0.020948437973856926,0,0.04189687594771385,0.09426797181367874,0,0,-0.010474218986928463,0,0.12569063901901245,0.010474218986928463,0,-0.0837937518954277,-0.010474218986928463,0,0.04189687594771385,0,0,0,-0.020948437973856926,0,0,0.03142265975475311,0,-0.04189687594771385,0,0,0,0.07331953197717667,0,0,-0.020948437973856926,0,0,0,0,-0.0837937518954277,-0.010474218986928463,0,0.1675875037908554,0,0,0,-0.03142265975475311,0,0,0.020948437973856926,0,-0.3351750075817108,0,0,0.0837937518954277,0.03142265975475311,0,0,-0.010474218986928463,0,0,0.06284531950950623,0,0,-0.010474218986928463,0,0.04189687594771385,0,0,-0.04189687594771385,0,0,0.12569063901901245,0.020948437973856926,0,0,0,0,0,0.020948437973856926,0,-0.1675875037908554,0,0,0.04189687594771385,0.010474218986928463,0,-0.0837937518954277,-0.06284531950950623,0,0,0.010474218986928463,0,-0.04189687594771385,-0.020948437973856926,0,0,0,0,0,0,0,0.37707188725471497,0.020948437973856926,0,-0.04189687594771385,-0.010474218986928463,0,0.04189687594771385,0.06284531950950623,0,0,-0.04189687594771385,0,0.0837937518954277,0.03142265975475311,0,0,-0.010474218986928463,0,0,0.010474218986928463,0,0,-0.020948437973856926,0,0.2513812780380249,0,0,-0.04189687594771385,0,0,0,0,0,-0.04189687594771385,-0.05237109586596489,0,0,0.09426797181367874,0,0,0,0,0.04189687594771385,0.020948437973856926,0,0,-0.1675875037908554,0,0.20948438346385956,0.04189687594771385,0,0,0,0,0.04189687594771385,0,0,-0.0837937518954277,0,0,0.12569063901901245,0.020948437973856926,0,0,-0.020948437973856926,0,0,0.07331953197717667,0,0,0,0,0,0.03142265975475311,0,0,-0.0837937518954277,0,0.29327812790870667,0.020948437973856926,0,-0.04189687594771385,-0.04189687594771385,0,0.04189687594771385,0.010474218986928463,0,-0.04189687594771385,-0.020948437973856926,0,0,0.010474218986928463,0,0,0,0,0.04189687594771385,0.18853594362735748,0,0,-0.05237109586596489,0,0.12569063901901245,0.020948437973856926,0,-0.0837937518954277,-0.010474218986928463,0,0,0.04189687594771385,0,-0.04189687594771385,0,0,0,0.010474218986928463,0,-0.12569063901901245,0,0,0.0837937518954277,0.15711328387260437,0,0,-0.04189687594771385,0,0.04189687594771385,0.010474218986928463,0,-0.04189687594771385,-0.020948437973856926,0,0,0,0,-0.04189687594771385,-0.010474218986928463,0,0,0.020948437973856926,0,0,0,0,0,0.10474219173192978,0,0,-0.020948437973856926,0,0,0.06284531950950623,0,0,-0.04189687594771385,0,0.04189687594771385,0.06284531950950623,0,0,-0.0837937518954277,0,0.04189687594771385,0.020948437973856926,0,0,0,0,0,0,0,0,0,0,0,0.15711328387260437,0,-0.04189687594771385,-0.03142265975475311,0,0,0.05237109586596489,0,0,-0.020948437973856926,0,0.04189687594771385,0,0,-0.04189687594771385,-0.04189687594771385,0,0.04189687594771385,0.03142265975475311,0,0,-0.020948437973856926,0,0,0.06284531950950623,0,0,-0.05237109586596489,0,0,0,0,-0.04189687594771385,-0.020948437973856926,0,0.04189687594771385,0.09426797181367874,0,0,-0.07331953197717667,0,0.0837937518954277,0.05237109586596489,0,0,0,0,0,0.04189687594771385,0,0,-0.020948437973856926,0,0,0,0,0,-0.020948437973856926,0,0,0.06284531950950623,0,0,-0.010474218986928463,0,0.04189687594771385,0,0,0,-0.010474218986928463,0,0.12569063901901245,0,0,0,0,0,0,0.03142265975475311,0,0,0,0,0.04189687594771385,0.07331953197717667,0,0,0,0,0.04189687594771385,0.010474218986928463,0,0,-0.020948437973856926,0,0,0.03142265975475311,0,-0.12569063901901245,-0.020948437973856926,0,0,0,0,-0.04189687594771385,0,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt#FF5F-SWAPPER-SWAPPER -->\n$FF5F  SWAPPER SWAPPER\n\nThis routine switches active screen displays. The active display\n               is the one which has a live cursor, and to which screen\n               CHROUT output is directed. The routine exchanges the active\n               and inactive screen-editor variable tables, tab-stop bitmaps,\n               and line-link bitmaps; and it toggles the active screen flag\n               (location $D7). The routine doesn't physically tum either\n               video chip on or off‚Äîboth chips always remain enabled.","sourcePath":"external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/kernal_mlr.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/kernal/kernal_mlr.txt#FF5F-SWAPPER-SWAPPER"},{"name":"github.com/mist64_c64ref/src/kernal/kernal_pm.txt","language":"asm","vector":[0.03999200090765953,0,0,0,-0.06498700380325317,0,0.03999200090765953,0.004999000113457441,0,-0.059988003224134445,-0.04499100148677826,0,0.019996000453829765,0,0,-0.019996000453829765,-0.07498500496149063,0,0.15996800363063812,0.009998000226914883,0,-0.019996000453829765,-0.009998000226914883,0,0,0.014997000806033611,0,0,-0.009998000226914883,0,0,0.13497300446033478,0,-0.019996000453829765,-0.004999000113457441,0,0,0.009998000226914883,0,0,0,0,0.03999200090765953,0.009998000226914883,0,-0.059988003224134445,-0.04999000206589699,0,0,0.009998000226914883,0,-0.019996000453829765,0,0,0.07998400181531906,0.014997000806033611,0,0,-0.04499100148677826,0,0,0.04499100148677826,0,0,-0.024995001032948494,0,0.03999200090765953,0.019996000453829765,0,-0.11997600644826889,-0.024995001032948494,0,0,0,0,0,-0.014997000806033611,0,0.019996000453829765,0.029994001612067223,0,-0.07998400181531906,-0.004999000113457441,0,0,0,0,-0.03999200090765953,-0.15996800363063812,0,0,0.009998000226914883,0,-0.019996000453829765,-0.05498900264501572,0,0,0.024995001032948494,0,-0.03999200090765953,0,0,0.11997600644826889,0.019996000453829765,0,-0.059988003224134445,-0.029994001612067223,0,0.019996000453829765,0.014997000806033611,0,-0.019996000453829765,-0.009998000226914883,0,0.019996000453829765,0.07998400181531906,0,0,-0.029994001612067223,0,0.059988003224134445,0,0,0,-0.004999000113457441,0,0.3799240291118622,0,0,-0.07998400181531906,-0.024995001032948494,0,0.03999200090765953,0.004999000113457441,0,-0.019996000453829765,0,0,0.07998400181531906,0.024995001032948494,0,0,-0.029994001612067223,0,0,0.029994001612067223,0,-0.11997600644826889,-0.009998000226914883,0,0.2799440026283264,0.03999200090765953,0,0,0,0,0,0.004999000113457441,0,-0.03999200090765953,0,0,0.019996000453829765,0.019996000453829765,0,0,-0.059988003224134445,0,0.09998000413179398,0,0,-0.019996000453829765,-0.009998000226914883,0,0,0.029994001612067223,0,-0.09998000413179398,-0.04499100148677826,0,0.019996000453829765,0.009998000226914883,0,-0.1399720013141632,-0.029994001612067223,0,0,0,0,-0.17996400594711304,-0.009998000226914883,0,0,0.009998000226914883,0,-0.03999200090765953,-0.019996000453829765,0,0.019996000453829765,0.059988003224134445,0,-0.03999200090765953,-0.104979008436203,0,0.2999400198459625,0.014997000806033611,0,-0.019996000453829765,-0.029994001612067223,0,0.03999200090765953,0.019996000453829765,0,0,0,0,0,0.03999200090765953,0,-0.19996000826358795,-0.014997000806033611,0,0.03999200090765953,0.19496101140975952,0,0,-0.04499100148677826,0,0.059988003224134445,0.059988003224134445,0,-0.09998000413179398,-0.014997000806033611,0,0.019996000453829765,0.03999200090765953,0,-0.059988003224134445,0,0,0,0,0,-0.019996000453829765,-0.06498700380325317,0,0,0.1399720013141632,0,-0.059988003224134445,0,0,0.03999200090765953,0.009998000226914883,0,-0.019996000453829765,-0.0349930003285408,0,0,0.009998000226914883,0,-0.03999200090765953,-0.004999000113457441,0,0,0.0699860006570816,0,-0.059988003224134445,-0.009998000226914883,0,0.019996000453829765,0,0,0,-0.04999000206589699,0,0,0.019996000453829765,0,0,-0.09998000413179398,0,0.019996000453829765,0,0,0,-0.08998200297355652,0,0,0.004999000113457441,0,-0.07998400181531906,-0.03999200090765953,0,0,0.009998000226914883,0,-0.019996000453829765,-0.029994001612067223,0,0,0.14997000992298126,0,-0.059988003224134445,-0.014997000806033611,0,0.019996000453829765,0.019996000453829765,0,0,-0.009998000226914883,0,0.019996000453829765,0.029994001612067223,0,0,-0.11497700959444046,0,0.11997600644826889,0.024995001032948494,0,0,-0.004999000113457441,0,0,0.0349930003285408,0,0,-0.04999000206589699,0,0.019996000453829765,0.024995001032948494,0,0,-0.029994001612067223,0,0,0.09498100727796555,0,0,-0.029994001612067223,0,0,0.009998000226914883,0,-0.03999200090765953,-0.0349930003285408,0,0.07998400181531906,0.03999200090765953,0,-0.019996000453829765,-0.009998000226914883,0,0.03999200090765953,0,0,-0.03999200090765953,-0.04999000206589699,0,0,0.0699860006570816,0,0,-0.029994001612067223,0,0.03999200090765953,0.009998000226914883,0,0,-0.009998000226914883,0,0,0.004999000113457441,0,-0.2999400198459625,0,0,0.019996000453829765,0.0349930003285408,0,-0.07998400181531906,-0.004999000113457441,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/kernal/kernal_pm.txt#Page-1-7 -->\nMEMTOP. Same principle as MEMBOT, except the top of RAM is affected.\n               \n                   ;Protect 1K of memory from BASIC.\n                        SEC\n                        JSR MEMTOP\n                        DEY\n                        CLC\n                        JSR MEMTOP\n                   ;The accumulator is left alone.\n               \n$FFC0  OPEN    Open a logical file.\n\nOPEN. After SETLFS and SETNAM have been called, you can OPEN a logical file.\n               \n                   ;Duplicate the command OPEN 15,8,15,'I/O'\n                        LDA #3\n                        LDX #L,NAME\n                        LDY #H,NAME\n                        JSR SETNAM\n                        LDA #15\n                        LDX #8\n                        LDY #15\n                        JSR SETLFS\n                        JSR OPEN\n                        RTS\n                   NAME .BY 'I/O'\n                   ;OPEN opens the current name file with the current LFS.\n               \n$FFF0  PLOT    Read/set X,Y cursor position.\n\nPLOT. If the carry bit of the accumulator is set, then the cursor X,Y is returned in the Y and X registers. If the carry bit is clear, then the cursor is moved to X,Y as determined by the Y and X registers.\n               \n                   ;Move cursor to row 12, column 20 (12,20).\n                        LDX #12\n                        LDY #20\n                        CLC\n                        JSR PLOT\n                   ;The cursor is now in the middle of the screen.\n               \n$FF87  RAMTAS  Initialize RAM, reset tape buffer.","sourcePath":"external/github.com/mist64_c64ref/src/kernal/kernal_pm.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/kernal_pm.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/kernal/kernal_pm.txt#Page-1-7"},{"name":"github.com/mist64_c64ref/src/kernal/kernal_pm.txt","language":"asm","vector":[0,0.018895223736763,0,0,-0.04408885911107063,0,0.025193633511662483,0.006298408377915621,0,0,-0.018895223736763,0,0.050387267023324966,0.025193633511662483,0,0,-0.050387267023324966,0,0.12596815824508667,0.025193633511662483,0,0,-0.006298408377915621,0,0,0.006298408377915621,0,0,-0.018895223736763,0,0.050387267023324966,0.15746021270751953,0,-0.025193633511662483,0,0,0.075580894947052,0.018895223736763,0,0,0,0,0.025193633511662483,0,0,-0.050387267023324966,-0.03149203956127167,0,0,0.006298408377915621,0,-0.050387267023324966,0,0,0.025193633511662483,0.025193633511662483,0,0,-0.050387267023324966,0,0,0,0,0,-0.06298407912254333,0,0.025193633511662483,0,0,-0.10077453404664993,-0.012596816755831242,0,0,0.012596816755831242,0,-0.075580894947052,-0.11966975778341293,0,0.025193633511662483,0.08187931030988693,0,-0.12596815824508667,-0.012596816755831242,0,0,0,0,-0.075580894947052,-0.11966975778341293,0,0,0.006298408377915621,0,-0.025193633511662483,-0.037790447473526,0,0.050387267023324966,0,0,-0.050387267023324966,-0.018895223736763,0,0.17635543644428253,0.018895223736763,0,-0.025193633511662483,0,0,0,0.025193633511662483,0,0,0,0,0.12596815824508667,0.06928248703479767,0,-0.025193633511662483,-0.012596816755831242,0,0.075580894947052,0,0,-0.025193633511662483,-0.006298408377915621,0,0.40309813618659973,0.03149203956127167,0,0,-0.025193633511662483,0,0.075580894947052,0.050387267023324966,0,-0.075580894947052,0,0,0,0.012596816755831242,0,0,-0.025193633511662483,0,0.025193633511662483,0.037790447473526,0,-0.050387267023324966,-0.025193633511662483,0,0.20154906809329987,0.012596816755831242,0,0,0,0,0.025193633511662483,0,0,0,-0.006298408377915621,0,0,0.012596816755831242,0,-0.025193633511662483,-0.050387267023324966,0,0.050387267023324966,0,0,-0.050387267023324966,-0.050387267023324966,0,0.025193633511662483,0.012596816755831242,0,-0.075580894947052,-0.08817771822214127,0,0.025193633511662483,0,0,-0.025193633511662483,-0.04408885911107063,0,0.050387267023324966,0.006298408377915621,0,-0.10077453404664993,-0.06928248703479767,0,0,0.06298407912254333,0,-0.025193633511662483,-0.025193633511662483,0,0.025193633511662483,0.08817771822214127,0,-0.075580894947052,-0.06928248703479767,0,0.32751724123954773,0,0,0,-0.012596816755831242,0,0.075580894947052,0.06298407912254333,0,0,-0.012596816755831242,0,0,0.04408885911107063,0,-0.075580894947052,-0.012596816755831242,0,0.025193633511662483,0.21414588391780853,0,0,0,0,0.10077453404664993,0.06928248703479767,0,-0.10077453404664993,-0.037790447473526,0,0,0,0,-0.050387267023324966,0,0,0,0.025193633511662483,0,0,-0.03149203956127167,0,0,0.11966975778341293,0,-0.025193633511662483,0,0,0.025193633511662483,0.018895223736763,0,-0.050387267023324966,-0.012596816755831242,0,0,0,0,-0.025193633511662483,-0.025193633511662483,0,0.025193633511662483,0.03149203956127167,0,-0.050387267023324966,-0.025193633511662483,0,0,0.012596816755831242,0,-0.075580894947052,-0.037790447473526,0,0.025193633511662483,0.018895223736763,0,0,-0.037790447473526,0,0,0.025193633511662483,0,0,-0.06928248703479767,0,0.025193633511662483,0.006298408377915621,0,-0.050387267023324966,-0.04408885911107063,0,0,0.012596816755831242,0,-0.025193633511662483,-0.0566856749355793,0,0.025193633511662483,0.16375862061977386,0,-0.050387267023324966,-0.006298408377915621,0,0.050387267023324966,0.050387267023324966,0,0,-0.012596816755831242,0,0,0.04408885911107063,0,0,-0.04408885911107063,0,0.151161789894104,0.012596816755831242,0,0,0,0,0,0.08187931030988693,0,0,-0.0566856749355793,0,0,0.018895223736763,0,-0.025193633511662483,-0.03149203956127167,0,0,0.10077453404664993,0,0,0,0,0,0.018895223736763,0,-0.050387267023324966,-0.03149203956127167,0,0,0.012596816755831242,0,-0.10077453404664993,-0.025193633511662483,0,0,0.006298408377915621,0,-0.025193633511662483,-0.025193633511662483,0,0.025193633511662483,0.06298407912254333,0,-0.2267426997423172,-0.025193633511662483,0,0.151161789894104,0.006298408377915621,0,0,-0.037790447473526,0,0,0.012596816755831242,0,-0.2267426997423172,-0.006298408377915621,0,0,0.012596816755831242,0,-0.050387267023324966,-0.012596816755831242,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/kernal/kernal_pm.txt#Page-1-9 -->\nSCREEN returns the number of columns and rows the screen has in the X and Y registers.\n               \n                   ;Determine the screen size.\n                        JSR SCREEN\n                        STX MAXCOL\n                        STY MAXROW\n                        RTS\n                   ;SCREEN allows further compatibility between the 64, the VIC-20, and future versions of the 64.\n\n$FF93  SECOND  Send secondary address after LISTEN.\n               \n               SECOND. After LISTEN has been called, a SECONDary address may be sent.\n               \n                   ;Address device #8 with secondary address #15.\n                        LDA #8\n                        JSR LISTEN\n                        LDA #15\n                        JSR SECOND\n                   ;The accumulator designates the address number.\n               \n$FFBA  SETLFS  Set logical, first, and second address.\n\nSETLFS stands for SET Logical address, File address, and Secondary address. After SETLFS is called, OPEN may be called.\n               \n                   ;Set logical file #1, device #8, secondary address of 15.\n                        LDA #1\n                        LDX #8\n                        LDY #15\n                        JSR SETLFS\n                   ;If OPEN is called, the command will be OPEN 1,8,15.\n               \n$FF90  SETMSG  Control Kernal messages.","sourcePath":"external/github.com/mist64_c64ref/src/kernal/kernal_pm.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/kernal_pm.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/kernal/kernal_pm.txt#Page-1-9"},{"name":"github.com/mist64_c64ref/src/kernal/kernal_pm.txt","language":"asm","vector":[0.09672486037015915,0.012090607546269894,0,0,-0.048362430185079575,0,0.048362430185079575,0.018135912716388702,0,0,0,0,0.09672486037015915,0.024181215092539787,0,-0.12090607732534409,-0.018135912716388702,0,0.12090607732534409,0.012090607546269894,0,0,-0.006045303773134947,0,0.024181215092539787,0.036271825432777405,0,0,-0.006045303773134947,0,0.07254365086555481,0.1753138154745102,0,-0.048362430185079575,0,0,0.024181215092539787,0.018135912716388702,0,0,-0.018135912716388702,0,0,0.03022651933133602,0,-0.024181215092539787,-0.06649834662675858,0,0,0.006045303773134947,0,0,0,0,0.024181215092539787,0,0,0,-0.03022651933133602,0,0,0.012090607546269894,0,-0.048362430185079575,-0.06045303866267204,0,0.07254365086555481,0.006045303773134947,0,-0.12090607732534409,0,0,0,0.012090607546269894,0,0,-0.012090607546269894,0,0,0.07254365086555481,0,-0.024181215092539787,-0.006045303773134947,0,0,0.012090607546269894,0,-0.048362430185079575,-0.06045303866267204,0,0.024181215092539787,0.03022651933133602,0,-0.024181215092539787,-0.018135912716388702,0,0,0.048362430185079575,0,0,-0.012090607546269894,0,0.1934497207403183,0.03022651933133602,0,-0.024181215092539787,-0.006045303773134947,0,0,0.05440773442387581,0,0,-0.06649834662675858,0,0.048362430185079575,0.06649834662675858,0,0,-0.012090607546269894,0,0.12090607732534409,0.012090607546269894,0,-0.048362430185079575,0,0,0.43526187539100647,0.048362430185079575,0,-0.07254365086555481,-0.024181215092539787,0,0,0.018135912716388702,0,-0.12090607732534409,0,0,0.024181215092539787,0.012090607546269894,0,0,-0.012090607546269894,0,0,0.048362430185079575,0,-0.07254365086555481,0,0,0.1934497207403183,0.012090607546269894,0,0,0,0,0,0.012090607546269894,0,0,-0.036271825432777405,0,0.024181215092539787,0.036271825432777405,0,-0.09672486037015915,-0.06045303866267204,0,0.024181215092539787,0,0,-0.07254365086555481,-0.012090607546269894,0,0,0.006045303773134947,0,-0.09672486037015915,-0.018135912716388702,0,0.07254365086555481,0,0,0,-0.024181215092539787,0,0,0.012090607546269894,0,-0.07254365086555481,-0.018135912716388702,0,0,0.036271825432777405,0,-0.024181215092539787,0,0,0.048362430185079575,0.09672486037015915,0,-0.024181215092539787,-0.04231712967157364,0,0.3143558204174042,0.012090607546269894,0,0,-0.006045303773134947,0,0.07254365086555481,0.048362430185079575,0,-0.07254365086555481,0,0,0.024181215092539787,0.07254365086555481,0,-0.16926851868629456,-0.024181215092539787,0,0.024181215092539787,0.24181215465068817,0,0,-0.06649834662675858,0,0,0.03022651933133602,0,-0.024181215092539787,-0.06045303866267204,0,0,0.018135912716388702,0,-0.1934497207403183,0,0,0.024181215092539787,0.018135912716388702,0,0,-0.048362430185079575,0,0.048362430185079575,0.10277016460895538,0,0,0,0,0,0,0,-0.024181215092539787,-0.006045303773134947,0,0.048362430185079575,0.012090607546269894,0,0,-0.048362430185079575,0,0.024181215092539787,0.018135912716388702,0,-0.024181215092539787,-0.036271825432777405,0,0,0,0,-0.048362430185079575,-0.06045303866267204,0,0.024181215092539787,0.05440773442387581,0,-0.024181215092539787,-0.03022651933133602,0,0.024181215092539787,0,0,-0.024181215092539787,-0.036271825432777405,0,0.024181215092539787,0,0,-0.048362430185079575,-0.018135912716388702,0,0,0.024181215092539787,0,0,-0.024181215092539787,0,0.048362430185079575,0.16322320699691772,0,0,-0.006045303773134947,0,0.024181215092539787,0.036271825432777405,0,0,-0.036271825432777405,0,0.048362430185079575,0.06045303866267204,0,0,-0.09067956358194351,0,0.1934497207403183,0.012090607546269894,0,0,0,0,0,0.012090607546269894,0,0,-0.012090607546269894,0,0.048362430185079575,0.03022651933133602,0,-0.048362430185079575,-0.10881546884775162,0,0,0.12090607732534409,0,0,-0.018135912716388702,0,0,0.024181215092539787,0,-0.048362430185079575,-0.03022651933133602,0,0.024181215092539787,0.006045303773134947,0,-0.024181215092539787,-0.012090607546269894,0,0,0.024181215092539787,0,0,-0.018135912716388702,0,0,0.06045303866267204,0,-0.024181215092539787,-0.012090607546269894,0,0.14508730173110962,0,0,0,-0.024181215092539787,0,0,0.018135912716388702,0,-0.12090607732534409,-0.036271825432777405,0,0.048362430185079575,0.018135912716388702,0,-0.024181215092539787,-0.03022651933133602,0],"text":"<!-- Source: external/github.com/mist64_c64ref/src/kernal/kernal_pm.txt#Page-1-10 -->\nSETMSG. Depending on the accumulator, either error messages, control messages, or neither is printed.\n               \n                   ;Turn on control messages.\n                        LDA #$40\n                        JSR SETMSG\n                        RTS\n                   ;A 128 is for error messages; a zero, for turning both off.\n               \n$FFBD  SETNAM  Set filename.\n\nSETNAM. In order to access the OPEN, LOAD, or SAVE routines, SETNAM must be called first.\n               \n                   ;SETNAM will prepare the disk drive for'FILE#1'.\n                        LDA #6\n                        LDX #L,NAME\n                        LDY #H,NAME\n                        JSR SETNAM\n                   NAME .BY 'FILE#1'\n                   ;Accumulator is file length, X is low byte, and Y is high byte.\n               \n$FFDB  SETTIM  Set realtime clock.\n\nSETTIM is the opposite of RDTIM: it SETs the system clock instead of ReaDing it.\n               \n                   ;Set system clock to 10 minutes =3600 jiffies.\n                        LDA #0\n                        LDX #L,3600\n                        LDY #H,3600\n                        JSR SETTIM\n                   ;This allows very accurate timing for many things.\n               \n$FFA2  SETTMO  Set time-out on serial bus.","sourcePath":"external/github.com/mist64_c64ref/src/kernal/kernal_pm.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/kernal_pm.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)","origin":"external/github.com/mist64_c64ref/src/kernal/kernal_pm.txt#Page-1-10"},{"name":"github.com/nealvis_c64_samples_kick/sprites_display/space_sprites.txt","language":"asm","vector":[0,0.003315623616799712,0,0,-0.0049734353087842464,0,0,0.0049734353087842464,0,0,-0.07791715860366821,0,0.006631247233599424,0,0,-0.006631247233599424,0,0,0.04641873016953468,0.009946870617568493,0,-0.03978748247027397,-0.003315623616799712,0,0,0.006631247233599424,0,0,0,0,0.006631247233599424,0.2503295838832855,0,0,-0.006631247233599424,0,0,0.003315623616799712,0,-0.013262494467198849,0,0,0,0.0049734353087842464,0,-0.013262494467198849,-0.053049977868795395,0,0.019893741235136986,0.003315623616799712,0,0,-0.003315623616799712,0,0,0.001657811808399856,0,0,-0.01160468254238367,0,0,0.02320936508476734,0,-0.006631247233599424,0,0,0.006631247233599424,0,0,0,-0.02320936508476734,0,0,0,0,0,-0.003315623616799712,0,0.006631247233599424,0,0,0,-0.006631247233599424,0,0,0,0,-0.04641873016953468,-0.008289058692753315,0,0,0,0,-0.006631247233599424,-0.003315623616799712,0,0,0,0,0,-0.003315623616799712,0,0.06631246954202652,0.0049734353087842464,0,-0.006631247233599424,-0.001657811808399856,0,0,0.003315623616799712,0,-0.006631247233599424,-0.003315623616799712,0,0.06631246954202652,0.02320936508476734,0,0,-0.021551553159952164,0,0,0.001657811808399856,0,0,-0.003315623616799712,0,0.11936245113611221,0.003315623616799712,0,-0.07294371724128723,0,0,0.03315623477101326,0.0049734353087842464,0,0,-0.008289058692753315,0,0,0.003315623616799712,0,-0.006631247233599424,-0.006631247233599424,0,0.006631247233599424,0.0414452962577343,0,-0.006631247233599424,-0.003315623616799712,0,0.15251868963241577,0,0,-0.04641873016953468,0,0,0,0,0,-0.006631247233599424,-0.029840612784028053,0,0,0.003315623616799712,0,-0.006631247233599424,-0.001657811808399856,0,0.026524988934397697,0,0,-0.006631247233599424,-0.0049734353087842464,0,0.013262494467198849,0.014920306392014027,0,-0.006631247233599424,0,0,0.006631247233599424,0,0,-0.28514364361763,-0.03481404855847359,0,0,0,0,0,-0.0049734353087842464,0,0,0,0,0,-0.001657811808399856,0,0,0.03315623477101326,0,0,-0.006631247233599424,0,0.7493309378623962,0,0,0,-0.0049734353087842464,0,0.013262494467198849,0.03315623477101326,0,0,0,0,0.019893741235136986,0,0,0,0,0,0.013262494467198849,0.061339035630226135,0,0,-0.03812967240810394,0,0.006631247233599424,0.028182800859212875,0,-0.006631247233599424,-0.009946870617568493,0,0,0,0,0,-0.003315623616799712,0,0,0.0049734353087842464,0,0,-0.003315623616799712,0,0,0.07625934481620789,0,0,-0.026524988934397697,0,0,0,0,-0.013262494467198849,-0.006631247233599424,0,0,0.0049734353087842464,0,-0.006631247233599424,-0.003315623616799712,0,0,0.013262494467198849,0,0,-0.003315623616799712,0,0,0.006631247233599424,0,-0.013262494467198849,-0.0049734353087842464,0,0.019893741235136986,0.0049734353087842464,0,-0.006631247233599424,-0.142571821808815,0,0,0,0,0,0,0,0,0.001657811808399856,0,-0.006631247233599424,0,0,0.006631247233599424,0,0,-0.013262494467198849,-0.01160468254238367,0,0,0.3746654689311981,0,0,-0.001657811808399856,0,0.019893741235136986,0.006631247233599424,0,-0.006631247233599424,0,0,0.013262494467198849,0.026524988934397697,0,0,-0.001657811808399856,0,0.12599369883537292,0.006631247233599424,0,-0.013262494467198849,-0.001657811808399856,0,0,0.019893741235136986,0,0,-0.003315623616799712,0,0,0,0,-0.10609995573759079,0,0,0,0.029840612784028053,0,-0.006631247233599424,-0.018235929310321808,0,0,0.008289058692753315,0,-0.019893741235136986,0,0,0.04641873016953468,0,0,0,-0.008289058692753315,0,0,0.001657811808399856,0,-0.04641873016953468,-0.0049734353087842464,0,0,0.03812967240810394,0,-0.006631247233599424,-0.01160468254238367,0,0,0,0,-0.006631247233599424,-0.008289058692753315,0,0,0.009946870617568493,0,-0.013262494467198849,-0.0049734353087842464,0,0,0.006631247233599424,0,-0.006631247233599424,-0.001657811808399856,0],"text":"<!-- Source: external/github.com/nealvis_c64_samples_kick/sprites_display/space_sprites.txt#Page-1 -->\n// 2 sprites generated with spritemate on 5/31/2021, 8:33:10 AM\n// Byte 64 of each sprite contains multicolor (high nibble) & color (low nibble) information\n\nLDA #$0d // sprite multicolor 1\nSTA $D025\nLDA #$01 // sprite multicolor 2\nSTA $D026\n\n// sprite 0 / multicolor / color: $04\nsprite_0:\n.byte $00,$00,$00,$00,$00,$00,$00,$00\n.byte $00,$40,$00,$00,$13,$c0,$00,$5e\n.byte $b0,$00,$5e,$ac,$00,$12,$ab,$00\n.byte $43,$aa,$c0,$03,$aa,$b0,$00,$aa\n.byte $ac,$03,$aa,$b0,$43,$aa,$c0,$12\n.byte $ab,$00,$5e,$ac,$00,$5e,$b0,$00\n.byte $13,$c0,$00,$40,$00,$00,$00,$00\n.byte $00,$00,$00,$00,$00,$00,$00,$84\n\n// sprite 1 / singlecolor / color: $0f\nsprite_1:\n.byte $00,$3f,$00,$00,$7f,$80,$00,$ff\n.byte $c0,$00,$ff,$c0,$1f,$ff,$c0,$3f\n.byte $ff,$e0,$7f,$ff,$fc,$7f,$ff,$fe\n.byte $7f,$ff,$fe,$7f,$ff,$fe,$3f,$ff\n.byte $fe,$1f,$ff,$fe,$1f,$ff,$fc,$1f\n.byte $ff,$fc,$1f,$ff,$f8,$1f,$ff,$f8\n.byte $1f,$ff,$f0,$0f,$f1,$c0,$0f,$e0\n.byte $80,$03,$c0,$00,$00,$00,$00,$0f","sourcePath":"external/github.com/nealvis_c64_samples_kick/sprites_display/space_sprites.txt","sourceMtimeMs":1751666973000,"sourceUrl":"https://github.com/nealvis/c64_samples_kick/blob/master/sprites_display/space_sprites.txt","sourceRepoUrl":"https://github.com/nealvis/c64_samples_kick","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/nealvis/c64_samples_kick/blob/master/LICENSE","attribution":"Source: nealvis/c64_samples_kick (MIT)","origin":"external/github.com/nealvis_c64_samples_kick/sprites_display/space_sprites.txt#Page-1"},{"name":"github.com/spiroharvey_c64/asm/inc/macro.inc","language":"asm","vector":[0,0.006211899220943451,0,-0.024847596883773804,-0.037271395325660706,0,0,0.024847596883773804,0,-0.024847596883773804,-0.031059496104717255,0,0.07454279065132141,0.024847596883773804,0,-0.09939038753509521,-0.024847596883773804,0,0.04969519376754761,0,0,-0.024847596883773804,-0.012423798441886902,0,0,0.04969519376754761,0,0,-0.006211899220943451,0,0,0.05590709298849106,0,0,0,0,0,0,0,-0.09939038753509521,-0.006211899220943451,0,0,0,0,-0.04969519376754761,-0.024847596883773804,0,0,0,0,-0.024847596883773804,-0.012423798441886902,0,0,0,0,-0.024847596883773804,0,0,0,0,0,0,-0.006211899220943451,0,0.09939038753509521,0,0,-0.024847596883773804,-0.018635697662830353,0,0,0.012423798441886902,0,0,-0.037271395325660706,0,0.09939038753509521,0,0,-0.024847596883773804,-0.006211899220943451,0,0,0.23605217039585114,0,-0.14908558130264282,-0.012423798441886902,0,0.024847596883773804,0.037271395325660706,0,-0.04969519376754761,-0.012423798441886902,0,0,0,0,0,-0.012423798441886902,0,0.024847596883773804,0,0,0,-0.037271395325660706,0,0,0.043483294546604156,0,-0.024847596883773804,-0.04969519376754761,0,0,0.024847596883773804,0,-0.024847596883773804,-0.024847596883773804,0,0,0.006211899220943451,0,0,-0.012423798441886902,0,0.22362837195396423,0.006211899220943451,0,-0.14908558130264282,0,0,0,0,0,-0.024847596883773804,-0.05590709298849106,0,0.04969519376754761,0,0,0,-0.024847596883773804,0,0,0,0,-0.024847596883773804,-0.012423798441886902,0,0.44725674390792847,0,0,0,-0.012423798441886902,0,0,0,0,-0.024847596883773804,0,0,0,0.04969519376754761,0,-0.04969519376754761,-0.018635697662830353,0,0,0,0,-0.09939038753509521,0,0,0.024847596883773804,0.04969519376754761,0,-0.04969519376754761,-0.012423798441886902,0,0.04969519376754761,0,0,-0.024847596883773804,-0.08075468987226486,0,0.04969519376754761,0.018635697662830353,0,-0.09939038753509521,-0.043483294546604156,0,0,0,0,0,0,0,0.19878077507019043,0.12423798441886902,0,-0.024847596883773804,-0.006211899220943451,0,0.22362837195396423,0.006211899220943451,0,0,-0.018635697662830353,0,0,0,0,-0.024847596883773804,-0.018635697662830353,0,0,0,0,-0.09939038753509521,-0.006211899220943451,0,0,0.13044987618923187,0,0,-0.09939038753509521,0,0,0.012423798441886902,0,0,-0.018635697662830353,0,0,0.024847596883773804,0,-0.024847596883773804,0,0,0,0,0,-0.024847596883773804,-0.012423798441886902,0,0,0.22362837195396423,0,0,-0.024847596883773804,0,0,0,0,-0.024847596883773804,-0.024847596883773804,0,0.04969519376754761,0,0,0,-0.031059496104717255,0,0.09939038753509521,0,0,0,-0.05590709298849106,0,0,0.012423798441886902,0,0,-0.024847596883773804,0,0,0.04969519376754761,0,-0.09939038753509521,-0.018635697662830353,0,0.024847596883773804,0.024847596883773804,0,0,-0.04969519376754761,0,0,0.024847596883773804,0,-0.04969519376754761,-0.006211899220943451,0,0.024847596883773804,0.09939038753509521,0,-0.04969519376754761,-0.04969519376754761,0,0.024847596883773804,0.11802608519792557,0,0,-0.012423798441886902,0,0,0,0,-0.024847596883773804,-0.012423798441886902,0,0,0.006211899220943451,0,0,-0.04969519376754761,0,0,0,0,0,-0.006211899220943451,0,0,0,0,0,-0.006211899220943451,0,0,0,0,0,-0.012423798441886902,0,0,0.05590709298849106,0,-0.024847596883773804,-0.04969519376754761,0,0,0,0,0,-0.006211899220943451,0,0,0.012423798441886902,0,0,-0.012423798441886902,0,0,0.024847596883773804,0,-0.024847596883773804,-0.006211899220943451,0,0.024847596883773804,0.16150937974452972,0,-0.07454279065132141,0,0,0,0,0,0,-0.006211899220943451,0,0.44725674390792847,0,0,-0.024847596883773804,-0.06211899220943451,0,0.024847596883773804,0.012423798441886902,0,-0.024847596883773804,-0.024847596883773804,0],"text":"#importonce\n\n.macro push_stack() {\n\tpha\n\ttxa\n\tpha\n\ttya\n\tpha\n}\n\n.macro pop_stack() {\n\tpla\n\ttay\n\tpla\n\ttax\n\tpla\n}\n\n.macro cls() {\n\tpush_stack()\n\tldx\t#$00\n\n!:\tlda\t#$20\t\t// wipe screen with spaces\n\tsta\t$0400,x\n\tsta\t$0500,x\n\tsta\t$0600,x\n\tsta\t$06e8,x\n\n\tlda\t#$00\t\t// set fg colour to black\n\tsta\t$d800,x\n\tsta\t$d900,x\n\tsta\t$da00,x\n\tsta\t$dae8,x\n\tdex\n\tbne\t!-\n\tpop_stack()\n}\n\n.macro set_irq(rasterline, vector) {\n\t// lda\t#$7f\t\t// clear high bit of rasterline\n\t// and\t$d011\t\t// clear most significant bit of VIC's raster register\n\t// sta\t$d011\n\n\tlda\t#rasterline\t// set raster interrupt to trigger on line\n\tsta\t$d012\n\n\tlda\t#<vector\t// set pointer for raster interrupt vector\n\tsta\t$0314\n\tlda\t#>vector\n\tsta\t$0315\n}\n","sourcePath":"external/github.com/spiroharvey_c64/asm/inc/macro.inc","sourceMtimeMs":1674155094000,"sourceUrl":"https://github.com/spiroharvey/c64/blob/main/asm/inc/macro.inc","sourceRepoUrl":"https://github.com/spiroharvey/c64","license":"UNKNOWN","attribution":"Source: spiroharvey/c64 (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/01_hello/Main.asm","language":"asm","vector":[0,0,0,0,-0.009894203394651413,0,0,0.019788406789302826,0,0,-0.03957681357860565,0,0,0.019788406789302826,0,0,0,0,0,0.08904782682657242,0,-0.03957681357860565,-0.019788406789302826,0,0,0.03957681357860565,0,0,-0.009894203394651413,0,0.03957681357860565,0.26714348793029785,0,0,0,0,0,0.03957681357860565,0,0,0,0,0,0,0,0,-0.019788406789302826,0,0,0.02968260832130909,0,0,0,0,0.03957681357860565,0.019788406789302826,0,-0.03957681357860565,-0.009894203394651413,0,0.03957681357860565,0,0,-0.03957681357860565,-0.03957681357860565,0,0,0,0,-0.03957681357860565,0,0,0,0.009894203394651413,0,0,-0.02968260832130909,0,0.03957681357860565,0,0,0,0,0,0,0.019788406789302826,0,-0.1583072543144226,-0.019788406789302826,0,0,0,0,-0.0791536271572113,-0.019788406789302826,0,0.03957681357860565,0,0,-0.03957681357860565,-0.02968260832130909,0,0.0791536271572113,0.009894203394651413,0,0,-0.019788406789302826,0,0,0.009894203394651413,0,0,-0.009894203394651413,0,0.03957681357860565,0,0,0,-0.019788406789302826,0,0,0,0,0,0,0,0,0.02968260832130909,0,-0.1583072543144226,0,0,0.0791536271572113,0.019788406789302826,0,-0.03957681357860565,-0.009894203394651413,0,0,0.019788406789302826,0,0,0,0,0,0.05936521664261818,0,0,0,0,0,0.019788406789302826,0,0,-0.019788406789302826,0,0.03957681357860565,0.019788406789302826,0,0,-0.02968260832130909,0,0,0.009894203394651413,0,-0.03957681357860565,-0.019788406789302826,0,0,0.009894203394651413,0,-0.23746086657047272,0,0,0,0.019788406789302826,0,-0.03957681357860565,-0.019788406789302826,0,0.0791536271572113,0,0,-0.1583072543144226,-0.0791536271572113,0,0,0,0,0,-0.049471013247966766,0,0.19788405299186707,0.019788406789302826,0,0,-0.019788406789302826,0,0,0.049471013247966766,0,-0.03957681357860565,-0.009894203394651413,0,0.5936521887779236,0,0,0,-0.009894203394651413,0,0.1583072543144226,0.019788406789302826,0,0,0,0,0,0,0,0,0,0,0.03957681357860565,0,0,0,-0.0791536271572113,0,0,0.03957681357860565,0,-0.03957681357860565,-0.02968260832130909,0,0,0,0,0,0,0,0,0.009894203394651413,0,0,0,0,0.03957681357860565,0,0,-0.03957681357860565,0,0,0,0.019788406789302826,0,0,0,0,0,0,0,0,-0.019788406789302826,0,0,0.009894203394651413,0,0,-0.12862463295459747,0,0,0.009894203394651413,0,-0.11873043328523636,-0.02968260832130909,0,0.03957681357860565,0.03957681357860565,0,-0.0791536271572113,-0.08904782682657242,0,0.03957681357860565,0,0,-0.03957681357860565,0,0,0,0.10883623361587524,0,0,0,0,0,0,0,0,-0.05936521664261818,0,0.03957681357860565,0.2968260943889618,0,0,-0.019788406789302826,0,0.0791536271572113,0.08904782682657242,0,-0.03957681357860565,-0.009894203394651413,0,0.0791536271572113,0.019788406789302826,0,0,0,0,0.23746086657047272,0.019788406789302826,0,0,0,0,0,0.009894203394651413,0,0,-0.019788406789302826,0,0,0,0,-0.03957681357860565,0,0,0.03957681357860565,0,0,0,-0.03957681357860565,0,0.03957681357860565,0.03957681357860565,0,0,-0.02968260832130909,0,0,0,0,-0.0791536271572113,0,0,0,0,0,0,0,0,0,0,0,-0.03957681357860565,0,0,0,0.009894203394651413,0,0,-0.05936521664261818,0,0.03957681357860565,0.019788406789302826,0,-0.03957681357860565,-0.049471013247966766,0,0,0.019788406789302826,0,-0.03957681357860565,-0.0791536271572113,0],"text":"; auto generated sys (Tools->Generate Sys() Call)\n; 10 SYS (4096)\n*=$0801\n        BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $34, $30, $39, $36, $29, $00, $00, $00\n\n; start address of program in memory 0x1000 = 4096)\n*=$1000\n\n; local variables\nBASIC_PRINT_FILE = $AB1E\n\n; label START\nSTART\n        lda #<HELLOWORLD\n        ldy #>HELLOWORLD\n        jsr BASIC_PRINT_FILE\n        jmp START\n\nHELLOWORLD\n        ptext \"HELLO WORLD\"\n        byte 13, 00","sourcePath":"external/github.com/Ziagl_C64-Assembler/01_hello/Main.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/01_hello/Main.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/02_color/Main.asm","language":"asm","vector":[0,0,0,0,-0.012026390992105007,0,0,0.024052781984210014,0,0,-0.04810556396842003,0,0,0,0,0,0,0,0,0.06013195216655731,0,-0.04810556396842003,-0.024052781984210014,0,0,0.024052781984210014,0,0,0,0,0.04810556396842003,0.24052780866622925,0,0,0,0,0,0.012026390992105007,0,0,0,0,0.09621112793684006,0,0,0,0,0,0,0.03607917204499245,0,0,0,0,0,0.024052781984210014,0,0,-0.012026390992105007,0,0.04810556396842003,0,0,-0.04810556396842003,-0.04810556396842003,0,0,0,0,0,0,0,0,0.012026390992105007,0,0,-0.03607917204499245,0,0,0,0,0,0,0,0,0,0,-0.19242225587368011,-0.024052781984210014,0,0,0,0,-0.04810556396842003,0,0,0.04810556396842003,0,0,0,0,0,0.09621112793684006,0.012026390992105007,0,0,0,0,0.04810556396842003,0.012026390992105007,0,0,0,0,0.04810556396842003,0,0,0,-0.024052781984210014,0,0,0,0,-0.04810556396842003,0,0,0,0.024052781984210014,0,-0.19242225587368011,0,0,0.09621112793684006,0.012026390992105007,0,-0.04810556396842003,-0.012026390992105007,0,0,0.06013195216655731,0,0,0,0,0,0.03607917204499245,0,0,0,0,0,0,0,0,0,0,0.04810556396842003,0.024052781984210014,0,0,-0.024052781984210014,0,0,0.012026390992105007,0,-0.04810556396842003,0,0,0,0.012026390992105007,0,-0.1443166881799698,0,0,0,0,0,-0.04810556396842003,-0.024052781984210014,0,0.09621112793684006,0,0,-0.19242225587368011,-0.09621112793684006,0,0,0,0,0,-0.03607917204499245,0,0.1443166881799698,0.024052781984210014,0,0,0,0,0,0.04810556396842003,0,0,-0.012026390992105007,0,0.6734778881072998,0.024052781984210014,0,0,0,0,0.04810556396842003,0.024052781984210014,0,0,0,0,0,0,0,0,-0.024052781984210014,0,0.04810556396842003,0,0,0,-0.09621112793684006,0,0,0.04810556396842003,0,-0.04810556396842003,-0.03607917204499245,0,0,0,0,0,0,0,0,0.012026390992105007,0,0,0,0,0.04810556396842003,0,0,-0.04810556396842003,0,0,0,0.04810556396842003,0,0,0,0,0,0,0,0,-0.024052781984210014,0,0,0,0,0,-0.0721583440899849,0,0,0.012026390992105007,0,0,-0.03607917204499245,0,0.04810556396842003,0.04810556396842003,0,0,-0.09621112793684006,0,0.04810556396842003,0,0,0,0,0,0,0.0721583440899849,0,0,0,0,0,0,0,0,-0.04810556396842003,0,0,0.3367389440536499,0,0,-0.012026390992105007,0,0.04810556396842003,0.03607917204499245,0,-0.04810556396842003,0,0,0.04810556396842003,0.024052781984210014,0,0,0,0,0.1443166881799698,0.03607917204499245,0,0,0,0,0,0.012026390992105007,0,0,-0.024052781984210014,0,0,0,0,0,-0.012026390992105007,0,0.04810556396842003,0,0,0,-0.04810556396842003,0,0.04810556396842003,0.04810556396842003,0,0,-0.03607917204499245,0,0,0,0,-0.09621112793684006,0,0,0,0,0,0,0,0,0,0,0,-0.04810556396842003,0,0,0,0.012026390992105007,0,0,0,0,0,0.024052781984210014,0,-0.04810556396842003,-0.012026390992105007,0,0,0.024052781984210014,0,0,-0.03607917204499245,0],"text":"; auto generated sys (Tools->Generate Sys() Call)\n; 10 SYS (4096)\n*=$0801\n        BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $34, $30, $39, $36, $29, $00, $00, $00\n\n; start address of program in memory 0x1000 = 4096)\n*=$1000\nLOOP\n        inc $d020\n        jmp LOOP","sourcePath":"external/github.com/Ziagl_C64-Assembler/02_color/Main.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/02_color/Main.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/03_bgcolor/Main.asm","language":"asm","vector":[0,0,0,0,-0.00952640175819397,0,0,0.01905280351638794,0,0,-0.03810560703277588,0,0,0,0,0,0,0,0,0.06668481230735779,0,-0.03810560703277588,-0.01905280351638794,0,0,0.05715841427445412,0,0,0,0,0.03810560703277588,0.2476864606142044,0,0,0,0,0,0.00952640175819397,0,0,-0.00952640175819397,0,0.15242242813110352,0,0,0,0,0,0,0.02857920713722706,0,0,0,0,0,0.01905280351638794,0,0,-0.00952640175819397,0,0.07621121406555176,0,0,-0.03810560703277588,-0.03810560703277588,0,0.07621121406555176,0,0,0,0,0,0,0.00952640175819397,0,0,-0.02857920713722706,0,0,0,0,0,0,0,0,0.11431682854890823,0,-0.22863365709781647,-0.01905280351638794,0,0,0,0,-0.03810560703277588,0,0,0.03810560703277588,0,0,0,0,0,0.07621121406555176,0.00952640175819397,0,0,0,0,0.07621121406555176,0.00952640175819397,0,0,0,0,0.03810560703277588,0,0,-0.07621121406555176,-0.01905280351638794,0,0,0,0,-0.07621121406555176,0,0,0,0.01905280351638794,0,-0.15242242813110352,0,0,0.07621121406555176,0.01905280351638794,0,-0.03810560703277588,-0.00952640175819397,0,0.03810560703277588,0.10479041934013367,0,0,0,0,0,0.04763200879096985,0,0,0,0,0,0,0,0,0,0,0.03810560703277588,0.03810560703277588,0,0,-0.01905280351638794,0,0,0.04763200879096985,0,-0.07621121406555176,0,0,0.07621121406555176,0.00952640175819397,0,-0.11431682854890823,0,0,0,0,0,-0.03810560703277588,-0.01905280351638794,0,0.07621121406555176,0,0,-0.15242242813110352,-0.11431682854890823,0,0,0,0,0,-0.02857920713722706,0,0.11431682854890823,0.01905280351638794,0,0,0,0,0,0.0952640175819397,0,0,-0.00952640175819397,0,0.6096897125244141,0.03810560703277588,0,0,0,0,0.03810560703277588,0.01905280351638794,0,-0.03810560703277588,-0.03810560703277588,0,0,0,0,0,-0.03810560703277588,0,0.03810560703277588,0,0,0,-0.07621121406555176,0,0,0.03810560703277588,0,-0.03810560703277588,-0.02857920713722706,0,0,0.01905280351638794,0,0,0,0,0,0.00952640175819397,0,0,0,0,0.03810560703277588,0,0,-0.03810560703277588,0,0,0,0.05715841427445412,0,0,0,0,0,0,0,0,-0.03810560703277588,0,0,0.03810560703277588,0,0,-0.05715841427445412,0,0,0.01905280351638794,0,0,-0.02857920713722706,0,0.03810560703277588,0.05715841427445412,0,0,-0.07621121406555176,0,0.03810560703277588,0,0,0,0,0,0,0.05715841427445412,0,0,0,0,0,0,0,0,-0.05715841427445412,0,0,0.30484485626220703,0,0,-0.00952640175819397,0,0.07621121406555176,0.02857920713722706,0,-0.03810560703277588,-0.01905280351638794,0,0.11431682854890823,0.01905280351638794,0,0,0,0,0.1905280351638794,0.03810560703277588,0,0,0,0,0,0.00952640175819397,0,0,-0.03810560703277588,0,0,0,0,0,-0.01905280351638794,0,0.03810560703277588,0,0,0,-0.03810560703277588,0,0.03810560703277588,0.03810560703277588,0,0,-0.02857920713722706,0,0,0.00952640175819397,0,-0.07621121406555176,0,0,0,0,0,0,0,0,0,0,0,-0.03810560703277588,0,0,0,0.00952640175819397,0,0,0,0,0.22863365709781647,0.01905280351638794,0,-0.03810560703277588,-0.01905280351638794,0,0,0.03810560703277588,0,0,-0.02857920713722706,0],"text":"; auto generated sys (Tools->Generate Sys() Call)\n; 10 SYS (4096)\n*=$0801\n        BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $34, $30, $39, $36, $29, $00, $00, $00\n\n; start address of program in memory 0x1000 = 4096)\n*=$1000\nLOOP\n        lda #$02\n        sta $d020\n        sta $d021\n        ;jmp LOOP\n\n        ldx #$20\n        lda #$02\n        sta $d000,X\n        sta $d001,X\n        ;jmp LOOP\n\n        ldy #$01\n        iny\n        sty $d020\n\n        sty $d021\n        jmp LOOP","sourcePath":"external/github.com/Ziagl_C64-Assembler/03_bgcolor/Main.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/03_bgcolor/Main.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/04_calc/Main.asm","language":"asm","vector":[0,0,0,0,-0.010565017350018024,0,0,0.02113003470003605,0,0,-0.0422600694000721,0,0.0422600694000721,0,0,-0.0422600694000721,0,0,0,0.052825089544057846,0,-0.0422600694000721,-0.02113003470003605,0,0,0.0422600694000721,0,0,0,0,0.0422600694000721,0.2324303835630417,0,0,0,0,0,0.010565017350018024,0,0,0,0,0.1267802119255066,0,0,0,0,0,0,0.03169505298137665,0,0,0,0,0,0.02113003470003605,0,0,-0.010565017350018024,0,0.0422600694000721,0,0,-0.0422600694000721,-0.0422600694000721,0,0.0845201388001442,0,0,0,0,0,0,0.010565017350018024,0,0,-0.03169505298137665,0,0,0,0,0,0,0,0,0.1267802119255066,0,-0.1690402776002884,-0.0422600694000721,0,0,0,0,-0.0422600694000721,0,0,0.0422600694000721,0,0,0,0,0,0.0845201388001442,0.010565017350018024,0,0,0,0,0,0.03169505298137665,0,0,-0.02113003470003605,0,0.0422600694000721,0,0,0,-0.02113003470003605,0,0,0,0,-0.0845201388001442,0,0,0,0.02113003470003605,0,-0.1690402776002884,0,0,0.0845201388001442,0.010565017350018024,0,-0.0422600694000721,-0.010565017350018024,0,0,0.0845201388001442,0,0,0,0,0,0.0422600694000721,0,0,0,0,0,0,0,0,0,0,0.0845201388001442,0.02113003470003605,0,0,-0.02113003470003605,0,0,0.052825089544057846,0,-0.21130035817623138,0,0,0,0.010565017350018024,0,-0.1267802119255066,0,0,0,0,0,-0.0422600694000721,-0.02113003470003605,0,0.0845201388001442,0,0,-0.1690402776002884,-0.0845201388001442,0,0,0,0,0,-0.03169505298137665,0,0.1267802119255066,0.02113003470003605,0,0,0,0,0,0.10565017908811569,0,0,-0.02113003470003605,0,0.5916410088539124,0,0,0,0,0,0.0422600694000721,0.02113003470003605,0,0,0,0,0,0,0,0,-0.0422600694000721,0,0.0422600694000721,0.010565017350018024,0,0,-0.09508515894412994,0,0,0.0422600694000721,0,-0.0422600694000721,-0.03169505298137665,0,0,0,0,0,0,0,0,0.010565017350018024,0,0,0,0,0.0422600694000721,0,0,-0.0422600694000721,0,0,0,0.07395512610673904,0,0,0,0,0,0,0,0,-0.10565017908811569,0,0,0,0,0,-0.0633901059627533,0,0,0.010565017350018024,0,0,-0.03169505298137665,0,0.0422600694000721,0.0633901059627533,0,0,-0.0845201388001442,0,0.0422600694000721,0,0,0,0,0,0,0.0633901059627533,0,0,0,0,0,0,0,0,-0.0422600694000721,0,0,0.2958205044269562,0,0,-0.010565017350018024,0,0.0422600694000721,0.03169505298137665,0,-0.0422600694000721,0,0,0.0845201388001442,0.02113003470003605,0,0,0,0,0.1690402776002884,0.02113003470003605,0,0,0,0,0,0.010565017350018024,0,0,-0.02113003470003605,0,0,0,0,0,-0.02113003470003605,0,0.0422600694000721,0,0,0,-0.0422600694000721,0,0.0422600694000721,0.0422600694000721,0,0,-0.03169505298137665,0,0,0,0,-0.0845201388001442,0,0,0,0,0,0,0,0,0,0,0,-0.0422600694000721,0,0,0,0.02113003470003605,0,0,0,0,0.2535604238510132,0.02113003470003605,0,-0.0845201388001442,-0.052825089544057846,0,0,0.02113003470003605,0,0,-0.03169505298137665,0],"text":"; auto generated sys (Tools->Generate Sys() Call)\n; 10 SYS (4096)\n*=$0801\n        BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $34, $30, $39, $36, $29, $00, $00, $00\n\n; start address of program in memory 0x1000 = 4096)\n*=$1000\nLOOP\n        lda #$00\n        sta $d020\n        clc\n        adc #$01\n        sta $d021\n        ;jmp LOOP\n\n        lda #$01\n        sta $d021\n        sec\n        sbc #$01\n        sta $d020\n        jmp LOOP","sourcePath":"external/github.com/Ziagl_C64-Assembler/04_calc/Main.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/04_calc/Main.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/05_sprite/Main.asm","language":"asm","vector":[0.07093269377946854,0,0,0,-0.017733173444867134,0,0,0.017733173444867134,0,0,-0.062066104263067245,0,0,0,0,0,-0.008866586722433567,0,0,0.05319951847195625,0,-0.03546634688973427,-0.017733173444867134,0,0,0.026599759235978127,0,0,0,0,0.03546634688973427,0.25713101029396057,0,0,0,0,0,0.008866586722433567,0,0,-0.017733173444867134,0,0.07093269377946854,0,0,0,-0.008866586722433567,0,0,0.026599759235978127,0,0,-0.017733173444867134,0,0,0.017733173444867134,0,0,-0.062066104263067245,0,0.1063990369439125,0,0,-0.07093269377946854,-0.03546634688973427,0,0,0,0,0,0,0,0,0.008866586722433567,0,0,-0.026599759235978127,0,0,0,0,0,0,0,0,0.12413220852613449,0,-0.14186538755893707,-0.017733173444867134,0,0,0,0,-0.03546634688973427,-0.008866586722433567,0,0.03546634688973427,0.03546634688973427,0,0,-0.008866586722433567,0,0.07093269377946854,0.008866586722433567,0,0,-0.017733173444867134,0,0,0.008866586722433567,0,0,0,0,0.03546634688973427,0,0,0,-0.017733173444867134,0,0,0,0,0,-0.008866586722433567,0,0.03546634688973427,0.017733173444867134,0,-0.14186538755893707,0,0,0.07093269377946854,0.008866586722433567,0,-0.03546634688973427,-0.008866586722433567,0,0.03546634688973427,0.04433293268084526,0,0,0,0,0,0.05319951847195625,0,0,0,0,0.03546634688973427,0,0,-0.1063990369439125,0,0,0.03546634688973427,0.05319951847195625,0,-0.03546634688973427,-0.03546634688973427,0,0.03546634688973427,0.008866586722433567,0,-0.07093269377946854,-0.008866586722433567,0,0,0.008866586722433567,0,-0.17733173072338104,-0.026599759235978127,0,0,0,0,-0.07093269377946854,-0.017733173444867134,0,0.07093269377946854,0,0,-0.17733173072338104,-0.07093269377946854,0,0,0,0,-0.03546634688973427,-0.026599759235978127,0,0.14186538755893707,0.017733173444867134,0,0,0,0,0.03546634688973427,0.09753245115280151,0,0,-0.008866586722433567,0,0.6029278635978699,0,0,0,0,0,0.03546634688973427,0.03546634688973427,0,-0.07093269377946854,0,0,0,0,0,-0.03546634688973427,0,0,0.03546634688973427,0.017733173444867134,0,0,-0.07093269377946854,0,0,0.03546634688973427,0,-0.03546634688973427,-0.026599759235978127,0,0,0.017733173444867134,0,0,0,0,0,0.008866586722433567,0,0,0,0,0.03546634688973427,0.017733173444867134,0,-0.03546634688973427,-0.05319951847195625,0,0,0.03546634688973427,0,0,-0.017733173444867134,0,0,0.017733173444867134,0,0,-0.03546634688973427,0,0,0,0,-0.03546634688973427,-0.08866586536169052,0,0,0.026599759235978127,0,-0.03546634688973427,-0.05319951847195625,0,0.03546634688973427,0.03546634688973427,0,-0.07093269377946854,-0.08866586536169052,0,0.03546634688973427,0,0,0,-0.017733173444867134,0,0,0.07093269377946854,0,0,0,0,0,0.017733173444867134,0,-0.03546634688973427,-0.03546634688973427,0,0,0.30146393179893494,0,0,-0.008866586722433567,0,0.03546634688973427,0.026599759235978127,0,-0.03546634688973427,-0.03546634688973427,0,0.03546634688973427,0.017733173444867134,0,0,-0.017733173444867134,0,0.212798073887825,0.017733173444867134,0,0,0,0,0,0.008866586722433567,0,0,-0.017733173444867134,0,0,0,0,0,0,0,0.03546634688973427,0.008866586722433567,0,-0.03546634688973427,-0.03546634688973427,0,0.03546634688973427,0.03546634688973427,0,-0.1063990369439125,-0.026599759235978127,0,0,0.008866586722433567,0,-0.07093269377946854,0,0,0,0,0,0,0,0,0,0.008866586722433567,0,-0.03546634688973427,-0.04433293268084526,0,0,0.008866586722433567,0,0,-0.026599759235978127,0,0.24826441705226898,0.026599759235978127,0,-0.03546634688973427,-0.05319951847195625,0,0,0.017733173444867134,0,0,-0.04433293268084526,0],"text":"; auto generated sys (Tools->Generate Sys() Call)\n; 10 SYS (4096)\n*=$0801\n        BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $34, $30, $39, $36, $29, $00, $00, $00\n\n; start address of program in memory 0x1000 = 4096)\n*=$1000\n        ; pointer to sprite\n        lda #$80\n        sta $07f8\n\n        ; enable sprite 1\n        lda #$01\n        sta $d015\n\n        ; set x,y position 80 = 128/128\n        lda #$80\n        sta $d000\n        sta $d001\n\nLOOP    jmp LOOP\n\n*=$2000\n        INCBIN \"sprite.spt\",1,1\n        ","sourcePath":"external/github.com/Ziagl_C64-Assembler/05_sprite/Main.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/05_sprite/Main.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/06_variables/Main.asm","language":"asm","vector":[0.029703879728913307,0,0,0,-0.014851939864456654,0,0,0.044555820524692535,0,-0.029703879728913307,-0.03712984919548035,0,0,0.029703879728913307,0,-0.08911164104938507,0,0,0,0.051981791853904724,0,-0.029703879728913307,-0.029703879728913307,0,0,0.03712984919548035,0,-0.1485193967819214,-0.007425969932228327,0,0.029703879728913307,0.2970387935638428,0,0,0,0,0,0.029703879728913307,0,0,-0.007425969932228327,0,0.059407759457826614,0,0,-0.029703879728913307,-0.007425969932228327,0,0,0.022277910262346268,0,-0.029703879728913307,0,0,0,0.014851939864456654,0,0,-0.014851939864456654,0,0.029703879728913307,0.029703879728913307,0,-0.059407759457826614,-0.029703879728913307,0,0.029703879728913307,0.014851939864456654,0,0,-0.007425969932228327,0,0,0.007425969932228327,0,0,-0.029703879728913307,0,0.1485193967819214,0,0,-0.029703879728913307,-0.014851939864456654,0,0.029703879728913307,0.044555820524692535,0,-0.1485193967819214,-0.014851939864456654,0,0,0.014851939864456654,0,-0.029703879728913307,-0.022277910262346268,0,0.029703879728913307,0.029703879728913307,0,0,-0.007425969932228327,0,0.059407759457826614,0.007425969932228327,0,0,-0.022277910262346268,0,0,0.014851939864456654,0,-0.029703879728913307,-0.0742596983909607,0,0.029703879728913307,0,0,-0.029703879728913307,-0.014851939864456654,0,0,0.007425969932228327,0,0,-0.0742596983909607,0,0,0.029703879728913307,0,-0.1485193967819214,0,0,0.059407759457826614,0.014851939864456654,0,-0.059407759457826614,-0.014851939864456654,0,0.029703879728913307,0.044555820524692535,0,0,-0.014851939864456654,0,0,0.08911164104938507,0,0,-0.014851939864456654,0,0.029703879728913307,0.007425969932228327,0,-0.029703879728913307,0,0,0.059407759457826614,0.014851939864456654,0,0,-0.029703879728913307,0,0.059407759457826614,0.022277910262346268,0,-0.029703879728913307,0,0,0,0.007425969932228327,0,-0.267334908246994,0,0,0,0.08911164104938507,0,-0.059407759457826614,-0.029703879728913307,0,0.11881551891565323,0.014851939864456654,0,-0.1485193967819214,-0.0742596983909607,0,0,0,0,0,-0.022277910262346268,0,0.08911164104938507,0.014851939864456654,0,0,-0.007425969932228327,0,0.029703879728913307,0.051981791853904724,0,-0.029703879728913307,-0.007425969932228327,0,0.4752620756626129,0,0,0,-0.014851939864456654,0,0.059407759457826614,0.022277910262346268,0,-0.029703879728913307,-0.014851939864456654,0,0,0,0,-0.029703879728913307,-0.007425969932228327,0,0.029703879728913307,0,0,0,-0.09653761237859726,0,0,0.029703879728913307,0,-0.059407759457826614,-0.03712984919548035,0,0,0.014851939864456654,0,0,-0.03712984919548035,0,0.059407759457826614,0.007425969932228327,0,-0.029703879728913307,0,0,0.029703879728913307,0.014851939864456654,0,-0.059407759457826614,-0.014851939864456654,0,0,0.044555820524692535,0,0,-0.007425969932228327,0,0,0.029703879728913307,0,0,-0.022277910262346268,0,0.059407759457826614,0,0,-0.08911164104938507,-0.133667454123497,0,0.059407759457826614,0.007425969932228327,0,-0.029703879728913307,-0.044555820524692535,0,0.029703879728913307,0.0668337270617485,0,-0.029703879728913307,-0.0742596983909607,0,0.059407759457826614,0,0,-0.11881551891565323,0,0,0,0.08168566972017288,0,0,-0.007425969932228327,0,0.029703879728913307,0.022277910262346268,0,0,-0.051981791853904724,0,0.059407759457826614,0.23763103783130646,0,0,-0.007425969932228327,0,0.059407759457826614,0.03712984919548035,0,-0.059407759457826614,-0.014851939864456654,0,0.059407759457826614,0.014851939864456654,0,0,-0.014851939864456654,0,0.3564465641975403,0.014851939864456654,0,0,-0.007425969932228327,0,0.029703879728913307,0.007425969932228327,0,0,-0.03712984919548035,0,0,0,0,0,0,0,0.029703879728913307,0.029703879728913307,0,0,-0.051981791853904724,0,0.029703879728913307,0.029703879728913307,0,0,-0.044555820524692535,0,0.059407759457826614,0.007425969932228327,0,-0.059407759457826614,0,0,0,0,0,0,0,0,0,0.03712984919548035,0,-0.029703879728913307,-0.051981791853904724,0,0,0.044555820524692535,0,-0.029703879728913307,-0.014851939864456654,0,0.08911164104938507,0.029703879728913307,0,-0.029703879728913307,-0.022277910262346268,0,0,0.029703879728913307,0,0,-0.12624149024486542,0],"text":"; auto generated sys (Tools->Generate Sys() Call)\n; 10 SYS (4096)\n*=$0801\n        BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $34, $30, $39, $36, $29, $00, $00, $00\n\n; start address of program in memory 0x1000 = 4096)\n*=$1000\n       \n; variables\nVAR_BIN = %10010111     ; local variable binary representation\nVAR_HEX = $97           ; local variable hexadecimal representation\nVAR_OCT = @227          ; local variable octal representation\nVAR_DEC = 151           ; local variable decimal represenetation\n\nVAR_GLOBAL$ = $2000     ; global variable hexadecimal representation\n\nSCREEN_START$ = $0400   ; global screen start position (first character)\n\n        ldx #$00\nLOOP                    ; label always starts at column 0 of file!\n        txa\n        sta SCREEN_START$,x\n        inx\n        bne LOOP\n_TEMP                   ; temporary label, only visible in block between labels\n        lda #$00\n        sta $d021\n        rts","sourcePath":"external/github.com/Ziagl_C64-Assembler/06_variables/Main.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/06_variables/Main.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/07_macros/Main.asm","language":"asm","vector":[0.12840048968791962,0,0,0,-0.038520149886608124,0,0.051360197365283966,0.044940173625946045,0,0,-0.025680098682641983,0,0,0.038520149886608124,0,-0.051360197365283966,-0.038520149886608124,0,0,0.044940173625946045,0,-0.1540805995464325,-0.025680098682641983,0,0.025680098682641983,0.044940173625946045,0,0,-0.012840049341320992,0,0.051360197365283966,0.26322102546691895,0,0,-0.012840049341320992,0,0,0.019260074943304062,0,-0.025680098682641983,0,0,0.051360197365283966,0,0,0,-0.038520149886608124,0,0,0.019260074943304062,0,-0.051360197365283966,0,0,0,0.019260074943304062,0,0,-0.05778022110462189,0,0.025680098682641983,0,0,-0.025680098682641983,-0.038520149886608124,0,0.051360197365283966,0,0,0,-0.025680098682641983,0,0,0.006420024670660496,0,0,-0.038520149886608124,0,0,0,0,-0.12840048968791962,-0.006420024670660496,0,0.025680098682641983,0.06420024484395981,0,-0.1540805995464325,-0.025680098682641983,0,0,0,0,-0.051360197365283966,-0.044940173625946045,0,0.025680098682641983,0.10914041846990585,0,0,0,0,0.1540805995464325,0.032100122421979904,0,0,0,0,0,0.006420024670660496,0,0,-0.032100122421979904,0,0.051360197365283966,0,0,-0.051360197365283966,-0.07704029977321625,0,0.051360197365283966,0.025680098682641983,0,0,0,0,0,0.044940173625946045,0,-0.12840048968791962,-0.012840049341320992,0,0.051360197365283966,0.012840049341320992,0,-0.051360197365283966,-0.025680098682641983,0,0,0.025680098682641983,0,0,-0.006420024670660496,0,0,0.07062026858329773,0,0,-0.032100122421979904,0,0.12840048968791962,0.006420024670660496,0,0,0,0,0.025680098682641983,0.012840049341320992,0,0,-0.025680098682641983,0,0.051360197365283966,0.032100122421979904,0,-0.025680098682641983,0,0,0,0.006420024670660496,0,-0.12840048968791962,-0.025680098682641983,0,0,0,0,-0.1540805995464325,-0.07704029977321625,0,0.07704029977321625,0.012840049341320992,0,-0.10272039473056793,-0.08346032351255417,0,0,0,0,-0.051360197365283966,-0.038520149886608124,0,0.07704029977321625,0.012840049341320992,0,0,0,0,0.17976069450378418,0.10914041846990585,0,0,-0.012840049341320992,0,0.48792189359664917,0,0,0,-0.019260074943304062,0,0.025680098682641983,0.05778022110462189,0,0,-0.025680098682641983,0,0,0.038520149886608124,0,-0.051360197365283966,0,0,0.025680098682641983,0,0,0,-0.07704029977321625,0,0.025680098682641983,0.025680098682641983,0,-0.025680098682641983,-0.06420024484395981,0,0,0.006420024670660496,0,-0.051360197365283966,0,0,0,0.012840049341320992,0,-0.051360197365283966,0,0,0.025680098682641983,0.06420024484395981,0,-0.051360197365283966,-0.006420024670660496,0,0,0.025680098682641983,0,-0.025680098682641983,0,0,0,0.025680098682641983,0,0,-0.025680098682641983,0,0,0,0,-0.025680098682641983,-0.06420024484395981,0,0.17976069450378418,0.006420024670660496,0,0,-0.08346032351255417,0,0.025680098682641983,0.051360197365283966,0,0,-0.051360197365283966,0,0.025680098682641983,0,0,-0.025680098682641983,-0.025680098682641983,0,0,0.038520149886608124,0,0,-0.032100122421979904,0,0.051360197365283966,0.09630037099123001,0,0,-0.038520149886608124,0,0.07704029977321625,0.24396094679832458,0,-0.051360197365283966,-0.012840049341320992,0,0.051360197365283966,0.019260074943304062,0,-0.051360197365283966,0,0,0,0.038520149886608124,0,-0.025680098682641983,-0.025680098682641983,0,0.2824810743331909,0.012840049341320992,0,-0.025680098682641983,0,0,0.025680098682641983,0.025680098682641983,0,0,-0.025680098682641983,0,0,0.012840049341320992,0,-0.051360197365283966,-0.025680098682641983,0,0.025680098682641983,0,0,0,-0.05778022110462189,0,0.025680098682641983,0.025680098682641983,0,-0.10272039473056793,-0.038520149886608124,0,0,0,0,-0.051360197365283966,-0.012840049341320992,0,0,0,0,-0.025680098682641983,0,0,0,0.032100122421979904,0,-0.051360197365283966,-0.012840049341320992,0,0,0.09630037099123001,0,0,0,0,0.12840048968791962,0.025680098682641983,0,-0.051360197365283966,-0.006420024670660496,0,0,0.012840049341320992,0,-0.07704029977321625,-0.044940173625946045,0],"text":"; auto generated sys (Tools->Generate Sys() Call)\n; 10 SYS (4096)\n*=$0801\n        BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $34, $30, $39, $36, $29, $00, $00, $00\n\n; start address of program in memory 0x1000 = 4096)\n*=$1000\n\nSCREEN_START$ = $0400\n\n; this code inverts first 256 characters of display (6 lines of 40 characters and 16 in line 7)\n        ldx #$00\nLOOP\n        lda SCREEN_START$,x\n        eor #$80                ; invert color of field\n        sta SCREEN_START$,x\n        inx\n        bne LOOP                ; 256 time till byte overrun and zero flag is 0\n        ;rts\n\n; we want to invert whole screen, so we need to do this 4 times -> time for macro\ndefm    InvertColor\n        lda /1,x                ; /1 is first param\n        eor #$80\n        sta /1,x\n        endm\n\n        \n        ldx #$00\nLOOP1\n        ;InvertColor SCREEN_START$              ; first byte already inverted\n        InvertColor SCREEN_START$ + $0100\n        InvertColor SCREEN_START$ + $0200\n        InvertColor SCREEN_START$ + $0300\n        inx\n        bne LOOP1\n        rts","sourcePath":"external/github.com/Ziagl_C64-Assembler/07_macros/Main.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/07_macros/Main.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/08_clearscreen/Main.asm","language":"asm","vector":[0,0,0,0,-0.007058725692331791,0,0,0.028234902769327164,0,-0.028234902769327164,-0.04941108077764511,0,0,0,0,-0.08470471203327179,-0.042352356016635895,0,0,0.04941108077764511,0,-0.028234902769327164,-0.014117451384663582,0,0,0.06352853029966354,0,0,0,0,0.05646980553865433,0.28234902024269104,0,0,0,0,0,0.007058725692331791,0,-0.05646980553865433,-0.021176178008317947,0,0.05646980553865433,0,0,-0.028234902769327164,-0.03529362753033638,0,0.05646980553865433,0.021176178008317947,0,-0.05646980553865433,-0.014117451384663582,0,0,0.021176178008317947,0,-0.028234902769327164,-0.021176178008317947,0,0.028234902769327164,0,0,-0.028234902769327164,-0.028234902769327164,0,0.028234902769327164,0,0,0,-0.028234902769327164,0,0,0.007058725692331791,0,0,-0.021176178008317947,0,0,0,0,-0.028234902769327164,0,0,0,0.11293961107730865,0,-0.16940942406654358,-0.042352356016635895,0,0,0,0,-0.028234902769327164,-0.021176178008317947,0,0.028234902769327164,0.03529362753033638,0,0,0,0,0.05646980553865433,0.014117451384663582,0,-0.05646980553865433,-0.014117451384663582,0,0,0.028234902769327164,0,-0.028234902769327164,-0.05646980553865433,0,0.08470471203327179,0,0,-0.028234902769327164,-0.014117451384663582,0,0.028234902769327164,0.007058725692331791,0,-0.05646980553865433,-0.007058725692331791,0,0,0.028234902769327164,0,-0.11293961107730865,-0.007058725692331791,0,0.05646980553865433,0.014117451384663582,0,-0.05646980553865433,-0.03529362753033638,0,0,0.03529362753033638,0,0,-0.014117451384663582,0,0,0.10588088631629944,0,0,-0.028234902769327164,0,0.028234902769327164,0,0,-0.028234902769327164,-0.014117451384663582,0,0.028234902769327164,0.014117451384663582,0,0,-0.028234902769327164,0,0,0.021176178008317947,0,-0.08470471203327179,-0.007058725692331791,0,0,0.007058725692331791,0,-0.16940942406654358,-0.007058725692331791,0,0,0,0,-0.028234902769327164,-0.028234902769327164,0,0.05646980553865433,0,0,-0.14117451012134552,-0.09882216155529022,0,0,0,0,-0.11293961107730865,-0.021176178008317947,0,0.08470471203327179,0.014117451384663582,0,0,0,0,0.19764432311058044,0.08470471203327179,0,0,-0.04941108077764511,0,0.5082282423973083,0,0,0,-0.021176178008317947,0,0.028234902769327164,0.042352356016635895,0,-0.08470471203327179,-0.014117451384663582,0,0,0.014117451384663582,0,-0.028234902769327164,-0.03529362753033638,0,0.028234902769327164,0,0,0,-0.07764598727226257,0,0.028234902769327164,0.028234902769327164,0,-0.028234902769327164,-0.03529362753033638,0,0,0,0,0,0,0,0,0.014117451384663582,0,0,0,0,0.028234902769327164,0.014117451384663582,0,-0.028234902769327164,-0.028234902769327164,0,0,0.028234902769327164,0,0,-0.007058725692331791,0,0,0.014117451384663582,0,0,-0.05646980553865433,0,0,0,0,-0.028234902769327164,-0.091763436794281,0,0.14117451012134552,0.007058725692331791,0,0,-0.021176178008317947,0,0.05646980553865433,0.03529362753033638,0,0,-0.07058725506067276,0,0.11293961107730865,0,0,-0.05646980553865433,-0.05646980553865433,0,0,0.042352356016635895,0,0,-0.007058725692331791,0,0.028234902769327164,0.09882216155529022,0,-0.028234902769327164,-0.042352356016635895,0,0,0.2541141211986542,0,-0.028234902769327164,-0.007058725692331791,0,0.05646980553865433,0.021176178008317947,0,-0.028234902769327164,-0.042352356016635895,0,0.028234902769327164,0.014117451384663582,0,0,-0.028234902769327164,0,0.3105839490890503,0.014117451384663582,0,0,-0.007058725692331791,0,0,0.03529362753033638,0,0,-0.021176178008317947,0,0,0.007058725692331791,0,-0.05646980553865433,-0.014117451384663582,0,0.028234902769327164,0,0,-0.028234902769327164,-0.028234902769327164,0,0.028234902769327164,0.028234902769327164,0,-0.028234902769327164,-0.028234902769327164,0,0,0,0,-0.05646980553865433,0,0,0,0,0,-0.05646980553865433,0,0,0,0.007058725692331791,0,-0.028234902769327164,-0.021176178008317947,0,0,0.07764598727226257,0,0,0,0,0.2258792221546173,0.028234902769327164,0,-0.08470471203327179,-0.021176178008317947,0,0,0.05646980553865433,0,-0.028234902769327164,-0.07058725506067276,0],"text":"; auto generated sys (Tools->Generate Sys() Call)\n; 10 SYS (4096)\n*=$0801\n        BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $34, $30, $39, $36, $29, $00, $00, $00\n\n; start address of program in memory 0x1000 = 4096)\n*=$1000\n\nSCREEN_START$ = $0400\n\n        SetColor #$00   ; set screen color to black\n        ClearScreen     ; clear all characters\nLOOP    jmp LOOP        ; loop forever to see result\n        \n\n; macro that sets given color to background and border\ndefm    SetColor\n        lda /1\n        sta $d020\n        sta $d021\n        endm\n\n; macro that clears every character on screen \ndefm    ClearScreen\n        ldx #$00        ; counter init to 0\n        lda #$20        ; 0x20 = SPACE character\n_LOOP        \n        sta SCREEN_START$,x\n        sta SCREEN_START$ + $0100,x\n        sta SCREEN_START$ + $0200,x\n        sta SCREEN_START$ + $0300,x\n        dex             ; decrement counter\n        bne _LOOP\n        endm","sourcePath":"external/github.com/Ziagl_C64-Assembler/08_clearscreen/Main.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/08_clearscreen/Main.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/11_extern/Main.asm","language":"asm","vector":[0,0,0,0,-0.015551140531897545,0,0,0.015551140531897545,0,0,-0.06220456212759018,0,0.12440912425518036,0,0,-0.06220456212759018,0,0,0.06220456212759018,0.046653419733047485,0,0,-0.03110228106379509,0,0,0,0,0,0,0,0,0.23326711356639862,0,0,-0.015551140531897545,0,0,0.015551140531897545,0,0,0,0,0.06220456212759018,0,0,-0.12440912425518036,0,0,0,0,0,0,0,0,0,0,0,-0.06220456212759018,-0.015551140531897545,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.015551140531897545,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.03110228106379509,0,0,0.03110228106379509,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.03110228106379509,0,0,0.07775570452213287,0,0,-0.03110228106379509,0,0.06220456212759018,0.03110228106379509,0,-0.06220456212759018,0,0,0.06220456212759018,0,0,0,0,0,0.06220456212759018,0,0,0,0,0,0,0,0,0,-0.015551140531897545,0,0.06220456212759018,0.03110228106379509,0,0,-0.06220456212759018,0,0.06220456212759018,0.03110228106379509,0,0,0,0,0.06220456212759018,0,0,0,-0.03110228106379509,0,0,0,0,0,0,0,0.06220456212759018,0,0,0,0,0,0,0,0,-0.12440912425518036,0,0,0,0,0,-0.06220456212759018,0,0,0.06220456212759018,0,0,-0.24881824851036072,0,0,0,0,0,0,0,0,0.18661367893218994,0,0,0,0,0,0,0,0,0,-0.015551140531897545,0,0.6842501759529114,0,0,-0.06220456212759018,0,0,0.06220456212759018,0.03110228106379509,0,0,-0.03110228106379509,0,0,0.03110228106379509,0,0,0,0,0,0.06220456212759018,0,0,-0.015551140531897545,0,0,0.015551140531897545,0,-0.06220456212759018,0,0,0,0.03110228106379509,0,0,0,0,0,0.03110228106379509,0,0,0,0,0.06220456212759018,0.03110228106379509,0,0,0,0,0,0.015551140531897545,0,0,-0.03110228106379509,0,0,0.03110228106379509,0,0,0,0,0.12440912425518036,0,0,0,-0.07775570452213287,0,0,0,0,0,-0.03110228106379509,0,0,0.03110228106379509,0,-0.12440912425518036,-0.12440912425518036,0,0.06220456212759018,0,0,0,0,0,0,0.09330683946609497,0,0,0,0,0,0,0,0,0,0,0,0.3421250879764557,0,0,-0.03110228106379509,0,0,0.03110228106379509,0,-0.06220456212759018,0,0,0,0,0,0,0,0,0.12440912425518036,0,0,0,0,0,0,0.015551140531897545,0,0,-0.046653419733047485,0,0,0.015551140531897545,0,0,0,0,0,0.015551140531897545,0,0,0,0,0,0.03110228106379509,0,0,0,0,0,0.015551140531897545,0,0,0,0,0,0.015551140531897545,0,0,0,0,0,0.07775570452213287,0,0,0,0,0,0,0,0,0,0,0,0.015551140531897545,0,-0.06220456212759018,-0.06220456212759018,0,0,0.03110228106379509,0,0,-0.03110228106379509,0],"text":"\n*=$0801\n        BYTE  $0B, $08, $0A, $00, $9E, $32, $30, $36, $34, $00, $00, $00\n\n*=$0810\nstart\n        ldx #$00\n        jsr DOSOMETHING         ; call external subroutine\n        inx\n\n        INCASM \"Something.asm\"  ; include extern asm file","sourcePath":"external/github.com/Ziagl_C64-Assembler/11_extern/Main.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/11_extern/Main.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/11_extern/Something.asm","language":"asm","vector":[0,0,0,0,0,0,0,0.06482037156820297,0,0,0,0,0,0,0,-0.38892224431037903,0,0,0,0.09723056107759476,0,0,0,0,0,0,0,0,0,0,0,0.19446112215518951,0,0,-0.032410185784101486,0,0,0.06482037156820297,0,-0.2592814862728119,0,0,0.2592814862728119,0,0,0,0,0,0.12964074313640594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.12964074313640594,0,0,0,0,0,0,0,0,0,-0.06482037156820297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.19446112215518951,0,0.12964074313640594,0,0,0,0,0,0,0.032410185784101486,0,0,0,0,0,0,0,0,0,0,0,0.032410185784101486,0,-0.2592814862728119,-0.12964074313640594,0,0,0.12964074313640594,0,0,0,0,0,0.16205093264579773,0,0,0,0,0,0.032410185784101486,0,0,0,0,0,0,0,0,0,0,0.2592814862728119,0,0,0,0,0,0,0,0,-0.12964074313640594,0,0,0,0.06482037156820297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.12964074313640594,0,0,0,0,0,0,0,0,0,-0.032410185784101486,0,0,0,0,-0.12964074313640594,0,0,0,0.06482037156820297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.09723056107759476,0,0,0,0,0,-0.12964074313640594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.06482037156820297,0,0,0.06482037156820297,0,0,0,0,0,0.16205093264579773,0,0,0,0,0,0,0,0,-0.06482037156820297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.09723056107759476,0,0,0,0,0.12964074313640594,0,0,0,0,0,0,0,0,0,-0.06482037156820297,0,0.12964074313640594,0,0,0,0,0,0,0,0,0,0,0,0.38892224431037903,0,0,0,0,0,0.12964074313640594,0.032410185784101486,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.06482037156820297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.06482037156820297,0,-0.12964074313640594,0,0,0,0,0,0,-0.032410185784101486,0],"text":"       \n*=$9000\n\n; local macro\ndefm    DoIt\n        ldy #$00\n@LOOP\n        bne @LOOP\n        endm\n\n; subroutine\nDOSOMETHING\n        DoIt    ; calls macro\n        rts","sourcePath":"external/github.com/Ziagl_C64-Assembler/11_extern/Something.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/Something.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"github.com/Ziagl_C64-Assembler/18_sprites/Main.asm","language":"asm","vector":[0.04222526028752327,0.021112630143761635,0,0,-0.017593858763575554,0,0.07037543505430222,0.010556315071880817,0,-0.014075086452066898,-0.05630034580826759,0,0,0.010556315071880817,0,-0.014075086452066898,-0.03166894614696503,0,0,0.014075086452066898,0,-0.014075086452066898,-0.014075086452066898,0,0.014075086452066898,0.03870648890733719,0,0,-0.0035187716130167246,0,0.014075086452066898,0.2568703293800354,0,0,-0.007037543226033449,0,0,0.007037543226033449,0,0,-0.014075086452066898,0,0.07037543505430222,0,0,0,-0.028150172904133797,0,0,0.007037543226033449,0,-0.014075086452066898,-0.03870648890733719,0,0,0.007037543226033449,0,-0.028150172904133797,-0.09500683844089508,0,0.04222526028752327,0,0,-0.028150172904133797,-0.0035187716130167246,0,0.028150172904133797,0,0,0,-0.021112630143761635,0,0,0.010556315071880817,0,0,-0.03166894614696503,0,0.014075086452066898,0.007037543226033449,0,-0.05630034580826759,-0.010556315071880817,0,0,0.260389119386673,0,-0.09852560609579086,-0.024631401523947716,0,0,0.014075086452066898,0,0,-0.017593858763575554,0,0,0.021112630143761635,0,0,-0.007037543226033449,0,0.028150172904133797,0.03518771752715111,0,-0.014075086452066898,-0.021112630143761635,0,0.014075086452066898,0.007037543226033449,0,0,-0.007037543226033449,0,0.028150172904133797,0,0,-0.04222526028752327,-0.010556315071880817,0,0.014075086452066898,0.010556315071880817,0,-0.05630034580826759,-0.017593858763575554,0,0.028150172904133797,0.010556315071880817,0,-0.014075086452066898,0,0,0.028150172904133797,0,0,-0.014075086452066898,-0.007037543226033449,0,0.028150172904133797,0.03870648890733719,0,0,0,0,0.014075086452066898,0.08093174546957016,0,-0.11260069161653519,-0.007037543226033449,0,0.028150172904133797,0.0035187716130167246,0,-0.04222526028752327,-0.014075086452066898,0,0.014075086452066898,0.021112630143761635,0,-0.04222526028752327,-0.014075086452066898,0,0.05630034580826759,0.017593858763575554,0,-0.04222526028752327,-0.017593858763575554,0,0.04222526028752327,0,0,-0.09852560609579086,-0.04574403166770935,0,0.08445052057504654,0.007037543226033449,0,-0.04222526028752327,-0.028150172904133797,0,0.014075086452066898,0,0,-0.08445052057504654,-0.059819117188453674,0,0.014075086452066898,0.0035187716130167246,0,-0.1266757845878601,-0.014075086452066898,0,0.05630034580826759,0,0,0,-0.0035187716130167246,0,0.1266757845878601,0.1442696452140808,0,-0.014075086452066898,-0.017593858763575554,0,0.3800273537635803,0.014075086452066898,0,-0.028150172904133797,-0.0035187716130167246,0,0,0.024631401523947716,0,-0.05630034580826759,-0.021112630143761635,0,0,0.024631401523947716,0,-0.11260069161653519,-0.03166894614696503,0,0,0.014075086452066898,0,-0.014075086452066898,-0.010556315071880817,0,0.028150172904133797,0.014075086452066898,0,-0.014075086452066898,-0.010556315071880817,0,0,0.017593858763575554,0,-0.014075086452066898,0,0,0,0.010556315071880817,0,0,-0.05630034580826759,0,0.014075086452066898,0.014075086452066898,0,-0.014075086452066898,-0.021112630143761635,0,0.028150172904133797,0.024631401523947716,0,-0.014075086452066898,-0.021112630143761635,0,0,0.028150172904133797,0,-0.014075086452066898,-0.024631401523947716,0,0,0.021112630143761635,0,-0.04222526028752327,-0.05630034580826759,0,0,0.05278157442808151,0,-0.028150172904133797,-0.028150172904133797,0,0,0.014075086452066898,0,-0.05630034580826759,-0.04222526028752327,0,0.028150172904133797,0.007037543226033449,0,0,-0.06333789229393005,0,0,0.03166894614696503,0,-0.014075086452066898,-0.014075086452066898,0,0.014075086452066898,0.06333789229393005,0,-0.07037543505430222,-0.03166894614696503,0,0.014075086452066898,0.19001367688179016,0,0,-0.014075086452066898,0,0,0,0,-0.028150172904133797,-0.028150172904133797,0,0.014075086452066898,0.007037543226033449,0,0,-0.059819117188453674,0,0.32372698187828064,0.0035187716130167246,0,0,-0.007037543226033449,0,0.014075086452066898,0.021112630143761635,0,0,-0.017593858763575554,0,0,0.0035187716130167246,0,0,-0.021112630143761635,0,0.014075086452066898,0.007037543226033449,0,-0.07037543505430222,-0.0035187716130167246,0,0,0.014075086452066898,0,-0.1829761266708374,-0.010556315071880817,0,0,0.021112630143761635,0,0,-0.007037543226033449,0,0,0.0035187716130167246,0,-0.04222526028752327,-0.03518771752715111,0,0.014075086452066898,0.007037543226033449,0,-0.05630034580826759,-0.03166894614696503,0,0,0.0035187716130167246,0,-0.014075086452066898,-0.024631401523947716,0,0.520778238773346,0.014075086452066898,0,-0.04222526028752327,-0.03870648890733719,0,0.028150172904133797,0.024631401523947716,0,-0.014075086452066898,-0.024631401523947716,0],"text":"*=$0801\n        BYTE  $0B, $08, $0A, $00, $9E, $32, $30, $36, $34, $00, $00, $00\n*=$0810\n\n        jsr init_screen\n        jsr init_sprites\n\nLOOP    jmp LOOP\n\n\n; initialize screen to black\ninit_screen      \n        ldx #$00      ; set X to zero (black color code)\n        stx $d021     ; set background color\n        stx $d020     ; set border color\n\nclear   lda #$20      ; #$20 is the spacebar Screen Code\n        sta $0400,x   ; fill four areas with 256 spacebar characters\n        sta $0500,x \n        sta $0600,x \n        sta $06e8,x \n        lda #$01      ; set foreground to white in Color Ram \n        sta $d800,x  \n        sta $d900,x\n        sta $da00,x\n        sta $dae8,x\n        inx           ; increment X\n        bne clear     ; did X turn to zero yet?\n                      ; if not, continue with the loop\n        rts           ; return from this subroutine\n\ninit_sprites\n        ; pointer to sprite 1\n        lda #$80\n        sta $07f8\n        ; pointer to sprite 2\n        lda #$89\n        sta $07f9\n        ; enable sprite 1 and 2\n        lda #$03\n        sta $d015\n        ; set Multicolor mode for Sprite 1 and 2\n        lda #$03\n        sta $d01c\n        ; Sprite 1 has priority over background\n        lda #$01\n        sta $d01b\n\n        lda #00         ; Sprite 1 background color\n        sta $d021\n        lda #09         ; Sprite 1 multicolor 1\n        sta $d025\n        lda #08         ; Sprite 1 multicolor 2\n        sta $d026\n        lda #04         ; Sprite 1 main color\n        sta $d027\n        lda #06         ; Sprite 2 main color\n        sta $d028\n\n        ; set x,y position 80 = 128/128\n        lda #$80\n        sta $d000\n        sta $d001\n\n        lda #$A0\n        sta $d002\n        lda #$80\n        sta $d003\n\n        rts\n\n*=$2000\n        INCBIN \"emi.spt\",1,9,true\n        INCBIN \"liam.spt\",1,9,true","sourcePath":"external/github.com/Ziagl_C64-Assembler/18_sprites/Main.asm","sourceMtimeMs":1633711983000,"sourceUrl":"https://github.com/Ziagl/C64-Assembler/blob/master/18_sprites/Main.asm","sourceRepoUrl":"https://github.com/Ziagl/C64-Assembler","license":"UNKNOWN","attribution":"Source: Ziagl/C64-Assembler (License unknown)"},{"name":"githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","language":"asm","vector":[0.00226723519153893,0.00453447038307786,0,-0.01813788153231144,-0.00226723519153893,0,0,0.00226723519153893,0,-0.09749111533164978,-0.0068017058074474335,0,0.00226723519153893,0.0017004264518618584,0,-0.02267235331237316,-0.007368514779955149,0,0.00453447038307786,0.023805970326066017,0,-0.047611940652132034,-0.00566808832809329,0,0.04534470662474632,0.01133617665618658,0,0,-0.005101279355585575,0,0.01133617665618658,0.044777896255254745,0,-0.00226723519153893,-0.006234896834939718,0,0,0.0005668087978847325,0,-0.01133617665618658,-0.00453447038307786,0,0,0.00566808832809329,0,-0.00906894076615572,-0.003967661876231432,0,0,0.0005668087978847325,0,-0.00906894076615572,-0.0034008529037237167,0,0,0.0034008529037237167,0,0,-0.03400852903723717,0,0,0.001133617595769465,0,0,-0.0005668087978847325,0,0.00453447038307786,0.01133617665618658,0,0,-0.001133617595769465,0,0.01133617665618658,0.006234896834939718,0,0,0,0,0,0.00226723519153893,0,0,-0.008502132259309292,0,0.00226723519153893,0.0017004264518618584,0,-0.00226723519153893,-0.002834044164046645,0,0,0,0,-0.00226723519153893,-0.0017004264518618584,0,0,0.00226723519153893,0,-0.00226723519153893,-0.00906894076615572,0,0.8479459881782532,0.0005668087978847325,0,-0.00226723519153893,-0.04931236803531647,0,0.013603411614894867,0.0017004264518618584,0,-0.00226723519153893,-0.01133617665618658,0,0.00226723519153893,0.00226723519153893,0,0,-0.024939587339758873,0,0,0.02323916181921959,0,-0.00226723519153893,-0.0034008529037237167,0,0.031741295009851456,0.006234896834939718,0,-0.01813788153231144,-0.001133617595769465,0,0,0.009635750204324722,0,-0.00453447038307786,-0.008502132259309292,0,0,0,0,-0.00453447038307786,-0.00453447038307786,0,0.00226723519153893,0.015870647504925728,0,-0.0068017058074474335,-0.007368514779955149,0,0.03854300081729889,0,0,-0.00226723519153893,-0.0005668087978847325,0,0.013603411614894867,0.002834044164046645,0,0,0,0,0,0.00226723519153893,0,0,-0.0017004264518618584,0,0.031741295009851456,0.0068017058074474335,0,-0.01813788153231144,-0.013036603108048439,0,0.01813788153231144,0,0,0,0,0,0.00453447038307786,0.001133617595769465,0,0,-0.0017004264518618584,0,0.00226723519153893,0.00226723519153893,0,-0.029474059119820595,-0.001133617595769465,0,0.01813788153231144,0.001133617595769465,0,0,-0.001133617595769465,0,0.04534470662474632,0.42453980445861816,0,-0.0204051174223423,-0.001133617595769465,0,0.052146412432193756,0.0068017058074474335,0,-0.00226723519153893,-0.0017004264518618584,0,0.00226723519153893,0.0017004264518618584,0,-0.013603411614894867,-0.00453447038307786,0,0,0,0,-0.015870647504925728,-0.02550639770925045,0,0.00226723519153893,0.016437456011772156,0,0,-0.014737029559910297,0,0.00453447038307786,0.001133617595769465,0,-0.031741295009851456,-0.014170220121741295,0,0.00453447038307786,0.01133617665618658,0,-0.00226723519153893,-0.00226723519153893,0,0.04534470662474632,0.003967661876231432,0,0,-0.003967661876231432,0,0.0068017058074474335,0.019271500408649445,0,0,-0.003967661876231432,0,0,0.0068017058074474335,0,-0.03400852903723717,-0.00226723519153893,0,0.00226723519153893,0,0,-0.01133617665618658,-0.00226723519153893,0,0,0.015870647504925728,0,-0.00226723519153893,-0.00906894076615572,0,0.00453447038307786,0.00906894076615572,0,0,0,0,0.00226723519153893,0.0034008529037237167,0,-0.00226723519153893,0,0,0.00226723519153893,0.003967661876231432,0,0,-0.014737029559910297,0,0,0.00906894076615572,0,-0.00453447038307786,0,0,0.00226723519153893,0.02323916181921959,0,-0.013603411614894867,-0.010769367218017578,0,0.00226723519153893,0.026073206216096878,0,0,-0.0017004264518618584,0,0.03854300081729889,0.001133617595769465,0,-0.01133617665618658,-0.007368514779955149,0,0,0.2119864970445633,0,0,-0.008502132259309292,0,0.06348259001970291,0.00453447038307786,0,-0.01133617665618658,-0.0005668087978847325,0,0,0.002834044164046645,0,-0.00226723519153893,-0.015870647504925728,0,0.01133617665618658,0.00226723519153893,0,0,-0.0017004264518618584,0,0,0.03060767613351345,0,-0.0068017058074474335,-0.00453447038307786,0,0.00453447038307786,0.0034008529037237167,0,-0.052146412432193756,-0.001133617595769465,0,0,0,0,0,-0.01813788153231144,0,0,0.0017004264518618584,0,-0.00226723519153893,-0.007368514779955149,0,0.00906894076615572,0.009635750204324722,0,0,-0.0017004264518618584,0,0.00453447038307786,0.00566808832809329,0,0,0,0,0.00226723519153893,0.001133617595769465,0,0,-0.001133617595769465,0,0,0.00906894076615572,0,-0.00226723519153893,-0.00453447038307786,0],"text":"<!-- Source: external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-3 -->\n[operations]\nADC  arith  NV----ZC  A + M + C ‚Üí A, C\nAND  logic  N-----Z-  A ‚àß M ‚Üí A\nASL  shift  N-----Z0  C ‚Üê /M7...M0/ ‚Üê 0\nBCC  bra    --------  Branch on C = 0\nBCS  bra    --------  Branch on C = 1\nBEQ  bra    --------  Branch on Z = 1\nBIT  logic  NV----Z-  A ‚àß M, M7 ‚Üí N, M6 ‚Üí V\nBMI  bra    --------  Branch on N = 1\nBNE  bra    --------  Branch on Z = 0\nBPL  bra    --------  Branch on N = 0\nBRK  ctrl   -----1--  PC + 2‚Üì, [FFFE] ‚Üí PCL, [FFFF] ‚Üí PCH\nBVC  bra    --------  Branch on V = 0\nBVS  bra    --------  Branch on V = 1\nCLC  flags  -------0  0 ‚Üí C\nCLD  flags  ----0---  0 ‚Üí D\nCLI  flags  -----0--  0 ‚Üí I\nCLV  flags  -0------  0 ‚Üí V\nCMP  arith  N-----ZC  A - M\nCPX  arith  N-----ZC  X - M\nCPY  arith  N-----ZC  Y - M\nDEC  inc    N-----Z-  M - 1 ‚Üí M\nDEX  inc    N-----Z-  X - 1 ‚Üí X\nDEY  inc    N-----Z-  Y - 1 ‚Üí Y\nEOR  logic  N-----Z-  A ‚äª M ‚Üí A\nINC  inc    N-----Z-  M + 1 ‚Üí M\nINX  inc    N-----Z-  X + 1 ‚Üí X\nINY  inc    N-----Z-  Y + 1 ‚Üí Y\nJMP  ctrl   --------  [PC + 1] ‚Üí PCL, [PC + 2] ‚Üí PCH\nJSR  ctrl   --------  PC + 2‚Üì, [PC + 1] ‚Üí PCL, [PC + 2] ‚Üí PCH\nLDA  load   N-----Z-  M ‚Üí A\nLDX  load   N-----Z-  M ‚Üí X\nLDY  load   N-----Z-  M ‚Üí Y\nLSR  shift  0-----ZC  0 ‚Üí /M7...M0/ ‚Üí C\nNOP  nop    --------  No operation\nORA  logic  N-----Z-  A ‚à® M ‚Üí A\nPHA  stack  --------  A‚Üì\nPHP  stack  --------  P‚Üì\nPLA  stack  N-----Z-  A‚Üë\nPLP  stack  NV--DIZC  P‚Üë\nROL  shift  N-----ZC  C ‚Üê /M7...M0/ ‚Üê C\nROR  shift  N-----ZC  C ‚Üí /M7...M0/ ‚Üí C\nRTI  ctrl   NV--DIZC  P‚Üë PC‚Üë\nRTS  ctrl   --------  PC‚Üë, PC + 1 ‚Üí PC\nSBC  arith  NV----ZC  A - M - ~C ‚Üí A\nSEC  flags  -------1  1 ‚Üí C\nSED  flags  ----1---  1 ‚Üí D\nSEI  flags  -----1--  1 ‚Üí I\nSTA  load   --------  A ‚Üí M\nSTX  load   --------  X ‚Üí M\nSTY  load   --------  Y ‚Üí M\nTAX  trans  N-----Z-  A ‚Üí X\nTAY  trans  N-----Z-  A ‚Üí Y\nTSX  trans  N-----Z-  S ‚Üí X\nTXA  trans  N-----Z-  X ‚Üí A\nTXS  trans  --------  X ‚Üí S\nTYA  trans  N-----Z-  Y ‚Üí A","sourcePath":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","sourceMtimeMs":1761327820825.6404,"origin":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-3"},{"name":"githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","language":"asm","vector":[0,0,0,-0.01670936495065689,-0.025064047425985336,0,0.01670936495065689,0.05848277732729912,0,0,-0.037596069276332855,0,0.06683745980262756,0.01670936495065689,0,-0.03341872990131378,-0.008354682475328445,0,0.01670936495065689,0.03341872990131378,0,-0.03341872990131378,-0.04177341237664223,0,0,0.025064047425985336,0,0,-0.04177341237664223,0,0,0.07936948537826538,0,0,-0.012532023712992668,0,0,0.008354682475328445,0,0,-0.01670936495065689,0,0.10025618970394135,0.008354682475328445,0,-0.03341872990131378,-0.08354682475328445,0,0,0.05012809485197067,0,0,-0.008354682475328445,0,0.06683745980262756,0.025064047425985336,0,0,-0.037596069276332855,0,0,0.037596069276332855,0,-0.01670936495065689,-0.020886706188321114,0,0.01670936495065689,0,0,-0.01670936495065689,-0.09607885032892227,0,0.03341872990131378,0.008354682475328445,0,-0.01670936495065689,-0.03341872990131378,0,0.03341872990131378,0.025064047425985336,0,-0.10025618970394135,-0.008354682475328445,0,0.03341872990131378,0,0,0,-0.25064048171043396,0,0.01670936495065689,0.01670936495065689,0,-0.01670936495065689,-0.025064047425985336,0,0.01670936495065689,0,0,0,-0.008354682475328445,0,0.15038427710533142,0.008354682475328445,0,-0.05012809485197067,-0.008354682475328445,0,0,0.03341872990131378,0,0,-0.01670936495065689,0,0.01670936495065689,0.008354682475328445,0,0,-0.01670936495065689,0,0,0.004177341237664223,0,-0.01670936495065689,-0.012532023712992668,0,0.2005123794078827,0.004177341237664223,0,-0.01670936495065689,0,0,0.06683745980262756,0.01670936495065689,0,-0.01670936495065689,0,0,0.10025618970394135,0.05848277732729912,0,0,-0.025064047425985336,0,0.01670936495065689,0.012532023712992668,0,-0.13367491960525513,0,0,0.13367491960525513,0.03341872990131378,0,0,-0.008354682475328445,0,0,0.004177341237664223,0,0,-0.012532023712992668,0,0,0.025064047425985336,0,0,-0.012532023712992668,0,0,0.020886706188321114,0,-0.01670936495065689,-0.020886706188321114,0,0,0.03341872990131378,0,-0.10025618970394135,-0.054305434226989746,0,0.2005123794078827,0.01670936495065689,0,-0.05012809485197067,-0.04177341237664223,0,0.03341872990131378,0.008354682475328445,0,-0.03341872990131378,-0.012532023712992668,0,0,0.01670936495065689,0,-0.1670936495065689,-0.004177341237664223,0,0.03341872990131378,0.07519213855266571,0,-0.10025618970394135,-0.15038427710533142,0,0.21722173690795898,0.008354682475328445,0,-0.05012809485197067,-0.012532023712992668,0,0.03341872990131378,0.008354682475328445,0,0,-0.004177341237664223,0,0,0.004177341237664223,0,-0.30076855421066284,-0.008354682475328445,0,0.06683745980262756,0.11696555465459824,0,0,-0.01670936495065689,0,0.06683745980262756,0.037596069276332855,0,-0.05012809485197067,-0.01670936495065689,0,0.01670936495065689,0.05012809485197067,0,-0.05012809485197067,0,0,0,0.008354682475328445,0,-0.05012809485197067,-0.06683745980262756,0,0.03341872990131378,0.06683745980262756,0,-0.10025618970394135,0,0,0.03341872990131378,0.025064047425985336,0,0,-0.008354682475328445,0,0,0,0,0,0,0,0,0.01670936495065689,0,0,-0.008354682475328445,0,0,0,0,0,-0.054305434226989746,0,0,0.10443352907896042,0,-0.03341872990131378,-0.02924138866364956,0,0,0.025064047425985336,0,0,-0.020886706188321114,0,0,0.008354682475328445,0,0,-0.10861086845397949,0,0.01670936495065689,0.025064047425985336,0,-0.05012809485197067,-0.05012809485197067,0,0.01670936495065689,0.11278821527957916,0,0,-0.02924138866364956,0,0.06683745980262756,0.020886706188321114,0,0,0,0,0.03341872990131378,0.037596069276332855,0,-0.03341872990131378,-0.16291630268096924,0,0.05012809485197067,0.03341872990131378,0,0,0,0,0,0.037596069276332855,0,-0.03341872990131378,-0.025064047425985336,0,0.01670936495065689,0.008354682475328445,0,-0.01670936495065689,-0.02924138866364956,0,0.06683745980262756,0.05012809485197067,0,-0.01670936495065689,-0.02924138866364956,0,0.01670936495065689,0.03341872990131378,0,-0.05012809485197067,-0.054305434226989746,0,0.06683745980262756,0.04177341237664223,0,-0.01670936495065689,0,0,0,0.004177341237664223,0,-0.1670936495065689,-0.03341872990131378,0,0,0.03341872990131378,0,-0.01670936495065689,0,0,0.03341872990131378,0,0,-0.01670936495065689,0,0,0,0,0,-0.5012809634208679,-0.01670936495065689,0,0.03341872990131378,0,0,-0.05012809485197067,-0.004177341237664223,0],"text":"<!-- Source: external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-10 -->\nSBC  Subtract Memory from Accumulator with Borrow\n     This instruction subtracts the value of memory and borrow from the value of the accumulator, using two's complement arithmetic, and stores the result in the accumulator. Borrow is defined as the carry flag complemented; therefore, a resultant carry flag indicates that a borrow has not occurred.\n     This instruction affects the accumulator. The carry flag is set if the result is greater than or equal to 0. The carry flag is reset when the result is less than 0, indicating a borrow. The over¬≠flow flag is set when the result exceeds +127 or -127, otherwise it is reset. The negative flag is set if the result in the accumulator has bit 7 on, otherwise it is reset. The Z flag is set if the result in the accumulator is 0, otherwise it is reset.\n     ## XXX are the flags correctly described for decimal mode?\n\nAND  \"AND\" Memory with Accumulator\n     The AND instruction transfer the accumulator and memory to the adder which performs a bit-by-bit AND operation and stores the result back in the accumulator.\n     This instruction affects the accumulator; sets the zero flag if the result in the accumulator is 0, otherwise resets the zero flag; sets the negative flag if the result in the accumulator has bit 7 on, otherwise resets the negative flag.","sourcePath":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","sourceMtimeMs":1761327820825.6404,"origin":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-10"},{"name":"githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","language":"asm","vector":[0.014900809153914452,0,0,0,-0.011175606399774551,0,0.014900809153914452,0.06332843750715256,0,0,-0.044702425599098206,0,0.014900809153914452,0.022351212799549103,0,-0.08940485119819641,-0.026076415553689003,0,0.014900809153914452,0.022351212799549103,0,0,-0.037252023816108704,0,0,0.003725202288478613,0,0,-0.059603236615657806,0,0,0.052152831107378006,0,-0.029801618307828903,-0.018626011908054352,0,0,0,0,0,-0.014900809153914452,0,0.029801618307828903,0.014900809153914452,0,-0.07450404763221741,-0.033526819199323654,0,0.029801618307828903,0.09313005954027176,0,0,-0.007450404576957226,0,0.17880970239639282,0.014900809153914452,0,-0.029801618307828903,-0.055878035724163055,0,0,0.059603236615657806,0,0,-0.007450404576957226,0,0.014900809153914452,0.029801618307828903,0,-0.029801618307828903,-0.08940485119819641,0,0,0.007450404576957226,0,-0.014900809153914452,-0.052152831107378006,0,0.059603236615657806,0,0,-0.11920647323131561,-0.007450404576957226,0,0.029801618307828903,0,0,0,-0.271939754486084,0,0,0,0,-0.014900809153914452,-0.007450404576957226,0,0,0.007450404576957226,0,-0.029801618307828903,0,0,0.16390889883041382,0.007450404576957226,0,-0.014900809153914452,-0.029801618307828903,0,0,0.007450404576957226,0,0,-0.048427630215883255,0,0.029801618307828903,0.007450404576957226,0,-0.029801618307828903,-0.003725202288478613,0,0.059603236615657806,0.007450404576957226,0,-0.029801618307828903,-0.014900809153914452,0,0.20861132442951202,0.003725202288478613,0,-0.014900809153914452,-0.014900809153914452,0,0.059603236615657806,0.011175606399774551,0,-0.029801618307828903,0,0,0.14900809526443481,0.014900809153914452,0,0,-0.055878035724163055,0,0.014900809153914452,0.033526819199323654,0,-0.059603236615657806,0,0,0.11920647323131561,0.08940485119819641,0,0,-0.022351212799549103,0,0,0.007450404576957226,0,0,0,0,0,0.044702425599098206,0,0,-0.018626011908054352,0,0,0,0,-0.07450404763221741,-0.033526819199323654,0,0,0.059603236615657806,0,-0.014900809153914452,-0.059603236615657806,0,0.19371052086353302,0.026076415553689003,0,-0.059603236615657806,-0.037252023816108704,0,0.059603236615657806,0,0,-0.10430566221475601,-0.014900809153914452,0,0,0,0,-0.14900809526443481,-0.014900809153914452,0,0.014900809153914452,0.08195444941520691,0,-0.08940485119819641,-0.13783247768878937,0,0.059603236615657806,0,0,-0.07450404763221741,-0.003725202288478613,0,0,0.018626011908054352,0,0,-0.014900809153914452,0,0,0.033526819199323654,0,-0.13410727679729462,-0.014900809153914452,0,0.07450404763221741,0.10803086310625076,0,0,-0.029801618307828903,0,0.059603236615657806,0.033526819199323654,0,-0.014900809153914452,-0.014900809153914452,0,0,0.07450404763221741,0,-0.029801618307828903,0,0,0.029801618307828903,0.007450404576957226,0,-0.059603236615657806,-0.037252023816108704,0,0.029801618307828903,0.059603236615657806,0,-0.14900809526443481,0,0,0,0.007450404576957226,0,-0.029801618307828903,-0.018626011908054352,0,0,0.007450404576957226,0,-0.044702425599098206,0,0,0,0.044702425599098206,0,0,-0.044702425599098206,0,0,0,0,0,-0.007450404576957226,0,0,0.10058046132326126,0,-0.11920647323131561,-0.037252023816108704,0,0,0.029801618307828903,0,-0.014900809153914452,-0.055878035724163055,0,0,0.014900809153914452,0,-0.014900809153914452,-0.10430566221475601,0,0.029801618307828903,0.014900809153914452,0,-0.059603236615657806,-0.044702425599098206,0,0.014900809153914452,0.029801618307828903,0,0,-0.040977224707603455,0,0.044702425599098206,0,0,0,-0.007450404576957226,0,0,0.040977224707603455,0,-0.07450404763221741,-0.07077883929014206,0,0.07450404763221741,0.037252023816108704,0,0,0,0,0,0.037252023816108704,0,-0.029801618307828903,-0.014900809153914452,0,0.029801618307828903,0.014900809153914452,0,0,-0.022351212799549103,0,0.14900809526443481,0.06705363839864731,0,-0.014900809153914452,-0.033526819199323654,0,0,0.029801618307828903,0,-0.10430566221475601,-0.08195444941520691,0,0.11920647323131561,0.037252023816108704,0,0,-0.014900809153914452,0,0.044702425599098206,0.003725202288478613,0,-0.14900809526443481,-0.037252023816108704,0,0,0.029801618307828903,0,-0.029801618307828903,0,0,0,0,0,0,0,0,0,0,0,-0.5215283036231995,-0.059603236615657806,0,0,0,0,-0.014900809153914452,-0.026076415553689003,0],"text":"<!-- Source: external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-11 -->\nORA  \"OR\" Memory with Accumulator\n     The ORA instruction transfers the memory and the accumulator to the adder which performs a binary \"OR\" on a bit-by-bit basis and stores the result in the accumulator.\n     This instruction affects the accumulator; sets the zero flag if the result in the accumulator is 0, otherwise resets the zero flag; sets the negative flag if the result in the accumulator has bit 7 on, otherwise resets the negative flag.\n\nEOR  \"Exclusive OR\" Memory with Accumulator\n     The EOR instruction transfers the memory and the accumulator to the adder which performs a binary \"EXCLUSIVE OR\" on a bit-by-bit basis and stores the result in the accumulator.\n     This instruction affects the accumulator; sets the zero flag if the result in the accumulator is 0, otherwise resets the zero flag sets the negative flag if the result in the accumulator has bit 7 on, otherwise resets the negative flag.\n\nSEC  Set Carry Flag\n     This instruction initializes the carry flag to a 1. This op eration should normally precede a SBC loop. It is also useful when used with a ROL instruction to initialize a bit in memory to a 1.\n     This instruction affects no registers in the microprocessor and no flags other than the carry flag which is set.\n\nCLC  Clear Carry Flag\n     This instruction initializes the carry flag to a 0. This op¬≠ eration should normally precede an ADC loop. It is also useful when used with a R0L instruction to clear a bit in memory.\n     This instruction affects no registers in the microprocessor and no flags other than the carry flag which is reset.","sourcePath":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","sourceMtimeMs":1761327820825.6404,"origin":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-11"},{"name":"githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","language":"asm","vector":[0,0,0,0,-0.017513396218419075,0,0,0.03502679243683815,0,-0.03502679243683815,-0.026270095258951187,0,0.03502679243683815,0.017513396218419075,0,0,-0.04816184192895889,0,0.03502679243683815,0.06129688769578934,0,0,0,0,0.017513396218419075,0.004378349054604769,0,0,-0.0700535848736763,0,0.03502679243683815,0.03502679243683815,0,-0.052540190517902374,-0.04378349334001541,0,0,0,0,-0.017513396218419075,0,0,0,0.017513396218419075,0,-0.19264736771583557,-0.07443193346261978,0,0.08756698668003082,0.052540190517902374,0,-0.0700535848736763,-0.008756698109209538,0,0.15762056410312653,0.013135047629475594,0,-0.03502679243683815,-0.056918539106845856,0,0.03502679243683815,0.0919453352689743,0,0,-0.021891746670007706,0,0.03502679243683815,0.008756698109209538,0,-0.017513396218419075,0,0,0,0,0,-0.017513396218419075,-0.026270095258951187,0,0,0,0,-0.15762056410312653,-0.04378349334001541,0,0.08756698668003082,0.026270095258951187,0,0,-0.19702571630477905,0,0,0.008756698109209538,0,-0.017513396218419075,-0.026270095258951187,0,0,0,0,0,0,0,0.15762056410312653,0,0,-0.03502679243683815,-0.017513396218419075,0,0,0.017513396218419075,0,0,-0.004378349054604769,0,0.017513396218419075,0.017513396218419075,0,-0.10508038103580475,-0.004378349054604769,0,0,0.008756698109209538,0,-0.0700535848736763,-0.008756698109209538,0,0.33275455236434937,0.021891746670007706,0,-0.017513396218419075,-0.026270095258951187,0,0,0.026270095258951187,0,-0.052540190517902374,-0.008756698109209538,0,0,0,0,-0.0700535848736763,-0.11821542680263519,0,0.017513396218419075,0.056918539106845856,0,-0.017513396218419075,-0.03940514102578163,0,0.1401071697473526,0.07881028205156326,0,-0.052540190517902374,-0.017513396218419075,0,0,0.026270095258951187,0,-0.017513396218419075,0,0,0,0.03940514102578163,0,0,-0.013135047629475594,0,0,0.004378349054604769,0,0,-0.03502679243683815,0,0,0.04378349334001541,0,-0.03502679243683815,-0.08756698668003082,0,0.1401071697473526,0.04816184192895889,0,-0.03502679243683815,0,0,0.03502679243683815,0,0,-0.19264736771583557,-0.008756698109209538,0,0.03502679243683815,0,0,0,-0.013135047629475594,0,0.017513396218419075,0.07881028205156326,0,-0.10508038103580475,-0.10508038103580475,0,0.03502679243683815,0.004378349054604769,0,-0.1401071697473526,-0.013135047629475594,0,0,0.008756698109209538,0,0,-0.052540190517902374,0,0,0,0,-0.2977277338504791,-0.04378349334001541,0,0.03502679243683815,0.17513397336006165,0,0,-0.008756698109209538,0,0.017513396218419075,0.008756698109209538,0,-0.017513396218419075,-0.026270095258951187,0,0.017513396218419075,0.004378349054604769,0,-0.017513396218419075,-0.03502679243683815,0,0,0.017513396218419075,0,0,-0.021891746670007706,0,0,0.0700535848736763,0,-0.10508038103580475,-0.03064844384789467,0,0,0,0,-0.0700535848736763,-0.056918539106845856,0,0.10508038103580475,0.021891746670007706,0,-0.08756698668003082,-0.017513396218419075,0,0,0.03940514102578163,0,0,-0.008756698109209538,0,0,0.008756698109209538,0,0,-0.017513396218419075,0,0,0.07881028205156326,0,0,-0.021891746670007706,0,0,0.017513396218419075,0,-0.017513396218419075,-0.10070203244686127,0,0,0.017513396218419075,0,-0.017513396218419075,-0.03940514102578163,0,0,0.03064844384789467,0,-0.03502679243683815,-0.052540190517902374,0,0.017513396218419075,0.017513396218419075,0,0,-0.07443193346261978,0,0.10508038103580475,0,0,0,0,0,0,0.03940514102578163,0,-0.08756698668003082,-0.15762056410312653,0,0.052540190517902374,0.017513396218419075,0,-0.017513396218419075,0,0,0,0.013135047629475594,0,0,-0.03502679243683815,0,0.03502679243683815,0.008756698109209538,0,0,-0.026270095258951187,0,0.08756698668003082,0.08318863809108734,0,-0.017513396218419075,-0.004378349054604769,0,0.017513396218419075,0,0,-0.10508038103580475,-0.06567523628473282,0,0.17513397336006165,0,0,-0.03502679243683815,-0.052540190517902374,0,0.017513396218419075,0.056918539106845856,0,0,-0.04816184192895889,0,0,0.03502679243683815,0,0,-0.013135047629475594,0,0,0,0,-0.052540190517902374,-0.004378349054604769,0,0,0,0,-0.3502679467201233,0,0,0.017513396218419075,0,0,-0.052540190517902374,-0.008756698109209538,0],"text":"<!-- Source: external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-12 -->\nSEI  Set Interrupt Disable\n     This instruction initializes the interrupt disable to a 1. It is used to mask interrupt requests during system reset operations and during interrupt commands.\n     It affects no registers in the microprocessor and no flags other than the interrupt disable which is set.\n\nCLI  Clear Interrupt Disable\n     This instruction initializes the interrupt disable to a 0. This allows the microprocessor to receive interrupts.\n     It affects no registers in the microprocessor and no flags other than the interrupt disable which is cleared.\n\nSED  Set Decimal Mode\n     This instruction sets the decimal mode flag D to a 1. This makes all subsequent ADC and SBC instructions operate as a decimal arithmetic operation.\n     SED affects no registers in the microprocessor and no flags other than the decimal mode which is set to a 1.\n\nCLD  Clear Decimal Mode\n     This instruction sets the decimal mode flag to a 0. This all subsequent ADC and SBC instructions to operate as simple operations.\n     CLD affects no registers in the microprocessor and no flags other than the decimal mode flag which is set to a 0.\n\nCLV  Clear Overflow Flag\n     This instruction clears the overflow flag to a 0. This com¬≠ mand is used in conjunction with the set overflow pin which can change the state of the overflow flag with an external signal.\n     CLV affects no registers in the microprocessor and no flags other than the overflow flag which is set to a 0.","sourcePath":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","sourceMtimeMs":1761327820825.6404,"origin":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-12"},{"name":"githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","language":"asm","vector":[0,0,0,0,-0.04858827218413353,0,0,0.034705907106399536,0,0,-0.04511767998337746,0,0.08329417556524277,0.013882363215088844,0,-0.013882363215088844,-0.031235316768288612,0,0.02776472643017769,0,0,-0.08329417556524277,-0.02776472643017769,0,0,0.010411771945655346,0,0,-0.062470633536577225,0,0,0.12841185927391052,0,-0.013882363215088844,-0.03817649930715561,0,0,0.013882363215088844,0,0,-0.02776472643017769,0,0.05552945286035538,0.013882363215088844,0,-0.041647087782621384,-0.07288240641355515,0,0,0.04858827218413353,0,-0.041647087782621384,-0.006941181607544422,0,0.041647087782621384,0,0,0,-0.06941181421279907,0,0,0.024294136092066765,0,-0.02776472643017769,-0.006941181607544422,0,0.013882363215088844,0.020823543891310692,0,0,-0.02776472643017769,0,0.013882363215088844,0.041647087782621384,0,-0.013882363215088844,-0.013882363215088844,0,0.041647087782621384,0.02776472643017769,0,-0.13882362842559814,-0.041647087782621384,0,0.02776472643017769,0,0,0,-0.26723548769950867,0,0.041647087782621384,0,0,-0.041647087782621384,-0.017352953553199768,0,0.06941181421279907,0,0,0,0,0,0.08329417556524277,0,0,-0.013882363215088844,-0.003470590803772211,0,0,0.041647087782621384,0,-0.05552945286035538,-0.006941181607544422,0,0.013882363215088844,0.013882363215088844,0,0,-0.041647087782621384,0,0,0.003470590803772211,0,0,-0.010411771945655346,0,0.16658835113048553,0.006941181607544422,0,-0.013882363215088844,-0.010411771945655346,0,0.013882363215088844,0,0,-0.013882363215088844,0,0,0.11105890572071075,0.02776472643017769,0,-0.013882363215088844,-0.041647087782621384,0,0.013882363215088844,0.041647087782621384,0,-0.09717654436826706,-0.034705907106399536,0,0.11105890572071075,0.02776472643017769,0,0,-0.013882363215088844,0,0,0.006941181607544422,0,0,-0.013882363215088844,0,0.05552945286035538,0.017352953553199768,0,-0.013882363215088844,-0.003470590803772211,0,0.041647087782621384,0.006941181607544422,0,-0.013882363215088844,-0.024294136092066765,0,0,0.031235316768288612,0,-0.19435308873653412,-0.06941181421279907,0,0.11105890572071075,0.024294136092066765,0,-0.09717654436826706,-0.013882363215088844,0,0,0.034705907106399536,0,-0.09717654436826706,-0.020823543891310692,0,0,0.04858827218413353,0,-0.11105890572071075,-0.017352953553199768,0,0.041647087782621384,0.041647087782621384,0,-0.08329417556524277,-0.13882362842559814,0,0.18047071993350983,0,0,-0.041647087782621384,-0.034705907106399536,0,0,0.006941181607544422,0,0,0,0,0,0,0,-0.2915296256542206,0,0,0.11105890572071075,0.10411772131919861,0,0,-0.010411771945655346,0,0,0.013882363215088844,0,-0.13882362842559814,-0.02776472643017769,0,0.013882363215088844,0.05552945286035538,0,-0.02776472643017769,-0.006941181607544422,0,0,0.006941181607544422,0,0,-0.052058860659599304,0,0.05552945286035538,0.05552945286035538,0,-0.05552945286035538,0,0,0,0.013882363215088844,0,-0.02776472643017769,-0.010411771945655346,0,0,0.02776472643017769,0,-0.013882363215088844,-0.017352953553199768,0,0,0.031235316768288612,0,-0.013882363215088844,-0.006941181607544422,0,0,0,0,0,-0.10411772131919861,0,0,0.05900004133582115,0,-0.013882363215088844,-0.04858827218413353,0,0,0.003470590803772211,0,0,-0.052058860659599304,0,0,0.010411771945655346,0,0,-0.09023535996675491,0,0.013882363215088844,0.02776472643017769,0,-0.041647087782621384,-0.041647087782621384,0,0.02776472643017769,0.10064712911844254,0,-0.013882363215088844,-0.031235316768288612,0,0,0.017352953553199768,0,0,0,0,0,0.020823543891310692,0,-0.08329417556524277,-0.14923539757728577,0,0.16658835113048553,0.05552945286035538,0,-0.05552945286035538,-0.013882363215088844,0,0.02776472643017769,0.003470590803772211,0,-0.05552945286035538,-0.06941181421279907,0,0.02776472643017769,0.006941181607544422,0,0,-0.013882363215088844,0,0.041647087782621384,0.041647087782621384,0,-0.013882363215088844,-0.003470590803772211,0,0,0.031235316768288612,0,-0.06941181421279907,-0.031235316768288612,0,0.041647087782621384,0.02776472643017769,0,0,-0.017352953553199768,0,0.041647087782621384,0.003470590803772211,0,-0.05552945286035538,-0.031235316768288612,0,0.05552945286035538,0.02776472643017769,0,0,-0.006941181607544422,0,0.05552945286035538,0,0,-0.06941181421279907,0,0,0,0.013882363215088844,0,-0.527529776096344,-0.010411771945655346,0,0,0.010411771945655346,0,-0.02776472643017769,-0.003470590803772211,0],"text":"<!-- Source: external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-15 -->\nCMP  Compare Memory and Accumulator\n     This instruction subtracts the contents of memory from the contents of the accumulator.\n     The use of the CMP affects the following flags: Z flag is set on an equal comparison, reset otherwise; the N flag is set or reset by the result bit 7, the carry flag is set when the value in memory is less than or equal to the accumulator, reset when it is greater than the accumulator. The accumulator is not affected.\n\nBIT  Test Bits in Memory with Accumulator\n     This instruction performs an AND between a memory location and the accumulator but does not store the result of the AND into the accumulator.\n     The bit instruction affects the N flag with N being set to the value of bit 7 of the memory being tested, the V flag with V being set equal to bit 6 of the memory being tested and Z being set by the result of the AND operation between the accumulator and the memory if the result is Zero, Z is reset otherwise. It does not affect the accumulator.\n\nLDX  Load Index Register X From Memory\n     Load the index register X from memory.\n     LDX does not affect the C or V flags; sets Z if the value loaded was zero, otherwise resets it; sets N if the value loaded in bit 7 is a 1; otherwise N is reset, and affects only the X register.\n\nLDY  Load Index Register Y From Memory\n     Load the index register Y from memory.\n     LDY does not affect the C or V flags, sets the N flag if the value loaded in bit 7 is a 1, otherwise resets N, sets Z flag if the loaded value is zero otherwise resets Z and only affects the Y register.","sourcePath":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","sourceMtimeMs":1761327820825.6404,"origin":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-15"},{"name":"githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","language":"asm","vector":[0,0.007423923350870609,0,0,-0.03711961582303047,0,0.11878277361392975,0.029695693403482437,0,-0.014847846701741219,-0.018559807911515236,0,0.11878277361392975,0.007423923350870609,0,0,-0.018559807911515236,0,0.029695693403482437,0.007423923350870609,0,-0.059391386806964874,-0.0037119616754353046,0,0.044543541967868805,0.0037119616754353046,0,0,-0.014847846701741219,0,0,0.07795119285583496,0,-0.014847846701741219,-0.0037119616754353046,0,0,0.029695693403482437,0,0,-0.022271770983934402,0,0.014847846701741219,0.007423923350870609,0,-0.014847846701741219,-0.05196746438741684,0,0.029695693403482437,0.007423923350870609,0,-0.059391386806964874,-0.014847846701741219,0,0.07423923164606094,0.014847846701741219,0,0,-0.07795119285583496,0,0,0.022271770983934402,0,0,0,0,0.029695693403482437,0.014847846701741219,0,0,-0.06681530922651291,0,0.044543541967868805,0,0,0,-0.02598373219370842,0,0.07423923164606094,0.03711961582303047,0,-0.029695693403482437,-0.044543541967868805,0,0.014847846701741219,0,0,0,-0.2858210504055023,0,0,0,0,-0.014847846701741219,-0.022271770983934402,0,0.029695693403482437,0,0,-0.014847846701741219,0,0,0.10393492877483368,0.059391386806964874,0,-0.014847846701741219,-0.007423923350870609,0,0,0.059391386806964874,0,-0.13363061845302582,0,0,0.014847846701741219,0.018559807911515236,0,-0.029695693403482437,-0.029695693403482437,0,0,0.022271770983934402,0,0,0,0,0.22271770238876343,0.0037119616754353046,0,-0.014847846701741219,-0.007423923350870609,0,0.044543541967868805,0.0037119616754353046,0,-0.059391386806964874,0,0,0.044543541967868805,0.007423923350870609,0,-0.07423923164606094,-0.007423923350870609,0,0.014847846701741219,0.03711961582303047,0,-0.07423923164606094,-0.029695693403482437,0,0.13363061845302582,0.05196746438741684,0,0,-0.011135885491967201,0,0,0.0037119616754353046,0,0,0,0,0.10393492877483368,0.014847846701741219,0,0,-0.007423923350870609,0,0.13363061845302582,0.022271770983934402,0,0,-0.011135885491967201,0,0,0.04083157703280449,0,-0.1484784632921219,-0.014847846701741219,0,0.11878277361392975,0.014847846701741219,0,-0.07423923164606094,-0.029695693403482437,0,0,0,0,-0.07423923164606094,-0.007423923350870609,0,0,0.033407654613256454,0,-0.014847846701741219,-0.02598373219370842,0,0.014847846701741219,0.05196746438741684,0,-0.059391386806964874,-0.14476650953292847,0,0.13363061845302582,0,0,-0.014847846701741219,-0.07423923164606094,0,0,0.007423923350870609,0,0,-0.014847846701741219,0,0,0.029695693403482437,0,-0.20786985754966736,-0.0037119616754353046,0,0.029695693403482437,0.14105454087257385,0,0,-0.007423923350870609,0,0.059391386806964874,0.029695693403482437,0,-0.22271770238876343,-0.044543541967868805,0,0.059391386806964874,0.033407654613256454,0,0,-0.03711961582303047,0,0,0.007423923350870609,0,-0.029695693403482437,-0.04083157703280449,0,0,0.06681530922651291,0,-0.10393492877483368,0,0,0,0.0037119616754353046,0,-0.029695693403482437,-0.0037119616754353046,0,0,0.059391386806964874,0,-0.044543541967868805,-0.014847846701741219,0,0,0.085375115275383,0,-0.029695693403482437,0,0,0,0,0,0,-0.07423923164606094,0,0,0.06681530922651291,0,0,-0.03711961582303047,0,0,0.011135885491967201,0,0,-0.03711961582303047,0,0.014847846701741219,0.018559807911515236,0,0,-0.014847846701741219,0,0,0.011135885491967201,0,0,-0.029695693403482437,0,0.014847846701741219,0.06681530922651291,0,0,-0.011135885491967201,0,0.014847846701741219,0.007423923350870609,0,0,-0.0037119616754353046,0,0,0.02598373219370842,0,0,-0.1076468899846077,0,0.08908708393573761,0.014847846701741219,0,0,-0.033407654613256454,0,0.059391386806964874,0.033407654613256454,0,-0.044543541967868805,-0.11878277361392975,0,0.014847846701741219,0.029695693403482437,0,0,0,0,0,0.05567942559719086,0,-0.029695693403482437,-0.018559807911515236,0,0,0.011135885491967201,0,-0.044543541967868805,-0.06681530922651291,0,0.014847846701741219,0.011135885491967201,0,0,-0.033407654613256454,0,0.029695693403482437,0.0037119616754353046,0,-0.11878277361392975,-0.04083157703280449,0,0,0.033407654613256454,0,0,-0.014847846701741219,0,0.07423923164606094,0,0,-0.07423923164606094,0,0,0,0.02598373219370842,0,-0.5493703484535217,0,0,0,0.033407654613256454,0,-0.029695693403482437,0,0],"text":"<!-- Source: external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-16 -->\nSTX  Store Index Register X In Memory\n     Transfers value of X register to addressed memory location.\n     No flags or registers in the microprocessor are affected by the store operation.\n\nSTY  Store Index Register Y In Memory\n     Transfer the value of the Y register to the addressed memory location.\n     STY does not affect any flags or registers in the microprocessor.\n\nINX  Increment Index Register X By One\n     Increment X adds 1 to the current value of the X register. This is an 8-bit increment which does not affect the carry operation, therefore, if the value of X before the increment was FF, the resulting value is 00.\n     INX does not affect the carry or overflow flags; it sets the N flag if the result of the increment has a one in bit 7, otherwise resets N; sets the Z flag if the result of the increment is 0, otherwise it resets the Z flag.\n     INX does not affect any other register other than the X register.\n\nINY  Increment Index Register Y By One\n     Increment Y increments or adds one to the current value in the Y register, storing the result in the Y register. As in the case of INX the primary application is to step thru a set of values using the Y register.\n     The INY does not affect the carry or overflow flags, sets the N flag if the result of the increment has a one in bit 7, otherwise resets N, sets Z if as a result of the increment the Y register is zero otherwise resets the Z flag.","sourcePath":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","sourceMtimeMs":1761327820825.6404,"origin":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-16"},{"name":"githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","language":"asm","vector":[0,0,0,0,-0.04226423427462578,0,0.03756820783019066,0.0469602607190609,0,0,-0.009392051957547665,0,0.15027283132076263,0.009392051957547665,0,-0.03756820783019066,-0.0469602607190609,0,0.01878410391509533,0.03756820783019066,0,-0.07513641566038132,0,0,0.01878410391509533,0.004696025978773832,0,0,-0.02817615680396557,0,0,0.07983244210481644,0,0,-0.009392051957547665,0,0,0.01878410391509533,0,0,-0.004696025978773832,0,0.03756820783019066,0,0,-0.03756820783019066,-0.0469602607190609,0,0,0.02817615680396557,0,-0.03756820783019066,-0.009392051957547665,0,0.11270462721586227,0.004696025978773832,0,-0.01878410391509533,-0.08452846854925156,0,0,0.02817615680396557,0,-0.01878410391509533,-0.009392051957547665,0,0.01878410391509533,0,0,0,-0.08922449499368668,0,0,0.02348013035953045,0,0,-0.01878410391509533,0,0.03756820783019066,0.02817615680396557,0,-0.0939205214381218,-0.0469602607190609,0,0,0,0,0,-0.2629774510860443,0,0,0,0,-0.01878410391509533,-0.0704403892159462,0,0,0,0,0,0,0,0.11270462721586227,0.02348013035953045,0,-0.03756820783019066,0,0,0,0.07513641566038132,0,-0.15027283132076263,-0.01878410391509533,0,0.01878410391509533,0.009392051957547665,0,0,-0.04226423427462578,0,0,0.009392051957547665,0,0,0,0,0.1690569370985031,0.004696025978773832,0,-0.01878410391509533,-0.01878410391509533,0,0.05635231360793114,0.01878410391509533,0,-0.05635231360793114,0,0,0.03756820783019066,0.01878410391509533,0,0,-0.02348013035953045,0,0.07513641566038132,0.02817615680396557,0,-0.05635231360793114,-0.01878410391509533,0,0.1690569370985031,0.06574436277151108,0,0,-0.009392051957547665,0,0,0,0,0,-0.009392051957547665,0,0.05635231360793114,0.02348013035953045,0,0,-0.004696025978773832,0,0.11270462721586227,0,0,0,-0.014088078401982784,0,0,0.03287218138575554,0,-0.13148872554302216,-0.0469602607190609,0,0.1878410428762436,0,0,-0.03756820783019066,-0.04226423427462578,0,0,0,0,-0.03756820783019066,-0.009392051957547665,0,0,0.014088078401982784,0,0,-0.01878410391509533,0,0.01878410391509533,0.05635231360793114,0,-0.07513641566038132,-0.15027283132076263,0,0.0939205214381218,0,0,-0.03756820783019066,-0.10800860077142715,0,0,0.009392051957547665,0,-0.01878410391509533,0,0,0,0.009392051957547665,0,-0.1878410428762436,0,0,0,0.12209668010473251,0,0,-0.01878410391509533,0,0.01878410391509533,0.03287218138575554,0,-0.22540925443172455,-0.0469602607190609,0,0,0.02348013035953045,0,-0.03756820783019066,0,0,0,0.03756820783019066,0,-0.01878410391509533,-0.02817615680396557,0,0.0939205214381218,0.08452846854925156,0,-0.07513641566038132,0,0,0,0.009392051957547665,0,-0.03756820783019066,-0.009392051957547665,0,0,0.02817615680396557,0,0,-0.009392051957547665,0,0,0.08452846854925156,0,-0.01878410391509533,-0.004696025978773832,0,0,0,0,0,-0.0704403892159462,0,0.01878410391509533,0.09861654788255692,0,0,-0.01878410391509533,0,0,0,0,0,-0.01878410391509533,0,0,0.009392051957547665,0,-0.01878410391509533,-0.02348013035953045,0,0,0.009392051957547665,0,0,-0.03756820783019066,0,0.01878410391509533,0.0469602607190609,0,-0.07513641566038132,-0.02348013035953045,0,0.07513641566038132,0,0,0,-0.009392051957547665,0,0,0.02817615680396557,0,-0.01878410391509533,-0.10331257432699203,0,0.11270462721586227,0,0,0,-0.03756820783019066,0,0.03756820783019066,0.014088078401982784,0,0,-0.11270462721586227,0,0,0,0,0,-0.01878410391509533,0,0.05635231360793114,0.04226423427462578,0,-0.01878410391509533,-0.014088078401982784,0,0,0.06104834005236626,0,-0.05635231360793114,-0.05165628716349602,0,0.05635231360793114,0.009392051957547665,0,0,-0.01878410391509533,0,0,0.01878410391509533,0,-0.1690569370985031,-0.014088078401982784,0,0,0.04226423427462578,0,0,-0.009392051957547665,0,0.05635231360793114,0,0,-0.07513641566038132,0,0,0,0.02348013035953045,0,-0.5259549021720886,0,0,0,0.02817615680396557,0,-0.13148872554302216,0,0],"text":"<!-- Source: external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-17 -->\nDEX  Decrement Index Register X By One\n     This instruction subtracts one from the current value of the index register X and stores the result in the index register X.\n     DEX does not affect the carry or overflow flag, it sets the N flag if it has bit 7 on as a result of the decrement, otherwise it resets the N flag; sets the Z flag if X is a 0 as a result of the decrement, otherwise it resets the Z flag.\n\nDEY  Decrement Index Register Y By One\n     This instruction subtracts one from the current value in the in¬≠ dex register Y and stores the result into the index register Y. The result does not affect or consider carry so that the value in the index register Y is decremented to 0 and then through 0 to FF.\n     Decrement Y does not affect the carry or overflow flags; if the Y register contains bit 7 on as a result of the decrement the N flag is set, otherwise the N flag is reset. If the Y register is 0 as a result of the decrement, the Z flag is set otherwise the Z flag is reset. This instruction only affects the index register Y.","sourcePath":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","sourceMtimeMs":1761327820825.6404,"origin":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-17"},{"name":"githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","language":"asm","vector":[0,0.004253548104315996,0,0,-0.05954967066645622,0,0.11909934133291245,0.021267740055918694,0,0,-0.021267740055918694,0,0.13611353933811188,0.008507096208631992,0,-0.051042575389146805,-0.008507096208631992,0,0.03402838483452797,0.012760643847286701,0,-0.03402838483452797,-0.008507096208631992,0,0,0.004253548104315996,0,0,-0.03828193247318268,0,0,0.05954967066645622,0,0,-0.02977483533322811,0,0.03402838483452797,0.008507096208631992,0,0,-0.008507096208631992,0,0.08507096022367477,0,0,-0.03402838483452797,-0.06380321830511093,0,0.017014192417263985,0.03828193247318268,0,-0.03402838483452797,-0.008507096208631992,0,0.017014192417263985,0.017014192417263985,0,-0.017014192417263985,-0.06380321830511093,0,0,0.017014192417263985,0,-0.017014192417263985,-0.008507096208631992,0,0.03402838483452797,0.025521287694573402,0,-0.017014192417263985,-0.008507096208631992,0,0.017014192417263985,0.04253548011183739,0,-0.017014192417263985,-0.025521287694573402,0,0.017014192417263985,0.025521287694573402,0,-0.10208515077829361,-0.03402838483452797,0,0.03402838483452797,0,0,0,-0.27648061513900757,0,0.03402838483452797,0.012760643847286701,0,-0.017014192417263985,-0.017014192417263985,0,0,0,0,0,-0.025521287694573402,0,0.13611353933811188,0.05954967066645622,0,-0.017014192417263985,-0.004253548104315996,0,0,0.06805676966905594,0,-0.11909934133291245,-0.025521287694573402,0,0.017014192417263985,0.017014192417263985,0,-0.017014192417263985,-0.02977483533322811,0,0.017014192417263985,0,0,0,-0.004253548104315996,0,0.22118449211120605,0.004253548104315996,0,-0.051042575389146805,0,0,0.03402838483452797,0.021267740055918694,0,-0.017014192417263985,0,0,0.08507096022367477,0.04253548011183739,0,0,-0.025521287694573402,0,0.017014192417263985,0.021267740055918694,0,-0.03402838483452797,-0.02977483533322811,0,0.1531277298927307,0.012760643847286701,0,0,-0.012760643847286701,0,0.051042575389146805,0,0,0,-0.008507096208631992,0,0.03402838483452797,0.02977483533322811,0,-0.03402838483452797,-0.012760643847286701,0,0.08507096022367477,0.012760643847286701,0,-0.017014192417263985,-0.017014192417263985,0,0.017014192417263985,0.017014192417263985,0,-0.13611353933811188,-0.055296123027801514,0,0.08507096022367477,0.025521287694573402,0,-0.051042575389146805,-0.004253548104315996,0,0,0.017014192417263985,0,-0.03402838483452797,-0.008507096208631992,0,0.017014192417263985,0.012760643847286701,0,-0.03402838483452797,-0.012760643847286701,0,0.017014192417263985,0.06805676966905594,0,-0.08507096022367477,-0.1446206271648407,0,0.13611353933811188,0.004253548104315996,0,-0.017014192417263985,-0.06805676966905594,0,0,0.008507096208631992,0,0,-0.008507096208631992,0,0,0.03828193247318268,0,-0.2552128732204437,0,0,0.051042575389146805,0.1446206271648407,0,0,-0.03828193247318268,0,0.03402838483452797,0.025521287694573402,0,-0.18715611100196838,-0.017014192417263985,0,0,0.04253548011183739,0,0,0,0,0.03402838483452797,0.008507096208631992,0,0,-0.017014192417263985,0,0.17014192044734955,0.08507096022367477,0,-0.10208515077829361,0,0,0,0.046789027750492096,0,-0.03402838483452797,-0.008507096208631992,0,0,0.021267740055918694,0,-0.017014192417263985,-0.025521287694573402,0,0.017014192417263985,0.046789027750492096,0,0,-0.012760643847286701,0,0,0.008507096208631992,0,-0.10208515077829361,-0.07231031358242035,0,0,0.051042575389146805,0,-0.017014192417263985,-0.02977483533322811,0,0,0.004253548104315996,0,0,-0.021267740055918694,0,0,0.012760643847286701,0,-0.051042575389146805,-0.04253548011183739,0,0,0.017014192417263985,0,-0.017014192417263985,-0.04253548011183739,0,0.017014192417263985,0.07656386494636536,0,0,-0.012760643847286701,0,0.017014192417263985,0,0,0,0,0,0,0.03402838483452797,0,-0.03402838483452797,-0.13185998797416687,0,0.051042575389146805,0.025521287694573402,0,-0.051042575389146805,-0.02977483533322811,0,0.017014192417263985,0.021267740055918694,0,-0.017014192417263985,-0.0978316068649292,0,0,0.004253548104315996,0,0,0,0,0.051042575389146805,0.07231031358242035,0,-0.017014192417263985,-0.012760643847286701,0,0.017014192417263985,0.09357805550098419,0,-0.03402838483452797,-0.055296123027801514,0,0.03402838483452797,0.021267740055918694,0,-0.017014192417263985,-0.017014192417263985,0,0.03402838483452797,0.004253548104315996,0,-0.017014192417263985,-0.017014192417263985,0,0,0.046789027750492096,0,0,0,0,0.051042575389146805,0.012760643847286701,0,-0.051042575389146805,-0.051042575389146805,0,0,0.008507096208631992,0,-0.5444541573524475,-0.017014192417263985,0,0.017014192417263985,0.021267740055918694,0,-0.03402838483452797,-0.004253548104315996,0],"text":"<!-- Source: external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-19 -->\nCPY  Compare Index Register Y To Memory\n     This instruction performs a two's complement subtraction between the index register Y and the specified memory location. The results of the subtraction are not stored anywhere. The instruction is strict¬≠ly used to set the flags.\n     CPY affects no registers in the microprocessor and also does not affect the overflow flag. If the value in the index register Y is equal to or greater than the value in the memory, the carry flag will be set, otherwise it will be cleared. If the results of the subtract- tion contain bit 7 on the N bit will be set, otherwise it will be cleared. If the value in the index register Y and the value in the memory are equal, the zero flag will be set, otherwise it will be cleared.\n\nTAX  Transfer Accumulator To Index X\n     This instruction takes the value from accumulator A and trans¬≠ fers or loads it into the index register X without disturbing the content of the accumulator A.\n     TAX only affects the index register X, does not affect the carry or overflow flags. The N flag is set if the resultant value in the index register X has bit 7 on, otherwise N is reset. The Z bit is set if the content of the register X is 0 as aresult of theopera¬≠ tion, otherwise it is reset.","sourcePath":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","sourceMtimeMs":1761327820825.6404,"origin":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-19"},{"name":"githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","language":"asm","vector":[0,0.007069565821439028,0,0,-0.08130000531673431,0,0,0.03888260945677757,0,0,0,0,0.16966958343982697,0.007069565821439028,0,-0.05655652657151222,-0.007069565821439028,0,0.014139131642878056,0.02120869792997837,0,-0.04241739585995674,-0.02474348060786724,0,0,0.003534782910719514,0,0,-0.02474348060786724,0,0.02827826328575611,0.06362608820199966,0,0,0,0,0,0,0,0,0,0,0.014139131642878056,0,0,-0.014139131642878056,-0.08130000531673431,0,0.05655652657151222,0.02827826328575611,0,-0.04241739585995674,-0.014139131642878056,0,0.0706956535577774,0.02474348060786724,0,0,-0.06362608820199966,0,0,0.02474348060786724,0,-0.014139131642878056,0,0,0.04241739585995674,0.03888260945677757,0,0,-0.04948696121573448,0,0,0.02120869792997837,0,0,-0.02120869792997837,0,0,0.02120869792997837,0,-0.08483479171991348,-0.04595217853784561,0,0.02827826328575611,0,0,-0.014139131642878056,-0.25450435280799866,0,0,0,0,-0.02827826328575611,-0.02120869792997837,0,0,0,0,0,0,0,0.08483479171991348,0,0,-0.04241739585995674,0,0,0,0.08483479171991348,0,-0.16966958343982697,-0.02827826328575611,0,0.014139131642878056,0.010604348964989185,0,0,-0.04241739585995674,0,0.04241739585995674,0.007069565821439028,0,0,0,0,0.2262261062860489,0.01767391338944435,0,-0.0706956535577774,0,0,0.04241739585995674,0.010604348964989185,0,-0.014139131642878056,0,0,0.0706956535577774,0.007069565821439028,0,0,-0.010604348964989185,0,0.014139131642878056,0.03888260945677757,0,0,-0.02120869792997837,0,0.11311305314302444,0.0353478267788887,0,0,0,0,0.04241739585995674,0,0,0,-0.007069565821439028,0,0.0706956535577774,0.0353478267788887,0,-0.014139131642878056,-0.003534782910719514,0,0.04241739585995674,0.007069565821439028,0,0,-0.007069565821439028,0,0,0.010604348964989185,0,-0.1555304378271103,-0.04241739585995674,0,0.09897392243146896,0.02474348060786724,0,0,-0.03181304410099983,0,0,0,0,-0.02827826328575611,-0.014139131642878056,0,0,0.010604348964989185,0,-0.09897392243146896,-0.01767391338944435,0,0.014139131642878056,0.04241739585995674,0,-0.0706956535577774,-0.14846087992191315,0,0.16966958343982697,0,0,0,-0.09190435707569122,0,0,0.007069565821439028,0,0,0,0,0,0.02120869792997837,0,-0.32520002126693726,0,0,0,0.1555304378271103,0,-0.02827826328575611,-0.04948696121573448,0,0.04241739585995674,0.02474348060786724,0,-0.19794784486293793,-0.01767391338944435,0,0.014139131642878056,0.0353478267788887,0,0,0,0,0.0706956535577774,0.014139131642878056,0,0,0,0,0.08483479171991348,0.05655652657151222,0,-0.08483479171991348,0,0,0,0.02474348060786724,0,-0.04241739585995674,-0.003534782910719514,0,0,0.04948696121573448,0,0,-0.01767391338944435,0,0,0.03888260945677757,0,-0.02827826328575611,0,0,0,0,0,0,-0.08130000531673431,0,0,0.06009130924940109,0,0,0,0,0,0,0,0,-0.014139131642878056,0,0.014139131642878056,0,0,-0.08483479171991348,-0.0706956535577774,0,0.02827826328575611,0.014139131642878056,0,0,-0.03888260945677757,0,0.014139131642878056,0.08483479171991348,0,0,-0.007069565821439028,0,0.04241739585995674,0,0,0,0,0,0,0.02120869792997837,0,-0.014139131642878056,-0.17320436239242554,0,0.04241739585995674,0,0,0,-0.05655652657151222,0,0,0.02474348060786724,0,0,-0.09897392243146896,0,0,0.01767391338944435,0,0,0,0,0.05655652657151222,0.09190435707569122,0,-0.014139131642878056,-0.01767391338944435,0,0.02827826328575611,0.05302174389362335,0,-0.02827826328575611,-0.04595217853784561,0,0.04241739585995674,0.01767391338944435,0,0,-0.02120869792997837,0,0.04241739585995674,0.003534782910719514,0,-0.09897392243146896,0,0,0,0.02827826328575611,0,0,-0.014139131642878056,0,0.04241739585995674,0.010604348964989185,0,-0.0706956535577774,0,0,0,0.01767391338944435,0,-0.5090087056159973,-0.003534782910719514,0,0,0.010604348964989185,0,-0.02827826328575611,0,0],"text":"<!-- Source: external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-20 -->\nTXA  Transfer Index X To Accumulator\n     This instruction moves the value that is in the index register X to the accumulator A without disturbing the content of the index register X.\n     TXA does not affect any register other than the accumula¬≠tor and does not affect the carry or overflow flag. If the result in A has bit 7 on, then the N flag is set, otherwise it is reset. If the resultant value in the accumulator is 0, then the Z flag is set, other¬≠ wise it is reset.\n\nTAY  Transfer Accumula Tor To Index Y\n     This instruction moves the value of the accumulator into index register Y without affecting the accumulator.\n     TAY instruction only affects the Y register and does not affect either the carry or overflow flags. If the index register Y has bit 7 on, then N is set, otherwise it is reset. If the content of the index register Y equals 0 as a result of the operation, Z is set on, otherwise it is reset.\n\nTYA  Transfer Index Y To Accumulator\n     This instruction moves the value that is in the index register Y to accumulator A without disturbing the content of the register Y.\n     TYA does not affect any other register other than the accumula¬≠ tor and does not affect the carry or overflow flag. If the result in the accumulator A has bit 7 on, the N flag is set, otherwise it is reset. If the resultant value in the accumulator A is 0, then the Z flag is set, otherwise it is reset.","sourcePath":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","sourceMtimeMs":1761327820825.6404,"origin":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-20"},{"name":"githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","language":"asm","vector":[0,0.02796238102018833,0,0,-0.00932079367339611,0,0.01864158734679222,0.004660396836698055,0,0,-0.01864158734679222,0,0.07456634938716888,0.03262277692556381,0,-0.01864158734679222,-0.0466039702296257,0,0.11184952408075333,0,0,0,-0.01864158734679222,0,0.01864158734679222,0.004660396836698055,0,0,-0.03262277692556381,0,0.01864158734679222,0.01864158734679222,0,-0.01864158734679222,-0.013981190510094166,0,0,0,0,0,-0.0466039702296257,0,0.1864158809185028,0.0932079404592514,0,-0.03728317469358444,-0.03728317469358444,0,0,0.08388714492321014,0,-0.01864158734679222,-0.00932079367339611,0,0.07456634938716888,0,0,0,-0.02330198511481285,0,0,0.03728317469358444,0,-0.01864158734679222,-0.00932079367339611,0,0.01864158734679222,0.02330198511481285,0,0,-0.01864158734679222,0,0.01864158734679222,0.00932079367339611,0,0,-0.03262277692556381,0,0.01864158734679222,0.03262277692556381,0,-0.14913269877433777,-0.02796238102018833,0,0,0.004660396836698055,0,-0.11184952408075333,-0.2609822154045105,0,0,0,0,-0.01864158734679222,-0.013981190510094166,0,0.01864158734679222,0,0,-0.01864158734679222,-0.004660396836698055,0,0.11184952408075333,0.00932079367339611,0,-0.07456634938716888,0,0,0.01864158734679222,0.03728317469358444,0,0,-0.00932079367339611,0,0.03728317469358444,0.05592476204037666,0,0,0,0,0,0.00932079367339611,0,-0.01864158734679222,0,0,0.20505747199058533,0.02330198511481285,0,-0.01864158734679222,-0.00932079367339611,0,0.279623806476593,0,0,-0.01864158734679222,-0.00932079367339611,0,0,0.0932079404592514,0,-0.01864158734679222,-0.03262277692556381,0,0.01864158734679222,0,0,-0.07456634938716888,-0.00932079367339611,0,0.14913269877433777,0.03728317469358444,0,-0.01864158734679222,-0.004660396836698055,0,0,0.0466039702296257,0,0,-0.01864158734679222,0,0.05592476204037666,0.05126436799764633,0,-0.03728317469358444,-0.004660396836698055,0,0.01864158734679222,0.00932079367339611,0,-0.01864158734679222,-0.00932079367339611,0,0.11184952408075333,0.02796238102018833,0,-0.03728317469358444,-0.07456634938716888,0,0.01864158734679222,0.00932079367339611,0,-0.07456634938716888,-0.06524555385112762,0,0.01864158734679222,0.004660396836698055,0,-0.1864158809185028,-0.02330198511481285,0,0,0.01864158734679222,0,0,-0.02330198511481285,0,0.01864158734679222,0.05592476204037666,0,-0.01864158734679222,-0.1677742898464203,0,0.07456634938716888,0.00932079367339611,0,-0.05592476204037666,-0.004660396836698055,0,0,0.01864158734679222,0,-0.14913269877433777,0,0,0,0.004660396836698055,0,-0.07456634938716888,-0.00932079367339611,0,0,0.12117031961679459,0,0,-0.013981190510094166,0,0,0.1677742898464203,0,-0.01864158734679222,-0.00932079367339611,0,0,0.004660396836698055,0,-0.03728317469358444,-0.00932079367339611,0,0.01864158734679222,0.013981190510094166,0,0,-0.04194357246160507,0,0,0.07456634938716888,0,-0.01864158734679222,-0.00932079367339611,0,0.05592476204037666,0.0466039702296257,0,0,-0.00932079367339611,0,0.01864158734679222,0.02796238102018833,0,0,-0.02330198511481285,0,0,0.02796238102018833,0,-0.01864158734679222,-0.00932079367339611,0,0,0.05592476204037666,0,-0.01864158734679222,-0.02330198511481285,0,0,0.013981190510094166,0,0,-0.03728317469358444,0,0,0.013981190510094166,0,0,-0.0932079404592514,0,0,0.004660396836698055,0,0,-0.03728317469358444,0,0,0.00932079367339611,0,0,-0.03728317469358444,0,0.05592476204037666,0.03728317469358444,0,0,-0.03262277692556381,0,0,0.004660396836698055,0,-0.03728317469358444,-0.07922674715518951,0,0,0.02796238102018833,0,-0.05592476204037666,-0.05592476204037666,0,0,0.004660396836698055,0,0,0,0,0,0.00932079367339611,0,-0.01864158734679222,-0.00932079367339611,0,0.1864158809185028,0,0,-0.03728317469358444,-0.02330198511481285,0,0.1677742898464203,0.06058515980839729,0,-0.01864158734679222,-0.004660396836698055,0,0,0.06990595161914825,0,-0.03728317469358444,-0.013981190510094166,0,0.07456634938716888,0.02796238102018833,0,0,-0.004660396836698055,0,0.03728317469358444,0.013981190510094166,0,-0.03728317469358444,-0.01864158734679222,0,0.01864158734679222,0.03728317469358444,0,-0.05592476204037666,-0.013981190510094166,0,0.03728317469358444,0,0,-0.05592476204037666,-0.00932079367339611,0,0,0.013981190510094166,0,-0.521964430809021,-0.00932079367339611,0,0,0.004660396836698055,0,-0.01864158734679222,-0.004660396836698055,0],"text":"<!-- Source: external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-21 -->\nJSR  Jump To Subroutine\n     This instruction transfers control of the program counter to a subroutine location but leaves a return pointer on the stack to allow the user to return to perform the next instruction in the main program after the subroutine is complete. To accomplish this, JSR instruction stores the program counter address which points to the last byte of the jump instruc¬≠ tion onto the stack using the stack pointer. The stack byte contains the program count high first, followed by program count low. The JSR then transfers the addresses following the jump instruction to the program counter low and the program counter high, thereby directing the program to begin at that new address.\n      The JSR instruction affects no flags, causes the stack pointer to be decremented by 2 and substitutes new values into the program counter low and the program counter high.\n\nRTS  Return From Subroutme\n      This instruction loads the program count low and program count high from the stack into the program counter and increments the program counter so that it points to the instruction following the JSR. The stack pointer is adjusted by incrementing it twice.\n      The RTS instruction does not affect any flags and affects only PCL and PCH.","sourcePath":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","sourceMtimeMs":1761327820825.6404,"origin":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-21"},{"name":"githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","language":"asm","vector":[0,0,0,0,-0.06305410712957382,0,0.054046377539634705,0.009007729589939117,0,0,-0.022519323974847794,0,0.12610821425914764,0.009007729589939117,0,-0.12610821425914764,-0.03603091835975647,0,0.018015459179878235,0,0,-0.018015459179878235,-0.022519323974847794,0,0.018015459179878235,0.004503864794969559,0,0,-0.04503864794969559,0,0.018015459179878235,0.03152705356478691,0,-0.054046377539634705,-0.004503864794969559,0,0.018015459179878235,0,0,0,-0.03152705356478691,0,0.07206183671951294,0.09908502548933029,0,-0.03603091835975647,-0.04503864794969559,0,0,0.05855024233460426,0,-0.018015459179878235,-0.009007729589939117,0,0.12610821425914764,0,0,0,-0.06755797564983368,0,0,0.03152705356478691,0,-0.03603091835975647,-0.009007729589939117,0,0.018015459179878235,0.03152705356478691,0,0,-0.054046377539634705,0,0.07206183671951294,0.009007729589939117,0,0,-0.018015459179878235,0,0.018015459179878235,0.009007729589939117,0,-0.09007729589939117,-0.027023188769817352,0,0,0,0,0,-0.2612241506576538,0,0.018015459179878235,0,0,-0.054046377539634705,-0.04053478315472603,0,0,0,0,0,0,0,0.10809275507926941,0.027023188769817352,0,-0.054046377539634705,-0.009007729589939117,0,0,0.06305410712957382,0,-0.10809275507926941,-0.06305410712957382,0,0.018015459179878235,0.009007729589939117,0,0,-0.013511594384908676,0,0,0.009007729589939117,0,-0.03603091835975647,0,0,0.2522164285182953,0.013511594384908676,0,-0.018015459179878235,-0.027023188769817352,0,0.018015459179878235,0.009007729589939117,0,-0.018015459179878235,0,0,0.054046377539634705,0.03603091835975647,0,-0.018015459179878235,-0.03603091835975647,0,0.018015459179878235,0.004503864794969559,0,-0.018015459179878235,-0.009007729589939117,0,0.18015459179878235,0.06305410712957382,0,0,-0.013511594384908676,0,0.03603091835975647,0.049542512744665146,0,0,-0.018015459179878235,0,0.03603091835975647,0.03603091835975647,0,0,-0.004503864794969559,0,0.054046377539634705,0.03603091835975647,0,0,-0.022519323974847794,0,0,0.022519323974847794,0,-0.21618551015853882,-0.049542512744665146,0,0.03603091835975647,0.004503864794969559,0,-0.09007729589939117,-0.027023188769817352,0,0,0.009007729589939117,0,-0.14412367343902588,-0.03152705356478691,0,0,0.004503864794969559,0,-0.09007729589939117,-0.009007729589939117,0,0.018015459179878235,0.054046377539634705,0,-0.03603091835975647,-0.15763527154922485,0,0.09007729589939117,0,0,-0.018015459179878235,-0.07206183671951294,0,0,0.009007729589939117,0,-0.018015459179878235,0,0,0,0.013511594384908676,0,-0.18015459179878235,-0.018015459179878235,0,0.018015459179878235,0.15763527154922485,0,0,-0.04053478315472603,0,0,0.013511594384908676,0,-0.09007729589939117,-0.013511594384908676,0,0.018015459179878235,0.03152705356478691,0,0,-0.009007729589939117,0,0.09007729589939117,0.013511594384908676,0,0,-0.022519323974847794,0,0.03603091835975647,0.09458116441965103,0,-0.03603091835975647,0,0,0,0.03603091835975647,0,-0.03603091835975647,-0.009007729589939117,0,0,0.018015459179878235,0,0,-0.004503864794969559,0,0,0.05855024233460426,0,-0.018015459179878235,0,0,0,0,0,0,-0.11710048466920853,0,0,0.022519323974847794,0,-0.03603091835975647,-0.04503864794969559,0,0,0.018015459179878235,0,0,-0.07206183671951294,0,0,0.004503864794969559,0,-0.018015459179878235,-0.06755797564983368,0,0,0.009007729589939117,0,0,-0.018015459179878235,0,0.018015459179878235,0.049542512744665146,0,0,-0.022519323974847794,0,0,0,0,0,-0.009007729589939117,0,0,0.027023188769817352,0,-0.07206183671951294,-0.10358889400959015,0,0.018015459179878235,0.009007729589939117,0,0,-0.027023188769817352,0,0,0.004503864794969559,0,-0.054046377539634705,-0.04503864794969559,0,0.19817005097866058,0.009007729589939117,0,0,-0.009007729589939117,0,0.10809275507926941,0.10809275507926941,0,-0.018015459179878235,-0.004503864794969559,0,0,0.022519323974847794,0,-0.09007729589939117,-0.022519323974847794,0,0.054046377539634705,0.013511594384908676,0,-0.018015459179878235,-0.022519323974847794,0,0.018015459179878235,0.004503864794969559,0,-0.10809275507926941,-0.004503864794969559,0,0,0.04503864794969559,0,-0.018015459179878235,-0.009007729589939117,0,0.018015459179878235,0.009007729589939117,0,-0.03603091835975647,0,0,0,0.009007729589939117,0,-0.5224483013153076,-0.018015459179878235,0,0,0.013511594384908676,0,-0.07206183671951294,0,0],"text":"<!-- Source: external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-22 -->\nPHA  Push Accumulator On Stack\n      This instruction transfers the current value of the accumulator to the next location on the stack, automatically decrementing the stack to point to the next empty location.\n      The Push A instruction only affects the stack pointer register which is decremented by 1 as a result of the operation. It affects no flags.\n\nPLA  Pull Accumulator From Stack\n      This instruction adds 1 to the current value of the stack pointer and uses it to address the stack and loads the contents of the stack into the A register.\n      The PLA instruction does not affect the carry or overflow flags. It sets N if the bit 7 is on in accumulator A as a result of instructions, otherwise it is reset. If accumulator A is zero as a result of the PLA, then the Z flag is set, otherwise it is reset. The PLA instruction changes content of the accumulator A to the contents of the memory location at stack register plus 1 and also increments the stack register.\n\nTXS  Transfer Index X To Stack Pointer\n     This instruction transfers the value in the index register X to the stack pointer.\n     TXS changes only the stack pointer, making it equal to the content of the index register X. It does not affect any of the flags.","sourcePath":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","sourceMtimeMs":1761327820825.6404,"origin":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-22"},{"name":"githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","language":"asm","vector":[0,0,0,0,-0.048314254730939865,0,0,0.024157127365469933,0,-0.03865140303969383,-0.019325701519846916,0,0.1159542053937912,0.0144942756742239,0,-0.03865140303969383,-0.024157127365469933,0,0.019325701519846916,0,0,-0.019325701519846916,-0.004831425379961729,0,0,0.004831425379961729,0,0,-0.033819977194070816,0,0,0.03865140303969383,0,-0.019325701519846916,-0.004831425379961729,0,0,0,0,-0.019325701519846916,-0.009662850759923458,0,0.03865140303969383,0.07247138023376465,0,-0.0579771026968956,-0.07247138023376465,0,0.03865140303969383,0.06763995438814163,0,-0.03865140303969383,-0.009662850759923458,0,0.1159542053937912,0,0,0,-0.04348282888531685,0,0,0.03865140303969383,0,-0.019325701519846916,-0.009662850759923458,0,0.019325701519846916,0.009662850759923458,0,0,-0.0579771026968956,0,0,0.024157127365469933,0,-0.019325701519846916,-0.033819977194070816,0,0,0.019325701519846916,0,-0.03865140303969383,-0.024157127365469933,0,0.019325701519846916,0.004831425379961729,0,0,-0.2898855209350586,0,0.019325701519846916,0.004831425379961729,0,-0.03865140303969383,-0.03865140303969383,0,0.019325701519846916,0,0,0,0,0,0.1159542053937912,0,0,-0.0579771026968956,-0.019325701519846916,0,0.019325701519846916,0.0579771026968956,0,-0.07730280607938766,-0.019325701519846916,0,0.019325701519846916,0.009662850759923458,0,0,-0.0144942756742239,0,0,0,0,-0.03865140303969383,0,0,0.2319084107875824,0.004831425379961729,0,-0.019325701519846916,-0.009662850759923458,0,0.019325701519846916,0,0,-0.019325701519846916,-0.009662850759923458,0,0.019325701519846916,0.019325701519846916,0,0,-0.04348282888531685,0,0.019325701519846916,0.024157127365469933,0,-0.09662850946187973,-0.019325701519846916,0,0.1739313155412674,0.0579771026968956,0,0,-0.004831425379961729,0,0.1159542053937912,0.033819977194070816,0,-0.019325701519846916,-0.019325701519846916,0,0.019325701519846916,0.04348282888531685,0,-0.019325701519846916,-0.004831425379961729,0,0.09662850946187973,0,0,0,-0.019325701519846916,0,0,0.019325701519846916,0,-0.15460561215877533,-0.024157127365469933,0,0.09662850946187973,0.0144942756742239,0,-0.07730280607938766,-0.0289885513484478,0,0.019325701519846916,0.009662850759923458,0,-0.09662850946187973,-0.019325701519846916,0,0,0.019325701519846916,0,-0.019325701519846916,-0.004831425379961729,0,0.019325701519846916,0.0579771026968956,0,-0.019325701519846916,-0.16909988224506378,0,0.1159542053937912,0.009662850759923458,0,-0.019325701519846916,-0.0579771026968956,0,0,0.009662850759923458,0,0,0,0,0.019325701519846916,0,0,-0.21258270740509033,-0.0289885513484478,0,0,0.1449427604675293,0,0,-0.019325701519846916,0,0,0.0144942756742239,0,-0.09662850946187973,-0.0144942756742239,0,0,0.009662850759923458,0,0,0,0,0,0.009662850759923458,0,0,-0.05314567685127258,0,0.09662850946187973,0.0869656577706337,0,-0.13527990877628326,-0.004831425379961729,0,0,0.06763995438814163,0,-0.0579771026968956,-0.024157127365469933,0,0.019325701519846916,0.019325701519846916,0,-0.03865140303969383,-0.019325701519846916,0,0.019325701519846916,0.07730280607938766,0,0,0,0,0,0,0,0,-0.08213423192501068,0,0,0.05314567685127258,0,0,-0.03865140303969383,0,0,0.009662850759923458,0,0,-0.05314567685127258,0,0,0,0,-0.019325701519846916,-0.019325701519846916,0,0,0.0144942756742239,0,0,-0.009662850759923458,0,0.019325701519846916,0.06280852854251862,0,0,-0.019325701519846916,0,0,0.004831425379961729,0,0,0,0,0,0.03865140303969383,0,-0.0579771026968956,-0.12078563123941422,0,0.019325701519846916,0.004831425379961729,0,0,-0.019325701519846916,0,0,0.004831425379961729,0,-0.019325701519846916,-0.048314254730939865,0,0.13527990877628326,0,0,-0.03865140303969383,-0.009662850759923458,0,0.13527990877628326,0.0579771026968956,0,-0.019325701519846916,-0.004831425379961729,0,0,0.05314567685127258,0,-0.03865140303969383,-0.07247138023376465,0,0.07730280607938766,0.004831425379961729,0,-0.019325701519846916,-0.0289885513484478,0,0.019325701519846916,0.0144942756742239,0,-0.1159542053937912,-0.04348282888531685,0,0,0.05314567685127258,0,0,0,0,0.03865140303969383,0.0289885513484478,0,-0.019325701519846916,-0.004831425379961729,0,0,0.004831425379961729,0,-0.5604453086853027,-0.004831425379961729,0,0,0.024157127365469933,0,-0.07730280607938766,0,0],"text":"<!-- Source: external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-23 -->\nTSX  Transfer Stack Pointer To Index X\n     This instruction transfers the value in the stack pointer to the index register X.\n     TSX does not affect the carry or overflow flags. It sets N if bit 7 is on in index X as a result of the instruction, otherwise it is reset. If index X is zero as a result of the TSX, the Z flag is set, other¬≠ wise it is reset. TSX changes the value of index X, making it equal to the content of the stack pointer.\n\nPHP  Push Processor Status On Stack\n     This instruction transfers the contents of the processor status reg¬≠ ister unchanged to the stack, as governed by the stack pointer.\n     The PHP instruction affects no registers or flags in the micropro¬≠cessor.\n\nPLP  Pull Processor Status From Stack\n     This instruction transfers the next value on the stack to the Proces¬≠ sor Status register, thereby changing all of the flags and setting the mode switches to the values from the stack.\n     The PLP instruction affects no registers in the processor other than the status register. This instruction could affect all flags in the status register.","sourcePath":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt","sourceMtimeMs":1761327820825.6404,"origin":"external/githubusercontent.com/androdev4u/c64rom/refs/heads/master/6502/cpu_6502.txt#Page-1-23"},{"name":"graphics/sprite/mover.asm","language":"asm","vector":[0,0,0,0,-0.03548867255449295,0,0,0,0,0,0,0,0.1419546902179718,0,0,-0.0709773451089859,0,0,0,0.12421035021543503,0,0,-0.03548867255449295,0,0.0709773451089859,0,0,0,0,0,0,0.1419546902179718,0,0,-0.15969902276992798,0,0,0.08872167766094208,0,-0.0709773451089859,0,0,0.2129320353269577,0,0,-0.0709773451089859,0,0,0,0,0,0,0,0,0,0,0,0,-0.053233008831739426,0,0,0.03548867255449295,0,0,0,0,0.0709773451089859,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.017744336277246475,0,0,0,0,0,0.0709773451089859,0,0,-0.03548867255449295,0,0,0,0,0,-0.017744336277246475,0,0,0.03548867255449295,0,0,0,0,0,0,0,0,0,0,0,0.053233008831739426,0,0,-0.053233008831739426,0,0,0.10646601766347885,0,0,-0.03548867255449295,0,0,0.0709773451089859,0,0,-0.0709773451089859,0,0,0,0,-0.4968414008617401,0,0,0,0,0,-0.0709773451089859,0,0,0,0.03548867255449295,0,-0.0709773451089859,0,0,0.0709773451089859,0,0,-0.0709773451089859,-0.017744336277246475,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0709773451089859,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0709773451089859,0,0,0.3548867106437683,0,0,0,0,0,0,0,0,0,0,0,0,0.03548867255449295,0,0,-0.017744336277246475,0,0,0,0,-0.0709773451089859,0,0,0.1419546902179718,0.017744336277246475,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.2661650478839874,0,0,0.053233008831739426,0,0,-0.053233008831739426,0,0,0,0,0,-0.03548867255449295,0,0,0.03548867255449295,0,0,-0.03548867255449295,0,0,0,0,0,0,0,0.0709773451089859,0.017744336277246475,0,0,0,0,0,0,0,0,0,0,0,0.03548867255449295,0,-0.0709773451089859,0,0,0,0,0,0,0,0,0,0,0,0,-0.03548867255449295,0,0.2129320353269577,0.17744335532188416,0,-0.0709773451089859,0,0,0,0,0,0,0,0,0.2839093804359436,0,0,-0.2839093804359436,0,0,0,0,0,0,-0.03548867255449295,0,0,0.0709773451089859,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0709773451089859,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.12421035021543503,0,0,0,0,0,-0.017744336277246475,0,0,0.03548867255449295,0,0,-0.017744336277246475,0,0,0.017744336277246475,0,0,-0.017744336277246475,0],"text":"        *= $0801\n        SEI\n        LDA #$01\n        STA $D015          ; enable sprite 0\n        LDA #$00\n        STA $D001          ; sprite 0 Y\n        LDA #$18\n        STA $D000          ; sprite 0 X\nLOOP    INC $D000          ; move right\n        LDA $D000\n        CMP #$F0\n        BNE LOOP\n        LDA #$18\n        STA $D000\n        JMP LOOP\n","sourcePath":"data/assembly/examples/graphics/sprite/mover.asm","sourceMtimeMs":1761503116437.7258},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.10945561528205872,0.02736390382051468,0,0,0,0,0,0.01368195191025734,0,0,0,0,0.05472780764102936,0.01368195191025734,0,0,0,0,0.05472780764102936,0,0,-0.05472780764102936,0,0,0,0.01368195191025734,0,0,-0.01368195191025734,0,0,0.05472780764102936,0,-0.05472780764102936,-0.01368195191025734,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.02736390382051468,0,0,-0.01368195191025734,0,0,0.02736390382051468,0,0,-0.02736390382051468,0,0.05472780764102936,0,0,0,0,0,0,0.02736390382051468,0,0,-0.02736390382051468,0,0,0.02736390382051468,0,0,0,0,0.05472780764102936,0.02736390382051468,0,0,-0.05472780764102936,0,0,0,0,0,-0.04104585573077202,0,0,0,0,-0.05472780764102936,-0.02736390382051468,0,0,0.08209171146154404,0,0,0,0,0.6567336916923523,0,0,0,0,0,0,0.02736390382051468,0,0,0,0,0.16418342292308807,0.04104585573077202,0,0,-0.02736390382051468,0,0,0,0,-0.05472780764102936,0,0,0.16418342292308807,0,0,0,-0.02736390382051468,0,0,0,0,-0.05472780764102936,0,0,0,0,0,0,0,0,0.05472780764102936,0,0,0,0,0,0.2736390233039856,0,0,-0.05472780764102936,0,0,0,0.02736390382051468,0,0,0,0,0,0.01368195191025734,0,0,0,0,0.05472780764102936,0.01368195191025734,0,0,0,0,0,0.02736390382051468,0,0,0,0,0.05472780764102936,0,0,0,-0.01368195191025734,0,0.05472780764102936,0.01368195191025734,0,0,-0.02736390382051468,0,0,0.01368195191025734,0,0,-0.02736390382051468,0,0.05472780764102936,0.32836684584617615,0,-0.05472780764102936,-0.01368195191025734,0,0.21891123056411743,0,0,-0.05472780764102936,-0.01368195191025734,0,0,0.10945561528205872,0,0,0,0,0,0,0,0,-0.02736390382051468,0,0,0.09577365964651108,0,-0.05472780764102936,0,0,0,0.01368195191025734,0,-0.10945561528205872,-0.04104585573077202,0,0,0,0,0,0,0,0.10945561528205872,0.02736390382051468,0,0,-0.01368195191025734,0,0,0.1368195116519928,0,0,-0.02736390382051468,0,0,0,0,0,0,0,0,0,0,-0.05472780764102936,0,0,0,0.02736390382051468,0,0,0,0,0.10945561528205872,0.01368195191025734,0,0,0,0,0,0.02736390382051468,0,0,0,0,0,0.02736390382051468,0,0,0,0,0.05472780764102936,0.01368195191025734,0,0,0,0,0,0.02736390382051468,0,0,-0.02736390382051468,0,0,0.10945561528205872,0,0,-0.04104585573077202,0,0,0,0,0,0,0,0,0.16418342292308807,0,0,0,0,0,0,0,0,-0.02736390382051468,0,0,0.04104585573077202,0,0,-0.05472780764102936,0,0,0,0,0,-0.01368195191025734,0,0.05472780764102936,0.09577365964651108,0,0,0,0,0.05472780764102936,0,0,0,-0.01368195191025734,0,0,0,0,0,0,0,0,0.01368195191025734,0,-0.05472780764102936,-0.02736390382051468,0,0.05472780764102936,0.0684097558259964,0,0,-0.01368195191025734,0,0.05472780764102936,0.05472780764102936,0,-0.10945561528205872,0,0,0,0,0,-0.05472780764102936,0,0,0,0.01368195191025734,0,-0.05472780764102936,0,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#zx-ZY-ABS-AX-AY-22333 -->\nz,x Z,Y ABS A,X A,Y 22333\n\nASL\n\n06\n\nROL\n\n26\n\nLSR\n\n46\n\nROR\n\n66\n\nSTX\n\n86","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#zx-ZY-ABS-AX-AY-22333"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.13097167015075684,0.016371458768844604,0,0,-0.03274291753768921,0,0,0.049114376306533813,0,0,-0.016371458768844604,0,0.06548583507537842,0.03274291753768921,0,-0.06548583507537842,0,0,0.06548583507537842,0,0,-0.13097167015075684,0,0,0,0,0,0,-0.016371458768844604,0,0,0,0,0,-0.016371458768844604,0,0,0,0,0,0,0,0,0,0,-0.06548583507537842,-0.03274291753768921,0,0,0,0,0,0,0,0,0,0,0,0,0,0.06548583507537842,0.03274291753768921,0,0,0,0,0,0,0,-0.06548583507537842,-0.03274291753768921,0,0,0,0,0,0,0,0,0.049114376306533813,0,-0.13097167015075684,0,0,0,0,0,-0.06548583507537842,-0.03274291753768921,0,0,0,0,-0.06548583507537842,-0.03274291753768921,0,0,0.08185729384422302,0,0,0,0,0.5893725156784058,0.016371458768844604,0,0,0,0,0.06548583507537842,0.03274291753768921,0,0,-0.03274291753768921,0,0.06548583507537842,0.03274291753768921,0,0,-0.08185729384422302,0,0.13097167015075684,0,0,-0.06548583507537842,0,0,0.19645750522613525,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.06548583507537842,-0.03274291753768921,0,0,0,0,-0.06548583507537842,0,0,0.3274291753768921,0,0,-0.06548583507537842,0,0,0,0.03274291753768921,0,0,-0.016371458768844604,0,0,0,0,0,-0.03274291753768921,0,0,0,0,0,0,0,0.06548583507537842,0.016371458768844604,0,0,-0.06548583507537842,0,0.19645750522613525,0,0,-0.06548583507537842,-0.03274291753768921,0,0.13097167015075684,0,0,0,-0.03274291753768921,0,0,0.016371458768844604,0,0,0,0,0,0.2946862578392029,0,-0.06548583507537842,-0.016371458768844604,0,0,0.03274291753768921,0,-0.06548583507537842,-0.016371458768844604,0,0,0.06548583507537842,0,0,0,0,0,0.06548583507537842,0,0,-0.03274291753768921,0,0,0.11460021138191223,0,0,-0.016371458768844604,0,0,0.016371458768844604,0,0,-0.03274291753768921,0,0,0,0,0,-0.03274291753768921,0,0,0,0,-0.13097167015075684,-0.03274291753768921,0,0,0.16371458768844604,0,0,-0.03274291753768921,0,0.06548583507537842,0,0,0,-0.016371458768844604,0,0,0,0,0,0,0,0,0,0,0,0,0,0.06548583507537842,0.049114376306533813,0,0,0,0,0.06548583507537842,0.09822875261306763,0,0,-0.049114376306533813,0,0,0.06548583507537842,0,0,0,0,0,0,0,-0.06548583507537842,-0.03274291753768921,0,0,0,0,0,-0.049114376306533813,0,0,0,0,0,-0.049114376306533813,0,0,0,0,0,0,0,0,0.14734312891960144,0,0,0,0,0,0.016371458768844604,0,0,0,0,0,0.016371458768844604,0,0,0,0,0,0.03274291753768921,0,-0.06548583507537842,-0.016371458768844604,0,0,0.049114376306533813,0,0,-0.06548583507537842,0,0,0,0,0,0,0,0.06548583507537842,0.03274291753768921,0,0,-0.016371458768844604,0,0,0,0,0,-0.016371458768844604,0,0,0.08185729384422302,0,0,-0.016371458768844604,0,0.06548583507537842,0.03274291753768921,0,0,0,0,0,0.03274291753768921,0,-0.06548583507537842,0,0,0,0,0,-0.06548583507537842,0,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#LDX-A2-A6 -->\nLDX A2 A6\n\nDEC\n\nC6\n\nINC\n\nE6\n\n16\n\n0E 1E\n\n36\n\n2E 3E\n\n56\n\n4E 5E\n\n76\n\n6E 7E\n\n96 8E\n\nB6 AE\n\nBE\n\nD6","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#LDX-A2-A6"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.07729558646678925,0.03864779323339462,0,0,0,0,0.03864779323339462,0.01932389661669731,0,0,0,0,0.03864779323339462,0.028985844925045967,0,-0.11594337970018387,-0.01932389661669731,0,0.03864779323339462,0.07729558646678925,0,-0.03864779323339462,0,0,0,0,0,0,-0.03864779323339462,0,0.03864779323339462,0.057971689850091934,0,0,-0.009661948308348656,0,0,0.009661948308348656,0,0,0,0,0,0,0,0,-0.009661948308348656,0,0,0,0,-0.03864779323339462,0,0,0.03864779323339462,0.028985844925045967,0,0,-0.07729558646678925,0,0.07729558646678925,0,0,0,-0.009661948308348656,0,0,0.01932389661669731,0,0,-0.03864779323339462,0,0,0.009661948308348656,0,0,0,0,0,0.028985844925045967,0,-0.03864779323339462,-0.01932389661669731,0,0.03864779323339462,0.01932389661669731,0,-0.03864779323339462,-0.06763363629579544,0,0,0,0,-0.03864779323339462,-0.028985844925045967,0,0,0.03864779323339462,0,-0.11594337970018387,0,0,0.618364691734314,0.01932389661669731,0,-0.07729558646678925,0,0,0,0.01932389661669731,0,0,-0.057971689850091934,0,0.11594337970018387,0.01932389661669731,0,-0.03864779323339462,-0.01932389661669731,0,0,0,0,-0.03864779323339462,0,0,0.1545911729335785,0.01932389661669731,0,0,-0.009661948308348656,0,0,0.03864779323339462,0,0,0,0,0,0,0,0,-0.009661948308348656,0,0,0.009661948308348656,0,0,-0.01932389661669731,0,0.27053454518318176,0.01932389661669731,0,-0.03864779323339462,0,0,0,0.03864779323339462,0,0,0,0,0,0,0,0,0,0,0.07729558646678925,0.009661948308348656,0,0,-0.03864779323339462,0,0.1545911729335785,0,0,0,-0.01932389661669731,0,0.07729558646678925,0.01932389661669731,0,0,-0.03864779323339462,0,0.11594337970018387,0,0,0,-0.01932389661669731,0,0,0.009661948308348656,0,0,-0.057971689850091934,0,0,0.3188442885875702,0,-0.07729558646678925,-0.06763363629579544,0,0.1545911729335785,0,0,-0.03864779323339462,-0.009661948308348656,0,0.03864779323339462,0.07729558646678925,0,0,-0.01932389661669731,0,0,0.009661948308348656,0,-0.03864779323339462,-0.01932389661669731,0,0,0.08695753663778305,0,0,-0.028985844925045967,0,0.03864779323339462,0.009661948308348656,0,0,-0.009661948308348656,0,0,0,0,-0.03864779323339462,0,0,0.07729558646678925,0.009661948308348656,0,0,0,0,0.03864779323339462,0.13526727259159088,0,0,-0.01932389661669731,0,0.03864779323339462,0,0,-0.07729558646678925,0,0,0,0,0,-0.03864779323339462,-0.009661948308348656,0,0,0.04830974340438843,0,-0.03864779323339462,0,0,0,0.09661948680877686,0,0,0,0,0,0.03864779323339462,0,0,0,0,0,0.057971689850091934,0,0,0,0,0,0,0,0,-0.009661948308348656,0,0,0.009661948308348656,0,0,-0.04830974340438843,0,0,0.07729558646678925,0,-0.03864779323339462,-0.028985844925045967,0,0.1545911729335785,0.01932389661669731,0,0,-0.028985844925045967,0,0,0.1545911729335785,0,-0.03864779323339462,-0.03864779323339462,0,0.03864779323339462,0,0,0,0,0,0,0.04830974340438843,0,0,-0.009661948308348656,0,0,0,0,0,-0.028985844925045967,0,0,0.07729558646678925,0,0,0,0,0.03864779323339462,0.01932389661669731,0,-0.1545911729335785,0,0,0,0.01932389661669731,0,0,-0.03864779323339462,0,0,0,0,-0.07729558646678925,-0.01932389661669731,0,0,0.06763363629579544,0,0,-0.028985844925045967,0,0.03864779323339462,0,0,0,0,0,0.03864779323339462,0,0,-0.11594337970018387,0,0,0,0.01932389661669731,0,-0.03864779323339462,0,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#IMM-ZPAG-ZX-ABS-AX -->\nIMM ZPAG Z,X ABS A,X\n\n2\n\n2\n\n2\n\n3\n\n3\n\nBIT\n\n24\n\nSTY\n\n84\n\nLDY\n\nA0\n\nA4\n\nCPY\n\nCO\n\nC4\n\nCPX\n\nE0\n\nE4\n\n2C\n\n94\n\n8C\n\nB4 AC\n\nBC\n\nCC\n\nEC\n\nMisc. - 0 , - 4 , - C\n\nI\n\n0\n\n1\n\n2\n\n3-\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\nA\n\nB\n\nC\n\nD\n\nE\n\nF\n\n0\n\nBRK\n\nRTI\n\nRTS\n\n8","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#IMM-ZPAG-ZX-ABS-AX"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.29881757497787476,0,0,0,-0.037352196872234344,0,0,0.018676098436117172,0,0,0,0,0.07470439374446869,0.018676098436117172,0,-0.07470439374446869,0,0,0.07470439374446869,0,0,0,-0.037352196872234344,0,0,0,0,0,-0.018676098436117172,0,0,0,0,0,-0.018676098436117172,0,0,0,0,0,-0.037352196872234344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.07470439374446869,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.018676098436117172,0,0,0,0,0,-0.037352196872234344,0,0,0,0,-0.07470439374446869,-0.037352196872234344,0,0,0.14940878748893738,0,0,0,0,0.5976351499557495,0,0,0,0,0,0,0.037352196872234344,0,0,-0.037352196872234344,0,0.07470439374446869,0.037352196872234344,0,0,-0.018676098436117172,0,0,0,0,0,0,0,0.22411318123340607,0,0,0,0,0,0,0,0,0,-0.018676098436117172,0,0,0,0,0,0,0,0,0,0,0,0,0,0.37352195382118225,0,0,-0.14940878748893738,-0.018676098436117172,0,0.07470439374446869,0.037352196872234344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.07470439374446869,0,0,0,0,0,0.07470439374446869,0,0,0,-0.037352196872234344,0,0,0,0,0,0,0,0,0.29881757497787476,0,-0.07470439374446869,-0.018676098436117172,0,0,0,0,-0.07470439374446869,-0.018676098436117172,0,0,0.11205659061670303,0,0,0,0,0,0,0,0,0,0,0,0.1307326853275299,0,0,-0.018676098436117172,0,0,0.018676098436117172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.18676097691059113,0,0,-0.07470439374446869,0,0,0.037352196872234344,0,-0.07470439374446869,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.018676098436117172,0,0,0,0,0,0.037352196872234344,0,0,0,0,0,0.037352196872234344,0,0,0,0,0,0,0,-0.07470439374446869,0,0,0,0,0,0,-0.037352196872234344,0,0,0,0,0,-0.05602829530835152,0,0,0,0,-0.07470439374446869,0,0,0,0.14940878748893738,0,0,0,0,0,0,0,0,0,0,0,0.018676098436117172,0,-0.07470439374446869,0,0,0,0,0,0,0,0,0,0.05602829530835152,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.037352196872234344,0,0,0,0,0,0,0,0,0.09338048845529556,0,0,-0.037352196872234344,0,0,0.018676098436117172,0,0,0,0,0,0,0,-0.07470439374446869,0,0,0,0,0,-0.07470439374446869,0,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#PHP-CLC -->\nPHP CLC\n\nPLP\n\nSEC\n\nPHA\n\nCLI\n\nPLA","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#PHP-CLC"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.10285189747810364,0,0,0,0,0,0,0.038569461554288864,0,0,0,0,0.05142594873905182,0.012856487184762955,0,0,0,0,0.05142594873905182,0.02571297436952591,0,0,0,0,0.05142594873905182,0,0,0,-0.012856487184762955,0,0,0.02571297436952591,0,0,-0.012856487184762955,0,0,0,0,0,0,0,0,0,0,-0.05142594873905182,-0.02571297436952591,0,0,0,0,0,0,0,0,0,0,0,-0.05142594873905182,0,0.05142594873905182,0,0,0,0,0,0,0.012856487184762955,0,0,0,0,0,0.02571297436952591,0,0,0,0,0,0,0,0,0,0,0,0.012856487184762955,0,0,-0.02571297436952591,0,0,0,0,-0.05142594873905182,-0.02571297436952591,0,0,0.05142594873905182,0,0,0,0,0.7199632525444031,0,0,0,-0.02571297436952591,0,0.05142594873905182,0.02571297436952591,0,0,0,0,0.05142594873905182,0.02571297436952591,0,0,0,0,0,0.038569461554288864,0,-0.05142594873905182,0,0,0.15427784621715546,0,0,0,0,0,0,0.012856487184762955,0,0,0,0,0,0,0,0,-0.02571297436952591,0,0,0,0,-0.10285189747810364,0,0,0.3085556924343109,0,0,-0.05142594873905182,0,0,0,0.02571297436952591,0,0,-0.012856487184762955,0,0,0,0,0,0,0,0,0,0,0,-0.02571297436952591,0,0,0,0,0,0,0,0.05142594873905182,0,0,0,0,0,0.05142594873905182,0,0,0,-0.02571297436952591,0,0,0,0,0,0,0,0,0.35998162627220154,0,-0.05142594873905182,-0.012856487184762955,0,0.10285189747810364,0.02571297436952591,0,-0.05142594873905182,-0.012856487184762955,0,0,0.05142594873905182,0,0,0,0,0,0,0,0,-0.02571297436952591,0,0,0.08999540656805038,0,0,0,0,0,0.012856487184762955,0,0,0,0,0,0.012856487184762955,0,0,0,0,0.05142594873905182,0,0,0,-0.05142594873905182,0,0.10285189747810364,0.15427784621715546,0,0,-0.02571297436952591,0,0,0,0,0,-0.012856487184762955,0,0.05142594873905182,0,0,0,0,0,0,0,0,0,0,0,0,0.012856487184762955,0,0,0,0,0,0.02571297436952591,0,-0.10285189747810364,0,0,0,0.02571297436952591,0,0,0,0,0,0,0,0,0,0,0.05142594873905182,0,0,0,-0.02571297436952591,0,0,0.05142594873905182,0,0,-0.038569461554288864,0,0.05142594873905182,0,0,0,0,0,0,0.17999081313610077,0,0,0,0,0,0.012856487184762955,0,0,0,0,0,0.012856487184762955,0,0,0,0,0,0,0,-0.05142594873905182,-0.012856487184762955,0,0,0.06428243219852448,0,0,0,0,0,0.05142594873905182,0,-0.10285189747810364,0,0,0,0,0,0,0,0,0,0.02571297436952591,0,0,-0.02571297436952591,0,0,0.07713892310857773,0,0,-0.012856487184762955,0,0,0,0,0,0,0,0,0,0,-0.05142594873905182,-0.05142594873905182,0,0,0,0,-0.05142594873905182,0,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#TXA-TXS-TAX-TSX-DEX -->\nTXA TXS TAX TSX DEX\n\nNOP\n\nSingle-byte Op Codes - 0, 8, - A","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#TXA-TXS-TAX-TSX-DEX"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.06382527202367783,0,0,0,-0.03191263601183891,0,0.06382527202367783,0.00531877251341939,0,-0.04255018010735512,-0.02659386396408081,0,0.12765054404735565,0.04786895588040352,0,-0.06382527202367783,-0.03191263601183891,0,0.06382527202367783,0.03191263601183891,0,-0.17020072042942047,0,0,0.08510036021471024,0.02127509005367756,0,0,-0.00531877251341939,0,0.08510036021471024,0.11169422417879105,0,-0.06382527202367783,-0.02659386396408081,0,0,0.01063754502683878,0,0,-0.00531877251341939,0,0.04255018010735512,0,0,-0.02127509005367756,-0.05318772792816162,0,0.02127509005367756,0.058506499975919724,0,-0.02127509005367756,-0.00531877251341939,0,0.10637545585632324,0.02659386396408081,0,-0.02127509005367756,0,0,0.04255018010735512,0.05318772792816162,0,0,-0.02127509005367756,0,0,0.02127509005367756,0,-0.14892563223838806,0,0,0,0,0,0,-0.10637545585632324,0,0,0.02127509005367756,0,-0.12765054404735565,-0.015956318005919456,0,0,0,0,-0.04255018010735512,-0.17020072042942047,0,0,0.037231408059597015,0,-0.04255018010735512,-0.04255018010735512,0,0.02127509005367756,0.03191263601183891,0,-0.08510036021471024,0,0,0.2765761911869049,0.04255018010735512,0,-0.04255018010735512,-0.03191263601183891,0,0.04255018010735512,0.06914404779672623,0,0,-0.03191263601183891,0,0.02127509005367756,0.03191263601183891,0,-0.02127509005367756,-0.09041913598775864,0,0,0.04255018010735512,0,0,-0.00531877251341939,0,0.36167654395103455,0.06382527202367783,0,-0.02127509005367756,-0.03191263601183891,0,0,0.00531877251341939,0,-0.02127509005367756,0,0,0.04255018010735512,0.03191263601183891,0,0,-0.01063754502683878,0,0,0.037231408059597015,0,-0.02127509005367756,-0.01063754502683878,0,0.10637545585632324,0.05318772792816162,0,-0.02127509005367756,-0.01063754502683878,0,0.02127509005367756,0.02127509005367756,0,-0.02127509005367756,-0.015956318005919456,0,0,0.02127509005367756,0,-0.04255018010735512,-0.07446281611919403,0,0,0.00531877251341939,0,-0.02127509005367756,0,0,0,0.015956318005919456,0,-0.08510036021471024,-0.06914404779672623,0,0.02127509005367756,0.01063754502683878,0,-0.06382527202367783,-0.02127509005367756,0,0.02127509005367756,0,0,-0.12765054404735565,-0.06914404779672623,0,0.08510036021471024,0.015956318005919456,0,0,-0.04786895588040352,0,0,0.13828809559345245,0,-0.02127509005367756,-0.10637545585632324,0,0.2340259999036789,0.03191263601183891,0,-0.10637545585632324,-0.015956318005919456,0,0.04255018010735512,0.02659386396408081,0,-0.02127509005367756,-0.01063754502683878,0,0,0.015956318005919456,0,-0.08510036021471024,-0.01063754502683878,0,0.06382527202367783,0.21275091171264648,0,-0.02127509005367756,-0.02659386396408081,0,0.06382527202367783,0.015956318005919456,0,0,-0.05318772792816162,0,0.08510036021471024,0.04255018010735512,0,-0.04255018010735512,0,0,0,0.02127509005367756,0,0,-0.02659386396408081,0,0,0.05318772792816162,0,-0.04255018010735512,-0.01063754502683878,0,0.04255018010735512,0.02127509005367756,0,-0.02127509005367756,-0.015956318005919456,0,0,0.00531877251341939,0,0,-0.02659386396408081,0,0.06382527202367783,0.02659386396408081,0,-0.04255018010735512,-0.015956318005919456,0,0,0.01063754502683878,0,0,-0.04255018010735512,0,0.04255018010735512,0.01063754502683878,0,-0.04255018010735512,-0.06914404779672623,0,0.02127509005367756,0.01063754502683878,0,0,-0.06382527202367783,0,0,0.04255018010735512,0,-0.02127509005367756,-0.03191263601183891,0,0,0,0,-0.02127509005367756,-0.02127509005367756,0,0.08510036021471024,0.11701299995183945,0,0,-0.06382527202367783,0,0.02127509005367756,0.02659386396408081,0,0,-0.03191263601183891,0,0.04255018010735512,0.06914404779672623,0,0,-0.05318772792816162,0,0.10637545585632324,0.04255018010735512,0,0,-0.01063754502683878,0,0,0.037231408059597015,0,0,-0.00531877251341939,0,0,0.04255018010735512,0,-0.06382527202367783,-0.02127509005367756,0,0.08510036021471024,0.09041913598775864,0,0,-0.00531877251341939,0,0.02127509005367756,0,0,0,-0.02659386396408081,0,0.06382527202367783,0.03191263601183891,0,-0.02127509005367756,-0.01063754502683878,0,0.04255018010735512,0,0,0,-0.00531877251341939,0,0,0.058506499975919724,0,-0.19147582352161407,-0.02659386396408081,0,0.02127509005367756,0.00531877251341939,0,-0.02127509005367756,-0.00531877251341939,0,0,0.02127509005367756,0,-0.34040144085884094,-0.03191263601183891,0,0.04255018010735512,0.01063754502683878,0,-0.06382527202367783,-0.00531877251341939,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#LDA-D3AD -->\nLDA $D3AD\n\nIt's traditional to write the machine code on the left, and the source code on the right. Let's look closely at what has happened.\nLDA has been translated into SAD. This is the operation code, or op code, which says what to do. It will occupy one byte of memory. But we need to follow the instruction with the address from which we want the load to take place. That's address $ 0 3 AD; it's sixteen bits long, and so it will take two bytes to hold the address. We place the address of the instruction, called the operand, in memory immediately behind the instruc tion. But there's a twist. The last byte comes first, so that address $ D3 AD is stored as two bytes: AD first and then D3.\nThis method of storing addresses-- low byte first-- is standard in the 650x. It seems unusual, but it's there for a good reason. That is, the computer gets extra speed from this \" backwards\" address. Get used to it; you'll see it again, many times.","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#LDA-D3AD"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.06222984939813614,0.012445970438420773,0,-0.024891940876841545,-0.01866895519196987,0,0.04978388175368309,0.01866895519196987,0,-0.024891940876841545,-0.015557462349534035,0,0.08712179213762283,0.003111492609605193,0,-0.024891940876841545,-0.04356089606881142,0,0.08712179213762283,0.015557462349534035,0,-0.06222984939813614,-0.04044940322637558,0,0.012445970438420773,0.028003431856632233,0,0,-0.01866895519196987,0,0.024891940876841545,0.10267925262451172,0,-0.024891940876841545,-0.07156432420015335,0,0.012445970438420773,0.028003431856632233,0,-0.012445970438420773,-0.003111492609605193,0,0.08712179213762283,0.015557462349534035,0,-0.03733791038393974,-0.04044940322637558,0,0.04978388175368309,0.02178044803440571,0,-0.024891940876841545,-0.009334477595984936,0,0.13690567016601562,0.01866895519196987,0,-0.024891940876841545,-0.02178044803440571,0,0.024891940876841545,0.04667238891124725,0,-0.012445970438420773,-0.01866895519196987,0,0.03733791038393974,0.056006863713264465,0,-0.07467582076787949,-0.024891940876841545,0,0,0.006222985219210386,0,0,-0.04667238891124725,0,0.07467582076787949,0.012445970438420773,0,-0.08712179213762283,-0.05289537087082863,0,0.012445970438420773,0.01866895519196987,0,-0.04978388175368309,-0.186689555644989,0,0.03733791038393974,0.009334477595984936,0,-0.012445970438420773,-0.05289537087082863,0,0,0.03733791038393974,0,-0.06222984939813614,-0.01866895519196987,0,0.2364734262228012,0.03111492469906807,0,-0.06222984939813614,-0.04044940322637558,0,0.04978388175368309,0.04667238891124725,0,-0.04978388175368309,-0.012445970438420773,0,0.012445970438420773,0.04667238891124725,0,-0.012445970438420773,-0.03111492469906807,0,0,0.006222985219210386,0,-0.012445970438420773,-0.003111492609605193,0,0.4107170104980469,0.012445970438420773,0,-0.024891940876841545,-0.015557462349534035,0,0.024891940876841545,0.012445970438420773,0,-0.024891940876841545,-0.024891940876841545,0,0.024891940876841545,0.056006863713264465,0,-0.024891940876841545,-0.024891940876841545,0,0,0.04667238891124725,0,-0.03733791038393974,-0.04356089606881142,0,0.08712179213762283,0.07467582076787949,0,-0.04978388175368309,-0.012445970438420773,0,0,0.01866895519196987,0,-0.07467582076787949,-0.015557462349534035,0,0.024891940876841545,0.024891940876841545,0,-0.012445970438420773,-0.03733791038393974,0,0,0.003111492609605193,0,-0.024891940876841545,-0.003111492609605193,0,0.024891940876841545,0.0591183565557003,0,-0.07467582076787949,-0.04978388175368309,0,0.07467582076787949,0.01866895519196987,0,-0.03733791038393974,-0.034226417541503906,0,0.012445970438420773,0.01866895519196987,0,-0.14935164153575897,-0.024891940876841545,0,0.012445970438420773,0.006222985219210386,0,-0.012445970438420773,-0.04978388175368309,0,0.012445970438420773,0.12134820967912674,0,-0.024891940876841545,-0.12445969879627228,0,0.2364734262228012,0.028003431856632233,0,-0.03733791038393974,-0.04667238891124725,0,0.06222984939813614,0.02178044803440571,0,-0.012445970438420773,-0.012445970438420773,0,0.012445970438420773,0.012445970438420773,0,-0.08712179213762283,-0.012445970438420773,0,0.03733791038393974,0.227138951420784,0,-0.03733791038393974,-0.01866895519196987,0,0.04978388175368309,0.034226417541503906,0,-0.06222984939813614,-0.028003431856632233,0,0.012445970438420773,0.015557462349534035,0,-0.024891940876841545,-0.012445970438420773,0,0.12445969879627228,0.006222985219210386,0,-0.024891940876841545,-0.024891940876841545,0,0.024891940876841545,0.04667238891124725,0,-0.03733791038393974,-0.028003431856632233,0,0,0.02178044803440571,0,-0.06222984939813614,-0.04667238891124725,0,0.04978388175368309,0.024891940876841545,0,0,-0.012445970438420773,0,0.012445970438420773,0.034226417541503906,0,-0.03733791038393974,-0.01866895519196987,0,0.024891940876841545,0.01866895519196987,0,-0.024891940876841545,-0.04044940322637558,0,0.024891940876841545,0.04667238891124725,0,-0.11201372742652893,-0.03733791038393974,0,0.012445970438420773,0.006222985219210386,0,0,-0.07467582076787949,0,0.012445970438420773,0.024891940876841545,0,0,-0.028003431856632233,0,0,0.009334477595984936,0,-0.012445970438420773,-0.024891940876841545,0,0,0.1275711953639984,0,-0.012445970438420773,-0.02178044803440571,0,0.024891940876841545,0.03111492469906807,0,-0.07467582076787949,-0.02178044803440571,0,0.04978388175368309,0.06534134596586227,0,-0.024891940876841545,-0.0591183565557003,0,0.08712179213762283,0.03111492469906807,0,-0.12445969879627228,-0.03111492469906807,0,0.024891940876841545,0.028003431856632233,0,0,-0.034226417541503906,0,0.024891940876841545,0.006222985219210386,0,-0.03733791038393974,-0.015557462349534035,0,0.024891940876841545,0.16490910947322845,0,0,-0.01866895519196987,0,0.012445970438420773,0.01866895519196987,0,-0.012445970438420773,-0.024891940876841545,0,0.08712179213762283,0.006222985219210386,0,-0.024891940876841545,-0.03733791038393974,0,0.04978388175368309,0.024891940876841545,0,-0.03733791038393974,-0.009334477595984936,0,0,0.028003431856632233,0,-0.07467582076787949,-0.03111492469906807,0,0.024891940876841545,0.012445970438420773,0,-0.07467582076787949,-0.03111492469906807,0,0.012445970438420773,0.01866895519196987,0,-0.373379111289978,-0.0591183565557003,0,0.012445970438420773,0.006222985219210386,0,-0.08712179213762283,-0.006222985219210386,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#CONTROLLING-OUTPUT-2 -->\nFirst, the plan; we lay out the instructions\nLDA #$4A\nWe're using a new symbol (#) to signal a special type of information. It goes by a variety of names: pounds sign, sharp, hash mark, or numbers sign. A more formal name for the symbol is octothorpe, meaning \"eight points.\" Whatever you call it, the symbol means \"the following information is not an address, it's a value.\" In other words, we don't want the computer to go to address $4 A, we want it to load the A register with the value $4 A, which represents the ASCII letter H. This type of information access is called immediate addressing. In other words, take the information im mediately, don't go to memory for it.\nJSR $FFD2\nThe previous instruction brought the letter H into the A register; this one prints it to the screen. Now all we need to do is quit. BRK takes us to the machine language monitor.\nMonitor Extensions\nWe could repeat the steps of the previous chapter: hand-assembling the source code into machine language, and then placing it into memory. We would need to know the instruction codes, and then do a careful translation. But there's an easier way.\nMost machine language monitors contain extra commands to help us do this type of mechanical translation. We'll use the assembler feature of these monitors.\nMost monitors contain the assemble ( . A) command. The notable excep tion is the built-in monitors within the PET/CBM; these, however, can be extended by loading in a \" monitor extension\" program such as Supermon. The Commodore PLUS/4 series contains an extended monitor, which includes the . A command.\nThese assemblers are often called nonsymboiic assemblers. This means that whenever an address is needed, you must furnish that exact address. You cannot type in a name such as CHROUT and expect the tiny assem bler to know what address that represents; instead, you must type $FFDE.\nLoad your monitor or monitor extension. Do any setup that may be needed. Then type the following monitor command:\n. A D 3 3 C LDA #$4A","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#CONTROLLING-OUTPUT-2"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.05133507773280144,0.01925065368413925,0,-0.01283376943320036,-0.0385013073682785,0,0.10267015546560287,0.00641688471660018,0,0,-0.01283376943320036,0,0.05133507773280144,0.01283376943320036,0,-0.154005229473114,-0.06096040457487106,0,0.077002614736557,0.028875980526208878,0,-0.08983638882637024,-0.0385013073682785,0,0.11550392210483551,0.01283376943320036,0,0,-0.016042212024331093,0,0.06416884809732437,0.0737941712141037,0,-0.02566753886640072,-0.01283376943320036,0,0,0.016042212024331093,0,0,-0.00641688471660018,0,0.01283376943320036,0.01283376943320036,0,-0.06416884809732437,-0.04170975089073181,0,0.02566753886640072,0.016042212024331093,0,-0.02566753886640072,-0.016042212024331093,0,0.10267015546560287,0.01925065368413925,0,-0.0385013073682785,-0.028875980526208878,0,0.01283376943320036,0.01925065368413925,0,-0.01283376943320036,-0.032084424048662186,0,0.01283376943320036,0.07058573514223099,0,-0.0385013073682785,-0.032084424048662186,0,0.02566753886640072,0.01283376943320036,0,-0.01283376943320036,-0.009625326842069626,0,0,0.04170975089073181,0,-0.12833769619464874,-0.04491819441318512,0,0.01283376943320036,0,0,-0.0385013073682785,-0.16363056004047394,0,0,0.00641688471660018,0,-0.077002614736557,-0.04170975089073181,0,0.01283376943320036,0.04170975089073181,0,-0.05133507773280144,-0.02245909720659256,0,0.20534031093120575,0.06096040457487106,0,-0.06416884809732437,-0.02566753886640072,0,0.0385013073682785,0.028875980526208878,0,-0.01283376943320036,-0.077002614736557,0,0.0385013073682785,0.04491819441318512,0,-0.0385013073682785,-0.054543521255254745,0,0.01283376943320036,0.057751961052417755,0,0,0,0,0.39784684777259827,0.035292867571115494,0,-0.01283376943320036,-0.016042212024331093,0,0.02566753886640072,0.009625326842069626,0,0,-0.016042212024331093,0,0.06416884809732437,0.01283376943320036,0,-0.02566753886640072,-0.035292867571115494,0,0.02566753886640072,0.028875980526208878,0,-0.06416884809732437,-0.01283376943320036,0,0.06416884809732437,0.057751961052417755,0,-0.05133507773280144,-0.02245909720659256,0,0,0.009625326842069626,0,-0.08983638882637024,-0.009625326842069626,0,0.14117147028446198,0.009625326842069626,0,-0.01283376943320036,-0.02245909720659256,0,0,0.016042212024331093,0,-0.08983638882637024,-0.01925065368413925,0,0.02566753886640072,0.00641688471660018,0,-0.077002614736557,-0.08021105825901031,0,0.02566753886640072,0.01925065368413925,0,-0.05133507773280144,-0.032084424048662186,0,0.02566753886640072,0.00641688471660018,0,-0.21817408502101898,-0.0385013073682785,0,0.0385013073682785,0.02566753886640072,0,-0.02566753886640072,-0.0385013073682785,0,0,0.10267015546560287,0,-0.0385013073682785,-0.1122954860329628,0,0.16683900356292725,0.02245909720659256,0,-0.05133507773280144,-0.02566753886640072,0,0.01283376943320036,0.032084424048662186,0,0,-0.02245909720659256,0,0.02566753886640072,0.032084424048662186,0,-0.14117147028446198,0,0,0.0385013073682785,0.21175719797611237,0,-0.0385013073682785,-0.04491819441318512,0,0.05133507773280144,0.032084424048662186,0,-0.01283376943320036,-0.02245909720659256,0,0.02566753886640072,0.06096040457487106,0,0,-0.01283376943320036,0,0.17967277765274048,0.028875980526208878,0,-0.02566753886640072,-0.0385013073682785,0,0,0.032084424048662186,0,-0.0385013073682785,-0.02566753886640072,0,0.01283376943320036,0.00320844235830009,0,-0.077002614736557,-0.06096040457487106,0,0,0.077002614736557,0,-0.01283376943320036,-0.01283376943320036,0,0,0.02566753886640072,0,-0.01283376943320036,-0.054543521255254745,0,0.06416884809732437,0.016042212024331093,0,-0.06416884809732437,-0.04170975089073181,0,0.0385013073682785,0.016042212024331093,0,-0.10267015546560287,-0.035292867571115494,0,0.01283376943320036,0.01925065368413925,0,0,-0.1122954860329628,0,0.02566753886640072,0.01925065368413925,0,-0.0385013073682785,-0.04491819441318512,0,0,0.00320844235830009,0,0,-0.028875980526208878,0,0.01283376943320036,0.08341950178146362,0,-0.01283376943320036,-0.04491819441318512,0,0.0385013073682785,0.009625326842069626,0,-0.06416884809732437,-0.01283376943320036,0,0.02566753886640072,0.06416884809732437,0,-0.01283376943320036,-0.08662794530391693,0,0.06416884809732437,0.028875980526208878,0,0,-0.02245909720659256,0,0.02566753886640072,0.035292867571115494,0,-0.01283376943320036,-0.016042212024331093,0,0.01283376943320036,0.016042212024331093,0,-0.01283376943320036,0,0,0.01283376943320036,0.1892980933189392,0,-0.01283376943320036,-0.016042212024331093,0,0.01283376943320036,0.00641688471660018,0,-0.05133507773280144,-0.01925065368413925,0,0.02566753886640072,0.02245909720659256,0,-0.06416884809732437,-0.04491819441318512,0,0.05133507773280144,0.00641688471660018,0,-0.05133507773280144,-0.02245909720659256,0,0.02566753886640072,0.016042212024331093,0,0,-0.01925065368413925,0,0.077002614736557,0.032084424048662186,0,-0.05133507773280144,-0.054543521255254745,0,0,0.054543521255254745,0,-0.32084423303604126,-0.054543521255254745,0,0.01283376943320036,0.00641688471660018,0,-0.077002614736557,-0.02245909720659256,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#NUMBERS-ARITHMETIC-AND-SUBROUTINES-2 -->\nLSR ft so as to distinguish from LSR $ 1 2 3 4 , where the contents of memory is being shifted.\nWhen a rotate or shift is performed directly on a memory location, the Z, N, and C flags are affected according to the contents of memory. Z will be set if the contents of the location ends up as zero; N if the high bit is set; and C performs its standard role of catching the leftover bit.\nSome programmers wonder about the terms logical and arithmetic, used as part of the definition. The distinction is related to the way that signed numbers are treated. \" Logical\" means that the sign of a number will prob ably be lost if the number was intended to be signed. \"Arithmetic\" means that the sign will probably be preserved. It's purely a terminology question: the bits themselves move exactly as you would expect them to do.\nSubroutines\nWe have written programs that are subroutines called by BASIC. We have written subroutine calls to built-in operations such as $ FF D2 or $ F F E4 . Can we also write our own subroutine and arrange to call it?\nOf course we can. RTS (return from subroutine) does not mean \" return to BASIC.\" It means \" return to whoever called this routine.\" If BASK called up the machine language routine, RTS takes you back to BASIC. If another machine language program called up the subroutine, RTS will return to the calling point.\nWe wrote a useful subroutine in the last chapter. Its purpose was to accept only numeric keys, echo them to the screen, and convert the ASCII value to binary. Now we'll use this subroutine to build a more powerful program. Here it is. Be sure it's entered in your computer.\nÔøΩft  33C JSR $FFE1\n. A  3 3 F BEQ $  3 5 1 ÔøΩ A 341 JSR $FFE4 .A  3 4 4 CMP # $ 3 D . A  34 L BCC $D33C . A  34 A CMP # $ 3 A . A  34 A BCS $D33C .A 34C JSR $FFD2 ÔøΩ A  3 4 F AND # $ D F . A  3 5 1 RTS","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#NUMBERS-ARITHMETIC-AND-SUBROUTINES-2"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.06336844712495804,0,0,0,-0.01584211178123951,0,0,0.02376316860318184,0,0,-0.007921055890619755,0,0.03168422356247902,0.0396052822470665,0,-0.03168422356247902,-0.03168422356247902,0,0.12673689424991608,0,0,-0.06336844712495804,0,0,0,0,0,-0.03168422356247902,-0.007921055890619755,0,0.06336844712495804,0.09505267441272736,0,-0.03168422356247902,-0.007921055890619755,0,0,0.03168422356247902,0,0,-0.01584211178123951,0,0,0.02376316860318184,0,-0.03168422356247902,-0.01584211178123951,0,0,0,0,0,-0.007921055890619755,0,0.03168422356247902,0,0,0,-0.03168422356247902,0,0.03168422356247902,0,0,0,-0.01584211178123951,0,0,0.05544739216566086,0,-0.06336844712495804,-0.06336844712495804,0,0.03168422356247902,0.01584211178123951,0,0,-0.01584211178123951,0,0.09505267441272736,0.02376316860318184,0,-0.06336844712495804,0,0,0,0.007921055890619755,0,0,-0.11089478433132172,0,0,0.0396052822470665,0,-0.03168422356247902,-0.02376316860318184,0,0,0.03168422356247902,0,-0.06336844712495804,0,0,0.5703160166740417,0,0,-0.03168422356247902,0,0,0,0.01584211178123951,0,-0.03168422356247902,-0.01584211178123951,0,0.03168422356247902,0.06336844712495804,0,0,-0.03168422356247902,0,0,0.007921055890619755,0,0,-0.01584211178123951,0,0.22178956866264343,0.04752633720636368,0,0,-0.01584211178123951,0,0,0,0,0,0,0,0,0,0,-0.03168422356247902,-0.01584211178123951,0,0,0.01584211178123951,0,0,0,0,0.158421128988266,0.03168422356247902,0,-0.03168422356247902,0,0,0.06336844712495804,0.02376316860318184,0,0,0,0,0.06336844712495804,0,0,0,-0.03168422356247902,0,0.158421128988266,0.01584211178123951,0,-0.03168422356247902,0,0,0,0.04752633720636368,0,-0.06336844712495804,-0.0396052822470665,0,0.03168422356247902,0.007921055890619755,0,-0.03168422356247902,-0.03168422356247902,0,0.03168422356247902,0,0,-0.12673689424991608,-0.01584211178123951,0,0,0.007921055890619755,0,0,-0.03168422356247902,0,0,0.2851580083370209,0,-0.03168422356247902,-0.07128950208425522,0,0.25347378849983215,0.01584211178123951,0,-0.03168422356247902,-0.02376316860318184,0,0,0.03168422356247902,0,-0.06336844712495804,0,0,0.03168422356247902,0,0,-0.06336844712495804,0,0,0,0.1188158392906189,0,-0.03168422356247902,-0.007921055890619755,0,0,0.03168422356247902,0,-0.12673689424991608,-0.01584211178123951,0,0,0,0,0,-0.02376316860318184,0,0.158421128988266,0.01584211178123951,0,0,-0.007921055890619755,0,0.06336844712495804,0.079210564494133,0,-0.06336844712495804,-0.01584211178123951,0,0.03168422356247902,0.03168422356247902,0,0,-0.007921055890619755,0,0.03168422356247902,0.03168422356247902,0,0,0,0,0.03168422356247902,0.08713161945343018,0,-0.03168422356247902,-0.01584211178123951,0,0,0.007921055890619755,0,0,-0.03168422356247902,0,0,0.01584211178123951,0,0,-0.03168422356247902,0,0,0.02376316860318184,0,0,-0.06336844712495804,0,0,0.02376316860318184,0,0,-0.01584211178123951,0,0.03168422356247902,0,0,0,-0.01584211178123951,0,0.06336844712495804,0.12673689424991608,0,0,-0.02376316860318184,0,0,0,0,0,-0.04752633720636368,0,0,0.158421128988266,0,0,-0.0396052822470665,0,0.06336844712495804,0,0,0,-0.02376316860318184,0,0.06336844712495804,0.007921055890619755,0,0,-0.06336844712495804,0,0.03168422356247902,0,0,0,0,0,0,0.13465794920921326,0,0,0,0,0,0.03168422356247902,0,0,-0.03168422356247902,0,0,0.01584211178123951,0,-0.03168422356247902,-0.007921055890619755,0,0.03168422356247902,0.01584211178123951,0,-0.12673689424991608,0,0,0,0.05544739216566086,0,0,-0.02376316860318184,0,0.03168422356247902,0.01584211178123951,0,0,0,0,0,0.01584211178123951,0,-0.22178956866264343,0,0,0.06336844712495804,0.0396052822470665,0,-0.03168422356247902,-0.007921055890619755,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#NUMBERS-ARITHMETIC-AND-SUBROUTINES -->\nNUMBERS, ARITHMETIC, AND SUBROUTINES\n\n67\n\nTAX-- Transfer A to X TXA-- Transfer X to A\n\nTAY-- Transfer A to Y TYA-- Transfer Y to A\n\nLike the load series of commands, these instructions make a copy of the information. Thus, after TAX, whatever information was in A is now also in X. Again like the load commands, the Z and N status flags are affected by the information transferred. It doesn't matter whether we use X or Y. Let's pick X :","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#NUMBERS-ARITHMETIC-AND-SUBROUTINES"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.0932251513004303,0,0,0,0,0,0,0.011653143912553787,0,0,-0.011653143912553787,0,0.04661257565021515,0.04661257565021515,0,0,0,0,0.1864503026008606,0,0,0,0,0,0,0,0,0,-0.011653143912553787,0,0.04661257565021515,0.023306287825107574,0,0,-0.011653143912553787,0,0,0.04661257565021515,0,0,-0.023306287825107574,0,0.0932251513004303,0.04661257565021515,0,0,0,0,0,0,0,0,0,0,0.04661257565021515,0,0,0,-0.04661257565021515,0,0.04661257565021515,0,0,0,0,0,0.13983772695064545,0,0,0,0,0,0.04661257565021515,0.011653143912553787,0,0,-0.011653143912553787,0,0,0,0,-0.13983772695064545,-0.023306287825107574,0,0,0,0,-0.04661257565021515,-0.06991886347532272,0,0.04661257565021515,0.023306287825107574,0,-0.04661257565021515,-0.023306287825107574,0,0,0.04661257565021515,0,0,0,0,0.6059634685516357,0.011653143912553787,0,0,0,0,0,0.023306287825107574,0,0,0,0,0.04661257565021515,0.0932251513004303,0,0,0,0,0,0,0,-0.04661257565021515,0,0,0.2796754539012909,0.03495943173766136,0,-0.04661257565021515,0,0,0.04661257565021515,0,0,0,0,0,0,0.04661257565021515,0,0,0,0,0.04661257565021515,0.011653143912553787,0,0,0,0,0.23306287825107574,0.023306287825107574,0,-0.04661257565021515,-0.011653143912553787,0,0,0.03495943173766136,0,-0.04661257565021515,0,0,0,0.06991886347532272,0,0,0,0,0.04661257565021515,0.023306287825107574,0,0,-0.011653143912553787,0,0,0,0,0,-0.06991886347532272,0,0.04661257565021515,0,0,-0.04661257565021515,-0.023306287825107574,0,0.0932251513004303,0.023306287825107574,0,0,-0.023306287825107574,0,0,0,0,0,-0.011653143912553787,0,0,0.30298173427581787,0,-0.04661257565021515,-0.03495943173766136,0,0,0.011653143912553787,0,-0.04661257565021515,-0.011653143912553787,0,0.1864503026008606,0.04661257565021515,0,0,0,0,0.0932251513004303,0,0,0,-0.023306287825107574,0,0,0.15149086713790894,0,0,-0.023306287825107574,0,0,0.06991886347532272,0,-0.0932251513004303,0,0,0,0,0,0,0,0,0,0.03495943173766136,0,0,0,0,0.04661257565021515,0.11653143912553787,0,-0.04661257565021515,-0.023306287825107574,0,0,0.023306287825107574,0,0,-0.023306287825107574,0,0,0,0,0,0,0,0,0.03495943173766136,0,0,0,0,0,0.011653143912553787,0,0,0,0,0.04661257565021515,0.058265719562768936,0,0,-0.023306287825107574,0,0,0.058265719562768936,0,0,0,0,0,0,0,0,-0.03495943173766136,0,0,0,0,0,-0.03495943173766136,0,0.04661257565021515,0.011653143912553787,0,0,-0.03495943173766136,0,0,0.0932251513004303,0,0,0,0,0,0.19810344278812408,0,0,0,0,0.04661257565021515,0,0,0,0,0,0,0.011653143912553787,0,-0.04661257565021515,-0.04661257565021515,0,0.04661257565021515,0,0,0,-0.011653143912553787,0,0,0.06991886347532272,0,0,-0.011653143912553787,0,0,0.03495943173766136,0,-0.04661257565021515,-0.023306287825107574,0,0,0,0,0,0,0,0,0.011653143912553787,0,0,0,0,0,0.058265719562768936,0,0,-0.011653143912553787,0,0,0,0,-0.04661257565021515,-0.011653143912553787,0,0,0.023306287825107574,0,-0.13983772695064545,0,0,0.04661257565021515,0.011653143912553787,0,-0.04661257565021515,0,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#TAX-LDA-3D-JSR-FFD2 -->\nTAX LDA #$3D JSR $FFD2\n\nWe have put our second value into X and printed the equal sign ($3D). Now we can bring the value back and do our addition. The next two instructions can come in any order:","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#TAX-LDA-3D-JSR-FFD2"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.0538211315870285,0.023546744138002396,0,0,-0.033638205379247665,0,0.17491866648197174,0.03700202703475952,0,-0.02691056579351425,-0.02691056579351425,0,0.08073169738054276,0.02018292434513569,0,-0.0538211315870285,-0.03700202703475952,0,0.08073169738054276,0.013455282896757126,0,-0.0538211315870285,-0.023546744138002396,0,0.06727641075849533,0,0,-0.0538211315870285,-0.013455282896757126,0,0.02691056579351425,0.09755080193281174,0,-0.013455282896757126,-0.03027438558638096,0,0.02691056579351425,0.033638205379247665,0,-0.013455282896757126,-0.02018292434513569,0,0.04036584869027138,0.043729666620492935,0,-0.013455282896757126,-0.04036584869027138,0,0.013455282896757126,0.03700202703475952,0,-0.02691056579351425,-0.016819102689623833,0,0.09418697655200958,0.02691056579351425,0,0,-0.02018292434513569,0,0.04036584869027138,0.03700202703475952,0,-0.013455282896757126,-0.010091462172567844,0,0.04036584869027138,0.043729666620492935,0,-0.04036584869027138,-0.013455282896757126,0,0.013455282896757126,0.013455282896757126,0,-0.013455282896757126,-0.05045730993151665,0,0,0.033638205379247665,0,-0.215284526348114,-0.1009146198630333,0,0.0538211315870285,0.0033638207241892815,0,-0.04036584869027138,-0.14800810813903809,0,0.107642263174057,0.043729666620492935,0,-0.013455282896757126,-0.02018292434513569,0,0.02691056579351425,0.03027438558638096,0,-0.0538211315870285,-0.013455282896757126,0,0.215284526348114,0.09082315862178802,0,-0.04036584869027138,-0.023546744138002396,0,0.013455282896757126,0.04709348827600479,0,-0.107642263174057,-0.03700202703475952,0,0.013455282896757126,0.05045730993151665,0,-0.02691056579351425,-0.03700202703475952,0,0,0.04036584869027138,0,-0.02691056579351425,-0.03700202703475952,0,0.3094714879989624,0.02018292434513569,0,-0.013455282896757126,-0.006727641448378563,0,0.02691056579351425,0.016819102689623833,0,0,-0.016819102689623833,0,0.013455282896757126,0.02018292434513569,0,-0.0538211315870285,-0.010091462172567844,0,0.013455282896757126,0.023546744138002396,0,-0.0538211315870285,-0.023546744138002396,0,0.12109754234552383,0.05718494951725006,0,-0.06727641075849533,-0.006727641448378563,0,0.013455282896757126,0.03027438558638096,0,-0.13455282151699066,-0.006727641448378563,0,0.04036584869027138,0.03027438558638096,0,-0.04036584869027138,-0.023546744138002396,0,0.04036584869027138,0.006727641448378563,0,-0.04036584869027138,-0.013455282896757126,0,0.013455282896757126,0.013455282896757126,0,-0.0538211315870285,-0.11100608110427856,0,0.09418697655200958,0.03700202703475952,0,-0.02691056579351425,-0.02691056579351425,0,0.02691056579351425,0.05718494951725006,0,-0.14800810813903809,-0.02018292434513569,0,0.02691056579351425,0.02691056579351425,0,-0.013455282896757126,-0.06727641075849533,0,0,0.107642263174057,0,-0.02691056579351425,-0.09418697655200958,0,0.2556503713130951,0.02691056579351425,0,-0.04036584869027138,-0.06054877117276192,0,0.0538211315870285,0.02018292434513569,0,-0.02691056579351425,-0.013455282896757126,0,0.09418697655200958,0.043729666620492935,0,-0.1614633947610855,-0.02018292434513569,0,0.06727641075849533,0.17491866648197174,0,-0.04036584869027138,-0.02018292434513569,0,0.107642263174057,0.033638205379247665,0,-0.02691056579351425,-0.013455282896757126,0,0.04036584869027138,0.023546744138002396,0,-0.013455282896757126,-0.04036584869027138,0,0.09418697655200958,0.013455282896757126,0,0,-0.03027438558638096,0,0.02691056579351425,0.06727641075849533,0,-0.09418697655200958,-0.03700202703475952,0,0.02691056579351425,0.016819102689623833,0,-0.08073169738054276,-0.07064023613929749,0,0.013455282896757126,0.023546744138002396,0,0,-0.02691056579351425,0,0.013455282896757126,0.043729666620492935,0,-0.02691056579351425,-0.02018292434513569,0,0.013455282896757126,0.016819102689623833,0,-0.0538211315870285,-0.03027438558638096,0,0.013455282896757126,0.05718494951725006,0,-0.04036584869027138,-0.023546744138002396,0,0.02691056579351425,0.016819102689623833,0,-0.04036584869027138,-0.0773678719997406,0,0.04036584869027138,0.013455282896757126,0,-0.04036584869027138,-0.06054877117276192,0,0.02691056579351425,0.013455282896757126,0,-0.04036584869027138,-0.023546744138002396,0,0.02691056579351425,0.1547357439994812,0,0,-0.023546744138002396,0,0.013455282896757126,0.033638205379247665,0,-0.04036584869027138,-0.02691056579351425,0,0,0.1009146198630333,0,-0.013455282896757126,-0.09082315862178802,0,0.06727641075849533,0.03700202703475952,0,-0.04036584869027138,-0.04709348827600479,0,0.04036584869027138,0.05718494951725006,0,-0.02691056579351425,-0.02018292434513569,0,0.04036584869027138,0.02018292434513569,0,0,-0.013455282896757126,0,0.04036584869027138,0.12446136027574539,0,-0.013455282896757126,-0.0033638207241892815,0,0,0.02018292434513569,0,-0.02691056579351425,-0.04709348827600479,0,0.0538211315870285,0.016819102689623833,0,-0.013455282896757126,-0.0538211315870285,0,0.04036584869027138,0.010091462172567844,0,-0.02691056579351425,-0.013455282896757126,0,0.013455282896757126,0.03700202703475952,0,-0.0538211315870285,-0.03027438558638096,0,0.0538211315870285,0.010091462172567844,0,-0.1614633947610855,-0.06054877117276192,0,0,0.016819102689623833,0,-0.29601621627807617,-0.03027438558638096,0,0.08073169738054276,0.023546744138002396,0,-0.02691056579351425,-0.03027438558638096,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#MACHINE-LANGUAGE-FOR-COMMODORE-MACHINES-2 -->\nThe following coding looks rather strange, but it's correct. After the two subtractions, the A register will be back where it started:\nSEC SBC # $ 3 D SEC SBC #$DD\nAfter this, the A register is not changed; but the C flag will be set if the number is less than $3D, which means that it is not an ASCII numeric. Additionally, the Z flag will bet set if A contains a binary zero. We have met all our objectives and may now return:\nE X I T RTS\nBreaking Into BASIC\nSince BASIC comes to this subroutine often, we can infiltrate BASIC by changing this subroutine. Extra coding in this area is often called a \"wedge\" program. We must be very careful:\nÔøΩ We must leave A, X, and Y unchanged; either we must not use them or we must save them away and bring them back.\nÔøΩ We must not interfere with the flags. ÔøΩ We must be careful not to slow BASIC down too much.\nThis is a tall order. The last requirement is often helped by two techniques: use the wedge to implement extra commands in direct mode only; and make use of a special character to identify our special commands.\nIn PET/CBM, we may choose to modify this subroutine in either of two places: near the beginning, in CHRGET; or after the LDA, in CHRGOT. Each location has its advantages. In the CHRGET area, we don't need to preserve the A register or status flags, since CHRGOT will fix them up for us. In the area following CHRGOT, we have the character we wish to examine in the A register.\nBut in either case, it's an exacting job.\nVIC-20 and Commodore 64 have made the job much more easy by pro viding a vector at address $  3  fl/$  3  G that will give us control of the computer, if we wish, immediately before each BASIC command is exe cuted. We still need to use due care, but we have much more latitude.\nThe address of the instruction at CHRG0 T is often referred to as T XT PT R, the text pointer. This address always points to the BASIC command being","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#MACHINE-LANGUAGE-FOR-COMMODORE-MACHINES-2"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.09535980224609375,0.023839950561523438,0,0,-0.011919975280761719,0,0,0.023839950561523438,0,0,0,0,0.047679901123046875,0.023839950561523438,0,0,0,0,0.28607940673828125,0.047679901123046875,0,0,0,0,0.14303970336914062,0,0,0,-0.023839950561523438,0,0,0.047679901123046875,0,0,-0.011919975280761719,0,0.047679901123046875,0.011919975280761719,0,0,-0.011919975280761719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.047679901123046875,0,0,0.047679901123046875,0,0,0,0,0,0,0,0,-0.047679901123046875,-0.023839950561523438,0,0.047679901123046875,0,0,0,0,0,0,0.047679901123046875,0,-0.047679901123046875,-0.047679901123046875,0,0,0,0,0,-0.035759925842285156,0,0,0,0,-0.047679901123046875,-0.047679901123046875,0,0,0.047679901123046875,0,0,0,0,0.6198387145996094,0,0,0,0,0,0,0.023839950561523438,0,0,0,0,0.047679901123046875,0.14303970336914062,0,0,0,0,0.09535980224609375,0.07151985168457031,0,0,0,0,0.14303970336914062,0,0,0,0,0,0,0.047679901123046875,0,0,0,0,0.047679901123046875,0,0,0,0,0,0,0.011919975280761719,0,-0.047679901123046875,0,0,0.23839952051639557,0,0,-0.14303970336914062,-0.023839950561523438,0,0,0.023839950561523438,0,0,0,0,0,0,0,0,-0.023839950561523438,0,0.047679901123046875,0.023839950561523438,0,-0.14303970336914062,0,0,0.09535980224609375,0,0,-0.047679901123046875,-0.023839950561523438,0,0.09535980224609375,0,0,0,-0.011919975280761719,0,0.09535980224609375,0,0,0,-0.023839950561523438,0,0,0.023839950561523438,0,0,-0.023839950561523438,0,0,0.3099193572998047,0,-0.09535980224609375,-0.011919975280761719,0,0.09535980224609375,0,0,-0.047679901123046875,-0.023839950561523438,0,0.047679901123046875,0.047679901123046875,0,-0.047679901123046875,0,0,0,0.047679901123046875,0,0,0,0,0,0.08343982696533203,0,0,0,0,0,0.07151985168457031,0,0,0,0,0,0.05959988012909889,0,0,0,0,0,0,0,0,-0.023839950561523438,0,0,0.1311197280883789,0,0,-0.07151985168457031,0,0,0,0,0,0,0,0,0,0,-0.047679901123046875,0,0,0,0.023839950561523438,0,0,-0.08343982696533203,0,0,0.05959988012909889,0,0,-0.023839950561523438,0,0,0.047679901123046875,0,0,-0.011919975280761719,0,0,0.05959988012909889,0,0,0,0,0,0,0,0,-0.011919975280761719,0,0,0,0,0,-0.047679901123046875,0,0,0.047679901123046875,0,0,-0.035759925842285156,0,0.09535980224609375,0.023839950561523438,0,0,-0.023839950561523438,0,0,0.15495967864990234,0,0,0,0,0.047679901123046875,0,0,0,0,0,0,0.011919975280761719,0,0,0,0,0,0.023839950561523438,0,0,0,0,0,0.035759925842285156,0,0,0,0,0,0,0,0,0,0,0,0.011919975280761719,0,0,0,0,0,0,0,-0.047679901123046875,-0.035759925842285156,0,0,0.05959988012909889,0,0,-0.035759925842285156,0,0.09535980224609375,0,0,-0.09535980224609375,0,0,0,0,0,-0.047679901123046875,0,0,0,0.011919975280761719,0,-0.09535980224609375,-0.035759925842285156,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#CPX-BCC-RTS -->\nCPX BCC RTS\n\n#$b4 $D34D\n\nWe may work out timing as follows:\n\nLDX # $   -- executed once:\n\n2\n\nLDA # $   -- executed once:\n\n2\n\nAND $ 17E  , X: 32 times at 4 cycles:\n\n128","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#CPX-BCC-RTS"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.07349663972854614,0.018374159932136536,0,0,-0.04593539610505104,0,0,0.009187079966068268,0,0,0,0,0.03674831986427307,0.018374159932136536,0,-0.03674831986427307,0,0,0.18374158442020416,0.018374159932136536,0,0,0,0,0.03674831986427307,0.03674831986427307,0,0,-0.009187079966068268,0,0,0,0,0,-0.009187079966068268,0,0,0.009187079966068268,0,0,0,0,0,0,0,0,0,0,0,0.009187079966068268,0,0,0,0,0,0.009187079966068268,0,0,-0.009187079966068268,0,0.03674831986427307,0,0,0,0,0,0,0,0,-0.18374158442020416,-0.018374159932136536,0,0.07349663972854614,0.018374159932136536,0,0,0,0,0.03674831986427307,0.018374159932136536,0,-0.18374158442020416,0,0,0,0,0,-0.03674831986427307,-0.05512247607111931,0,0,0,0,-0.03674831986427307,-0.018374159932136536,0,0,0.06430955976247787,0,0,0,0,0.698218047618866,0,0,0,0,0,0,0.018374159932136536,0,0,-0.018374159932136536,0,0.03674831986427307,0.09187079221010208,0,0,0,0,0.03674831986427307,0.018374159932136536,0,0,0,0,0.11024495214223862,0,0,-0.03674831986427307,0,0,0,0.009187079966068268,0,0,0,0,0,0.018374159932136536,0,0,0,0,0,0,0,0,0,0,0.18374158442020416,0,0,-0.03674831986427307,0,0,0,0.018374159932136536,0,0,0,0,0,0,0,0,-0.09187079221010208,0,0,0.03674831986427307,0,-0.03674831986427307,0,0,0.07349663972854614,0.018374159932136536,0,-0.18374158442020416,-0.09187079221010208,0,0.03674831986427307,0,0,0,-0.027561238035559654,0,0.07349663972854614,0,0,0,-0.018374159932136536,0,0,0.009187079966068268,0,0,0,0,0,0.349109023809433,0,-0.03674831986427307,-0.027561238035559654,0,0,0,0,-0.03674831986427307,-0.009187079966068268,0,0.03674831986427307,0.03674831986427307,0,0,0,0,0,0.018374159932136536,0,0,0,0,0.03674831986427307,0.06430955976247787,0,0,-0.027561238035559654,0,0.03674831986427307,0.04593539610505104,0,-0.03674831986427307,0,0,0,0.009187079966068268,0,0,0,0,0,0,0,0,0,0,0.07349663972854614,0.09187079221010208,0,0,-0.018374159932136536,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.018374159932136536,0,0.11024495214223862,0.04593539610505104,0,0,-0.09187079221010208,0,0,0.018374159932136536,0,0,-0.04593539610505104,0,0,0.05512247607111931,0,0,0,0,0,0.009187079966068268,0,0,-0.04593539610505104,0,0,0,0,0,-0.027561238035559654,0,0,0,0,0,-0.027561238035559654,0,0.03674831986427307,0.018374159932136536,0,0,0,0,0.07349663972854614,0.1745545119047165,0,0,0,0,0,0.018374159932136536,0,0,0,0,0,0.027561238035559654,0,0,-0.018374159932136536,0,0,0.009187079966068268,0,0,0,0,0,0.027561238035559654,0,0,-0.009187079966068268,0,0,0.03674831986427307,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.03674831986427307,0,0,0,0.04593539610505104,0,0,-0.009187079966068268,0,0.03674831986427307,0.05512247607111931,0,0,0,0,0,0,0,-0.11024495214223862,0,0,0,0,0,-0.03674831986427307,-0.009187079966068268,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#68-times-at-5-cycles-page-cross -->\n68 times at 5 cycles (page cross):\n\n340\n\nI NX-- 100 times at 2 cycles:\n\n200\n\nCPX # $ t 4 -- 100 times at 2 cycles:\n\n200\n\nBCC-- 99 times at 3 cycles:\n\n297","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#68-times-at-5-cycles-page-cross"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.07676355540752411,0,0,0,-0.019190888851881027,0,0,0.009595444425940514,0,0,-0.04797722026705742,0,0.038381777703762054,0.009595444425940514,0,-0.07676355540752411,-0.038381777703762054,0,0.19190888106822968,0.038381777703762054,0,0,-0.019190888851881027,0,0.07676355540752411,0,0,0,-0.009595444425940514,0,0.038381777703762054,0.04797722026705742,0,-0.038381777703762054,-0.019190888851881027,0,0.038381777703762054,0,0,0,-0.019190888851881027,0,0.038381777703762054,0,0,-0.15352711081504822,-0.009595444425940514,0,0,0.019190888851881027,0,0,0,0,0,0.06716810911893845,0,0,-0.019190888851881027,0,0.038381777703762054,0,0,-0.038381777703762054,-0.019190888851881027,0,0.11514533311128616,0.02878633327782154,0,0,-0.038381777703762054,0,0,0,0,0,0,0,0,0.019190888851881027,0,-0.07676355540752411,0,0,0,0,0,0,-0.05757266655564308,0,0,0,0,-0.038381777703762054,-0.019190888851881027,0,0,0.04797722026705742,0,-0.038381777703762054,0,0,0.6908720135688782,0,0,0,-0.019190888851881027,0,0,0.019190888851881027,0,0,-0.038381777703762054,0,0.038381777703762054,0.09595444053411484,0,0,-0.009595444425940514,0,0,0.038381777703762054,0,0,-0.019190888851881027,0,0.11514533311128616,0.019190888851881027,0,0,-0.038381777703762054,0,0,0.038381777703762054,0,0,-0.009595444425940514,0,0,0.019190888851881027,0,0,-0.07676355540752411,0,0,0.019190888851881027,0,0,0,0,0.19190888106822968,0,0,-0.038381777703762054,-0.009595444425940514,0,0,0.019190888851881027,0,0,-0.019190888851881027,0,0.07676355540752411,0.06716810911893845,0,0,0,0,0,0.019190888851881027,0,0,-0.009595444425940514,0,0,0,0,0,-0.04797722026705742,0,0.038381777703762054,0.009595444425940514,0,-0.038381777703762054,-0.019190888851881027,0,0.038381777703762054,0,0,0,-0.019190888851881027,0,0,0,0,0,-0.019190888851881027,0,0,0.3454360067844391,0,-0.038381777703762054,-0.02878633327782154,0,0.038381777703762054,0,0,-0.07676355540752411,-0.009595444425940514,0,0,0.038381777703762054,0,0,0,0,0,0,0,-0.038381777703762054,0,0,0,0.06716810911893845,0,0,-0.019190888851881027,0,0.11514533311128616,0.04797722026705742,0,0,0,0,0,0.019190888851881027,0,0,0,0,0.038381777703762054,0.009595444425940514,0,0,-0.009595444425940514,0,0,0.1055498868227005,0,0,-0.019190888851881027,0,0.07676355540752411,0.009595444425940514,0,0,-0.038381777703762054,0,0,0.038381777703762054,0,0,0,0,0,0,0,0,0,0,0.038381777703762054,0.009595444425940514,0,0,-0.009595444425940514,0,0,0.04797722026705742,0,-0.07676355540752411,-0.019190888851881027,0,0,0.019190888851881027,0,0,0,0,0,0,0,-0.038381777703762054,-0.019190888851881027,0,0,0,0,-0.07676355540752411,-0.019190888851881027,0,0,0.019190888851881027,0,-0.07676355540752411,-0.04797722026705742,0,0.07676355540752411,0,0,-0.038381777703762054,-0.009595444425940514,0,0,0.17271800339221954,0,0,-0.019190888851881027,0,0.07676355540752411,0,0,0,0,0,0,0.06716810911893845,0,-0.038381777703762054,0,0,0,0,0,0,0,0,0.038381777703762054,0.04797722026705742,0,0,0,0,0.07676355540752411,0,0,-0.038381777703762054,0,0,0,0.038381777703762054,0,-0.038381777703762054,0,0,0.038381777703762054,0,0,-0.07676355540752411,0,0,0,0.04797722026705742,0,0,-0.009595444425940514,0,0,0.019190888851881027,0,0,0,0,0,0.019190888851881027,0,-0.11514533311128616,-0.038381777703762054,0,0,0,0,-0.038381777703762054,0,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#BEQ-BCS-B-M-I-BVS-BNE-BCC-BPL-BVC -->\nBEQ BCS B M I BVS BNE BCC BPL BVC\n\nThe branch instructions can make only short \" hops\" ; the jump instruction is unconditional:\n\nJMP\n\nSubroutines are called with the jump-subroutine, and returned with returnfrom-subroutine; we may also return from interrupts:","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#BEQ-BCS-B-M-I-BVS-BNE-BCC-BPL-BVC"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.06843525171279907,0,0,-0.045623499900102615,-0.011405874975025654,0,0,0.034217625856399536,0,0,-0.05702937766909599,0,0.022811749950051308,0.022811749950051308,0,-0.09124699980020523,-0.011405874975025654,0,0.045623499900102615,0.011405874975025654,0,0,-0.011405874975025654,0,0,0,0,0,-0.011405874975025654,0,0.045623499900102615,0.011405874975025654,0,-0.045623499900102615,-0.06843525171279907,0,0,0.005702937487512827,0,0,-0.17108812928199768,0,0,0.06843525171279907,0,-0.045623499900102615,-0.034217625856399536,0,0,0,0,-0.20530575513839722,0,0,0.09124699980020523,0.022811749950051308,0,0,-0.051326438784599304,0,0.06843525171279907,0.022811749950051308,0,0,-0.039920564740896225,0,0,0.022811749950051308,0,-0.09124699980020523,-0.11405875533819199,0,0,0.005702937487512827,0,0,-0.011405874975025654,0,0,0.045623499900102615,0,-0.06843525171279907,-0.022811749950051308,0,0,0.017108812928199768,0,-0.06843525171279907,-0.017108812928199768,0,0,0,0,-0.022811749950051308,-0.011405874975025654,0,0.022811749950051308,0.039920564740896225,0,-0.022811749950051308,-0.022811749950051308,0,0.38779976963996887,0.005702937487512827,0,0,-0.051326438784599304,0,0,0.017108812928199768,0,0,-0.051326438784599304,0,0.11405875533819199,0.022811749950051308,0,0,-0.005702937487512827,0,0.06843525171279907,0.005702937487512827,0,-0.045623499900102615,-0.028514688834547997,0,0.09124699980020523,0.022811749950051308,0,-0.06843525171279907,-0.022811749950051308,0,0,0,0,-0.045623499900102615,0,0,0.20530575513839722,0,0,-0.022811749950051308,-0.022811749950051308,0,0.09124699980020523,0.005702937487512827,0,-0.022811749950051308,-0.12546463310718536,0,0.1596822589635849,0.045623499900102615,0,-0.045623499900102615,-0.08554406464099884,0,0.022811749950051308,0.06843525171279907,0,0,0,0,0,0,0,0,-0.045623499900102615,0,0.09124699980020523,0.005702937487512827,0,0,-0.011405874975025654,0,0,0.011405874975025654,0,0,-0.051326438784599304,0,0.09124699980020523,0,0,0,-0.09124699980020523,0,0.09124699980020523,0,0,-0.045623499900102615,-0.011405874975025654,0,0.045623499900102615,0.034217625856399536,0,-0.045623499900102615,-0.011405874975025654,0,0,0.19960281252861023,0,-0.045623499900102615,-0.005702937487512827,0,0,0,0,-0.09124699980020523,-0.005702937487512827,0,0.022811749950051308,0.07413818687200546,0,0,-0.011405874975025654,0,0,0.034217625856399536,0,-0.13687050342559814,-0.022811749950051308,0,0,0.051326438784599304,0,0,-0.05702937766909599,0,0.045623499900102615,0.011405874975025654,0,-0.11405875533819199,-0.022811749950051308,0,0,0.10265287756919861,0,-0.022811749950051308,-0.011405874975025654,0,0.09124699980020523,0.05702937766909599,0,0,-0.022811749950051308,0,0.022811749950051308,0.07984112948179245,0,-0.045623499900102615,-0.022811749950051308,0,0,0.011405874975025654,0,-0.09124699980020523,-0.011405874975025654,0,0.022811749950051308,0,0,-0.022811749950051308,-0.051326438784599304,0,0,0.06843525171279907,0,0,0,0,0.022811749950051308,0.017108812928199768,0,0,0,0,0.022811749950051308,0.045623499900102615,0,-0.20530575513839722,-0.022811749950051308,0,0.022811749950051308,0.045623499900102615,0,-0.022811749950051308,-0.022811749950051308,0,0,0.022811749950051308,0,-0.022811749950051308,-0.039920564740896225,0,0.022811749950051308,0,0,-0.11405875533819199,-0.039920564740896225,0,0,0,0,0,-0.051326438784599304,0,0,0.017108812928199768,0,0,-0.005702937487512827,0,0,0.09694994240999222,0,0,-0.06843525171279907,0,0.022811749950051308,0,0,-0.09124699980020523,0,0,0,0.051326438784599304,0,-0.34217625856399536,-0.05702937766909599,0,0.13687050342559814,0.017108812928199768,0,0,-0.022811749950051308,0,0,0.06843525171279907,0,0,-0.017108812928199768,0,0.022811749950051308,0.011405874975025654,0,-0.045623499900102615,-0.034217625856399536,0,0.045623499900102615,0.051326438784599304,0,-0.06843525171279907,-0.051326438784599304,0,0,0.034217625856399536,0,-0.22811751067638397,-0.017108812928199768,0,0,0.039920564740896225,0,0,-0.011405874975025654,0,0.09124699980020523,0.017108812928199768,0,0,0,0,0.022811749950051308,0.011405874975025654,0,-0.022811749950051308,-0.10265287756919861,0,0,0.034217625856399536,0,-0.022811749950051308,-0.011405874975025654,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#MACHINE-LANGUAGE-FOR-COMMODORE-MACHINES -->\nMACHINE LANGUAGE FOR COMMODORE MACHINES\n\nBVC BVS\nCLC CLD CL I CLV CMP CPX CPY\nDEC DEX DEY\nEOR\nINC I NX IN Y\nJMP JSR\nLDA LDX LDY LSR\nNOP\nORA\nPH A PHP PL A PLP\nROL ROR RTI\n\nBranch on Overflow Clear Branch on Overflow Set\nClear Carry Flag Clear Decimal Mode Clear Interrupt Disable Bit Clear Overflow Flag Compare Memory and Accumulator Compare Memory and Index X Compare Memory and Index Y\nDecrement Memory by One Decrement Index X by One Decrement Index Y by One\n\" Exclusive-OR\" Memory with Accumulator\nIncrement Memory by One Increment Index X by One Increment Index Y by One\nJump to New Location Jump to New Location Saving Return Address\nLoad Accumulator with Memory Load Index X with Memory Load Index Y with Memory Shift One Bit Right (Memory or Accumulator)\nNo Operation\n\"OR\" Memory with Accumulator\nPush Accumulator on Stack Push Processor Status on Stack Pull Accumulator from Stack Pull Processor Status from Stack\nRotate One Bit Left (Memory or Accumulator) Rotate One Bit Right (Memory or Accumulator) Return from Interrupt","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#MACHINE-LANGUAGE-FOR-COMMODORE-MACHINES"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.08150545507669449,0,0,0,-0.020376363769173622,0,0,0.040752727538347244,0,0,-0.03056454472243786,0,0.040752727538347244,0.010188181884586811,0,0,-0.06112908944487572,0,0.040752727538347244,0.020376363769173622,0,0,0,0,0.040752727538347244,0.020376363769173622,0,0,-0.010188181884586811,0,0.040752727538347244,0.020376363769173622,0,-0.040752727538347244,-0.05094090849161148,0,0,0.020376363769173622,0,0,-0.08150545507669449,0,0,0.020376363769173622,0,0,-0.020376363769173622,0,0,0.010188181884586811,0,-0.32602182030677795,0,0,0.08150545507669449,0.010188181884586811,0,0,-0.040752727538347244,0,0.08150545507669449,0,0,0,0,0,0,0.03056454472243786,0,-0.040752727538347244,-0.13244636356830597,0,0,0.010188181884586811,0,0,-0.03056454472243786,0,0,0.020376363769173622,0,-0.040752727538347244,0,0,0,0,0,0,-0.020376363769173622,0,0,0,0,-0.040752727538347244,-0.03056454472243786,0,0,0.040752727538347244,0,0,0,0,0.32602182030677795,0,0,0,-0.010188181884586811,0,0.040752727538347244,0.03056454472243786,0,-0.040752727538347244,0,0,0.040752727538347244,0.020376363769173622,0,0,-0.010188181884586811,0,0,0.03056454472243786,0,-0.040752727538347244,-0.010188181884586811,0,0.16301091015338898,0.020376363769173622,0,0,-0.020376363769173622,0,0,0.010188181884586811,0,-0.16301091015338898,0,0,0.24451635777950287,0.010188181884586811,0,0,0,0,0,0.010188181884586811,0,-0.040752727538347244,-0.17319908738136292,0,0.20376363396644592,0.05094090849161148,0,-0.08150545507669449,-0.040752727538347244,0,0,0.05094090849161148,0,0,-0.010188181884586811,0,0.12225817888975143,0,0,0,-0.020376363769173622,0,0.20376363396644592,0,0,0,0,0,0,0,0,0,-0.020376363769173622,0,0.08150545507669449,0,0,-0.040752727538347244,-0.06112908944487572,0,0.040752727538347244,0,0,-0.24451635777950287,-0.020376363769173622,0,0,0.010188181884586811,0,0,0,0,0,0.16301091015338898,0,-0.040752727538347244,-0.010188181884586811,0,0,0.020376363769173622,0,-0.12225817888975143,-0.03056454472243786,0,0,0.040752727538347244,0,0,0,0,0,0,0,0,-0.020376363769173622,0,0.040752727538347244,0.09169363230466843,0,0,0,0,0.040752727538347244,0.010188181884586811,0,-0.16301091015338898,-0.08150545507669449,0,0,0.13244636356830597,0,0,0,0,0.12225817888975143,0.010188181884586811,0,-0.040752727538347244,-0.03056454472243786,0,0.040752727538347244,0.10188181698322296,0,-0.12225817888975143,-0.040752727538347244,0,0,0,0,0,0,0,0,0.06112908944487572,0,0,-0.08150545507669449,0,0,0.12225817888975143,0,-0.040752727538347244,0,0,0,0.020376363769173622,0,0,0,0,0,0.040752727538347244,0,-0.040752727538347244,-0.03056454472243786,0,0.040752727538347244,0.020376363769173622,0,0,-0.12225817888975143,0,0,0,0,-0.040752727538347244,-0.010188181884586811,0,0.040752727538347244,0,0,-0.040752727538347244,-0.020376363769173622,0,0,0,0,0,-0.07131727039813995,0,0.040752727538347244,0,0,0,0,0,0.040752727538347244,0.08150545507669449,0,0,0,0,0.040752727538347244,0.03056454472243786,0,-0.040752727538347244,-0.010188181884586811,0,0.040752727538347244,0.03056454472243786,0,-0.16301091015338898,-0.08150545507669449,0,0.040752727538347244,0,0,-0.040752727538347244,-0.010188181884586811,0,0,0.10188181698322296,0,0,-0.020376363769173622,0,0,0.020376363769173622,0,0,-0.10188181698322296,0,0,0.06112908944487572,0,0,0,0,0,0,0,-0.24451635777950287,-0.010188181884586811,0,0,0.05094090849161148,0,0,-0.040752727538347244,0,0.040752727538347244,0,0,0,0,0,0,0.03056454472243786,0,-0.040752727538347244,-0.020376363769173622,0,0,0.07131727039813995,0,-0.040752727538347244,0,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#APPENDIX-A -->\nAPPENDIX A\n\n151\n\nRTS\nSBC SEC SED SEI STA STX STY\nTAX TAY TSX TXA TXS TYA\n\nReturn from Subroutine\nSubtract Memory from Accumulator with Borrow Set Carry Flag Set Decimal Mode Set Interrupt Disable Status Store Accumulator in Memory Store Index X in Memory Store Index Y in Memory\nTransfer Accumulator to Index X Transfer Accumulator to Index Y Transfer Stack Pointer to Index X Transfer Index X to Accumulator Transfer Index X to Stack Register Transfer Index Y to Accumulator\n\nProgramming Model\n\n7\n\n0","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#APPENDIX-A"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.09029897302389145,0.011287371627986431,0,0,0,0,0,0.011287371627986431,0,0,0,0,0.045149486511945724,0.011287371627986431,0,-0.045149486511945724,0,0,0.13544845581054688,0.022574743255972862,0,0,0,0,0,0,0,0,-0.03386211395263672,0,0,0,0,0,-0.011287371627986431,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.045149486511945724,0,0,0.09029897302389145,0.022574743255972862,0,0,-0.022574743255972862,0,0.045149486511945724,0,0,0,0,0,0,0,0,0,-0.022574743255972862,0,0,0,0,0,0,0,0,0.022574743255972862,0,-0.045149486511945724,0,0,0,0.022574743255972862,0,0,-0.045149486511945724,0,0,0,0,-0.045149486511945724,-0.045149486511945724,0,0,0.045149486511945724,0,0,0,0,0.7675412893295288,0,0,0,0,0,0,0.022574743255972862,0,0,-0.022574743255972862,0,0.045149486511945724,0.06772422790527344,0,0,0,0,0,0,0,0,0,0,0.13544845581054688,0,0,0,0,0,0,0.011287371627986431,0,0,0,0,0.045149486511945724,0,0,0,-0.011287371627986431,0,0,0,0,0,-0.022574743255972862,0,0.22574743628501892,0.045149486511945724,0,-0.045149486511945724,0,0,0,0.022574743255972862,0,0,0,0,0,0,0,0,0,0,0,0.011287371627986431,0,0,-0.011287371627986431,0,0.045149486511945724,0,0,0,-0.022574743255972862,0,0.045149486511945724,0,0,0,-0.011287371627986431,0,0.045149486511945724,0,0,0,-0.022574743255972862,0,0,0.011287371627986431,0,0,0,0,0,0.3950580060482025,0,-0.045149486511945724,-0.022574743255972862,0,0,0,0,-0.045149486511945724,-0.022574743255972862,0,0,0.045149486511945724,0,0,0,0,0,0,0,0,0,0,0,0.07901160418987274,0,0,-0.011287371627986431,0,0,0.03386211395263672,0,0,0,0,0,0.022574743255972862,0,0,0,0,0,0,0,0,0,0,0,0.11287371814250946,0,0,-0.022574743255972862,0,0,0,0,0,0,0,0,0,0,0,-0.011287371627986431,0,0,0.022574743255972862,0,0,0,0,0,0.03386211395263672,0,0,0,0,0,0.022574743255972862,0,0,0,0,0,0.022574743255972862,0,0,0,0,0,0,0,0,-0.011287371627986431,0,0,0,0,0,-0.022574743255972862,0,0,0,0,0,-0.03386211395263672,0,0.045149486511945724,0,0,0,0,0,0,0.1918853223323822,0,-0.045149486511945724,0,0,0,0,0,0,0,0,0,0.011287371627986431,0,0,0,0,0,0,0,0,0,0,0,0.03386211395263672,0,0,0,0,0.045149486511945724,0,0,-0.045149486511945724,0,0,0,0.011287371627986431,0,0,0,0,0,0,0,-0.045149486511945724,0,0,0,0.05643685907125473,0,0,-0.011287371627986431,0,0.045149486511945724,0,0,0,0,0,0.045149486511945724,0,0,-0.09029897302389145,0,0,0,0,0,-0.09029897302389145,0,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#O-00-III -->\nO 00 < III\n\n0 - 1- 2 - 3 - 4 - 5 - 6 - 7 -\n\nBRK\n\nRTI\n\nRTS","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#O-00-III"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.08159442991018295,0,0,0,0,0,0,0.030597912147641182,0,0,0,0,0.040797214955091476,0.010199303738772869,0,0,-0.020398607477545738,0,0.040797214955091476,0.020398607477545738,0,0,0,0,0.040797214955091476,0,0,0,-0.010199303738772869,0,0.040797214955091476,0.020398607477545738,0,0,-0.010199303738772869,0,0,0,0,0,0,0,0,0,0,0,-0.020398607477545738,0,0,0,0,-0.040797214955091476,0,0,0,0.030597912147641182,0,0,-0.020398607477545738,0,0.040797214955091476,0,0,0,0,0,0,0.040797214955091476,0,0,0,0,0,0.010199303738772869,0,0,0,0,0,0.020398607477545738,0,0,-0.010199303738772869,0,0,0,0,0,-0.020398607477545738,0,0,0,0,-0.040797214955091476,-0.020398607477545738,0,0,0.040797214955091476,0,0,0,0,0.7343498468399048,0,0,0,-0.010199303738772869,0,0.040797214955091476,0.020398607477545738,0,-0.040797214955091476,0,0,0.040797214955091476,0.020398607477545738,0,-0.040797214955091476,0,0,0,0.030597912147641182,0,-0.040797214955091476,0,0,0.12239164859056473,0.020398607477545738,0,0,-0.010199303738772869,0,0.040797214955091476,0.010199303738772869,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.040797214955091476,-0.020398607477545738,0,0.3263777196407318,0,0,-0.040797214955091476,0,0,0,0.020398607477545738,0,0,-0.010199303738772869,0,0,0,0,0,0,0,0,0.010199303738772869,0,0,-0.010199303738772869,0,0,0,0,0,0,0,0.040797214955091476,0,0,0,0,0,0.040797214955091476,0,0,0,-0.020398607477545738,0,0,0.010199303738772869,0,0,0,0,0,0.3671749234199524,0,-0.040797214955091476,-0.010199303738772869,0,0.08159442991018295,0.020398607477545738,0,-0.040797214955091476,-0.030597912147641182,0,0,0.040797214955091476,0,0,-0.020398607477545738,0,0,0,0,0,-0.020398607477545738,0,0,0.07139512896537781,0,0,0,0,0.040797214955091476,0.030597912147641182,0,0,0,0,0,0.010199303738772869,0,0,0,0,0.1631888598203659,0.010199303738772869,0,0,-0.020398607477545738,0,0.040797214955091476,0.1631888598203659,0,0,-0.020398607477545738,0,0,0,0,-0.040797214955091476,0,0,0,0,0,0,-0.010199303738772869,0,0,0,0,0,0,0,0,0.010199303738772869,0,0,0,0,0,0.020398607477545738,0,-0.040797214955091476,0,0,0,0.020398607477545738,0,0,0,0,0,0,0,0,0,0,0.040797214955091476,0,0,0,-0.020398607477545738,0,0,0.040797214955091476,0,-0.040797214955091476,-0.030597912147641182,0,0.040797214955091476,0,0,0,0,0,0,0.1835874617099762,0,0,0,0,0,0.010199303738772869,0,0,-0.010199303738772869,0,0,0.030597912147641182,0,0,-0.010199303738772869,0,0,0,0,-0.040797214955091476,-0.010199303738772869,0,0,0.11219234019517899,0,0,0,0,0.040797214955091476,0.030597912147641182,0,-0.040797214955091476,0,0,0,0,0,0,-0.020398607477545738,0,0,0,0,0,-0.010199303738772869,0,0,0.08159442991018295,0,0,-0.010199303738772869,0,0.040797214955091476,0,0,0,0,0,0,0,0,-0.040797214955091476,-0.020398607477545738,0,0,0,0,-0.040797214955091476,0,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#ROR-A -->\nROR-A\n\n8- 9-\nDEY TYA TXA TXS\n\nSingle-byte Op Codes - 0, - 8, - A\n\nA-\nTAY TAX\n\nB-\nCLV TSX\n\nC-\nI NY DEX","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#ROR-A"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.10760816931724548,0.0941571518778801,0,0,0,0,0,0.013451021164655685,0,0,0,0,0.05380408465862274,0.013451021164655685,0,-0.10760816931724548,0,0,0.05380408465862274,0,0,0,0,0,0,0.02690204232931137,0,0,-0.040353063493967056,0,0,0.02690204232931137,0,0,-0.013451021164655685,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.013451021164655685,0,-0.10760816931724548,-0.05380408465862274,0,0.05380408465862274,0,0,0,0,0,0,0,0,0,-0.02690204232931137,0,0,0,0,0,-0.02690204232931137,0,0,0,0,0,0,0,0,0,0,-0.05380408465862274,-0.02690204232931137,0,0,0,0,-0.05380408465862274,-0.02690204232931137,0,0,0.05380408465862274,0,0,0,0,0.5918449759483337,0,0,-0.05380408465862274,0,0,0,0.02690204232931137,0,0,-0.05380408465862274,0,0.05380408465862274,0.02690204232931137,0,0,0,0,0,0,0,0,0,0,0.21521633863449097,0,0,-0.05380408465862274,0,0,0,0,0,0,0,0,0,0.013451021164655685,0,-0.05380408465862274,-0.013451021164655685,0,0,0.013451021164655685,0,-0.05380408465862274,0,0,0.2690204381942749,0,0,-0.16141225397586823,-0.05380408465862274,0,0.05380408465862274,0.02690204232931137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.02690204232931137,0,0.3766286075115204,0,0,0,0,0,0.05380408465862274,0,0,0,-0.040353063493967056,0,0.05380408465862274,0,0,0,-0.040353063493967056,0,0,0,0,0,0,0,0,0.29592248797416687,0,-0.05380408465862274,-0.040353063493967056,0,0,0,0,-0.05380408465862274,-0.013451021164655685,0,0,0.05380408465862274,0,0,0,0,0,0,0,0,0,0,0,0.12105919420719147,0,0,-0.05380408465862274,0,0.05380408465862274,0.013451021164655685,0,0,0,0,0,0,0,0,-0.02690204232931137,0,0,0,0,0,-0.02690204232931137,0,0,0.13451021909713745,0,0,-0.08070612698793411,0,0,0.02690204232931137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.02690204232931137,0,0,0.20176532864570618,0,0,0,0,0,0.02690204232931137,0,0,0,0,0,0.02690204232931137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.040353063493967056,0,0,0,0,0,-0.040353063493967056,0,0,0,0,0,0,0,0.05380408465862274,0.14796124398708344,0,-0.05380408465862274,-0.013451021164655685,0,0.05380408465862274,0,0,0,0,0,0,0.040353063493967056,0,0,0,0,0,0,0,0,0,0,0,0.05380408465862274,0,0,-0.013451021164655685,0,0,0,0,-0.10760816931724548,0,0,0,0,0,0,-0.013451021164655685,0,0,0,0,-0.05380408465862274,-0.013451021164655685,0,0,0.06725510954856873,0,-0.05380408465862274,-0.040353063493967056,0,0,0.013451021164655685,0,0,0,0,0,0,0,-0.05380408465862274,0,0,0,0,0,-0.05380408465862274,0,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#BRANCH-ON-2-1-2 -->\nBRANCH ON 2 1 (2)\n\nF0 2 2\n\nBIT\n\nAM\n\n2C 4 3 24 3 2\n\nM7ÔøΩ^\n\nM6\n\nBMI","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#BRANCH-ON-2-1-2"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.0660773515701294,0.08259668946266174,0,0,0,0,0,0.04129834473133087,0,0,0,0,0.0330386757850647,0.008259668946266174,0,-0.19823205471038818,0,0,0.0330386757850647,0.0660773515701294,0,0,0,0,0.0660773515701294,0,0,0,-0.01651933789253235,0,0,0,0,0,-0.008259668946266174,0,0,0.01651933789253235,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0660773515701294,0,0,0,0,0,0,-0.12389503419399261,0,0.0330386757850647,0,0,0,0,0,0.0330386757850647,0,0,0,-0.0330386757850647,0,0,0,0,0,-0.0330386757850647,0,0,0,0,-0.0330386757850647,0,0,0,0,0,0,-0.04129834473133087,0,0,0,0,-0.0660773515701294,-0.01651933789253235,0,0,0.04129834473133087,0,-0.0660773515701294,0,0,0.5616574883460999,0.008259668946266174,0,0,0,0,0,0.05781768262386322,0,0,-0.09911602735519409,0,0.0330386757850647,0.01651933789253235,0,0,0,0,0,0.0330386757850647,0,0,0,0,0.09911602735519409,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0330386757850647,0,0.19823205471038818,0,0,-0.0330386757850647,0,0,0,0.01651933789253235,0,0,0,0,0,0.01651933789253235,0,0,0,0,0.0660773515701294,0,0,0,-0.049558013677597046,0,0.330386757850647,0,0,0,-0.01651933789253235,0,0.1651933789253235,0,0,0,-0.01651933789253235,0,0.0330386757850647,0,0,0,-0.049558013677597046,0,0.2643094062805176,0,0,0,-0.0330386757850647,0,0,0.2808287441730499,0,-0.0660773515701294,-0.01651933789253235,0,0,0,0,-0.0330386757850647,-0.008259668946266174,0,0.0660773515701294,0.0330386757850647,0,0,0,0,0,0,0,0,0,0,0,0.05781768262386322,0,0,-0.049558013677597046,0,0,0.008259668946266174,0,-0.09911602735519409,0,0,0,0.01651933789253235,0,0,0,0,0,0,0,0,0,0,0,0.09911602735519409,0,0,-0.01651933789253235,0,0,0,0,0,0,0,0,0,0,-0.0330386757850647,-0.01651933789253235,0,0,0.0330386757850647,0,0,0,0,0.0330386757850647,0.17345304787158966,0,0,0,0,0.0330386757850647,0.09085635840892792,0,0,0,0,0.1651933789253235,0.01651933789253235,0,0,0,0,0,0.1321547031402588,0,0,-0.008259668946266174,0,0,0,0,0,-0.0330386757850647,0,0,0,0,0,-0.0330386757850647,0,0,0.0330386757850647,0,0,-0.01651933789253235,0,0,0.14041437208652496,0,0,0,0,0,0,0,0,0,0,0,0.008259668946266174,0,0,-0.049558013677597046,0,0,0,0,0,0,0,0,0.024779006838798523,0,0,0,0,0,0,0,-0.19823205471038818,0,0,0,0,0,0,0,0,0,0,0,-0.0660773515701294,-0.01651933789253235,0,0,0.049558013677597046,0,-0.0660773515701294,-0.008259668946266174,0,0,0.01651933789253235,0,0,0,0,0,0.01651933789253235,0,-0.0660773515701294,0,0,0,0.09911602735519409,0,-0.0330386757850647,0,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#CO-2-2-CC-4-3-C4-3-2 -->\nCO 2 2 CC 4 3 C4 3 2\n\n^^\n\nDEC\n\nM 1 >M\n\nCE 6 3 C6 5 2\n\nD6 6 2 DE 7 3\n\nv* u*\n\nDEX\n\nX 1 *X\n\nCA 2 1\n\n* v* -\n\nDEY\n\nY 1 *Y\n\nB8 2 1\n\nv * v* -\n\nEOR","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#CO-2-2-CC-4-3-C4-3-2"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.05319167673587799,0.06648959964513779,0,0,-0.013297919183969498,0,0,0.006648959591984749,0,0,-0.006648959591984749,0,0.026595838367938995,0.006648959591984749,0,-0.18617087602615356,0,0,0.026595838367938995,0.019946878775954247,0,0,0,0,0.05319167673587799,0,0,0,-0.006648959591984749,0,0,0,0,0,-0.006648959591984749,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.006648959591984749,0,-0.10638335347175598,0,0,0,0.019946878775954247,0,-0.026595838367938995,-0.09308543801307678,0,0.026595838367938995,0.006648959591984749,0,0,-0.013297919183969498,0,0,0.013297919183969498,0,0,-0.06648959964513779,0,0,0,0,0,-0.03989375755190849,0,0,0,0,-0.026595838367938995,0,0,0,0,0,-0.026595838367938995,-0.03989375755190849,0,0,0.013297919183969498,0,-0.05319167673587799,-0.019946878775954247,0,0,0.026595838367938995,0,0,0,0,0.29255422949790955,0.006648959591984749,0,0,0,0,0.026595838367938995,0.026595838367938995,0,0,-0.09308543801307678,0,0.026595838367938995,0.013297919183969498,0,0,-0.006648959591984749,0,0.026595838367938995,0.026595838367938995,0,0,0,0,0.6383001208305359,0,0,-0.026595838367938995,0,0,0,0,0,-0.05319167673587799,0,0,0,0,0,-0.026595838367938995,0,0,0,0,0,0,-0.05319167673587799,0,0.15957503020763397,0,0,-0.026595838367938995,-0.013297919183969498,0,0,0.013297919183969498,0,0,0,0,0,0,0,0,0,0,0.05319167673587799,0,0,0,-0.03989375755190849,0,0.26595839858055115,0,0,0,-0.019946878775954247,0,0.026595838367938995,0,0,-0.026595838367938995,-0.04654271900653839,0,0.026595838367938995,0,0,0,-0.04654271900653839,0,0.07978751510381699,0,0,0,0,0,0,0.14627711474895477,0,-0.026595838367938995,-0.019946878775954247,0,0,0.019946878775954247,0,-0.026595838367938995,-0.006648959591984749,0,0,0.026595838367938995,0,0,0,0,0,0.013297919183969498,0,0,0,0,0.026595838367938995,0.32579901814460754,0,0,-0.05984063819050789,0,0.07978751510381699,0.006648959591984749,0,-0.05319167673587799,-0.026595838367938995,0,0.026595838367938995,0.013297919183969498,0,0,-0.013297919183969498,0,0.05319167673587799,0,0,0,0,0,0,0.07978751510381699,0,0,-0.013297919183969498,0,0,0,0,0,0,0,0,0,0,0,-0.026595838367938995,0,0,0.026595838367938995,0,-0.026595838367938995,-0.006648959591984749,0,0,0.13962815701961517,0,0,0,0,0.026595838367938995,0.013297919183969498,0,0,-0.013297919183969498,0,0.05319167673587799,0.013297919183969498,0,0,0,0,0,0.03989375755190849,0,-0.026595838367938995,-0.006648959591984749,0,0,0,0,0,-0.019946878775954247,0,0,0,0,0,-0.026595838367938995,0,0,0,0,0,0,0,0,0.07313855737447739,0,0,0,0,0,0.019946878775954247,0,0,0,0,0,0.04654271900653839,0,0,-0.026595838367938995,0,0,0.019946878775954247,0,0,0,0,0,0.18617087602615356,0,0,-0.006648959591984749,0,0,0,0,-0.15957503020763397,-0.013297919183969498,0,0,0,0,-0.026595838367938995,-0.006648959591984749,0,0,0,0,-0.13297919929027557,0,0,0,0.03989375755190849,0,-0.07978751510381699,-0.019946878775954247,0,0,0,0,0,0,0,0,0.013297919183969498,0,-0.07978751510381699,0,0,0.026595838367938995,0.03989375755190849,0,-0.026595838367938995,0,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#AVM-A -->\nAVM ÔøΩA\n\n(1) 49 2 2 4D 4 3 45 3 2\n\n41 6 2 51 5 2 55 4 2 5D 4 3 59 4 3\n\nv* ^\n\nINC\n\nM ÔøΩ 1 -M\n\nEE 6 3 E6 5 2\n\nF6 6 2 FE 7 3\n\n*\n\n..........\n\nINX\n\nX - 1 >X\n\nE8 2 1\n\nINY\n\nY ÔøΩ 1 -Y\n\nC8 2 1\n\n^*\n\n...........\n\nJMP","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#AVM-A"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.10464895516633987,0,0,-0.10464895516633987,-0.03924335539340973,0,0,0.02616223879158497,0,0,0,0,0.05232447758316994,0.013081119395792484,0,0,-0.013081119395792484,0,0.05232447758316994,0.02616223879158497,0,0,0,0,0.05232447758316994,0.02616223879158497,0,0,-0.013081119395792484,0,0.10464895516633987,0,0,-0.10464895516633987,-0.013081119395792484,0,0,0.02616223879158497,0,-0.05232447758316994,-0.013081119395792484,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.02616223879158497,0,0,-0.02616223879158497,0,0.05232447758316994,0,0,0,0,0,0,0,0,0,-0.05232447758316994,0,0.05232447758316994,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.15697342157363892,-0.05232447758316994,0,0,0.06540559232234955,0,-0.05232447758316994,-0.02616223879158497,0,0,0.05232447758316994,0,0,-0.05232447758316994,0,0.575569212436676,0,0,0,-0.02616223879158497,0,0,0.02616223879158497,0,0,0,0,0.05232447758316994,0.02616223879158497,0,-0.05232447758316994,-0.013081119395792484,0,0,0.02616223879158497,0,0,0,0,0.15697342157363892,0.05232447758316994,0,-0.15697342157363892,-0.05232447758316994,0,0,0,0,0,-0.02616223879158497,0,0.05232447758316994,0.013081119395792484,0,-0.10464895516633987,0,0,0.05232447758316994,0,0,0,0,0,0.31394684314727783,0.013081119395792484,0,-0.10464895516633987,0,0,0,0.02616223879158497,0,0,0,0,0,0,0,0,0,0,0,0.03924335539340973,0,-0.20929791033267975,-0.013081119395792484,0,0,0,0,-0.05232447758316994,0,0,0.10464895516633987,0,0,0,-0.10464895516633987,0,0.05232447758316994,0,0,-0.05232447758316994,-0.02616223879158497,0,0.10464895516633987,0,0,0,0,0,0,0.287784606218338,0,-0.05232447758316994,-0.02616223879158497,0,0,0.02616223879158497,0,-0.05232447758316994,-0.013081119395792484,0,0,0.05232447758316994,0,-0.05232447758316994,-0.05232447758316994,0,0,0,0,0,0,0,0,0.09156782925128937,0,0,-0.07848671078681946,0,0,0.013081119395792484,0,0,0,0,0,0.03924335539340973,0,0,-0.05232447758316994,0,0,0.05232447758316994,0,0,-0.02616223879158497,0,0,0.15697342157363892,0,0,-0.06540559232234955,0,0,0,0,0,0,0,0,0,0,0,0,0,0.05232447758316994,0,0,0,-0.10464895516633987,0,0,0.013081119395792484,0,0,-0.02616223879158497,0,0,0.05232447758316994,0,-0.10464895516633987,0,0,0,0.03924335539340973,0,0,-0.02616223879158497,0,0,0.05232447758316994,0,-0.05232447758316994,0,0,0,0,0,0,-0.06540559232234955,0,0,0,0,0,-0.03924335539340973,0,0,0,0,0,-0.02616223879158497,0,0.05232447758316994,0.143892303109169,0,0,0,0,0,0,0,0,0,0,0.05232447758316994,0.013081119395792484,0,0,-0.013081119395792484,0,0,0,0,0,0,0,0,0.03924335539340973,0,0,-0.03924335539340973,0,0.05232447758316994,0,0,-0.05232447758316994,0,0,0,0.013081119395792484,0,0,-0.02616223879158497,0,0,0.013081119395792484,0,-0.10464895516633987,0,0,0,0.10464895516633987,0,0,-0.02616223879158497,0,0,0,0,0,0,0,0,0,0,-0.10464895516633987,-0.05232447758316994,0,0.10464895516633987,0,0,-0.05232447758316994,-0.05232447758316994,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#MACHINE-LANGUAGE-FOR-COMMODORE-MACHINES -->\nMACHINE LANGUAGE FOR COMMODORE MACHINES\n\nVIC 6560 Chip\n\n$9000\n\nInter lace\n\nLeft Margin (= 5)\n\n36864\n\n$9001\n\nTop Margin ( = 25)\n\n36865\n\nScrn Ad\n\n$9002\n\nbit 9\n\n# Columns (= 22)\n\n36866\n\nbitO $9003","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#MACHINE-LANGUAGE-FOR-COMMODORE-MACHINES"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.08230818808078766,0.010288523510098457,0,0,0,0,0.04115409404039383,0.030865570530295372,0,-0.04115409404039383,0,0,0.08230818808078766,0.020577047020196915,0,0,-0.010288523510098457,0,0.08230818808078766,0.05144261568784714,0,-0.04115409404039383,0,0,0,0.04115409404039383,0,0,-0.010288523510098457,0,0.04115409404039383,0.020577047020196915,0,0,-0.010288523510098457,0,0,0.020577047020196915,0,0,0,0,0.04115409404039383,0,0,0,0,0,0,0,0,-0.04115409404039383,0,0,0,0.020577047020196915,0,0,-0.020577047020196915,0,0.04115409404039383,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.12346228212118149,0,0,0,-0.010288523510098457,0,0,0,0,-0.04115409404039383,-0.020577047020196915,0,0,0.04115409404039383,0,-0.04115409404039383,-0.020577047020196915,0,0,0.04115409404039383,0,0,0,0,0.6584655046463013,0.020577047020196915,0,0,-0.030865570530295372,0,0,0.04115409404039383,0,0,-0.030865570530295372,0,0.12346228212118149,0.04115409404039383,0,0,-0.020577047020196915,0,0,0.010288523510098457,0,0,0,0,0.16461637616157532,0.020577047020196915,0,-0.08230818808078766,0,0,0,0.010288523510098457,0,0,0,0,0,0.04115409404039383,0,0,0,0,0,0.010288523510098457,0,0,-0.020577047020196915,0,0.24692456424236298,0.010288523510098457,0,-0.24692456424236298,0,0,0.04115409404039383,0.020577047020196915,0,0,0,0,0,0,0,0,0,0,0.04115409404039383,0,0,-0.04115409404039383,-0.010288523510098457,0,0.04115409404039383,0.061731141060590744,0,0,0,0,0.04115409404039383,0,0,0,-0.020577047020196915,0,0.08230818808078766,0,0,-0.04115409404039383,-0.020577047020196915,0,0.12346228212118149,0,0,0,0,0,0,0.32923275232315063,0,-0.04115409404039383,-0.010288523510098457,0,0,0.010288523510098457,0,-0.04115409404039383,-0.010288523510098457,0,0,0.08230818808078766,0,0,0,0,0,0.010288523510098457,0,0,-0.010288523510098457,0,0,0.10288523137569427,0,0,-0.04115409404039383,0,0.08230818808078766,0.020577047020196915,0,0,-0.010288523510098457,0,0,0,0,0,0,0,0,0.010288523510098457,0,0,0,0,0,0.12346228212118149,0,0,-0.12346228212118149,0,0,0.030865570530295372,0,-0.04115409404039383,0,0,0,0,0,0,-0.010288523510098457,0,0.08230818808078766,0.020577047020196915,0,0,-0.020577047020196915,0,0,0.030865570530295372,0,0,0,0,0,0.020577047020196915,0,-0.04115409404039383,0,0,0,0.04115409404039383,0,-0.12346228212118149,-0.020577047020196915,0,0,0.09259670972824097,0,0,0,0,0.04115409404039383,0,0,0,-0.030865570530295372,0,0,0,0,0,-0.030865570530295372,0,0.04115409404039383,0,0,0,0,0,0.08230818808078766,0.16461637616157532,0,0,0,0,0.04115409404039383,0,0,0,0,0,0.04115409404039383,0.07201965898275375,0,0,0,0,0,0,0,0,0,0,0,0.04115409404039383,0,0,-0.020577047020196915,0,0,0,0,-0.04115409404039383,0,0,0,0,0,0,-0.020577047020196915,0,0,0,0,0,0,0,0,0.10288523137569427,0,0,-0.061731141060590744,0,0,0.010288523510098457,0,0,0,0,0,0,0,-0.04115409404039383,-0.020577047020196915,0,0.04115409404039383,0.010288523510098457,0,-0.04115409404039383,-0.07201965898275375,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#900B-ON-I-900C-ON -->\n$900B -- ON I| $900C ON |\n\nVoice 2 F_requency Voice3\n\n-- 1 36875 36876\n\n$900D ON |\n\nNoise\n\n36877\n\n$900E\n\nMulti-Colour Mode (= 0)\n\nSound Amplitude\n\n36878\n\n$900F\n\nScreen Background Color\n\nF/Bac9kgd\n\nFrame Color\n\n36879\n\nFigure C.6","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#900B-ON-I-900C-ON"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.11700358986854553,0,0,-0.058501794934272766,-0.029250897467136383,0,0,0.014625448733568192,0,0,0,0,0.058501794934272766,0.014625448733568192,0,-0.058501794934272766,-0.029250897467136383,0,0.058501794934272766,0.029250897467136383,0,0,0,0,0,0.029250897467136383,0,-0.058501794934272766,-0.029250897467136383,0,0.11700358986854553,0,0,-0.11700358986854553,-0.029250897467136383,0,0,0,0,0,-0.014625448733568192,0,0.058501794934272766,0,0,0,0,0,0,0,0,0,-0.043876346200704575,0,0,0,0,0,-0.029250897467136383,0,0.058501794934272766,0.029250897467136383,0,0,0,0,0,0.014625448733568192,0,0,0,0,0.058501794934272766,0.014625448733568192,0,0,-0.029250897467136383,0,0,0,0,0,0,0,0,0,0,-0.058501794934272766,-0.029250897467136383,0,0,0.029250897467136383,0,-0.058501794934272766,-0.029250897467136383,0,0,0.058501794934272766,0,0,-0.029250897467136383,0,0.5265161395072937,0,0,0,-0.014625448733568192,0,0,0.043876346200704575,0,0,-0.029250897467136383,0,0.058501794934272766,0.029250897467136383,0,0,-0.014625448733568192,0,0,0,0,0,-0.029250897467136383,0,0.40951254963874817,0.058501794934272766,0,-0.058501794934272766,-0.07312723994255066,0,0,0.014625448733568192,0,0,0,0,0,0.029250897467136383,0,0,0,0,0.058501794934272766,0,0,0,0,0,0.29250895977020264,0,0,-0.058501794934272766,0,0,0,0.029250897467136383,0,0,0,0,0,0,0,0,-0.014625448733568192,0,0.058501794934272766,0.029250897467136383,0,0,-0.014625448733568192,0,0,0.014625448733568192,0,0,0,0,0.058501794934272766,0,0,0,-0.029250897467136383,0,0.058501794934272766,0,0,0,-0.043876346200704575,0,0,0,0,0,0,0,0.11700358986854553,0.26325806975364685,0,-0.11700358986854553,-0.014625448733568192,0,0,0,0,-0.11700358986854553,-0.014625448733568192,0,0,0.058501794934272766,0,-0.058501794934272766,-0.014625448733568192,0,0,0,0,0,0,0,0,0.21938171982765198,0,-0.058501794934272766,-0.043876346200704575,0,0,0.014625448733568192,0,0,0,0,0,0,0,0,-0.014625448733568192,0,0.058501794934272766,0.058501794934272766,0,0,-0.029250897467136383,0,0.058501794934272766,0.14625447988510132,0,0,-0.029250897467136383,0,0,0.014625448733568192,0,0,0,0,0,0,0,0,0,0,0.11700358986854553,0.029250897467136383,0,0,0,0,0,0.014625448733568192,0,0,0,0,0,0.029250897467136383,0,-0.058501794934272766,0,0,0.058501794934272766,0.043876346200704575,0,0,0,0,0,0,0,-0.058501794934272766,0,0,0,0.058501794934272766,0,0,-0.07312723994255066,0,0,0,0,-0.058501794934272766,-0.07312723994255066,0,0.058501794934272766,0,0,0,-0.029250897467136383,0,0,0.13162903487682343,0,0,0,0,0,0,0,0,-0.029250897467136383,0,0,0.014625448733568192,0,0,0,0,0,0,0,0,0,0,0,0.13162903487682343,0,-0.058501794934272766,-0.014625448733568192,0,0,0.029250897467136383,0,-0.058501794934272766,0,0,0.058501794934272766,0,0,0,0,0,0,0.014625448733568192,0,0,0,0,0,0.13162903487682343,0,-0.058501794934272766,-0.014625448733568192,0,0,0,0,0,0,0,0,0,0,-0.058501794934272766,-0.029250897467136383,0,0,0.043876346200704575,0,-0.058501794934272766,0,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#DCOO -->\n$DCOO\n\nPaddle SEL A.B\n\nJoystick 0 R . L .D .U\n\nKeyboard Row Select (inverted)\n\nPRA\n\n56320\n\n$DC01\n\nJoystick 1\nKeyboard Column Read\n\nPRB 56321\n\n$DC02\n\n$FF -- All Output","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#DCOO"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.061909567564725876,0.0077386959455907345,0,0,0,0,0.030954783782362938,0.023216087371110916,0,0,-0.03869348019361496,0,0.030954783782362938,0.11608043313026428,0,-0.030954783782362938,0,0,0.030954783782362938,0.054170869290828705,0,-0.18572869896888733,-0.015477391891181469,0,0,0.015477391891181469,0,-0.061909567564725876,-0.0077386959455907345,0,0.030954783782362938,0.054170869290828705,0,-0.09286434948444366,-0.08512565493583679,0,0,0.03869348019361496,0,0,-0.023216087371110916,0,0.030954783782362938,0.023216087371110916,0,0,-0.0077386959455907345,0,0.030954783782362938,0,0,0,-0.03869348019361496,0,0,0.054170869290828705,0,0,-0.030954783782362938,0,0.030954783782362938,0,0,0,-0.023216087371110916,0,0.061909567564725876,0,0,-0.061909567564725876,-0.03869348019361496,0,0,0.0077386959455907345,0,0,0,0,0,0,0,0,0,0,0,0.023216087371110916,0,-0.09286434948444366,-0.03869348019361496,0,0.061909567564725876,0.0077386959455907345,0,-0.030954783782362938,-0.04643217474222183,0,0.030954783782362938,0.03869348019361496,0,0,-0.0077386959455907345,0,0.495276540517807,0.015477391891181469,0,0,-0.0077386959455907345,0,0.030954783782362938,0.023216087371110916,0,-0.09286434948444366,-0.015477391891181469,0,0.061909567564725876,0.015477391891181469,0,-0.061909567564725876,-0.09286434948444366,0,0.030954783782362938,0.0077386959455907345,0,-0.061909567564725876,-0.04643217474222183,0,0.15477392077445984,0.06964825838804245,0,-0.09286434948444366,-0.04643217474222183,0,0,0.015477391891181469,0,-0.061909567564725876,-0.0077386959455907345,0,0,0.015477391891181469,0,0,0,0,0,0.015477391891181469,0,-0.12381913512945175,-0.03869348019361496,0,0.2476382702589035,0.0077386959455907345,0,-0.061909567564725876,-0.0077386959455907345,0,0,0.023216087371110916,0,0,0,0,0,0.030954783782362938,0,-0.030954783782362938,-0.04643217474222183,0,0.15477392077445984,0.015477391891181469,0,-0.09286434948444366,-0.0077386959455907345,0,0.030954783782362938,0,0,0,0,0,0.030954783782362938,0,0,-0.030954783782362938,-0.061909567564725876,0,0.030954783782362938,0.030954783782362938,0,0,-0.015477391891181469,0,0.09286434948444366,0.015477391891181469,0,0,0,0,0.061909567564725876,0.2553769648075104,0,-0.030954783782362938,-0.015477391891181469,0,0.21668347716331482,0.015477391891181469,0,-0.030954783782362938,-0.054170869290828705,0,0.09286434948444366,0.04643217474222183,0,-0.030954783782362938,-0.030954783782362938,0,0.030954783782362938,0.023216087371110916,0,-0.030954783782362938,-0.030954783782362938,0,0,0.08512565493583679,0,-0.030954783782362938,-0.054170869290828705,0,0.09286434948444366,0.0077386959455907345,0,-0.061909567564725876,-0.07738696038722992,0,0,0,0,-0.09286434948444366,-0.015477391891181469,0,0,0.0077386959455907345,0,-0.030954783782362938,-0.08512565493583679,0,0.030954783782362938,0.12381913512945175,0,0,-0.030954783782362938,0,0,0.0077386959455907345,0,0,0,0,0.030954783782362938,0.0077386959455907345,0,-0.030954783782362938,-0.015477391891181469,0,0.030954783782362938,0.07738696038722992,0,-0.12381913512945175,-0.04643217474222183,0,0.030954783782362938,0.023216087371110916,0,-0.030954783782362938,0,0,0,0.030954783782362938,0,-0.030954783782362938,-0.030954783782362938,0,0.030954783782362938,0.015477391891181469,0,0,0,0,0,0.04643217474222183,0,0,0,0,0.030954783782362938,0.030954783782362938,0,-0.061909567564725876,-0.03869348019361496,0,0.21668347716331482,0.12381913512945175,0,0,-0.023216087371110916,0,0.061909567564725876,0.054170869290828705,0,-0.030954783782362938,-0.015477391891181469,0,0,0.1392965167760849,0,0,-0.015477391891181469,0,0,0.0077386959455907345,0,-0.15477392077445984,-0.03869348019361496,0,0.030954783782362938,0.061909567564725876,0,-0.030954783782362938,-0.04643217474222183,0,0.030954783782362938,0.0077386959455907345,0,0,-0.061909567564725876,0,0,0.03869348019361496,0,-0.061909567564725876,-0.03869348019361496,0,0.061909567564725876,0.015477391891181469,0,-0.030954783782362938,-0.015477391891181469,0,0,0,0,0,0,0,0,0.015477391891181469,0,-0.061909567564725876,-0.04643217474222183,0,0,0.07738696038722992,0,0,-0.07738696038722992,0,0,0.015477391891181469,0,0,-0.015477391891181469,0,0.030954783782362938,0,0,-0.061909567564725876,-0.023216087371110916,0,0,0.054170869290828705,0,-0.030954783782362938,-0.023216087371110916,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#STEP -->\nSTEP\n\nr-*\n\n+\n\nr- +\n\n-\n\nr-,\n\n*\n\nr-\n\n/\n\nr-.\n\nT\n\nr-/\n\nAND\n\nr-0\n\nOR\n\n6502\nSTA(I.X)\nSTY Z STAZ STXZ\nDEY\nTXA\nSTY STA STX\nBCC STA(I), Y\nSTY Z,X STA Z,X STX Z,Y\nTYA STAY TXS\nSTAX\nLDY # LDA(I,X) LDX #\nLDY Z LDAZ LDX Z\nTAY LDA # TAX\nLDY LDA LDX\nBCS\n\nDECI 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#STEP"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.06419751793146133,0.008024689741432667,0,-0.03209875896573067,0,0,0.03209875896573067,0.05617282912135124,0,0,-0.008024689741432667,0,0.03209875896573067,0.04012344777584076,0,0,-0.008024689741432667,0,0.03209875896573067,0,0,-0.25679007172584534,-0.008024689741432667,0,0,0.016049379482865334,0,0,-0.008024689741432667,0,0,0.1043209657073021,0,0,-0.04012344777584076,0,0,0.07222221046686172,0,-0.03209875896573067,-0.008024689741432667,0,0,0.008024689741432667,0,-0.25679007172584534,0,0,0,0.04814814031124115,0,-0.03209875896573067,-0.016049379482865334,0,0.03209875896573067,0.08024689555168152,0,0,-0.08827158808708191,0,0.03209875896573067,0.008024689741432667,0,0,-0.016049379482865334,0,0.06419751793146133,0.016049379482865334,0,0,-0.016049379482865334,0,0.03209875896573067,0.016049379482865334,0,0,-0.016049379482865334,0,0,0.016049379482865334,0,0,-0.008024689741432667,0,0,0,0,-0.12839503586292267,-0.024074070155620575,0,0,0.016049379482865334,0,-0.0962962806224823,-0.03209875896573067,0,0.03209875896573067,0.03209875896573067,0,0,-0.016049379482865334,0,0.22469131648540497,0.016049379482865334,0,-0.03209875896573067,-0.016049379482865334,0,0,0.016049379482865334,0,-0.03209875896573067,0,0,0.06419751793146133,0.016049379482865334,0,0,-0.12839503586292267,0,0,0.008024689741432667,0,0,0,0,0.0962962806224823,0.008024689741432667,0,-0.12839503586292267,0,0,0.03209875896573067,0,0,0,-0.016049379482865334,0,0.0962962806224823,0,0,0,-0.12839503586292267,0,0.03209875896573067,0.016049379482865334,0,-0.06419751793146133,-0.03209875896573067,0,0.1925925612449646,0.024074070155620575,0,-0.06419751793146133,0,0,0,0.016049379482865334,0,0,0,0,0,0.04814814031124115,0,0,-0.008024689741432667,0,0.3209875822067261,0.04012344777584076,0,-0.03209875896573067,-0.016049379482865334,0,0.03209875896573067,0,0,0,0,0,0.16049379110336304,0,0,-0.03209875896573067,-0.07222221046686172,0,0.0962962806224823,0,0,-0.03209875896573067,-0.05617282912135124,0,0,0.024074070155620575,0,-0.03209875896573067,0,0,0.06419751793146133,0.11234565824270248,0,-0.03209875896573067,-0.024074070155620575,0,0.2888888418674469,0.008024689741432667,0,-0.03209875896573067,-0.03209875896573067,0,0.22469131648540497,0.04814814031124115,0,-0.03209875896573067,-0.008024689741432667,0,0.03209875896573067,0.008024689741432667,0,0,0,0,0.06419751793146133,0.05617282912135124,0,0,-0.06419751793146133,0,0.12839503586292267,0.024074070155620575,0,-0.22469131648540497,-0.06419751793146133,0,0.03209875896573067,0.04814814031124115,0,-0.06419751793146133,0,0,0.06419751793146133,0.016049379482865334,0,0,-0.03209875896573067,0,0.06419751793146133,0.0962962806224823,0,0,-0.04012344777584076,0,0,0,0,-0.03209875896573067,-0.06419751793146133,0,0,0,0,-0.03209875896573067,-0.008024689741432667,0,0,0.16851848363876343,0,0,-0.016049379482865334,0,0,0.024074070155620575,0,0,0,0,0,0.0962962806224823,0,-0.06419751793146133,-0.016049379482865334,0,0,0.05617282912135124,0,0,-0.016049379482865334,0,0,0,0,0,-0.016049379482865334,0,0.03209875896573067,0.03209875896573067,0,0,-0.04814814031124115,0,0.03209875896573067,0.14444442093372345,0,0,-0.04012344777584076,0,0,0.12037035077810287,0,0,-0.016049379482865334,0,0,0.07222221046686172,0,0,-0.008024689741432667,0,0.06419751793146133,0.03209875896573067,0,-0.06419751793146133,-0.008024689741432667,0,0.03209875896573067,0.08024689555168152,0,0,-0.11234565824270248,0,0,0.016049379482865334,0,0,-0.03209875896573067,0,0.06419751793146133,0.05617282912135124,0,-0.03209875896573067,-0.03209875896573067,0,0.0962962806224823,0.04012344777584076,0,-0.06419751793146133,0,0,0,0.024074070155620575,0,0,-0.016049379482865334,0,0,0.008024689741432667,0,-0.03209875896573067,-0.03209875896573067,0,0,0.04814814031124115,0,-0.03209875896573067,-0.016049379482865334,0,0.03209875896573067,0,0,0,0,0,0,0,0,-0.03209875896573067,-0.03209875896573067,0,0.03209875896573067,0.08024689555168152,0,-0.06419751793146133,-0.008024689741432667,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#DIRECTORY -->\nDIRECTORY\n\ni\n\nU\n\n6502 LDA(I),Y\nLDY Z,X LDA Z,X LDX Z,Y\nCLV LDA Y\nrsx\nLDY X LDA X LDX Y\nCPY# CMP(I),X\nCPY Z CMP Z DEC Z\nINY CMP # DEX\nCPY CMP DEC\nBNE CMP(I),Y\nCMP Z,X DEC Z,X\nCLD CMP Y\nCMP X DEC X\nCPX# SBC(I),X\n\nDECIMAL 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#DIRECTORY"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.11757362633943558,0,0,0,-0.03919120877981186,0,0,0.01959560438990593,0,-0.11757362633943558,0,0,0.03919120877981186,0.03919120877981186,0,0,-0.03919120877981186,0,0.03919120877981186,0.15676483511924744,0,-0.1959560513496399,0,0,0,0.01959560438990593,0,0,-0.029393406584858894,0,0,0.03919120877981186,0,-0.03919120877981186,-0.009797802194952965,0,0,0.01959560438990593,0,0,0,0,0,0.04898901283740997,0,-0.03919120877981186,0,0,0,0.0685846135020256,0,0,-0.01959560438990593,0,0.1959560513496399,0.05878681316971779,0,0,-0.01959560438990593,0,0.07838241755962372,0,0,-0.07838241755962372,0,0,0,0.009797802194952965,0,-0.03919120877981186,-0.029393406584858894,0,0,0,0,-0.03919120877981186,0,0,0,0.03919120877981186,0,0,0,0,0,0.009797802194952965,0,-0.03919120877981186,-0.01959560438990593,0,0.03919120877981186,0,0,-0.11757362633943558,-0.01959560438990593,0,0.03919120877981186,0.07838241755962372,0,0,-0.009797802194952965,0,0.35272088646888733,0.04898901283740997,0,0,-0.0685846135020256,0,0.03919120877981186,0.029393406584858894,0,0,-0.009797802194952965,0,0.03919120877981186,0.01959560438990593,0,-0.03919120877981186,-0.10777582228183746,0,0.03919120877981186,0,0,-0.03919120877981186,0,0,0.15676483511924744,0.009797802194952965,0,-0.03919120877981186,-0.03919120877981186,0,0,0.07838241755962372,0,0,0,0,0,0.009797802194952965,0,-0.03919120877981186,-0.01959560438990593,0,0,0,0,0,0,0,0.1959560513496399,0.10777582228183746,0,-0.03919120877981186,0,0,0,0.05878681316971779,0,-0.07838241755962372,-0.03919120877981186,0,0,0,0,0,-0.029393406584858894,0,0.15676483511924744,0.01959560438990593,0,-0.11757362633943558,-0.01959560438990593,0,0,0,0,-0.07838241755962372,0,0,0.07838241755962372,0,0,0,-0.029393406584858894,0,0.07838241755962372,0.01959560438990593,0,0,-0.05878681316971779,0,0,0.03919120877981186,0,0,0,0,0,0.17636044323444366,0,-0.11757362633943558,-0.009797802194952965,0,0.15676483511924744,0.01959560438990593,0,-0.03919120877981186,-0.009797802194952965,0,0,0.04898901283740997,0,0,-0.01959560438990593,0,0.03919120877981186,0.01959560438990593,0,0,-0.04898901283740997,0,0.2743384540081024,0.08818022161722183,0,0,-0.01959560438990593,0,0.07838241755962372,0.009797802194952965,0,-0.07838241755962372,-0.04898901283740997,0,0,0,0,0,-0.01959560438990593,0,0.03919120877981186,0,0,-0.03919120877981186,-0.009797802194952965,0,0,0.09797802567481995,0,0,-0.01959560438990593,0,0,0,0,0,-0.04898901283740997,0,0.03919120877981186,0,0,0,0,0,0,0.1273714303970337,0,0,-0.05878681316971779,0,0.07838241755962372,0.01959560438990593,0,-0.03919120877981186,-0.05878681316971779,0,0.1959560513496399,0.03919120877981186,0,-0.03919120877981186,-0.009797802194952965,0,0.03919120877981186,0.03919120877981186,0,-0.03919120877981186,-0.009797802194952965,0,0,0,0,-0.03919120877981186,0,0,0,0,0,0,-0.0685846135020256,0,0.03919120877981186,0.08818022161722183,0,-0.07838241755962372,-0.04898901283740997,0,0.3135296702384949,0.009797802194952965,0,0,0,0,0.03919120877981186,0.10777582228183746,0,0,0,0,0,0.14696703851222992,0,0,0,0,0.03919120877981186,0.04898901283740997,0,0,-0.04898901283740997,0,0.07838241755962372,0.009797802194952965,0,0,-0.009797802194952965,0,0,0.05878681316971779,0,-0.03919120877981186,-0.029393406584858894,0,0.07838241755962372,0,0,0,0,0,0,0,0,0,-0.009797802194952965,0,0,0.01959560438990593,0,-0.03919120877981186,0,0,0,0.04898901283740997,0,0,-0.009797802194952965,0,0.07838241755962372,0.03919120877981186,0,0,-0.03919120877981186,0,0,0.09797802567481995,0,-0.03919120877981186,-0.01959560438990593,0,0,0.05878681316971779,0,-0.03919120877981186,-0.04898901283740997,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#SCREEN-BASIC-H -->\nSCREEN BASIC H\n\nH H\n\nII\n\nH\n\nJÔøΩ\n\nm\n\nD\n\nr\n\nG\n\nn\ns D\n\nH\n\nB\n\na\n\nII\n\na\n\nu\n\nH\n\nB\n\nIQ 9\n\nk\na\n\na\n\nH\n\nTT\n\n6502\nCPXZ SBC Z INC Z\nINX SBC # NOP\nCPX SBC INC\nBEQ SBC(I), Y\nSBC Z,X INC Z,X\nSED SBC Y\nSBC X INC X\n\nDECIMAL 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#SCREEN-BASIC-H"},{"name":"retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","language":"asm","vector":[0.02456415817141533,0,0,0,-0.006141039542853832,0,0,0.006141039542853832,0,0,-0.006141039542853832,0,0.012282079085707664,0.015352599322795868,0,-0.12282079458236694,-0.01842311955988407,0,0.09825663268566132,0.09211559593677521,0,0,0,0,0.11053871363401413,0,0,0,-0.009211559779942036,0,0,0.003070519771426916,0,0,-0.05219883844256401,0,0,0.021493637934327126,0,0,-0.009211559779942036,0,0.02456415817141533,0.012282079085707664,0,0,-0.006141039542853832,0,0,0.003070519771426916,0,-0.012282079085707664,0,0,0.03684623911976814,0.02456415817141533,0,-0.012282079085707664,-0.01842311955988407,0,0.02456415817141533,0,0,-0.012282079085707664,0,0,0.02456415817141533,0.0798335149884224,0,0,-0.04912831634283066,0,0,0.006141039542853832,0,0,-0.02456415817141533,0,0,0.006141039542853832,0,-0.02456415817141533,-0.003070519771426916,0,0,0.003070519771426916,0,-0.02456415817141533,-0.05219883844256401,0,0.012282079085707664,0.003070519771426916,0,-0.012282079085707664,-0.006141039542853832,0,0,0.015352599322795868,0,0,-0.009211559779942036,0,0.171949103474617,0,0,-0.02456415817141533,-0.009211559779942036,0,0,0.006141039542853832,0,0,-0.06141039729118347,0,0.012282079085707664,0.04912831634283066,0,0,-0.003070519771426916,0,0,0.055269356817007065,0,0,-0.003070519771426916,0,0.700078547000885,0.006141039542853832,0,-0.02456415817141533,-0.006141039542853832,0,0.012282079085707664,0.04298727586865425,0,-0.02456415817141533,0,0,0,0.012282079085707664,0,0,-0.003070519771426916,0,0,0,0,-0.02456415817141533,-0.030705198645591736,0,0.07369247823953629,0.01842311955988407,0,-0.03684623911976814,-0.006141039542853832,0,0.012282079085707664,0.015352599322795868,0,0,-0.006141039542853832,0,0,0.012282079085707664,0,0,0,0,0,0.003070519771426916,0,-0.012282079085707664,-0.009211559779942036,0,0,0,0,0,-0.012282079085707664,0,0.02456415817141533,0.009211559779942036,0,0,-0.03684623911976814,0,0.012282079085707664,0.009211559779942036,0,-0.02456415817141533,-0.01842311955988407,0,0.02456415817141533,0.003070519771426916,0,0,0,0,0,0.0859745517373085,0,-0.012282079085707664,-0.03684623911976814,0,0.012282079085707664,0,0,-0.012282079085707664,-0.003070519771426916,0,0.0859745517373085,0.012282079085707664,0,-0.03684623911976814,0,0,0.02456415817141533,0,0,-0.02456415817141533,0,0,0.012282079085707664,0.35310977697372437,0,0,-0.04298727586865425,0,0.07369247823953629,0.030705198645591736,0,0,-0.012282079085707664,0,0,0.027634678408503532,0,0,0,0,0.2456415891647339,0,0,0,-0.012282079085707664,0,0,0.03684623911976814,0,0,-0.01842311955988407,0,0,0.012282079085707664,0,-0.012282079085707664,0,0,0.012282079085707664,0,0,-0.012282079085707664,-0.003070519771426916,0,0.012282079085707664,0.009211559779942036,0,0,-0.009211559779942036,0,0.012282079085707664,0.006141039542853832,0,-0.03684623911976814,-0.003070519771426916,0,0,0.01842311955988407,0,-0.03684623911976814,0,0,0,0.006141039542853832,0,0,-0.012282079085707664,0,0,0.012282079085707664,0,-0.012282079085707664,-0.006141039542853832,0,0,0,0,-0.012282079085707664,-0.012282079085707664,0,0.02456415817141533,0.009211559779942036,0,-0.02456415817141533,-0.009211559779942036,0,0.171949103474617,0.04298727586865425,0,0,-0.01842311955988407,0,0,0.055269356817007065,0,-0.012282079085707664,-0.01842311955988407,0,0,0.006141039542853832,0,-0.09825663268566132,0,0,0,0.0399167574942112,0,0,0,0,0.012282079085707664,0,0,0,0,0,0,0.297840416431427,0,0,-0.006141039542853832,0,0.012282079085707664,0.003070519771426916,0,-0.03684623911976814,-0.006141039542853832,0,0,0,0,0,-0.006141039542853832,0,0.03684623911976814,0.006141039542853832,0,-0.09825663268566132,-0.012282079085707664,0,0.012282079085707664,0.02456415817141533,0,-0.04912831634283066,-0.009211559779942036,0,0.012282079085707664,0.009211559779942036,0,0,-0.01842311955988407,0,0,0,0,-0.09825663268566132,-0.01842311955988407,0,0,0,0,-0.012282079085707664,-0.003070519771426916,0],"text":"<!-- Source: external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#ODEA-Cfl-0-4 -->\n. : ODEA Cfl 0 4 .....................................\n\nFrom Chapter 7:\nAn Interrupt Project VIC-20 (Unexpanded) Version\nThe only difference with the VIC-20 is that the screen is located at $ I E 0 0:\nÔøΩ A 033C LDA $31 .A 033E STA $1E 00 .A 0 3 4 1 JMP ( $ 0 3 AO )\nTo place the link address into $ 0 3 AO/1:\n.A 0344 LDA $0314 .A 0347 STA $03A0 .A 0 3 4 A LDA $03 15 .A 034D STA $03A1\nTo fire up the program:\n.A 0350 SEI .A 0351 LDA #$3C .A 0353 STA $0314 .A 035b LDA # $ 0 3 .A 0356 STA $ 03 1 5 .A 035B CLI . A 0 3 5 C RTS\nTo restore the original interrupt:\n.A 035D SEI .A 035E LDA $03A0 ÔøΩ A 0 3 b l STA $0314 ÔøΩ A 0 3 b 4 LDA $ 0 3 A1 ÔøΩ A 03L7 STA $03 15","sourcePath":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt","sourceMtimeMs":1761327713592.8833,"origin":"external/retro-commodore.eu/files/development/c64-development/Butterfield_Machine_Language_for_the_Commodore_64_and_other_Commodore_Computers.ocr.txt#ODEA-Cfl-0-4"},{"name":"sid-overview.md","language":"asm","vector":[0,0,0,-0.0622064433991909,-0.03887902572751045,0,0.03110322169959545,0.05443063750863075,0,0,-0.0233274158090353,0,0,0.007775805424898863,0,-0.0933096632361412,-0.015551610849797726,0,0.2488257735967636,0.03887902572751045,0,0,0,0,0,0,0,0,-0.05443063750863075,0,0.03110322169959545,0.0933096632361412,0,0,-0.0466548316180706,0,0,0,0,0,0,0,0,0,0,0,-0.015551610849797726,0,0.0933096632361412,0.007775805424898863,0,-0.03110322169959545,-0.007775805424898863,0,0,0.015551610849797726,0,-0.0622064433991909,-0.007775805424898863,0,0,0.0233274158090353,0,-0.03110322169959545,-0.03110322169959545,0,0,0,0,-0.03110322169959545,-0.015551610849797726,0,0,0.007775805424898863,0,0,-0.05443063750863075,0,0.03110322169959545,0.0233274158090353,0,-0.03110322169959545,-0.0466548316180706,0,0.0933096632361412,0.0466548316180706,0,-0.2488257735967636,-0.03110322169959545,0,0,0.015551610849797726,0,-0.03110322169959545,0,0,0.0622064433991909,0,0,0,-0.03887902572751045,0,0.2488257735967636,0.015551610849797726,0,0,-0.03110322169959545,0,0.03110322169959545,0,0,0,-0.0777580514550209,0,0.03110322169959545,0.1244128867983818,0,-0.03110322169959545,-0.007775805424898863,0,0.03110322169959545,0.0233274158090353,0,0,-0.007775805424898863,0,0.279928982257843,0.015551610849797726,0,-0.2488257735967636,-0.007775805424898863,0,0.03110322169959545,0.015551610849797726,0,-0.0622064433991909,0,0,0.03110322169959545,0,0,0,-0.0233274158090353,0,0,0.0622064433991909,0,-0.03110322169959545,-0.03887902572751045,0,0.3732386529445648,0,0,0,-0.03110322169959545,0,0,0,0,-0.03110322169959545,-0.015551610849797726,0,0,0,0,0,-0.015551610849797726,0,0,0.007775805424898863,0,-0.0622064433991909,0,0,0,0.0233274158090353,0,-0.0933096632361412,-0.0233274158090353,0,0.03110322169959545,0.0466548316180706,0,-0.03110322169959545,-0.13218869268894196,0,0.03110322169959545,0,0,0,-0.03110322169959545,0,0.03110322169959545,0.03110322169959545,0,0,-0.0233274158090353,0,0,0.14774030447006226,0,-0.03110322169959545,-0.015551610849797726,0,0.2488257735967636,0.0233274158090353,0,0,0,0,0,0.015551610849797726,0,0,-0.03110322169959545,0,0,0.0233274158090353,0,-0.0622064433991909,0,0,0.03110322169959545,0.1399644911289215,0,-0.03110322169959545,-0.14774030447006226,0,0,0.0777580514550209,0,-0.03110322169959545,-0.03110322169959545,0,0.03110322169959545,0.015551610849797726,0,-0.0622064433991909,0,0,0,0.007775805424898863,0,0,-0.015551610849797726,0,0.03110322169959545,0.1866193264722824,0,-0.0933096632361412,0,0,0.0933096632361412,0,0,0,-0.015551610849797726,0,0,0.0233274158090353,0,0,-0.007775805424898863,0,0,0,0,0,-0.0466548316180706,0,0,0,0,-0.03110322169959545,-0.05443063750863075,0,0,0.015551610849797726,0,-0.1244128867983818,-0.0233274158090353,0,0,0.015551610849797726,0,-0.1244128867983818,0,0,0,0.0233274158090353,0,-0.03110322169959545,-0.007775805424898863,0,0.0933096632361412,0.0233274158090353,0,-0.03110322169959545,-0.0777580514550209,0,0,0.1244128867983818,0,-0.03110322169959545,-0.007775805424898863,0,0.0622064433991909,0.015551610849797726,0,0,0,0,0,0.0622064433991909,0,-0.0933096632361412,-0.03110322169959545,0,0.0622064433991909,0.0233274158090353,0,-0.0933096632361412,-0.015551610849797726,0,0,0.007775805424898863,0,0,-0.0233274158090353,0,0,0.0233274158090353,0,0,-0.03110322169959545,0,0,0.06998224556446075,0,0,-0.0622064433991909,0,0.03110322169959545,0.0233274158090353,0,0,-0.0622064433991909,0,0.03110322169959545,0.05443063750863075,0,-0.03110322169959545,0,0,0,0,0,-0.03110322169959545,-0.007775805424898863,0,0,0.0933096632361412,0,-0.0622064433991909,0,0,0,0,0,-0.0933096632361412,-0.0233274158090353,0,0.0933096632361412,0,0,-0.0622064433991909,-0.0622064433991909,0,0.03110322169959545,0,0,0,-0.0777580514550209,0],"text":"# SID Quick Reference (for RAG)\n\nSee `data/audio/sid-spec.md` for the full guide. This stub ensures the RAG index includes SID guidance.\n\n- Base address: $D400\n- Voice control: $D404/$D40B/$D412 (bits: NOISE PULSE SAW TRI TEST RING SYNC GATE)\n- Play note: set FREQ LO/HI, PW LO/HI, AD, SR; set CTRL with waveform|GATE\n- Stop note: clear GATE bit in CTRL\n- Volume/filter: $D418 (bits 0..3 volume, 4..6 LP/BP/HP)\n- Filter cutoff: $D415/$D416 (11 bits)\n- Useful effects: arpeggio (rewrite FREQ), vibrato (modulate FREQ), PWM (modulate PW), filter sweeps ($D415/$D416)\n","sourcePath":"data/assembly/examples/sid-overview.md","sourceMtimeMs":1761503116437.9421},{"name":"zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","language":"asm","vector":[0.033386994153261185,0,0,0,-0.05842723697423935,0,0.13354797661304474,0.025040244683623314,0,-0.13354797661304474,-0.020866870880126953,0,0.1168544739484787,0.025040244683623314,0,-0.016693497076630592,-0.05008048936724663,0,0.06677398830652237,0.05425386130809784,0,-0.033386994153261185,-0.008346748538315296,0,0.016693497076630592,0.020866870880126953,0,0,-0.016693497076630592,0,0.016693497076630592,0.05425386130809784,0,-0.033386994153261185,-0.020866870880126953,0,0,0,0,0,-0.008346748538315296,0,0.06677398830652237,0.012520122341811657,0,0,-0.025040244683623314,0,0,0,0,-0.016693497076630592,-0.004173374269157648,0,0.033386994153261185,0.020866870880126953,0,-0.016693497076630592,-0.041733741760253906,0,0,0.016693497076630592,0,0,-0.008346748538315296,0,0.033386994153261185,0.025040244683623314,0,0,-0.008346748538315296,0,0,0,0,0,-0.033386994153261185,0,0,0.033386994153261185,0,-0.2337089478969574,-0.008346748538315296,0,0.1168544739484787,0.008346748538315296,0,-0.033386994153261185,-0.17528171837329865,0,0,0,0,-0.06677398830652237,-0.029213618487119675,0,0.016693497076630592,0.020866870880126953,0,-0.06677398830652237,-0.008346748538315296,0,0.28378942608833313,0.06677398830652237,0,0,-0.06677398830652237,0,0.033386994153261185,0.06677398830652237,0,-0.033386994153261185,-0.012520122341811657,0,0.06677398830652237,0.033386994153261185,0,-0.06677398830652237,-0.025040244683623314,0,0.016693497076630592,0.008346748538315296,0,0,-0.008346748538315296,0,0.33386993408203125,0.008346748538315296,0,-0.06677398830652237,-0.020866870880126953,0,0.016693497076630592,0.020866870880126953,0,-0.05008048936724663,0,0,0.1168544739484787,0.041733741760253906,0,-0.016693497076630592,-0.008346748538315296,0,0.016693497076630592,0,0,-0.016693497076630592,-0.012520122341811657,0,0.16693496704101562,0.016693497076630592,0,-0.016693497076630592,-0.012520122341811657,0,0,0.004173374269157648,0,-0.13354797661304474,0,0,0,0.016693497076630592,0,0,0,0,0.016693497076630592,0,0,-0.05008048936724663,-0.016693497076630592,0,0,0.004173374269157648,0,-0.16693496704101562,-0.12102784961462021,0,0.10016097873449326,0.06677398830652237,0,-0.016693497076630592,-0.016693497076630592,0,0.10016097873449326,0,0,-0.16693496704101562,-0.041733741760253906,0,0.05008048936724663,0.012520122341811657,0,-0.033386994153261185,-0.033386994153261185,0,0.016693497076630592,0.14189471304416656,0,0,-0.08346748352050781,0,0.21701544523239136,0.016693497076630592,0,-0.05008048936724663,-0.020866870880126953,0,0,0.041733741760253906,0,0,-0.033386994153261185,0,0.016693497076630592,0.041733741760253906,0,-0.10016097873449326,-0.033386994153261185,0,0,0.1961485892534256,0,-0.016693497076630592,-0.037560366094112396,0,0.08346748352050781,0.025040244683623314,0,-0.033386994153261185,-0.033386994153261185,0,0.033386994153261185,0.06260061264038086,0,0,-0.008346748538315296,0,0.033386994153261185,0.012520122341811657,0,-0.033386994153261185,-0.016693497076630592,0,0,0.08346748352050781,0,-0.06677398830652237,-0.008346748538315296,0,0.10016097873449326,0.016693497076630592,0,-0.033386994153261185,-0.06677398830652237,0,0.033386994153261185,0,0,-0.033386994153261185,-0.004173374269157648,0,0,0.016693497076630592,0,-0.08346748352050781,-0.029213618487119675,0,0.016693497076630592,0,0,-0.033386994153261185,-0.08346748352050781,0,0,0.05842723697423935,0,0,-0.008346748538315296,0,0.033386994153261185,0.05008048936724663,0,-0.016693497076630592,-0.08346748352050781,0,0,0.025040244683623314,0,-0.033386994153261185,-0.07512073218822479,0,0,0.037560366094112396,0,-0.033386994153261185,-0.008346748538315296,0,0,0.10850772261619568,0,-0.016693497076630592,-0.041733741760253906,0,0.08346748352050781,0.004173374269157648,0,0,-0.016693497076630592,0,0.033386994153261185,0.0792941078543663,0,-0.033386994153261185,-0.05008048936724663,0,0,0.008346748538315296,0,-0.016693497076630592,-0.016693497076630592,0,0,0.05842723697423935,0,-0.016693497076630592,-0.033386994153261185,0,0.016693497076630592,0.020866870880126953,0,0,0,0,0,0.10016097873449326,0,0,-0.033386994153261185,0,0,0.004173374269157648,0,-0.06677398830652237,-0.04590711370110512,0,0.016693497076630592,0.0792941078543663,0,-0.016693497076630592,-0.020866870880126953,0,0.033386994153261185,0.020866870880126953,0,0,-0.020866870880126953,0,0,0.041733741760253906,0,-0.033386994153261185,-0.04590711370110512,0,0.016693497076630592,0.008346748538315296,0,0,-0.05008048936724663,0,0,0,0,-0.33386993408203125,0,0,0,0.020866870880126953,0,-0.016693497076630592,-0.020866870880126953,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#Appendix-H-Commodore-64-Keycodes-13 -->\nTo address all of these at once would require 88K, 24K past the\naddressing limit of the 6510 microprocessor.  In order to allocate\naddress space, the I/O Port is used to affect the addressing lines,\nand thus determine which segments of RAM and ROM will be addressed at\nany one time.\n\nBit 0.  This bit controls the LORAM signal.  A 0 in this bit position\nswitches the BASIC ROM out, and replaces it with RAM at addresses\n40960-49151 ($A000-$BFFF).  The default value of this bit is 1.\n\nBit 1.  Bit 1 controls the HIRAM signal.  A 0 in this bit position\nswitches the Kernal ROM out, and replaces it with RAM at 57344-65535\n($E000-$FFFF).  As the BASIC interpreter uses the Kernal, it is also\nswitched out and replaced by RAM.  The default value of this bit is 1.\n\nThe system allows a wide range of combinations of RAM and ROM to be\nutilized.  Of course, the BASIC programmer will have little need, in\nthe ordinary course of events, to switch out the BASIC ROM and the\nKernal.  To do so would just hang the system up.  But one way to make\nuse of this feature is to move the contents of ROM to the\ncorresponding RAM addresses.  That way, you can easily modify and\ncustomize the BASIC interpreter and OS Kernal routines, which are\nordinarily fixed in ROM.  For examples, to move BASIC into RAM, just\ntype:","sourcePath":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","sourceMtimeMs":1761327822859.5813,"origin":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#Appendix-H-Commodore-64-Keycodes-13"},{"name":"zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","language":"asm","vector":[0.03882717341184616,0.03882717341184616,0,-0.01941358670592308,-0.05824076384305954,0,0.05824076384305954,0.00970679335296154,0,-0.01941358670592308,-0.01941358670592308,0,0.03882717341184616,0.05824076384305954,0,-0.0970679372549057,-0.00485339667648077,0,0.01941358670592308,0.014560190960764885,0,-0.03882717341184616,-0.014560190960764885,0,0,0.00485339667648077,0,0,-0.014560190960764885,0,0.01941358670592308,0.06309416145086288,0,-0.03882717341184616,-0.024266984313726425,0,0.01941358670592308,0.024266984313726425,0,-0.01941358670592308,0,0,0.03882717341184616,0.03882717341184616,0,-0.05824076384305954,-0.03882717341184616,0,0,0.014560190960764885,0,-0.05824076384305954,-0.014560190960764885,0,0.11648152768611908,0.033973779529333115,0,-0.01941358670592308,-0.01941358670592308,0,0,0.02912038192152977,0,-0.01941358670592308,-0.02912038192152977,0,0.01941358670592308,0.00970679335296154,0,0,0,0,0.05824076384305954,0.00970679335296154,0,-0.01941358670592308,-0.043680571019649506,0,0.03882717341184616,0.01941358670592308,0,-0.0970679372549057,-0.01941358670592308,0,0.03882717341184616,0.00970679335296154,0,-0.05824076384305954,-0.1504552960395813,0,0.03882717341184616,0.00485339667648077,0,-0.01941358670592308,-0.06794755905866623,0,0.01941358670592308,0.033973779529333115,0,0,-0.00970679335296154,0,0.44651252031326294,0.02912038192152977,0,-0.11648152768611908,-0.00970679335296154,0,0.01941358670592308,0.02912038192152977,0,0,-0.053387366235256195,0,0.01941358670592308,0.02912038192152977,0,-0.07765434682369232,-0.033973779529333115,0,0.01941358670592308,0,0,-0.07765434682369232,-0.00485339667648077,0,0.23296305537223816,0.024266984313726425,0,-0.0970679372549057,-0.01941358670592308,0,0.01941358670592308,0.014560190960764885,0,-0.13589511811733246,-0.014560190960764885,0,0.03882717341184616,0.01941358670592308,0,-0.03882717341184616,-0.033973779529333115,0,0.01941358670592308,0,0,0,-0.02912038192152977,0,0.17472228407859802,0.06794755905866623,0,-0.03882717341184616,-0.00970679335296154,0,0.01941358670592308,0.01941358670592308,0,-0.03882717341184616,-0.00970679335296154,0,0.03882717341184616,0.014560190960764885,0,-0.01941358670592308,-0.00485339667648077,0,0,0.03882717341184616,0,-0.03882717341184616,-0.014560190960764885,0,0,0.02912038192152977,0,-0.11648152768611908,-0.04853396862745285,0,0.03882717341184616,0.01941358670592308,0,-0.03882717341184616,-0.02912038192152977,0,0.11648152768611908,0.024266984313726425,0,-0.01941358670592308,-0.01941358670592308,0,0.01941358670592308,0.00970679335296154,0,-0.01941358670592308,-0.00970679335296154,0,0.01941358670592308,0.22325626015663147,0,-0.01941358670592308,-0.1310417205095291,0,0.25237664580345154,0.00970679335296154,0,-0.0970679372549057,-0.02912038192152977,0,0.01941358670592308,0.01941358670592308,0,0,-0.043680571019649506,0,0,0.024266984313726425,0,-0.15530869364738464,-0.043680571019649506,0,0.01941358670592308,0.12618832290172577,0,-0.01941358670592308,-0.07280095666646957,0,0.05824076384305954,0.014560190960764885,0,-0.03882717341184616,-0.07765434682369232,0,0.03882717341184616,0.01941358670592308,0,-0.11648152768611908,-0.01941358670592308,0,0.03882717341184616,0.014560190960764885,0,0,-0.00970679335296154,0,0,0.09221453964710236,0,-0.0970679372549057,-0.024266984313726425,0,0.07765434682369232,0.01941358670592308,0,0,-0.033973779529333115,0,0.03882717341184616,0.01941358670592308,0,-0.01941358670592308,-0.024266984313726425,0,0.01941358670592308,0.02912038192152977,0,-0.03882717341184616,-0.024266984313726425,0,0.05824076384305954,0,0,0,-0.06309416145086288,0,0,0.024266984313726425,0,0,-0.01941358670592308,0,0.03882717341184616,0.07280095666646957,0,-0.01941358670592308,-0.014560190960764885,0,0.07765434682369232,0.01941358670592308,0,-0.05824076384305954,-0.033973779529333115,0,0,0.01941358670592308,0,-0.01941358670592308,-0.024266984313726425,0,0.05824076384305954,0.13589511811733246,0,0,-0.053387366235256195,0,0.01941358670592308,0.014560190960764885,0,-0.01941358670592308,0,0,0,0.11162813007831573,0,-0.01941358670592308,-0.10677473247051239,0,0,0.014560190960764885,0,0,-0.00970679335296154,0,0.03882717341184616,0.033973779529333115,0,0,-0.03882717341184616,0,0.07765434682369232,0.024266984313726425,0,0,-0.07765434682369232,0,0.01941358670592308,0.07765434682369232,0,-0.01941358670592308,-0.024266984313726425,0,0.03882717341184616,0.00485339667648077,0,-0.01941358670592308,-0.08250774443149567,0,0.03882717341184616,0.04853396862745285,0,0,-0.00970679335296154,0,0,0.024266984313726425,0,0,-0.00970679335296154,0,0.01941358670592308,0.053387366235256195,0,-0.03882717341184616,-0.02912038192152977,0,0,0.033973779529333115,0,-0.03882717341184616,-0.00970679335296154,0,0,0.00970679335296154,0,-0.2912038266658783,-0.00485339667648077,0,0,0.01941358670592308,0,-0.11648152768611908,-0.01941358670592308,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#POKE-2149PRINTPRINT-WERE-ON-LINE-ELEVEN-9 -->\nEvery time a device is OPENed, its information is added as the last\nentry in each table, and the value at location 152 ($98) is increased\nby one, indicating that there is one more active I/O file.  When a\ndevice is CLOSEd, the value at location 152 is decreased by one, and\nall entries that occupy a position in the tables that is higher than\nthat of the closed device are moved down one position, thus\neliminating the entry for that device.  The Kernal CLALL routine\n(62255, $F32F) simply zeros location 152, which has the effect of\nemptying these tables.\n\n601-610       $259-$262      LAT\nKernal Table of Active Logical File Numbers\n\n611-620       $263-$26C      FAT\nKernal Table of Device Numbers for Each Logical File\n\n621-630       $26D-$276      SAT\nKernal Table of Secondary Addresses for Each Logical File\n\n631-640       $277-$280      KEYD\nKeyboard Buffer (Queue)\n\nThis buffer, sometimes also referred to as the keyboard queue, holds\nthe ASCII values of the characters entered from the keyboard.  The\ninterrupt routine which scans the keyboard deposits a character here\neach time a key is pressed.  When BASIC sees that there are characters\nwaiting, it removes and prints them, one by one, in the order in which\nthey were entered.","sourcePath":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","sourceMtimeMs":1761327822859.5813,"origin":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#POKE-2149PRINTPRINT-WERE-ON-LINE-ELEVEN-9"},{"name":"zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","language":"asm","vector":[0,0,0,0,-0.07375465333461761,0,0.03687732666730881,0.009219331666827202,0,-0.07375465333461761,-0.009219331666827202,0,0.05531598627567291,0.050706323236227036,0,-0.09219331294298172,-0.02304832823574543,0,0.09219331294298172,0.009219331666827202,0,-0.018438663333654404,-0.027657993137836456,0,0,0,0,0,-0.009219331666827202,0,0.018438663333654404,0.04609665647149086,0,-0.018438663333654404,-0.03687732666730881,0,0.05531598627567291,0.04609665647149086,0,0,-0.08297397941350937,0,0.09219331294298172,0.04609665647149086,0,0,-0.050706323236227036,0,0.018438663333654404,0.004609665833413601,0,-0.07375465333461761,-0.018438663333654404,0,0.05531598627567291,0.009219331666827202,0,-0.05531598627567291,-0.018438663333654404,0,0.018438663333654404,0.009219331666827202,0,0,-0.027657993137836456,0,0,0.009219331666827202,0,0,-0.02304832823574543,0,0.018438663333654404,0.009219331666827202,0,0,-0.05992565304040909,0,0.11063197255134583,0.03226765990257263,0,-0.12907063961029053,0,0,0.07375465333461761,0.009219331666827202,0,-0.16594795882701874,-0.19821561872959137,0,0,0.04609665647149086,0,-0.018438663333654404,-0.04609665647149086,0,0.05531598627567291,0.004609665833413601,0,0,-0.009219331666827202,0,0.25814127922058105,0.018438663333654404,0,-0.05531598627567291,-0.04609665647149086,0,0.018438663333654404,0.04609665647149086,0,-0.018438663333654404,-0.05531598627567291,0,0.018438663333654404,0.04609665647149086,0,-0.03687732666730881,-0.018438663333654404,0,0,0,0,0,0,0,0.22126394510269165,0.013828996568918228,0,-0.16594795882701874,-0.009219331666827202,0,0,0.03226765990257263,0,-0.03687732666730881,-0.013828996568918228,0,0.018438663333654404,0.04609665647149086,0,-0.018438663333654404,-0.004609665833413601,0,0.018438663333654404,0.013828996568918228,0,0,-0.041486989706754684,0,0.20282529294490814,0.050706323236227036,0,-0.018438663333654404,-0.06914498656988144,0,0,0.03226765990257263,0,-0.018438663333654404,0,0,0,0,0,-0.018438663333654404,-0.004609665833413601,0,0,0.013828996568918228,0,-0.018438663333654404,-0.004609665833413601,0,0,0.05992565304040909,0,-0.22126394510269165,-0.07375465333461761,0,0.03687732666730881,0.041486989706754684,0,-0.03687732666730881,-0.09219331294298172,0,0.16594795882701874,0,0,-0.09219331294298172,-0.03226765990257263,0,0,0.041486989706754684,0,0,0,0,0,0.12907063961029053,0,0,-0.12446097284555435,0,0.14750930666923523,0.027657993137836456,0,-0.11063197255134583,-0.03226765990257263,0,0,0.009219331666827202,0,0,-0.018438663333654404,0,0,0.009219331666827202,0,-0.20282529294490814,-0.018438663333654404,0,0.018438663333654404,0.12446097284555435,0,-0.03687732666730881,-0.10602231323719025,0,0,0.02304832823574543,0,-0.03687732666730881,-0.02304832823574543,0,0,0.009219331666827202,0,-0.03687732666730881,-0.009219331666827202,0,0,0.013828996568918228,0,-0.018438663333654404,-0.004609665833413601,0,0.03687732666730881,0.115241639316082,0,-0.05531598627567291,-0.009219331666827202,0,0.018438663333654404,0.02304832823574543,0,0,-0.009219331666827202,0,0.03687732666730881,0.004609665833413601,0,-0.018438663333654404,-0.027657993137836456,0,0.03687732666730881,0.013828996568918228,0,0,-0.02304832823574543,0,0.018438663333654404,0.004609665833413601,0,-0.03687732666730881,-0.11063197255134583,0,0,0.018438663333654404,0,-0.03687732666730881,-0.018438663333654404,0,0.07375465333461761,0.08758364617824554,0,-0.03687732666730881,-0.04609665647149086,0,0,0.027657993137836456,0,-0.03687732666730881,-0.03226765990257263,0,0,0.018438663333654404,0,0,-0.041486989706754684,0,0.018438663333654404,0.07375465333461761,0,0,-0.05992565304040909,0,0.018438663333654404,0.013828996568918228,0,-0.05531598627567291,0,0,0,0.06453531980514526,0,-0.018438663333654404,-0.115241639316082,0,0.018438663333654404,0.013828996568918228,0,-0.018438663333654404,-0.02304832823574543,0,0.09219331294298172,0.004609665833413601,0,-0.16594795882701874,-0.027657993137836456,0,0.09219331294298172,0,0,0,-0.018438663333654404,0,0,0.05531598627567291,0,-0.018438663333654404,-0.050706323236227036,0,0.018438663333654404,0.018438663333654404,0,-0.018438663333654404,-0.03687732666730881,0,0.018438663333654404,0.013828996568918228,0,-0.03687732666730881,-0.004609665833413601,0,0.018438663333654404,0.02304832823574543,0,-0.03687732666730881,-0.009219331666827202,0,0,0.06914498656988144,0,-0.09219331294298172,-0.004609665833413601,0,0.05531598627567291,0.009219331666827202,0,0,-0.02304832823574543,0,0,0,0,-0.3872119188308716,-0.02304832823574543,0,0.07375465333461761,0.03687732666730881,0,-0.09219331294298172,-0.02304832823574543,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#53248-57343-D000-DFFF-3 -->\nThe most familiar type of graphics display is the ordinary text that\nappears when you turn the machine on.  The area of RAM which is\ndisplayed on the screen is determined by the Video Matrix Base Address\nNybble of the VIC-II Memory Control Register (53272, $D018).  The\naddress of the dot-data which is used to assign a shape to each text\ncharacter based on an 8 by 8 matrix of lit or unlit dots is determined\nby the other half of the Memory Control Register at 53272 ($D018).\nMore information on how the data is used to represent the character\nshapes may be found at the alternate entry for 49152 ($C000), the\nCharacter Generator ROM.\n\nText character graphics may employ one of the two sets of text and\ngraphics characters in the Character Generator ROM, or the user may\nsubstitute a completely different set of graphics or text characters\nin RAM.\n\nNormally, the text graphics screen uses a background color which is\ncommon to all text characters, and that value is stored in Background\nColor Register 0 (53281, $D021).  The color of the frame around the\nscreen is determined by the Border Color Register at 53280 ($D020).\n\nThe color of each character is determined by one nybble of the Color\nRAM which starts at 55296 ($D800).  There are, however, two variations\nwhich alter this scheme somewhat.","sourcePath":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","sourceMtimeMs":1761327822859.5813,"origin":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#53248-57343-D000-DFFF-3"},{"name":"zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","language":"asm","vector":[0,0.004996254108846188,0,0,-0.05495879799127579,0,0.159880131483078,0.004996254108846188,0,-0.01998501643538475,-0.024981271475553513,0,0.079940065741539,0.01998501643538475,0,-0.05995504930615425,-0.049962542951107025,0,0.09992508590221405,0,0,-0.079940065741539,-0.009992508217692375,0,0.01998501643538475,0.004996254108846188,0,0,-0.009992508217692375,0,0.01998501643538475,0.07494381070137024,0,-0.01998501643538475,-0.029977524653077126,0,0,0.014988762326538563,0,0,-0.014988762326538563,0,0.01998501643538475,0.03497377783060074,0,-0.01998501643538475,-0.01998501643538475,0,0.01998501643538475,0.004996254108846188,0,-0.079940065741539,-0.07494381070137024,0,0.05995504930615425,0.029977524653077126,0,0,-0.014988762326538563,0,0.0399700328707695,0.03497377783060074,0,-0.01998501643538475,-0.029977524653077126,0,0.01998501643538475,0.014988762326538563,0,-0.0399700328707695,-0.03497377783060074,0,0.01998501643538475,0.004996254108846188,0,0,-0.024981271475553513,0,0,0.009992508217692375,0,-0.13989511132240295,0,0,0.05995504930615425,0,0,-0.1998501718044281,-0.17986515164375305,0,0.01998501643538475,0,0,-0.01998501643538475,-0.06994755566120148,0,0,0.004996254108846188,0,0,-0.024981271475553513,0,0.319760262966156,0.08493632078170776,0,-0.0399700328707695,-0.014988762326538563,0,0.079940065741539,0.049962542951107025,0,-0.079940065741539,-0.029977524653077126,0,0.01998501643538475,0.049962542951107025,0,-0.05995504930615425,-0.05495879799127579,0,0,0.009992508217692375,0,-0.0399700328707695,-0.009992508217692375,0,0.2797902226448059,0.01998501643538475,0,-0.09992508590221405,-0.029977524653077126,0,0.079940065741539,0,0,-0.01998501643538475,-0.004996254108846188,0,0,0.009992508217692375,0,-0.01998501643538475,-0.014988762326538563,0,0.01998501643538475,0.009992508217692375,0,-0.01998501643538475,-0.049962542951107025,0,0.17986515164375305,0.03497377783060074,0,-0.01998501643538475,-0.004996254108846188,0,0,0.03497377783060074,0,-0.0399700328707695,-0.009992508217692375,0,0,0.009992508217692375,0,-0.01998501643538475,-0.049962542951107025,0,0,0.009992508217692375,0,0,-0.004996254108846188,0,0.01998501643538475,0.014988762326538563,0,-0.09992508590221405,-0.06994755566120148,0,0.01998501643538475,0.03497377783060074,0,-0.01998501643538475,-0.11491384357213974,0,0,0.009992508217692375,0,-0.0399700328707695,-0.014988762326538563,0,0,0,0,0,0,0,0.01998501643538475,0.159880131483078,0,0,-0.09992508590221405,0,0.29977524280548096,0.0399700328707695,0,-0.0399700328707695,-0.07494381070137024,0,0.01998501643538475,0.009992508217692375,0,-0.01998501643538475,-0.029977524653077126,0,0.01998501643538475,0.0399700328707695,0,-0.079940065741539,-0.024981271475553513,0,0.01998501643538475,0.159880131483078,0,-0.05995504930615425,-0.06495130807161331,0,0.1199100986123085,0.06495130807161331,0,-0.01998501643538475,-0.029977524653077126,0,0.01998501643538475,0.004996254108846188,0,-0.1199100986123085,-0.009992508217692375,0,0.01998501643538475,0.014988762326538563,0,-0.01998501643538475,-0.014988762326538563,0,0.01998501643538475,0.08993257582187653,0,-0.05995504930615425,-0.009992508217692375,0,0.0399700328707695,0.004996254108846188,0,0,-0.024981271475553513,0,0,0.004996254108846188,0,-0.079940065741539,-0.029977524653077126,0,0,0.014988762326538563,0,0,0,0,0.01998501643538475,0.01998501643538475,0,-0.09992508590221405,-0.05495879799127579,0,0.01998501643538475,0.014988762326538563,0,-0.01998501643538475,-0.01998501643538475,0,0.0399700328707695,0.004996254108846188,0,0,-0.01998501643538475,0,0,0,0,-0.05995504930615425,-0.03497377783060074,0,0,0.024981271475553513,0,-0.0399700328707695,-0.049962542951107025,0,0.0399700328707695,0.15488387644290924,0,-0.079940065741539,-0.024981271475553513,0,0,0.009992508217692375,0,-0.01998501643538475,-0.009992508217692375,0,0,0.08993257582187653,0,-0.01998501643538475,-0.049962542951107025,0,0,0.029977524653077126,0,-0.0399700328707695,-0.049962542951107025,0,0.01998501643538475,0.06495130807161331,0,-0.01998501643538475,-0.024981271475553513,0,0.05995504930615425,0.009992508217692375,0,0,-0.06994755566120148,0,0,0.079940065741539,0,-0.1199100986123085,-0.03497377783060074,0,0,0.029977524653077126,0,-0.01998501643538475,-0.03497377783060074,0,0.05995504930615425,0.01998501643538475,0,0,-0.004996254108846188,0,0.01998501643538475,0.004996254108846188,0,-0.05995504930615425,-0.04496628791093826,0,0,0.04496628791093826,0,-0.01998501643538475,-0.004996254108846188,0,0,0.009992508217692375,0,0,-0.05995504930615425,0,0,0.009992508217692375,0,-0.319760262966156,-0.014988762326538563,0,0,0.01998501643538475,0,-0.13989511132240295,0,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#FOR-I0-TO-7BITI21NEXT-3 -->\nWhen extended background color mode is activated, however, only the\nfirst 64 shapes found in the table of the screen display codes can be\ndisplayed on the screen.  This group includes the letters of the\nalphabet, numerals, and punctuation marks.  If you try to print on the\nscreen a character having a higher display code, the shape displayed\nwill be from the first group of 64, but that character's background\nwill no longer be determined by the register at 53281 ($D021).\nInstead, it will be determined by one of the other background color\nregisters.\n\nWhen in extended background color mode, characters having display\ncodes 64- 127 will take their background color from register 1, and\nlocation 53282 ($D022).  These characters include various SHIFTed\ncharacters.  Those with codes 128-191 will have their background\ncolors determined by register 2, at 53283 ($D023).  These include the\nreversed numbers, letters, and punctuation marks.  Finally, characters\nwith codes 192-255 will use register 4, at 53284 ($D024).  These are\nthe reversed graphics characters.\n\nLet's try an experiment to see just how this works.  First, we will\nput the codes for four different letters in screen memory:","sourcePath":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","sourceMtimeMs":1761327822859.5813,"origin":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#FOR-I0-TO-7BITI21NEXT-3"},{"name":"zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","language":"asm","vector":[0,0.020291365683078766,0,-0.016233092173933983,-0.020291365683078766,0,0.08116546273231506,0.020291365683078766,0,0,-0.008116546086966991,0,0.08116546273231506,0.04058273136615753,0,-0.0486992783844471,-0.05275755003094673,0,0.11363165080547333,0.0730489194393158,0,0,-0.02434963919222355,0,0,0.012174819596111774,0,0,-0.008116546086966991,0,0.032466184347867966,0.08116546273231506,0,-0.032466184347867966,-0.032466184347867966,0,0,0.004058273043483496,0,-0.016233092173933983,-0.02434963919222355,0,0.032466184347867966,0.008116546086966991,0,-0.016233092173933983,-0.04058273136615753,0,0.06493236869573593,0.008116546086966991,0,-0.06493236869573593,-0.004058273043483496,0,0.1460978388786316,0.016233092173933983,0,-0.016233092173933983,-0.05275755003094673,0,0.032466184347867966,0.0365244597196579,0,-0.016233092173933983,-0.028407912701368332,0,0.032466184347867966,0.012174819596111774,0,0,-0.02434963919222355,0,0,0,0,-0.016233092173933983,-0.020291365683078766,0,0.06493236869573593,0.028407912701368332,0,-0.21103020012378693,-0.004058273043483496,0,0.16233092546463013,0.008116546086966991,0,-0.0973985567688942,-0.11363165080547333,0,0.016233092173933983,0.0486992783844471,0,-0.0486992783844471,-0.0486992783844471,0,0.016233092173933983,0,0,-0.032466184347867966,-0.008116546086966991,0,0.3571280241012573,0.044641003012657166,0,-0.016233092173933983,-0.012174819596111774,0,0.0486992783844471,0.0608740970492363,0,0,-0.032466184347867966,0,0.06493236869573593,0.056815825402736664,0,-0.06493236869573593,0,0,0,0.008116546086966991,0,-0.032466184347867966,-0.004058273043483496,0,0.21103020012378693,0.020291365683078766,0,-0.0973985567688942,-0.020291365683078766,0,0.08116546273231506,0.032466184347867966,0,-0.08116546273231506,-0.012174819596111774,0,0.032466184347867966,0.020291365683078766,0,0,-0.012174819596111774,0,0.0973985567688942,0.0365244597196579,0,-0.016233092173933983,-0.04058273136615753,0,0.16233092546463013,0.0730489194393158,0,0,-0.020291365683078766,0,0,0.020291365683078766,0,-0.016233092173933983,-0.008116546086966991,0,0.06493236869573593,0.016233092173933983,0,0,0,0,0.032466184347867966,0.008116546086966991,0,-0.0973985567688942,-0.028407912701368332,0,0.08116546273231506,0.044641003012657166,0,-0.08116546273231506,-0.11363165080547333,0,0.016233092173933983,0.0852237343788147,0,0,-0.05275755003094673,0,0.12986473739147186,0.008116546086966991,0,-0.17856401205062866,-0.032466184347867966,0,0.032466184347867966,0.020291365683078766,0,-0.06493236869573593,-0.016233092173933983,0,0.016233092173933983,0.17856401205062866,0,0,-0.0608740970492363,0,0.2921956777572632,0.04058273136615753,0,-0.06493236869573593,-0.016233092173933983,0,0.016233092173933983,0.032466184347867966,0,0,-0.0365244597196579,0,0,0.020291365683078766,0,-0.16233092546463013,-0.016233092173933983,0,0.032466184347867966,0.12580646574497223,0,-0.016233092173933983,-0.0608740970492363,0,0,0.06899064034223557,0,-0.0486992783844471,-0.04058273136615753,0,0.0486992783844471,0.016233092173933983,0,-0.0486992783844471,0,0,0.016233092173933983,0.056815825402736664,0,-0.06493236869573593,-0.016233092173933983,0,0,0.08116546273231506,0,-0.016233092173933983,-0.004058273043483496,0,0.016233092173933983,0.008116546086966991,0,-0.016233092173933983,-0.012174819596111774,0,0.032466184347867966,0.0486992783844471,0,-0.032466184347867966,-0.016233092173933983,0,0.06493236869573593,0.05275755003094673,0,-0.06493236869573593,-0.05275755003094673,0,0,0.0486992783844471,0,0,-0.044641003012657166,0,0.016233092173933983,0.016233092173933983,0,-0.0486992783844471,0,0,0.08116546273231506,0.06493236869573593,0,-0.032466184347867966,-0.09334028512239456,0,0,0.032466184347867966,0,0,-0.0852237343788147,0,0.032466184347867966,0.0486992783844471,0,-0.016233092173933983,-0.02434963919222355,0,0.016233092173933983,0.15015611052513123,0,-0.016233092173933983,-0.044641003012657166,0,0.12986473739147186,0.012174819596111774,0,-0.016233092173933983,-0.008116546086966991,0,0.016233092173933983,0.08928200602531433,0,-0.016233092173933983,-0.0852237343788147,0,0.016233092173933983,0.028407912701368332,0,-0.032466184347867966,-0.008116546086966991,0,0,0.016233092173933983,0,-0.0486992783844471,-0.04058273136615753,0,0.016233092173933983,0.02434963919222355,0,0,-0.032466184347867966,0,0,0.0608740970492363,0,0,-0.056815825402736664,0,0.032466184347867966,0.020291365683078766,0,-0.08116546273231506,-0.028407912701368332,0,0.0486992783844471,0.016233092173933983,0,-0.032466184347867966,-0.008116546086966991,0,0.016233092173933983,0.04058273136615753,0,-0.016233092173933983,-0.020291365683078766,0,0,0.0730489194393158,0,-0.032466184347867966,-0.032466184347867966,0,0.0486992783844471,0,0,0,-0.004058273043483496,0,0,0.02434963919222355,0,-0.21103020012378693,-0.02434963919222355,0,0.06493236869573593,0.0486992783844471,0,-0.06493236869573593,-0.04058273136615753,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#POKE-53265PEEK53265-AND-191-9 -->\nBits 0-2:  Fine scroll display horizontally by X dot positions (0-7)\nBit 3:  Select a 38-column or 40-column text display (1=40 columns,\n  0=38 columns)\nBit 4:  Enable multicolor text or multicolor bitmap mode (1=multicolor on,\n  0=multicolor off)\nBit 5:  Video chip reset (0=normal operations, 1=video completely off)\nBits 6-7:  Unused\n\nThis is one of the two important multifunction control registers on\nthe VIC-II chip.  On power-up, it is set to a default value of 8,\nwhich means that the VIC chip Reset line is set for a normal display,\nMulticolor Mode is disabled, a 40-column text display is selected, and\nno horizontal fine-scroll offset is used.\n\nBits 0-2.  The first three bits of this chip control vertical fine\nscrolling of the screen display.  This feature allows you to smoothly\nmove the entire text display back and forth, enabling the display area\nto act as a window, scrolling over a larger text or character graphics\ndisplay.\n\nSince each text character is eight dots wide, moving each character\nover one whole character position (known as coarse scrolling) is a\nrelatively big jump, and the motion looks jerky.  By placing a number\nfrom 1 to 7 into these three bits, you can move the whole screen\ndisplay from one to seven dot spaces to the right.\n\nStepping through values 1 to 7 allows you to smoothly make the\ntransition from having a character appear at one screen column to\nhaving it appear at the next one over.  To demonstrate this, type in\nthe following program, LIST, and RUN it.","sourcePath":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","sourceMtimeMs":1761327822859.5813,"origin":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#POKE-53265PEEK53265-AND-191-9"},{"name":"zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","language":"asm","vector":[0,0.00554018747061491,0,0,-0.06094206124544144,0,0.13296449184417725,0.016620561480522156,0,0,-0.05540187284350395,0,0.08864299952983856,0.016620561480522156,0,-0.1108037456870079,-0.05540187284350395,0,0.02216074988245964,0.049861688166856766,0,-0.04432149976491928,-0.02216074988245964,0,0.02216074988245964,0.01108037494122982,0,-0.02216074988245964,-0.016620561480522156,0,0,0.049861688166856766,0,-0.02216074988245964,0,0,0.02216074988245964,0,0,-0.02216074988245964,-0.02216074988245964,0,0.04432149976491928,0.01108037494122982,0,0,-0.027700936421751976,0,0,0,0,-0.1108037456870079,-0.038781311362981796,0,0.13296449184417725,0,0,-0.04432149976491928,-0.04432149976491928,0,0,0.027700936421751976,0,0,0,0,0.02216074988245964,0.016620561480522156,0,0,-0.016620561480522156,0,0.02216074988245964,0.016620561480522156,0,0,-0.027700936421751976,0,0.04432149976491928,0.01108037494122982,0,-0.15512524545192719,-0.04432149976491928,0,0.1108037456870079,0.02216074988245964,0,-0.1108037456870079,-0.1495850682258606,0,0,0.016620561480522156,0,-0.02216074988245964,-0.04432149976491928,0,0,0.01108037494122982,0,-0.02216074988245964,-0.01108037494122982,0,0.31025049090385437,0.08310281485319138,0,-0.02216074988245964,0,0,0.1108037456870079,0.06648224592208862,0,-0.04432149976491928,-0.06094206124544144,0,0.13296449184417725,0.01108037494122982,0,-0.04432149976491928,-0.03324112296104431,0,0.04432149976491928,0.016620561480522156,0,-0.06648224592208862,-0.03324112296104431,0,0.3324112594127655,0.00554018747061491,0,-0.02216074988245964,-0.01108037494122982,0,0.04432149976491928,0.03324112296104431,0,-0.06648224592208862,-0.016620561480522156,0,0.08864299952983856,0.02216074988245964,0,-0.02216074988245964,-0.00554018747061491,0,0,0.00554018747061491,0,-0.02216074988245964,-0.05540187284350395,0,0.19944675266742706,0.06648224592208862,0,0,-0.03324112296104431,0,0,0.00554018747061491,0,-0.04432149976491928,0,0,0.02216074988245964,0.01108037494122982,0,0,-0.01108037494122982,0,0,0.01108037494122982,0,-0.04432149976491928,-0.016620561480522156,0,0.02216074988245964,0.03324112296104431,0,-0.15512524545192719,-0.07756262272596359,0,0.02216074988245964,0.05540187284350395,0,-0.04432149976491928,-0.06094206124544144,0,0.02216074988245964,0.00554018747061491,0,-0.2216074913740158,-0.02216074988245964,0,0.02216074988245964,0.00554018747061491,0,-0.04432149976491928,-0.03324112296104431,0,0.04432149976491928,0.15512524545192719,0,-0.02216074988245964,-0.08310281485319138,0,0.15512524545192719,0.06094206124544144,0,0,-0.038781311362981796,0,0,0.06648224592208862,0,0,-0.02216074988245964,0,0,0.05540187284350395,0,-0.1108037456870079,-0.03324112296104431,0,0,0.1883663684129715,0,-0.06648224592208862,-0.038781311362981796,0,0,0.027700936421751976,0,-0.04432149976491928,-0.04432149976491928,0,0.02216074988245964,0.049861688166856766,0,0,-0.016620561480522156,0,0.06648224592208862,0,0,-0.02216074988245964,-0.016620561480522156,0,0.02216074988245964,0.10526356101036072,0,-0.02216074988245964,-0.00554018747061491,0,0,0.01108037494122982,0,0,-0.02216074988245964,0,0.08864299952983856,0.01108037494122982,0,-0.02216074988245964,-0.027700936421751976,0,0.02216074988245964,0.03324112296104431,0,-0.04432149976491928,-0.03324112296104431,0,0.04432149976491928,0.01108037494122982,0,-0.04432149976491928,-0.07756262272596359,0,0.06648224592208862,0.016620561480522156,0,0,-0.02216074988245964,0,0.08864299952983856,0.016620561480522156,0,-0.02216074988245964,-0.1108037456870079,0,0,0.02216074988245964,0,-0.04432149976491928,-0.06094206124544144,0,0.02216074988245964,0.049861688166856766,0,-0.08864299952983856,-0.038781311362981796,0,0.02216074988245964,0.07756262272596359,0,0,-0.00554018747061491,0,0.08864299952983856,0,0,-0.02216074988245964,-0.00554018747061491,0,0,0.07756262272596359,0,-0.02216074988245964,-0.06094206124544144,0,0.02216074988245964,0.027700936421751976,0,0,-0.04432149976491928,0,0,0.03324112296104431,0,-0.04432149976491928,-0.03324112296104431,0,0.02216074988245964,0.02216074988245964,0,0,-0.016620561480522156,0,0,0.11634393781423569,0,-0.04432149976491928,-0.016620561480522156,0,0,0.02216074988245964,0,-0.06648224592208862,-0.027700936421751976,0,0.04432149976491928,0.02216074988245964,0,0,-0.00554018747061491,0,0,0.04432149976491928,0,-0.02216074988245964,-0.016620561480522156,0,0.02216074988245964,0.06094206124544144,0,-0.04432149976491928,-0.02216074988245964,0,0.02216074988245964,0.02216074988245964,0,-0.08864299952983856,-0.03324112296104431,0,0,0.038781311362981796,0,-0.2880897521972656,0,0,0.02216074988245964,0.04432149976491928,0,-0.06648224592208862,-0.02216074988245964,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#POKE-53265PEEK53265-AND-191-11 -->\nBit 3.  Bit 3 of this register allows you to cover up the first and\nlast columns of the screen display with the border.  Since the viewers\ncannot see the characters there, they will not be able to see you\ninsert a new character on the end of the line when you do coarse\nscrolling (see explanation of Bits 0-2 above).\n\nSetting this bit to 1 enables the normal 40-column display, while\nresetting it to 0 changes the display to 38 columns.  This is a purely\ncosmetic aid, and it is not necessary to change the screen to the\nsmaller size to use the scrolling feature.\n\nBit 4.  This bit selects multicolor graphics.  The effect of setting\nthis bit to 1 depends on whether or not the bitmap graphics mode is\nalso enabled.\n\nIf you are not in bitmap mode, and you select multicolor text\ncharacter mode by setting this bit to 1, characters with a color\nnybble whose value is less than 8 are displyed normally.  There will\nbe one background color and one foreground color.  But each dot of a\ncharacter with a color nybble whose value is over 7 can have any one\nof four different colors.","sourcePath":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","sourceMtimeMs":1761327822859.5813,"origin":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#POKE-53265PEEK53265-AND-191-11"},{"name":"zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","language":"asm","vector":[0.03323882818222046,0.004154853522777557,0,-0.01661941409111023,-0.04985824227333069,0,0.09971648454666138,0.008309707045555115,0,-0.01661941409111023,-0.04570338875055313,0,0.03323882818222046,0.01661941409111023,0,-0.04985824227333069,-0.06647765636444092,0,0.04985824227333069,0.01661941409111023,0,-0.01661941409111023,-0.04570338875055313,0,0.01661941409111023,0.004154853522777557,0,-0.03323882818222046,-0.01661941409111023,0,0.03323882818222046,0.0872519239783287,0,-0.01661941409111023,-0.01661941409111023,0,0.01661941409111023,0.012464560568332672,0,-0.01661941409111023,-0.01661941409111023,0,0.06647765636444092,0.020774267613887787,0,-0.03323882818222046,-0.04570338875055313,0,0.03323882818222046,0.008309707045555115,0,-0.03323882818222046,-0.008309707045555115,0,0.08309707045555115,0.02908397652208805,0,0,-0.041548535227775574,0,0.04985824227333069,0.037393681704998016,0,-0.01661941409111023,-0.004154853522777557,0,0.06647765636444092,0.020774267613887787,0,0,-0.008309707045555115,0,0.01661941409111023,0.004154853522777557,0,0,-0.01661941409111023,0,0.06647765636444092,0.008309707045555115,0,-0.13295531272888184,-0.020774267613887787,0,0.03323882818222046,0.02908397652208805,0,-0.08309707045555115,-0.18696841597557068,0,0.03323882818222046,0.008309707045555115,0,-0.03323882818222046,-0.04570338875055313,0,0.06647765636444092,0.024929121136665344,0,-0.01661941409111023,-0.020774267613887787,0,0.3323882818222046,0.0581679530441761,0,-0.06647765636444092,-0.008309707045555115,0,0.03323882818222046,0.020774267613887787,0,-0.06647765636444092,-0.04570338875055313,0,0.03323882818222046,0.024929121136665344,0,-0.1163359060883522,-0.020774267613887787,0,0.03323882818222046,0.008309707045555115,0,0,-0.02908397652208805,0,0.31576886773109436,0.020774267613887787,0,-0.04985824227333069,-0.012464560568332672,0,0,0.01661941409111023,0,-0.03323882818222046,-0.024929121136665344,0,0.08309707045555115,0.03323882818222046,0,-0.01661941409111023,-0.024929121136665344,0,0.03323882818222046,0.037393681704998016,0,-0.1163359060883522,-0.020774267613887787,0,0.14957472681999207,0.04570338875055313,0,-0.01661941409111023,-0.008309707045555115,0,0.01661941409111023,0.03323882818222046,0,-0.04985824227333069,-0.008309707045555115,0,0.03323882818222046,0.037393681704998016,0,-0.01661941409111023,0,0,0.01661941409111023,0.01661941409111023,0,-0.04985824227333069,-0.01661941409111023,0,0.01661941409111023,0.04985824227333069,0,-0.09971648454666138,-0.06647765636444092,0,0.03323882818222046,0.024929121136665344,0,-0.08309707045555115,-0.04570338875055313,0,0.03323882818222046,0.01661941409111023,0,-0.2326718121767044,-0.020774267613887787,0,0,0.037393681704998016,0,-0.04985824227333069,-0.01661941409111023,0,0.01661941409111023,0.17034900188446045,0,0,-0.12464561313390732,0,0.18281355500221252,0.01661941409111023,0,-0.03323882818222046,-0.04985824227333069,0,0.01661941409111023,0.024929121136665344,0,0,-0.06232280656695366,0,0.01661941409111023,0.041548535227775574,0,-0.18281355500221252,-0.004154853522777557,0,0,0.1661941409111023,0,-0.03323882818222046,-0.037393681704998016,0,0.04985824227333069,0.012464560568332672,0,-0.03323882818222046,-0.020774267613887787,0,0.01661941409111023,0.04570338875055313,0,-0.01661941409111023,-0.01661941409111023,0,0.01661941409111023,0.024929121136665344,0,0,-0.06232280656695366,0,0.01661941409111023,0.07894221693277359,0,-0.03323882818222046,-0.012464560568332672,0,0,0.024929121136665344,0,-0.01661941409111023,-0.03323882818222046,0,0.08309707045555115,0.024929121136665344,0,-0.01661941409111023,-0.01661941409111023,0,0.03323882818222046,0.02908397652208805,0,-0.04985824227333069,-0.024929121136665344,0,0.03323882818222046,0.020774267613887787,0,-0.04985824227333069,-0.054013099521398544,0,0.03323882818222046,0.03323882818222046,0,0,-0.041548535227775574,0,0.01661941409111023,0.020774267613887787,0,-0.08309707045555115,-0.1163359060883522,0,0,0.01661941409111023,0,-0.04985824227333069,-0.0581679530441761,0,0,0.01661941409111023,0,-0.04985824227333069,-0.020774267613887787,0,0.01661941409111023,0.09971648454666138,0,-0.01661941409111023,-0.024929121136665344,0,0.03323882818222046,0.024929121136665344,0,-0.06647765636444092,-0.004154853522777557,0,0,0.09140677750110626,0,-0.03323882818222046,-0.10802619904279709,0,0.08309707045555115,0.008309707045555115,0,-0.01661941409111023,-0.03323882818222046,0,0.01661941409111023,0.03323882818222046,0,-0.03323882818222046,-0.04570338875055313,0,0.03323882818222046,0.01661941409111023,0,0,-0.008309707045555115,0,0.01661941409111023,0.0872519239783287,0,0,-0.012464560568332672,0,0.03323882818222046,0.008309707045555115,0,-0.06647765636444092,-0.024929121136665344,0,0.06647765636444092,0.020774267613887787,0,0,-0.012464560568332672,0,0.03323882818222046,0.04985824227333069,0,-0.01661941409111023,-0.037393681704998016,0,0,0.054013099521398544,0,-0.01661941409111023,-0.02908397652208805,0,0.01661941409111023,0.020774267613887787,0,-0.03323882818222046,-0.037393681704998016,0,0.01661941409111023,0.024929121136665344,0,-0.36562711000442505,-0.004154853522777557,0,0,0.012464560568332672,0,-0.06647765636444092,-0.054013099521398544,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#BINOT-X-AND-3POKE-BYPEEKBY-AND-NOT-3CABI-OR-COCABI-6 -->\nThe VIC-II chip is capable of generating a maskable request (IRQ) when\ncertain conditions relating to the video display are fulfilled.\nBriefly, the conditions that can cause a VIC-II chip IRQ are:\n\n1.  The line number of the current screen line being scanned by the\nraster is the same as the line number value written to the Raster\nRegister (53266, $D012).\n\n2.  A sprite is positioned at the same location where normal graphics\ndata are being displayed.\n\n3.  Two sprites are positioned so that they are touching.\n\n4.  The light sensor on the light pen has been struck by the raster\nbeam, causing the fire button switch on joystick Control Port #1 to\nclose (pressing the joystick fire button can have the same effect).\n\nWhen one of these conditions is met, the corresponding bit in this\nstatus register is set to 1 and latched.  That means that as long as\nthe corresponding enable bit in the VIC IRQ Mask register is set to 1,\nand IRQ requested will be generated, and any subsequent fulfillment of\nthe same condition will be ignored until the latch is cleared.\n\nThis allows you to preserve multiple interrupt requests if more than\none of the interrupt conditions is met at a time.  In order to keep an\nIRQ source from generating another request after it has been serviced,\nand to enable subsequent interrupt conditions to be detected, the\ninterrupt service routine must write a 1 to the corresponding bit.\nThis will clear the latch for that bit.  The default value written to\nthis register is 15, which clears all interrupts.","sourcePath":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","sourceMtimeMs":1761327822859.5813,"origin":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#BINOT-X-AND-3POKE-BYPEEKBY-AND-NOT-3CABI-OR-COCABI-6"},{"name":"zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","language":"asm","vector":[0,0.007009264547377825,0,-0.0280370581895113,-0.02102779410779476,0,0.04205558821558952,0.0035046322736889124,0,-0.01401852909475565,-0.01401852909475565,0,0.25233352184295654,0.0035046322736889124,0,-0.04205558821558952,-0.02453242614865303,0,0.14018529653549194,0.07359727472066879,0,0,-0.035046324133872986,0,0.01401852909475565,0,0,0,-0.007009264547377825,0,0,0.05957874655723572,0,-0.0280370581895113,-0.007009264547377825,0,0.01401852909475565,0.01401852909475565,0,0,-0.007009264547377825,0,0.0560741163790226,0.007009264547377825,0,-0.0280370581895113,0,0,0.0280370581895113,0,0,-0.0280370581895113,-0.01051389705389738,0,0.0280370581895113,0.0035046322736889124,0,-0.0280370581895113,-0.07710190862417221,0,0,0.04906485229730606,0,-0.01401852909475565,-0.007009264547377825,0,0.04205558821558952,0.0035046322736889124,0,0,-0.01401852909475565,0,0,0.01401852909475565,0,-0.1121482327580452,-0.02102779410779476,0,0,0.01051389705389738,0,-0.04205558821558952,-0.007009264547377825,0,0.0280370581895113,0.0035046322736889124,0,-0.1682223528623581,-0.04906485229730606,0,0.12616676092147827,0.01401852909475565,0,-0.01401852909475565,-0.04205558821558952,0,0.01401852909475565,0,0,0,-0.03154169023036957,0,0.42055585980415344,0.02453242614865303,0,-0.04205558821558952,-0.007009264547377825,0,0.01401852909475565,0.1296713948249817,0,-0.0560741163790226,-0.02102779410779476,0,0.12616676092147827,0.07009264826774597,0,-0.0280370581895113,0,0,0.0280370581895113,0.007009264547377825,0,0,-0.007009264547377825,0,0.15420381724834442,0,0,-0.14018529653549194,-0.01401852909475565,0,0.15420381724834442,0.04205558821558952,0,-0.0280370581895113,0,0,0.01401852909475565,0.0280370581895113,0,0,-0.017523162066936493,0,0.01401852909475565,0.017523162066936493,0,-0.15420381724834442,-0.01401852909475565,0,0.1121482327580452,0.02102779410779476,0,-0.19625940918922424,-0.017523162066936493,0,0,0.0035046322736889124,0,0,-0.007009264547377825,0,0.0280370581895113,0.02102779410779476,0,-0.01401852909475565,0,0,0.0280370581895113,0,0,-0.23831498622894287,-0.0946250706911087,0,0.0280370581895113,0.017523162066936493,0,-0.08411117643117905,-0.02453242614865303,0,0.01401852909475565,0.01401852909475565,0,0,-0.09112043678760529,0,0.01401852909475565,0.07009264826774597,0,-0.09812970459461212,-0.01401852909475565,0,0.01401852909475565,0.01051389705389738,0,-0.14018529653549194,-0.0035046322736889124,0,0,0.21027792990207672,0,0,-0.04205558821558952,0,0.21027792990207672,0.01051389705389738,0,-0.0280370581895113,-0.04556021839380264,0,0,0.06308338046073914,0,0,-0.02102779410779476,0,0,0.02453242614865303,0,0,-0.0035046322736889124,0,0,0.14018529653549194,0,-0.04205558821558952,-0.08060654252767563,0,0.01401852909475565,0.1121482327580452,0,0,-0.01401852909475565,0,0.0560741163790226,0.01051389705389738,0,0,0,0,0.01401852909475565,0.007009264547377825,0,0,-0.08411117643117905,0,0,0.05957874655723572,0,-0.0280370581895113,-0.09812970459461212,0,0.01401852909475565,0.01401852909475565,0,0,-0.007009264547377825,0,0.01401852909475565,0.02102779410779476,0,-0.0280370581895113,-0.01401852909475565,0,0.0280370581895113,0.02102779410779476,0,-0.0280370581895113,-0.12616676092147827,0,0,0.01401852909475565,0,-0.07009264826774597,-0.04556021839380264,0,0.01401852909475565,0.017523162066936493,0,0,0,0,0.01401852909475565,0.007009264547377825,0,0,-0.07710190862417221,0,0,0.007009264547377825,0,0,-0.08060654252767563,0,0,0.007009264547377825,0,-0.0280370581895113,-0.04205558821558952,0,0,0.13668066263198853,0,0,-0.017523162066936493,0,0.14018529653549194,0.0035046322736889124,0,0,0,0,0,0.10513896495103836,0,-0.01401852909475565,-0.01051389705389738,0,0.01401852909475565,0.0035046322736889124,0,0,-0.035046324133872986,0,0.0280370581895113,0.038550954312086105,0,-0.01401852909475565,-0.007009264547377825,0,0.01401852909475565,0.035046324133872986,0,0,0,0,0,0.04556021839380264,0,0,-0.035046324133872986,0,0,0.038550954312086105,0,-0.15420381724834442,-0.02102779410779476,0,0.07009264826774597,0.01051389705389738,0,-0.01401852909475565,0,0,0,0.01051389705389738,0,-0.0280370581895113,-0.05256948247551918,0,0.0280370581895113,0.04205558821558952,0,-0.0280370581895113,-0.06308338046073914,0,0.01401852909475565,0,0,-0.01401852909475565,-0.035046324133872986,0,0,0.01401852909475565,0,-0.08411117643117905,-0.0035046322736889124,0,0.01401852909475565,0.01401852909475565,0,-0.07009264826774597,-0.05957874655723572,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#BINOT-X-AND-3POKE-BYPEEKBY-AND-NOT-3CABI-OR-COCABI-19 -->\nLike multicolor text characters, multicolor sprites all share two\ncolor registers.  While each sprite can display three foreground\ncolors, only one of these colors in unique to that sprite.  The number\nof unique colors may be increated by combining more than one sprite\ninto a single character.\n\n53277         $D01D          XXPAND\nSprite Horizontal Expansion Register\n\nBit 0:  Expand Sprite 0 horizontally (1=double-width sprite, 0=normal\n        width)\nBit 1:  Expand Sprite 1 horizontally (1=double-width sprite, 0=normal\n        width)\nBit 2:  Expand Sprite 2 horizontally (1=double-width sprite, 0=normal\n        width)\nBit 3:  Expand Sprite 3 horizontally (1=double-width sprite, 0=normal\n        width)\nBit 4:  Expand Sprite 4 horizontally (1=double-width sprite, 0=normal\n        width)\nBit 5:  Expand Sprite 5 horizontally (1=double-width sprite, 0=normal\n        width)\nBit 6:  Expand Sprite 6 horizontally (1=double-width sprite, 0=normal\n        width)\nBit 7:  Expand Sprite 7 horizontally (1=double-width sprite, 0=normal\n        width)\n\nThis register can be used to double the width of any sprite.  Setting\nany bit of this register to 1 will cause each dot of the corresponding\nsprite shape to be displayed twice as wide as normal, so that without\nchanging its horizontal resolution, the sprite takes up twice as much\nspace.  The horizontal expansion feature can be used alone, or in\ncombination with the vertical expansion register at 53271 ($D017).\n\nLocation Range: 53278-53279 ($D01E-$D01F)\nSprite Collision Detection Registers","sourcePath":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","sourceMtimeMs":1761327822859.5813,"origin":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#BINOT-X-AND-3POKE-BYPEEKBY-AND-NOT-3CABI-OR-COCABI-19"},{"name":"zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","language":"asm","vector":[0,0,0,0,-0.06276827305555344,0,0.04707620292901993,0.00784603413194418,0,0,-0.039230167865753174,0,0.01569206826388836,0.01569206826388836,0,-0.03138413652777672,-0.0353071503341198,0,0.03138413652777672,0.011769050732254982,0,-0.01569206826388836,-0.023538101464509964,0,0.01569206826388836,0.023538101464509964,0,-0.04707620292901993,-0.050999220460653305,0,0.07846033573150635,0.06276827305555344,0,-0.03138413652777672,-0.08238335698843002,0,0.01569206826388836,0,0,-0.03138413652777672,-0.00784603413194418,0,0.10984446853399277,0.09807541966438293,0,0,-0.03138413652777672,0,0.03138413652777672,0.00784603413194418,0,-0.01569206826388836,-0.00392301706597209,0,0.06276827305555344,0.011769050732254982,0,-0.03138413652777672,-0.011769050732254982,0,0,0.0353071503341198,0,-0.03138413652777672,-0.011769050732254982,0,0.03138413652777672,0.019615083932876587,0,0,-0.00784603413194418,0,0,0.00784603413194418,0,0,-0.00784603413194418,0,0,0.00784603413194418,0,-0.07846033573150635,0,0,0.06276827305555344,0.04315318539738655,0,-0.1412286013364792,-0.2079198956489563,0,0.01569206826388836,0.11769050359725952,0,-0.01569206826388836,-0.023538101464509964,0,0.01569206826388836,0,0,0,-0.01569206826388836,0,0.2981492877006531,0.023538101464509964,0,-0.09415240585803986,-0.00392301706597209,0,0.04707620292901993,0.019615083932876587,0,-0.01569206826388836,-0.01569206826388836,0,0.03138413652777672,0.01569206826388836,0,-0.03138413652777672,-0.01569206826388836,0,0,0.00784603413194418,0,0,-0.0353071503341198,0,0.26676514744758606,0.04315318539738655,0,-0.03138413652777672,-0.01569206826388836,0,0.01569206826388836,0.011769050732254982,0,-0.03138413652777672,-0.027461117133498192,0,0.01569206826388836,0.06669128686189651,0,-0.03138413652777672,-0.011769050732254982,0,0.03138413652777672,0.027461117133498192,0,-0.1883048117160797,-0.03138413652777672,0,0.12553654611110687,0.03138413652777672,0,-0.04707620292901993,-0.019615083932876587,0,0,0.04707620292901993,0,-0.03138413652777672,-0.023538101464509964,0,0,0.019615083932876587,0,0,0,0,0.03138413652777672,0.00392301706597209,0,0,0,0,0,0.01569206826388836,0,-0.1883048117160797,-0.04315318539738655,0,0.03138413652777672,0.039230167865753174,0,-0.06276827305555344,-0.07453732192516327,0,0.03138413652777672,0.011769050732254982,0,-0.1412286013364792,-0.00784603413194418,0,0.01569206826388836,0.011769050732254982,0,0,0,0,0,0.16476671397686005,0,-0.10984446853399277,-0.14515163004398346,0,0.1569206714630127,0.08238335698843002,0,-0.1412286013364792,-0.019615083932876587,0,0,0.01569206826388836,0,0,-0.01569206826388836,0,0.01569206826388836,0.011769050732254982,0,-0.06276827305555344,0,0,0,0.1373055875301361,0,-0.01569206826388836,-0.023538101464509964,0,0.01569206826388836,0.01569206826388836,0,-0.04707620292901993,-0.019615083932876587,0,0.01569206826388836,0.011769050732254982,0,-0.01569206826388836,-0.027461117133498192,0,0.01569206826388836,0.0353071503341198,0,0,-0.10199844092130661,0,0,0.06669128686189651,0,-0.03138413652777672,-0.03138413652777672,0,0,0.027461117133498192,0,0,-0.01569206826388836,0,0.04707620292901993,0.00784603413194418,0,-0.04707620292901993,-0.00392301706597209,0,0,0.03138413652777672,0,0,-0.00784603413194418,0,0,0,0,-0.06276827305555344,-0.10199844092130661,0,0,0.023538101464509964,0,-0.01569206826388836,-0.03138413652777672,0,0.04707620292901993,0.01569206826388836,0,0,-0.0706143006682396,0,0,0.00784603413194418,0,-0.03138413652777672,-0.019615083932876587,0,0,0.01569206826388836,0,-0.04707620292901993,-0.09022938460111618,0,0.01569206826388836,0.08238335698843002,0,0,-0.07453732192516327,0,0.01569206826388836,0.00392301706597209,0,-0.04707620292901993,0,0,0.04707620292901993,0.08238335698843002,0,-0.04707620292901993,-0.054922234266996384,0,0.04707620292901993,0.011769050732254982,0,-0.09415240585803986,-0.011769050732254982,0,0,0.01569206826388836,0,-0.01569206826388836,-0.03138413652777672,0,0.1883048117160797,0.00784603413194418,0,-0.03138413652777672,-0.00784603413194418,0,0.01569206826388836,0.07453732192516327,0,0,-0.00784603413194418,0,0.01569206826388836,0.00392301706597209,0,0,-0.023538101464509964,0,0.06276827305555344,0.00392301706597209,0,-0.01569206826388836,-0.00784603413194418,0,0.03138413652777672,0.03138413652777672,0,-0.01569206826388836,-0.0706143006682396,0,0.01569206826388836,0.03138413652777672,0,0,-0.011769050732254982,0,0.01569206826388836,0,0,0,-0.039230167865753174,0,0.06276827305555344,0,0,-0.39230167865753174,-0.00784603413194418,0,0.23538100719451904,0.03138413652777672,0,-0.04707620292901993,0,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#REGISTER-VALUEATTACK16DECAY-4 -->\nA low-pass filter is available, which suppresses the volume of those\nfrequency components that are above a designated cutoff level.  The\nhigh-pass filter reduces the volume of frequency components that are\nbelow a certain level.  The band-pass filter reduces the volume of\nfrequency components on both sides of the chosen frequency, thereby\nenhancing that frequency.  Finally, the high-pass and low-pass filters\ncan be combined to form a notch reject filter, which reduces the\nfolume of the frequency components nearest the selected frequency.\nThese various filters can dramatically change the quality of the sound\nproduced.\n\nThe first two registers are used to select the filter cutoff\nfrequency.  This is the frequency above or below which any sounds will\nbe made quieter.  The further away from this level any frequency\ncomponents are, the more their output volume will be suppresed (high-\nand low-pass filters reduce the volume of those components by 12 dB\nper octave away from the center frequency, while the band-pass filter\nattenuates them by 6 dB per octave).\n\nThe cutoff frequency has an 11-bit range (which corresponds to the\nnumbers 0 to 2047).  This is made up of a high-byte and three low\nbits.  Therefore, to compute the frequency represented by the value in\nthese registers, you must multiply the value in the high byte by 8,\nand add the value of the low three bits.  The range of cutoff\nfreqnencies represented by these 2048 values stretches from 30 Hz to\nabout 12,000 Hz.  The exact frequency may be calculated with the\nformula:","sourcePath":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","sourceMtimeMs":1761327822859.5813,"origin":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#REGISTER-VALUEATTACK16DECAY-4"},{"name":"zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","language":"asm","vector":[0.10314212739467621,0,0,0,0,0,0,0.012892765924334526,0,0,0,0,0.051571063697338104,0,0,-0.051571063697338104,0,0,0.10314212739467621,0.012892765924334526,0,0,0,0,0,0.012892765924334526,0,0,-0.025785531848669052,0,0,0.03867829591035843,0,-0.051571063697338104,0,0,0,0,0,0,0,0,0,0,0,0,-0.025785531848669052,0,0,0,0,-0.15471318364143372,-0.012892765924334526,0,0.10314212739467621,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.025785531848669052,0,0,0,0,0,0,0,0,0,0,0,-0.03867829591035843,0,0,0,0,-0.051571063697338104,-0.025785531848669052,0,0,0.051571063697338104,0,0,0,0,0.6188527345657349,0,0,0,0,0,0,0.025785531848669052,0,0,-0.025785531848669052,0,0.15471318364143372,0.051571063697338104,0,-0.10314212739467621,0,0,0,0,0,0,0,0,0.20628425478935242,0,0,0,-0.025785531848669052,0,0,0,0,0,0,0,0,0,0,0,-0.012892765924334526,0,0.051571063697338104,0.012892765924334526,0,0,-0.07735659182071686,0,0.41256850957870483,0.051571063697338104,0,0,0,0,0,0,0,0,-0.012892765924334526,0,0,0,0,0,0,0,0,0,0,-0.15471318364143372,0,0,0,0,0,0,0,0,0.051571063697338104,0,0,0,0,0,0,0,0,0,-0.03867829591035843,0,0.051571063697338104,0,0,0,0,0,0.051571063697338104,0.30942636728286743,0,0,-0.012892765924334526,0,0.051571063697338104,0,0,0,-0.012892765924334526,0,0,0.10314212739467621,0,0,-0.051571063697338104,0,0,0,0,0,0,0,0,0.11603488773107529,0,-0.051571063697338104,-0.012892765924334526,0,0,0.025785531848669052,0,0,0,0,0,0,0,0,0,0,0,0.025785531848669052,0,0,-0.012892765924334526,0,0,0.20628425478935242,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.051571063697338104,-0.03867829591035843,0,0,0.025785531848669052,0,0,-0.07735659182071686,0,0,0,0,0,0,0,0,0.025785531848669052,0,0,0,0,0,0,0,0,0,0,0,0.025785531848669052,0,0,0,0,0,0.025785531848669052,0,0,0,0,0,0.025785531848669052,0,0,-0.012892765924334526,0,0,0,0,0,0,0,0,0.15471318364143372,0,-0.051571063697338104,0,0,0.051571063697338104,0,0,0,-0.025785531848669052,0,0,0.03867829591035843,0,0,-0.025785531848669052,0,0,0,0,-0.051571063697338104,0,0,0,0.051571063697338104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.012892765924334526,0,0,-0.025785531848669052,0,0,0.10314212739467621,0,-0.051571063697338104,0,0,0,0,0,0,0,0,0,0,0,-0.051571063697338104,0,0,0,0,0,-0.051571063697338104,-0.03867829591035843,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#Bit-6-RSHIFT-HOME-LIRA -->\nBit 6    /       ^       =       RSHIFT  HOME    ;       *       LIRA\n\nBit 5    ,       @       :       .       -       L       P       +","sourcePath":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","sourceMtimeMs":1761327822859.5813,"origin":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#Bit-6-RSHIFT-HOME-LIRA"},{"name":"zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","language":"asm","vector":[0.01714245416224003,0.01714245416224003,0,-0.01714245416224003,-0.029999295249581337,0,0.08571227639913559,0.029999295249581337,0,-0.01714245416224003,-0.012856841087341309,0,0.06856981664896011,0.029999295249581337,0,-0.06856981664896011,-0.038570523262023926,0,0.06856981664896011,0.004285613540560007,0,-0.06856981664896011,0,0,0.01714245416224003,0.004285613540560007,0,-0.01714245416224003,-0.021428069099783897,0,0.051427364349365234,0.038570523262023926,0,-0.051427364349365234,-0.025713682174682617,0,0.01714245416224003,0.029999295249581337,0,0,-0.012856841087341309,0,0.03428490832448006,0.042856138199567795,0,-0.01714245416224003,-0.042856138199567795,0,0.03428490832448006,0.01714245416224003,0,-0.01714245416224003,-0.021428069099783897,0,0.01714245416224003,0.01714245416224003,0,-0.06856981664896011,0,0,0.01714245416224003,0.06428420543670654,0,-0.051427364349365234,-0.021428069099783897,0,0.03428490832448006,0.01714245416224003,0,-0.051427364349365234,-0.008571227081120014,0,0.051427364349365234,0.029999295249581337,0,0,-0.004285613540560007,0,0,0.012856841087341309,0,-0.17142455279827118,-0.047141749411821365,0,0.11999718099832535,0.012856841087341309,0,-0.13713963329792023,-0.10714033991098404,0,0.01714245416224003,0.012856841087341309,0,-0.051427364349365234,-0.029999295249581337,0,0.01714245416224003,0.008571227081120014,0,-0.01714245416224003,-0.01714245416224003,0,0.49713119864463806,0.042856138199567795,0,-0.051427364349365234,-0.01714245416224003,0,0.01714245416224003,0.038570523262023926,0,-0.01714245416224003,-0.038570523262023926,0,0.03428490832448006,0.038570523262023926,0,-0.10285472869873047,-0.038570523262023926,0,0.01714245416224003,0.021428069099783897,0,0,-0.008571227081120014,0,0.2399943619966507,0.03428490832448006,0,-0.1542820930480957,-0.025713682174682617,0,0.10285472869873047,0.008571227081120014,0,-0.01714245416224003,0,0,0.01714245416224003,0.01714245416224003,0,-0.051427364349365234,-0.012856841087341309,0,0,0.01714245416224003,0,0,-0.008571227081120014,0,0.18856699764728546,0.021428069099783897,0,-0.08571227639913559,-0.038570523262023926,0,0,0.029999295249581337,0,-0.06856981664896011,-0.025713682174682617,0,0,0.021428069099783897,0,-0.03428490832448006,-0.029999295249581337,0,0,0.025713682174682617,0,0,0,0,0.03428490832448006,0.029999295249581337,0,-0.08571227639913559,-0.09428349882364273,0,0.01714245416224003,0.06856981664896011,0,-0.051427364349365234,-0.07285543531179428,0,0.051427364349365234,0.021428069099783897,0,-0.1542820930480957,-0.025713682174682617,0,0.01714245416224003,0.012856841087341309,0,0,-0.025713682174682617,0,0.01714245416224003,0.24856559932231903,0,-0.051427364349365234,-0.07285543531179428,0,0.1542820930480957,0.012856841087341309,0,-0.10285472869873047,-0.01714245416224003,0,0.01714245416224003,0.021428069099783897,0,-0.01714245416224003,-0.0557129792869091,0,0,0.029999295249581337,0,-0.17142455279827118,-0.004285613540560007,0,0.03428490832448006,0.13713963329792023,0,-0.051427364349365234,-0.09428349882364273,0,0.06856981664896011,0.06856981664896011,0,0,-0.025713682174682617,0,0.01714245416224003,0.012856841087341309,0,-0.01714245416224003,-0.029999295249581337,0,0,0.012856841087341309,0,0,-0.012856841087341309,0,0.01714245416224003,0.0985691174864769,0,-0.01714245416224003,-0.042856138199567795,0,0.01714245416224003,0.008571227081120014,0,-0.051427364349365234,-0.038570523262023926,0,0.051427364349365234,0.008571227081120014,0,-0.051427364349365234,-0.021428069099783897,0,0.01714245416224003,0.004285613540560007,0,-0.051427364349365234,-0.01714245416224003,0,0,0.021428069099783897,0,-0.03428490832448006,-0.0557129792869091,0,0,0.01714245416224003,0,-0.03428490832448006,-0.038570523262023926,0,0.01714245416224003,0.038570523262023926,0,-0.01714245416224003,-0.07714104652404785,0,0.01714245416224003,0.008571227081120014,0,-0.01714245416224003,-0.042856138199567795,0,0.051427364349365234,0.038570523262023926,0,0,-0.059998590499162674,0,0.03428490832448006,0.08142665773630142,0,0,-0.06428420543670654,0,0,0.012856841087341309,0,0,-0.012856841087341309,0,0,0.12428279966115952,0,-0.01714245416224003,-0.0985691174864769,0,0,0.021428069099783897,0,0,-0.029999295249581337,0,0.051427364349365234,0.042856138199567795,0,-0.01714245416224003,-0.025713682174682617,0,0.08571227639913559,0.012856841087341309,0,0,-0.008571227081120014,0,0.01714245416224003,0.059998590499162674,0,-0.01714245416224003,-0.038570523262023926,0,0,0.03428490832448006,0,0,-0.012856841087341309,0,0.11999718099832535,0.012856841087341309,0,-0.03428490832448006,-0.038570523262023926,0,0.03428490832448006,0.025713682174682617,0,-0.01714245416224003,-0.025713682174682617,0,0.051427364349365234,0.0557129792869091,0,0,-0.047141749411821365,0,0.01714245416224003,0,0,-0.06856981664896011,-0.03428490832448006,0,0,0,0,-0.18856699764728546,-0.025713682174682617,0,0.01714245416224003,0.008571227081120014,0,-0.03428490832448006,-0.008571227081120014,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#POKE-648AD256-REM-AD-IS-THE-ACTUAL-ADDRESS-OF-SCREEN-MEMORY-9 -->\nThis range of locations is not used directly by the 64's internal\nhardware.  It is, however, accessible via pin 7 of the Expansion Port.\nIt can be used to control cartridges which are connected to this port.\nFor example, the CP/M module uses this space to control which\nmicroprocessor is in control of the system.  The Z-80 microprocessor\nis turned on and off by writing to 56832 ($DE00).\n\nAnother cartridge which uses this space is Simon's BASIC.  This 16K\ncartridge is addressed at memory locations 32768-49151 ($8000-$BFFF),\nwhich means that it overlaps the regular BASIC ROM at 40960-49151\n($A000-$BFFF).  But since it contains additions to BASIC, it must use\nthe BASIC ROM as well.  This problem is solved by copying the\ncartridge at 32768-40959 ($8000-$9FFF) to RAM, and turning the\ncartridge on and off by writing to or reading from location 56832\n($DE00).\n\nLocation Range: 57088-57343 ($DF00-$DFFF)\nCIA #2 Register Images\n\nThis range of locations is not used directly by the 64's internal\nhardward, but is accessible via pin 10 of the Expansion Port.  One\npossible use for this I/O memory that Commodore has mentioned is an\ninexpensive parallel disk drive (which presumable would be much faster\nthan the current serial model).\n\nAlternate 53248-57343 ($D000-$DFFF)\nCharacter Generator ROM","sourcePath":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt","sourceMtimeMs":1761327822859.5813,"origin":"external/zimmers.net/anonftp/pub/cbm/c64/manuals/mapping-c64.txt#POKE-648AD256-REM-AD-IS-THE-ACTUAL-ADDRESS-OF-SCREEN-MEMORY-9"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0.013991146348416805,0,0,-0.02098671905696392,0,0,0.013991146348416805,0,-0.02798229269683361,0,0,0.16789375245571136,0,0,-0.05596458539366722,-0.006995573174208403,0,0.05596458539366722,0.02098671905696392,0,0,-0.013991146348416805,0,0,0.006995573174208403,0,0,-0.006995573174208403,0,0,0.09094244986772537,0,0,0,0,0,0.04197343811392784,0,-0.02798229269683361,-0.07695130258798599,0,0,0.02798229269683361,0,-0.19587604701519012,0,0,0,0,0,0,-0.006995573174208403,0,0.22385834157466888,0.013991146348416805,0,0,-0.02798229269683361,0,0.05596458539366722,0.013991146348416805,0,0,0,0,0.02798229269683361,0,0,0,-0.02798229269683361,0,0,0.006995573174208403,0,0,-0.013991146348416805,0,0.02798229269683361,0.013991146348416805,0,-0.05596458539366722,0,0,0,0,0,-0.02798229269683361,-0.006995573174208403,0,0,0,0,-0.1399114578962326,-0.04896901175379753,0,0,0,0,0,-0.006995573174208403,0,0.22385834157466888,0,0,-0.1399114578962326,-0.02098671905696392,0,0,0.08394687622785568,0,-0.05596458539366722,-0.03497786447405815,0,0.02798229269683361,0.02798229269683361,0,-0.05596458539366722,-0.006995573174208403,0,0.02798229269683361,0,0,0,0,0,0.44771668314933777,0,0,-0.02798229269683361,0,0,0.02798229269683361,0,0,0,-0.02098671905696392,0,0,0,0,-0.02798229269683361,-0.09793802350759506,0,0,0,0,-0.05596458539366722,0,0,0.19587604701519012,0.11192917078733444,0,0,-0.03497786447405815,0,0.05596458539366722,0.04197343811392784,0,-0.1399114578962326,0,0,0.02798229269683361,0.013991146348416805,0,0,0,0,0,0.006995573174208403,0,0,-0.013991146348416805,0,0.05596458539366722,0.02098671905696392,0,-0.02798229269683361,-0.02798229269683361,0,0.05596458539366722,0,0,0,-0.02798229269683361,0,0,0,0,-0.02798229269683361,-0.07695130258798599,0,0.08394687622785568,0.006995573174208403,0,0,0,0,0.02798229269683361,0.11192917078733444,0,-0.02798229269683361,-0.0699557289481163,0,0.3637697994709015,0,0,0,-0.03497786447405815,0,0.16789375245571136,0.013991146348416805,0,-0.02798229269683361,-0.02798229269683361,0,0,0.013991146348416805,0,0,-0.006995573174208403,0,0,0.26583176851272583,0,-0.02798229269683361,-0.02798229269683361,0,0,0.02798229269683361,0,0,0,0,0,0,0,0,-0.013991146348416805,0,0,0,0,0,-0.02798229269683361,0,0.02798229269683361,0.09793802350759506,0,0,-0.006995573174208403,0,0,0.02798229269683361,0,0,-0.11892474442720413,0,0,0.013991146348416805,0,-0.02798229269683361,0,0,0,0.05596458539366722,0,-0.1399114578962326,0,0,0,0.04197343811392784,0,-0.02798229269683361,-0.013991146348416805,0,0,0.03497786447405815,0,-0.02798229269683361,0,0,0,0,0,-0.02798229269683361,-0.013991146348416805,0,0,0.04896901175379753,0,-0.02798229269683361,-0.013991146348416805,0,0,0.013991146348416805,0,0,-0.02098671905696392,0,0,0.18188489973545074,0,0,-0.03497786447405815,0,0,0.08394687622785568,0,-0.02798229269683361,-0.013991146348416805,0,0,0.05596458539366722,0,0,-0.03497786447405815,0,0,0,0,0,-0.02798229269683361,0,0,0.006995573174208403,0,-0.1399114578962326,-0.013991146348416805,0,0.05596458539366722,0.006995573174208403,0,0,0,0,0,0.11192917078733444,0,0,-0.006995573174208403,0,0.02798229269683361,0.02098671905696392,0,-0.05596458539366722,0,0,0.02798229269683361,0,0,0,-0.006995573174208403,0,0,0,0,-0.05596458539366722,-0.02798229269683361,0,0,0.04896901175379753,0,-0.02798229269683361,-0.0699557289481163,0,0.02798229269683361,0.013991146348416805,0,0,-0.04896901175379753,0,0,0.006995573174208403,0,0,-0.013991146348416805,0,0,0,0,-0.02798229269683361,-0.013991146348416805,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-63 -->\n*** round FAC1 and put on stack\n.,AE43 20 1B BC JSR $BC1B       round FAC1\n.,AE46 A5 65    LDA $65         get FAC1 mantissa 4\n.,AE48 48       PHA             save it\n.,AE49 A5 64    LDA $64         get FAC1 mantissa 3\n.,AE4B 48       PHA             save it\n.,AE4C A5 63    LDA $63         get FAC1 mantissa 2\n.,AE4E 48       PHA             save it\n.,AE4F A5 62    LDA $62         get FAC1 mantissa 1\n.,AE51 48       PHA             save it\n.,AE52 A5 61    LDA $61         get FAC1 exponent\n.,AE54 48       PHA             save it\n.,AE55 6C 22 00 JMP ($0022)     return, sort of","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-63"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0,0,0,-0.02089007757604122,0,0,0.04178015515208244,0,0,0,0,0.12534047663211823,0.02089007757604122,0,0,0,0,0.08356031030416489,0.073115274310112,0,0,-0.02089007757604122,0,0.04178015515208244,0.02089007757604122,0,0,0,0,0,0.073115274310112,0,0,-0.02089007757604122,0,0,0.01044503878802061,0,-0.08356031030416489,0,0,0,0,0,0,0,0,0,0.031335119158029556,0,0,-0.01044503878802061,0,0.08356031030416489,0.01044503878802061,0,0,-0.02089007757604122,0,0.04178015515208244,0,0,0,-0.073115274310112,0,0.04178015515208244,0,0,-0.08356031030416489,-0.01044503878802061,0,0,0,0,0,-0.02089007757604122,0,0,0.02089007757604122,0,-0.08356031030416489,0,0,0,0.01044503878802061,0,0,-0.01044503878802061,0,0,0,0,-0.04178015515208244,-0.02089007757604122,0,0.04178015515208244,0,0,0,0,0,0.41780155897140503,0.01044503878802061,0,-0.04178015515208244,0,0,0,0.06267023831605911,0,0,0,0,0.08356031030416489,0.04178015515208244,0,-0.12534047663211823,-0.01044503878802061,0,0,0.031335119158029556,0,-0.04178015515208244,0,0,0.33424124121665955,0.01044503878802061,0,0,0,0,0,0,0,0,-0.05222519487142563,0,0,0,0,0,0,0,0,0.01044503878802061,0,-0.12534047663211823,-0.01044503878802061,0,0.292461097240448,0.04178015515208244,0,0,0,0,0,0.02089007757604122,0,0,0,0,0.08356031030416489,0.031335119158029556,0,-0.04178015515208244,-0.04178015515208244,0,0,0,0,0,-0.01044503878802061,0,0,0,0,0,-0.04178015515208244,0,0.08356031030416489,0,0,0,0,0,0,0,0,0,-0.031335119158029556,0,0.292461097240448,0.031335119158029556,0,0,0,0,0.08356031030416489,0.20890077948570251,0,0,-0.02089007757604122,0,0.20890077948570251,0,0,0,-0.01044503878802061,0,0.04178015515208244,0.04178015515208244,0,0,-0.06267023831605911,0,0,0,0,0,-0.02089007757604122,0,0.04178015515208244,0.19845575094223022,0,-0.04178015515208244,0,0,0.04178015515208244,0.02089007757604122,0,0,0,0,0,0.01044503878802061,0,-0.292461097240448,0,0,0,0,0,-0.04178015515208244,-0.06267023831605911,0,0,0.146230548620224,0,0,-0.02089007757604122,0,0,0,0,0,0,0,0.04178015515208244,0.04178015515208244,0,-0.04178015515208244,-0.02089007757604122,0,0,0.02089007757604122,0,0,0,0,0,0.01044503878802061,0,0,0,0,0.04178015515208244,0.05222519487142563,0,0,-0.02089007757604122,0,0,0,0,0,0,0,0,0.146230548620224,0,-0.04178015515208244,-0.02089007757604122,0,0.04178015515208244,0.04178015515208244,0,0,0,0,0.04178015515208244,0.10445038974285126,0,0,-0.01044503878802061,0,0,0.031335119158029556,0,-0.04178015515208244,0,0,0,0.10445038974285126,0,0,-0.01044503878802061,0,0.04178015515208244,0.02089007757604122,0,-0.04178015515208244,-0.02089007757604122,0,0,0.04178015515208244,0,0,-0.031335119158029556,0,0,0,0,0,-0.15667559206485748,0,0.04178015515208244,0.08356031030416489,0,0,-0.02089007757604122,0,0,0,0,-0.04178015515208244,0,0,0,0,0,0,0,0,0,0.02089007757604122,0,0,-0.05222519487142563,0,0,0.073115274310112,0,-0.04178015515208244,0,0,0.04178015515208244,0,0,0,0,0,0,0.04178015515208244,0,0,-0.01044503878802061,0,0,0,0,-0.04178015515208244,0,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-78 -->\n*** do bad subscript error\n.,B245 A2 12    LDX #$12        error $12, bad subscript error\n.:B247 2C       .BYTE $2C       makes next line BIT $0EA2\n\n*** do illegal quantity error\n.,B248 A2 0E    LDX #$0E        error $0E, illegal quantity error\n.,B24A 4C 37 A4 JMP $A437       do error #X then warm start","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-78"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0.06648454815149307,0,0,-0.06648454815149307,-0.016621137037873268,0,0,0.033242274075746536,0,0,-0.058173976838588715,0,0.033242274075746536,0,0,0,-0.016621137037873268,0,0.13296909630298615,0.024931704625487328,0,0,-0.016621137037873268,0,0.033242274075746536,0.024931704625487328,0,-0.033242274075746536,-0.008310568518936634,0,0,0.09972681850194931,0,0,-0.049863409250974655,0,0,0.016621137037873268,0,0,0,0,0,0,0,-0.033242274075746536,-0.12465852499008179,0,0.033242274075746536,0,0,0,-0.033242274075746536,0,0.13296909630298615,0,0,0,-0.033242274075746536,0,0.06648454815149307,0.016621137037873268,0,-0.09972681850194931,-0.041552841663360596,0,0.06648454815149307,0.024931704625487328,0,-0.06648454815149307,-0.049863409250974655,0,0,0,0,0,-0.058173976838588715,0,0,0,0,-0.033242274075746536,-0.008310568518936634,0,0.033242274075746536,0,0,-0.09972681850194931,-0.008310568518936634,0,0,0,0,-0.033242274075746536,-0.041552841663360596,0,0,0.033242274075746536,0,0,-0.033242274075746536,0,0.29918044805526733,0,0,0,0,0,0,0.016621137037873268,0,-0.033242274075746536,0,0,0.033242274075746536,0.06648454815149307,0,-0.06648454815149307,-0.008310568518936634,0,0.06648454815149307,0.024931704625487328,0,-0.033242274075746536,-0.033242274075746536,0,0.3656649887561798,0,0,-0.033242274075746536,-0.008310568518936634,0,0,0,0,-0.06648454815149307,-0.008310568518936634,0,0.033242274075746536,0.008310568518936634,0,-0.033242274075746536,-0.016621137037873268,0,0.09972681850194931,0.016621137037873268,0,-0.06648454815149307,-0.024931704625487328,0,0.23269590735435486,0.06648454815149307,0,0,0,0,0,0.033242274075746536,0,-0.033242274075746536,-0.08310568332672119,0,0,0.033242274075746536,0,0,-0.041552841663360596,0,0,0,0,0,-0.016621137037873268,0,0,0.008310568518936634,0,0,-0.024931704625487328,0,0.06648454815149307,0.024931704625487328,0,-0.09972681850194931,-0.06648454815149307,0,0,0,0,0,-0.041552841663360596,0,0.09972681850194931,0,0,0,0,0,0.033242274075746536,0.14959022402763367,0,-0.033242274075746536,0,0,0.39890727400779724,0,0,0,-0.033242274075746536,0,0.06648454815149307,0.033242274075746536,0,0,-0.049863409250974655,0,0,0.033242274075746536,0,-0.23269590735435486,-0.016621137037873268,0,0,0.19114306569099426,0,-0.06648454815149307,-0.016621137037873268,0,0,0.033242274075746536,0,0,-0.033242274075746536,0,0,0.024931704625487328,0,-0.09972681850194931,-0.024931704625487328,0,0.033242274075746536,0.049863409250974655,0,-0.06648454815149307,-0.033242274075746536,0,0,0.11634795367717743,0,-0.033242274075746536,0,0,0,0,0,-0.033242274075746536,-0.024931704625487328,0,0,0.008310568518936634,0,-0.033242274075746536,0,0,0,0.033242274075746536,0,-0.033242274075746536,0,0,0,0.016621137037873268,0,0,-0.024931704625487328,0,0,0.049863409250974655,0,0,-0.06648454815149307,0,0,0,0,0,0,0,0,0.049863409250974655,0,-0.033242274075746536,-0.008310568518936634,0,0.033242274075746536,0.024931704625487328,0,-0.06648454815149307,-0.041552841663360596,0,0,0.19945363700389862,0,-0.033242274075746536,-0.008310568518936634,0,0,0.033242274075746536,0,-0.033242274075746536,0,0,0.033242274075746536,0.07479511201381683,0,0,-0.11634795367717743,0,0,0,0,-0.09972681850194931,-0.041552841663360596,0,0,0.008310568518936634,0,0,-0.016621137037873268,0,0,0.016621137037873268,0,-0.13296909630298615,-0.058173976838588715,0,0,0.10803738981485367,0,-0.033242274075746536,-0.041552841663360596,0,0,0,0,-0.06648454815149307,-0.033242274075746536,0,0.033242274075746536,0.008310568518936634,0,-0.033242274075746536,-0.024931704625487328,0,0.033242274075746536,0.024931704625487328,0,-0.06648454815149307,-0.033242274075746536,0,0,0.058173976838588715,0,-0.09972681850194931,-0.016621137037873268,0,0,0,0,0,-0.008310568518936634,0,0,0,0,0,0,0,0,0,0,-0.06648454815149307,0,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-82 -->\n*** check FNx syntax\n.,B3E1 A9 A5    LDA #$A5        set FN token\n.,B3E3 20 FF AE JSR $AEFF       scan for CHR$(A), else do syntax error then warm start\n.,B3E6 09 80    ORA #$80        set FN flag bit\n.,B3E8 85 10    STA $10         save FN name\n.,B3EA 20 92 B0 JSR $B092       search for FN variable\n.,B3ED 85 4E    STA $4E         save function pointer low byte\n.,B3EF 84 4F    STY $4F         save function pointer high byte\n.,B3F1 4C 8D AD JMP $AD8D       check if source is numeric and return, else do type\n                                mismatch","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-82"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0.008832454681396484,0,-0.12365435808897018,0,0,0.10598944872617722,0.008832454681396484,0,-0.01766490936279297,-0.09274076670408249,0,0.01766490936279297,0.004416227340698242,0,-0.14131927490234375,-0.02208113484084606,0,0.03532981872558594,0.02208113484084606,0,0,-0.004416227340698242,0,0,0.07507585734128952,0,-0.07065963745117188,0,0,0,0.11040567606687546,0,0,-0.06624341011047363,0,0,0.004416227340698242,0,-0.08832453936338425,0,0,0.03532981872558594,0.008832454681396484,0,0,-0.08832453936338425,0,0.01766490936279297,0,0,-0.01766490936279297,-0.004416227340698242,0,0.14131927490234375,0,0,0,-0.030913589522242546,0,0,0.06182717904448509,0,0,-0.013248681090772152,0,0.01766490936279297,0.013248681090772152,0,-0.01766490936279297,-0.004416227340698242,0,0,0.02208113484084606,0,0,-0.06182717904448509,0,0,0.008832454681396484,0,-0.05299472436308861,-0.008832454681396484,0,0.14131927490234375,0,0,-0.15898416936397552,-0.008832454681396484,0,0,0.004416227340698242,0,-0.01766490936279297,-0.008832454681396484,0,0.01766490936279297,0.030913589522242546,0,-0.01766490936279297,-0.06182717904448509,0,0.12365435808897018,0.05299472436308861,0,-0.07065963745117188,-0.008832454681396484,0,0,0.008832454681396484,0,0,-0.07065963745117188,0,0.03532981872558594,0.02208113484084606,0,-0.05299472436308861,0,0,0,0,0,0,-0.06182717904448509,0,0.4062928855419159,0,0,-0.08832453936338425,0,0,0,0.004416227340698242,0,0,-0.04416226968169212,0,0.01766490936279297,0.05299472436308861,0,0,0,0,0,0.008832454681396484,0,-0.07065963745117188,-0.03974604234099388,0,0.12365435808897018,0.07065963745117188,0,0,0,0,0,0.004416227340698242,0,-0.12365435808897018,-0.04416226968169212,0,0,0.008832454681396484,0,0,-0.008832454681396484,0,0,0,0,-0.01766490936279297,-0.004416227340698242,0,0,0.02208113484084606,0,0,-0.030913589522242546,0,0.03532981872558594,0.07507585734128952,0,-0.15898416936397552,-0.07949208468198776,0,0.01766490936279297,0,0,-0.08832453936338425,-0.03974604234099388,0,0.05299472436308861,0.013248681090772152,0,-0.01766490936279297,-0.013248681090772152,0,0.01766490936279297,0.06182717904448509,0,0,-0.03532981872558594,0,0.44162270426750183,0,0,-0.01766490936279297,-0.004416227340698242,0,0.01766490936279297,0.01766490936279297,0,0,-0.05741095170378685,0,0,0.026497362181544304,0,0,-0.004416227340698242,0,0,0.2075626701116562,0,-0.01766490936279297,-0.07949208468198776,0,0,0.008832454681396484,0,-0.08832453936338425,0,0,0.07065963745117188,0.008832454681396484,0,-0.01766490936279297,-0.01766490936279297,0,0.01766490936279297,0,0,-0.01766490936279297,-0.03532981872558594,0,0.08832453936338425,0.06182717904448509,0,0,-0.02208113484084606,0,0,0.008832454681396484,0,0,-0.06182717904448509,0,0,0.004416227340698242,0,-0.03532981872558594,-0.004416227340698242,0,0.01766490936279297,0.03532981872558594,0,0,-0.008832454681396484,0,0.12365435808897018,0,0,0,0,0,0,0.02208113484084606,0,0,-0.083908312022686,0,0,0.008832454681396484,0,0,-0.04416226968169212,0,0.01766490936279297,0.026497362181544304,0,0,-0.02208113484084606,0,0,0.04416226968169212,0,-0.10598944872617722,-0.03974604234099388,0,0,0.22081135213375092,0,0,-0.013248681090772152,0,0.01766490936279297,0.013248681090772152,0,0,-0.004416227340698242,0,0.14131927490234375,0.030913589522242546,0,0,-0.01766490936279297,0,0,0,0,-0.12365435808897018,-0.008832454681396484,0,0,0.008832454681396484,0,0,-0.05741095170378685,0,0.01766490936279297,0.03532981872558594,0,-0.1766490787267685,-0.008832454681396484,0,0,0.11040567606687546,0,0,-0.030913589522242546,0,0,0.04416226968169212,0,-0.01766490936279297,0,0,0.08832453936338425,0.004416227340698242,0,-0.01766490936279297,0,0,0.01766490936279297,0,0,0,-0.03532981872558594,0,0,0.03974604234099388,0,-0.12365435808897018,0,0,0.01766490936279297,0.06182717904448509,0,-0.01766490936279297,-0.030913589522242546,0,0,0,0,0,0,0,0,0,0,-0.01766490936279297,-0.004416227340698242,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-84 -->\n*** restore BASIC execute pointer and function variable from stack\n.,B449 68       PLA             pull BASIC execute pointer low byte\n.,B44A 85 7A    STA $7A         save BASIC execute pointer low byte\n.,B44C 68       PLA             pull BASIC execute pointer high byte\n.,B44D 85 7B    STA $7B         save BASIC execute pointer high byte\n                                put execute pointer and variable pointer into function\n.,B44F A0 00    LDY #$00        clear index\n.,B451 68       PLA             pull BASIC execute pointer low byte\n.,B452 91 4E    STA ($4E),Y     save to function\n.,B454 68       PLA             pull BASIC execute pointer high byte\n.,B455 C8       INY             increment index\n.,B456 91 4E    STA ($4E),Y     save to function\n.,B458 68       PLA             pull current variable address low byte\n.,B459 C8       INY             increment index\n.,B45A 91 4E    STA ($4E),Y     save to function\n.,B45C 68       PLA             pull current variable address high byte\n.,B45D C8       INY             increment index\n.,B45E 91 4E    STA ($4E),Y     save to function\n.,B460 68       PLA             pull ??\n.,B461 C8       INY             increment index\n.,B462 91 4E    STA ($4E),Y     save to function\n.,B464 60       RTS","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-84"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0.006942268460988998,0,0,-0.03471134230494499,0,0.027769073843955994,0.006942268460988998,0,0,-0.013884536921977997,0,0.05553814768791199,0,0,0,-0.03471134230494499,0,0.08330722153186798,0.05553814768791199,0,0,-0.013884536921977997,0,0.027769073843955994,0.013884536921977997,0,-0.027769073843955994,-0.04165361076593399,0,0,0.08330722153186798,0,-0.05553814768791199,-0.03471134230494499,0,0.027769073843955994,0.03471134230494499,0,0,0,0,0.027769073843955994,0.013884536921977997,0,-0.19438351690769196,-0.027769073843955994,0,0,0.013884536921977997,0,0,-0.013884536921977997,0,0.11107629537582397,0.027769073843955994,0,-0.08330722153186798,-0.027769073843955994,0,0,0.006942268460988998,0,0,0,0,0.08330722153186798,0.006942268460988998,0,0,-0.04859587922692299,0,0,0.06942268460988998,0,0,-0.027769073843955994,0,0.027769073843955994,0,0,-0.027769073843955994,-0.006942268460988998,0,0,0,0,-0.19438351690769196,-0.013884536921977997,0,0,0.06942268460988998,0,-0.08330722153186798,-0.013884536921977997,0,0,0,0,0,0,0,0.19438351690769196,0.04859587922692299,0,-0.05553814768791199,-0.006942268460988998,0,0.08330722153186798,0.027769073843955994,0,0,0,0,0.027769073843955994,0.04165361076593399,0,-0.11107629537582397,-0.006942268460988998,0,0,0.013884536921977997,0,0,-0.020826805382966995,0,0.3887670338153839,0,0,-0.19438351690769196,-0.03471134230494499,0,0,0.020826805382966995,0,-0.027769073843955994,-0.006942268460988998,0,0,0.013884536921977997,0,-0.027769073843955994,-0.09719175845384598,0,0,0,0,0,-0.013884536921977997,0,0.22215259075164795,0.062480416148900986,0,-0.027769073843955994,-0.04165361076593399,0,0.027769073843955994,0.006942268460988998,0,-0.05553814768791199,-0.013884536921977997,0,0,0.04165361076593399,0,0,0,0,0.027769073843955994,0.013884536921977997,0,-0.027769073843955994,-0.013884536921977997,0,0.027769073843955994,0.013884536921977997,0,-0.08330722153186798,-0.013884536921977997,0,0.027769073843955994,0,0,0,-0.11107629537582397,0,0,0.03471134230494499,0,-0.08330722153186798,-0.05553814768791199,0,0.16661444306373596,0,0,0,0,0,0.05553814768791199,0.09719175845384598,0,-0.16661444306373596,-0.027769073843955994,0,0.3332288861274719,0.07636495679616928,0,-0.027769073843955994,-0.006942268460988998,0,0.08330722153186798,0.013884536921977997,0,0,-0.05553814768791199,0,0,0.006942268460988998,0,0,0,0,0.05553814768791199,0.20826806128025055,0,-0.05553814768791199,-0.09719175845384598,0,0,0.020826805382966995,0,0,-0.013884536921977997,0,0.027769073843955994,0.006942268460988998,0,0,-0.020826805382966995,0,0.027769073843955994,0,0,-0.08330722153186798,-0.013884536921977997,0,0,0.11801856756210327,0,0,-0.013884536921977997,0,0,0.020826805382966995,0,-0.027769073843955994,-0.07636495679616928,0,0,0,0,-0.05553814768791199,0,0,0,0.04165361076593399,0,0,-0.03471134230494499,0,0,0.013884536921977997,0,0,-0.04165361076593399,0,0.13884536921977997,0.03471134230494499,0,-0.027769073843955994,0,0,0,0,0,0,-0.04165361076593399,0,0,0.09024949371814728,0,-0.027769073843955994,-0.006942268460988998,0,0,0.027769073843955994,0,-0.027769073843955994,-0.13190309703350067,0,0,0.16661444306373596,0,-0.027769073843955994,-0.03471134230494499,0,0.027769073843955994,0.04165361076593399,0,-0.027769073843955994,0,0,0,0.04859587922692299,0,0,-0.013884536921977997,0,0,0.04859587922692299,0,-0.05553814768791199,-0.027769073843955994,0,0.027769073843955994,0.006942268460988998,0,0,-0.027769073843955994,0,0.027769073843955994,0.013884536921977997,0,-0.05553814768791199,0,0,0,0.11107629537582397,0,0,-0.09024949371814728,0,0.05553814768791199,0,0,-0.05553814768791199,-0.006942268460988998,0,0,0,0,0,-0.020826805382966995,0,0,0,0,-0.05553814768791199,-0.027769073843955994,0,0.13884536921977997,0.05553814768791199,0,-0.05553814768791199,-0.006942268460988998,0,0,0.006942268460988998,0,0,-0.013884536921977997,0,0,0.06942268460988998,0,0,-0.013884536921977997,0,0.13884536921977997,0.006942268460988998,0,-0.027769073843955994,-0.006942268460988998,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-102 -->\n*** perform subtraction, FAC1 from FAC2\n.,B853 A5 66    LDA $66         get FAC1 sign (b7)\n.,B855 49 FF    EOR #$FF        complement it\n.,B857 85 66    STA $66         save FAC1 sign (b7)\n.,B859 45 6E    EOR $6E         EOR with FAC2 sign (b7)\n.,B85B 85 6F    STA $6F         save sign compare (FAC1 EOR FAC2)\n.,B85D A5 61    LDA $61         get FAC1 exponent\n.,B85F 4C 6A B8 JMP $B86A       add FAC2 to FAC1 and return\n.,B862 20 99 B9 JSR $B999       shift FACX A times right (>8 shifts)\n.,B865 90 3C    BCC $B8A3       go subtract mantissas\n\n*** add (AY) to FAC1\n.,B867 20 8C BA JSR $BA8C       unpack memory (AY) into FAC2","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-102"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0.014897914603352547,0.011173436418175697,0,0,-0.0037244786508381367,0,0.014897914603352547,0.018622392788529396,0,-0.029795829206705093,-0.029795829206705093,0,0.014897914603352547,0,0,-0.029795829206705093,-0.09683644771575928,0,0.014897914603352547,0.022346872836351395,0,-0.014897914603352547,-0.03724478557705879,0,0,0.018622392788529396,0,0,-0.011173436418175697,0,0,0.12290779501199722,0,0,-0.05959165841341019,0,0.014897914603352547,0.026071351021528244,0,-0.014897914603352547,-0.022346872836351395,0,0.014897914603352547,0.007448957301676273,0,-0.05959165841341019,-0.08938749134540558,0,0,0.0037244786508381367,0,0,-0.007448957301676273,0,0.13408122956752777,0.022346872836351395,0,-0.04469374567270279,-0.04096926748752594,0,0.014897914603352547,0,0,0,-0.011173436418175697,0,0.029795829206705093,0.007448957301676273,0,0,-0.05959165841341019,0,0,0.05214270204305649,0,0,-0.007448957301676273,0,0,0.007448957301676273,0,0,-0.0037244786508381367,0,0.014897914603352547,0.007448957301676273,0,-0.20857080817222595,-0.011173436418175697,0,0.014897914603352547,0.07076509296894073,0,-0.14897914230823517,-0.014897914603352547,0,0.014897914603352547,0.011173436418175697,0,-0.014897914603352547,0,0,0.11918331682682037,0.026071351021528244,0,-0.13408122956752777,-0.014897914603352547,0,0.07448957115411758,0.007448957301676273,0,0,-0.014897914603352547,0,0.014897914603352547,0.007448957301676273,0,-0.029795829206705093,-0.007448957301676273,0,0,0.007448957301676273,0,0,-0.011173436418175697,0,0.4171416163444519,0,0,-0.17877498269081116,-0.04469374567270279,0,0,0.011173436418175697,0,-0.014897914603352547,-0.022346872836351395,0,0.014897914603352547,0.011173436418175697,0,-0.014897914603352547,-0.029795829206705093,0,0.029795829206705093,0.007448957301676273,0,-0.014897914603352547,-0.029795829206705093,0,0.16387706995010376,0.06704061478376389,0,-0.014897914603352547,-0.022346872836351395,0,0.07448957115411758,0.011173436418175697,0,-0.029795829206705093,-0.04096926748752594,0,0.014897914603352547,0.014897914603352547,0,0,0,0,0,0.011173436418175697,0,0,-0.011173436418175697,0,0.04469374567270279,0,0,-0.014897914603352547,-0.0037244786508381367,0,0.014897914603352547,0.011173436418175697,0,-0.029795829206705093,-0.13408122956752777,0,0,0.026071351021528244,0,-0.029795829206705093,-0.07821405678987503,0,0.05959165841341019,0.011173436418175697,0,-0.029795829206705093,-0.007448957301676273,0,0.04469374567270279,0.06331613659858704,0,-0.04469374567270279,-0.07076509296894073,0,0.4320395290851593,0.07076509296894073,0,0,-0.0037244786508381367,0,0.10428540408611298,0.011173436418175697,0,-0.08938749134540558,-0.014897914603352547,0,0,0.0037244786508381367,0,-0.029795829206705093,-0.007448957301676273,0,0.014897914603352547,0.2122952938079834,0,-0.029795829206705093,-0.09683644771575928,0,0,0.0037244786508381367,0,-0.07448957115411758,-0.011173436418175697,0,0,0.007448957301676273,0,-0.014897914603352547,-0.007448957301676273,0,0,0.014897914603352547,0,0,-0.007448957301676273,0,0.05959165841341019,0.08566301316022873,0,0,-0.011173436418175697,0,0,0.04096926748752594,0,-0.014897914603352547,-0.029795829206705093,0,0,0.007448957301676273,0,-0.014897914603352547,0,0,0.014897914603352547,0.03352030739188194,0,-0.029795829206705093,-0.011173436418175697,0,0.014897914603352547,0.026071351021528244,0,0,-0.007448957301676273,0,0.07448957115411758,0.014897914603352547,0,0,-0.014897914603352547,0,0,0,0,0,-0.014897914603352547,0,0,0.029795829206705093,0,0,-0.014897914603352547,0,0.029795829206705093,0.026071351021528244,0,-0.04469374567270279,-0.07448957115411758,0,0,0.2197442501783371,0,-0.17877498269081116,-0.03724478557705879,0,0.014897914603352547,0.05586718022823334,0,-0.05959165841341019,-0.04841822385787964,0,0.014897914603352547,0.029795829206705093,0,0,-0.04841822385787964,0,0.029795829206705093,0.026071351021528244,0,-0.11918331682682037,-0.014897914603352547,0,0,0.0037244786508381367,0,0,-0.04469374567270279,0,0.014897914603352547,0,0,-0.16387706995010376,-0.007448957301676273,0,0,0.10428540408611298,0,0,-0.04469374567270279,0,0.04469374567270279,0.029795829206705093,0,-0.04469374567270279,-0.0037244786508381367,0,0,0.0037244786508381367,0,-0.014897914603352547,-0.011173436418175697,0,0.014897914603352547,0.007448957301676273,0,-0.11918331682682037,-0.011173436418175697,0,0.07448957115411758,0.04841822385787964,0,-0.014897914603352547,-0.018622392788529396,0,0.014897914603352547,0.026071351021528244,0,0,-0.007448957301676273,0,0.014897914603352547,0.04096926748752594,0,-0.014897914603352547,0,0,0.13408122956752777,0,0,-0.014897914603352547,0,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-112 -->\n*** unpack memory (AY) into FAC2\n.,BA8C 85 22    STA $22         save pointer low byte\n.,BA8E 84 23    STY $23         save pointer high byte\n.,BA90 A0 04    LDY #$04        5 bytes to get (0-4)\n.,BA92 B1 22    LDA ($22),Y     get mantissa 4\n.,BA94 85 6D    STA $6D         save FAC2 mantissa 4\n.,BA96 88       DEY             decrement index\n.,BA97 B1 22    LDA ($22),Y     get mantissa 3\n.,BA99 85 6C    STA $6C         save FAC2 mantissa 3\n.,BA9B 88       DEY             decrement index\n.,BA9C B1 22    LDA ($22),Y     get mantissa 2\n.,BA9E 85 6B    STA $6B         save FAC2 mantissa 2\n.,BAA0 88       DEY             decrement index\n.,BAA1 B1 22    LDA ($22),Y     get mantissa 1 + sign\n.,BAA3 85 6E    STA $6E         save FAC2 sign (b7)\n.,BAA5 45 66    EOR $66         EOR with FAC1 sign (b7)\n.,BAA7 85 6F    STA $6F         save sign compare (FAC1 EOR FAC2)\n.,BAA9 A5 6E    LDA $6E         recover FAC2 sign (b7)\n.,BAAB 09 80    ORA #$80        set 1xxx xxx (set normal bit)\n.,BAAD 85 6A    STA $6A         save FAC2 mantissa 1\n.,BAAF 88       DEY             decrement index\n.,BAB0 B1 22    LDA ($22),Y     get exponent byte\n.,BAB2 85 69    STA $69         save FAC2 exponent\n.,BAB4 A5 61    LDA $61         get FAC1 exponent\n.,BAB6 60       RTS","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-112"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0.01251792162656784,0.01877688243985176,0,0,0,0,0,0.00938844121992588,0,0,-0.0312948040664196,0,0.02503584325313568,0.0156474020332098,0,-0.02503584325313568,-0.08136649429798126,0,0.02503584325313568,0.04068324714899063,0,0,-0.04381272569298744,0,0.01251792162656784,0.00938844121992588,0,-0.01251792162656784,-0.00625896081328392,0,0,0.10953181236982346,0,0,-0.04381272569298744,0,0,0.0156474020332098,0,-0.01251792162656784,-0.03442428633570671,0,0.0625896081328392,0.01251792162656784,0,-0.16273298859596252,-0.13769714534282684,0,0.01251792162656784,0.0156474020332098,0,0,-0.00312948040664196,0,0.11266129463911057,0.01251792162656784,0,-0.03755376487970352,-0.02816532365977764,0,0.05007168650627136,0.00312948040664196,0,0,-0.00938844121992588,0,0.01251792162656784,0.0156474020332098,0,0,-0.04694220796227455,0,0,0.04068324714899063,0,0,-0.01877688243985176,0,0,0.00625896081328392,0,-0.03755376487970352,-0.00625896081328392,0,0.03755376487970352,0.00938844121992588,0,-0.1877688318490982,-0.0156474020332098,0,0,0.00312948040664196,0,-0.07510752975940704,-0.01877688243985176,0,0,0.00938844121992588,0,-0.03755376487970352,-0.00312948040664196,0,0.10014337301254272,0.00312948040664196,0,-0.10014337301254272,-0.00625896081328392,0,0.01251792162656784,0.01251792162656784,0,-0.01251792162656784,-0.0156474020332098,0,0.03755376487970352,0.01877688243985176,0,-0.02503584325313568,0,0,0.01251792162656784,0.00625896081328392,0,-0.02503584325313568,-0.00938844121992588,0,0.45064517855644226,0.00625896081328392,0,-0.1251792162656784,-0.03755376487970352,0,0.02503584325313568,0,0,0,-0.02503584325313568,0,0.02503584325313568,0.03442428633570671,0,-0.01251792162656784,-0.08136649429798126,0,0.01251792162656784,0.00938844121992588,0,-0.07510752975940704,-0.02190636284649372,0,0.13769714534282684,0.05633064731955528,0,-0.01251792162656784,-0.01877688243985176,0,0.05007168650627136,0.0312948040664196,0,0,-0.0625896081328392,0,0,0.00625896081328392,0,0,0,0,0,0.00312948040664196,0,-0.01251792162656784,-0.00625896081328392,0,0.02503584325313568,0,0,0,-0.01877688243985176,0,0.03755376487970352,0.02503584325313568,0,-0.10014337301254272,-0.11579077690839767,0,0.01251792162656784,0.00938844121992588,0,-0.02503584325313568,-0.04381272569298744,0,0.16273298859596252,0.00312948040664196,0,-0.02503584325313568,-0.01877688243985176,0,0.01251792162656784,0.05320116877555847,0,-0.02503584325313568,-0.05633064731955528,0,0.41309142112731934,0.00625896081328392,0,0,-0.00938844121992588,0,0.0625896081328392,0.02190636284649372,0,-0.13769714534282684,-0.01251792162656784,0,0,0.00625896081328392,0,-0.05007168650627136,-0.01251792162656784,0,0.0625896081328392,0.23158155381679535,0,-0.01251792162656784,-0.06884857267141342,0,0.02503584325313568,0.01877688243985176,0,-0.0625896081328392,0,0,0.01251792162656784,0.0156474020332098,0,-0.03755376487970352,-0.00938844121992588,0,0.01251792162656784,0.00625896081328392,0,-0.01251792162656784,-0.03755376487970352,0,0.08762545138597488,0.06884857267141342,0,-0.02503584325313568,-0.00938844121992588,0,0,0.04068324714899063,0,-0.02503584325313568,-0.04068324714899063,0,0.01251792162656784,0.00312948040664196,0,-0.01251792162656784,0,0,0.01251792162656784,0.02816532365977764,0,-0.05007168650627136,-0.0156474020332098,0,0.01251792162656784,0.02503584325313568,0,-0.01251792162656784,0,0,0.01251792162656784,0.02190636284649372,0,-0.02503584325313568,-0.05007168650627136,0,0,0.00625896081328392,0,-0.01251792162656784,-0.01251792162656784,0,0.02503584325313568,0.08136649429798126,0,0,-0.02190636284649372,0,0,0.0156474020332098,0,-0.01251792162656784,-0.05946012958884239,0,0.02503584325313568,0.20654571056365967,0,-0.1502150595188141,-0.01877688243985176,0,0,0.0312948040664196,0,-0.07510752975940704,-0.07823701202869415,0,0.01251792162656784,0.02503584325313568,0,0,-0.05007168650627136,0,0.01251792162656784,0.03442428633570671,0,-0.08762545138597488,-0.00938844121992588,0,0,0.02190636284649372,0,0,-0.03755376487970352,0,0.02503584325313568,0.00938844121992588,0,-0.2503584325313568,-0.02503584325313568,0,0,0.11892025917768478,0,0,-0.03755376487970352,0,0.01251792162656784,0.05007168650627136,0,-0.02503584325313568,-0.01251792162656784,0,0,0.00625896081328392,0,0,-0.0156474020332098,0,0.02503584325313568,0.00938844121992588,0,-0.08762545138597488,-0.02503584325313568,0,0.03755376487970352,0.04068324714899063,0,-0.02503584325313568,-0.02816532365977764,0,0.01251792162656784,0.01877688243985176,0,0,-0.00625896081328392,0,0.01251792162656784,0.00625896081328392,0,-0.02503584325313568,-0.01251792162656784,0,0,0,0,-0.01251792162656784,-0.00938844121992588,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-116 -->\n*** unpack memory (AY) into FAC1\n.,BBA2 85 22    STA $22         save pointer low byte\n.,BBA4 84 23    STY $23         save pointer high byte\n.,BBA6 A0 04    LDY #$04        5 bytes to do\n.,BBA8 B1 22    LDA ($22),Y     get fifth byte\n.,BBAA 85 65    STA $65         save FAC1 mantissa 4\n.,BBAC 88       DEY             decrement index\n.,BBAD B1 22    LDA ($22),Y     get fourth byte\n.,BBAF 85 64    STA $64         save FAC1 mantissa 3\n.,BBB1 88       DEY             decrement index\n.,BBB2 B1 22    LDA ($22),Y     get third byte\n.,BBB4 85 63    STA $63         save FAC1 mantissa 2\n.,BBB6 88       DEY             decrement index\n.,BBB7 B1 22    LDA ($22),Y     get second byte\n.,BBB9 85 66    STA $66         save FAC1 sign (b7)\n.,BBBB 09 80    ORA #$80        set 1xxx xxxx (add normal bit)\n.,BBBD 85 62    STA $62         save FAC1 mantissa 1\n.,BBBF 88       DEY             decrement index\n.,BBC0 B1 22    LDA ($22),Y     get first byte (exponent)\n.,BBC2 85 61    STA $61         save FAC1 exponent\n.,BBC4 84 70    STY $70         clear FAC1 rounding byte\n.,BBC6 60       RTS\n\n*** pack FAC1 into $5C\n.,BBC7 A2 5C    LDX #$5C        set pointer low byte\n.:BBC9 2C       .BYTE $2C       makes next line BIT $57A2\n\n*** pack FAC1 into $57\n.,BBCA A2 57    LDX #$57        set pointer low byte\n.,BBCC A0 00    LDY #$00        set pointer high byte\n.,BBCE F0 04    BEQ $BBD4       pack FAC1 into (XY) and return, branch always\n\n*** pack FAC1 into variable pointer\n.,BBD0 A6 49    LDX $49         get destination pointer low byte\n.,BBD2 A4 4A    LDY $4A         get destination pointer high byte","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-116"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0.03207578882575035,0,0,0,0,0,0.008018947206437588,0,0,-0.020047368481755257,0,0.016037894412875175,0,0,-0.016037894412875175,-0.09622736275196075,0,0.03207578882575035,0.012028420343995094,0,0,-0.03608526289463043,0,0,0.008018947206437588,0,0,-0.004009473603218794,0,0,0.11627472937107086,0,-0.016037894412875175,-0.04009473696351051,0,0,0.020047368481755257,0,-0.11226525902748108,-0.03608526289463043,0,0.016037894412875175,0.008018947206437588,0,-0.16037894785404205,-0.03207578882575035,0,0.03207578882575035,0,0,-0.016037894412875175,-0.008018947206437588,0,0.03207578882575035,0.008018947206437588,0,-0.016037894412875175,-0.04811368137598038,0,0.016037894412875175,0,0,0,-0.012028420343995094,0,0.016037894412875175,0.008018947206437588,0,0,-0.016037894412875175,0,0.016037894412875175,0.03207578882575035,0,-0.016037894412875175,-0.03207578882575035,0,0,0.008018947206437588,0,-0.04811368137598038,-0.004009473603218794,0,0.03207578882575035,0,0,-0.1283031553030014,-0.02405684068799019,0,0,0.008018947206437588,0,-0.08018947392702103,-0.020047368481755257,0,0.04811368137598038,0.004009473603218794,0,-0.016037894412875175,-0.004009473603218794,0,0.1283031553030014,0.004009473603218794,0,-0.08018947392702103,0,0,0,0.008018947206437588,0,-0.016037894412875175,-0.016037894412875175,0,0.016037894412875175,0.02806631475687027,0,-0.03207578882575035,0,0,0,0,0,0,-0.004009473603218794,0,0.4971747100353241,0,0,-0.11226525902748108,-0.05212315544486046,0,0.016037894412875175,0,0,0,-0.07217052578926086,0,0,0.008018947206437588,0,-0.016037894412875175,-0.08018947392702103,0,0.03207578882575035,0.016037894412875175,0,-0.03207578882575035,-0.02806631475687027,0,0.17641682922840118,0.016037894412875175,0,-0.016037894412875175,-0.012028420343995094,0,0.03207578882575035,0.012028420343995094,0,-0.09622736275196075,-0.012028420343995094,0,0,0.008018947206437588,0,0,0,0,0,0.012028420343995094,0,-0.03207578882575035,-0.020047368481755257,0,0.03207578882575035,0,0,0,-0.02806631475687027,0,0.03207578882575035,0.020047368481755257,0,-0.04811368137598038,-0.07217052578926086,0,0,0.004009473603218794,0,-0.03207578882575035,-0.044104207307100296,0,0.04811368137598038,0.02806631475687027,0,-0.016037894412875175,-0.008018947206437588,0,0.03207578882575035,0.0641515776515007,0,-0.016037894412875175,-0.04009473696351051,0,0.46509891748428345,0.004009473603218794,0,0,-0.012028420343995094,0,0.08018947392702103,0.008018947206437588,0,-0.11226525902748108,-0.016037894412875175,0,0,0,0,-0.03207578882575035,0,0,0,0.25259682536125183,0,-0.03207578882575035,-0.06014210358262062,0,0,0.016037894412875175,0,-0.09622736275196075,0,0,0,0,0,-0.016037894412875175,-0.008018947206437588,0,0,0.016037894412875175,0,0,-0.020047368481755257,0,0.09622736275196075,0.08820841461420059,0,-0.09622736275196075,-0.03608526289463043,0,0,0.020047368481755257,0,-0.016037894412875175,-0.08820841461420059,0,0,0.008018947206437588,0,-0.09622736275196075,-0.004009473603218794,0,0,0.008018947206437588,0,-0.04811368137598038,-0.020047368481755257,0,0.016037894412875175,0.020047368481755257,0,-0.016037894412875175,0,0,0.016037894412875175,0.020047368481755257,0,0,-0.02405684068799019,0,0,0.004009473603218794,0,-0.03207578882575035,-0.020047368481755257,0,0.04811368137598038,0.02405684068799019,0,0,-0.020047368481755257,0,0,0.02405684068799019,0,-0.016037894412875175,-0.04009473696351051,0,0,0.23254945874214172,0,-0.17641682922840118,-0.020047368481755257,0,0,0.05212315544486046,0,-0.0641515776515007,-0.06014210358262062,0,0,0.03207578882575035,0,0,-0.03608526289463043,0,0,0,0,-0.08018947392702103,-0.020047368481755257,0,0,0.004009473603218794,0,-0.016037894412875175,-0.05613262951374054,0,0.016037894412875175,0,0,-0.04811368137598038,-0.008018947206437588,0,0,0.12429367750883102,0,0,-0.02806631475687027,0,0.016037894412875175,0.05212315544486046,0,-0.04811368137598038,-0.04811368137598038,0,0,0,0,-0.016037894412875175,-0.012028420343995094,0,0.016037894412875175,0.008018947206437588,0,-0.03207578882575035,-0.05613262951374054,0,0.016037894412875175,0.044104207307100296,0,-0.016037894412875175,-0.02806631475687027,0,0.016037894412875175,0.016037894412875175,0,0,-0.03207578882575035,0,0,0.008018947206437588,0,0,0,0,0.016037894412875175,0,0,-0.016037894412875175,-0.02405684068799019,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-117 -->\n*** pack FAC1 into (XY)\n.,BBD4 20 1B BC JSR $BC1B       round FAC1\n.,BBD7 86 22    STX $22         save pointer low byte\n.,BBD9 84 23    STY $23         save pointer high byte\n.,BBDB A0 04    LDY #$04        set index\n.,BBDD A5 65    LDA $65         get FAC1 mantissa 4\n.,BBDF 91 22    STA ($22),Y     store in destination\n.,BBE1 88       DEY             decrement index\n.,BBE2 A5 64    LDA $64         get FAC1 mantissa 3\n.,BBE4 91 22    STA ($22),Y     store in destination\n.,BBE6 88       DEY             decrement index\n.,BBE7 A5 63    LDA $63         get FAC1 mantissa 2\n.,BBE9 91 22    STA ($22),Y     store in destination\n.,BBEB 88       DEY             decrement index\n.,BBEC A5 66    LDA $66         get FAC1 sign (b7)\n.,BBEE 09 7F    ORA #$7F        set bits x111 1111\n.,BBF0 25 62    AND $62         AND in FAC1 mantissa 1\n.,BBF2 91 22    STA ($22),Y     store in destination\n.,BBF4 88       DEY             decrement index\n.,BBF5 A5 61    LDA $61         get FAC1 exponent\n.,BBF7 91 22    STA ($22),Y     store in destination\n.,BBF9 84 70    STY $70         clear FAC1 rounding byte\n.,BBFB 60       RTS","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-117"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0.01970132626593113,0,0,-0.009850663132965565,0,0.01970132626593113,0.004925331566482782,0,0,0,0,0.03940265253186226,0,0,-0.0985066294670105,-0.01477599423378706,0,0.01970132626593113,0.02955198846757412,0,0,-0.034477319568395615,0,0,0.01477599423378706,0,0,-0.004925331566482782,0,0,0.09358129650354385,0,-0.03940265253186226,-0.05910397693514824,0,0,0.01970132626593113,0,0,-0.004925331566482782,0,0.01970132626593113,0.01477599423378706,0,-0.2561172544956207,-0.12805862724781036,0,0,0.01477599423378706,0,0,-0.004925331566482782,0,0.07880530506372452,0.02955198846757412,0,-0.05910397693514824,-0.03940265253186226,0,0.01970132626593113,0,0,0,-0.01970132626593113,0,0.03940265253186226,0.01477599423378706,0,0,-0.03940265253186226,0,0,0.024626657366752625,0,-0.01970132626593113,-0.01477599423378706,0,0,0.024626657366752625,0,-0.13790927827358246,-0.01477599423378706,0,0,0,0,-0.03940265253186226,-0.009850663132965565,0,0,0,0,-0.13790927827358246,-0.024626657366752625,0,0,0.009850663132965565,0,0,-0.004925331566482782,0,0.1773119419813156,0.024626657366752625,0,-0.01970132626593113,0,0,0,0.024626657366752625,0,-0.01970132626593113,-0.05910397693514824,0,0.05910397693514824,0.01477599423378706,0,-0.03940265253186226,-0.004925331566482782,0,0,0,0,0,0,0,0.394026517868042,0,0,-0.03940265253186226,-0.01970132626593113,0,0.03940265253186226,0,0,0,-0.004925331566482782,0,0.01970132626593113,0.01477599423378706,0,-0.01970132626593113,-0.12805862724781036,0,0,0,0,-0.03940265253186226,-0.02955198846757412,0,0.13790927827358246,0.03940265253186226,0,-0.05910397693514824,-0.02955198846757412,0,0.0985066294670105,0.01477599423378706,0,-0.01970132626593113,-0.04925331473350525,0,0,0.024626657366752625,0,0,0,0,0.05910397693514824,0.01477599423378706,0,-0.2758185565471649,-0.02955198846757412,0,0.03940265253186226,0,0,0,-0.07880530506372452,0,0.01970132626593113,0,0,0,-0.034477319568395615,0,0,0.009850663132965565,0,-0.05910397693514824,-0.07387997210025787,0,0.11820795387029648,0.004925331566482782,0,-0.0985066294670105,0,0,0.01970132626593113,0.0886559709906578,0,-0.01970132626593113,-0.009850663132965565,0,0.3743251860141754,0,0,0,-0.01970132626593113,0,0.07880530506372452,0.02955198846757412,0,-0.01970132626593113,-0.01970132626593113,0,0.01970132626593113,0.004925331566482782,0,-0.11820795387029648,0,0,0.01970132626593113,0.20686392486095428,0,-0.01970132626593113,-0.0443279854953289,0,0,0.024626657366752625,0,0,0,0,0,0.009850663132965565,0,0,-0.009850663132965565,0,0.05910397693514824,0,0,-0.03940265253186226,-0.02955198846757412,0,0.01970132626593113,0.06895463913679123,0,-0.01970132626593113,-0.02955198846757412,0,0.05910397693514824,0.05417864769697189,0,-0.05910397693514824,-0.07387997210025787,0,0,0,0,-0.03940265253186226,0,0,0,0.04925331473350525,0,-0.01970132626593113,-0.152685284614563,0,0.03940265253186226,0.024626657366752625,0,-0.01970132626593113,0,0,0.05910397693514824,0.01970132626593113,0,0,0,0,0.01970132626593113,0,0,-0.03940265253186226,-0.034477319568395615,0,0.01970132626593113,0.05910397693514824,0,-0.01970132626593113,-0.08373063802719116,0,0,0.009850663132965565,0,0,-0.01970132626593113,0,0,0.1871625930070877,0,0,-0.034477319568395615,0,0,0.03940265253186226,0,-0.01970132626593113,-0.009850663132965565,0,0.01970132626593113,0.05417864769697189,0,0,-0.06402931362390518,0,0,0.009850663132965565,0,-0.11820795387029648,-0.01477599423378706,0,0,0.01477599423378706,0,0,-0.009850663132965565,0,0.01970132626593113,0,0,-0.197013258934021,0,0,0.01970132626593113,0.12805862724781036,0,0,-0.02955198846757412,0,0.05910397693514824,0.01970132626593113,0,-0.07880530506372452,-0.009850663132965565,0,0,0.034477319568395615,0,-0.03940265253186226,-0.034477319568395615,0,0,0,0,-0.05910397693514824,-0.02955198846757412,0,0.03940265253186226,0.034477319568395615,0,-0.01970132626593113,-0.024626657366752625,0,0.01970132626593113,0.0443279854953289,0,0,-0.01477599423378706,0,0,0.02955198846757412,0,0,0,0,0,0.024626657366752625,0,-0.03940265253186226,-0.0886559709906578,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-120 -->\n*** save A as integer byte\n.,BC3C 85 62    STA $62         save FAC1 mantissa 1\n.,BC3E A9 00    LDA #$00        clear A\n.,BC40 85 63    STA $63         clear FAC1 mantissa 2\n.,BC42 A2 88    LDX #$88        set exponent\n                                set exponent = X, clear FAC1 3 and 4 and normalise\n.,BC44 A5 62    LDA $62         get FAC1 mantissa 1\n.,BC46 49 FF    EOR #$FF        complement it\n.,BC48 2A       ROL             sign bit into carry\n                                set exponent = X, clear mantissa 4 and 3 and normalise FAC1\n.,BC49 A9 00    LDA #$00        clear A\n.,BC4B 85 65    STA $65         clear FAC1 mantissa 4\n.,BC4D 85 64    STA $64         clear FAC1 mantissa 3\n                                set exponent = X and normalise FAC1\n.,BC4F 86 61    STX $61         set FAC1 exponent\n.,BC51 85 70    STA $70         clear FAC1 rounding byte\n.,BC53 85 66    STA $66         clear FAC1 sign (b7)\n.,BC55 4C D2 B8 JMP $B8D2       do ABS and normalise FAC1\n\n*** perform ABS()\n.,BC58 46 66    LSR $66         clear FAC1 sign, put zero in b7\n.,BC5A 60       RTS","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-120"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0.01805340126156807,0.02256675250828266,0,-0.01805340126156807,-0.01805340126156807,0,0.03610680252313614,0.013540051877498627,0,-0.01805340126156807,-0.009026700630784035,0,0.01805340126156807,0.009026700630784035,0,-0.01805340126156807,-0.009026700630784035,0,0.03610680252313614,0.03610680252313614,0,-0.01805340126156807,-0.03610680252313614,0,0,0.013540051877498627,0,0,-0.004513350315392017,0,0.03610680252313614,0.09478036314249039,0,0,-0.05867355689406395,0,0,0.02256675250828266,0,0,-0.01805340126156807,0,0.03610680252313614,0.009026700630784035,0,-0.2888544201850891,-0.07672695815563202,0,0,0.013540051877498627,0,0,-0.004513350315392017,0,0.07221360504627228,0.03610680252313614,0,-0.05416020750999451,-0.027080103754997253,0,0.05416020750999451,0.004513350315392017,0,-0.01805340126156807,-0.01805340126156807,0,0.07221360504627228,0,0,0,-0.06318690627813339,0,0,0.02256675250828266,0,0,-0.009026700630784035,0,0,0.009026700630784035,0,-0.03610680252313614,-0.004513350315392017,0,0.05416020750999451,0,0,-0.09026701003313065,-0.02256675250828266,0,0.01805340126156807,0,0,-0.16248062252998352,-0.027080103754997253,0,0,0.009026700630784035,0,-0.05416020750999451,-0.01805340126156807,0,0.1805340200662613,0.031593453139066696,0,-0.05416020750999451,-0.013540051877498627,0,0,0.009026700630784035,0,-0.01805340126156807,-0.013540051877498627,0,0.03610680252313614,0.02256675250828266,0,-0.05416020750999451,-0.01805340126156807,0,0,0,0,-0.01805340126156807,-0.004513350315392017,0,0.4693884551525116,0.01805340126156807,0,-0.09026701003313065,0,0,0.03610680252313614,0,0,0,-0.013540051877498627,0,0,0.02256675250828266,0,-0.03610680252313614,-0.14442721009254456,0,0,0,0,-0.01805340126156807,-0.027080103754997253,0,0.12637381255626678,0.03610680252313614,0,-0.05416020750999451,-0.03610680252313614,0,0.10832041501998901,0.031593453139066696,0,-0.05416020750999451,-0.04513350501656532,0,0,0.04062015563249588,0,0,0,0,0,0.01805340126156807,0,-0.12637381255626678,-0.009026700630784035,0,0.05416020750999451,0,0,0,-0.02256675250828266,0,0.05416020750999451,0.027080103754997253,0,0,-0.07221360504627228,0,0.03610680252313614,0.01805340126156807,0,-0.03610680252313614,-0.0857536569237709,0,0.14442721009254456,0.004513350315392017,0,-0.03610680252313614,-0.027080103754997253,0,0.01805340126156807,0.09026701003313065,0,-0.01805340126156807,-0.027080103754997253,0,0.37912145256996155,0,0,-0.01805340126156807,-0.013540051877498627,0,0.09026701003313065,0.02256675250828266,0,0,-0.031593453139066696,0,0,0.009026700630784035,0,-0.01805340126156807,-0.013540051877498627,0,0.01805340126156807,0.23920758068561554,0,-0.01805340126156807,-0.049646854400634766,0,0,0.027080103754997253,0,-0.03610680252313614,-0.004513350315392017,0,0.01805340126156807,0,0,-0.03610680252313614,-0.01805340126156807,0,0,0.009026700630784035,0,-0.03610680252313614,-0.009026700630784035,0,0.01805340126156807,0.06318690627813339,0,0,-0.027080103754997253,0,0,0.06318690627813339,0,-0.01805340126156807,-0.09929370880126953,0,0,0,0,-0.09026701003313065,0,0,0,0.01805340126156807,0,-0.07221360504627228,-0.07672695815563202,0,0,0.04062015563249588,0,-0.03610680252313614,-0.004513350315392017,0,0.05416020750999451,0.04513350501656532,0,-0.01805340126156807,0,0,0,0.01805340126156807,0,-0.01805340126156807,-0.01805340126156807,0,0.01805340126156807,0.07221360504627228,0,-0.03610680252313614,-0.027080103754997253,0,0,0.02256675250828266,0,-0.01805340126156807,-0.031593453139066696,0,0,0.19407406449317932,0,0,-0.049646854400634766,0,0,0.04513350501656532,0,-0.05416020750999451,-0.013540051877498627,0,0.01805340126156807,0.04513350501656532,0,0,-0.02256675250828266,0,0,0.009026700630784035,0,-0.10832041501998901,-0.013540051877498627,0,0,0.009026700630784035,0,-0.03610680252313614,-0.031593453139066696,0,0.01805340126156807,0.009026700630784035,0,-0.14442721009254456,-0.02256675250828266,0,0.01805340126156807,0.1173471137881279,0,0,-0.04062015563249588,0,0.07221360504627228,0.01805340126156807,0,-0.03610680252313614,0,0,0,0,0,-0.01805340126156807,-0.01805340126156807,0,0,0,0,-0.10832041501998901,-0.049646854400634766,0,0.03610680252313614,0.031593453139066696,0,-0.01805340126156807,-0.049646854400634766,0,0.01805340126156807,0.027080103754997253,0,0,-0.031593453139066696,0,0,0.027080103754997253,0,0,-0.009026700630784035,0,0,0,0,-0.01805340126156807,-0.04062015563249588,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-123 -->\n*** perform INT()\n.,BCCC A5 61    LDA $61         get FAC1 exponent\n.,BCCE C9 A0    CMP #$A0        compare with max int\n.,BCD0 B0 20    BCS $BCF2       exit if >= (allready int, too big for fractional part!)\n.,BCD2 20 9B BC JSR $BC9B       convert FAC1 floating to fixed\n.,BCD5 84 70    STY $70         save FAC1 rounding byte\n.,BCD7 A5 66    LDA $66         get FAC1 sign (b7)\n.,BCD9 84 66    STY $66         save FAC1 sign (b7)\n.,BCDB 49 80    EOR #$80        toggle FAC1 sign\n.,BCDD 2A       ROL             shift into carry\n.,BCDE A9 A0    LDA #$A0        set new exponent\n.,BCE0 85 61    STA $61         save FAC1 exponent\n.,BCE2 A5 65    LDA $65         get FAC1 mantissa 4\n.,BCE4 85 07    STA $07         save FAC1 mantissa 4 for power function\n.,BCE6 4C D2 B8 JMP $B8D2       do ABS and normalise FAC1\n\n*** clear FAC1 and return\n.,BCE9 85 62    STA $62         clear FAC1 mantissa 1\n.,BCEB 85 63    STA $63         clear FAC1 mantissa 2\n.,BCED 85 64    STA $64         clear FAC1 mantissa 3\n.,BCEF 85 65    STA $65         clear FAC1 mantissa 4\n.,BCF1 A8       TAY             clear Y\n.,BCF2 60       RTS","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-123"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0.012589389458298683,0.003147347364574671,0,0,-0.015736736357212067,0,0,0.003147347364574671,0,-0.012589389458298683,-0.006294694729149342,0,0.025178778916597366,0.012589389458298683,0,0,-0.0094420425593853,0,0.36509230732917786,0.0755363404750824,0,-0.012589389458298683,-0.0188840851187706,0,0,0.053504906594753265,0,-0.012589389458298683,-0.0094420425593853,0,0,0.025178778916597366,0,0,0,0,0.025178778916597366,0.003147347364574671,0,0,-0.0094420425593853,0,0.0377681702375412,0,0,-0.0377681702375412,-0.0188840851187706,0,0.012589389458298683,0.0094420425593853,0,-0.025178778916597366,-0.006294694729149342,0,0.23919840157032013,0,0,-0.025178778916597366,-0.0377681702375412,0,0.0377681702375412,0.06294694542884827,0,-0.06294694542884827,-0.012589389458298683,0,0.0377681702375412,0,0,-0.012589389458298683,-0.05979960039258003,0,0.012589389458298683,0.015736736357212067,0,0,-0.0188840851187706,0,0,0.012589389458298683,0,-0.025178778916597366,-0.015736736357212067,0,0.377681702375412,0.012589389458298683,0,-0.06294694542884827,-0.0377681702375412,0,0.025178778916597366,0.012589389458298683,0,-0.025178778916597366,-0.0188840851187706,0,0,0.015736736357212067,0,-0.025178778916597366,-0.003147347364574671,0,0.21401962637901306,0,0,0,-0.0094420425593853,0,0,0.015736736357212067,0,-0.025178778916597366,-0.003147347364574671,0,0.05035755783319473,0.18254615366458893,0,-0.025178778916597366,-0.006294694729149342,0,0,0,0,0,-0.006294694729149342,0,0.415449857711792,0.006294694729149342,0,-0.0377681702375412,-0.003147347364574671,0,0,0.025178778916597366,0,0,-0.006294694729149342,0,0.012589389458298683,0.03147347271442413,0,-0.012589389458298683,-0.022031432017683983,0,0.012589389458298683,0.0094420425593853,0,-0.06294694542884827,-0.012589389458298683,0,0.08812572807073593,0.11959920078516006,0,-0.012589389458298683,-0.015736736357212067,0,0.012589389458298683,0.0188840851187706,0,0,-0.034620821475982666,0,0,0.022031432017683983,0,0,-0.006294694729149342,0,0.012589389458298683,0.006294694729149342,0,0,-0.0188840851187706,0,0.012589389458298683,0.03147347271442413,0,-0.06294694542884827,-0.015736736357212067,0,0.012589389458298683,0.188840851187706,0,-0.025178778916597366,-0.0377681702375412,0,0,0.0188840851187706,0,-0.012589389458298683,-0.022031432017683983,0,0.20143023133277893,0.006294694729149342,0,-0.025178778916597366,-0.0188840851187706,0,0.1133045107126236,0.10700981318950653,0,-0.012589389458298683,-0.012589389458298683,0,0.0755363404750824,0.006294694729149342,0,0,-0.0188840851187706,0,0.012589389458298683,0.0283261276781559,0,-0.012589389458298683,-0.012589389458298683,0,0,0,0,-0.05035755783319473,-0.003147347364574671,0,0.012589389458298683,0.21401962637901306,0,-0.025178778916597366,-0.0188840851187706,0,0,0.09127307683229446,0,0,-0.003147347364574671,0,0,0.006294694729149342,0,-0.025178778916597366,-0.0094420425593853,0,0,0.006294694729149342,0,-0.188840851187706,-0.03147347271442413,0,0.012589389458298683,0.05035755783319473,0,0,-0.006294694729149342,0,0,0.015736736357212067,0,-0.012589389458298683,-0.0094420425593853,0,0.05035755783319473,0.003147347364574671,0,-0.05035755783319473,-0.006294694729149342,0,0,0.0660942941904068,0,-0.025178778916597366,-0.006294694729149342,0,0.0377681702375412,0.015736736357212067,0,-0.012589389458298683,-0.0472102127969265,0,0,0.015736736357212067,0,-0.012589389458298683,-0.015736736357212067,0,0.012589389458298683,0.003147347364574671,0,-0.012589389458298683,-0.006294694729149342,0,0,0.10071511566638947,0,0,-0.0188840851187706,0,0,0.1510726809501648,0,0,-0.022031432017683983,0,0.025178778916597366,0.044062864035367966,0,-0.012589389458298683,-0.006294694729149342,0,0.05035755783319473,0.006294694729149342,0,-0.025178778916597366,-0.012589389458298683,0,0.05035755783319473,0.053504906594753265,0,-0.012589389458298683,-0.025178778916597366,0,0.012589389458298683,0.006294694729149342,0,0,-0.0188840851187706,0,0,0.012589389458298683,0,-0.012589389458298683,-0.006294694729149342,0,0,0,0,-0.012589389458298683,-0.012589389458298683,0,0.012589389458298683,0.103862464427948,0,0,-0.103862464427948,0,0,0.006294694729149342,0,-0.0755363404750824,0,0,0.12589389085769653,0.003147347364574671,0,-0.012589389458298683,-0.0094420425593853,0,0,0.0283261276781559,0,-0.025178778916597366,-0.04091551527380943,0,0.025178778916597366,0.022031432017683983,0,-0.0377681702375412,-0.015736736357212067,0,0.025178778916597366,0.022031432017683983,0,-0.025178778916597366,-0.006294694729149342,0,0,0,0,-0.05035755783319473,-0.006294694729149342,0,0.025178778916597366,0.0094420425593853,0,-0.025178778916597366,-0.006294694729149342,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-128 -->\n*** constants\n.:BF11 80 00                    0.5, first two bytes\n.:BF13 00 00 00                 null return for undefined variables\n.:BF16 FA 0A 1F 00              -100 000 000\n.:BF1A 00 98 96 80               +10 000 000\n.:BF1E FF F0 BD C0                -1 000 000\n.:BF22 00 01 86 A0                  +100 000\n.:BF26 FF FF D8 F0                   -10 000\n.:BF2A 00 00 03 E8                    +1 000\n.:BF2E FF FF FF 9C                     - 100\n.:BF32 00 00 00 0A                       +10\n.:BF36 FF FF FF FF                        -1\n\n*** jiffy counts\n.:BF3A FF DF 0A 80              -2160000    10s hours\n.:BF3E 00 03 4B C0               +216000        hours\n.:BF42 FF FF 73 60                -36000    10s mins\n.:BF46 00 00 0E 10                 +3600        mins\n.:BF4A FF FF FD A8                  -600    10s secs\n.:BF4E 00 00 00 3C                   +60        secs\n\n*** not referenced\n.:BF52 EC                       checksum byte\n\n*** spare bytes, not referenced\n.:BF53 AA AA AA AA AA\n.:BF58 AA AA AA AA AA AA AA AA\n.:BF60 AA AA AA AA AA AA AA AA\n.:BF68 AA AA AA AA AA AA AA AA\n.:BF70 AA\n\n*** perform SQR()\n.,BF71 20 0C BC JSR $BC0C       round and copy FAC1 to FAC2\n.,BF74 A9 11    LDA #$11        set 0.5 pointer low address\n.,BF76 A0 BF    LDY #$BF        set 0.5 pointer high address\n.,BF78 20 A2 BB JSR $BBA2       unpack memory (AY) into FAC1","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-128"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0.029672740027308464,0,-0.016955850645899773,-0.021194813773036003,0,0.016955850645899773,0.016955850645899773,0,0,-0.033911701291799545,0,0.033911701291799545,0.008477925322949886,0,-0.033911701291799545,0,0,0.2373819202184677,0.04662859067320824,0,0,-0.016955850645899773,0,0,0.025433776900172234,0,-0.016955850645899773,0,0,0,0.07206236571073532,0,0,-0.004238962661474943,0,0.05086755380034447,0.012716888450086117,0,-0.016955850645899773,-0.012716888450086117,0,0.016955850645899773,0,0,-0.10173510760068893,-0.07206236571073532,0,0,0.016955850645899773,0,-0.05086755380034447,-0.004238962661474943,0,0.08477925509214401,0.008477925322949886,0,0,-0.08477925509214401,0,0.016955850645899773,0,0,-0.033911701291799545,-0.012716888450086117,0,0.033911701291799545,0.012716888450086117,0,0,-0.033911701291799545,0,0,0.029672740027308464,0,0,-0.008477925322949886,0,0.05086755380034447,0,0,-0.05086755380034447,-0.004238962661474943,0,0.08477925509214401,0.025433776900172234,0,-0.13564680516719818,-0.025433776900172234,0,0.016955850645899773,0.008477925322949886,0,-0.033911701291799545,-0.029672740027308464,0,0,0.008477925322949886,0,-0.016955850645899773,-0.012716888450086117,0,0.27129361033439636,0.012716888450086117,0,-0.016955850645899773,0,0,0.033911701291799545,0.016955850645899773,0,-0.016955850645899773,-0.021194813773036003,0,0.033911701291799545,0.12292992323637009,0,-0.11869096010923386,-0.008477925322949886,0,0.016955850645899773,0.004238962661474943,0,-0.016955850645899773,-0.016955850645899773,0,0.5764989256858826,0,0,-0.11869096010923386,0,0,0.016955850645899773,0.033911701291799545,0,-0.05086755380034447,-0.016955850645899773,0,0,0.012716888450086117,0,-0.05086755380034447,-0.05086755380034447,0,0,0.016955850645899773,0,-0.05086755380034447,-0.025433776900172234,0,0.16955851018428802,0.042389627546072006,0,-0.05086755380034447,-0.004238962661474943,0,0,0.008477925322949886,0,-0.016955850645899773,-0.042389627546072006,0,0,0.025433776900172234,0,-0.016955850645899773,0,0,0,0.004238962661474943,0,-0.016955850645899773,-0.042389627546072006,0,0.08477925509214401,0.025433776900172234,0,-0.016955850645899773,-0.029672740027308464,0,0.033911701291799545,0.04662859067320824,0,-0.06782340258359909,-0.08054029196500778,0,0.033911701291799545,0.021194813773036003,0,0,-0.021194813773036003,0,0.11869096010923386,0,0,0,-0.008477925322949886,0,0.06782340258359909,0.14412473142147064,0,0,-0.016955850645899773,0,0.1526026576757431,0.021194813773036003,0,-0.016955850645899773,-0.016955850645899773,0,0.05086755380034447,0.016955850645899773,0,-0.016955850645899773,-0.06358443945646286,0,0,0.012716888450086117,0,-0.08477925509214401,-0.008477925322949886,0,0,0.29672738909721375,0,-0.016955850645899773,-0.06782340258359909,0,0,0.06782340258359909,0,0,-0.025433776900172234,0,0,0,0,-0.016955850645899773,-0.029672740027308464,0,0.016955850645899773,0,0,-0.033911701291799545,-0.025433776900172234,0,0.016955850645899773,0.0974961444735527,0,0,-0.029672740027308464,0,0,0.004238962661474943,0,-0.016955850645899773,-0.033911701291799545,0,0.033911701291799545,0,0,-0.033911701291799545,-0.021194813773036003,0,0,0.021194813773036003,0,-0.05086755380034447,-0.008477925322949886,0,0.033911701291799545,0.04662859067320824,0,-0.016955850645899773,-0.016955850645899773,0,0.016955850645899773,0.025433776900172234,0,0,-0.033911701291799545,0,0,0.016955850645899773,0,-0.016955850645899773,0,0,0.016955850645899773,0.07206236571073532,0,-0.033911701291799545,-0.012716888450086117,0,0.016955850645899773,0.0551065169274807,0,-0.033911701291799545,-0.033911701291799545,0,0,0.08054029196500778,0,0,-0.016955850645899773,0,0.033911701291799545,0.025433776900172234,0,-0.033911701291799545,-0.012716888450086117,0,0.016955850645899773,0.06782340258359909,0,0,-0.04662859067320824,0,0.06782340258359909,0.008477925322949886,0,0,-0.012716888450086117,0,0,0.008477925322949886,0,-0.016955850645899773,-0.029672740027308464,0,0,0.004238962661474943,0,-0.10173510760068893,-0.012716888450086117,0,0.033911701291799545,0.1526026576757431,0,0,-0.04662859067320824,0,0.016955850645899773,0.012716888450086117,0,-0.16955851018428802,-0.012716888450086117,0,0,0,0,-0.016955850645899773,-0.021194813773036003,0,0.016955850645899773,0.016955850645899773,0,-0.05086755380034447,-0.029672740027308464,0,0.05086755380034447,0.042389627546072006,0,-0.016955850645899773,-0.038150664418935776,0,0,0.016955850645899773,0,0,-0.012716888450086117,0,0.033911701291799545,0.008477925322949886,0,-0.033911701291799545,-0.004238962661474943,0,0.016955850645899773,0,0,-0.033911701291799545,-0.012716888450086117,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-130 -->\n*** exp(n) constant and series\n.:BFBF 81 38 AA 3B 29           1.44269504 = 1/LOG(2)\n.:BFC4 07                       series count\n.:BFC5 71 34 58 3E 56           2.14987637E-5\n.:BFCA 74 16 7E B3 1B           1.43523140E-4\n.:BFCF 77 2F EE E3 85           1.34226348E-3\n.:BFD4 7A 1D 84 1C 2A           9.61401701E-3\n.:BFD9 7C 63 59 58 0A           5.55051269E-2\n.:BFDE 7E 75 FD E7 C6           2.40226385E-1\n.:BFE3 80 31 72 18 10           6.93147186E-1\n.:BFE8 81 00 00 00 00           1.00000000\n\n*** perform EXP()\n.,BFED A9 BF    LDA #$BF        set 1.443 pointer low byte\n.,BFEF A0 BF    LDY #$BF        set 1.443 pointer high byte\n.,BFF1 20 28 BA JSR $BA28       do convert AY, FCA1*(AY)\n.,BFF4 A5 70    LDA $70         get FAC1 rounding byte\n.,BFF6 69 50    ADC #$50        +$50/$100\n.,BFF8 90 03    BCC $BFFD       skip rounding if no carry\n.,BFFA 20 23 BC JSR $BC23       round FAC1 (no check)\n.,BFFD 4C 00 E0 JMP $E000       continue EXP()","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-130"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0.03407125547528267,0.017035627737641335,0,0,-0.051106881350278854,0,0,0.008517813868820667,0,0,-0.04258906841278076,0,0.03407125547528267,0.008517813868820667,0,0,-0.025553440675139427,0,0.13628502190113068,0.051106881350278854,0,0,-0.017035627737641335,0,0,0.008517813868820667,0,0,-0.008517813868820667,0,0,0.09369594603776932,0,0,0,0,0,0.025553440675139427,0,-0.03407125547528267,-0.008517813868820667,0,0,0,0,-0.03407125547528267,-0.10221376270055771,0,0,0,0,0,-0.008517813868820667,0,0,0,0,0,-0.017035627737641335,0,0.03407125547528267,0,0,-0.03407125547528267,-0.04258906841278076,0,0.06814251095056534,0.017035627737641335,0,-0.06814251095056534,-0.06814251095056534,0,0,0.07666032016277313,0,0,-0.017035627737641335,0,0,0.03407125547528267,0,-0.03407125547528267,0,0,0,0,0,-0.17035627365112305,-0.025553440675139427,0,0,0.05962469428777695,0,-0.03407125547528267,-0.017035627737641335,0,0.03407125547528267,0.017035627737641335,0,-0.03407125547528267,0,0,0.2384987771511078,0,0,-0.06814251095056534,0,0,0,0.025553440675139427,0,0,-0.017035627737641335,0,0.03407125547528267,0.06814251095056534,0,-0.06814251095056534,-0.025553440675139427,0,0.03407125547528267,0,0,0,0,0,0.37478378415107727,0,0,-0.06814251095056534,-0.008517813868820667,0,0,0,0,-0.03407125547528267,-0.025553440675139427,0,0,0,0,0,-0.017035627737641335,0,0.06814251095056534,0.008517813868820667,0,-0.10221376270055771,0,0,0.3407125473022461,0.008517813868820667,0,-0.03407125547528267,0,0,0,0.017035627737641335,0,0,-0.051106881350278854,0,0.03407125547528267,0.03407125547528267,0,0,-0.03407125547528267,0,0,0,0,0,-0.008517813868820667,0,0.06814251095056534,0,0,0,-0.025553440675139427,0,0.03407125547528267,0.008517813868820667,0,-0.17035627365112305,-0.1107315719127655,0,0.03407125547528267,0.03407125547528267,0,-0.03407125547528267,-0.025553440675139427,0,0.20442752540111542,0.025553440675139427,0,0,-0.017035627737641335,0,0.03407125547528267,0.1192493885755539,0,-0.03407125547528267,-0.04258906841278076,0,0.30664128065109253,0.017035627737641335,0,0,-0.008517813868820667,0,0.03407125547528267,0.025553440675139427,0,-0.03407125547528267,-0.03407125547528267,0,0,0.017035627737641335,0,-0.13628502190113068,0,0,0,0.19590970873832703,0,-0.03407125547528267,-0.03407125547528267,0,0,0.03407125547528267,0,0,-0.017035627737641335,0,0,0,0,-0.10221376270055771,0,0,0,0.03407125547528267,0,-0.06814251095056534,-0.051106881350278854,0,0.03407125547528267,0.17035627365112305,0,0,-0.025553440675139427,0,0.06814251095056534,0,0,0,-0.008517813868820667,0,0,0.017035627737641335,0,-0.03407125547528267,0,0,0.10221376270055771,0,0,0,0,0,0,0.04258906841278076,0,0,-0.008517813868820667,0,0,0.03407125547528267,0,0,-0.10221376270055771,0,0.03407125547528267,0.017035627737641335,0,-0.06814251095056534,-0.017035627737641335,0,0,0.10221376270055771,0,-0.10221376270055771,-0.008517813868820667,0,0,0.017035627737641335,0,0,-0.05962469428777695,0,0,0.15332064032554626,0,-0.03407125547528267,-0.008517813868820667,0,0,0.025553440675139427,0,-0.03407125547528267,-0.025553440675139427,0,0,0.05962469428777695,0,0,-0.08517813682556152,0,0.03407125547528267,0,0,0,-0.017035627737641335,0,0.03407125547528267,0.008517813868820667,0,0,-0.017035627737641335,0,0,0.008517813868820667,0,-0.13628502190113068,-0.051106881350278854,0,0,0.09369594603776932,0,0,-0.051106881350278854,0,0,0.017035627737641335,0,-0.03407125547528267,-0.008517813868820667,0,0,0.03407125547528267,0,-0.03407125547528267,0,0,0.03407125547528267,0.017035627737641335,0,-0.10221376270055771,-0.04258906841278076,0,0.13628502190113068,0.13628502190113068,0,-0.03407125547528267,-0.008517813868820667,0,0.03407125547528267,0,0,0,0,0,0,0.008517813868820667,0,-0.03407125547528267,0,0,0.06814251095056534,0.017035627737641335,0,-0.03407125547528267,-0.03407125547528267,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-142 -->\n*** set filename\n.,E257 20 9E AD JSR $AD9E       evaluate expression\n.,E25A 20 A3 B6 JSR $B6A3       evaluate string\n.,E25D A6 22    LDX $22         get string pointer low byte\n.,E25F A4 23    LDY $23         get string pointer high byte\n.,E261 4C BD FF JMP $FFBD       set the filename and return\n\n*** perform COS()\n.,E264 A9 E0    LDA #$E0        set pi/2 pointer low byte\n.,E266 A0 E2    LDY #$E2        set pi/2 pointer high byte\n.,E268 20 67 B8 JSR $B867       add (AY) to FAC1","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-142"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0.012814312241971493,0,0,-0.03417149931192398,0,0,0.03417149931192398,0,0,-0.0384429395198822,0,0.01708574965596199,0.008542874827980995,0,-0.08542875200510025,0,0,0.10251449793577194,0.0384429395198822,0,0,-0.012814312241971493,0,0,0.021357188001275063,0,-0.01708574965596199,-0.004271437413990498,0,0,0.11532881110906601,0,0,-0.021357188001275063,0,0.01708574965596199,0.021357188001275063,0,0,-0.03417149931192398,0,0.06834299862384796,0.008542874827980995,0,-0.08542875200510025,-0.10678593814373016,0,0,0.012814312241971493,0,0,-0.012814312241971493,0,0.1537717580795288,0.008542874827980995,0,-0.03417149931192398,-0.021357188001275063,0,0,0.021357188001275063,0,0,-0.04698581248521805,0,0.03417149931192398,0.004271437413990498,0,-0.03417149931192398,-0.06407156586647034,0,0,0.0384429395198822,0,0,-0.01708574965596199,0,0.01708574965596199,0,0,-0.08542875200510025,-0.004271437413990498,0,0.01708574965596199,0,0,-0.22211475670337677,-0.021357188001275063,0,0,0,0,-0.03417149931192398,-0.012814312241971493,0,0.10251449793577194,0,0,-0.05125724896788597,0,0,0.1708575040102005,0.008542874827980995,0,-0.01708574965596199,0,0,0.01708574965596199,0.008542874827980995,0,0,-0.08115731179714203,0,0.01708574965596199,0.05552868917584419,0,-0.03417149931192398,-0.008542874827980995,0,0,0.004271437413990498,0,0,-0.012814312241971493,0,0.39297226071357727,0,0,-0.1708575040102005,0,0,0,0.012814312241971493,0,-0.01708574965596199,-0.004271437413990498,0,0,0.042714376002550125,0,0,-0.042714376002550125,0,0.03417149931192398,0.012814312241971493,0,-0.1708575040102005,-0.008542874827980995,0,0.20502899587154388,0.0768858790397644,0,-0.03417149931192398,-0.021357188001275063,0,0.01708574965596199,0.004271437413990498,0,-0.01708574965596199,-0.0384429395198822,0,0.01708574965596199,0.01708574965596199,0,0,-0.021357188001275063,0,0,0.004271437413990498,0,-0.06834299862384796,-0.008542874827980995,0,0.01708574965596199,0.01708574965596199,0,-0.06834299862384796,-0.059800125658512115,0,0.10251449793577194,0.008542874827980995,0,-0.11960025131702423,-0.13668599724769592,0,0.03417149931192398,0.01708574965596199,0,0,-0.025628624483942986,0,0.11960025131702423,0.05125724896788597,0,-0.01708574965596199,-0.025628624483942986,0,0.01708574965596199,0.08542875200510025,0,-0.01708574965596199,-0.01708574965596199,0,0.3588007390499115,0.008542874827980995,0,-0.01708574965596199,-0.004271437413990498,0,0.08542875200510025,0.008542874827980995,0,-0.10251449793577194,-0.01708574965596199,0,0,0,0,-0.11960025131702423,0,0,0.05125724896788597,0.20075756311416626,0,-0.01708574965596199,-0.10678593814373016,0,0,0.025628624483942986,0,-0.01708574965596199,-0.008542874827980995,0,0.01708574965596199,0,0,-0.05125724896788597,-0.004271437413990498,0,0.01708574965596199,0.01708574965596199,0,-0.05125724896788597,-0.08542875200510025,0,0.01708574965596199,0.10678593814373016,0,0,-0.01708574965596199,0,0,0.025628624483942986,0,-0.01708574965596199,-0.029900062829256058,0,0,0.008542874827980995,0,-0.01708574965596199,0,0,0,0.0384429395198822,0,-0.01708574965596199,-0.042714376002550125,0,0,0.008542874827980995,0,0,-0.03417149931192398,0,0.03417149931192398,0.059800125658512115,0,0,-0.06834299862384796,0,0,0.01708574965596199,0,-0.1537717580795288,0,0,0.01708574965596199,0.06407156586647034,0,-0.03417149931192398,-0.029900062829256058,0,0.01708574965596199,0.012814312241971493,0,-0.01708574965596199,-0.06407156586647034,0,0,0.17940036952495575,0,0,-0.01708574965596199,0,0.01708574965596199,0.06834299862384796,0,-0.01708574965596199,-0.06407156586647034,0,0.03417149931192398,0.042714376002550125,0,0,-0.06407156586647034,0,0.05125724896788597,0.029900062829256058,0,-0.03417149931192398,-0.008542874827980995,0,0,0.004271437413990498,0,-0.01708574965596199,-0.01708574965596199,0,0.01708574965596199,0.008542874827980995,0,-0.1537717580795288,-0.025628624483942986,0,0,0.10678593814373016,0,-0.01708574965596199,-0.06834299862384796,0,0.01708574965596199,0.008542874827980995,0,-0.03417149931192398,-0.004271437413990498,0,0.03417149931192398,0,0,-0.06834299862384796,-0.008542874827980995,0,0,0.008542874827980995,0,-0.10251449793577194,-0.05125724896788597,0,0.06834299862384796,0.05125724896788597,0,-0.03417149931192398,-0.01708574965596199,0,0,0.004271437413990498,0,0,-0.004271437413990498,0,0,0.021357188001275063,0,-0.03417149931192398,0,0,0,0,0,-0.01708574965596199,-0.0939716249704361,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-144 -->\n*** perform TAN()\n.,E2B4 20 CA BB JSR $BBCA       pack FAC1 into $57\n.,E2B7 A9 00    LDA #$00        clear A\n.,E2B9 85 12    STA $12         clear the comparison evaluation flag\n.,E2BB 20 6B E2 JSR $E26B       perform SIN()\n.,E2BE A2 4E    LDX #$4E        set sin(n) pointer low byte\n.,E2C0 A0 00    LDY #$00        set sin(n) pointer high byte\n.,E2C2 20 F6 E0 JSR $E0F6       pack FAC1 into (XY)\n.,E2C5 A9 57    LDA #$57        set n pointer low byte\n.,E2C7 A0 00    LDY #$00        set n pointer high byte\n.,E2C9 20 A2 BB JSR $BBA2       unpack memory (AY) into FAC1\n.,E2CC A9 00    LDA #$00        clear byte\n.,E2CE 85 66    STA $66         clear FAC1 sign (b7)\n.,E2D0 A5 12    LDA $12         get the comparison evaluation flag\n.,E2D2 20 DC E2 JSR $E2DC       save flag and go do series evaluation\n.,E2D5 A9 4E    LDA #$4E        set sin(n) pointer low byte\n.,E2D7 A0 00    LDY #$00        set sin(n) pointer high byte\n.,E2D9 4C 0F BB JMP $BB0F       convert AY and do (AY)/FAC1\n\n*** save comparison flag and do series evaluation\n.,E2DC 48       PHA             save comparison flag\n.,E2DD 4C 9D E2 JMP $E29D       add 0.25, ^2 then series evaluation","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-144"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0.01863066479563713,0,0,-0.01863066479563713,0,0,0.027945999056100845,0,-0.03726132959127426,-0.009315332397818565,0,0.03726132959127426,0.009315332397818565,0,0,0,0,0.14904531836509705,0.03726132959127426,0,0,0,0,0.03726132959127426,0.01863066479563713,0,0,-0.01863066479563713,0,0,0.08383799344301224,0,-0.03726132959127426,0,0,0,0.05589199811220169,0,0,-0.027945999056100845,0,0.03726132959127426,0.03726132959127426,0,0,-0.01863066479563713,0,0,0.009315332397818565,0,0,-0.027945999056100845,0,0,0.009315332397818565,0,-0.03726132959127426,-0.027945999056100845,0,0,0.05589199811220169,0,0,-0.01863066479563713,0,0.07452265918254852,0,0,0,-0.0652073323726654,0,0.03726132959127426,0,0,0,-0.01863066479563713,0,0,0,0,-0.07452265918254852,-0.046576663851737976,0,0,0,0,0,-0.08383799344301224,0,0,0.009315332397818565,0,-0.03726132959127426,-0.01863066479563713,0,0,0,0,-0.11178399622440338,0,0,0.2980906367301941,0,0,-0.07452265918254852,-0.046576663851737976,0,0,0.027945999056100845,0,0,0,0,0.03726132959127426,0.08383799344301224,0,-0.11178399622440338,-0.009315332397818565,0,0,0.027945999056100845,0,0,0,0,0.4471359848976135,0,0,0,-0.01863066479563713,0,0.03726132959127426,0,0,0,0,0,0.03726132959127426,0.01863066479563713,0,-0.03726132959127426,-0.009315332397818565,0,0,0,0,-0.03726132959127426,0,0,0.2608293294906616,0.009315332397818565,0,0,-0.01863066479563713,0,0,0.01863066479563713,0,-0.11178399622440338,0,0,0,0.03726132959127426,0,0,-0.009315332397818565,0,0,0.01863066479563713,0,-0.03726132959127426,-0.009315332397818565,0,0,0.027945999056100845,0,0,-0.03726132959127426,0,0.03726132959127426,0,0,-0.03726132959127426,-0.027945999056100845,0,0.03726132959127426,0,0,0,-0.027945999056100845,0,0.14904531836509705,0,0,0,-0.07452265918254852,0,0.07452265918254852,0.14904531836509705,0,0,-0.07452265918254852,0,0.33535197377204895,0,0,0,-0.009315332397818565,0,0.14904531836509705,0.01863066479563713,0,-0.11178399622440338,-0.05589199811220169,0,0,0,0,-0.07452265918254852,-0.009315332397818565,0,0.03726132959127426,0.23288331925868988,0,-0.03726132959127426,0,0,0.03726132959127426,0.05589199811220169,0,-0.03726132959127426,0,0,0,0.027945999056100845,0,-0.07452265918254852,-0.01863066479563713,0,0,0,0,-0.03726132959127426,-0.027945999056100845,0,0,0.1304146647453308,0,0,0,0,0,0.009315332397818565,0,-0.03726132959127426,-0.05589199811220169,0,0,0,0,-0.03726132959127426,0,0,0.03726132959127426,0,0,0,-0.027945999056100845,0,0,0,0,0,0,0,0,0.03726132959127426,0,-0.11178399622440338,-0.01863066479563713,0,0.03726132959127426,0.027945999056100845,0,0,0,0,0.03726132959127426,0.07452265918254852,0,-0.03726132959127426,-0.01863066479563713,0,0.03726132959127426,0.03726132959127426,0,0,0,0,0,0.16767598688602448,0,0,-0.009315332397818565,0,0,0.07452265918254852,0,0,-0.08383799344301224,0,0,0.07452265918254852,0,-0.03726132959127426,-0.05589199811220169,0,0,0.01863066479563713,0,0,-0.01863066479563713,0,0.03726132959127426,0.027945999056100845,0,0,-0.046576663851737976,0,0.07452265918254852,0,0,0,-0.03726132959127426,0,0,0.11178399622440338,0,-0.03726132959127426,-0.01863066479563713,0,0,0.009315332397818565,0,-0.03726132959127426,0,0,0.11178399622440338,0.009315332397818565,0,0,-0.027945999056100845,0,0,0,0,-0.11178399622440338,-0.027945999056100845,0,0,0.08383799344301224,0,-0.03726132959127426,0,0,0,0,0,-0.07452265918254852,-0.027945999056100845,0,0,0,0,-0.14904531836509705,-0.05589199811220169,0,0,0.01863066479563713,0,-0.03726132959127426,-0.009315332397818565,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-148 -->\n*** BASIC cold start entry point\n.,E394 20 53 E4 JSR $E453       initialise the BASIC vector table\n.,E397 20 BF E3 JSR $E3BF       initialise the BASIC RAM locations\n.,E39A 20 22 E4 JSR $E422       print the start up message and initialise the memory\n                                pointers\n                                not ok ??\n.,E39D A2 FB    LDX #$FB        value for start stack\n.,E39F 9A       TXS             set stack pointer\n.,E3A0 D0 E4    BNE $E386       do \"READY.\" warm start, branch always","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-148"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0.02295873872935772,0,0,-0.027550486847758293,0,0,0.013775243423879147,0,0,-0.009183495305478573,0,0.055100973695516586,0.009183495305478573,0,-0.018366990610957146,-0.009183495305478573,0,0.22040389478206635,0.04591747745871544,0,0,-0.027550486847758293,0,0,0.0872432067990303,0,-0.018366990610957146,0,0,0,0.041325729340314865,0,0,-0.004591747652739286,0,0,0.004591747652739286,0,0,-0.013775243423879147,0,0.018366990610957146,0,0,0,-0.041325729340314865,0,0.018366990610957146,0,0,-0.03673398122191429,-0.013775243423879147,0,0.07346796244382858,0.013775243423879147,0,-0.018366990610957146,-0.009183495305478573,0,0.018366990610957146,0.004591747652739286,0,0,-0.018366990610957146,0,0.018366990610957146,0.03673398122191429,0,-0.055100973695516586,-0.018366990610957146,0,0,0.009183495305478573,0,0,-0.041325729340314865,0,0.018366990610957146,0.041325729340314865,0,-0.03673398122191429,-0.009183495305478573,0,0,0,0,-0.12856893241405487,-0.09183495491743088,0,0,0,0,-0.018366990610957146,-0.027550486847758293,0,0.018366990610957146,0.004591747652739286,0,-0.03673398122191429,-0.004591747652739286,0,0.3673398196697235,0,0,-0.09183495491743088,0,0,0,0.03214223310351372,0,-0.018366990610957146,-0.009183495305478573,0,0.03673398122191429,0.11938543617725372,0,-0.055100973695516586,-0.009183495305478573,0,0,0.004591747652739286,0,-0.018366990610957146,-0.013775243423879147,0,0.4040738046169281,0,0,-0.03673398122191429,-0.004591747652739286,0,0.09183495491743088,0,0,0,-0.009183495305478573,0,0.07346796244382858,0.013775243423879147,0,0,0,0,0.018366990610957146,0.013775243423879147,0,-0.055100973695516586,-0.018366990610957146,0,0.27550485730171204,0.03673398122191429,0,-0.018366990610957146,-0.013775243423879147,0,0,0.009183495305478573,0,0,-0.013775243423879147,0,0.03673398122191429,0.009183495305478573,0,-0.07346796244382858,-0.027550486847758293,0,0,0,0,0,-0.004591747652739286,0,0.018366990610957146,0.009183495305478573,0,-0.03673398122191429,-0.018366990610957146,0,0.018366990610957146,0.009183495305478573,0,0,-0.07346796244382858,0,0.03673398122191429,0.004591747652739286,0,0,-0.027550486847758293,0,0.18366990983486176,0.027550486847758293,0,-0.03673398122191429,-0.018366990610957146,0,0.3122388422489166,0.18366990983486176,0,0,-0.0872432067990303,0,0.12856893241405487,0,0,-0.018366990610957146,-0.013775243423879147,0,0.018366990610957146,0.018366990610957146,0,-0.018366990610957146,-0.027550486847758293,0,0,0,0,-0.055100973695516586,-0.009183495305478573,0,0,0.21581214666366577,0,-0.055100973695516586,-0.02295873872935772,0,0.055100973695516586,0.10101845115423203,0,0,0,0,0.018366990610957146,0.03673398122191429,0,-0.07346796244382858,-0.004591747652739286,0,0.07346796244382858,0.009183495305478573,0,0,-0.027550486847758293,0,0,0.13775242865085602,0,-0.018366990610957146,-0.009183495305478573,0,0.018366990610957146,0.004591747652739286,0,-0.03673398122191429,0,0,0,0.02295873872935772,0,-0.03673398122191429,-0.04591747745871544,0,0,0.018366990610957146,0,-0.07346796244382858,-0.004591747652739286,0,0.018366990610957146,0.013775243423879147,0,-0.018366990610957146,-0.018366990610957146,0,0,0.013775243423879147,0,0,-0.013775243423879147,0,0.018366990610957146,0.018366990610957146,0,0,0,0,0.03673398122191429,0.09642670303583145,0,-0.03673398122191429,-0.027550486847758293,0,0.018366990610957146,0.1561194211244583,0,-0.018366990610957146,-0.03214223310351372,0,0,0.06428446620702744,0,-0.018366990610957146,-0.013775243423879147,0,0,0.013775243423879147,0,-0.03673398122191429,-0.018366990610957146,0,0.018366990610957146,0.09183495491743088,0,0,-0.05050922557711601,0,0.018366990610957146,0,0,0,-0.03214223310351372,0,0,0.03673398122191429,0,-0.018366990610957146,-0.013775243423879147,0,0,0.009183495305478573,0,-0.055100973695516586,-0.041325729340314865,0,0,0.13775242865085602,0,0,-0.009183495305478573,0,0,0.02295873872935772,0,-0.018366990610957146,-0.009183495305478573,0,0,0.027550486847758293,0,0,-0.018366990610957146,0,0.03673398122191429,0.004591747652739286,0,-0.03673398122191429,-0.03214223310351372,0,0.018366990610957146,0.06887621432542801,0,-0.07346796244382858,-0.041325729340314865,0,0.07346796244382858,0.009183495305478573,0,0,-0.009183495305478573,0,0,0.009183495305478573,0,-0.16530291736125946,-0.018366990610957146,0,0,0.009183495305478573,0,-0.018366990610957146,0,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-154 -->\n*** baud rate tables for PAL C64\n                                baud rate word is calculated from ..\n                                \n                                (system clock / baud rate) / 2 - 100\n                                \n                                    system clock\n                                    ------------\n                                PAL       985248 Hz\n                                NTSC     1022727 Hz\n.:E4EC 19 26                      50   baud   985300\n.:E4EE 44 19                      75   baud   985200\n.:E4F0 1A 11                     110   baud   985160\n.:E4F2 E8 0D                     134.5 baud   984540\n.:E4F4 70 0C                     150   baud   985200\n.:E4F6 06 06                     300   baud   985200\n.:E4F8 D1 02                     600   baud   985200\n.:E4FA 37 01                    1200   baud   986400\n.:E4FC AE 00                    1800   baud   986400\n.:E4FE 69 00                    2400   baud   984000\n\n*** return the base address of the I/O devices\n.,E500 A2 00    LDX #$00        get the I/O base address low byte\n.,E502 A0 DC    LDY #$DC        get the I/O base address high byte\n.,E504 60       RTS\n\n*** return the x,y organization of the screen\n.,E505 A2 28    LDX #$28        get the x size\n.,E507 A0 19    LDY #$19        get the y size\n.,E509 60       RTS","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-154"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0,0,-0.03606385365128517,0,0,0,0.009015963412821293,0,0,-0.06311174482107162,0,0.03606385365128517,0,0,0,-0.018031926825642586,0,0.07212770730257034,0.027047889307141304,0,0,-0.009015963412821293,0,0,0.018031926825642586,0,0,-0.018031926825642586,0,0,0.11720752716064453,0,-0.03606385365128517,0,0,0,0,0,-0.10819155722856522,0,0,0,0,0,-0.07212770730257034,-0.018031926825642586,0,0,0,0,-0.03606385365128517,-0.04507981613278389,0,0.07212770730257034,0.03606385365128517,0,0,-0.027047889307141304,0,0.03606385365128517,0.009015963412821293,0,-0.07212770730257034,-0.018031926825642586,0,0.07212770730257034,0,0,0,-0.018031926825642586,0,0,0,0,0,-0.018031926825642586,0,0.03606385365128517,0.018031926825642586,0,0,0,0,0.03606385365128517,0,0,0,-0.13523945212364197,0,0,0.018031926825642586,0,-0.03606385365128517,-0.05409577861428261,0,0,0.05409577861428261,0,0,-0.018031926825642586,0,0.28851082921028137,0,0,-0.07212770730257034,0,0,0,0.018031926825642586,0,-0.03606385365128517,0,0,0.03606385365128517,0.03606385365128517,0,-0.07212770730257034,0,0,0.03606385365128517,0,0,0,0,0,0.3606385290622711,0,0,-0.03606385365128517,-0.027047889307141304,0,0,0,0,0,-0.05409577861428261,0,0,0,0,0,-0.04507981613278389,0,0,0.018031926825642586,0,-0.07212770730257034,-0.018031926825642586,0,0.28851082921028137,0.03606385365128517,0,0,0,0,0,0.018031926825642586,0,0,-0.03606385365128517,0,0.14425541460514069,0.03606385365128517,0,0,-0.018031926825642586,0,0,0.018031926825642586,0,-0.07212770730257034,-0.009015963412821293,0,0,0.018031926825642586,0,0,0,0,0.03606385365128517,0.018031926825642586,0,-0.2524469792842865,-0.009015963412821293,0,0,0,0,0,-0.027047889307141304,0,0.10819155722856522,0.009015963412821293,0,-0.03606385365128517,0,0,0.07212770730257034,0.14425541460514069,0,0,-0.0991755947470665,0,0.32457467913627625,0.009015963412821293,0,0,-0.03606385365128517,0,0,0.018031926825642586,0,0,-0.04507981613278389,0,0,0.018031926825642586,0,-0.07212770730257034,0,0,0,0.18933522701263428,0,-0.03606385365128517,-0.018031926825642586,0,0,0.018031926825642586,0,-0.03606385365128517,0,0,0.03606385365128517,0,0,-0.07212770730257034,0,0,0,0,0,0,-0.04507981613278389,0,0,0.14425541460514069,0,0,-0.027047889307141304,0,0,0,0,0,-0.018031926825642586,0,0,0.07212770730257034,0,-0.03606385365128517,-0.009015963412821293,0,0,0.018031926825642586,0,-0.07212770730257034,-0.03606385365128517,0,0.21638311445713043,0.009015963412821293,0,0,-0.018031926825642586,0,0,0.03606385365128517,0,0,-0.12622348964214325,0,0,0,0,0,0,0,0,0.06311174482107162,0,0,-0.018031926825642586,0,0,0.04507981613278389,0,0,0,0,0,0.16228733956813812,0,-0.03606385365128517,-0.009015963412821293,0,0,0,0,0,0,0,0,0.07212770730257034,0,-0.03606385365128517,-0.05409577861428261,0,0.07212770730257034,0,0,0,-0.027047889307141304,0,0,0.009015963412821293,0,0,-0.03606385365128517,0,0,0.027047889307141304,0,0,-0.03606385365128517,0,0,0.09015963226556778,0,-0.07212770730257034,-0.009015963412821293,0,0.07212770730257034,0,0,-0.03606385365128517,0,0,0,0,0,0,0,0,0,0,0,-0.03606385365128517,-0.03606385365128517,0,0,0.07212770730257034,0,-0.03606385365128517,-0.03606385365128517,0,0.03606385365128517,0.10819155722856522,0,0,0,0,0,0.03606385365128517,0,-0.2524469792842865,0,0,0.03606385365128517,0,0,-0.07212770730257034,-0.018031926825642586,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-155 -->\n*** read/set the x,y cursor position\n.,E50A B0 07    BCS $E513       if read cursor go do read\n.,E50C 86 D6    STX $D6         save the cursor row\n.,E50E 84 D3    STY $D3         save the cursor column\n.,E510 20 6C E5 JSR $E56C       set the screen pointers for the cursor row, column\n.,E513 A6 D6    LDX $D6         get the cursor row\n.,E515 A4 D3    LDY $D3         get the cursor column\n.,E517 60       RTS","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-155"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0,0,-0.017527177929878235,-0.017527177929878235,0,0.017527177929878235,0.06572691351175308,0,0,-0.06134512275457382,0,0.07010871171951294,0.004381794482469559,0,-0.017527177929878235,-0.021908972412347794,0,0.03505435585975647,0.026290766894817352,0,0,-0.008763588964939117,0,0.017527177929878235,0.004381794482469559,0,-0.03505435585975647,-0.03505435585975647,0,0.017527177929878235,0.08325409144163132,0,0,-0.08763588964939117,0,0,0.03067256137728691,0,-0.017527177929878235,-0.021908972412347794,0,0.017527177929878235,0,0,-0.017527177929878235,-0.0744905024766922,0,0.052581533789634705,0.004381794482469559,0,-0.017527177929878235,-0.004381794482469559,0,0.19279895722866058,0.017527177929878235,0,0,-0.026290766894817352,0,0,0.021908972412347794,0,0,-0.07010871171951294,0,0.017527177929878235,0.017527177929878235,0,-0.07010871171951294,-0.017527177929878235,0,0,0.004381794482469559,0,0,-0.017527177929878235,0,0.12269024550914764,0.008763588964939117,0,-0.017527177929878235,-0.004381794482469559,0,0,0.017527177929878235,0,-0.03505435585975647,-0.17527177929878235,0,0,0.008763588964939117,0,-0.017527177929878235,-0.013145383447408676,0,0.017527177929878235,0.004381794482469559,0,-0.03505435585975647,-0.008763588964939117,0,0.12269024550914764,0.013145383447408676,0,-0.07010871171951294,0,0,0.017527177929878235,0.03505435585975647,0,-0.017527177929878235,-0.008763588964939117,0,0.017527177929878235,0.017527177929878235,0,-0.052581533789634705,-0.004381794482469559,0,0.017527177929878235,0.03943615034222603,0,-0.14021742343902588,-0.021908972412347794,0,0.4031250774860382,0.008763588964939117,0,-0.017527177929878235,-0.004381794482469559,0,0,0,0,0,-0.008763588964939117,0,0.017527177929878235,0.008763588964939117,0,-0.017527177929878235,-0.013145383447408676,0,0.017527177929878235,0.026290766894817352,0,-0.07010871171951294,-0.052581533789634705,0,0.1577446013689041,0.09639947861433029,0,0,-0.004381794482469559,0,0.017527177929878235,0,0,-0.03505435585975647,-0.03067256137728691,0,0,0.008763588964939117,0,-0.03505435585975647,-0.03505435585975647,0,0,0.008763588964939117,0,-0.07010871171951294,-0.013145383447408676,0,0,0.07010871171951294,0,-0.03505435585975647,-0.04381794482469559,0,0.017527177929878235,0.004381794482469559,0,-0.21032613515853882,-0.026290766894817352,0,0.017527177929878235,0,0,-0.052581533789634705,-0.017527177929878235,0,0.10516306757926941,0.013145383447408676,0,-0.03505435585975647,-0.017527177929878235,0,0.017527177929878235,0.06572691351175308,0,-0.10516306757926941,-0.11830844730138779,0,0.33301636576652527,0.013145383447408676,0,0,-0.013145383447408676,0,0.12269024550914764,0.008763588964939117,0,-0.052581533789634705,-0.03067256137728691,0,0,0.013145383447408676,0,-0.052581533789634705,-0.07010871171951294,0,0.017527177929878235,0.21908971667289734,0,-0.017527177929878235,-0.013145383447408676,0,0,0.008763588964939117,0,0,0,0,0.017527177929878235,0.013145383447408676,0,0,-0.017527177929878235,0,0.03505435585975647,0.013145383447408676,0,0,-0.03505435585975647,0,0.017527177929878235,0.07887230068445206,0,0,-0.004381794482469559,0,0,0.013145383447408676,0,-0.017527177929878235,-0.021908972412347794,0,0.03505435585975647,0.013145383447408676,0,-0.03505435585975647,-0.021908972412347794,0,0,0.048199739307165146,0,-0.017527177929878235,-0.03505435585975647,0,0.017527177929878235,0,0,0,-0.017527177929878235,0,0.017527177929878235,0.013145383447408676,0,0,-0.12269024550914764,0,0,0.008763588964939117,0,0,-0.026290766894817352,0,0,0.08325409144163132,0,-0.017527177929878235,-0.021908972412347794,0,0.12269024550914764,0.008763588964939117,0,-0.017527177929878235,-0.06134512275457382,0,0,0.16650818288326263,0,-0.017527177929878235,-0.004381794482469559,0,0,0.06572691351175308,0,0,-0.03505435585975647,0,0,0.03067256137728691,0,-0.017527177929878235,-0.04381794482469559,0,0,0.013145383447408676,0,-0.17527177929878235,-0.013145383447408676,0,0,0.004381794482469559,0,-0.017527177929878235,-0.013145383447408676,0,0,0.013145383447408676,0,-0.12269024550914764,-0.03505435585975647,0,0,0.11830844730138779,0,0,-0.004381794482469559,0,0.03505435585975647,0.008763588964939117,0,-0.052581533789634705,0,0,0.03505435585975647,0.004381794482469559,0,-0.14021742343902588,-0.013145383447408676,0,0.017527177929878235,0.021908972412347794,0,-0.03505435585975647,-0.03505435585975647,0,0,0.03943615034222603,0,-0.03505435585975647,-0.008763588964939117,0,0.017527177929878235,0.013145383447408676,0,0,-0.008763588964939117,0,0.017527177929878235,0.008763588964939117,0,-0.33301636576652527,-0.008763588964939117,0,0.017527177929878235,0,0,-0.017527177929878235,-0.017527177929878235,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-156 -->\n*** initialise the screen and keyboard\n.,E518 20 A0 E5 JSR $E5A0       initialise the vic chip\n.,E51B A9 00    LDA #$00        clear A\n.,E51D 8D 91 02 STA $0291       clear the shift mode switch\n.,E520 85 CF    STA $CF         clear the cursor blink phase\n.,E522 A9 48    LDA #$48        get the keyboard decode logic pointer low byte\n.,E524 8D 8F 02 STA $028F       save the keyboard decode logic pointer low byte\n.,E527 A9 EB    LDA #$EB        get the keyboard decode logic pointer high byte\n.,E529 8D 90 02 STA $0290       save the keyboard decode logic pointer high byte\n.,E52C A9 0A    LDA #$0A        set the maximum size of the keyboard buffer\n.,E52E 8D 89 02 STA $0289       save the maximum size of the keyboard buffer\n.,E531 8D 8C 02 STA $028C       save the repeat delay counter\n.,E534 A9 0E    LDA #$0E        set light blue\n.,E536 8D 86 02 STA $0286       save the current colour code\n.,E539 A9 04    LDA #$04        speed 4\n.,E53B 8D 8B 02 STA $028B       save the repeat speed counter\n.,E53E A9 0C    LDA #$0C        set the cursor flash timing\n.,E540 85 CD    STA $CD         save the cursor timing countdown\n.,E542 85 CC    STA $CC         save the cursor enable, $00 = flash cursor","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-156"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0.05757796764373779,0,0,-0.019192656502127647,0,0,0.038385313004255295,0,0,-0.05757796764373779,0,0.07677062600851059,0.009596328251063824,0,0,0,0,0.038385313004255295,0.028788983821868896,0,0,-0.009596328251063824,0,0,0.019192656502127647,0,0,-0.009596328251063824,0,0.07677062600851059,0.08636695146560669,0,0,-0.019192656502127647,0,0,0.019192656502127647,0,0,-0.05757796764373779,0,0,0,0,-0.07677062600851059,-0.05757796764373779,0,0,0.009596328251063824,0,0,-0.009596328251063824,0,0.038385313004255295,0,0,0,-0.019192656502127647,0,0,0,0,0,-0.019192656502127647,0,0.07677062600851059,0,0,0,0,0,0.038385313004255295,0.019192656502127647,0,0,-0.019192656502127647,0,0,0.028788983821868896,0,0,-0.019192656502127647,0,0,0,0,0,-0.028788983821868896,0,0,0,0,-0.07677062600851059,-0.019192656502127647,0,0,0,0,-0.038385313004255295,0,0,0.34546780586242676,0.05757796764373779,0,-0.07677062600851059,-0.028788983821868896,0,0,0.038385313004255295,0,0,0,0,0.038385313004255295,0.038385313004255295,0,-0.07677062600851059,-0.009596328251063824,0,0,0,0,0,-0.009596328251063824,0,0.38385310769081116,0.038385313004255295,0,0,0,0,0.038385313004255295,0,0,0,0,0,0,0,0,-0.07677062600851059,-0.038385313004255295,0,0,0,0,-0.07677062600851059,-0.009596328251063824,0,0.26869717240333557,0.019192656502127647,0,0,-0.019192656502127647,0,0,0,0,-0.038385313004255295,-0.019192656502127647,0,0,0.038385313004255295,0,-0.11515593528747559,0,0,0,0.019192656502127647,0,-0.07677062600851059,-0.009596328251063824,0,0.07677062600851059,0,0,0,-0.009596328251063824,0,0.15354125201702118,0,0,-0.15354125201702118,0,0,0.038385313004255295,0.009596328251063824,0,0,-0.047981638461351395,0,0.11515593528747559,0.009596328251063824,0,-0.038385313004255295,-0.028788983821868896,0,0.07677062600851059,0.17273390293121338,0,-0.038385313004255295,-0.047981638461351395,0,0.34546780586242676,0,0,0,-0.009596328251063824,0,0.07677062600851059,0.019192656502127647,0,-0.07677062600851059,-0.038385313004255295,0,0,0,0,-0.07677062600851059,0,0,0.038385313004255295,0.21111921966075897,0,-0.038385313004255295,0,0,0,0.028788983821868896,0,0,0,0,0,0,0,0,-0.038385313004255295,0,0,0.019192656502127647,0,0,-0.038385313004255295,0,0,0.13434858620166779,0,0,0,0,0.038385313004255295,0,0,0,-0.038385313004255295,0,0,0,0,-0.038385313004255295,-0.05757796764373779,0,0,0.009596328251063824,0,0,-0.038385313004255295,0,0,0.038385313004255295,0,0,0,0,0.23031187057495117,0.09596327692270279,0,-0.11515593528747559,-0.07677062600851059,0,0,0.028788983821868896,0,0,0,0,0.07677062600851059,0.05757796764373779,0,-0.038385313004255295,-0.019192656502127647,0,0,0.038385313004255295,0,-0.038385313004255295,-0.019192656502127647,0,0,0.17273390293121338,0,0,-0.019192656502127647,0,0,0.038385313004255295,0,0,-0.047981638461351395,0,0,0.08636695146560669,0,0,-0.05757796764373779,0,0,0.019192656502127647,0,-0.038385313004255295,-0.019192656502127647,0,0,0.009596328251063824,0,-0.07677062600851059,-0.019192656502127647,0,0,0,0,-0.07677062600851059,0,0,0,0.09596327692270279,0,0,0,0,0,0.009596328251063824,0,-0.038385313004255295,0,0,0,0.019192656502127647,0,-0.038385313004255295,-0.019192656502127647,0,0,0,0,0,-0.038385313004255295,0,0.038385313004255295,0.06717429310083389,0,-0.038385313004255295,0,0,0.038385313004255295,0,0,-0.038385313004255295,-0.009596328251063824,0,0,0.11515593528747559,0,-0.038385313004255295,-0.08636695146560669,0,0,0,0,-0.038385313004255295,-0.019192656502127647,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-162 -->\n*** if open quote toggle cursor quote flag\n.,E684 C9 22    CMP #$22        comapre byte with \"\n.,E686 D0 08    BNE $E690       exit if not \"\n.,E688 A5 D4    LDA $D4         get cursor quote flag, $xx = quote, $00 = no quote\n.,E68A 49 01    EOR #$01        toggle it\n.,E68C 85 D4    STA $D4         save cursor quote flag\n.,E68E A9 22    LDA #$22        restore the \"\n.,E690 60       RTS","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-162"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0.015675431117415428,0.003918857779353857,0,-0.015675431117415428,-0.011756572872400284,0,0.06270172446966171,0.019594287499785423,0,-0.0783771499991417,-0.027432002127170563,0,0.015675431117415428,0,0,0,-0.047026291489601135,0,0.09405258297920227,0.05878286436200142,0,0,-0.08621486276388168,0,0,0.011756572872400284,0,0,-0.027432002127170563,0,0.015675431117415428,0.11756572872400284,0,0,-0.03918857499957085,0,0,0.027432002127170563,0,-0.015675431117415428,-0.003918857779353857,0,0.031350862234830856,0.007837715558707714,0,-0.015675431117415428,-0.0783771499991417,0,0,0.007837715558707714,0,-0.10972800850868225,-0.015675431117415428,0,0.09405258297920227,0.015675431117415428,0,-0.031350862234830856,-0.015675431117415428,0,0,0.011756572872400284,0,-0.031350862234830856,-0.023513145744800568,0,0.015675431117415428,0.011756572872400284,0,-0.015675431117415428,-0.05094514787197113,0,0.015675431117415428,0.011756572872400284,0,0,-0.027432002127170563,0,0.06270172446966171,0.019594287499785423,0,-0.015675431117415428,-0.003918857779353857,0,0.047026291489601135,0.003918857779353857,0,-0.09405258297920227,-0.12148458510637283,0,0.031350862234830856,0.015675431117415428,0,-0.015675431117415428,-0.007837715558707714,0,0,0.023513145744800568,0,-0.031350862234830856,-0.007837715558707714,0,0.12540344893932343,0.031350862234830856,0,-0.0783771499991417,-0.054864004254341125,0,0.031350862234830856,0.023513145744800568,0,-0.031350862234830856,0,0,0.015675431117415428,0.047026291489601135,0,-0.06270172446966171,0,0,0.06270172446966171,0.007837715558707714,0,0,-0.003918857779353857,0,0.40756118297576904,0.007837715558707714,0,-0.06270172446966171,-0.011756572872400284,0,0.031350862234830856,0.003918857779353857,0,-0.015675431117415428,-0.047026291489601135,0,0,0.015675431117415428,0,-0.015675431117415428,-0.019594287499785423,0,0.015675431117415428,0.003918857779353857,0,-0.047026291489601135,-0.0705394372344017,0,0.1410788744688034,0.047026291489601135,0,-0.06270172446966171,-0.015675431117415428,0,0.015675431117415428,0.003918857779353857,0,-0.09405258297920227,-0.047026291489601135,0,0,0.007837715558707714,0,-0.047026291489601135,-0.011756572872400284,0,0.06270172446966171,0.015675431117415428,0,-0.047026291489601135,-0.003918857779353857,0,0.015675431117415428,0.03526971861720085,0,-0.047026291489601135,-0.015675431117415428,0,0.015675431117415428,0.023513145744800568,0,-0.0783771499991417,-0.0705394372344017,0,0,0.019594287499785423,0,-0.09405258297920227,-0.019594287499785423,0,0.20378059148788452,0.007837715558707714,0,-0.031350862234830856,-0.015675431117415428,0,0.047026291489601135,0.06270172446966171,0,-0.015675431117415428,-0.09797143936157227,0,0.438912034034729,0.023513145744800568,0,-0.031350862234830856,-0.019594287499785423,0,0.10972800850868225,0.011756572872400284,0,-0.015675431117415428,-0.03526971861720085,0,0,0.047026291489601135,0,-0.06270172446966171,-0.019594287499785423,0,0.031350862234830856,0.20769944787025452,0,-0.031350862234830856,-0.031350862234830856,0,0,0.03918857499957085,0,-0.031350862234830856,-0.007837715558707714,0,0.015675431117415428,0,0,-0.031350862234830856,-0.007837715558707714,0,0.047026291489601135,0.011756572872400284,0,-0.015675431117415428,-0.023513145744800568,0,0.015675431117415428,0.0705394372344017,0,-0.015675431117415428,-0.03526971861720085,0,0.015675431117415428,0.015675431117415428,0,-0.015675431117415428,-0.05094514787197113,0,0.015675431117415428,0,0,-0.015675431117415428,-0.05094514787197113,0,0,0.054864004254341125,0,0,-0.031350862234830856,0,0.06270172446966171,0.007837715558707714,0,0,-0.031350862234830856,0,0,0.011756572872400284,0,-0.06270172446966171,-0.04310743138194084,0,0.06270172446966171,0.003918857779353857,0,0,-0.047026291489601135,0,0,0.11756572872400284,0,0,-0.019594287499785423,0,0.031350862234830856,0.03526971861720085,0,-0.015675431117415428,-0.031350862234830856,0,0,0.22729374468326569,0,-0.047026291489601135,-0.019594287499785423,0,0.015675431117415428,0.054864004254341125,0,-0.1567542999982834,-0.015675431117415428,0,0,0.031350862234830856,0,-0.047026291489601135,-0.05094514787197113,0,0.015675431117415428,0.023513145744800568,0,-0.06270172446966171,-0.023513145744800568,0,0,0.003918857779353857,0,0,-0.031350862234830856,0,0.015675431117415428,0.023513145744800568,0,-0.12540344893932343,-0.015675431117415428,0,0,0.12540344893932343,0,-0.015675431117415428,-0.023513145744800568,0,0.031350862234830856,0.015675431117415428,0,-0.015675431117415428,-0.011756572872400284,0,0.015675431117415428,0.007837715558707714,0,-0.031350862234830856,-0.011756572872400284,0,0,0.011756572872400284,0,-0.09405258297920227,-0.019594287499785423,0,0.015675431117415428,0.03526971861720085,0,-0.047026291489601135,-0.015675431117415428,0,0.031350862234830856,0.03526971861720085,0,0,-0.023513145744800568,0,0,0,0,-0.23513145744800568,-0.04310743138194084,0,0.031350862234830856,0.047026291489601135,0,-0.015675431117415428,-0.011756572872400284,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-174 -->\n*** fetch a screen address\n.,E9F0 BD F0 EC LDA $ECF0,X     get the start of line low byte from the ROM table\n.,E9F3 85 D1    STA $D1         set the current screen line pointer low byte\n.,E9F5 B5 D9    LDA $D9,X       get the start of line high byte from the RAM table\n.,E9F7 29 03    AND #$03        mask 0000 00xx, line memory page\n.,E9F9 0D 88 02 ORA $0288       OR with the screen memory page\n.,E9FC 85 D2    STA $D2         save the current screen line pointer high byte\n.,E9FE 60       RTS\n\n*** clear screen line X\n.,E9FF A0 27    LDY #$27        set number of columns to clear\n.,EA01 20 F0 E9 JSR $E9F0       fetch a screen address\n.,EA04 20 24 EA JSR $EA24       calculate the pointer to colour RAM\n.,EA07 20 DA E4 JSR $E4DA       save the current colour to the colour RAM\n.,EA0A A9 20    LDA #$20        set [SPACE]\n.,EA0C 91 D1    STA ($D1),Y     clear character in current screen line\n.,EA0E 88       DEY             decrement index\n.,EA0F 10 F6    BPL $EA07       loop if more to do\n.,EA11 60       RTS\n\n*** orphan byte\n.,EA12 EA       NOP             unused\n\n*** print character A and colour X\n.,EA13 A8       TAY             copy the character\n.,EA14 A9 02    LDA #$02set the count to $02, usually $14 ??\n.,EA16 85 CD    STA $CD         save the cursor countdown\n.,EA18 20 24 EA JSR $EA24       calculate the pointer to colour RAM\n.,EA1B 98       TYA             get the character back","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-174"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0,0,0,0,0,0.12044041603803635,0.036132123321294785,0,-0.09635233134031296,-0.04215414449572563,0,0.02408808283507824,0,0,-0.02408808283507824,-0.07226424664258957,0,0.02408808283507824,0.036132123321294785,0,0,-0.06022020801901817,0,0,0.00602202070876956,0,0,0,0,0,0.1144183948636055,0,0,-0.054198186844587326,0,0.02408808283507824,0.01204404141753912,0,-0.04817616567015648,0,0,0,0.01204404141753912,0,0,-0.08430828899145126,0,0,0.01204404141753912,0,-0.09635233134031296,-0.00602202070876956,0,0.12044041603803635,0,0,-0.04817616567015648,-0.02408808283507824,0,0.02408808283507824,0,0,0,-0.01204404141753912,0,0.02408808283507824,0.018066061660647392,0,-0.02408808283507824,0,0,0,0,0,0,-0.02408808283507824,0,0,0.036132123321294785,0,-0.02408808283507824,-0.00602202070876956,0,0.04817616567015648,0.00602202070876956,0,-0.12044041603803635,-0.09635233134031296,0,0.02408808283507824,0,0,-0.04817616567015648,-0.01204404141753912,0,0,0.018066061660647392,0,-0.02408808283507824,0,0,0.19270466268062592,0.06022020801901817,0,-0.07226424664258957,-0.04817616567015648,0,0,0.030110104009509087,0,0,-0.01204404141753912,0,0.02408808283507824,0.01204404141753912,0,-0.09635233134031296,0,0,0,0.01204404141753912,0,0,0,0,0.38540932536125183,0,0,-0.04817616567015648,-0.01204404141753912,0,0,0.01204404141753912,0,0,-0.04817616567015648,0,0.02408808283507824,0,0,0,0,0,0.02408808283507824,0.00602202070876956,0,-0.04817616567015648,-0.07226424664258957,0,0.16861657798290253,0.06022020801901817,0,-0.07226424664258957,-0.02408808283507824,0,0.02408808283507824,0.018066061660647392,0,-0.2167927473783493,-0.036132123321294785,0,0.02408808283507824,0.01204404141753912,0,0,-0.01204404141753912,0,0,0,0,-0.02408808283507824,-0.00602202070876956,0,0,0,0,0,-0.01204404141753912,0,0.04817616567015648,0.030110104009509087,0,-0.16861657798290253,-0.06022020801901817,0,0,0.01204404141753912,0,-0.19270466268062592,-0.036132123321294785,0,0.14452849328517914,0.01204404141753912,0,-0.04817616567015648,-0.01204404141753912,0,0.02408808283507824,0.09635233134031296,0,0,-0.07828626781702042,0,0.4094974100589752,0,0,-0.02408808283507824,-0.00602202070876956,0,0.04817616567015648,0.01204404141753912,0,0,-0.04817616567015648,0,0,0.030110104009509087,0,-0.04817616567015648,-0.02408808283507824,0,0.04817616567015648,0.19872668385505676,0,-0.02408808283507824,-0.030110104009509087,0,0,0.00602202070876956,0,-0.04817616567015648,0,0,0,0.01204404141753912,0,-0.04817616567015648,0,0,0.02408808283507824,0.01204404141753912,0,0,-0.02408808283507824,0,0,0.09033031016588211,0,0,-0.04817616567015648,0,0.04817616567015648,0.01204404141753912,0,-0.02408808283507824,-0.10839637368917465,0,0.02408808283507824,0.01204404141753912,0,-0.04817616567015648,-0.02408808283507824,0,0,0.030110104009509087,0,0,-0.02408808283507824,0,0.07226424664258957,0.00602202070876956,0,0,0,0,0,0.030110104009509087,0,0,-0.09033031016588211,0,0.07226424664258957,0,0,0,-0.09635233134031296,0,0,0.07226424664258957,0,0,-0.030110104009509087,0,0.04817616567015648,0.02408808283507824,0,0,-0.030110104009509087,0,0,0.21077072620391846,0,-0.04817616567015648,-0.02408808283507824,0,0,0.02408808283507824,0,-0.09635233134031296,-0.00602202070876956,0,0,0.04817616567015648,0,0,-0.04215414449572563,0,0.02408808283507824,0.02408808283507824,0,-0.09635233134031296,-0.01204404141753912,0,0,0.00602202070876956,0,0,-0.04817616567015648,0,0.02408808283507824,0,0,-0.14452849328517914,-0.02408808283507824,0,0,0.10839637368917465,0,0,-0.01204404141753912,0,0,0,0,-0.02408808283507824,0,0,0,0.030110104009509087,0,0,-0.01204404141753912,0,0.02408808283507824,0.018066061660647392,0,0,-0.036132123321294785,0,0,0.04215414449572563,0,-0.04817616567015648,-0.018066061660647392,0,0.04817616567015648,0.04215414449572563,0,0,-0.054198186844587326,0,0,0.00602202070876956,0,-0.16861657798290253,0,0,0,0.036132123321294785,0,-0.02408808283507824,-0.00602202070876956,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-175 -->\n*** save the character and colour to the screen @ the cursor\n.,EA1C A4 D3    LDY $D3         get the cursor column\n.,EA1E 91 D1    STA ($D1),Y     save the character from current screen line\n.,EA20 8A       TXA             copy the colour to A\n.,EA21 91 F3    STA ($F3),Y     save to colour RAM\n.,EA23 60       RTS\n\n*** calculate the pointer to colour RAM\n.,EA24 A5 D1    LDA $D1         get current screen line pointer low byte\n.,EA26 85 F3    STA $F3         save pointer to colour RAM low byte\n.,EA28 A5 D2    LDA $D2         get current screen line pointer high byte\n.,EA2A 29 03    AND #$03        mask 0000 00xx, line memory page\n.,EA2C 09 D8    ORA #$D8        set  1101 01xx, colour memory page\n.,EA2E 85 F4    STA $F4         save pointer to colour RAM high byte\n.,EA30 60       RTS","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-175"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0.11505791544914246,0.012327633798122406,0,0,-0.004109211266040802,0,0,0.024655267596244812,0,-0.016436845064163208,-0.008218422532081604,0,0.016436845064163208,0.04109211266040802,0,-0.032873690128326416,-0.02054605633020401,0,0.032873690128326416,0.03698290139436722,0,0,-0.028764478862285614,0,0.016436845064163208,0.024655267596244812,0,0,0,0,0,0.11916712671518326,0,0,-0.04520132392644882,0,0.049310535192489624,0.02054605633020401,0,0,0,0,0.032873690128326416,0.024655267596244812,0,-0.26298952102661133,-0.016436845064163208,0,0,0.008218422532081604,0,-0.11505791544914246,-0.004109211266040802,0,0.09862107038497925,0,0,-0.016436845064163208,-0.04520132392644882,0,0.016436845064163208,0,0,0,-0.016436845064163208,0,0.016436845064163208,0.024655267596244812,0,-0.049310535192489624,-0.008218422532081604,0,0.049310535192489624,0.028764478862285614,0,-0.049310535192489624,-0.03698290139436722,0,0.09862107038497925,0.008218422532081604,0,0,-0.016436845064163208,0,0.016436845064163208,0.008218422532081604,0,-0.11505791544914246,-0.06985659152269363,0,0.016436845064163208,0.06574738025665283,0,-0.06574738025665283,-0.016436845064163208,0,0,0.06574738025665283,0,-0.09862107038497925,0,0,0.11505791544914246,0.004109211266040802,0,-0.09862107038497925,-0.012327633798122406,0,0,0.02054605633020401,0,-0.032873690128326416,-0.028764478862285614,0,0.016436845064163208,0.016436845064163208,0,-0.13149476051330566,0,0,0.016436845064163208,0.012327633798122406,0,0,-0.004109211266040802,0,0.34517374634742737,0.008218422532081604,0,-0.016436845064163208,-0.004109211266040802,0,0.049310535192489624,0.024655267596244812,0,-0.016436845064163208,-0.012327633798122406,0,0,0.02054605633020401,0,-0.032873690128326416,-0.13149476051330566,0,0,0,0,-0.016436845064163208,-0.07396580278873444,0,0.13149476051330566,0.049310535192489624,0,-0.016436845064163208,-0.008218422532081604,0,0.08218422532081604,0.02054605633020401,0,0,-0.008218422532081604,0,0,0.012327633798122406,0,-0.06574738025665283,-0.024655267596244812,0,0.06574738025665283,0.024655267596244812,0,-0.08218422532081604,-0.04109211266040802,0,0.049310535192489624,0.049310535192489624,0,-0.016436845064163208,-0.004109211266040802,0,0.06574738025665283,0.016436845064163208,0,0,-0.06163816899061203,0,0.09862107038497925,0.008218422532081604,0,-0.049310535192489624,-0.049310535192489624,0,0.14793160557746887,0.004109211266040802,0,-0.016436845064163208,-0.05752895772457123,0,0.06574738025665283,0.06163816899061203,0,0,-0.08218422532081604,0,0.47666850686073303,0.024655267596244812,0,-0.049310535192489624,-0.024655267596244812,0,0.08218422532081604,0.03698290139436722,0,0,-0.06574738025665283,0,0,0.008218422532081604,0,0,-0.004109211266040802,0,0,0.1766960769891739,0,-0.016436845064163208,-0.016436845064163208,0,0,0.032873690128326416,0,-0.049310535192489624,-0.008218422532081604,0,0,0.004109211266040802,0,-0.032873690128326416,-0.016436845064163208,0,0.032873690128326416,0,0,0,-0.008218422532081604,0,0.11505791544914246,0.07807501405477524,0,-0.016436845064163208,-0.008218422532081604,0,0,0.049310535192489624,0,0,-0.06574738025665283,0,0,0,0,-0.016436845064163208,-0.06163816899061203,0,0.06574738025665283,0.05752895772457123,0,0,-0.04520132392644882,0,0.032873690128326416,0.028764478862285614,0,0,-0.008218422532081604,0,0.016436845064163208,0.03698290139436722,0,-0.016436845064163208,-0.012327633798122406,0,0.049310535192489624,0.06163816899061203,0,-0.049310535192489624,-0.03698290139436722,0,0,0.09862107038497925,0,0,-0.008218422532081604,0,0.016436845064163208,0.03698290139436722,0,-0.016436845064163208,-0.028764478862285614,0,0.032873690128326416,0.24244345724582672,0,-0.016436845064163208,-0.04109211266040802,0,0,0.04109211266040802,0,-0.049310535192489624,-0.024655267596244812,0,0.016436845064163208,0.028764478862285614,0,0,-0.024655267596244812,0,0,0,0,-0.06574738025665283,-0.016436845064163208,0,0,0.004109211266040802,0,0,-0.05752895772457123,0,0.049310535192489624,0.004109211266040802,0,-0.032873690128326416,-0.016436845064163208,0,0.016436845064163208,0.10273028165102005,0,0,-0.004109211266040802,0,0,0.06985659152269363,0,-0.06574738025665283,-0.012327633798122406,0,0,0,0,-0.016436845064163208,-0.008218422532081604,0,0.032873690128326416,0,0,-0.016436845064163208,-0.012327633798122406,0,0,0.06574738025665283,0,-0.06574738025665283,-0.004109211266040802,0,0.016436845064163208,0.03698290139436722,0,-0.032873690128326416,0,0,0.016436845064163208,0.008218422532081604,0,-0.13149476051330566,-0.024655267596244812,0,0.09862107038497925,0.04109211266040802,0,-0.032873690128326416,-0.04520132392644882,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-211 -->\n*** serial bus device close\n.,F2EE 20 42 F6 JSR $F642       close serial bus device\n.,F2F1 68       PLA             restore file index\n\n*** close file index X\n.,F2F2 AA       TAX             copy index to file to close\n.,F2F3 C6 98    DEC $98         decrement the open file count\n.,F2F5 E4 98    CPX $98         compare the index with the open file count\n.,F2F7 F0 14    BEQ $F30D       exit if equal, last entry was closing file\n                                else entry was not last in list so copy last table entry\n                                file details over the details of the closing one\n.,F2F9 A4 98    LDY $98         get the open file count as index\n.,F2FB B9 59 02 LDA $0259,Y     get last+1 logical file number from logical file table\n.,F2FE 9D 59 02 STA $0259,X     save logical file number over closed file\n.,F301 B9 63 02 LDA $0263,Y     get last+1 device number from device number table\n.,F304 9D 63 02 STA $0263,X     save device number over closed file\n.,F307 B9 6D 02 LDA $026D,Y     get last+1 secondary address from secondary address table\n.,F30A 9D 6D 02 STA $026D,X     save secondary address over closed file\n.,F30D 18       CLC             flag ok\n.,F30E 60       RTS\n\n*** find a file\n.,F30F A9 00    LDA #$00        clear A\n.,F311 85 90    STA $90         clear the serial status byte\n.,F313 8A       TXA             copy the logical file number to A","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-211"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0.07946442812681198,0.01489957980811596,0,0,-0.009933053515851498,0,0,0.004966526757925749,0,-0.019866107031702995,-0.009933053515851498,0,0.019866107031702995,0.019866107031702995,0,-0.019866107031702995,-0.01489957980811596,0,0.019866107031702995,0.06456484645605087,0,-0.019866107031702995,-0.02979915961623192,0,0,0.02483263425529003,0,0,0,0,0,0.10429705679416656,0,0,-0.07449790090322495,0,0.03973221406340599,0.019866107031702995,0,-0.019866107031702995,-0.009933053515851498,0,0.03973221406340599,0.02483263425529003,0,-0.2582593858242035,-0.04469874128699303,0,0,0.009933053515851498,0,0,-0.004966526757925749,0,0.07946442812681198,0.009933053515851498,0,0,-0.02483263425529003,0,0,0,0,0,-0.009933053515851498,0,0.05959831923246384,0.009933053515851498,0,-0.019866107031702995,-0.004966526757925749,0,0.05959831923246384,0.004966526757925749,0,-0.05959831923246384,-0.04469874128699303,0,0.09933053702116013,0.019866107031702995,0,-0.019866107031702995,-0.009933053515851498,0,0,0,0,-0.09933053702116013,-0.12912969291210175,0,0,0.02483263425529003,0,-0.03973221406340599,-0.019866107031702995,0,0,0.03973221406340599,0,-0.11919663846492767,0,0,0.13906274735927582,0.004966526757925749,0,-0.07946442812681198,-0.009933053515851498,0,0,0.009933053515851498,0,-0.019866107031702995,-0.009933053515851498,0,0.03973221406340599,0.009933053515851498,0,-0.15892885625362396,-0.01489957980811596,0,0.019866107031702995,0,0,0,-0.004966526757925749,0,0.37745603919029236,0,0,0,-0.004966526757925749,0,0,0.02483263425529003,0,-0.019866107031702995,-0.019866107031702995,0,0,0.02979915961623192,0,-0.019866107031702995,-0.12912969291210175,0,0,0,0,-0.07946442812681198,-0.02483263425529003,0,0.1787949651479721,0.03973221406340599,0,0,-0.004966526757925749,0,0,0.009933053515851498,0,-0.019866107031702995,-0.019866107031702995,0,0,0.034765686839818954,0,-0.03973221406340599,-0.009933053515851498,0,0.09933053702116013,0.034765686839818954,0,-0.03973221406340599,-0.03973221406340599,0,0.05959831923246384,0.04966526851058006,0,0,-0.01489957980811596,0,0.019866107031702995,0,0,0,-0.04966526851058006,0,0.07946442812681198,0,0,-0.019866107031702995,-0.03973221406340599,0,0.2185271680355072,0.009933053515851498,0,-0.03973221406340599,-0.06456484645605087,0,0.019866107031702995,0.06953137367963791,0,0,-0.09933053702116013,0,0.41718822717666626,0.009933053515851498,0,-0.09933053702116013,-0.019866107031702995,0,0.07946442812681198,0.03973221406340599,0,0,-0.07946442812681198,0,0.019866107031702995,0.009933053515851498,0,-0.019866107031702995,-0.004966526757925749,0,0,0.19369454681873322,0,-0.019866107031702995,-0.004966526757925749,0,0,0.004966526757925749,0,-0.019866107031702995,-0.01489957980811596,0,0,0,0,0,-0.009933053515851498,0,0.03973221406340599,0,0,-0.019866107031702995,-0.03973221406340599,0,0.019866107031702995,0.09933053702116013,0,-0.019866107031702995,-0.004966526757925749,0,0,0.009933053515851498,0,0,-0.07449790090322495,0,0,0,0,-0.03973221406340599,-0.019866107031702995,0,0.019866107031702995,0.06953137367963791,0,0,-0.019866107031702995,0,0,0.02979915961623192,0,0,0,0,0.019866107031702995,0.02483263425529003,0,0,-0.004966526757925749,0,0,0.0546317920088768,0,0,-0.02483263425529003,0,0,0.13409622013568878,0,-0.019866107031702995,-0.02483263425529003,0,0,0.009933053515851498,0,-0.019866107031702995,-0.02483263425529003,0,0,0.20859411358833313,0,-0.019866107031702995,-0.05959831923246384,0,0.019866107031702995,0.03973221406340599,0,-0.03973221406340599,-0.02979915961623192,0,0.03973221406340599,0.04469874128699303,0,0,-0.02979915961623192,0,0,0,0,-0.09933053702116013,-0.01489957980811596,0,0,0.009933053515851498,0,-0.019866107031702995,-0.04966526851058006,0,0.03973221406340599,0.004966526757925749,0,-0.07946442812681198,0,0,0.019866107031702995,0.11423011124134064,0,0,-0.009933053515851498,0,0.019866107031702995,0.009933053515851498,0,-0.03973221406340599,-0.01489957980811596,0,0,0,0,-0.019866107031702995,-0.004966526757925749,0,0,0,0,0,-0.03973221406340599,0,0,0.0546317920088768,0,-0.07946442812681198,0,0,0.03973221406340599,0,0,-0.019866107031702995,-0.004966526757925749,0,0,0.009933053515851498,0,-0.23839327692985535,-0.009933053515851498,0,0.03973221406340599,0.02483263425529003,0,-0.03973221406340599,-0.009933053515851498,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-212 -->\n*** find file A\n.,F314 A6 98    LDX $98         get the open file count\n.,F316 CA       DEX             decrememnt the count to give the index\n.,F317 30 15    BMI $F32E       if no files just exit\n.,F319 DD 59 02 CMP $0259,X     compare the logical file number with the table logical\n                                file number\n.,F31C D0 F8    BNE $F316       if no match go try again\n.,F31E 60       RTS\n\n*** set file details from table,X\n.,F31F BD 59 02 LDA $0259,X     get logical file from logical file table\n.,F322 85 B8    STA $B8         save the logical file\n.,F324 BD 63 02 LDA $0263,X     get device number from device number table\n.,F327 85 BA    STA $BA         save the device number\n.,F329 BD 6D 02 LDA $026D,X     get secondary address from secondary address table\n.,F32C 85 B9    STA $B9         save the secondary address\n.,F32E 60       RTS\n\n*** close all channels and files\n.,F32F A9 00    LDA #$00        clear A\n.,F331 85 98    STA $98         clear the open file count","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-212"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0.02841050550341606,0,0,-0.04261575639247894,0,0,0.05208592489361763,0,-0.05682101100683212,-0.018940337002277374,0,0.03788067400455475,0.033145587891340256,0,-0.018940337002277374,-0.047350842505693436,0,0.05682101100683212,0.047350842505693436,0,0,-0.01420525275170803,0,0,0.004735084250569344,0,0,-0.004735084250569344,0,0.03788067400455475,0.11364202201366425,0,-0.018940337002277374,-0.05682101100683212,0,0,0.02841050550341606,0,-0.018940337002277374,-0.009470168501138687,0,0,0.02841050550341606,0,-0.018940337002277374,-0.09470168501138687,0,0,0.04261575639247894,0,0,-0.009470168501138687,0,0.17046302556991577,0.05682101100683212,0,-0.05682101100683212,-0.033145587891340256,0,0,0.01420525275170803,0,0,-0.05682101100683212,0,0.0757613480091095,0.018940337002277374,0,-0.03788067400455475,-0.023675421252846718,0,0,0.004735084250569344,0,-0.018940337002277374,-0.03788067400455475,0,0.018940337002277374,0.018940337002277374,0,-0.05682101100683212,-0.004735084250569344,0,0.018940337002277374,0.023675421252846718,0,-0.05682101100683212,-0.04261575639247894,0,0.018940337002277374,0.01420525275170803,0,-0.018940337002277374,-0.023675421252846718,0,0.018940337002277374,0.01420525275170803,0,-0.018940337002277374,0,0,0.17046302556991577,0,0,-0.0757613480091095,-0.02841050550341606,0,0.018940337002277374,0.02841050550341606,0,-0.018940337002277374,-0.018940337002277374,0,0.11364202201366425,0.02841050550341606,0,-0.03788067400455475,-0.01420525275170803,0,0.018940337002277374,0.018940337002277374,0,0,-0.004735084250569344,0,0.3788067400455475,0.018940337002277374,0,-0.018940337002277374,-0.02841050550341606,0,0,0,0,0,-0.01420525275170803,0,0.018940337002277374,0,0,-0.018940337002277374,-0.009470168501138687,0,0,0,0,-0.05682101100683212,-0.018940337002277374,0,0.151522696018219,0.08523151278495789,0,0,-0.02841050550341606,0,0,0.01420525275170803,0,-0.09470168501138687,-0.02841050550341606,0,0,0.047350842505693436,0,-0.05682101100683212,-0.018940337002277374,0,0,0.02841050550341606,0,-0.03788067400455475,-0.023675421252846718,0,0.11364202201366425,0.01420525275170803,0,-0.05682101100683212,-0.047350842505693436,0,0.05682101100683212,0.018940337002277374,0,-0.03788067400455475,-0.033145587891340256,0,0.13258235156536102,0.009470168501138687,0,-0.03788067400455475,-0.02841050550341606,0,0.18940337002277374,0.018940337002277374,0,-0.018940337002277374,-0.009470168501138687,0,0.018940337002277374,0.08996660262346268,0,-0.018940337002277374,-0.05682101100683212,0,0.454568088054657,0.009470168501138687,0,-0.0757613480091095,-0.01420525275170803,0,0.11364202201366425,0.05682101100683212,0,-0.03788067400455475,-0.018940337002277374,0,0,0.009470168501138687,0,-0.151522696018219,-0.01420525275170803,0,0.09470168501138687,0.19887353479862213,0,-0.03788067400455475,-0.01420525275170803,0,0,0.01420525275170803,0,-0.018940337002277374,0,0,0.018940337002277374,0.009470168501138687,0,-0.0757613480091095,-0.009470168501138687,0,0,0.009470168501138687,0,-0.05682101100683212,-0.033145587891340256,0,0.018940337002277374,0.0757613480091095,0,0,-0.004735084250569344,0,0,0,0,-0.018940337002277374,-0.05208592489361763,0,0.05682101100683212,0,0,-0.018940337002277374,-0.02841050550341606,0,0.05682101100683212,0.04261575639247894,0,-0.05682101100683212,-0.033145587891340256,0,0.05682101100683212,0.05682101100683212,0,0,-0.02841050550341606,0,0,0.047350842505693436,0,0,-0.02841050550341606,0,0.03788067400455475,0.06629117578268051,0,-0.03788067400455475,-0.023675421252846718,0,0,0.09943676739931107,0,-0.05682101100683212,-0.023675421252846718,0,0.0757613480091095,0.01420525275170803,0,-0.018940337002277374,-0.023675421252846718,0,0,0.23201912641525269,0,-0.0757613480091095,-0.04261575639247894,0,0,0.06155609339475632,0,-0.018940337002277374,-0.023675421252846718,0,0,0.04261575639247894,0,0,-0.09470168501138687,0,0,0.05208592489361763,0,-0.0757613480091095,-0.023675421252846718,0,0,0.02841050550341606,0,0,-0.018940337002277374,0,0.05682101100683212,0.01420525275170803,0,-0.11364202201366425,-0.03788067400455475,0,0.03788067400455475,0.09470168501138687,0,0,-0.033145587891340256,0,0.11364202201366425,0.009470168501138687,0,-0.05682101100683212,0,0,0.018940337002277374,0.004735084250569344,0,-0.0757613480091095,-0.01420525275170803,0,0.03788067400455475,0.02841050550341606,0,-0.018940337002277374,-0.023675421252846718,0,0,0.06629117578268051,0,-0.0757613480091095,-0.02841050550341606,0,0.03788067400455475,0.02841050550341606,0,0,-0.023675421252846718,0,0.018940337002277374,0,0,-0.0757613480091095,-0.01420525275170803,0,0,0.018940337002277374,0,-0.018940337002277374,-0.02841050550341606,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-217 -->\n*** set the top of memory to F0xx\n.,F47D 38       SEC             read the top of memory\n.,F47E A9 F0    LDA #$F0        set $F000\n.,F480 4C 2D FE JMP $FE2D       set the top of memory and return\n\n*** initialise RS232 output\n.,F483 A9 7F    LDA #$7F        disable all interrupts\n.,F485 8D 0D DD STA $DD0D       save VIA 2 ICR\n.,F488 A9 06    LDA #$06        set RS232 DTR output, RS232 RTS output\n.,F48A 8D 03 DD STA $DD03       save VIA 2 DDRB, RS232 port\n.,F48D 8D 01 DD STA $DD01       save VIA 2 DRB, RS232 port\n.,F490 A9 04    LDA #$04        mask xxxx x1xx, set RS232 Tx DATA high\n.,F492 0D 00 DD ORA $DD00       OR it with VIA 2 DRA, serial port and video address\n.,F495 8D 00 DD STA $DD00       save VIA 2 DRA, serial port and video address\n.,F498 A0 00    LDY #$00        clear Y\n.,F49A 8C A1 02 STY $02A1       clear the RS-232 interrupt enable byte\n.,F49D 60       RTS\n\n*** load RAM from a device\n.,F49E 86 C3    STX $C3         set kernal setup pointer low byte\n.,F4A0 84 C4    STY $C4         set kernal setup pointer high byte\n.,F4A2 6C 30 03 JMP ($0330)     do LOAD vector, usually points to $F4A5","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-217"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0.029048878699541092,0.014524439349770546,0,0,-0.014524439349770546,0,0,0.007262219674885273,0,-0.029048878699541092,-0.014524439349770546,0,0.029048878699541092,0.007262219674885273,0,0,-0.03631109744310379,0,0.029048878699541092,0.021786658093333244,0,0,-0.007262219674885273,0,0,0.007262219674885273,0,0,0,0,0.058097757399082184,0.09440885484218597,0,-0.029048878699541092,-0.029048878699541092,0,0.029048878699541092,0.058097757399082184,0,0,-0.014524439349770546,0,0,0,0,0,-0.14524438977241516,0,0,0,0,-0.029048878699541092,-0.007262219674885273,0,0.14524438977241516,0.029048878699541092,0,0,-0.014524439349770546,0,0,0.007262219674885273,0,0,0,0,0.029048878699541092,0.04357331618666649,0,0,-0.007262219674885273,0,0.029048878699541092,0.03631109744310379,0,0,-0.10167107731103897,0,0.029048878699541092,0.014524439349770546,0,-0.029048878699541092,0,0,0.058097757399082184,0,0,-0.17429326474666595,-0.007262219674885273,0,0,0,0,-0.029048878699541092,-0.03631109744310379,0,0,0.029048878699541092,0,-0.029048878699541092,0,0,0.20334215462207794,0,0,-0.058097757399082184,-0.014524439349770546,0,0.029048878699541092,0.014524439349770546,0,0,0,0,0.029048878699541092,0.021786658093333244,0,-0.058097757399082184,-0.007262219674885273,0,0,0,0,-0.029048878699541092,0,0,0.3195376694202423,0.029048878699541092,0,-0.029048878699541092,-0.014524439349770546,0,0.029048878699541092,0.014524439349770546,0,0,0,0,0.058097757399082184,0,0,0,0,0,0.029048878699541092,0,0,-0.14524438977241516,-0.029048878699541092,0,0.2904887795448303,0.07262219488620758,0,-0.058097757399082184,-0.007262219674885273,0,0.029048878699541092,0,0,0,-0.058097757399082184,0,0,0.014524439349770546,0,0,0,0,0.058097757399082184,0.021786658093333244,0,-0.058097757399082184,-0.007262219674885273,0,0,0.014524439349770546,0,0,-0.014524439349770546,0,0.029048878699541092,0.03631109744310379,0,-0.058097757399082184,-0.08714663237333298,0,0.029048878699541092,0.007262219674885273,0,-0.14524438977241516,-0.06535997986793518,0,0.08714663237333298,0,0,-0.029048878699541092,-0.014524439349770546,0,0.029048878699541092,0.10167107731103897,0,0,-0.029048878699541092,0,0.3776354193687439,0.014524439349770546,0,0,-0.014524439349770546,0,0.23239102959632874,0.021786658093333244,0,0,-0.029048878699541092,0,0,0,0,-0.11619551479816437,-0.021786658093333244,0,0,0.16703104972839355,0,-0.029048878699541092,-0.014524439349770546,0,0.058097757399082184,0.021786658093333244,0,0,0,0,0.029048878699541092,0.029048878699541092,0,0,0,0,0.11619551479816437,0.029048878699541092,0,-0.029048878699541092,-0.07988441735506058,0,0.08714663237333298,0.15250661969184875,0,0,-0.029048878699541092,0,0.058097757399082184,0.014524439349770546,0,0,0,0,0,0,0,-0.029048878699541092,-0.007262219674885273,0,0,0.06535997986793518,0,-0.029048878699541092,-0.029048878699541092,0,0.058097757399082184,0,0,0,0,0,0,0.021786658093333244,0,0,-0.029048878699541092,0,0,0.021786658093333244,0,0,-0.07262219488620758,0,0.029048878699541092,0.050835538655519485,0,-0.029048878699541092,-0.021786658093333244,0,0,0.029048878699541092,0,0,-0.04357331618666649,0,0,0.18881770968437195,0,0,-0.007262219674885273,0,0,0.11619551479816437,0,0,-0.007262219674885273,0,0,0.050835538655519485,0,0,-0.07262219488620758,0,0,0.007262219674885273,0,-0.058097757399082184,-0.014524439349770546,0,0,0.03631109744310379,0,-0.029048878699541092,-0.014524439349770546,0,0,0.014524439349770546,0,-0.23239102959632874,-0.007262219674885273,0,0,0.13798217475414276,0,0,-0.021786658093333244,0,0.029048878699541092,0.050835538655519485,0,-0.029048878699541092,0,0,0,0.04357331618666649,0,0,0,0,0.029048878699541092,0.007262219674885273,0,0,-0.050835538655519485,0,0.029048878699541092,0.07262219488620758,0,-0.20334215462207794,-0.029048878699541092,0,0,0.03631109744310379,0,0,0,0,0,0,0,0,0,0,0,0.014524439349770546,0,-0.058097757399082184,-0.014524439349770546,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-221 -->\n*** save RAM to device, A = index to start address, XY = end address low/high\n.,F5DD 86 AE    STX $AE         save end address low byte\n.,F5DF 84 AF    STY $AF         save end address high byte\n.,F5E1 AA       TAX             copy index to start pointer\n.,F5E2 B5 00    LDA $00,X       get start address low byte\n.,F5E4 85 C1    STA $C1         set I/O start addresses low byte\n.,F5E6 B5 01    LDA $01,X       get start address high byte\n.,F5E8 85 C2    STA $C2         set I/O start addresses high byte\n.,F5EA 6C 32 03 JMP ($0332)     go save, usually points to $F685","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-221"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0.02910592220723629,0.0072764805518090725,0,0,-0.025467682629823685,0,0.05821184441447258,0.02182944305241108,0,0,-0.04365888610482216,0,0.014552961103618145,0,0,-0.05821184441447258,-0.014552961103618145,0,0.04365888610482216,0.032744161784648895,0,0,-0.0072764805518090725,0,0,0.018191201612353325,0,-0.014552961103618145,-0.02182944305241108,0,0,0.10187073051929474,0,0,0,0,0,0.014552961103618145,0,0,-0.018191201612353325,0,0,0.02910592220723629,0,-0.08731777220964432,-0.02182944305241108,0,0,0.0072764805518090725,0,0,-0.01091472152620554,0,0.04365888610482216,0.01091472152620554,0,-0.014552961103618145,-0.02910592220723629,0,0.04365888610482216,0.01091472152620554,0,-0.0727648064494133,-0.025467682629823685,0,0.0727648064494133,0,0,0,-0.02910592220723629,0,0,0.047297123819589615,0,0,-0.018191201612353325,0,0.014552961103618145,0.02182944305241108,0,0,-0.018191201612353325,0,0.02910592220723629,0,0,-0.02910592220723629,-0.1127854511141777,0,0,0,0,-0.08731777220964432,-0.08731777220964432,0,0,0.02182944305241108,0,-0.04365888610482216,-0.0072764805518090725,0,0.18918849527835846,0.05093536525964737,0,-0.10187073051929474,0,0,0,0.0072764805518090725,0,-0.014552961103618145,-0.02910592220723629,0,0.04365888610482216,0.025467682629823685,0,-0.02910592220723629,-0.01091472152620554,0,0.02910592220723629,0.0036382402759045362,0,-0.014552961103618145,-0.025467682629823685,0,0.5384595990180969,0,0,-0.04365888610482216,-0.0036382402759045362,0,0,0.0036382402759045362,0,0,0,0,0.014552961103618145,0.0072764805518090725,0,0,-0.054573606699705124,0,0.014552961103618145,0,0,-0.05821184441447258,0,0,0.11642368882894516,0.025467682629823685,0,0,-0.01091472152620554,0,0,0.03638240322470665,0,-0.02910592220723629,-0.04365888610482216,0,0,0.040020644664764404,0,-0.014552961103618145,-0.0036382402759045362,0,0,0.0036382402759045362,0,-0.04365888610482216,-0.0036382402759045362,0,0,0.01091472152620554,0,-0.014552961103618145,0,0,0.05821184441447258,0.014552961103618145,0,-0.02910592220723629,-0.02910592220723629,0,0,0.0036382402759045362,0,-0.02910592220723629,-0.047297123819589615,0,0.10187073051929474,0.01091472152620554,0,-0.02910592220723629,-0.02910592220723629,0,0.014552961103618145,0.09459424763917923,0,0,-0.10187073051929474,0,0.40748292207717896,0,0,0,-0.047297123819589615,0,0.02910592220723629,0.02910592220723629,0,-0.04365888610482216,-0.014552961103618145,0,0,0.02910592220723629,0,-0.02910592220723629,-0.0072764805518090725,0,0,0.2728680372238159,0,-0.014552961103618145,-0.03638240322470665,0,0.014552961103618145,0.01091472152620554,0,-0.08731777220964432,0,0,0.014552961103618145,0.0072764805518090725,0,-0.10187073051929474,-0.0036382402759045362,0,0,0.0072764805518090725,0,0,-0.02910592220723629,0,0.16008257865905762,0.05821184441447258,0,-0.04365888610482216,0,0,0,0,0,-0.014552961103618145,-0.03638240322470665,0,0,0,0,-0.04365888610482216,-0.0072764805518090725,0,0,0.01091472152620554,0,-0.02910592220723629,-0.025467682629823685,0,0.02910592220723629,0.01091472152620554,0,-0.02910592220723629,-0.025467682629823685,0,0.08731777220964432,0.047297123819589615,0,0,-0.014552961103618145,0,0,0,0,0,-0.014552961103618145,0,0.014552961103618145,0.054573606699705124,0,-0.04365888610482216,-0.014552961103618145,0,0.014552961103618145,0.014552961103618145,0,-0.0727648064494133,-0.0072764805518090725,0,0,0.20374146103858948,0,-0.014552961103618145,-0.02182944305241108,0,0.014552961103618145,0.014552961103618145,0,0,-0.032744161784648895,0,0.02910592220723629,0.047297123819589615,0,-0.04365888610482216,-0.040020644664764404,0,0,0,0,0,-0.01091472152620554,0,0.014552961103618145,0.018191201612353325,0,-0.014552961103618145,-0.05093536525964737,0,0.05821184441447258,0.014552961103618145,0,-0.02910592220723629,-0.054573606699705124,0,0.014552961103618145,0.13461489975452423,0,-0.014552961103618145,-0.01091472152620554,0,0.014552961103618145,0.08004128932952881,0,-0.014552961103618145,-0.02182944305241108,0,0.014552961103618145,0.0036382402759045362,0,0,-0.0072764805518090725,0,0,0.0036382402759045362,0,-0.05821184441447258,-0.03638240322470665,0,0.014552961103618145,0.02910592220723629,0,-0.014552961103618145,-0.014552961103618145,0,0.04365888610482216,0.014552961103618145,0,-0.02910592220723629,-0.02182944305241108,0,0,0.04365888610482216,0,-0.20374146103858948,-0.0036382402759045362,0,0,0,0,-0.16008257865905762,-0.01091472152620554,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-230 -->\n*** find specific tape header\n.,F7EA 20 2C F7 JSR $F72C       find tape header, exit with header in buffer\n.,F7ED B0 1D    BCS $F80C       just exit if error\n.,F7EF A0 05    LDY #$05        index to name\n.,F7F1 84 9F    STY $9F         save as tape buffer index\n.,F7F3 A0 00    LDY #$00        clear Y\n.,F7F5 84 9E    STY $9E         save as name buffer index\n.,F7F7 C4 B7    CPY $B7         compare with file name length\n.,F7F9 F0 10    BEQ $F80B       ok exit if match\n.,F7FB B1 BB    LDA ($BB),Y     get file name byte\n.,F7FD A4 9F    LDY $9F         get index to tape buffer\n.,F7FF D1 B2    CMP ($B2),Y     compare with tape header name byte\n.,F801 D0 E7    BNE $F7EA       if no match go get next header\n.,F803 E6 9E    INC $9E         else increment name buffer index\n.,F805 E6 9F    INC $9F         increment tape buffer index\n.,F807 A4 9E    LDY $9E         get name buffer index\n.,F809 D0 EC    BNE $F7F7       loop, branch always\n.,F80B 18       CLC             flag ok\n.,F80C 60       RTS\n\n*** bump tape pointer\n.,F80D 20 D0 F7 JSR $F7D0       get tape buffer start pointer in XY\n.,F810 E6 A6    INC $A6         increment tape buffer index\n.,F812 A4 A6    LDY $A6         get tape buffer index\n.,F814 C0 C0    CPY #$C0        compare with buffer length\n.,F816 60       RTS","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-230"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0.005531958304345608,0,0,0,0,0,0.027659792453050613,0,0,-0.005531958304345608,0,0.04425566643476486,0.016595875844359398,0,-0.04425566643476486,-0.016595875844359398,0,0.02212783321738243,0.033191751688718796,0,0,-0.016595875844359398,0,0.02212783321738243,0.02212783321738243,0,0,0,0,0.02212783321738243,0.0940432921051979,0,0,-0.08297937363386154,0,0,0.06638350337743759,0,0,-0.011063916608691216,0,0.04425566643476486,0,0,-0.04425566643476486,-0.17702266573905945,0,0.02212783321738243,0,0,0,-0.005531958304345608,0,0.02212783321738243,0.016595875844359398,0,-0.02212783321738243,-0.02212783321738243,0,0.02212783321738243,0,0,0,-0.033191751688718796,0,0.02212783321738243,0.027659792453050613,0,0,-0.011063916608691216,0,0,0,0,0,-0.08851133286952972,0,0,0.02212783321738243,0,0,0,0,0,0.02212783321738243,0,-0.06638350337743759,-0.033191751688718796,0,0,0.005531958304345608,0,-0.02212783321738243,-0.016595875844359398,0,0,0.011063916608691216,0,0,0,0,0.19915050268173218,0.005531958304345608,0,-0.04425566643476486,-0.005531958304345608,0,0,0.02212783321738243,0,0,-0.02212783321738243,0,0.02212783321738243,0.011063916608691216,0,-0.04425566643476486,0,0,0.02212783321738243,0.016595875844359398,0,0,0,0,0.4204288423061371,0.016595875844359398,0,0,0,0,0,0,0,0,0,0,0.19915050268173218,0.027659792453050613,0,0,-0.02212783321738243,0,0,0.016595875844359398,0,-0.04425566643476486,-0.03872371092438698,0,0.24340617656707764,0.016595875844359398,0,0,-0.011063916608691216,0,0.02212783321738243,0.011063916608691216,0,-0.04425566643476486,-0.07744742184877396,0,0,0.011063916608691216,0,0,0,0,0,0,0,-0.11063916981220245,-0.011063916608691216,0,0.02212783321738243,0,0,0,-0.016595875844359398,0,0.06638350337743759,0.011063916608691216,0,-0.02212783321738243,-0.033191751688718796,0,0.02212783321738243,0,0,-0.06638350337743759,-0.05531958490610123,0,0.13276700675487518,0.011063916608691216,0,-0.06638350337743759,0,0,0.04425566643476486,0.11063916981220245,0,0,-0.033191751688718796,0,0.33191749453544617,0,0,-0.02212783321738243,-0.005531958304345608,0,0.2212783396244049,0.011063916608691216,0,-0.04425566643476486,-0.02212783321738243,0,0,0.011063916608691216,0,-0.08851133286952972,0,0,0,0.2212783396244049,0,-0.02212783321738243,-0.011063916608691216,0,0.06638350337743759,0.005531958304345608,0,0,0,0,0,0.10510721057653427,0,0,0,0,0.02212783321738243,0.005531958304345608,0,-0.04425566643476486,-0.02212783321738243,0,0,0.12170308828353882,0,0,0,0,0,0.02212783321738243,0,0,-0.033191751688718796,0,0,0.005531958304345608,0,-0.04425566643476486,0,0,0.02212783321738243,0.005531958304345608,0,-0.02212783321738243,-0.06085154414176941,0,0.04425566643476486,0.016595875844359398,0,0,0,0,0.02212783321738243,0.03872371092438698,0,-0.02212783321738243,-0.011063916608691216,0,0,0.011063916608691216,0,0,-0.033191751688718796,0,0,0.06638350337743759,0,0,-0.033191751688718796,0,0.02212783321738243,0.02212783321738243,0,0,-0.016595875844359398,0,0.02212783321738243,0.16595874726772308,0,0,-0.016595875844359398,0,0,0.11063916981220245,0,0,-0.02212783321738243,0,0.02212783321738243,0.049787625670433044,0,0,-0.05531958490610123,0,0.02212783321738243,0,0,-0.1548948436975479,-0.011063916608691216,0,0.02212783321738243,0.03872371092438698,0,0,-0.011063916608691216,0,0,0.005531958304345608,0,-0.3097896873950958,0,0,0,0.11617112904787064,0,0,-0.02212783321738243,0,0,0,0,-0.04425566643476486,0,0,0,0.049787625670433044,0,-0.06638350337743759,0,0,0.04425566643476486,0,0,0,-0.033191751688718796,0,0,0.07191546261310577,0,-0.17702266573905945,-0.011063916608691216,0,0.04425566643476486,0.027659792453050613,0,0,-0.011063916608691216,0,0.04425566643476486,0.011063916608691216,0,-0.04425566643476486,-0.011063916608691216,0,0,0,0,-0.02212783321738243,-0.027659792453050613,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-239 -->\n*** copy I/O start address to buffer address\n.,FB8E A5 C2    LDA $C2         get I/O start address high byte\n.,FB90 85 AD    STA $AD         set buffer address high byte\n.,FB92 A5 C1    LDA $C1         get I/O start address low byte\n.,FB94 85 AC    STA $AC         set buffer address low byte\n.,FB96 60       RTS\n\n*** new tape byte setup\n.,FB97 A9 08    LDA #$08        eight bits to do\n.,FB99 85 A3    STA $A3         set bit count\n.,FB9B A9 00    LDA #$00        clear A\n.,FB9D 85 A4    STA $A4         clear tape bit cycle phase\n.,FB9F 85 A8    STA $A8         clear start bit first cycle done flag\n.,FBA1 85 9B    STA $9B         clear byte parity\n.,FBA3 85 A9    STA $A9         clear start bit check flag, set no start bit yet\n.,FBA5 60       RTS","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-239"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0.010590129531919956,0.00794259738177061,0,-0.042360518127679825,-0.03177038952708244,0,0.03177038952708244,0.018532726913690567,0,-0.052950646728277206,-0.037065453827381134,0,0.010590129531919956,0.010590129531919956,0,-0.042360518127679825,-0.04500805214047432,0,0.021180259063839912,0.013237661682069302,0,0,-0.02912285551428795,0,0,0.013237661682069302,0,0,0,0,0.06354077905416489,0.13502414524555206,0,-0.010590129531919956,-0.052950646728277206,0,0.010590129531919956,0.03441791981458664,0,-0.03177038952708244,-0.00794259738177061,0,0,0,0,-0.03177038952708244,-0.0582457110285759,0,0,0.018532726913690567,0,-0.021180259063839912,-0.013237661682069302,0,0.09531116485595703,0.01588519476354122,0,-0.021180259063839912,-0.042360518127679825,0,0.03177038952708244,0.00794259738177061,0,-0.010590129531919956,-0.037065453827381134,0,0.08472103625535965,0.023827791213989258,0,-0.021180259063839912,-0.01588519476354122,0,0,0.01588519476354122,0,0,-0.018532726913690567,0,0.052950646728277206,0.02912285551428795,0,-0.021180259063839912,0,0,0.03177038952708244,0.005295064765959978,0,-0.08472103625535965,-0.03177038952708244,0,0.010590129531919956,0,0,-0.021180259063839912,-0.010590129531919956,0,0,0.02912285551428795,0,-0.042360518127679825,-0.023827791213989258,0,0.09531116485595703,0.018532726913690567,0,0,-0.03441791981458664,0,0.021180259063839912,0.005295064765959978,0,-0.021180259063839912,-0.023827791213989258,0,0.010590129531919956,0.013237661682069302,0,-0.021180259063839912,-0.013237661682069302,0,0.010590129531919956,0.00794259738177061,0,-0.010590129531919956,-0.00794259738177061,0,0.4977360963821411,0.03441791981458664,0,-0.06354077905416489,-0.018532726913690567,0,0,0.00794259738177061,0,-0.021180259063839912,-0.021180259063839912,0,0.021180259063839912,0.005295064765959978,0,-0.010590129531919956,-0.01588519476354122,0,0.03177038952708244,0,0,-0.08472103625535965,-0.03441791981458664,0,0.08472103625535965,0.047655582427978516,0,-0.010590129531919956,-0.013237661682069302,0,0.021180259063839912,0.01588519476354122,0,-0.010590129531919956,-0.02912285551428795,0,0,0.047655582427978516,0,-0.010590129531919956,-0.01588519476354122,0,0,0.005295064765959978,0,-0.08472103625535965,-0.005295064765959978,0,0.010590129531919956,0.026475323364138603,0,-0.021180259063839912,-0.026475323364138603,0,0.010590129531919956,0.023827791213989258,0,-0.08472103625535965,-0.05030311644077301,0,0.021180259063839912,0.00794259738177061,0,-0.07413090765476227,-0.018532726913690567,0,0.03177038952708244,0.010590129531919956,0,-0.07413090765476227,-0.021180259063839912,0,0.010590129531919956,0.05030311644077301,0,0,-0.013237661682069302,0,0.5400965809822083,0.010590129531919956,0,-0.021180259063839912,-0.013237661682069302,0,0.13767167925834656,0.00794259738177061,0,-0.010590129531919956,-0.021180259063839912,0,0,0.013237661682069302,0,-0.042360518127679825,-0.018532726913690567,0,0.03177038952708244,0.25151556730270386,0,-0.010590129531919956,-0.042360518127679825,0,0.021180259063839912,0.005295064765959978,0,-0.12708155810832977,-0.010590129531919956,0,0.03177038952708244,0.010590129531919956,0,-0.021180259063839912,-0.005295064765959978,0,0.03177038952708244,0.03177038952708244,0,0,-0.04500805214047432,0,0.042360518127679825,0.04500805214047432,0,-0.010590129531919956,-0.013237661682069302,0,0.03177038952708244,0.010590129531919956,0,0,-0.013237661682069302,0,0,0,0,-0.021180259063839912,-0.010590129531919956,0,0,0.023827791213989258,0,-0.021180259063839912,-0.047655582427978516,0,0.09531116485595703,0.013237661682069302,0,-0.010590129531919956,-0.013237661682069302,0,0.010590129531919956,0.026475323364138603,0,-0.03177038952708244,-0.047655582427978516,0,0,0.010590129531919956,0,-0.010590129531919956,-0.037065453827381134,0,0.010590129531919956,0.02912285551428795,0,-0.052950646728277206,-0.042360518127679825,0,0.03177038952708244,0.013237661682069302,0,-0.03177038952708244,-0.021180259063839912,0,0.010590129531919956,0.2726958394050598,0,-0.052950646728277206,-0.01588519476354122,0,0.010590129531919956,0.06883583962917328,0,-0.021180259063839912,-0.01588519476354122,0,0.021180259063839912,0.023827791213989258,0,0,-0.021180259063839912,0,0,0.021180259063839912,0,-0.09531116485595703,-0.010590129531919956,0,0,0.013237661682069302,0,-0.010590129531919956,-0.06883583962917328,0,0,0.018532726913690567,0,-0.09531116485595703,-0.013237661682069302,0,0.021180259063839912,0.14031921327114105,0,-0.021180259063839912,-0.01588519476354122,0,0.021180259063839912,0.021180259063839912,0,-0.021180259063839912,-0.010590129531919956,0,0,0.021180259063839912,0,-0.06354077905416489,-0.002647532382979989,0,0.03177038952708244,0.00794259738177061,0,-0.03177038952708244,-0.03177038952708244,0,0.010590129531919956,0.021180259063839912,0,-0.03177038952708244,-0.013237661682069302,0,0.042360518127679825,0.052950646728277206,0,0,-0.00794259738177061,0,0.010590129531919956,0.005295064765959978,0,-0.052950646728277206,-0.018532726913690567,0,0,0,0,-0.010590129531919956,-0.026475323364138603,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-249 -->\n*** test RAM and find RAM end\n.,FD50 A9 00    LDA #$00        clear A\n.,FD52 A8       TAY             clear index\n.,FD53 99 02 00 STA $0002,Y     clear page 0, don't do $0000 or $0001\n.,FD56 99 00 02 STA $0200,Y     clear page 2\n.,FD59 99 00 03 STA $0300,Y     clear page 3\n.,FD5C C8       INY             increment index\n.,FD5D D0 F4    BNE $FD53       loop if more to do\n.,FD5F A2 3C    LDX #$3C        set cassette buffer pointer low byte\n.,FD61 A0 03    LDY #$03        set cassette buffer pointer high byte\n.,FD63 86 B2    STX $B2         save tape buffer start pointer low byte\n.,FD65 84 B3    STY $B3         save tape buffer start pointer high byte\n.,FD67 A8       TAY             clear Y\n.,FD68 A9 03    LDA #$03        set RAM test pointer high byte\n.,FD6A 85 C2    STA $C2         save RAM test pointer high byte\n.,FD6C E6 C2    INC $C2         increment RAM test pointer high byte\n.,FD6E B1 C1    LDA ($C1),Y     \n.,FD70 AA       TAX             \n.,FD71 A9 55    LDA #$55        \n.,FD73 91 C1    STA ($C1),Y     \n.,FD75 D1 C1    CMP ($C1),Y     \n.,FD77 D0 0F    BNE $FD88       \n.,FD79 2A       ROL             \n.,FD7A 91 C1    STA ($C1),Y     \n.,FD7C D1 C1    CMP ($C1),Y     \n.,FD7E D0 08    BNE $FD88       \n.,FD80 8A       TXA             \n.,FD81 91 C1    STA ($C1),Y     \n.,FD83 C8       INY             \n.,FD84 D0 E8    BNE $FD6E       \n.,FD86 F0 E4    BEQ $FD6C       \n.,FD88 98       TYA             \n.,FD89 AA       TAX             \n.,FD8A A4 C2    LDY $C2         \n.,FD8C 18       CLC             \n.,FD8D 20 2D FE JSR $FE2D       set the top of memory\n.,FD90 A9 08    LDA #$08        \n.,FD92 8D 82 02 STA $0282       save the OS start of memory high byte\n.,FD95 A9 04    LDA #$04        \n.,FD97 8D 88 02 STA $0288       save the screen memory page\n.,FD9A 60       RTS","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-249"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0,0,0,0,0,0,0.012690804898738861,0,0,-0.025381609797477722,0,0.050763219594955444,0,0,0,0,0,0.2538160979747772,0.050763219594955444,0,0,-0.012690804898738861,0,0,0.050763219594955444,0,-0.050763219594955444,0,0,0,0.1269080489873886,0,0,-0.025381609797477722,0,0,0,0,-0.050763219594955444,0,0,0,0.012690804898738861,0,0,0,0,0.050763219594955444,0,0,0,-0.0634540244936943,0,0.050763219594955444,0.012690804898738861,0,0,-0.025381609797477722,0,0,0,0,0,0,0,0.050763219594955444,0,0,0,0,0,0,0.012690804898738861,0,0,-0.025381609797477722,0,0,0.012690804898738861,0,0,0,0,0,0,0,0,-0.11421724408864975,0,0,0.03807241469621658,0,-0.050763219594955444,-0.025381609797477722,0,0,0.012690804898738861,0,0,0,0,0.3553425371646881,0.012690804898738861,0,-0.050763219594955444,-0.012690804898738861,0,0,0.025381609797477722,0,0,0,0,0.050763219594955444,0.1269080489873886,0,-0.10152643918991089,0,0,0,0,0,0,-0.03807241469621658,0,0.3553425371646881,0,0,0,0,0,0.050763219594955444,0,0,0,-0.025381609797477722,0,0,0.012690804898738861,0,0,0,0,0,0.08883563429117203,0,0,-0.012690804898738861,0,0.3553425371646881,0.025381609797477722,0,0,0,0,0,0,0,0,0,0,0.15228965878486633,0.025381609797477722,0,0,-0.012690804898738861,0,0,0,0,-0.050763219594955444,-0.012690804898738861,0,0,0,0,0,0,0,0.050763219594955444,0,0,0,0,0,0,0,0,0,-0.03807241469621658,0,0.20305287837982178,0,0,-0.050763219594955444,0,0,0.10152643918991089,0.17767126858234406,0,0,-0.07614482939243317,0,0,0.012690804898738861,0,0,-0.012690804898738861,0,0,0.025381609797477722,0,0,-0.050763219594955444,0,0.050763219594955444,0,0,0,0,0,0,0.1903620809316635,0,-0.15228965878486633,0,0,0.050763219594955444,0.08883563429117203,0,0,0,0,0,0,0,0,-0.012690804898738861,0,0,0,0,0,0,0,0.050763219594955444,0.17767126858234406,0,0,-0.012690804898738861,0,0.050763219594955444,0,0,0,0,0,0,0.08883563429117203,0,-0.050763219594955444,0,0,0.050763219594955444,0.012690804898738861,0,0,-0.025381609797477722,0,0.050763219594955444,0,0,0,0,0,0.050763219594955444,0.03807241469621658,0,-0.050763219594955444,0,0,0,0,0,0,0,0,0,0.10152643918991089,0,0,-0.025381609797477722,0,0,0.050763219594955444,0,-0.050763219594955444,0,0,0,0,0,0,-0.012690804898738861,0,0,0,0,0,0,0,0.050763219594955444,0.11421724408864975,0,0,-0.012690804898738861,0,0.2538160979747772,0,0,-0.050763219594955444,-0.07614482939243317,0,0,0.03807241469621658,0,0,-0.025381609797477722,0,0,0,0,0,0,0,0,0.08883563429117203,0,-0.050763219594955444,0,0,0,0.03807241469621658,0,-0.050763219594955444,0,0,0,0.025381609797477722,0,0,0,0,0,0,0,0,-0.025381609797477722,0,0,0.11421724408864975,0,-0.050763219594955444,0,0,0,0.025381609797477722,0,0,0,0,0,0.0634540244936943,0,-0.20305287837982178,-0.025381609797477722,0,0.050763219594955444,0,0,-0.050763219594955444,-0.012690804898738861,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-250 -->\n*** tape IRQ vectors\n.:FD9B 6A FC                    $08 write tape leader IRQ routine\n.:FD9D CD FB                    $0A tape write IRQ routine\n.:FD9F 31 EA                    $0C normal IRQ vector\n.:FDA1 2C F9                    $0E read tape bits IRQ routine","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-250"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0,0,0,-0.0730714425444603,0,0,0.0052193887531757355,0,0,-0.041755110025405884,0,0.020877555012702942,0.010438777506351471,0,0,-0.0730714425444603,0,0.041755110025405884,0.10438777506351471,0,-0.041755110025405884,-0.010438777506351471,0,0.020877555012702942,0.0052193887531757355,0,0,-0.020877555012702942,0,0,0.07829082757234573,0,-0.041755110025405884,0,0,0,0.020877555012702942,0,-0.06263266503810883,0,0,0,0.010438777506351471,0,0,-0.11482655256986618,0,0.020877555012702942,0.06263266503810883,0,0,-0.010438777506351471,0,0.08351022005081177,0.010438777506351471,0,-0.020877555012702942,-0.020877555012702942,0,0,0.010438777506351471,0,0,-0.010438777506351471,0,0.020877555012702942,0,0,0,0,0,0,0,0,-0.020877555012702942,-0.015658166259527206,0,0.18789799511432648,0.020877555012702942,0,0,0,0,0.08351022005081177,0,0,-0.10438777506351471,-0.12004593759775162,0,0.041755110025405884,0.020877555012702942,0,-0.041755110025405884,-0.020877555012702942,0,0.020877555012702942,0.0052193887531757355,0,0,0,0,0.16702044010162354,0.0052193887531757355,0,-0.08351022005081177,0,0,0,0.015658166259527206,0,0,0,0,0.020877555012702942,0.020877555012702942,0,-0.06263266503810883,-0.03653572127223015,0,0,0.010438777506351471,0,-0.041755110025405884,-0.010438777506351471,0,0.3549184203147888,0.0052193887531757355,0,-0.06263266503810883,-0.052193887531757355,0,0,0.020877555012702942,0,-0.08351022005081177,-0.03131633251905441,0,0,0,0,-0.020877555012702942,-0.0052193887531757355,0,0,0.010438777506351471,0,-0.1461428850889206,0,0,0.16702044010162354,0.041755110025405884,0,-0.020877555012702942,-0.010438777506351471,0,0.041755110025405884,0.0052193887531757355,0,0,-0.041755110025405884,0,0.020877555012702942,0.010438777506351471,0,0,0,0,0,0.0052193887531757355,0,-0.06263266503810883,-0.020877555012702942,0,0,0.09394899755716324,0,-0.16702044010162354,0,0,0.020877555012702942,0.041755110025405884,0,-0.08351022005081177,-0.052193887531757355,0,0,0.020877555012702942,0,-0.041755110025405884,-0.026096943765878677,0,0.2505306601524353,0.020877555012702942,0,-0.041755110025405884,0,0,0.020877555012702942,0.08351022005081177,0,-0.041755110025405884,-0.0887296050786972,0,0.31316331028938293,0.0052193887531757355,0,0,-0.0052193887531757355,0,0.08351022005081177,0.010438777506351471,0,0,-0.03131633251905441,0,0,0,0,-0.12526533007621765,-0.020877555012702942,0,0.2505306601524353,0.18267861008644104,0,-0.041755110025405884,-0.03131633251905441,0,0,0.010438777506351471,0,0,-0.052193887531757355,0,0.041755110025405884,0.0052193887531757355,0,-0.041755110025405884,-0.010438777506351471,0,0,0,0,0,-0.08351022005081177,0,0,0.08351022005081177,0,-0.020877555012702942,-0.026096943765878677,0,0,0.020877555012702942,0,0,0,0,0,0.015658166259527206,0,-0.10438777506351471,0,0,0.041755110025405884,0.020877555012702942,0,-0.041755110025405884,-0.03653572127223015,0,0.020877555012702942,0,0,0,-0.08351022005081177,0,0.020877555012702942,0.015658166259527206,0,0,-0.041755110025405884,0,0.020877555012702942,0,0,0,-0.026096943765878677,0,0,0.17223982512950897,0,-0.06263266503810883,-0.020877555012702942,0,0,0.03131633251905441,0,-0.041755110025405884,-0.04697449877858162,0,0.020877555012702942,0.16702044010162354,0,-0.12526533007621765,-0.010438777506351471,0,0.08351022005081177,0.04697449877858162,0,0,0,0,0,0.041755110025405884,0,-0.020877555012702942,-0.08351022005081177,0,0,0.12526533007621765,0,0,-0.020877555012702942,0,0,0.0052193887531757355,0,0,-0.015658166259527206,0,0.020877555012702942,0.020877555012702942,0,-0.16702044010162354,-0.03131633251905441,0,0,0.0887296050786972,0,0,-0.015658166259527206,0,0.020877555012702942,0,0,-0.041755110025405884,-0.03131633251905441,0,0,0,0,0,-0.0052193887531757355,0,0,0,0,0,-0.0887296050786972,0,0,0.06263266503810883,0,-0.020877555012702942,-0.026096943765878677,0,0.041755110025405884,0.020877555012702942,0,0,0,0,0,0.015658166259527206,0,-0.18789799511432648,0,0,0.020877555012702942,0.010438777506351471,0,-0.020877555012702942,-0.015658166259527206,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-253 -->\n*** read the top of memory\n.,FE27 AE 83 02 LDX $0283       get memory top low byte\n.,FE2A AC 84 02 LDY $0284       get memory top high byte\n\n*** set the top of memory\n.,FE2D 8E 83 02 STX $0283       set memory top low byte\n.,FE30 8C 84 02 STY $0284       set memory top high byte\n.,FE33 60       RTS\n\n*** read/set the bottom of memory, Cb = 1 to read, Cb = 0 to set\n.,FE34 90 06    BCC $FE3C       if Cb clear go set the bottom of memory\n.,FE36 AE 81 02 LDX $0281       get the OS start of memory low byte\n.,FE39 AC 82 02 LDY $0282       get the OS start of memory high byte\n.,FE3C 8E 81 02 STX $0281       save the OS start of memory low byte\n.,FE3F 8C 82 02 STY $0282       save the OS start of memory high byte\n.,FE42 60       RTS\n\n*** NMI vector\n.,FE43 78       SEI             disable the interrupts\n.,FE44 6C 18 03 JMP ($0318)     do NMI vector","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-253"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0,0.04617758467793465,0,0,-0.005432656966149807,0,0,0.07334087044000626,0,-0.043461255729198456,-0.02987961284816265,0,0.021730627864599228,0.010865313932299614,0,0,-0.07605719566345215,0,0.10865313559770584,0.010865313932299614,0,-0.010865313932299614,-0.008148984983563423,0,0.03259593993425369,0.008148984983563423,0,0,-0.01358164194971323,0,0.010865313932299614,0.10865313559770584,0,-0.03259593993425369,-0.08420617878437042,0,0.021730627864599228,0.038028597831726074,0,-0.010865313932299614,-0.0027163284830749035,0,0,0.021730627864599228,0,-0.021730627864599228,-0.10322047770023346,0,0.1521143913269043,0.0027163284830749035,0,0,-0.016297969967126846,0,0.1521143913269043,0.08420617878437042,0,0,-0.016297969967126846,0,0.010865313932299614,0,0,0,-0.043461255729198456,0,0.05432656779885292,0.0027163284830749035,0,-0.05432656779885292,-0.01358164194971323,0,0,0.03259593993425369,0,-0.010865313932299614,-0.010865313932299614,0,0.08692251145839691,0.008148984983563423,0,0,-0.0027163284830749035,0,0.010865313932299614,0.019014298915863037,0,-0.08692251145839691,-0.02716328389942646,0,0.021730627864599228,0.010865313932299614,0,-0.021730627864599228,-0.008148984983563423,0,0,0.0027163284830749035,0,0,0,0,0.10865313559770584,0,0,-0.06519187986850739,-0.02444695681333542,0,0,0.01358164194971323,0,0,-0.0027163284830749035,0,0.1847103387117386,0.05704289674758911,0,-0.03259593993425369,-0.008148984983563423,0,0.010865313932299614,0.05161023885011673,0,-0.010865313932299614,-0.005432656966149807,0,0.43461254239082336,0.005432656966149807,0,-0.05432656779885292,-0.05432656779885292,0,0,0.010865313932299614,0,0,-0.008148984983563423,0,0.03259593993425369,0.0027163284830749035,0,-0.03259593993425369,-0.010865313932299614,0,0.010865313932299614,0.07877352833747864,0,-0.09778782725334167,-0.038028597831726074,0,0.08692251145839691,0.07605719566345215,0,-0.021730627864599228,0,0,0,0.01358164194971323,0,-0.03259593993425369,-0.04617758467793465,0,0,0.02716328389942646,0,-0.021730627864599228,-0.02716328389942646,0,0,0.040744926780462265,0,0,-0.01358164194971323,0,0.16297970712184906,0.043461255729198456,0,0,-0.019014298915863037,0,0.010865313932299614,0.005432656966149807,0,-0.07605719566345215,-0.043461255729198456,0,0.043461255729198456,0.02444695681333542,0,0,-0.016297969967126846,0,0.043461255729198456,0.0027163284830749035,0,-0.010865313932299614,0,0,0.010865313932299614,0.0597592256963253,0,-0.05432656779885292,-0.043461255729198456,0,0.41288191080093384,0.005432656966149807,0,-0.03259593993425369,-0.0027163284830749035,0,0.1521143913269043,0.0923551693558693,0,-0.010865313932299614,-0.016297969967126846,0,0.021730627864599228,0.005432656966149807,0,-0.043461255729198456,-0.016297969967126846,0,0.010865313932299614,0.22273893654346466,0,-0.06519187986850739,-0.02716328389942646,0,0.010865313932299614,0.02716328389942646,0,0,-0.0027163284830749035,0,0,0.02444695681333542,0,-0.021730627864599228,-0.016297969967126846,0,0.010865313932299614,0.008148984983563423,0,-0.05432656779885292,-0.05704289674758911,0,0.021730627864599228,0.04889391362667084,0,0,-0.01358164194971323,0,0.010865313932299614,0,0,-0.010865313932299614,-0.021730627864599228,0,0.03259593993425369,0.038028597831726074,0,-0.021730627864599228,-0.010865313932299614,0,0,0.038028597831726074,0,-0.010865313932299614,0,0,0.010865313932299614,0.08420617878437042,0,0,0,0,0,0.019014298915863037,0,-0.010865313932299614,-0.05161023885011673,0,0.010865313932299614,0.021730627864599228,0,-0.010865313932299614,-0.0027163284830749035,0,0.010865313932299614,0.043461255729198456,0,-0.010865313932299614,-0.005432656966149807,0,0.14124907553195953,0.008148984983563423,0,-0.021730627864599228,-0.04889391362667084,0,0,0.2118736207485199,0,-0.1521143913269043,-0.021730627864599228,0,0,0.07605719566345215,0,-0.010865313932299614,-0.005432656966149807,0,0.010865313932299614,0.038028597831726074,0,0,-0.038028597831726074,0,0.010865313932299614,0.005432656966149807,0,-0.1521143913269043,-0.03259593993425369,0,0,0.05161023885011673,0,0,-0.008148984983563423,0,0.03259593993425369,0.0027163284830749035,0,-0.1847103387117386,-0.01358164194971323,0,0,0.11408579349517822,0,0,-0.040744926780462265,0,0.16297970712184906,0.010865313932299614,0,-0.03259593993425369,0,0,0,0.01358164194971323,0,-0.07605719566345215,-0.01358164194971323,0,0,0.019014298915863037,0,0,-0.03531226888298988,0,0.05432656779885292,0.021730627864599228,0,-0.021730627864599228,-0.010865313932299614,0,0.010865313932299614,0.005432656966149807,0,0,-0.008148984983563423,0,0.021730627864599228,0,0,-0.043461255729198456,-0.010865313932299614,0,0.021730627864599228,0.005432656966149807,0,-0.010865313932299614,-0.005432656966149807,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-257 -->\n*** ??\n.,FED6 AD 01 DD LDA $DD01       read VIA 2 DRB, RS232 port\n.,FED9 29 01    AND #$01        mask 0000 000x, RS232 Rx DATA\n.,FEDB 85 A7    STA $A7         save the RS232 received data bit\n.,FEDD AD 06 DD LDA $DD06       get VIA 2 timer B low byte\n.,FEE0 E9 1C    SBC #$1C        \n.,FEE2 6D 99 02 ADC $0299       \n.,FEE5 8D 06 DD STA $DD06       save VIA 2 timer B low byte\n.,FEE8 AD 07 DD LDA $DD07       get VIA 2 timer B high byte\n.,FEEB 6D 9A 02 ADC $029A       \n.,FEEE 8D 07 DD STA $DD07       save VIA 2 timer B high byte\n.,FEF1 A9 11    LDA #$11        set timer B single shot, start timer B\n.,FEF3 8D 0F DD STA $DD0F       save VIA 2 CRB\n.,FEF6 AD A1 02 LDA $02A1       get the RS-232 interrupt enable byte\n.,FEF9 8D 0D DD STA $DD0D       save VIA 2 ICR\n.,FEFC A9 FF    LDA #$FF        \n.,FEFE 8D 06 DD STA $DD06       save VIA 2 timer B low byte\n.,FF01 8D 07 DD STA $DD07       save VIA 2 timer B high byte\n.,FF04 4C 59 EF JMP $EF59       \n.,FF07 AD 95 02 LDA $0295       nonstandard bit timing low byte\n.,FF0A 8D 06 DD STA $DD06       save VIA 2 timer B low byte\n.,FF0D AD 96 02 LDA $0296       nonstandard bit timing high byte\n.,FF10 8D 07 DD STA $DD07       save VIA 2 timer B high byte\n.,FF13 A9 11    LDA #$11        set timer B single shot, start timer B\n.,FF15 8D 0F DD STA $DD0F       save VIA 2 CRB\n.,FF18 A9 12    LDA #$12        \n.,FF1A 4D A1 02 EOR $02A1       EOR with the RS-232 interrupt enable byte\n.,FF1D 8D A1 02 STA $02A1       save the RS-232 interrupt enable byte\n.,FF20 A9 FF    LDA #$FF        \n.,FF22 8D 06 DD STA $DD06       save VIA 2 timer B low byte\n.,FF25 8D 07 DD STA $DD07       save VIA 2 timer B high byte\n.,FF28 AE 98 02 LDX $0298       \n.,FF2B 86 A8    STX $A8         \n.,FF2D 60       RTS","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-257"},{"name":"zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","language":"asm","vector":[0.014375288970768452,0,0,0,-0.014375288970768452,0,0,0.05031351000070572,0,0,-0.007187644485384226,0,0.028750577941536903,0.007187644485384226,0,-0.04312586784362793,-0.021562933921813965,0,0.014375288970768452,0.046719688922166824,0,-0.014375288970768452,-0.01796911098062992,0,0.014375288970768452,0.02515675500035286,0,-0.014375288970768452,-0.007187644485384226,0,0.014375288970768452,0.16531582176685333,0,0,-0.02515675500035286,0,0,0.01796911098062992,0,0,-0.03234440088272095,0,0,0.014375288970768452,0,-0.014375288970768452,-0.03953204303979874,0,0,0.007187644485384226,0,-0.014375288970768452,-0.003593822242692113,0,0.1293776035308838,0.046719688922166824,0,-0.028750577941536903,-0.021562933921813965,0,0,0.014375288970768452,0,-0.014375288970768452,-0.010781466960906982,0,0.014375288970768452,0.003593822242692113,0,-0.028750577941536903,-0.003593822242692113,0,0,0.003593822242692113,0,0,-0.021562933921813965,0,0.05750115588307381,0.014375288970768452,0,-0.028750577941536903,-0.007187644485384226,0,0.028750577941536903,0.007187644485384226,0,-0.07187644392251968,-0.05031351000070572,0,0,0.010781466960906982,0,-0.028750577941536903,-0.028750577941536903,0,0,0.028750577941536903,0,-0.014375288970768452,0,0,0.15812817215919495,0.003593822242692113,0,-0.04312586784362793,-0.014375288970768452,0,0.014375288970768452,0.014375288970768452,0,-0.05750115588307381,-0.021562933921813965,0,0.014375288970768452,0.007187644485384226,0,-0.04312586784362793,-0.014375288970768452,0,0,0.02515675500035286,0,0,-0.007187644485384226,0,0.503135085105896,0.007187644485384226,0,-0.05750115588307381,-0.010781466960906982,0,0.014375288970768452,0,0,0,-0.007187644485384226,0,0.028750577941536903,0.010781466960906982,0,0,-0.007187644485384226,0,0,0.021562933921813965,0,-0.04312586784362793,-0.014375288970768452,0,0.15812817215919495,0.06828261911869049,0,-0.028750577941536903,-0.028750577941536903,0,0.14375288784503937,0.007187644485384226,0,0,-0.02515675500035286,0,0.014375288970768452,0.010781466960906982,0,-0.014375288970768452,-0.014375288970768452,0,0.04312586784362793,0.021562933921813965,0,-0.028750577941536903,-0.007187644485384226,0,0,0.03593822196125984,0,0,-0.014375288970768452,0,0.05750115588307381,0.014375288970768452,0,-0.028750577941536903,-0.03593822196125984,0,0.028750577941536903,0,0,0,-0.02515675500035286,0,0.1868787556886673,0.007187644485384226,0,-0.014375288970768452,-0.010781466960906982,0,0.014375288970768452,0.07906408607959747,0,-0.028750577941536903,-0.04312586784362793,0,0.4887598156929016,0.007187644485384226,0,-0.04312586784362793,-0.03234440088272095,0,0.04312586784362793,0.010781466960906982,0,-0.014375288970768452,-0.021562933921813965,0,0,0,0,-0.014375288970768452,0,0,0,0.2587552070617676,0,-0.014375288970768452,-0.03953204303979874,0,0.014375288970768452,0.010781466960906982,0,-0.028750577941536903,-0.003593822242692113,0,0,0.01796911098062992,0,-0.04312586784362793,-0.003593822242692113,0,0.014375288970768452,0.003593822242692113,0,-0.014375288970768452,-0.021562933921813965,0,0.014375288970768452,0.07906408607959747,0,0,-0.014375288970768452,0,0,0.07187644392251968,0,0,-0.003593822242692113,0,0.028750577941536903,0.007187644485384226,0,-0.028750577941536903,-0.010781466960906982,0,0.04312586784362793,0.05390733480453491,0,-0.08625173568725586,-0.021562933921813965,0,0.08625173568725586,0,0,0,-0.003593822242692113,0,0.014375288970768452,0.03234440088272095,0,-0.05750115588307381,-0.021562933921813965,0,0,0.014375288970768452,0,0,0,0,0,0.10781466960906982,0,-0.028750577941536903,-0.014375288970768452,0,0.07187644392251968,0.014375288970768452,0,0,-0.03234440088272095,0,0,0.2443799078464508,0,-0.04312586784362793,-0.028750577941536903,0,0,0.021562933921813965,0,-0.028750577941536903,-0.010781466960906982,0,0.04312586784362793,0.03953204303979874,0,0,-0.01796911098062992,0,0.08625173568725586,0.003593822242692113,0,-0.028750577941536903,-0.021562933921813965,0,0.014375288970768452,0.010781466960906982,0,-0.05750115588307381,-0.02515675500035286,0,0.028750577941536903,0,0,-0.07187644392251968,-0.021562933921813965,0,0.014375288970768452,0.13297142088413239,0,0,-0.021562933921813965,0,0.08625173568725586,0.010781466960906982,0,-0.028750577941536903,0,0,0.028750577941536903,0.007187644485384226,0,0,0,0,0,0.014375288970768452,0,0,-0.02515675500035286,0,0,0.0610949769616127,0,-0.04312586784362793,-0.05031351000070572,0,0.028750577941536903,0.07906408607959747,0,-0.014375288970768452,0,0,0,0.010781466960906982,0,-0.08625173568725586,-0.03234440088272095,0,0,0.010781466960906982,0,-0.014375288970768452,-0.007187644485384226,0],"text":"<!-- Source: external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-258 -->\n*** ??\n.,FF2E AA       TAX             \n.,FF2F AD 96 02 LDA $0296       nonstandard bit timing high byte\n.,FF32 2A       ROL             \n.,FF33 A8       TAY             \n.,FF34 8A       TXA             \n.,FF35 69 C8    ADC #$C8        \n.,FF37 8D 99 02 STA $0299       \n.,FF3A 98       TYA             \n.,FF3B 69 00    ADC #$00        add any carry\n.,FF3D 8D 9A 02 STA $029A       \n.,FF40 60       RTS\n\n*** unused bytes\n.,FF41 EA       NOP             waste cycles\n.,FF42 EA       NOP             waste cycles\n\n*** save the status and do the IRQ routine\n.,FF43 08       PHP             save the processor status\n.,FF44 68       PLA             pull the processor status\n.,FF45 29 EF    AND #$EF        mask xxx0 xxxx, clear the break bit\n.,FF47 48       PHA             save the modified processor status\n\n*** IRQ vector\n.,FF48 48       PHA             save A\n.,FF49 8A       TXA             copy X\n.,FF4A 48       PHA             save X\n.,FF4B 98       TYA             copy Y\n.,FF4C 48       PHA             save Y\n.,FF4D BA       TSX             copy stack pointer\n.,FF4E BD 04 01 LDA $0104,X     get stacked status register\n.,FF51 29 10    AND #$10        mask BRK flag\n.,FF53 F0 03    BEQ $FF58       branch if not BRK\n.,FF55 6C 16 03 JMP ($0316)     else do BRK vector (iBRK)\n.,FF58 6C 14 03 JMP ($0314)     do IRQ vector (iIRQ)","sourcePath":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt","sourceMtimeMs":1761327707556.0742,"origin":"external/zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt#Page-1-258"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.024084152653813362,0,0,-0.03612622991204262,0,0.048168305307626724,0.012042076326906681,0,-0.048168305307626724,-0.03612622991204262,0,0.048168305307626724,0,0,-0.33717814087867737,0,0,0.09633661061525345,0,0,0,0,0,0,0,0,0,0,0,0.048168305307626724,0.10837868601083755,0,-0.048168305307626724,-0.024084152653813362,0,0,0,0,0,-0.024084152653813362,0,0.048168305307626724,0,0,0,-0.06021038070321083,0,0,0,0,-0.14450491964817047,-0.03612622991204262,0,0,0,0,0,-0.024084152653813362,0,0,0,0,0,-0.03612622991204262,0,0.048168305307626724,0.024084152653813362,0,0,-0.048168305307626724,0,0.09633661061525345,0,0,0,-0.024084152653813362,0,0,0.024084152653813362,0,-0.048168305307626724,-0.024084152653813362,0,0.048168305307626724,0,0,-0.048168305307626724,-0.08429453521966934,0,0,0,0,-0.048168305307626724,-0.024084152653813362,0,0,0,0,0,0,0,0.28900983929634094,0.024084152653813362,0,0,-0.03612622991204262,0,0.048168305307626724,0.048168305307626724,0,-0.048168305307626724,-0.16858907043933868,0,0.048168305307626724,0.06021038070321083,0,-0.048168305307626724,-0.012042076326906681,0,0,0,0,0,-0.012042076326906681,0,0.1926732212305069,0.024084152653813362,0,-0.09633661061525345,-0.024084152653813362,0,0.09633661061525345,0,0,0,0,0,0.09633661061525345,0.024084152653813362,0,0,0,0,0,0.012042076326906681,0,0,-0.08429453521966934,0,0.24084152281284332,0,0,0,0,0,0,0,0,-0.048168305307626724,0,0,0.048168305307626724,0.024084152653813362,0,0,0,0,0,0.048168305307626724,0,-0.09633661061525345,-0.012042076326906681,0,0,0,0,-0.048168305307626724,-0.03612622991204262,0,0.048168305307626724,0.024084152653813362,0,-0.048168305307626724,-0.024084152653813362,0,0,0,0,0,-0.024084152653813362,0,0,0.012042076326906681,0,0,-0.012042076326906681,0,0,0.14450491964817047,0,0,-0.03612622991204262,0,0.33717814087867737,0.024084152653813362,0,0,-0.03612622991204262,0,0,0.024084152653813362,0,-0.09633661061525345,-0.024084152653813362,0,0,0.012042076326906681,0,-0.24084152281284332,-0.012042076326906681,0,0,0.10837868601083755,0,-0.14450491964817047,-0.13246284425258636,0,0,0.07225245982408524,0,0,0,0,0,0.048168305307626724,0,-0.048168305307626724,0,0,0.09633661061525345,0.012042076326906681,0,-0.1926732212305069,-0.012042076326906681,0,0,0.12042076140642166,0,-0.09633661061525345,0,0,0,0.012042076326906681,0,0,-0.024084152653813362,0,0,0.024084152653813362,0,-0.048168305307626724,-0.03612622991204262,0,0,0,0,0,-0.048168305307626724,0,0,0,0,0,-0.024084152653813362,0,0,0.03612622991204262,0,-0.048168305307626724,-0.024084152653813362,0,0.09633661061525345,0.024084152653813362,0,0,0,0,0.048168305307626724,0,0,-0.048168305307626724,-0.012042076326906681,0,0,0.012042076326906681,0,-0.048168305307626724,-0.012042076326906681,0,0,0.16858907043933868,0,0,-0.012042076326906681,0,0,0,0,0,-0.048168305307626724,0,0,0.07225245982408524,0,0,-0.12042076140642166,0,0.048168305307626724,0.012042076326906681,0,-0.048168305307626724,-0.08429453521966934,0,0,0.012042076326906681,0,0,-0.012042076326906681,0,0,0,0,0,-0.024084152653813362,0,0,0.09633661061525345,0,0,-0.12042076140642166,0,0,0.024084152653813362,0,-0.048168305307626724,-0.048168305307626724,0,0,0.024084152653813362,0,-0.048168305307626724,0,0,0,0,0,0,-0.024084152653813362,0,0,0.06021038070321083,0,0,0,0,0.048168305307626724,0,0,-0.048168305307626724,-0.012042076326906681,0,0,0.012042076326906681,0,-0.14450491964817047,-0.024084152653813362,0,0,0.048168305307626724,0,-0.048168305307626724,-0.024084152653813362,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#WAIT-3 -->\nEXAMPLES of WAIT Statement:\n\nWAIT 1,32,32\n    WAIT 53273,6,6\n    WAIT 36868,144,16         (144 & 16 are masks. 144=10010000 in binary\n                               and 16=10000 in binary. The WAIT statement\n                               will halt the program until the 128 bit is\n                               on or until the 16 bit is off)\n\n92   BASIC LANGUAGE VOCABULARY\n~\n\nTHE COMMODORE 64 KEYBOARD\n  AND FEATURES","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#WAIT-3"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.002989259548485279,0,0,-0.002391407499089837,0,0.004782814998179674,0.0017935556825250387,0,-0.002391407499089837,-0.0005978518747724593,0,0.007174222730100155,0.0011957037495449185,0,-0.011957038193941116,-0.0053806668147444725,0,0.004782814998179674,0.007772074546664953,0,0,-0.002989259548485279,0,0.002391407499089837,0.013152741827070713,0,0,0,0,0.002391407499089837,0.004184963181614876,0,-0.002391407499089837,-0.002391407499089837,0,0,0.0005978518747724593,0,0,-0.0053806668147444725,0,0.002391407499089837,0,0,0,-0.0065763709135353565,0,0.004782814998179674,0.0011957037495449185,0,-0.009565629996359348,-0.002391407499089837,0,0.002391407499089837,0.0053806668147444725,0,-0.007174222730100155,-0.004782814998179674,0,0.002391407499089837,0.0011957037495449185,0,-0.004782814998179674,-0.0017935556825250387,0,0,0.0005978518747724593,0,0,-0.0005978518747724593,0,0.004782814998179674,0,0,0,-0.0017935556825250387,0,0.002391407499089837,0.0005978518747724593,0,-0.009565629996359348,-0.0017935556825250387,0,0.004782814998179674,0.0005978518747724593,0,-0.016739852726459503,-0.0065763709135353565,0,0,0.0017935556825250387,0,-0.002391407499089837,-0.0011957037495449185,0,0,0.0005978518747724593,0,0,-0.0011957037495449185,0,0.8632981181144714,0.002391407499089837,0,-0.004782814998179674,-0.0011957037495449185,0,0.007174222730100155,0.0053806668147444725,0,0,-0.02989259548485279,0,0.004782814998179674,0.002989259548485279,0,-0.002391407499089837,0,0,0,0.0017935556825250387,0,0,0,0,0.02152266725897789,0.0011957037495449185,0,-0.016739852726459503,-0.0017935556825250387,0,0.004782814998179674,0.002989259548485279,0,0,-0.0005978518747724593,0,0.002391407499089837,0.0011957037495449185,0,0,0,0,0.007174222730100155,0.002989259548485279,0,0,-0.004782814998179674,0,0.011957038193941116,0.0011957037495449185,0,0,-0.005978519096970558,0,0.007174222730100155,0.0011957037495449185,0,0,-0.002989259548485279,0,0.004782814998179674,0,0,0,-0.0005978518747724593,0,0,0.004782814998179674,0,0,-0.002391407499089837,0,0.007174222730100155,0.0017935556825250387,0,-0.009565629996359348,-0.0053806668147444725,0,0.002391407499089837,0.002391407499089837,0,-0.002391407499089837,-0.008369926363229752,0,0.004782814998179674,0,0,-0.016739852726459503,-0.0017935556825250387,0,0.007174222730100155,0,0,-0.007174222730100155,-0.0005978518747724593,0,0.05261096730828285,0.4316490590572357,0,0,-0.0053806668147444725,0,0.011957038193941116,0.004184963181614876,0,-0.009565629996359348,-0.0005978518747724593,0,0.002391407499089837,0.002391407499089837,0,-0.002391407499089837,-0.0011957037495449185,0,0,0.0011957037495449185,0,-0.02152266725897789,-0.0005978518747724593,0,0.004782814998179674,0.012554889544844627,0,-0.004782814998179674,-0.01135918591171503,0,0.002391407499089837,0.0035871113650500774,0,0,0,0,0,0.0017935556825250387,0,-0.002391407499089837,0,0,0.002391407499089837,0.004184963181614876,0,-0.002391407499089837,-0.0005978518747724593,0,0,0.005978519096970558,0,-0.002391407499089837,0,0,0.002391407499089837,0.004184963181614876,0,-0.002391407499089837,0,0,0.002391407499089837,0.0035871113650500774,0,-0.002391407499089837,-0.002391407499089837,0,0.002391407499089837,0.0005978518747724593,0,0,-0.0017935556825250387,0,0.002391407499089837,0.004184963181614876,0,-0.004782814998179674,-0.005978519096970558,0,0,0.0011957037495449185,0,0,-0.0011957037495449185,0,0.007174222730100155,0.0035871113650500774,0,-0.09565630555152893,-0.008369926363229752,0,0.002391407499089837,0.004184963181614876,0,0,-0.005978519096970558,0,0.002391407499089837,0.027501186355948448,0,0,-0.004184963181614876,0,0,0.005978519096970558,0,-0.002391407499089837,-0.0053806668147444725,0,0.011957038193941116,0.0011957037495449185,0,-0.002391407499089837,-0.0011957037495449185,0,0,0.21582452952861786,0,0,-0.011957038193941116,0,0.002391407499089837,0.004184963181614876,0,0,-0.002391407499089837,0,0,0.002391407499089837,0,-0.009565629996359348,-0.0005978518747724593,0,0,0,0,-0.002391407499089837,-0.0011957037495449185,0,0,0.0065763709135353565,0,-0.002391407499089837,-0.0053806668147444725,0,0.009565629996359348,0.0011957037495449185,0,-0.009565629996359348,-0.0011957037495449185,0,0.002391407499089837,0.0017935556825250387,0,-0.002391407499089837,-0.0011957037495449185,0,0,0.002989259548485279,0,0,-0.0011957037495449185,0,0,0.004184963181614876,0,-0.002391407499089837,0,0,0,0.002989259548485279,0,-0.002391407499089837,-0.002391407499089837,0,0,0.0011957037495449185,0,-0.011957038193941116,0,0,0.002391407499089837,0.0035871113650500774,0,-0.002391407499089837,-0.047828152775764465,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#VIDEO-BANK-SELECTION-2 -->\n+-------+------+-------+----------+-------------------------------------+\n  | VALUE | BITS |  BANK | STARTING |  VIC-II CHIP RANGE                  |\n  |  OF A |      |       | LOCATION |                                     |\n  +-------+------+-------+----------+-------------------------------------+\n  |   0   |  00  |   3   |   49152  | ($C000-$FFFF)*                      |\n  |   1   |  01  |   2   |   32768  | ($8000-$BFFF)                       |\n  |   2   |  10  |   1   |   16384  | ($4000-$7FFF)*                      |\n  |   3   |  11  |   0   |       0  | ($0000-$3FFF) (DEFAULT VALUE)       |\n  +-------+------+-------+----------+-------------------------------------+\n\nThis 16K bank concept is part of everything that the VIC-II chip does.\n  You should always be aware of which bank the VIC-II chip is pointing at,\n  since this will affect where character data patterns come from, where the\n  screen is, where sprites come from, etc. When you turn on the power of\n  your Commodore 64, bits 0 and 1 of location 56576 are automatically set\n  to BANK 0 ($0000-$3FFF) for all display information.\n\n+-----------------------------------------------------------------------+\n  | *NOTE: The Commodore 64 character set is not available to the VIC-II  |\n  | chip in BANKS 1 and 3. (See character memory section.)                |\n  +-----------------------------------------------------------------------+","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#VIDEO-BANK-SELECTION-2"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0.002550367033109069,0.005738325882703066,0,0,-0.002550367033109069,0,0.007651100866496563,0.006375917233526707,0,-0.002550367033109069,-0.0012751835165545344,0,0.002550367033109069,0.0012751835165545344,0,-0.005100734066218138,-0.0006375917582772672,0,0.010201468132436275,0.005738325882703066,0,0,-0.002550367033109069,0,0.005100734066218138,0.013389426283538342,0,-0.002550367033109069,-0.0006375917582772672,0,0,0.00892628449946642,0,-0.002550367033109069,0,0,0.002550367033109069,0.0006375917582772672,0,-0.002550367033109069,-0.0006375917582772672,0,0,0,0,-0.007651100866496563,-0.0038255504332482815,0,0.002550367033109069,0.0012751835165545344,0,-0.010201468132436275,-0.0019127752166241407,0,0.002550367033109069,0.0031879586167633533,0,-0.005100734066218138,0,0,0.007651100866496563,0.0038255504332482815,0,0,-0.0031879586167633533,0,0,0.0019127752166241407,0,-0.002550367033109069,-0.0031879586167633533,0,0.002550367033109069,0.0012751835165545344,0,0,-0.0019127752166241407,0,0.002550367033109069,0,0,0,-0.0012751835165545344,0,0.002550367033109069,0,0,-0.007651100866496563,-0.007013509050011635,0,0.005100734066218138,0.0012751835165545344,0,-0.010201468132436275,-0.00446314224973321,0,0.002550367033109069,0.002550367033109069,0,0,-0.0012751835165545344,0,0.8314196467399597,0.00446314224973321,0,-0.002550367033109069,-0.002550367033109069,0,0.002550367033109069,0.0012751835165545344,0,-0.002550367033109069,-0.06567195057868958,0,0.002550367033109069,0.007651100866496563,0,-0.005100734066218138,-0.0006375917582772672,0,0.005100734066218138,0.005100734066218138,0,0,-0.0012751835165545344,0,0.015302201732993126,0.0006375917582772672,0,-0.005100734066218138,-0.0012751835165545344,0,0.005100734066218138,0.0031879586167633533,0,-0.007651100866496563,-0.0019127752166241407,0,0.002550367033109069,0,0,0,-0.0038255504332482815,0,0.005100734066218138,0.0038255504332482815,0,0,-0.005100734066218138,0,0.022953303530812263,0.0012751835165545344,0,0,-0.002550367033109069,0,0.002550367033109069,0.0038255504332482815,0,0,-0.0012751835165545344,0,0,0.0006375917582772672,0,-0.002550367033109069,-0.0019127752166241407,0,0,0.002550367033109069,0,-0.005100734066218138,0,0,0.002550367033109069,0.002550367033109069,0,-0.005100734066218138,-0.0012751835165545344,0,0.005100734066218138,0.0012751835165545344,0,-0.005100734066218138,-0.005100734066218138,0,0,0.0031879586167633533,0,-0.002550367033109069,-0.005738325882703066,0,0.007651100866496563,0.0012751835165545344,0,-0.005100734066218138,-0.0006375917582772672,0,0.053557705134153366,0.41570982336997986,0,-0.002550367033109069,-0.00446314224973321,0,0.015302201732993126,0.0019127752166241407,0,0,-0.0031879586167633533,0,0.002550367033109069,0.0019127752166241407,0,-0.002550367033109069,-0.002550367033109069,0,0,0.00446314224973321,0,-0.005100734066218138,-0.0006375917582772672,0,0,0.008288692682981491,0,-0.002550367033109069,-0.0038255504332482815,0,0.002550367033109069,0.005100734066218138,0,0,-0.0038255504332482815,0,0.005100734066218138,0.002550367033109069,0,-0.002550367033109069,-0.0006375917582772672,0,0.007651100866496563,0.002550367033109069,0,-0.002550367033109069,-0.0006375917582772672,0,0,0.01211424358189106,0,-0.002550367033109069,-0.0006375917582772672,0,0,0.0012751835165545344,0,0,-0.0019127752166241407,0,0,0.0006375917582772672,0,-0.002550367033109069,-0.0038255504332482815,0,0,0.0006375917582772672,0,-0.002550367033109069,-0.0038255504332482815,0,0.005100734066218138,0.0031879586167633533,0,-0.005100734066218138,-0.002550367033109069,0,0.002550367033109069,0.002550367033109069,0,-0.005100734066218138,-0.0031879586167633533,0,0,0.0006375917582772672,0,-0.25248631834983826,-0.0012751835165545344,0,0.010201468132436275,0.00446314224973321,0,-0.002550367033109069,-0.002550367033109069,0,0.010201468132436275,0.027416445314884186,0,0,-0.0031879586167633533,0,0.002550367033109069,0.00892628449946642,0,0,-0.002550367033109069,0,0.007651100866496563,0.0019127752166241407,0,-0.002550367033109069,-0.0012751835165545344,0,0,0.20785491168498993,0,0,-0.0031879586167633533,0,0.010201468132436275,0.0006375917582772672,0,0,-0.0019127752166241407,0,0,0.0019127752166241407,0,0,-0.0012751835165545344,0,0,0.0038255504332482815,0,-0.005100734066218138,-0.0012751835165545344,0,0.002550367033109069,0.007651100866496563,0,-0.002550367033109069,-0.002550367033109069,0,0.005100734066218138,0.0012751835165545344,0,0,-0.0031879586167633533,0,0.005100734066218138,0.0006375917582772672,0,-0.005100734066218138,0,0,0,0.0012751835165545344,0,-0.005100734066218138,-0.0012751835165545344,0,0.002550367033109069,0.005738325882703066,0,-0.002550367033109069,-0.0012751835165545344,0,0,0.0031879586167633533,0,-0.002550367033109069,-0.002550367033109069,0,0,0.0012751835165545344,0,-0.012751834467053413,-0.0031879586167633533,0,0.002550367033109069,0,0,-0.007651100866496563,-0.12751835584640503,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#POKE53272PEEK53272AND15OR-A-2 -->\nWhere \"A\" has one of the following values:\n  +---------+------------+-----------------------------+\n  |         |            |         LOCATION*           |\n  |    A    |    BITS    +---------+-------------------+\n  |         |            | DECIMAL |        HEX        |\n  +---------+------------+---------+-------------------+\n  |     0   |  0000XXXX  |      0  |  $0000            |\n  |    16   |  0001XXXX  |   1024  |  $0400 (DEFAULT)  |\n  |    32   |  0010XXXX  |   2048  |  $0800            |\n  |    48   |  0011XXXX  |   3072  |  $0C00            |\n  |    64   |  0100XXXX  |   4096  |  $1000            |\n  |    80   |  0101XXXX  |   5120  |  $1400            |\n  |    96   |  0110XXXX  |   6144  |  $1800            |\n  |   112   |  0111XXXX  |   7168  |  $1C00            |\n  |   128   |  1000XXXX  |   8192  |  $2000            |\n  |   144   |  1001XXXX  |   9216  |  $2400            |\n  |   160   |  1010XXXX  |  10240  |  $2800            |\n  |   176   |  1011XXXX  |  11264  |  $2C00            |\n  |   192   |  1100XXXX  |  12288  |  $3000            |\n  |   208   |  1101XXXX  |  13312  |  $3400            |\n  |   224   |  1110XXXX  |  14336  |  $3800            |\n  |   240   |  1111XXXX  |  15360  |  $3C00            |\n  +---------+------------+---------+-------------------+\n  +-----------------------------------------------------------------------+\n  | * Remember that the BANK ADDRESS of the VIC-II chip must be added in. |\n  | You must also tell the KERNAL'S screen editor where the screen is as  |\n  | follows: POKE 648, page (where page = address/256, e.g., 1024/256= 4, |\n  | so POKE 648,4).                                                       |\n  +-----------------------------------------------------------------------+","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#POKE53272PEEK53272AND15OR-A-2"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0.003952866420149803,0.0019764332100749016,0,0,-0.0009882166050374508,0,0,0.0029646498151123524,0,0,0,0,0.007905732840299606,0.0019764332100749016,0,-0.003952866420149803,-0.005929299630224705,0,0.007905732840299606,0.01185859926044941,0,-0.003952866420149803,-0.0019764332100749016,0,0,0.012846815399825573,0,0,0,0,0,0.005929299630224705,0,0,0,0,0,0,0,0,-0.0029646498151123524,0,0.01185859926044941,0.0019764332100749016,0,0,-0.0009882166050374508,0,0,0,0,-0.01185859926044941,-0.0009882166050374508,0,0.007905732840299606,0.004941083025187254,0,0,-0.01185859926044941,0,0,0.0029646498151123524,0,0,-0.003952866420149803,0,0,0,0,0,-0.0029646498151123524,0,0.003952866420149803,0.0009882166050374508,0,0,-0.0009882166050374508,0,0,0.0019764332100749016,0,-0.01185859926044941,-0.003952866420149803,0,0,0.0009882166050374508,0,-0.02371719852089882,-0.0029646498151123524,0,0,0,0,-0.003952866420149803,-0.0019764332100749016,0,0,0.0019764332100749016,0,0,0,0,0.8656777143478394,0,0,0,0,0,0.003952866420149803,0.003952866420149803,0,-0.003952866420149803,-0.019764332100749016,0,0.003952866420149803,0.003952866420149803,0,-0.003952866420149803,-0.0019764332100749016,0,0,0.0009882166050374508,0,-0.007905732840299606,0,0,0.01185859926044941,0.0009882166050374508,0,-0.019764332100749016,-0.0019764332100749016,0,0.01185859926044941,0.005929299630224705,0,0,-0.0009882166050374508,0,0.003952866420149803,0.005929299630224705,0,0,0,0,0.003952866420149803,0.0029646498151123524,0,0,-0.005929299630224705,0,0.019764332100749016,0.003952866420149803,0,-0.003952866420149803,-0.0009882166050374508,0,0.003952866420149803,0.0009882166050374508,0,0,0,0,0.003952866420149803,0,0,-0.003952866420149803,0,0,0,0.003952866420149803,0,0,-0.005929299630224705,0,0.007905732840299606,0.0009882166050374508,0,-0.003952866420149803,-0.007905732840299606,0,0.003952866420149803,0,0,0,-0.012846815399825573,0,0,0,0,-0.007905732840299606,-0.0019764332100749016,0,0,0,0,0,-0.0019764332100749016,0,0.05138726159930229,0.4328388571739197,0,0,-0.0009882166050374508,0,0,0.0019764332100749016,0,0,-0.0029646498151123524,0,0,0.0029646498151123524,0,-0.003952866420149803,-0.0019764332100749016,0,0,0,0,-0.003952866420149803,-0.003952866420149803,0,0,0.007905732840299606,0,-0.003952866420149803,-0.010870382189750671,0,0.003952866420149803,0.007905732840299606,0,0,-0.0009882166050374508,0,0.003952866420149803,0.0019764332100749016,0,0,0,0,0,0.0019764332100749016,0,-0.003952866420149803,0,0,0.003952866420149803,0.009882166050374508,0,-0.003952866420149803,-0.0019764332100749016,0,0.007905732840299606,0.004941083025187254,0,0,0,0,0.003952866420149803,0.0019764332100749016,0,-0.003952866420149803,-0.004941083025187254,0,0,0.0019764332100749016,0,0,0,0,0,0.003952866420149803,0,0,-0.0019764332100749016,0,0,0.0019764332100749016,0,0,0,0,0,0.0009882166050374508,0,-0.07115159183740616,-0.003952866420149803,0,0,0,0,0,-0.0029646498151123524,0,0.003952866420149803,0.025693630799651146,0,0,-0.005929299630224705,0,0.003952866420149803,0,0,-0.007905732840299606,-0.0009882166050374508,0,0.02371719852089882,0,0,-0.003952866420149803,-0.0019764332100749016,0,0,0.21641942858695984,0,0,-0.0019764332100749016,0,0.01185859926044941,0.0009882166050374508,0,0,-0.0029646498151123524,0,0,0.0029646498151123524,0,-0.003952866420149803,-0.0009882166050374508,0,0.003952866420149803,0.0019764332100749016,0,0,-0.0019764332100749016,0,0,0.0029646498151123524,0,0,-0.0069175162352621555,0,0.007905732840299606,0.004941083025187254,0,-0.02371719852089882,-0.0019764332100749016,0,0.003952866420149803,0.004941083025187254,0,-0.007905732840299606,0,0,0,0.0029646498151123524,0,-0.003952866420149803,-0.0019764332100749016,0,0,0.004941083025187254,0,0,-0.0009882166050374508,0,0,0.0009882166050374508,0,-0.007905732840299606,0,0,0,0.0009882166050374508,0,-0.003952866420149803,-0.0009882166050374508,0,0,0,0,-0.003952866420149803,-0.03557579591870308,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXTENDED-BACKGROUND-COLOR-MODE-2 -->\n+------------------------+---------------------------+\n  |     CHARACTER CODE     | BACKGROUND COLOR REGISTER |\n  +------------------------+---------------------------+\n  |  RANGE   BIT 7   BIT 6 |  NUMBER       ADDRESS     |\n  +------------------------+---------------------------+\n  |   0- 63   0       0    |    0       53281 ($D021)  |\n  |  64-127   0       1    |    1       53282 ($D022)  |\n  | 128-191   1       0    |    2       53283 ($D023)  |\n  | 192-255   1       1    |    3       53284 ($D024)  |\n  +------------------------+---------------------------+\n\nExtended color mode is turned ON by setting bit 6 of the VIC-II regis-\n  ter to a 1 at location 53265 ($D011 in HEX). The following POKE does it:","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXTENDED-BACKGROUND-COLOR-MODE-2"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.002625096822157502,0,-0.0035001293290406466,0,0,0,0.0017500646645203233,0,0,-0.0017500646645203233,0,0.0035001293290406466,0,0,-0.010500387288630009,-0.0017500646645203233,0,0.0035001293290406466,0.006125226151198149,0,0,0,0,0,0.01662561297416687,0,0,0,0,0,0.002625096822157502,0,-0.0035001293290406466,-0.0017500646645203233,0,0.0035001293290406466,0,0,-0.0035001293290406466,0,0,0,0,0,-0.0035001293290406466,-0.0017500646645203233,0,0,0,0,-0.007000258658081293,-0.0035001293290406466,0,0,0,0,0,-0.012250452302396297,0,0.0035001293290406466,0.0017500646645203233,0,0,-0.0035001293290406466,0,0.0035001293290406466,0,0,0,-0.007000258658081293,0,0,0.0035001293290406466,0,0,0,0,0,0,0,-0.007000258658081293,0,0,0,0.0017500646645203233,0,-0.059502195566892624,-0.004375161603093147,0,0,0,0,-0.007000258658081293,-0.0035001293290406466,0,0,0,0,-0.0035001293290406466,-0.0017500646645203233,0,0.8155301213264465,0,0,0,-0.0008750323322601616,0,0,0.0017500646645203233,0,0,-0.0717526525259018,0,0.059502195566892624,0.0017500646645203233,0,-0.0035001293290406466,0,0,0,0,0,-0.059502195566892624,-0.0008750323322601616,0,0.010500387288630009,0,0,-0.059502195566892624,-0.002625096822157502,0,0,0.004375161603093147,0,0,-0.0017500646645203233,0,0.0035001293290406466,0.0008750323322601616,0,0,-0.0017500646645203233,0,0,0.0008750323322601616,0,0,-0.004375161603093147,0,0.01750064641237259,0,0,-0.0035001293290406466,0,0,0.059502195566892624,0.0017500646645203233,0,0,-0.0008750323322601616,0,0,0.0017500646645203233,0,0,0,0,0.0315011627972126,0,0,0,-0.002625096822157502,0,0.010500387288630009,0,0,0,-0.005250193644315004,0,0.007000258658081293,0,0,0,-0.03325122594833374,0,0,0.0008750323322601616,0,0,-0.0035001293290406466,0,0.0035001293290406466,0,0,0,-0.0017500646645203233,0,0.059502195566892624,0.40776506066322327,0,0,-0.0017500646645203233,0,0.0035001293290406466,0,0,0,-0.0017500646645203233,0,0,0.029751097783446312,0,0,-0.002625096822157502,0,0,0,0,0,-0.029751097783446312,0,0,0.006125226151198149,0,-0.014000517316162586,-0.03237619623541832,0,0,0.0008750323322601616,0,-0.028001034632325172,0,0,0.007000258658081293,0.0017500646645203233,0,0,0,0,0,0,0,0,-0.0008750323322601616,0,0.007000258658081293,0.009625355713069439,0,0,-0.002625096822157502,0,0,0.029751097783446312,0,0,-0.0008750323322601616,0,0.007000258658081293,0,0,-0.0035001293290406466,-0.0017500646645203233,0,0,0.0157505813986063,0,0,0,0,0,0.006125226151198149,0,0,0,0,0,0.004375161603093147,0,-0.0035001293290406466,0,0,0,0,0,-0.2660098075866699,0,0,0,0.0017500646645203233,0,0,-0.0017500646645203233,0,0,0.029751097783446312,0,-0.0035001293290406466,-0.014875548891723156,0,0,0.0017500646645203233,0,-0.0035001293290406466,-0.0017500646645203233,0,0.010500387288630009,0,0,0,-0.0008750323322601616,0,0.0035001293290406466,0.20388253033161163,0,0,0,0,0.0035001293290406466,0,0,-0.0035001293290406466,-0.007000258658081293,0,0,0.014875548891723156,0,0,-0.014875548891723156,0,0,0.0035001293290406466,0,-0.0035001293290406466,-0.014875548891723156,0,0,0.002625096822157502,0,0,-0.014875548891723156,0,0,0.0035001293290406466,0,-0.010500387288630009,0,0,0,0.0008750323322601616,0,-0.007000258658081293,0,0,0,0.0035001293290406466,0,-0.014000517316162586,-0.0017500646645203233,0,0.0035001293290406466,0.004375161603093147,0,0,-0.0008750323322601616,0,0,0.014875548891723156,0,0,0,0,0,0,0,-0.007000258658081293,-0.0017500646645203233,0,0,0.00787529069930315,0,-0.007000258658081293,-0.13300490379333496,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#SPRITE-POSITIONING-2 -->\n+-------------------+---------------------------------------------------+\n  |     LOCATION      |                                                   |\n  +---------+---------+                   DESCRIPTION                     |\n  | DECIMAL |   HEX   |                                                   |\n  +---------+---------+---------------------------------------------------+\n  |  53248  | ($D000) |     SPRITE 0 X POSITION REGISTER                  |\n  |  53249  | ($D001) |     SPRITE 0 Y POSITION REGISTER                  |\n  |  53250  | ($D002) |     SPRITE 1 X POSITION REGISTER                  |\n  |  53251  | ($D003) |     SPRITE 1 Y POSITION REGISTER                  |\n  |  53252  | ($D004) |     SPRITE 2 X POSITION REGISTER                  |\n  |  53253  | ($D005) |     SPRITE 2 Y POSITION REGISTER                  |\n  |  53254  | ($D006) |     SPRITE 3 X POSITION REGISTER                  |\n  |  53255  | ($D007) |     SPRITE 3 Y POSITION REGISTER                  |\n  |  53256  | ($D008) |     SPRITE 4 X POSITION REGISTER                  |\n  |  53257  | ($D009) |     SPRITE 4 Y POSITION REGISTER                  |\n  |  53258  | ($D00A) |     SPRITE 5 X POSITION REGISTER                  |\n  |  53259  | ($D00B) |     SPRITE 5 Y POSITION REGISTER                  |\n  |  53260  | ($D00C) |     SPRITE 6 X POSITION REGISTER                  |\n  |  53261  | ($D00D) |     SPRITE 6 Y POSITION REGISTER                  |\n  |  53262  | ($D00E) |     SPRITE 7 X POSITION REGISTER                  |\n  |  53263  | ($D00F) |     SPRITE 7 Y POSITION REGISTER                  |\n  |  53264  | ($D010) |     SPRITE X MSB REGISTER                         |\n  +---------+---------+---------------------------------------------------+","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#SPRITE-POSITIONING-2"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0,0,0,-0.030344856902956963,0,0,0.030344856902956963,0,0,0,0,0.12137942761182785,0.030344856902956963,0,0,-0.040459807962179184,0,0.040459807962179184,0.020229903981089592,0,-0.040459807962179184,-0.010114951990544796,0,0,0,0,0,0,0,0.08091961592435837,0.070804663002491,0,-0.040459807962179184,0,0,0,0,0,-0.08091961592435837,0,0,0.040459807962179184,0.020229903981089592,0,0,-0.070804663002491,0,0.040459807962179184,0.010114951990544796,0,-0.16183923184871674,-0.010114951990544796,0,0.040459807962179184,0.020229903981089592,0,0,-0.030344856902956963,0,0,0.040459807962179184,0,0,-0.030344856902956963,0,0,0,0,-0.040459807962179184,-0.050574760884046555,0,0.040459807962179184,0,0,0,-0.040459807962179184,0,0,0.020229903981089592,0,-0.08091961592435837,-0.040459807962179184,0,0,0,0,-0.16183923184871674,-0.15172427892684937,0,0,0,0,-0.040459807962179184,-0.040459807962179184,0,0,0,0,-0.040459807962179184,0,0,0.40459808707237244,0,0,-0.040459807962179184,0,0,0,0.070804663002491,0,-0.08091961592435837,0,0,0.08091961592435837,0.020229903981089592,0,-0.08091961592435837,-0.030344856902956963,0,0.040459807962179184,0.010114951990544796,0,0,0,0,0.32367846369743347,0.050574760884046555,0,-0.12137942761182785,-0.020229903981089592,0,0,0.010114951990544796,0,0,-0.040459807962179184,0,0.040459807962179184,0.020229903981089592,0,0,0,0,0,0.040459807962179184,0,0,-0.08091961592435837,0,0.20229904353618622,0.020229903981089592,0,-0.040459807962179184,0,0,0,0.010114951990544796,0,0,0,0,0,0,0,-0.040459807962179184,-0.020229903981089592,0,0,0.030344856902956963,0,0,-0.010114951990544796,0,0,0.020229903981089592,0,-0.040459807962179184,-0.050574760884046555,0,0.040459807962179184,0,0,0,-0.10114952176809311,0,0.040459807962179184,0,0,-0.16183923184871674,-0.030344856902956963,0,0,0.010114951990544796,0,-0.040459807962179184,-0.040459807962179184,0,0,0.20229904353618622,0,0,-0.09103456884622574,0,0.12137942761182785,0,0,0,-0.060689713805913925,0,0,0.040459807962179184,0,0,-0.040459807962179184,0,0,0.020229903981089592,0,-0.283218652009964,0,0,0.040459807962179184,0.19218409061431885,0,-0.040459807962179184,-0.060689713805913925,0,0,0.010114951990544796,0,-0.040459807962179184,-0.010114951990544796,0,0,0.020229903981089592,0,-0.040459807962179184,0,0,0,0.020229903981089592,0,-0.040459807962179184,-0.010114951990544796,0,0,0.10114952176809311,0,-0.08091961592435837,-0.040459807962179184,0,0,0.010114951990544796,0,0,0,0,0,0.010114951990544796,0,-0.040459807962179184,-0.060689713805913925,0,0,0.010114951990544796,0,0,0,0,0,0,0,0,-0.020229903981089592,0,0,0.020229903981089592,0,0,-0.010114951990544796,0,0.040459807962179184,0.030344856902956963,0,0,-0.08091961592435837,0,0,0,0,-0.040459807962179184,-0.040459807962179184,0,0.040459807962179184,0,0,0,-0.040459807962179184,0,0.040459807962179184,0.060689713805913925,0,0,-0.010114951990544796,0,0.040459807962179184,0,0,0,-0.010114951990544796,0,0,0.10114952176809311,0,0,-0.15172427892684937,0,0.08091961592435837,0.020229903981089592,0,0,-0.040459807962179184,0,0,0.020229903981089592,0,0,-0.040459807962179184,0,0.040459807962179184,0.010114951990544796,0,0,-0.020229903981089592,0,0,0.08091961592435837,0,0,-0.050574760884046555,0,0.040459807962179184,0,0,-0.040459807962179184,-0.040459807962179184,0,0.08091961592435837,0.010114951990544796,0,-0.040459807962179184,0,0,0,0,0,-0.08091961592435837,-0.020229903981089592,0,0,0.050574760884046555,0,-0.040459807962179184,-0.010114951990544796,0,0.040459807962179184,0,0,-0.08091961592435837,0,0,0,0,0,-0.283218652009964,-0.010114951990544796,0,0,0.020229903981089592,0,-0.08091961592435837,0,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#SCREEN-BLANKING -->\nSCREEN BLANKING\n\nBit 4 of the VIC-II control register controls the screen blanking func-\n  tion. It is found in the control register at location 53265 ($D011). When\n  it is turned ON (in other words, set to a 1) the screen is normal. When\n  bit 4 is set to 0 (turned OFF), the entire screen changes to border\n  color.\n    The following POKE blanks the screen. No data is lost, it just isn't\n  displayed.","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#SCREEN-BLANKING"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0,0,0,-0.0166337788105011,0,0.0665351152420044,0.0249506663531065,0,-0.0332675576210022,-0.0249506663531065,0,0.0665351152420044,0.0332675576210022,0,0,-0.0166337788105011,0,0.1330702304840088,0.00831688940525055,0,0,-0.00831688940525055,0,0,0,0,0,0,0,0.0332675576210022,0.04158444702625275,0,-0.0332675576210022,-0.12475333362817764,0,0,0.00831688940525055,0,0,0,0,0.1330702304840088,0.0332675576210022,0,-0.0332675576210022,-0.00831688940525055,0,0.0332675576210022,0.0332675576210022,0,-0.099802665412426,-0.0166337788105011,0,0.0665351152420044,0.0166337788105011,0,-0.0332675576210022,0,0,0,0.0249506663531065,0,-0.0332675576210022,-0.0249506663531065,0,0.0332675576210022,0.0831688940525055,0,-0.0332675576210022,0,0,0.0665351152420044,0.0166337788105011,0,0,-0.0249506663531065,0,0,0,0,-0.1330702304840088,-0.00831688940525055,0,0.0332675576210022,0,0,-0.0665351152420044,-0.12475333362817764,0,0.099802665412426,0.00831688940525055,0,-0.0665351152420044,-0.0332675576210022,0,0,0.00831688940525055,0,0,0,0,0.2994080185890198,0.0332675576210022,0,-0.0665351152420044,-0.049901332706213,0,0.0665351152420044,0.04158444702625275,0,0,0,0,0.0332675576210022,0.0665351152420044,0,-0.0332675576210022,0,0,0,0.00831688940525055,0,0,-0.00831688940525055,0,0.399210661649704,0.0332675576210022,0,-0.0665351152420044,-0.0166337788105011,0,0.0665351152420044,0,0,-0.0665351152420044,0,0,0,0.0665351152420044,0,-0.0332675576210022,-0.0166337788105011,0,0,0.0249506663531065,0,-0.0332675576210022,-0.10811955481767654,0,0.199605330824852,0.0332675576210022,0,0,-0.0166337788105011,0,0,0.0166337788105011,0,-0.099802665412426,-0.0166337788105011,0,0,0.0249506663531065,0,0,-0.0166337788105011,0,0,0.04158444702625275,0,0,0,0,0,0.00831688940525055,0,-0.0665351152420044,-0.07485200464725494,0,0.0332675576210022,0.0249506663531065,0,-0.0332675576210022,-0.0332675576210022,0,0,0.05821822211146355,0,-0.0665351152420044,-0.0332675576210022,0,0.0332675576210022,0,0,-0.0332675576210022,0,0,0,0.1497040092945099,0,0,-0.0831688940525055,0,0.099802665412426,0.0332675576210022,0,-0.0332675576210022,-0.00831688940525055,0,0.0332675576210022,0.0166337788105011,0,0,-0.0166337788105011,0,0,0.0166337788105011,0,-0.0332675576210022,-0.00831688940525055,0,0.0665351152420044,0.2162391096353531,0,-0.0665351152420044,-0.0332675576210022,0,0,0.0665351152420044,0,0,-0.0332675576210022,0,0.0332675576210022,0,0,-0.0332675576210022,-0.0166337788105011,0,0.2661404609680176,0.00831688940525055,0,0,-0.0249506663531065,0,0,0.099802665412426,0,-0.099802665412426,0,0,0,0.0332675576210022,0,-0.0332675576210022,-0.05821822211146355,0,0,0.00831688940525055,0,-0.099802665412426,-0.0249506663531065,0,0.0332675576210022,0.0166337788105011,0,-0.0665351152420044,-0.00831688940525055,0,0.0332675576210022,0,0,0,-0.04158444702625275,0,0,0.0249506663531065,0,-0.1330702304840088,-0.0249506663531065,0,0.0332675576210022,0.0166337788105011,0,0,-0.0332675576210022,0,0,0.0166337788105011,0,0,-0.049901332706213,0,0.0332675576210022,0.00831688940525055,0,-0.0332675576210022,-0.0166337788105011,0,0.0665351152420044,0.07485200464725494,0,0,-0.0332675576210022,0,0,0.0166337788105011,0,0,0,0,0,0.07485200464725494,0,0,-0.0332675576210022,0,0.0332675576210022,0.049901332706213,0,-0.2328728884458542,-0.0332675576210022,0,0,0.00831688940525055,0,0,-0.00831688940525055,0,0.0665351152420044,0.0166337788105011,0,0,-0.0166337788105011,0,0.0332675576210022,0.2328728884458542,0,0,-0.0166337788105011,0,0.0332675576210022,0.0166337788105011,0,0,-0.0665351152420044,0,0.0332675576210022,0,0,-0.0332675576210022,-0.0249506663531065,0,0.0332675576210022,0,0,0,-0.05821822211146355,0,0.0332675576210022,0.0665351152420044,0,0,-0.0332675576210022,0,0,0.0166337788105011,0,0,-0.0249506663531065,0,0,0,0,-0.199605330824852,-0.0665351152420044,0,0,0.0166337788105011,0,-0.0332675576210022,0,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#A-1402-STA-0400 -->\n.A 1402 STA $0400\n\n(The STA instruction stores the contents of the accumulator in a\n  specified memory location.)\n  The Commodore 64 will prompt you with:\n\n.A 1405\n\nNow type in:\n\n.A 1405 LDA #$0E\n    .A 1407 STA $D800\n    .A 140A BRK\n\nClear the screen, and type:\n\nG 1400\n\nThe G should turn into an \"A\" if you've done everything correctly. You\n  have now written your first machine language program. Its purpose is to\n  store one character (\"A\") at the first location in the screen memory.\n  Having achieved this, we must now explore some of the other instructions,\n  and principles.","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#A-1402-STA-0400"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0.0256695207208395,0.019252140074968338,0,0,-0.04492166265845299,0,0.0256695207208395,0.05775642395019531,0,0,-0.04492166265845299,0,0.0256695207208395,0,0,0,-0.019252140074968338,0,0.0256695207208395,0.019252140074968338,0,-0.0256695207208395,0,0,0.051339041441679,0,0,-0.0256695207208395,0,0,0.0256695207208395,0.08342594653367996,0,0,-0.019252140074968338,0,0.0256695207208395,0,0,0,-0.019252140074968338,0,0.07700856029987335,0.01283476036041975,0,0,-0.09626070410013199,0,0,0.038504280149936676,0,-0.0256695207208395,-0.019252140074968338,0,0.102678082883358,0.01283476036041975,0,-0.0256695207208395,-0.11551284790039062,0,0,0.01283476036041975,0,-0.051339041441679,-0.0256695207208395,0,0.12834760546684265,0.01283476036041975,0,-0.051339041441679,-0.006417380180209875,0,0.0256695207208395,0.006417380180209875,0,0,-0.07700856029987335,0,0,0.038504280149936676,0,-0.12834760546684265,-0.01283476036041975,0,0.07700856029987335,0,0,-0.07700856029987335,-0.13476498425006866,0,0.0256695207208395,0.01283476036041975,0,-0.051339041441679,-0.06417380273342133,0,0,0.07059118151664734,0,0,0,0,0.1540171205997467,0.01283476036041975,0,-0.0256695207208395,0,0,0.051339041441679,0.01283476036041975,0,-0.17968665063381195,0,0,0.0256695207208395,0.019252140074968338,0,-0.051339041441679,-0.01283476036041975,0,0,0.04492166265845299,0,-0.07700856029987335,-0.019252140074968338,0,0.28236472606658936,0.01283476036041975,0,-0.051339041441679,0,0,0.0256695207208395,0.019252140074968338,0,-0.0256695207208395,0,0,0.0256695207208395,0.038504280149936676,0,-0.0256695207208395,0,0,0,0.006417380180209875,0,-0.102678082883358,-0.019252140074968338,0,0.12834760546684265,0.051339041441679,0,-0.051339041441679,-0.019252140074968338,0,0.0256695207208395,0,0,-0.07700856029987335,-0.051339041441679,0,0,0.07059118151664734,0,-0.051339041441679,-0.0256695207208395,0,0,0.019252140074968338,0,-0.0256695207208395,-0.05775642395019531,0,0.0256695207208395,0.006417380180209875,0,-0.17968665063381195,-0.07059118151664734,0,0.07700856029987335,0.04492166265845299,0,-0.12834760546684265,-0.038504280149936676,0,0,0.01283476036041975,0,-0.07700856029987335,-0.051339041441679,0,0.0256695207208395,0.006417380180209875,0,0,-0.006417380180209875,0,0,0.07700856029987335,0,0,-0.07700856029987335,0,0.28236472606658936,0.03208690136671066,0,-0.0256695207208395,-0.12193022668361664,0,0,0.019252140074968338,0,-0.0256695207208395,-0.0256695207208395,0,0.051339041441679,0.006417380180209875,0,-0.17968665063381195,-0.038504280149936676,0,0.102678082883358,0.1475997418165207,0,-0.07700856029987335,-0.0256695207208395,0,0,0.019252140074968338,0,0,-0.019252140074968338,0,0,0.0256695207208395,0,-0.051339041441679,-0.019252140074968338,0,0,0.006417380180209875,0,-0.0256695207208395,-0.051339041441679,0,0.0256695207208395,0.07059118151664734,0,-0.102678082883358,-0.0256695207208395,0,0.102678082883358,0.03208690136671066,0,0,-0.038504280149936676,0,0,0,0,-0.0256695207208395,-0.03208690136671066,0,0,0.0256695207208395,0,0,-0.019252140074968338,0,0.23102569580078125,0.01283476036041975,0,0,-0.102678082883358,0,0,0.07059118151664734,0,0,-0.07700856029987335,0,0,0.006417380180209875,0,0,-0.038504280149936676,0,0.0256695207208395,0.01283476036041975,0,0,-0.03208690136671066,0,0.07700856029987335,0.019252140074968338,0,-0.0256695207208395,-0.019252140074968338,0,0,0.1475997418165207,0,0,-0.0256695207208395,0,0.0256695207208395,0,0,0,-0.01283476036041975,0,0,0.06417380273342133,0,0,-0.09626070410013199,0,0.0256695207208395,0.06417380273342133,0,-0.0256695207208395,-0.08342594653367996,0,0,0.006417380180209875,0,-0.0256695207208395,-0.01283476036041975,0,0,0,0,-0.102678082883358,-0.04492166265845299,0,0.0256695207208395,0.07059118151664734,0,0,-0.0256695207208395,0,0.0256695207208395,0.019252140074968338,0,-0.23102569580078125,-0.05775642395019531,0,0.0256695207208395,0.05775642395019531,0,-0.0256695207208395,-0.006417380180209875,0,0.0256695207208395,0,0,0,-0.038504280149936676,0,0,0.03208690136671066,0,-0.102678082883358,-0.01283476036041975,0,0.0256695207208395,0.12193022668361664,0,-0.0256695207208395,-0.019252140074968338,0,0,0,0,-0.2566952109336853,-0.01283476036041975,0,0.0256695207208395,0,0,-0.12834760546684265,-0.006417380180209875,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#ZERO-PAGE -->\nZERO PAGE\n\nAs shown earlier, absolute addresses are expressed in terms of a high\n  and a low order byte. The high order byte is often referred to as the\n  page of memory. For example, the address $1637 is in page $16 (22), and\n  $0277 is in page $02 (2). There is, however, a special mode of addressing\n  known as zero page addressing and is, as the name implies, associated\n\nBASIC TO MACHINE LANGUAGE   221\n~\n\nwith the addressing of memory locations in page zero. These addresses,\n  therefore, ALWAYS have a high order byte of zero. The zero page mode of\n  addressing only expects one byte to describe the address, rather than two\n  when using an absolute address. The zero page addressing mode tells the\n  microprocessor to assume that the high order address is zero. Therefore\n  zero page addressing can reference memory locations whose addresses are\n  between $0000 and $00FF. This may not seem too important at the moment,\n  but you'll need the principles of zero page addressing soon.","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#ZERO-PAGE"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0,0,0,-0.0028513616416603327,0,0.01140544656664133,0.004277042578905821,0,0,-0.004277042578905821,0,0.005702723283320665,0,0,-0.02281089313328266,-0.005702723283320665,0,0.01140544656664133,0.0014256808208301663,0,0,-0.0028513616416603327,0,0,0.00712840398773551,0,0,0,0,0.01140544656664133,0.02851361595094204,0,0,-0.0028513616416603327,0,0,0,0,0,-0.0028513616416603327,0,0.017108170315623283,0.008554085157811642,0,0,-0.009979765862226486,0,0.005702723283320665,0.00712840398773551,0,-0.005702723283320665,-0.0028513616416603327,0,0.005702723283320665,0.0014256808208301663,0,0,-0.00712840398773551,0,0,0,0,0,-0.005702723283320665,0,0,0.004277042578905821,0,0,0,0,0,0.0014256808208301663,0,0,-0.0014256808208301663,0,0.01140544656664133,0,0,-0.0513245090842247,-0.009979765862226486,0,0.01140544656664133,0,0,-0.02281089313328266,-0.012831127271056175,0,0.005702723283320665,0.0014256808208301663,0,-0.005702723283320665,-0.008554085157811642,0,0,0.0028513616416603327,0,0,-0.0014256808208301663,0,0.8554084897041321,0.005702723283320665,0,-0.01140544656664133,-0.0028513616416603327,0,0,0.0028513616416603327,0,-0.01140544656664133,-0.019959531724452972,0,0.005702723283320665,0.005702723283320665,0,-0.005702723283320665,-0.0014256808208301663,0,0,0,0,-0.017108170315623283,0,0,0.04562178626656532,0.005702723283320665,0,-0.02281089313328266,0,0,0,0,0,-0.01140544656664133,0,0,0,0.008554085157811642,0,-0.02281089313328266,0,0,0,0.004277042578905821,0,0,-0.0028513616416603327,0,0.02851361595094204,0.0028513616416603327,0,0,-0.0014256808208301663,0,0.017108170315623283,0.004277042578905821,0,-0.02851361595094204,-0.0014256808208301663,0,0.005702723283320665,0.0028513616416603327,0,-0.005702723283320665,0,0,0.017108170315623283,0,0,0,-0.0014256808208301663,0,0,0.005702723283320665,0,0,-0.02851361595094204,0,0.017108170315623283,0.00712840398773551,0,-0.017108170315623283,-0.01140544656664133,0,0,0.0028513616416603327,0,-0.02281089313328266,-0.0028513616416603327,0,0.005702723283320665,0,0,-0.01140544656664133,-0.0028513616416603327,0,0.02851361595094204,0.42770424485206604,0,0,-0.009979765862226486,0,0.1026490181684494,0,0,-0.01140544656664133,-0.009979765862226486,0,0,0.0028513616416603327,0,0,-0.0028513616416603327,0,0,0.0028513616416603327,0,-0.02851361595094204,-0.008554085157811642,0,0.005702723283320665,0.02423657290637493,0,-0.01140544656664133,-0.017108170315623283,0,0.005702723283320665,0.0028513616416603327,0,-0.017108170315623283,-0.005702723283320665,0,0,0,0,0,-0.01140544656664133,0,0.005702723283320665,0.0028513616416603327,0,0,0,0,0.005702723283320665,0.01425680797547102,0,-0.005702723283320665,0,0,0,0.012831127271056175,0,-0.017108170315623283,-0.01425680797547102,0,0,0.004277042578905821,0,-0.017108170315623283,-0.004277042578905821,0,0.005702723283320665,0.009979765862226486,0,0,0,0,0.01140544656664133,0,0,-0.005702723283320665,0,0,0,0.008554085157811642,0,-0.01140544656664133,-0.008554085157811642,0,0,0,0,-0.03421634063124657,-0.01140544656664133,0,0,0.005702723283320665,0,-0.005702723283320665,-0.018533850088715553,0,0,0.017108170315623283,0,0,-0.005702723283320665,0,0,0.05275018885731697,0,0,-0.00712840398773551,0,0,0,0,0,0,0,0,0.21385212242603302,0,0,-0.017108170315623283,0,0.005702723283320665,0.0028513616416603327,0,0,-0.008554085157811642,0,0,0.004277042578905821,0,-0.005702723283320665,-0.009979765862226486,0,0.017108170315623283,0,0,-0.005702723283320665,-0.004277042578905821,0,0.01140544656664133,0.01425680797547102,0,0,-0.005702723283320665,0,0,0.0028513616416603327,0,-0.005702723283320665,-0.005702723283320665,0,0,0,0,-0.01140544656664133,-0.01425680797547102,0,0.005702723283320665,0,0,0,-0.008554085157811642,0,0,0.009979765862226486,0,0,0,0,0,0.009979765862226486,0,-0.01140544656664133,-0.009979765862226486,0,0,0.0014256808208301663,0,-0.017108170315623283,-0.00712840398773551,0,0,0.004277042578905821,0,-0.017108170315623283,-0.017108170315623283,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#THE-STACK-3 -->\n222   BASIC TO MACHINE LANGUAGE\n~\n\nUp to this point, we have covered immediate, zero page, and absolute\n  mode instructions. We have also covered, but have not really talked\n  about, the \"implied\" mode. The implied mode means that information is\n  implied by an instruction itself. In other words, what registers, flags,\n  and memory the instruction is referring to. The examples we have seen are\n  PHA, PLA, PHP, and PLP, which refer to stack processing and the\n  accumulator and status registers, respectively.\n\n+-----------------------------------------------------------------------+\n  | NOTE: The X register will be referred to as X from now on, and        |\n  | similarly A (accumulator), Y (Y index register), S (stack pointer),   |\n  | and P (processor status).                                             |\n  +-----------------------------------------------------------------------+","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#THE-STACK-3"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.005398784298449755,0,0,-0.03779149055480957,0,0.10797568410634995,0.005398784298449755,0,0,-0.005398784298449755,0,0.04319027438759804,0.02159513719379902,0,-0.0647854134440422,-0.026993921026587486,0,0.15116596221923828,0,0,-0.04319027438759804,-0.005398784298449755,0,0,0.03779149055480957,0,0,-0.005398784298449755,0,0.0647854134440422,0.048589058220386505,0,0,-0.02159513719379902,0,0.04319027438759804,0.01619635336101055,0,-0.04319027438759804,-0.02159513719379902,0,0.02159513719379902,0.01619635336101055,0,0,-0.09177932888269424,0,0,0.01619635336101055,0,0,-0.01619635336101055,0,0.02159513719379902,0.005398784298449755,0,0,-0.03779149055480957,0,0.02159513719379902,0.01079756859689951,0,-0.02159513719379902,-0.0323927067220211,0,0.08638054877519608,0.02159513719379902,0,-0.04319027438759804,0,0,0.04319027438759804,0.005398784298449755,0,-0.02159513719379902,-0.10797568410634995,0,0,0.01619635336101055,0,-0.15116596221923828,-0.01079756859689951,0,0.0647854134440422,0.005398784298449755,0,-0.08638054877519608,-0.2483440786600113,0,0.04319027438759804,0.01079756859689951,0,-0.0647854134440422,-0.01079756859689951,0,0.02159513719379902,0.005398784298449755,0,-0.02159513719379902,-0.01079756859689951,0,0.367117315530777,0.05398784205317497,0,-0.0647854134440422,-0.01079756859689951,0,0,0.026993921026587486,0,-0.02159513719379902,-0.0323927067220211,0,0.02159513719379902,0.07558298110961914,0,-0.02159513719379902,-0.026993921026587486,0,0.02159513719379902,0,0,-0.0647854134440422,0,0,0.15116596221923828,0.04319027438759804,0,-0.0647854134440422,0,0,0,0.02159513719379902,0,0,-0.02159513719379902,0,0,0.026993921026587486,0,0,0,0,0,0.005398784298449755,0,-0.04319027438759804,-0.01079756859689951,0,0.10797568410634995,0.01079756859689951,0,-0.02159513719379902,0,0,0,0.01619635336101055,0,-0.1295708268880844,-0.03779149055480957,0,0.02159513719379902,0.048589058220386505,0,0,-0.026993921026587486,0,0,0.02159513719379902,0,-0.10797568410634995,-0.01619635336101055,0,0.02159513719379902,0.005398784298449755,0,-0.10797568410634995,-0.08638054877519608,0,0.02159513719379902,0.04319027438759804,0,-0.02159513719379902,-0.04319027438759804,0,0,0.02159513719379902,0,-0.10797568410634995,-0.08098176121711731,0,0,0.01079756859689951,0,-0.02159513719379902,-0.01619635336101055,0,0.02159513719379902,0.1835586577653885,0,-0.02159513719379902,-0.15116596221923828,0,0.15116596221923828,0.005398784298449755,0,0,-0.01619635336101055,0,0.0647854134440422,0.01079756859689951,0,-0.08638054877519608,-0.01079756859689951,0,0.02159513719379902,0.03779149055480957,0,-0.15116596221923828,-0.0323927067220211,0,0.02159513719379902,0.08638054877519608,0,-0.02159513719379902,-0.048589058220386505,0,0.02159513719379902,0.03779149055480957,0,-0.10797568410634995,-0.01079756859689951,0,0,0,0,-0.04319027438759804,0,0,0,0.01619635336101055,0,0,-0.02159513719379902,0,0.02159513719379902,0.0647854134440422,0,-0.04319027438759804,-0.02159513719379902,0,0.0647854134440422,0.005398784298449755,0,0,-0.0647854134440422,0,0.02159513719379902,0.01079756859689951,0,-0.04319027438759804,0,0,0,0.005398784298449755,0,0,-0.05398784205317497,0,0.02159513719379902,0.01619635336101055,0,-0.04319027438759804,-0.05938662588596344,0,0,0.0323927067220211,0,-0.04319027438759804,-0.02159513719379902,0,0.02159513719379902,0.01079756859689951,0,0,-0.05938662588596344,0,0,0,0,-0.02159513719379902,-0.048589058220386505,0,0,0.026993921026587486,0,0,-0.0323927067220211,0,0.04319027438759804,0.08638054877519608,0,0,-0.01619635336101055,0,0,0.03779149055480957,0,0,-0.048589058220386505,0,0.0647854134440422,0.10257689654827118,0,0,-0.09177932888269424,0,0.02159513719379902,0.01079756859689951,0,-0.04319027438759804,-0.01619635336101055,0,0,0.01619635336101055,0,0,-0.05938662588596344,0,0.02159513719379902,0.005398784298449755,0,-0.10797568410634995,-0.03779149055480957,0,0.02159513719379902,0.03779149055480957,0,-0.02159513719379902,-0.01619635336101055,0,0,0.01079756859689951,0,-0.02159513719379902,-0.02159513719379902,0,0.02159513719379902,0.0323927067220211,0,-0.04319027438759804,0,0,0.04319027438759804,0.01079756859689951,0,0,-0.0323927067220211,0,0,0.026993921026587486,0,-0.19435623288154602,-0.005398784298449755,0,0,0.01079756859689951,0,-0.02159513719379902,-0.05398784205317497,0,0,0.005398784298449755,0,-0.4750930070877075,-0.02159513719379902,0,0.02159513719379902,0.01079756859689951,0,-0.02159513719379902,-0.026993921026587486,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE -->\nEXAMPLE:\n\nLet us suppose that location $02 contains $45, and location $03 con-\n  tains $1E. If the instruction to load the accumulator in the indirect\n  indexed mode is executed and the specified zero page address is $02, then\n  the actual address will be:\n\nLow order = contents of $02\n    High order = contents of $03\n    Y register = $00\n\nThus the actual address = $1E45 + Y = $1E45.\n    The title of this mode does in fact imply an indirect principle,\n  although this may be difficult to grasp at first sight. Let's look at it\n  another way:\n    \"I am going to deliver this letter to the post office at address $02,\n  MEMORY ST., and the address on the letter is $05 houses past $1600,\n  MEMORY street.\" This is equivalent to the code:\n\nLDA #$00      - load low order actual base address\n    STA $02       - set the low byte of the indirect address\n    LDA #$16      - load high order indirect address\n    STA $03       - set the high byte of the indirect address\n    LDY #$05      - set the indirect index (Y)\n    LDA ($02),Y   - load indirectly indexed by Y","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.0013304108288139105,0,-0.005321643315255642,-0.010643286630511284,0,0.0319298580288887,0.0013304108288139105,0,0,-0.002660821657627821,0,0.01596492901444435,0.007982464507222176,0,-0.01596492901444435,-0.00931287556886673,0,0.042573146522045135,0.0013304108288139105,0,-0.005321643315255642,-0.0013304108288139105,0,0,0.022616984322667122,0,0,-0.0013304108288139105,0,0.01596492901444435,0.014634518884122372,0,0,-0.006652053911238909,0,0.010643286630511284,0.005321643315255642,0,-0.01596492901444435,-0.005321643315255642,0,0.005321643315255642,0.002660821657627821,0,0,-0.026608215644955635,0,0,0.002660821657627821,0,0,-0.003991232253611088,0,0.01596492901444435,0.0013304108288139105,0,-0.005321643315255642,-0.002660821657627821,0,0.005321643315255642,0.005321643315255642,0,-0.005321643315255642,-0.006652053911238909,0,0.021286573261022568,0.002660821657627821,0,-0.005321643315255642,0,0,0.010643286630511284,0.0013304108288139105,0,-0.010643286630511284,-0.03459068015217781,0,0,0.002660821657627821,0,-0.03725150227546692,-0.002660821657627821,0,0.021286573261022568,0.0013304108288139105,0,-0.03725150227546692,-0.07982464879751205,0,0.005321643315255642,0.002660821657627821,0,-0.021286573261022568,-0.005321643315255642,0,0.005321643315255642,0.0013304108288139105,0,0,-0.006652053911238909,0,0.8354979753494263,0.01596492901444435,0,-0.01596492901444435,-0.002660821657627821,0,0,0.00931287556886673,0,-0.010643286630511284,-0.013304107822477818,0,0.005321643315255642,0.021286573261022568,0,-0.010643286630511284,-0.003991232253611088,0,0.005321643315255642,0,0,-0.01596492901444435,0,0,0.04789479076862335,0.011973697692155838,0,-0.03725150227546692,0,0,0,0.005321643315255642,0,0,-0.007982464507222176,0,0,0.00931287556886673,0,-0.005321643315255642,0,0,0,0.0013304108288139105,0,-0.021286573261022568,-0.002660821657627821,0,0.026608215644955635,0.007982464507222176,0,-0.010643286630511284,-0.002660821657627821,0,0,0.003991232253611088,0,-0.042573146522045135,-0.00931287556886673,0,0.010643286630511284,0.011973697692155838,0,0,-0.003991232253611088,0,0.03725150227546692,0.005321643315255642,0,-0.026608215644955635,-0.006652053911238909,0,0.005321643315255642,0.0013304108288139105,0,-0.0319298580288887,-0.021286573261022568,0,0.005321643315255642,0.011973697692155838,0,-0.010643286630511284,-0.01862575113773346,0,0,0.002660821657627821,0,-0.03725150227546692,-0.023947395384311676,0,0.005321643315255642,0.002660821657627821,0,-0.005321643315255642,-0.0013304108288139105,0,0.03725150227546692,0.41774898767471313,0,-0.005321643315255642,-0.04656437784433365,0,0.04789479076862335,0.0013304108288139105,0,-0.005321643315255642,-0.007982464507222176,0,0.021286573261022568,0.002660821657627821,0,-0.021286573261022568,-0.006652053911238909,0,0,0.010643286630511284,0,-0.05321643128991127,-0.007982464507222176,0,0,0.02793862670660019,0,-0.005321643315255642,-0.022616984322667122,0,0.005321643315255642,0.010643286630511284,0,0,-0.0013304108288139105,0,0.010643286630511284,0,0,-0.005321643315255642,-0.002660821657627821,0,0,0.003991232253611088,0,0,-0.010643286630511284,0,0.005321643315255642,0.01596492901444435,0,-0.0319298580288887,-0.00931287556886673,0,0.010643286630511284,0.0013304108288139105,0,0,-0.021286573261022568,0,0.005321643315255642,0.005321643315255642,0,-0.010643286630511284,0,0,0,0.022616984322667122,0,0,-0.014634518884122372,0,0.005321643315255642,0.003991232253611088,0,-0.01596492901444435,-0.017295340076088905,0,0,0.007982464507222176,0,-0.010643286630511284,-0.006652053911238909,0,0.005321643315255642,0.002660821657627821,0,-0.021286573261022568,-0.021286573261022568,0,0,0.002660821657627821,0,-0.005321643315255642,-0.011973697692155838,0,0,0.023947395384311676,0,0,-0.011973697692155838,0,0.01596492901444435,0.02527780644595623,0,0,-0.007982464507222176,0,0,0.011973697692155838,0,0,-0.010643286630511284,0,0.026608215644955635,0.20887449383735657,0,0,-0.030599448829889297,0,0.005321643315255642,0,0,-0.010643286630511284,-0.005321643315255642,0,0,0.003991232253611088,0,0,-0.002660821657627821,0,0.005321643315255642,0.006652053911238909,0,-0.026608215644955635,-0.006652053911238909,0,0.005321643315255642,0.011973697692155838,0,-0.005321643315255642,-0.00931287556886673,0,0,0.002660821657627821,0,-0.005321643315255642,-0.01596492901444435,0,0.005321643315255642,0.005321643315255642,0,-0.010643286630511284,-0.0013304108288139105,0,0.005321643315255642,0.002660821657627821,0,0,-0.010643286630511284,0,0,0.006652053911238909,0,-0.05321643128991127,-0.002660821657627821,0,0,0.002660821657627821,0,-0.005321643315255642,-0.01862575113773346,0,0,0.002660821657627821,0,-0.1543276607990265,-0.005321643315255642,0,0.005321643315255642,0.011973697692155838,0,-0.010643286630511284,-0.017295340076088905,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE -->\nEXAMPLE:\n\nLet us suppose that location $02 contains $45, and location $03 con-\n  tains $10. If the instruction to load the accumulator in the indexed\n  indirect mode is executed and the specified zero page address is $02,\n  then the actual address will be:\n\nLow order = contents of ($02+X)\n    High order = contents of ($03+X)\n    X register = $00\n\nThus the actual pointer is in = $02 + X = $02.\n    Therefore, the actual address is the indirect address contained in $02\n  which is again $1045.\n    The title of this mode does in fact imply the principle, although it\n  may be difficult to grasp at first sight. Look at it this way:\n    \"I am going to deliver this letter to the fourth post office at address\n  $01,MEMORY ST., and the address on the letter will then be delivered to\n  $1600, MEMORY street.\" This is equivalent to the code:\n\nLDA #$00    - load low order actual base address\n    STA $06     - set the low byte of the indirect address\n    LDA #$16    - load high order indirect address\n    STA $07     - set the high byte of the indirect address\n    LDX #$05    - set the indirect index (X)\n    LDA ($02,X) - load indirectly indexed by X\n\n+-----------------------------------------------------------------------+\n  | NOTE: Of the two indirect methods of addressing, the first (indirect  |\n  | indexed) is far more widely used.                                     |\n  +-----------------------------------------------------------------------+\n\nBASIC TO MACHINE LANGUAGE   225\n~","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0,0,-0.0037592407315969467,-0.0018796203657984734,0,0.0037592407315969467,0.007518481463193893,0,0,-0.009398101828992367,0,0.007518481463193893,0.0009398101828992367,0,-0.015036962926387787,-0.006578671280294657,0,0.01127772219479084,0,0,0,-0.0018796203657984734,0,0.0037592407315969467,0.004699050914496183,0,0,0,0,0.0037592407315969467,0.0037592407315969467,0,-0.0037592407315969467,-0.014097153209149837,0,0,0.0009398101828992367,0,0,-0.026314685121178627,0,0,0.0018796203657984734,0,0,-0.00281943054869771,0,0,0.0009398101828992367,0,-0.03759240731596947,-0.0009398101828992367,0,0.02255544438958168,0,0,0,-0.00563886109739542,0,0.007518481463193893,0.0018796203657984734,0,0,-0.00281943054869771,0,0,0.004699050914496183,0,-0.01127772219479084,-0.016916584223508835,0,0,0.0009398101828992367,0,0,-0.004699050914496183,0,0,0.009398101828992367,0,0,-0.0037592407315969467,0,0,0.00281943054869771,0,-0.01127772219479084,-0.0018796203657984734,0,0,0.0009398101828992367,0,-0.0037592407315969467,-0.0037592407315969467,0,0.0037592407315969467,0.0009398101828992367,0,-0.0037592407315969467,-0.0018796203657984734,0,0.8495883941650391,0.0018796203657984734,0,0,-0.00281943054869771,0,0.0037592407315969467,0.0037592407315969467,0,-0.0037592407315969467,-0.04511088877916336,0,0.015036962926387787,0.00563886109739542,0,-0.0037592407315969467,-0.0009398101828992367,0,0.0037592407315969467,0.0037592407315969467,0,-0.007518481463193893,-0.004699050914496183,0,0.01127772219479084,0.0018796203657984734,0,-0.01127772219479084,-0.0018796203657984734,0,0,0,0,-0.01127772219479084,0,0,0.04887013137340546,0.0009398101828992367,0,0,0,0,0,0.0018796203657984734,0,-0.007518481463193893,-0.023495255038142204,0,0.026314685121178627,0.01127772219479084,0,-0.0037592407315969467,-0.013157342560589314,0,0.0037592407315969467,0.004699050914496183,0,0,-0.0009398101828992367,0,0.01127772219479084,0,0,0,-0.00563886109739542,0,0.02255544438958168,0,0,0,0,0,0,0.0009398101828992367,0,0,-0.0009398101828992367,0,0.015036962926387787,0,0,0,-0.014097153209149837,0,0.0037592407315969467,0,0,-0.026314685121178627,-0.0018796203657984734,0,0,0.006578671280294657,0,-0.007518481463193893,-0.0018796203657984734,0,0.01127772219479084,0.4257340133190155,0,0,0,0,0,0.0018796203657984734,0,-0.018796203657984734,-0.00281943054869771,0,0.0037592407315969467,0.007518481463193893,0,0,-0.00281943054869771,0,0,0.00281943054869771,0,-0.0037592407315969467,-0.0037592407315969467,0,0.0037592407315969467,0.007518481463193893,0,-0.0037592407315969467,-0.009398101828992367,0,0,0.00281943054869771,0,-0.02255544438958168,-0.00563886109739542,0,0,0.025374874472618103,0,-0.0037592407315969467,0,0,0.018796203657984734,0.0009398101828992367,0,0,-0.004699050914496183,0,0.0037592407315969467,0.013157342560589314,0,-0.018796203657984734,-0.0018796203657984734,0,0,0.0018796203657984734,0,-0.015036962926387787,0,0,0.0037592407315969467,0.00563886109739542,0,-0.007518481463193893,-0.009398101828992367,0,0.0037592407315969467,0.016916584223508835,0,-0.007518481463193893,0,0,0.0037592407315969467,0.0018796203657984734,0,0,0,0,0,0.007518481463193893,0,-0.01127772219479084,-0.00281943054869771,0,0,0.0018796203657984734,0,-0.15036962926387787,-0.013157342560589314,0,0,0,0,-0.0037592407315969467,-0.0037592407315969467,0,0.007518481463193893,0.00563886109739542,0,-0.018796203657984734,-0.00281943054869771,0,0,0,0,0,-0.01033791247755289,0,0,0.00281943054869771,0,0,-0.0009398101828992367,0,0.0037592407315969467,0.21239709854125977,0,0,-0.0018796203657984734,0,0.007518481463193893,0.00281943054869771,0,-0.018796203657984734,-0.00281943054869771,0,0,0.0037592407315969467,0,-0.052629370242357254,-0.012217532843351364,0,0.0037592407315969467,0.0009398101828992367,0,-0.0037592407315969467,-0.0037592407315969467,0,0,0.012217532843351364,0,0,-0.00281943054869771,0,0,0.0018796203657984734,0,0,-0.012217532843351364,0,0.0037592407315969467,0.012217532843351364,0,-0.0037592407315969467,-0.007518481463193893,0,0,0.0018796203657984734,0,-0.03383316844701767,-0.00563886109739542,0,0,0.008458292111754417,0,0,-0.004699050914496183,0,0.018796203657984734,0.00281943054869771,0,0,0,0,0.0037592407315969467,0.00281943054869771,0,0,-0.00563886109739542,0,0,0.00563886109739542,0,-0.0037592407315969467,-0.07518481463193893,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#APPROACHING-A-LARGE-TASK-3 -->\n------------------------------------------------------------------------+\n                                                                          |\n         MCS6510 MICROPROCESSOR INSTRUCTION SET - ALPHABETIC SEQUENCE     |\n                                                                          |\n  ------------------------------------------------------------------------+\n                                                                          |\n        JSR   Jump to New Location Saving Return Address                  |\n                                                                          |\n        LDA   Load Accumulator with Memory                                |\n        LDX   Load Index X with Memory                                    |\n        LDY   Load Index Y with Memory                                    |\n        LSR   Shift Right One Bit (Memory or Accumulator)                 |\n                                                                          |\n        NOP   No Operation                                                |\n                                                                          |\n        ORA   \"OR\" Memory with Accumulator                                |\n                                                                          |\n        PHA   Push Accumulator on Stack                                   |\n        PHP   Push Processor Status on Stack                              |\n        PLA   Pull Accumulator from Stack                                 |\n        PLP   Pull Processor Status from Stack                            |\n                                                                          |\n        ROL   Rotate One Bit Left (Memory or Accumulator)                 |\n        ROR   Rotate One Bit Right (Memory or Accumulator)                |\n        RTI   Return from Interrupt                                       |\n        RTS   Return from Subroutine                                      |\n                                                                          |\n        SBC   Subtract Memory from Accumulator with Borrow                |\n        SEC   Set Carry Flag                                              |\n        SED   Set Decimal Mode                                            |\n        SEI   Set Interrupt Disable Status                                |\n        STA   Store Accumulator in Memory                                 |\n        STX   Store Index X in Memory                                     |\n        STY   Store Index Y in Memory                                     |\n                                                                          |\n        TAX   Transfer Accumulator to Index X                             |\n        TAY   Transfer Accumulator to Index Y                             |\n        TSX   Transfer Stack Pointer to Index X                           |\n        TXA   Transfer Index X to Accumulator                             |\n        TXS   Transfer Index X to Stack Pointer                           |\n        TYA   Transfer Index Y to Accumulator                             |\n  ------------------------------------------------------------------------+","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#APPROACHING-A-LARGE-TASK-3"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.0026066419668495655,0,-0.006255940534174442,-0.0015639851335436106,0,0,0.0005213284166529775,0,0,-0.00208531366661191,0,0.00208531366661191,0.001042656833305955,0,-0.010426567867398262,-0.0015639851335436106,0,0.010426567867398262,0.0026066419668495655,0,-0.010426567867398262,-0.0005213284166529775,0,0.00417062733322382,0.020853135734796524,0,0,-0.0026066419668495655,0,0.00417062733322382,0.013033210299909115,0,0,-0.00208531366661191,0,0,0.001042656833305955,0,0,-0.001042656833305955,0,0,0.001042656833305955,0,-0.00208531366661191,-0.0005213284166529775,0,0.00208531366661191,0.0005213284166529775,0,-0.00208531366661191,-0.0015639851335436106,0,0.00208531366661191,0.003127970267087221,0,-0.00208531366661191,-0.00938391126692295,0,0,0,0,-0.00208531366661191,-0.001042656833305955,0,0,0.001042656833305955,0,0,-0.0187678225338459,0,0.00208531366661191,0.003127970267087221,0,0,-0.0005213284166529775,0,0,0,0,-0.00417062733322382,-0.003127970267087221,0,0,0,0,-0.00417062733322382,-0.004691955633461475,0,0.00417062733322382,0,0,-0.006255940534174442,-0.001042656833305955,0,0,0.003127970267087221,0,-0.010426567867398262,-0.003127970267087221,0,0.8633198142051697,0,0,-0.00208531366661191,0,0,0,0.001042656833305955,0,-0.00208531366661191,-0.02137446403503418,0,0.00834125466644764,0.005213283933699131,0,-0.00208531366661191,-0.005734612233936787,0,0,0.00208531366661191,0,-0.00208531366661191,-0.0005213284166529775,0,0.031279705464839935,0.0026066419668495655,0,-0.00417062733322382,0,0,0,0.0005213284166529775,0,0,0,0,0,0.001042656833305955,0,-0.006255940534174442,-0.0015639851335436106,0,0.00417062733322382,0.006777269300073385,0,-0.010426567867398262,-0.00208531366661191,0,0.020853135734796524,0.001042656833305955,0,0,-0.0015639851335436106,0,0.010426567867398262,0,0,0,-0.001042656833305955,0,0,0,0,-0.00417062733322382,-0.0005213284166529775,0,0,0.0015639851335436106,0,-0.006255940534174442,-0.004691955633461475,0,0.010426567867398262,0,0,-0.00208531366661191,-0.0026066419668495655,0,0.00208531366661191,0,0,-0.00417062733322382,-0.011469224467873573,0,0,0.0036492988001555204,0,-0.006255940534174442,-0.003127970267087221,0,0.006255940534174442,0,0,-0.00208531366661191,-0.006255940534174442,0,0.0750712901353836,0.43165990710258484,0,-0.006255940534174442,-0.003127970267087221,0,0.006255940534174442,0,0,0,-0.0015639851335436106,0,0.00417062733322382,0.00417062733322382,0,0,-0.0026066419668495655,0,0.00417062733322382,0,0,-0.00208531366661191,-0.001042656833305955,0,0.00208531366661191,0.016161181032657623,0,-0.00208531366661191,-0.004691955633461475,0,0.00834125466644764,0.0026066419668495655,0,0,-0.0026066419668495655,0,0,0.001042656833305955,0,0,-0.003127970267087221,0,0.00417062733322382,0.003127970267087221,0,0,-0.005213283933699131,0,0,0.010426567867398262,0,-0.00208531366661191,0,0,0,0.005213283933699131,0,-0.00417062733322382,-0.0005213284166529775,0,0,0.0005213284166529775,0,-0.00208531366661191,-0.0026066419668495655,0,0,0.0005213284166529775,0,0,-0.0036492988001555204,0,0.012511881068348885,0.005213283933699131,0,0,-0.0015639851335436106,0,0,0.001042656833305955,0,0,-0.00208531366661191,0,0,0.0005213284166529775,0,-0.0646447241306305,-0.003127970267087221,0,0,0.003127970267087221,0,-0.00208531366661191,-0.00208531366661191,0,0,0.0375356450676918,0,-0.00208531366661191,-0.00417062733322382,0,0.00208531366661191,0.00417062733322382,0,0,-0.0015639851335436106,0,0.00208531366661191,0.00208531366661191,0,0,-0.0026066419668495655,0,0.00417062733322382,0.21791526675224304,0,-0.00208531366661191,-0.0015639851335436106,0,0.022938448935747147,0.001042656833305955,0,-0.00417062733322382,-0.0015639851335436106,0,0,0.006255940534174442,0,-0.00208531366661191,-0.0005213284166529775,0,0,0,0,0,-0.0005213284166529775,0,0,0.009905239567160606,0,-0.00208531366661191,-0.001042656833305955,0,0.00208531366661191,0,0,-0.0187678225338459,-0.001042656833305955,0,0,0,0,-0.00208531366661191,-0.0036492988001555204,0,0,0.001042656833305955,0,-0.0375356450676918,-0.0036492988001555204,0,0.006255940534174442,0.005213283933699131,0,0,0,0,0,0.008862582966685295,0,-0.00417062733322382,0,0,0,0,0,-0.00834125466644764,-0.001042656833305955,0,0,0,0,-0.00208531366661191,-0.033886346966028214,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-5 -->\nBEQ                    BEQ Branch on result zero                      BEQ\n                                                        N Z C I D V\n  Operation:  Branch on Z = 1                           _ _ _ _ _ _\n                               (Ref: 4.1.1.5)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Relative      |   BEQ Oper            |    F0   |    2    |    2*    |\n  +----------------+-----------------------+---------+---------+----------+\n  * Add 1 if branch occurs to same  page.\n  * Add 2 if branch occurs to next  page.\n\nBIT             BIT Test bits in memory with accumulator              BIT\n\nOperation:  A /\\ M, M7 -> N, M6 -> V\n\nBit 6 and 7 are transferred to the status register.   N Z C I D V\n  If the result of A /\\ M is zero then Z = 1, otherwise M7/ _ _ _ M6\n  Z = 0\n                               (Ref: 4.2.1.1)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Zero Page     |   BIT Oper            |    24   |    2    |    3     |\n  |  Absolute      |   BIT Oper            |    2C   |    3    |    4     |\n  +----------------+-----------------------+---------+---------+----------+\n\nBMI                    BMI Branch on result minus                     BMI","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-5"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0.0020833229646086693,0.0020833229646086693,0,0,0,0,0,0.0005208307411521673,0,0,0,0,0.0020833229646086693,0,0,-0.0062499684281647205,0,0,0.010416614823043346,0.005208307411521673,0,-0.0020833229646086693,0,0,0,0.021874889731407166,0,0,-0.0020833229646086693,0,0.0062499684281647205,0.005208307411521673,0,0,-0.0020833229646086693,0,0,0,0,0,-0.0010416614823043346,0,0,0,0,0,0,0,0,0,0,0,-0.0005208307411521673,0,0,0.0020833229646086693,0,0,-0.007291629910469055,0,0,0,0,0,-0.0010416614823043346,0,0,0.0005208307411521673,0,0,-0.010416614823043346,0,0,0.0020833229646086693,0,0,0,0,0,0,0,0,-0.0036458149552345276,0,0.0020833229646086693,0.0005208307411521673,0,-0.0041666459292173386,-0.0005208307411521673,0,0.0020833229646086693,0,0,-0.008333291858434677,-0.0010416614823043346,0,0,0.0010416614823043346,0,-0.008333291858434677,0,0,0.866662323474884,0,0,0,0,0,0,0.0010416614823043346,0,0,-0.015624921768903732,0,0.0062499684281647205,0.005208307411521673,0,-0.0041666459292173386,-0.0010416614823043346,0,0,0,0,-0.0020833229646086693,0,0,0.020833229646086693,0.0031249842140823603,0,-0.0041666459292173386,0,0,0,0.0026041537057608366,0,0,0,0,0.0020833229646086693,0.0015624921070411801,0,-0.0062499684281647205,0,0,0.0062499684281647205,0.0026041537057608366,0,0,-0.0010416614823043346,0,0.01458325982093811,0,0,-0.0062499684281647205,-0.0005208307411521673,0,0.0041666459292173386,0,0,-0.0020833229646086693,0,0,0,0,0,-0.0041666459292173386,0,0,0,0.0005208307411521673,0,0,-0.0031249842140823603,0,0.008333291858434677,0,0,0,-0.0005208307411521673,0,0.0020833229646086693,0.0010416614823043346,0,0,-0.007291629910469055,0,0,0.0020833229646086693,0,0,-0.0041666459292173386,0,0,0,0,0,-0.005208307411521673,0,0.0749996230006218,0.433331161737442,0,-0.008333291858434677,0,0,0,0,0,0,-0.0005208307411521673,0,0,0.0036458149552345276,0,0,-0.0020833229646086693,0,0,0,0,0,-0.0010416614823043346,0,0,0.010937444865703583,0,-0.0020833229646086693,-0.0036458149552345276,0,0.0041666459292173386,0.0026041537057608366,0,-0.0041666459292173386,-0.0005208307411521673,0,0,0.0010416614823043346,0,0,-0.0031249842140823603,0,0.0020833229646086693,0.004687476437538862,0,0,0,0,0,0.007291629910469055,0,0,-0.0031249842140823603,0,0,0.0020833229646086693,0,-0.0062499684281647205,-0.0010416614823043346,0,0.0020833229646086693,0,0,-0.0020833229646086693,-0.0020833229646086693,0,0,0,0,0,0,0,0,0.0041666459292173386,0,0,0,0,0,0.0010416614823043346,0,0,0,0,0,0,0,-0.049999747425317764,0,0,0,0,0,0,0,0,0,0.03802064433693886,0,0,-0.005208307411521673,0,0,0.0005208307411521673,0,0,-0.0020833229646086693,0,0.010416614823043346,0,0,0,-0.0020833229646086693,0,0.0062499684281647205,0.216665580868721,0,0,0,0,0.010416614823043346,0,0,-0.0041666459292173386,-0.0010416614823043346,0,0,0.0036458149552345276,0,-0.0020833229646086693,-0.0031249842140823603,0,0,0,0,0,-0.0005208307411521673,0,0,0.0062499684281647205,0,0,-0.0010416614823043346,0,0.0020833229646086693,0,0,-0.012499936856329441,0,0,0,0.0005208307411521673,0,-0.0020833229646086693,-0.004687476437538862,0,0,0.0026041537057608366,0,-0.020833229646086693,-0.0010416614823043346,0,0.0041666459292173386,0.0036458149552345276,0,0,-0.0015624921070411801,0,0,0.0010416614823043346,0,-0.0041666459292173386,-0.0005208307411521673,0,0,0,0,0,-0.0010416614823043346,0,0,0,0,-0.0020833229646086693,-0.024999873712658882,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-9 -->\nOperation:  0 -> C                                    N Z C I D V\n                                                        _ _ 0 _ _ _\n                                (Ref: 3.0.2)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   CLC                 |    18   |    1    |    2     |\n  +----------------+-----------------------+---------+---------+----------+\n\nBASIC TO MACHINE LANGUAGE   239\n~\n\nCLD                      CLD Clear decimal mode                       CLD\n\nOperation:  0 -> D                                    N A C I D V\n                                                        _ _ _ _ 0 _\n                                (Ref: 3.3.2)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   CLD                 |    D8   |    1    |    2     |\n  +----------------+-----------------------+---------+---------+----------+\n\nCLI                  CLI Clear interrupt disable bit                  CLI","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-9"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.0020885022822767496,0,0,0,0,0,0.0010442511411383748,0,0,0,0,0.0020885022822767496,0,0,-0.004177004564553499,0,0,0.010442512109875679,0.004177004564553499,0,-0.004177004564553499,-0.0005221255705691874,0,0,0.020885024219751358,0,0,-0.0010442511411383748,0,0.0062655070796608925,0.0052212560549378395,0,0,-0.0020885022822767496,0,0,0,0,0,-0.0010442511411383748,0,0,0,0,-0.008354009129106998,0,0,0,0.0005221255705691874,0,-0.010442512109875679,-0.0005221255705691874,0,0.0020885022822767496,0.0026106280274689198,0,0,-0.004177004564553499,0,0,0,0,-0.0020885022822767496,-0.0010442511411383748,0,0.0020885022822767496,0,0,0,-0.010442512109875679,0,0,0.0031327535398304462,0,0,0,0,0,0,0,-0.0020885022822767496,-0.0036548790521919727,0,0.0020885022822767496,0,0,-0.004177004564553499,-0.0005221255705691874,0,0.0020885022822767496,0,0,-0.0062655070796608925,-0.0010442511411383748,0,0,0,0,-0.008354009129106998,0,0,0.8667284846305847,0,0,0,-0.0005221255705691874,0,0,0.0010442511411383748,0,0,-0.014619516208767891,0,0.0062655070796608925,0.0052212560549378395,0,-0.0020885022822767496,-0.0020885022822767496,0,0,0,0,0,0,0,0.020885024219751358,0.0031327535398304462,0,-0.004177004564553499,0,0,0,0.0020885022822767496,0,0,0,0,0,0.0010442511411383748,0,-0.004177004564553499,-0.004177004564553499,0,0.004177004564553499,0.0026106280274689198,0,0,-0.0062655070796608925,0,0.014619516208767891,0.0010442511411383748,0,-0.0020885022822767496,-0.0005221255705691874,0,0.004177004564553499,0,0,-0.0020885022822767496,-0.0010442511411383748,0,0,0.0010442511411383748,0,-0.004177004564553499,0,0,0,0.0005221255705691874,0,0,-0.0015663767699152231,0,0.008354009129106998,0,0,0,-0.0015663767699152231,0,0.004177004564553499,0.0010442511411383748,0,0,-0.0073097581043839455,0,0,0.0026106280274689198,0,0,-0.0031327535398304462,0,0,0,0,-0.0020885022822767496,-0.0052212560549378395,0,0.07518608123064041,0.43336424231529236,0,-0.004177004564553499,0,0,0,0,0,0,-0.0005221255705691874,0,0,0.0031327535398304462,0,0,-0.0010442511411383748,0,0,0,0,0,0,0,0.0020885022822767496,0.010964637622237206,0,-0.0020885022822767496,-0.0031327535398304462,0,0.0062655070796608925,0.0026106280274689198,0,-0.004177004564553499,-0.0010442511411383748,0,0,0,0,0,-0.0020885022822767496,0,0,0.0036548790521919727,0,0,0,0,0,0.0073097581043839455,0,0,-0.0010442511411383748,0,0,0.0020885022822767496,0,-0.0062655070796608925,-0.0031327535398304462,0,0,0,0,-0.0020885022822767496,-0.004699130076915026,0,0,0.0005221255705691874,0,0,0,0,0,0.004177004564553499,0,0,-0.0005221255705691874,0,0,0.0026106280274689198,0,-0.0020885022822767496,0,0,0,0,0,-0.05012405663728714,0,0,0,0,0,0,-0.0015663767699152231,0,0,0.03811516612768173,0,0,-0.0031327535398304462,0,0,0.0005221255705691874,0,0,-0.0015663767699152231,0,0.008354009129106998,0,0,0,-0.0020885022822767496,0,0.004177004564553499,0.21668212115764618,0,0,0,0,0.010442512109875679,0.0010442511411383748,0,-0.004177004564553499,-0.0010442511411383748,0,0,0.004699130076915026,0,-0.0020885022822767496,-0.0026106280274689198,0,0,0,0,0,0,0,0,0.0052212560549378395,0,0,-0.0010442511411383748,0,0.0020885022822767496,0,0,-0.0062655070796608925,0,0,0,0,0,-0.0020885022822767496,-0.004177004564553499,0,0,0.0010442511411383748,0,-0.020885024219751358,-0.0010442511411383748,0,0.0062655070796608925,0.0036548790521919727,0,0,-0.0005221255705691874,0,0,0.0010442511411383748,0,-0.004177004564553499,-0.0005221255705691874,0,0,0,0,0,-0.0020885022822767496,0,0,0,0,-0.0020885022822767496,-0.02506202831864357,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-10 -->\nOperation: 0 -> I                                     N Z C I D V\n                                                        _ _ _ 0 _ _\n                                (Ref: 3.2.2)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   CLI                 |    58   |    1    |    2     |\n  +----------------+-----------------------+---------+---------+----------+\n\nCLV                      CLV Clear overflow flag                      CLV\n\nOperation: 0 -> V                                     N Z C I D V\n                                                        _ _ _ _ _ 0\n                                (Ref: 3.6.1)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   CLV                 |    B8   |    1    |    2     |\n  +----------------+-----------------------+---------+---------+----------+\n\n240   BASIC TO MACHINE LANGUAGE\n~\n\nCMP                CMP Compare memory and accumulator                 CMP","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-10"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.003121695714071393,0,0,0,0,0,0.0010405653156340122,0,0,0,0,0.0020811306312680244,0.005723109003156424,0,-0.008324522525072098,0,0,0.010405652225017548,0.0010405653156340122,0,-0.008324522525072098,0,0,0.004162261262536049,0.020811304450035095,0,0,-0.0010405653156340122,0,0.004162261262536049,0.005202826112508774,0,0,-0.0020811306312680244,0,0,0,0,0,-0.0020811306312680244,0,0,0,0,-0.004162261262536049,-0.0005202826578170061,0,0,0.0005202826578170061,0,-0.0020811306312680244,-0.0005202826578170061,0,0,0.0020811306312680244,0,0,-0.0010405653156340122,0,0,0,0,-0.004162261262536049,-0.0010405653156340122,0,0,0,0,0,-0.014567913487553596,0,0,0.005723109003156424,0,0,0,0,0,0,0,-0.008324522525072098,-0.003121695714071393,0,0,0,0,-0.004162261262536049,-0.0010405653156340122,0,0,0,0,-0.0020811306312680244,-0.0010405653156340122,0,0,0,0,-0.012486782856285572,0,0,0.8615880608558655,0,0,0,-0.0010405653156340122,0,0,0.0010405653156340122,0,0,-0.029135826975107193,0,0.006243391428142786,0.005202826112508774,0,-0.004162261262536049,-0.004162261262536049,0,0,0.0020811306312680244,0,0,0,0,0.016649045050144196,0.003121695714071393,0,-0.004162261262536049,0,0,0,0,0,0,0,0,0,0.0010405653156340122,0,-0.0020811306312680244,-0.0020811306312680244,0,0.004162261262536049,0.002601413056254387,0,-0.0020811306312680244,-0.0020811306312680244,0,0.029135826975107193,0,0,0,-0.0010405653156340122,0,0.004162261262536049,0,0,0,-0.0020811306312680244,0,0,0,0,-0.004162261262536049,0,0,0.004162261262536049,0.0005202826578170061,0,0,0,0,0.012486782856285572,0,0,0,-0.004682543687522411,0,0.004162261262536049,0,0,0,-0.009365087375044823,0,0.014567913487553596,0.0010405653156340122,0,0,-0.0010405653156340122,0,0.004162261262536049,0,0,0,-0.007283956743776798,0,0.07492069900035858,0.43079403042793274,0,-0.004162261262536049,0,0,0,0,0,0,-0.0005202826578170061,0,0,0.003121695714071393,0,0,-0.0020811306312680244,0,0,0,0,-0.0020811306312680244,0,0,0.0020811306312680244,0.00884480495005846,0,-0.0020811306312680244,-0.004162261262536049,0,0.004162261262536049,0.002601413056254387,0,-0.004162261262536049,-0.0020811306312680244,0,0,0.0010405653156340122,0,0,-0.0010405653156340122,0,0,0.003121695714071393,0,0,-0.0010405653156340122,0,0.014567913487553596,0.014567913487553596,0,0,0,0,0,0.0020811306312680244,0,-0.004162261262536049,-0.0010405653156340122,0,0,0,0,-0.004162261262536049,-0.002601413056254387,0,0,0.0020811306312680244,0,0,0,0,0,0.006243391428142786,0,0,-0.0010405653156340122,0,0,0.0020811306312680244,0,-0.004162261262536049,0,0,0,0.007283956743776798,0,-0.09989426285028458,0,0,0,0.0020811306312680244,0,0,-0.0020811306312680244,0,0,0.03746034950017929,0,0,-0.003121695714071393,0,0.004162261262536049,0,0,0,-0.0005202826578170061,0,0,0,0,0,-0.003121695714071393,0,0.004162261262536049,0.21539701521396637,0,0,-0.0010405653156340122,0,0.010405652225017548,0.0010405653156340122,0,-0.004162261262536049,-0.0010405653156340122,0,0,0.003641978371888399,0,-0.004162261262536049,-0.003121695714071393,0,0,0,0,0,0,0,0,0.004162261262536049,0,0,-0.0010405653156340122,0,0.0020811306312680244,0.007283956743776798,0,0,0,0,0,0,0,-0.0020811306312680244,-0.002601413056254387,0,0,0.0010405653156340122,0,-0.029135826975107193,-0.002601413056254387,0,0.004162261262536049,0.007283956743776798,0,0,0,0,0,0.0010405653156340122,0,-0.004162261262536049,0,0,0,0,0,0,-0.003121695714071393,0,0,0.0010405653156340122,0,-0.0020811306312680244,-0.04994713142514229,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-12 -->\nCPX                  CPX Compare Memory and Index X                   CPX\n                                                        N Z C I D V\n  Operation:  X - M                                     / / / _ _ _\n                                 (Ref: 7.8)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Immediate     |   CPX *Oper           |    E0   |    2    |    2     |\n  |  Zero Page     |   CPX Oper            |    E4   |    2    |    3     |\n  |  Absolute      |   CPX Oper            |    EC   |    3    |    4     |\n  +----------------+-----------------------+---------+---------+----------+\n\nCPY                  CPY Compare memory and index Y                   CPY\n                                                        N Z C I D V\n  Operation:  Y - M                                     / / / _ _ _\n                                 (Ref: 7.9)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Immediate     |   CPY *Oper           |    C0   |    2    |    2     |\n  |  Zero Page     |   CPY Oper            |    C4   |    2    |    3     |\n  |  Absolute      |   CPY Oper            |    CC   |    3    |    4     |\n  +----------------+-----------------------+---------+---------+----------+","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-12"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.0015559010207653046,0,0,0,0,0,0.004667703062295914,0,0,0,0,0.002074534771963954,0.002074534771963954,0,-0.004149069543927908,0,0,0.010372674092650414,0,0,-0.004149069543927908,0,0,0.004149069543927908,0.020745348185300827,0,0,-0.001037267385981977,0,0.006223604083061218,0.007260871585458517,0,0,-0.002074534771963954,0,0,0.0005186336929909885,0,0,-0.001037267385981977,0,0,0.002074534771963954,0,-0.004149069543927908,0,0,0,0.0005186336929909885,0,-0.006223604083061218,-0.0005186336929909885,0,0,0.002074534771963954,0,0,-0.008298139087855816,0,0,0,0,-0.006223604083061218,-0.001037267385981977,0,0,0.0005186336929909885,0,0,-0.012447208166122437,0,0,0.0025931685231626034,0,0,0,0,0,0,0,-0.006223604083061218,-0.003111802041530609,0,0.002074534771963954,0,0,-0.004149069543927908,-0.0015559010207653046,0,0.002074534771963954,0,0,-0.006223604083061218,-0.001037267385981977,0,0,0.0005186336929909885,0,-0.008298139087855816,0,0,0.8630064725875854,0.0005186336929909885,0,0,0,0,0,0.001037267385981977,0,0,-0.024375783279538155,0,0.006223604083061218,0.005186337046325207,0,-0.002074534771963954,-0.002074534771963954,0,0,0.002074534771963954,0,0,0,0,0.016596278175711632,0.004149069543927908,0,-0.004149069543927908,0,0,0,0,0,-0.004149069543927908,0,0,0,0.001037267385981977,0,-0.004149069543927908,-0.002074534771963954,0,0.008298139087855816,0.0025931685231626034,0,0,-0.004149069543927908,0,0.02281988225877285,0,0,0,-0.0005186336929909885,0,0.004149069543927908,0.001037267385981977,0,-0.002074534771963954,-0.003111802041530609,0,0,0,0,-0.004149069543927908,0,0,0.014521743170917034,0.0005186336929909885,0,0,-0.0036304357927292585,0,0.006223604083061218,0,0,0,-0.0036304357927292585,0,0.018670812249183655,0.001037267385981977,0,0,-0.008298139087855816,0,0,0.002074534771963954,0,0,-0.003111802041530609,0,0,0,0,0,-0.005186337046325207,0,0.07468324899673462,0.4315032362937927,0,-0.004149069543927908,-0.0005186336929909885,0,0.008298139087855816,0,0,0,-0.0005186336929909885,0,0.002074534771963954,0.003111802041530609,0,0,-0.001037267385981977,0,0,0,0,0,0,0,0.002074534771963954,0.008816773071885109,0,-0.002074534771963954,-0.003111802041530609,0,0.004149069543927908,0.0025931685231626034,0,-0.004149069543927908,-0.003111802041530609,0,0,0.001037267385981977,0,0,-0.002074534771963954,0,0.002074534771963954,0.0057049705646932125,0,0,0,0,0.002074534771963954,0.011409941129386425,0,0,0,0,0,0.002074534771963954,0,-0.004149069543927908,-0.002074534771963954,0,0,0,0,-0.002074534771963954,-0.0036304357927292585,0,0,0.007260871585458517,0,0,0,0,0.002074534771963954,0.003111802041530609,0,0,-0.0015559010207653046,0,0.002074534771963954,0.009335406124591827,0,0,0,0,0,0,0,-0.08920499682426453,0,0,0,0,0,0,-0.0015559010207653046,0,0,0.03786025941371918,0,0,-0.003111802041530609,0,0.004149069543927908,0.004667703062295914,0,0,-0.0015559010207653046,0,0,0.001037267385981977,0,0,-0.002074534771963954,0,0.004149069543927908,0.21575161814689636,0,0,0,0,0.010372674092650414,0.001037267385981977,0,-0.004149069543927908,-0.001037267385981977,0,0,0.0036304357927292585,0,-0.002074534771963954,-0.0025931685231626034,0,0.004149069543927908,0,0,0,0,0,0,0.005186337046325207,0,0,-0.001037267385981977,0,0.002074534771963954,0.001037267385981977,0,-0.014521743170917034,-0.001037267385981977,0,0,0,0,-0.002074534771963954,-0.003111802041530609,0,0,0.002074534771963954,0,-0.024894416332244873,-0.001037267385981977,0,0.004149069543927908,0.0057049705646932125,0,0,0,0,0,0.002074534771963954,0,-0.004149069543927908,-0.0005186336929909885,0,0,0.001037267385981977,0,-0.002074534771963954,-0.001037267385981977,0,0,0.0036304357927292585,0,-0.002074534771963954,-0.04460249841213226,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-13 -->\nBASIC TO MACHINE LANGUAGE   241\n~\n\nDEC                   DEC Decrement memory by one                     DEC\n\nOperation:  M - 1 -> M                                N Z C I D V\n                                                        / / _ _ _ _\n                                 (Ref: 10.7)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Zero Page     |   DEC Oper            |    C6   |    2    |    5     |\n  |  Zero Page,X   |   DEC Oper,X          |    D6   |    2    |    6     |\n  |  Absolute      |   DEC Oper            |    CE   |    3    |    6     |\n  |  Absolute,X    |   DEC Oper,X          |    DE   |    3    |    7     |\n  +----------------+-----------------------+---------+---------+----------+\n\nDEX                   DEX Decrement index X by one                    DEX\n\nOperation:  X - 1 -> X                                N Z C I D V\n                                                        / / _ _ _ _\n                                 (Ref: 7.6)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   DEX                 |    CA   |    1    |    2     |\n  +----------------+-----------------------+---------+---------+----------+","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-13"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.0010154943447560072,0,0,0,0,0,0.0010154943447560072,0,-0.004061977379024029,-0.0020309886895120144,0,0.004061977379024029,0,0,0,0,0,0.012185932137072086,0,0,-0.004061977379024029,-0.0030464830342680216,0,0,0.02030988596379757,0,0,-0.004061977379024029,0,0.008123954758048058,0.006092966068536043,0,0,-0.0020309886895120144,0,0,0,0,0,-0.0020309886895120144,0,0,0.0020309886895120144,0,0,0,0,0,0.0010154943447560072,0,-0.004061977379024029,-0.0010154943447560072,0,0,0.0030464830342680216,0,0,-0.007108460180461407,0,0,0,0,0,-0.0020309886895120144,0,0,0,0,-0.004061977379024029,-0.008123954758048058,0,0,0.0030464830342680216,0,0,0,0,0,0,0,-0.008123954758048058,-0.0030464830342680216,0,0.004061977379024029,0,0,-0.004061977379024029,-0.0010154943447560072,0,0.004061977379024029,0,0,-0.008123954758048058,-0.0020309886895120144,0,0,0,0,-0.008123954758048058,0,0,0.8652011752128601,0,0,0,-0.004061977379024029,0,0,0.0020309886895120144,0,0,-0.013201425783336163,0,0.008123954758048058,0.006092966068536043,0,-0.004061977379024029,-0.0020309886895120144,0,0,0,0,0,-0.0010154943447560072,0,0.02030988596379757,0.004061977379024029,0,-0.004061977379024029,0,0,0,0,0,-0.004061977379024029,-0.0010154943447560072,0,0,0.0010154943447560072,0,-0.008123954758048058,0,0,0.008123954758048058,0.0030464830342680216,0,0,-0.0030464830342680216,0,0.048743728548288345,0,0,0,-0.0010154943447560072,0,0.004061977379024029,0.0010154943447560072,0,-0.004061977379024029,0,0,0,0,0,-0.004061977379024029,-0.0020309886895120144,0,0.004061977379024029,0.0010154943447560072,0,0,-0.0020309886895120144,0,0.004061977379024029,0,0,0,-0.005077471490949392,0,0.004061977379024029,0.0020309886895120144,0,0,-0.006092966068536043,0,0,0.0030464830342680216,0,0,-0.004061977379024029,0,0,0,0,-0.004061977379024029,-0.005077471490949392,0,0.07311558723449707,0.43260058760643005,0,-0.016247909516096115,0,0,0,0,0,0,-0.0010154943447560072,0,0,0.004061977379024029,0,0,-0.0020309886895120144,0,0,0,0,0,-0.0010154943447560072,0,0.004061977379024029,0.011170437559485435,0,-0.004061977379024029,-0.0020309886895120144,0,0.004061977379024029,0.0030464830342680216,0,-0.012185932137072086,-0.0030464830342680216,0,0,0,0,0,-0.004061977379024029,0,0,0.006092966068536043,0,0,0,0,0.004061977379024029,0.024371864274144173,0,0,0,0,0,0.0020309886895120144,0,-0.004061977379024029,-0.0020309886895120144,0,0,0,0,-0.004061977379024029,-0.0030464830342680216,0,0,0.0020309886895120144,0,0,0,0,0,0.0020309886895120144,0,0,0,0,0,0.0020309886895120144,0,-0.008123954758048058,-0.0010154943447560072,0,0,0,0,-0.05280570313334465,0,0,0,0,0,0,-0.004061977379024029,0,0,0.03757328912615776,0,-0.004061977379024029,-0.009139448404312134,0,0,0.0010154943447560072,0,0,-0.0020309886895120144,0,0,0,0,-0.004061977379024029,-0.0020309886895120144,0,0.004061977379024029,0.21630029380321503,0,0,0,0,0.012185932137072086,0.0020309886895120144,0,-0.004061977379024029,-0.0020309886895120144,0,0,0.004061977379024029,0,-0.004061977379024029,-0.007108460180461407,0,0.004061977379024029,0,0,0,0,0,0,0.005077471490949392,0,0,-0.0010154943447560072,0,0.004061977379024029,0.0020309886895120144,0,-0.008123954758048058,-0.0010154943447560072,0,0,0,0,-0.004061977379024029,-0.004061977379024029,0,0,0.0020309886895120144,0,-0.016247909516096115,-0.0020309886895120144,0,0.004061977379024029,0.012185932137072086,0,0,0,0,0,0.0010154943447560072,0,-0.004061977379024029,-0.0010154943447560072,0,0,0,0,0,-0.005077471490949392,0,0,0.0010154943447560072,0,-0.004061977379024029,-0.026402851566672325,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-14 -->\nDEY                   DEY Decrement index Y by one                    DEY\n\nOperation:  X - 1 -> Y                                N Z C I D V\n                                                        / / _ _ _ _\n                                 (Ref: 7.7)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   DEY                 |    88   |    1    |    2     |\n  +----------------+-----------------------+---------+---------+----------+\n\n242   BASIC TO MACHINE LANGUAGE\n~\n\nEOR            EOR \"Exclusive-Or\" memory with accumulator             EOR","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-14"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.001562846009619534,0,0,0,0,0,0.000520948669873178,0,0,0,0,0.002083794679492712,0.002083794679492712,0,-0.006251384038478136,0,0,0.010418972931802273,0,0,-0.004167589358985424,0,0,0.004167589358985424,0.02187984436750412,0,0,-0.001041897339746356,0,0.006251384038478136,0.007293281145393848,0,0,-0.002083794679492712,0,0,0,0,0,-0.001041897339746356,0,0,0.002083794679492712,0,-0.004167589358985424,-0.001041897339746356,0,0,0.000520948669873178,0,-0.010418972931802273,-0.000520948669873178,0,0,0.002083794679492712,0,0,-0.003646640572696924,0,0,0,0,-0.006251384038478136,-0.001041897339746356,0,0,0,0,0,-0.014065613970160484,0,0,0.002083794679492712,0,0,0,0,0,0,0,-0.004167589358985424,-0.003125692019239068,0,0.002083794679492712,0,0,-0.004167589358985424,-0.001562846009619534,0,0.002083794679492712,0,0,-0.006251384038478136,-0.001041897339746356,0,0.002083794679492712,0,0,-0.008335178717970848,0,0,0.8626909852027893,0.003646640572696924,0,0,0,0,0.002083794679492712,0.001041897339746356,0,0,-0.025005536153912544,0,0.006251384038478136,0.005209486465901136,0,-0.002083794679492712,-0.002083794679492712,0,0,0.002083794679492712,0,0,0,0,0.016670357435941696,0.004167589358985424,0,-0.004167589358985424,0,0,0,0,0,-0.006251384038478136,0,0,0,0.001041897339746356,0,-0.012502768076956272,-0.002083794679492712,0,0.004167589358985424,0.002604743232950568,0,0,-0.006251384038478136,0,0.025005536153912544,0,0,0,-0.000520948669873178,0,0.004167589358985424,0.001041897339746356,0,-0.002083794679492712,-0.003125692019239068,0,0,0,0,-0.004167589358985424,0,0,0.014586562290787697,0.000520948669873178,0,0,-0.001562846009619534,0,0.006251384038478136,0,0,0,-0.002604743232950568,0,0.002083794679492712,0.001041897339746356,0,0,-0.00885612703859806,0,0,0.002083794679492712,0,0,-0.003125692019239068,0,0,0.001041897339746356,0,0,-0.005209486465901136,0,0.07918419688940048,0.43134549260139465,0,-0.004167589358985424,-0.000520948669873178,0,0.008335178717970848,0.001041897339746356,0,0,-0.000520948669873178,0,0,0.003125692019239068,0,0,-0.001041897339746356,0,0,0,0,-0.004167589358985424,0,0,0.002083794679492712,0.00885612703859806,0,-0.002083794679492712,-0.003646640572696924,0,0.004167589358985424,0.002604743232950568,0,-0.002083794679492712,-0.004167589358985424,0,0,0.001041897339746356,0,0,-0.006251384038478136,0,0,0.003646640572696924,0,-0.002083794679492712,0,0,0,0.012502768076956272,0,0,0,0,0,0.002083794679492712,0,-0.004167589358985424,-0.002083794679492712,0,0,0,0,-0.002083794679492712,-0.004688538145273924,0,0,0.007293281145393848,0,0,0,0,0,0.003125692019239068,0,0,-0.001562846009619534,0,0.014586562290787697,0.001041897339746356,0,0,0,0,0,0,0,-0.08751937747001648,0,0,0,0,0,0,-0.001041897339746356,0,0,0.040113046765327454,0,0,-0.003125692019239068,0,0.004167589358985424,0.004688538145273924,0,0,-0.001562846009619534,0,0,0.000520948669873178,0,0,-0.002083794679492712,0,0.004167589358985424,0.21567274630069733,0,0,-0.002083794679492712,0,0.010418972931802273,0.001562846009619534,0,-0.004167589358985424,-0.001041897339746356,0,0,0.003646640572696924,0,-0.002083794679492712,-0.001562846009619534,0,0.004167589358985424,0,0,0,0,0,0,0.004167589358985424,0,0,-0.002083794679492712,0,0.002083794679492712,0,0,-0.006251384038478136,-0.001562846009619534,0,0,0,0,-0.002083794679492712,-0.005209486465901136,0,0,0.001041897339746356,0,-0.027089329436421394,-0.001041897339746356,0,0.004167589358985424,0.006251384038478136,0,0,0,0,0,0.001041897339746356,0,-0.004167589358985424,-0.000520948669873178,0,0,0.007293281145393848,0,-0.002083794679492712,-0.001041897339746356,0,0,0.003646640572696924,0,-0.002083794679492712,-0.04375968873500824,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-16 -->\nINC                    INC Increment memory by one                    INC\n                                                        N Z C I D V\n  Operation:  M + 1 -> M                                / / _ _ _ _\n                                 (Ref: 10.6)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Zero Page     |   INC Oper            |    E6   |    2    |    5     |\n  |  Zero Page,X   |   INC Oper,X          |    F6   |    2    |    6     |\n  |  Absolute      |   INC Oper            |    EE   |    3    |    6     |\n  |  Absolute,X    |   INC Oper,X          |    FE   |    3    |    7     |\n  +----------------+-----------------------+---------+---------+----------+\n\nINX                    INX Increment Index X by one                   INX\n                                                        N Z C I D V\n  Operation:  X + 1 -> X                                / / _ _ _ _\n                                 (Ref: 7.4)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   INX                 |    E8   |    1    |    2     |\n  +----------------+-----------------------+---------+---------+----------+\n\nBASIC TO MACHINE LANGUAGE   243\n~","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-16"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.00208295788615942,0,0,-0.00520739471539855,0,0,0.000520739471539855,0,0,0,0,0.00208295788615942,0.00208295788615942,0,-0.00624887365847826,-0.00104147894307971,0,0.018746621906757355,0.00104147894307971,0,-0.00416591577231884,-0.00104147894307971,0,0,0.023433275520801544,0,0,-0.00104147894307971,0,0.00416591577231884,0.00624887365847826,0,0,-0.00208295788615942,0,0,0,0,0,-0.00104147894307971,0,0.00416591577231884,0.00104147894307971,0,-0.00416591577231884,-0.000520739471539855,0,0,0,0,-0.00208295788615942,-0.000520739471539855,0,0,0.00312443682923913,0,0,-0.00520739471539855,0,0,0.00208295788615942,0,0,-0.00104147894307971,0,0,0,0,0,-0.014059965498745441,0,0.00416591577231884,0.00208295788615942,0,0,-0.00208295788615942,0,0,0,0,-0.00208295788615942,-0.00312443682923913,0,0,0,0,-0.01249774731695652,-0.002603697357699275,0,0,0,0,-0.00833183154463768,-0.00104147894307971,0,0,0,0,-0.00833183154463768,0,0,0.8644275069236755,0,0,0,0,0,0,0.00104147894307971,0,0,-0.019267359748482704,0,0.00624887365847826,0.009373310953378677,0,-0.00416591577231884,-0.004686655476689339,0,0,0,0,0,0,0,0.022912537679076195,0.002603697357699275,0,-0.01249774731695652,0,0,0,0.000520739471539855,0,-0.00208295788615942,-0.000520739471539855,0,0,0.003645176300778985,0,-0.00208295788615942,-0.00208295788615942,0,0.00416591577231884,0.002603697357699275,0,0,-0.00208295788615942,0,0.0208295788615942,0,0,0,-0.000520739471539855,0,0.00416591577231884,0.000520739471539855,0,0,0,0,0,0,0,-0.00416591577231884,0,0,0.00624887365847826,0.00312443682923913,0,0,-0.00208295788615942,0,0.00833183154463768,0,0,0,-0.001562218414619565,0,0.00208295788615942,0,0,0,-0.013018487021327019,0,0.00416591577231884,0.00104147894307971,0,-0.00416591577231884,-0.00520739471539855,0,0,0,0,0,-0.00520739471539855,0,0.0812353566288948,0.43221375346183777,0,-0.00416591577231884,-0.00104147894307971,0,0.00416591577231884,0,0,0,-0.000520739471539855,0,0,0.00312443682923913,0,0,-0.00208295788615942,0,0,0,0,-0.00208295788615942,0,0,0,0.011977007612586021,0,-0.00208295788615942,-0.007811092305928469,0,0.00416591577231884,0.004686655476689339,0,-0.00416591577231884,-0.00208295788615942,0,0.00833183154463768,0,0,0,-0.00104147894307971,0,0,0.00312443682923913,0,-0.00208295788615942,0,0,0,0.0104147894307971,0,0,0,0,0,0.00312443682923913,0,-0.00416591577231884,-0.00104147894307971,0,0,0,0,-0.00208295788615942,-0.002603697357699275,0,0,0.00312443682923913,0,0,0,0,0,0.00416591577231884,0,0,0,0,0,0.00104147894307971,0,0,0,0,0,0.00312443682923913,0,-0.06457169353961945,-0.00208295788615942,0,0,0,0,-0.0104147894307971,-0.000520739471539855,0,0,0.0406176783144474,0,0,-0.00520739471539855,0,0.00208295788615942,0.00208295788615942,0,0,-0.00208295788615942,0,0.00208295788615942,0,0,-0.00208295788615942,-0.00208295788615942,0,0.00624887365847826,0.21610687673091888,0,0,-0.00104147894307971,0,0.0104147894307971,0,0,-0.00416591577231884,-0.00104147894307971,0,0,0.003645176300778985,0,-0.00208295788615942,-0.00312443682923913,0,0.00208295788615942,0.00416591577231884,0,0,0,0,0,0.005728134419769049,0,0,-0.00416591577231884,0,0.00416591577231884,0,0,-0.00833183154463768,-0.000520739471539855,0,0,0,0,-0.00208295788615942,-0.002603697357699275,0,0,0.00104147894307971,0,-0.027078453451395035,-0.00104147894307971,0,0.00416591577231884,0.00520739471539855,0,-0.00416591577231884,0,0,0,0.00104147894307971,0,-0.00416591577231884,0,0,0,0,0,-0.00416591577231884,-0.00104147894307971,0,0,0.001562218414619565,0,-0.00208295788615942,-0.03228584676980972,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-17 -->\nINY                    INY Increment Index Y by one                   INY\n\nOperation:  X + 1 -> X                                N Z C I D V\n                                                        / / _ _ _ _\n                                 (Ref: 7.5)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   INY                 |    C8   |    1    |    2     |\n  +----------------+-----------------------+---------+---------+----------+\n\nJMP                     JMP Jump to new location                      JMP\n\nOperation:  (PC + 1) -> PCL                           N Z C I D V\n              (PC + 2) -> PCH   (Ref: 4.0.2)            _ _ _ _ _ _\n                                (Ref: 9.8.1)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Absolute      |   JMP Oper            |    4C   |    3    |    3     |\n  |  Indirect      |   JMP (Oper)          |    6C   |    3    |    5     |\n  +----------------+-----------------------+---------+---------+----------+\n\nJSR          JSR Jump to new location saving return address           JSR","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-17"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.004021839704364538,0,0,0,0,0,0.0010054599260911345,0,0,-0.002010919852182269,0,0.004021839704364538,0.004021839704364538,0,-0.012065518647432327,0,0,0.012065518647432327,0.003016379661858082,0,-0.008043679408729076,-0.0010054599260911345,0,0.004021839704364538,0.02010919712483883,0,0,-0.0010054599260911345,0,0.004021839704364538,0.010054598562419415,0,0,-0.004021839704364538,0,0,0.0010054599260911345,0,0,-0.002010919852182269,0,0,0,0,-0.008043679408729076,-0.0010054599260911345,0,0,0.002010919852182269,0,0,-0.0010054599260911345,0,0.004021839704364538,0.003016379661858082,0,0,-0.006032759323716164,0,0.004021839704364538,0.0010054599260911345,0,-0.008043679408729076,-0.010054598562419415,0,0,0,0,0,-0.022120118141174316,0,0,0.004021839704364538,0,-0.004021839704364538,0,0,0,0.002010919852182269,0,-0.004021839704364538,-0.003016379661858082,0,0,0,0,-0.012065518647432327,-0.002010919852182269,0,0,0,0,-0.008043679408729076,-0.002010919852182269,0,0,0.004021839704364538,0,-0.012065518647432327,0,0,0.8526299595832825,0,0,0,0,0,0,0.002010919852182269,0,0,-0.042229317128658295,0,0.008043679408729076,0.006032759323716164,0,-0.004021839704364538,-0.004021839704364538,0,0,0.002010919852182269,0,-0.004021839704364538,-0.0010054599260911345,0,0.024131037294864655,0.004021839704364538,0,-0.012065518647432327,0,0,0,0,0,-0.004021839704364538,0,0,0.004021839704364538,0.0010054599260911345,0,-0.004021839704364538,-0.004021839704364538,0,0.004021839704364538,0.003016379661858082,0,0,-0.002010919852182269,0,0.032174717634916306,0.002010919852182269,0,0,-0.0010054599260911345,0,0.004021839704364538,0.002010919852182269,0,0,-0.004021839704364538,0,0,0,0,-0.004021839704364538,0,0,0.016087358817458153,0.0010054599260911345,0,0,-0.004021839704364538,0,0.016087358817458153,0,0,0,-0.003016379661858082,0,0.004021839704364538,0,0,0,-0.017092818394303322,0,0,0.0010054599260911345,0,0,-0.004021839704364538,0,0.012065518647432327,0.0010054599260911345,0,-0.004021839704364538,-0.00703821936622262,0,0.07239311188459396,0.42631497979164124,0,-0.004021839704364538,0,0,0.016087358817458153,0,0,0,-0.0010054599260911345,0,0.004021839704364538,0.004021839704364538,0,0,-0.002010919852182269,0,0,0,0,-0.004021839704364538,-0.002010919852182269,0,0.008043679408729076,0.013070978224277496,0,-0.004021839704364538,-0.009049138985574245,0,0.004021839704364538,0.003016379661858082,0,-0.008043679408729076,-0.004021839704364538,0,0.004021839704364538,0.003016379661858082,0,-0.032174717634916306,-0.002010919852182269,0,0,0.003016379661858082,0,0,0,0,0.008043679408729076,0.016087358817458153,0,0,0,0,0,0.002010919852182269,0,-0.004021839704364538,-0.002010919852182269,0,0,0,0,-0.008043679408729076,-0.002010919852182269,0,0,0.009049138985574245,0,0,0,0,0.016087358817458153,0.009049138985574245,0,0,-0.002010919852182269,0,0,0.002010919852182269,0,0,0,0,0,0,0,-0.14478622376918793,-0.0010054599260911345,0,0,0.006032759323716164,0,0,-0.003016379661858082,0,0,0.03619655594229698,0,-0.004021839704364538,-0.005027299281209707,0,0.008043679408729076,0.008043679408729076,0,0,-0.002010919852182269,0,0,0.002010919852182269,0,0,-0.003016379661858082,0,0.004021839704364538,0.21315748989582062,0,0,-0.002010919852182269,0,0.012065518647432327,0.004021839704364538,0,-0.008043679408729076,-0.002010919852182269,0,0,0.004021839704364538,0,-0.004021839704364538,-0.005027299281209707,0,0,0.002010919852182269,0,0,-0.017092818394303322,0,0,0.006032759323716164,0,0,-0.003016379661858082,0,0.004021839704364538,0.004021839704364538,0,-0.008043679408729076,-0.0010054599260911345,0,0,0.0010054599260911345,0,-0.004021839704364538,-0.003016379661858082,0,0,0.0010054599260911345,0,-0.04424023628234863,-0.004021839704364538,0,0.004021839704364538,0.008043679408729076,0,0,0,0,0.004021839704364538,0.009049138985574245,0,-0.004021839704364538,0,0,0,0,0,0,-0.0010054599260911345,0,0,0.004021839704364538,0,-0.004021839704364538,-0.07239311188459396,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-21 -->\nLDY                   LDY Load index Y with memory                    LDY\n                                                        N Z C I D V\n  Operation:  M -> Y                                    / / _ _ _ _\n                                 (Ref: 7.1)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Immediate     |   LDY #Oper           |    A0   |    2    |    2     |\n  |  Zero Page     |   LDY Oper            |    A4   |    2    |    3     |\n  |  Zero Page,X   |   LDY Oper,X          |    B4   |    2    |    4     |\n  |  Absolute      |   LDY Oper            |    AC   |    3    |    4     |\n  |  Absolute,X    |   LDY Oper,X          |    BC   |    3    |    4*    |\n  +----------------+-----------------------+---------+---------+----------+\n  * Add 1 when page boundary is crossed.\n\nLSR          LSR Shift right one bit (memory or accumulator)          LSR","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-21"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.0034869357477873564,0,0,0,0,0,0.0004981337115168571,0,0,-0.0009962674230337143,0,0.003985069692134857,0.0019925348460674286,0,-0.0059776040725409985,0,0,0.007970139384269714,0.0029888020362704992,0,-0.003985069692134857,-0.0004981337115168571,0,0,0.02789548598229885,0,0,-0.0009962674230337143,0,0.0059776040725409985,0.006973871495574713,0,0,-0.0029888020362704992,0,0,0,0,0,-0.0014944010181352496,0,0,0,0,-0.003985069692134857,-0.0009962674230337143,0,0,0.0014944010181352496,0,-0.0059776040725409985,-0.0004981337115168571,0,0,0.0019925348460674286,0,0,-0.004483203403651714,0,0,0.0014944010181352496,0,-0.0059776040725409985,-0.0009962674230337143,0,0,0.0004981337115168571,0,-0.0019925348460674286,-0.013947742991149426,0,0,0.0019925348460674286,0,-0.0019925348460674286,0,0,0,0,0,-0.003985069692134857,-0.0049813371151685715,0,0.0019925348460674286,0.0019925348460674286,0,-0.003985069692134857,-0.0024906685575842857,0,0.0019925348460674286,0,0,-0.0059776040725409985,-0.0009962674230337143,0,0,0.0024906685575842857,0,-0.011955208145081997,0,0,0.8567899465560913,0,0,0,-0.0014944010181352496,0,0,0.0019925348460674286,0,0,-0.031382422894239426,0,0.0059776040725409985,0.003985069692134857,0,-0.0019925348460674286,-0.0019925348460674286,0,0.0019925348460674286,0,0,0,-0.0004981337115168571,0,0.013947742991149426,0.003985069692134857,0,-0.003985069692134857,0,0,0,0.0014944010181352496,0,0,0,0,0.0019925348460674286,0.0004981337115168571,0,-0.003985069692134857,-0.0019925348460674286,0,0.003985069692134857,0.0024906685575842857,0,0,-0.004483203403651714,0,0.017932813614606857,0,0,0,-0.0004981337115168571,0,0.003985069692134857,0,0,-0.0019925348460674286,-0.0034869357477873564,0,0,0.0004981337115168571,0,-0.003985069692134857,-0.0009962674230337143,0,0.007970139384269714,0.0004981337115168571,0,0,-0.0029888020362704992,0,0.013947742991149426,0.0004981337115168571,0,0,-0.0024906685575842857,0,0.0019925348460674286,0.0009962674230337143,0,0,-0.008966406807303429,0,0,0.0019925348460674286,0,0,-0.0029888020362704992,0,0,0,0,-0.0019925348460674286,-0.006973871495574713,0,0.10759687423706055,0.42839497327804565,0,-0.003985069692134857,-0.0009962674230337143,0,0.007970139384269714,0,0,0,-0.0004981337115168571,0,0,0.0029888020362704992,0,-0.0019925348460674286,-0.0009962674230337143,0,0,0.0009962674230337143,0,0,0,0,0.0019925348460674286,0.007970139384269714,0,-0.0019925348460674286,-0.0034869357477873564,0,0.003985069692134857,0.0019925348460674286,0,-0.0019925348460674286,-0.0009962674230337143,0,0.0019925348460674286,0.0009962674230337143,0,0,-0.0019925348460674286,0,0.0019925348460674286,0.0034869357477873564,0,0,0,0,0,0.008966406807303429,0,0,0,0,0,0.0019925348460674286,0,-0.011955208145081997,-0.0019925348460674286,0,0.007970139384269714,0,0,-0.0019925348460674286,-0.0034869357477873564,0,0,0.003985069692134857,0,0,0,0,0.009962674230337143,0.006973871495574713,0,0,-0.0014944010181352496,0,0,0.0009962674230337143,0,-0.0059776040725409985,-0.0004981337115168571,0,0,0,0,-0.11357448250055313,-0.0004981337115168571,0,0,0,0,0,-0.0019925348460674286,0,0,0.054296571761369705,0,-0.0019925348460674286,-0.0029888020362704992,0,0.003985069692134857,0.004483203403651714,0,0,-0.0014944010181352496,0,0.0059776040725409985,0,0,0,-0.003985069692134857,0,0.0019925348460674286,0.21419748663902283,0,0,0,0,0.009962674230337143,0.0009962674230337143,0,-0.0059776040725409985,-0.0009962674230337143,0,0,0.0034869357477873564,0,-0.0019925348460674286,-0.0014944010181352496,0,0,0.0014944010181352496,0,-0.0019925348460674286,0,0,0.0019925348460674286,0.004483203403651714,0,0,-0.0009962674230337143,0,0.0019925348460674286,0,0,-0.007970139384269714,0,0,0.0019925348460674286,0.0004981337115168571,0,-0.0019925348460674286,-0.006973871495574713,0,0,0.0049813371151685715,0,-0.02789548598229885,-0.0009962674230337143,0,0.003985069692134857,0.004483203403651714,0,0,0,0,0,0.0059776040725409985,0,-0.003985069692134857,-0.0004981337115168571,0,0,0,0,-0.003985069692134857,-0.003985069692134857,0,0,0.0019925348460674286,0,-0.0019925348460674286,-0.056787241250276566,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-22 -->\n+-+-+-+-+-+-+-+-+\n  Operation:  0 -> |7|6|5|4|3|2|1|0| -> C               N Z C I D V\n                   +-+-+-+-+-+-+-+-+                    0 / / _ _ _\n                                 (Ref: 10.1)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Accumulator   |   LSR A               |    4A   |    1    |    2     |\n  |  Zero Page     |   LSR Oper            |    46   |    2    |    5     |\n  |  Zero Page,X   |   LSR Oper,X          |    56   |    2    |    6     |\n  |  Absolute      |   LSR Oper            |    4E   |    3    |    6     |\n  |  Absolute,X    |   LSR Oper,X          |    5E   |    3    |    7     |\n  +----------------+-----------------------+---------+---------+----------+\n\nNOP                         NOP No operation                          NOP\n                                                        N Z C I D V\n  Operation:  No Operation (2 cycles)                   _ _ _ _ _ _\n\n+----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   NOP                 |    EA   |    1    |    2     |\n  +----------------+-----------------------+---------+---------+----------+\n\n246   BASIC TO MACHINE LANGUAGE\n~\n\nORA                 ORA \"OR\" memory with accumulator                  ORA","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-22"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0,0,0,0,0,0,0.0005257775192148983,0,0,0,0,0.0021031100768595934,0.0005257775192148983,0,-0.012618660926818848,0,0,0.010515551082789898,0,0,-0.004206220153719187,-0.0010515550384297967,0,0,0.021031102165579796,0,0,-0.0021031100768595934,0,0.006309330463409424,0.005783552769571543,0,0,-0.0026288877706974745,0,0,0,0,0,-0.003154665231704712,0,0,0.0021031100768595934,0,0,-0.0010515550384297967,0,0,0,0,-0.0021031100768595934,-0.0005257775192148983,0,0,0.0021031100768595934,0,0,-0.003154665231704712,0,0,0,0,0,-0.0010515550384297967,0,0,0.0005257775192148983,0,0,-0.012618660926818848,0,0,0.0021031100768595934,0,0,0,0,0,0,0,0,-0.003154665231704712,0,0.0021031100768595934,0,0,-0.004206220153719187,-0.001577332615852356,0,0.0021031100768595934,0,0,-0.0021031100768595934,-0.0036804426927119493,0,0,0,0,-0.008412440307438374,0,0,0.866481363773346,0,0,0,0,0,0,0.0010515550384297967,0,0,-0.01892799139022827,0,0.008412440307438374,0.005257775541394949,0,-0.0021031100768595934,-0.0021031100768595934,0,0,0,0,0,0,0,0.016824880614876747,0.003154665231704712,0,-0.004206220153719187,0,0,0,0,0,0,0,0,0,0.0010515550384297967,0,-0.004206220153719187,-0.0005257775192148983,0,0.004206220153719187,0.0026288877706974745,0,0,-0.0021031100768595934,0,0.01892799139022827,0,0,0,-0.001577332615852356,0,0.014721770770847797,0.0010515550384297967,0,-0.0021031100768595934,-0.0005257775192148983,0,0,0,0,-0.004206220153719187,0,0,0,0.0005257775192148983,0,0,-0.0010515550384297967,0,0,0,0,0,-0.0005257775192148983,0,0.0021031100768595934,0.0010515550384297967,0,0,-0.008412440307438374,0,0.0021031100768595934,0.0021031100768595934,0,0,-0.0010515550384297967,0,0,0,0,-0.004206220153719187,-0.005257775541394949,0,0.07571196556091309,0.433240681886673,0,-0.004206220153719187,-0.0005257775192148983,0,0.0021031100768595934,0,0,-0.0021031100768595934,-0.001577332615852356,0,0,0.004206220153719187,0,0,-0.0010515550384297967,0,0,0,0,0,0,0,0,0.008938218466937542,0,-0.0021031100768595934,-0.005257775541394949,0,0.004206220153719187,0.0026288877706974745,0,-0.004206220153719187,-0.0010515550384297967,0,0,0,0,0,-0.0021031100768595934,0,0.0021031100768595934,0.0036804426927119493,0,0,0,0,0,0.009463995695114136,0,0,0,0,0,0.007360885385423899,0,-0.004206220153719187,-0.0010515550384297967,0,0,0,0,-0.0021031100768595934,-0.0026288877706974745,0,0,0,0,-0.0021031100768595934,0,0,0,0,0,0,0,0,0,0.0010515550384297967,0,0,0,0,0,0.0010515550384297967,0,-0.05047464370727539,0,0,0,0,0,0,-0.0021031100768595934,0,0,0.03838175907731056,0,0,-0.003154665231704712,0,0,0.001577332615852356,0,0,-0.001577332615852356,0,0,0,0,0,-0.0021031100768595934,0,0.004206220153719187,0.2166203409433365,0,-0.0021031100768595934,0,0,0.010515551082789898,0,0,-0.004206220153719187,-0.0010515550384297967,0,0,0.004206220153719187,0,-0.006309330463409424,-0.0026288877706974745,0,0.004206220153719187,0,0,-0.0021031100768595934,0,0,0,0.005257775541394949,0,0,-0.0010515550384297967,0,0.0021031100768595934,0,0,-0.004206220153719187,0,0,0,0,0,-0.0021031100768595934,-0.003154665231704712,0,0,0.0010515550384297967,0,-0.025237321853637695,-0.0010515550384297967,0,0.004206220153719187,0.004731997847557068,0,0,-0.0010515550384297967,0,0,0.0036804426927119493,0,-0.004206220153719187,-0.0005257775192148983,0,0,0,0,-0.0021031100768595934,-0.0010515550384297967,0,0,0,0,-0.006309330463409424,-0.025237321853637695,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-24 -->\nOperation:  A toS                                     N Z C I D V\n                                                        _ _ _ _ _ _\n                                 (Ref: 8.5)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   PHA                 |    48   |    1    |    3     |\n  +----------------+-----------------------+---------+---------+----------+\n\nPHP                 PHP Push processor status on stack                PHP\n\nOperation:  P toS                                     N Z C I D V\n                                                        _ _ _ _ _ _\n                                 (Ref: 8.11)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   PHP                 |    08   |    1    |    3     |\n  +----------------+-----------------------+---------+---------+----------+\n\nBASIC TO MACHINE LANGUAGE   247\n~\n\nPLA                 PLA Pull accumulator from stack                   PLA","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-24"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0,0,0,0,0,0,0.0005259892204776406,0,-0.0021039568819105625,0,0,0.0021039568819105625,0,0,-0.004207913763821125,0,0,0.012623741291463375,0,0,-0.004207913763821125,-0.0010519784409552813,0,0,0.0210395697504282,0,0,-0.0021039568819105625,0,0.004207913763821125,0.00525989243760705,0,0,-0.002629946218803525,0,0,0,0,0,-0.0010519784409552813,0,0,0.0010519784409552813,0,0,-0.0010519784409552813,0,0,0.0005259892204776406,0,-0.004207913763821125,-0.0005259892204776406,0,0.0021039568819105625,0.0021039568819105625,0,0,-0.004207913763821125,0,0,0,0,0,-0.0010519784409552813,0,0,0.0005259892204776406,0,-0.0021039568819105625,-0.00841582752764225,0,0,0.0021039568819105625,0,0,0,0,0,0.0010519784409552813,0,0,-0.004733902867883444,0,0,0,0,-0.0063118706457316875,-0.0021039568819105625,0,0,0,0,-0.0021039568819105625,-0.0010519784409552813,0,0,0.0005259892204776406,0,-0.00841582752764225,0,0,0.8668302297592163,0,0,0,-0.0021039568819105625,0,0,0.0010519784409552813,0,0,-0.014727698639035225,0,0.0063118706457316875,0.0063118706457316875,0,-0.0021039568819105625,-0.0021039568819105625,0,0,0,0,0,0,0,0.0168316550552845,0.0021039568819105625,0,-0.0063118706457316875,0,0,0,0,0,-0.0021039568819105625,0,0,0.0021039568819105625,0.0010519784409552813,0,-0.0021039568819105625,-0.0005259892204776406,0,0.004207913763821125,0.002629946218803525,0,-0.0021039568819105625,-0.0031559353228658438,0,0.018935611471533775,0.0010519784409552813,0,0,-0.0005259892204776406,0,0.0063118706457316875,0.0005259892204776406,0,0,-0.0005259892204776406,0,0,0,0,-0.004207913763821125,-0.0010519784409552813,0,0,0.0005259892204776406,0,0,-0.0015779676614329219,0,0,0,0,0,-0.0005259892204776406,0,0.0021039568819105625,0,0,0,-0.0073638493195176125,0,0,0.0010519784409552813,0,0,-0.0010519784409552813,0,0,0.0005259892204776406,0,-0.004207913763821125,-0.00525989243760705,0,0.0757424458861351,0.43341511487960815,0,-0.004207913763821125,0,0,0,0,0,-0.0021039568819105625,-0.0005259892204776406,0,0,0.0031559353228658438,0,0,-0.0010519784409552813,0,0,0,0,0,-0.0005259892204776406,0,0.0021039568819105625,0.008941817097365856,0,-0.0021039568819105625,-0.004207913763821125,0,0.004207913763821125,0.0031559353228658438,0,-0.004207913763821125,-0.0021039568819105625,0,0,0.0010519784409552813,0,0,-0.0010519784409552813,0,0.0021039568819105625,0.0031559353228658438,0,0,-0.0010519784409552813,0,0,0.009467805735766888,0,0,0,0,0,0.0031559353228658438,0,-0.0105197848752141,0,0,0,0,0,-0.00841582752764225,-0.0031559353228658438,0,0,0.0005259892204776406,0,0,0,0,0.0021039568819105625,0,0,0,0,0,0,0.0010519784409552813,0,-0.004207913763821125,-0.0005259892204776406,0,0,0,0,-0.0504949651658535,0,0,0,0,0,0,-0.0021039568819105625,0,0,0.03787122294306755,0,0,-0.0036819246597588062,0,0,0,0,0,-0.0015779676614329219,0,0,0,0,0,-0.0021039568819105625,0,0.004207913763821125,0.21670755743980408,0,-0.0021039568819105625,0,0,0.0105197848752141,0.0010519784409552813,0,-0.004207913763821125,-0.0010519784409552813,0,0,0.0036819246597588062,0,-0.0021039568819105625,-0.002629946218803525,0,0.0021039568819105625,0,0,-0.0021039568819105625,0,0,0,0.00525989243760705,0,0,-0.0015779676614329219,0,0.0021039568819105625,0,0,-0.0063118706457316875,-0.0005259892204776406,0,0,0.0005259892204776406,0,-0.0021039568819105625,-0.005785881541669369,0,0,0.0010519784409552813,0,-0.0168316550552845,-0.004733902867883444,0,0.004207913763821125,0.004733902867883444,0,0,0,0,0.0021039568819105625,0.002629946218803525,0,-0.004207913763821125,0,0,0,0,0,0,-0.0031559353228658438,0,0,0,0,-0.0021039568819105625,-0.02524748258292675,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-25 -->\nOperation:  A fromS                                   N Z C I D V\n                                                        _ _ _ _ _ _\n                                 (Ref: 8.6)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   PLA                 |    68   |    1    |    4     |\n  +----------------+-----------------------+---------+---------+----------+\n\nPLP               PLP Pull processor status from stack                PLA\n\nOperation:  P fromS                                   N Z C I D V\n                                                         From Stack\n                                 (Ref: 8.12)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   PLP                 |    28   |    1    |    4     |\n  +----------------+-----------------------+---------+---------+----------+\n\nROL          ROL Rotate one bit left (memory or accumulator)          ROL","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-25"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.0005241502658464015,0,0,0,0,0,0.0005241502658464015,0,0,0,0,0.002096601063385606,0,0,0,0,0,0.012579606845974922,0,0,-0.004193202126771212,-0.0005241502658464015,0,0,0.02149016037583351,0,0,-0.002096601063385606,0,0.006289803422987461,0.007862254045903683,0,0,-0.0031449017114937305,0,0,0,0,0,-0.001048300531692803,0,0,0,0,0,0,0,0,0,0,-0.008386404253542423,-0.0005241502658464015,0,0.002096601063385606,0.002096601063385606,0,0,-0.004193202126771212,0,0,0,0,0,-0.001048300531692803,0,0,0.001048300531692803,0,0,-0.006289803422987461,0,0,0.002096601063385606,0,0,0,0,0,0.004193202126771212,0,0,-0.0031449017114937305,0,0.002096601063385606,0.004717352334409952,0,-0.004193202126771212,-0.0005241502658464015,0,0.002096601063385606,0,0,-0.004193202126771212,-0.001048300531692803,0,0,0,0,-0.008386404253542423,0,0,0.8658962249755859,0,0,0,-0.0015724508557468653,0,0,0.0015724508557468653,0,0,-0.012579606845974922,0,0.006289803422987461,0.006289803422987461,0,-0.004193202126771212,-0.002096601063385606,0,0,0,0,0,0,0,0.016772808507084846,0.0031449017114937305,0,-0.004193202126771212,0,0,0,0,0,0,0,0,0,0.001048300531692803,0,-0.004193202126771212,-0.0005241502658464015,0,0.004193202126771212,0.0026207512710243464,0,0,-0.005241502542048693,0,0.016772808507084846,0.001048300531692803,0,0,-0.0005241502658464015,0,0.004193202126771212,0,0,-0.002096601063385606,0,0,0.002096601063385606,0,0,-0.004193202126771212,0,0,0,0.0005241502658464015,0,-0.002096601063385606,-0.0015724508557468653,0,0.002096601063385606,0,0,0,-0.0005241502658464015,0,0.002096601063385606,0.001048300531692803,0,0,-0.005241502542048693,0,0,0.002096601063385606,0,0,-0.002096601063385606,0,0,0.002096601063385606,0,-0.002096601063385606,-0.005241502542048693,0,0.0775742381811142,0.4350447356700897,0,-0.004193202126771212,0,0,0.010483005084097385,0,0,-0.004193202126771212,-0.0005241502658464015,0,0,0.0031449017114937305,0,0,-0.002096601063385606,0,0,0,0,0,0,0,0,0.008910554461181164,0,-0.002096601063385606,-0.002096601063385606,0,0.004193202126771212,0.0031449017114937305,0,-0.004193202126771212,-0.001048300531692803,0,0,0,0,0,-0.002096601063385606,0,0.004193202126771212,0.003669051919132471,0,0,0,0,0,0.008386404253542423,0,0,0,0,0,0.002096601063385606,0,-0.004193202126771212,-0.001048300531692803,0,0.002096601063385606,0.001048300531692803,0,-0.002096601063385606,-0.004193202126771212,0,0,0.0005241502658464015,0,0,-0.001048300531692803,0,0,0.001048300531692803,0,0,0,0,0,0.001048300531692803,0,-0.006289803422987461,0,0,0.002096601063385606,0,0,-0.05031842738389969,0,0,0,0,0,0,-0.001048300531692803,0,0,0.03931127116084099,0,0,-0.0031449017114937305,0,0,0.005765652749687433,0,0,-0.0031449017114937305,0,0,0,0,0,-0.002096601063385606,0,0.004193202126771212,0.21647405624389648,0,-0.002096601063385606,0,0,0.010483005084097385,0,0,-0.004193202126771212,-0.001048300531692803,0,0,0.003669051919132471,0,-0.002096601063385606,-0.0031449017114937305,0,0,0,0,0,0,0,0,0.006289803422987461,0,0,-0.001048300531692803,0,0.002096601063385606,0,0,-0.006289803422987461,0,0,0,0,0,-0.002096601063385606,-0.0031449017114937305,0,0,0.002096601063385606,0,-0.012579606845974922,-0.001048300531692803,0,0.004193202126771212,0.004193202126771212,0,0,0,0,0.008386404253542423,0.001048300531692803,0,-0.004193202126771212,-0.0005241502658464015,0,0.008386404253542423,0.0005241502658464015,0,0,-0.004193202126771212,0,0,0.001048300531692803,0,-0.002096601063385606,-0.025683363899588585,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-28 -->\nRTI                    RTI Return from interrupt                      RTI\n                                                        N Z C I D V\n  Operation:  P fromS PC fromS                           From Stack\n                                 (Ref: 9.6)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   RTI                 |    4D   |    1    |    6     |\n  +----------------+-----------------------+---------+---------+----------+\n\nRTS                    RTS Return from subroutine                     RTS\n                                                        N Z C I D V\n  Operation:  PC fromS, PC + 1 -> PC                    _ _ _ _ _ _\n                                 (Ref: 8.2)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   RTS                 |    60   |    1    |    6     |\n  +----------------+-----------------------+---------+---------+----------+\n\nBASIC TO MACHINE LANGUAGE   249\n~","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-28"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.008714770898222923,0,0,-0.005809847265481949,0,0,0.001936615793965757,0,0,-0.001936615793965757,0,0.007746463175863028,0.003873231587931514,0,-0.015492926351726055,0,0,0.015492926351726055,0.004841539543122053,0,-0.007746463175863028,-0.0009683078969828784,0,0.003873231587931514,0.02130277268588543,0,0,-0.0009683078969828784,0,0.003873231587931514,0.015492926351726055,0,0,-0.0029049236327409744,0,0,0.0009683078969828784,0,0,-0.001936615793965757,0,0,0.0009683078969828784,0,-0.011619694530963898,-0.003873231587931514,0,0,0.011619694530963898,0,-0.003873231587931514,-0.0009683078969828784,0,0,0.0029049236327409744,0,0,-0.0067781549878418446,0,0,0.0009683078969828784,0,-0.007746463175863028,-0.001936615793965757,0,0,0.001936615793965757,0,0,-0.02517600543797016,0,0,0.0029049236327409744,0,-0.003873231587931514,-0.0009683078969828784,0,0,0,0,0,-0.004841539543122053,0,0,0,0,-0.019366158172488213,-0.0029049236327409744,0,0,0,0,-0.007746463175863028,-0.001936615793965757,0,0,0.001936615793965757,0,-0.007746463175863028,0,0,0.8327447772026062,0,0,0,0,0,0,0.003873231587931514,0,0,-0.06197170540690422,0,0.011619694530963898,0.007746463175863028,0,-0.003873231587931514,-0.0067781549878418446,0,0,0.001936615793965757,0,0,-0.0009683078969828784,0,0.03098585270345211,0.003873231587931514,0,-0.023239389061927795,0,0,0.003873231587931514,0,0,-0.003873231587931514,0,0,0,0.001936615793965757,0,-0.003873231587931514,-0.005809847265481949,0,0.003873231587931514,0.0029049236327409744,0,-0.003873231587931514,-0.0029049236327409744,0,0.038732316344976425,0,0,0,-0.0009683078969828784,0,0.003873231587931514,0,0,0,-0.004841539543122053,0,0,0,0,-0.003873231587931514,0,0,0.023239389061927795,0.0009683078969828784,0,-0.003873231587931514,-0.0029049236327409744,0,0.03485908359289169,0,0,0,-0.0009683078969828784,0,0.007746463175863028,0,0,0,-0.022271081805229187,0,0,0.0009683078969828784,0,0,-0.003873231587931514,0,0.019366158172488213,0,0,-0.003873231587931514,-0.004841539543122053,0,0.06971816718578339,0.4163723886013031,0,-0.003873231587931514,-0.0009683078969828784,0,0.038732316344976425,0,0,-0.003873231587931514,-0.0009683078969828784,0,0.003873231587931514,0.005809847265481949,0,0,-0.001936615793965757,0,0.003873231587931514,0,0,-0.007746463175863028,0,0,0.04647877812385559,0.017429541796445847,0,-0.003873231587931514,-0.015492926351726055,0,0.003873231587931514,0.005809847265481949,0,-0.019366158172488213,-0.003873231587931514,0,0.003873231587931514,0.0009683078969828784,0,0,-0.001936615793965757,0,0.007746463175863028,0.0029049236327409744,0,0,-0.001936615793965757,0,0.003873231587931514,0.019366158172488213,0,-0.003873231587931514,0,0,0,0.001936615793965757,0,-0.011619694530963898,-0.0029049236327409744,0,0,0,0,-0.003873231587931514,-0.0029049236327409744,0,0,0.011619694530963898,0,0,-0.001936615793965757,0,0.007746463175863028,0.017429541796445847,0,0,-0.001936615793965757,0,0,0.003873231587931514,0,0,0,0,0,0,0,-0.21690095961093903,-0.0009683078969828784,0,0,0.009683079086244106,0,-0.011619694530963898,-0.001936615793965757,0,0,0.03485908359289169,0,-0.003873231587931514,-0.0067781549878418446,0,0.007746463175863028,0.019366158172488213,0,0,-0.003873231587931514,0,0,0.001936615793965757,0,0,-0.001936615793965757,0,0.007746463175863028,0.21012280881404877,0,0,-0.003873231587931514,0,0.011619694530963898,0.023239389061927795,0,-0.003873231587931514,-0.001936615793965757,0,0,0.004841539543122053,0,-0.003873231587931514,-0.010651386342942715,0,0,0.001936615793965757,0,-0.003873231587931514,0,0,0,0.011619694530963898,0,0,-0.005809847265481949,0,0.003873231587931514,0.0029049236327409744,0,-0.003873231587931514,-0.0029049236327409744,0,0,0,0,-0.003873231587931514,-0.0067781549878418446,0,0,0.0009683078969828784,0,-0.05035201087594032,-0.0029049236327409744,0,0.003873231587931514,0.009683079086244106,0,0,0,0,0,0.004841539543122053,0,-0.003873231587931514,0,0,0,0,0,-0.003873231587931514,-0.0009683078969828784,0,0,0.005809847265481949,0,-0.003873231587931514,-0.10941878706216812,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-29 -->\nSBC          SBC Subtract memory from accumulator with borrow         SBC\n                      -\n  Operation:  A - M - C -> A                            N Z C I D V\n         -                                              / / / _ _ /\n    Note:C = Borrow             (Ref: 2.2.2)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Immediate     |   SBC #Oper           |    E9   |    2    |    2     |\n  |  Zero Page     |   SBC Oper            |    E5   |    2    |    3     |\n  |  Zero Page,X   |   SBC Oper,X          |    F5   |    2    |    4     |\n  |  Absolute      |   SBC Oper            |    ED   |    3    |    4     |\n  |  Absolute,X    |   SBC Oper,X          |    FD   |    3    |    4*    |\n  |  Absolute,Y    |   SBC Oper,Y          |    F9   |    3    |    4*    |\n  |  (Indirect,X)  |   SBC (Oper,X)        |    E1   |    2    |    6     |\n  |  (Indirect),Y  |   SBC (Oper),Y        |    F1   |    2    |    5     |\n  +----------------+-----------------------+---------+---------+----------+\n  * Add 1 when page boundary is crossed.\n\nSEC                        SEC Set carry flag                         SEC","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-29"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.002052334835752845,0,0,0,0,0,0.0010261674178764224,0,0,0,0,0.00410466967150569,0,0,-0.00410466967150569,0,0,0.012314008548855782,0,0,-0.00410466967150569,-0.0010261674178764224,0,0.012314008548855782,0.022575682029128075,0,0,-0.0010261674178764224,0,0.00410466967150569,0.006157004274427891,0,0,-0.00820933934301138,0,0,0,0,0,-0.002052334835752845,0,0,0.002052334835752845,0,0,0,0,0,0.0010261674178764224,0,0,-0.0010261674178764224,0,0,0.00410466967150569,0,0,-0.009235506877303123,0,0,0,0,0,-0.002052334835752845,0,0,0,0,0,-0.010261674411594868,0,0,0.002052334835752845,0,0,-0.0010261674178764224,0,0,0,0,0,-0.0030785021372139454,0,0,0.0010261674178764224,0,-0.00410466967150569,-0.0010261674178764224,0,0,0,0,-0.00820933934301138,-0.002052334835752845,0,0.00410466967150569,0,0,-0.00820933934301138,0,0,0.8660852909088135,0,0,0,0,0,0,0.002052334835752845,0,0,-0.01436634361743927,0,0.00820933934301138,0.006157004274427891,0,-0.00410466967150569,-0.002052334835752845,0,0,0.006157004274427891,0,0,0,0,0.024628017097711563,0.002052334835752845,0,-0.00410466967150569,0,0,0,0,0,-0.00410466967150569,0,0,0,0.002052334835752845,0,-0.00820933934301138,0,0,0.00410466967150569,0.0030785021372139454,0,0,-0.00410466967150569,0,0.024628017097711563,0,0,0,-0.0010261674178764224,0,0.00820933934301138,0.0010261674178764224,0,0,0,0,0.00410466967150569,0,0,-0.00410466967150569,0,0,0,0.0010261674178764224,0,0,-0.00410466967150569,0,0.00820933934301138,0,0,0,-0.0010261674178764224,0,0.00410466967150569,0,0,0,-0.007183171808719635,0,0,0.0010261674178764224,0,0,-0.00410466967150569,0,0,0.002052334835752845,0,-0.00410466967150569,-0.005130837205797434,0,0.07388405501842499,0.43304264545440674,0,-0.00410466967150569,0,0,0,0,0,0,-0.0010261674178764224,0,0,0.00410466967150569,0,0,-0.002052334835752845,0,0,0,0,0,0,0,0.00410466967150569,0.013340176083147526,0,-0.00410466967150569,-0.0030785021372139454,0,0.00820933934301138,0.0030785021372139454,0,-0.00410466967150569,-0.0030785021372139454,0,0,0.0030785021372139454,0,0,-0.00410466967150569,0,0,0.0030785021372139454,0,0,0,0,0,0.012314008548855782,0,-0.00410466967150569,0,0,0,0.00410466967150569,0,-0.00410466967150569,0,0,0.00410466967150569,0.002052334835752845,0,-0.00410466967150569,-0.002052334835752845,0,0,0,0,0,0,0,0,0.00410466967150569,0,0,0,0,0,0.002052334835752845,0,0,0,0,0,0,0,-0.049256034195423126,0,0,0,0,0,0,-0.002052334835752845,0,0,0.036942027509212494,0,0,-0.0030785021372139454,0,0,0,0,0,-0.002052334835752845,0,0,0.0010261674178764224,0,0,-0.002052334835752845,0,0.00820933934301138,0.21652132272720337,0,0,0,0,0.012314008548855782,0.002052334835752845,0,-0.01641867868602276,-0.002052334835752845,0,0,0.006157004274427891,0,-0.00410466967150569,-0.0030785021372139454,0,0.00410466967150569,0,0,0,0,0,0,0.006157004274427891,0,0,-0.0010261674178764224,0,0.00410466967150569,0,0,-0.01641867868602276,-0.0030785021372139454,0,0,0,0,-0.00410466967150569,-0.00410466967150569,0,0,0.0030785021372139454,0,-0.020523348823189735,-0.002052334835752845,0,0.00410466967150569,0.006157004274427891,0,0,0,0,0,0.002052334835752845,0,-0.00410466967150569,0,0,0,0.0010261674178764224,0,0,-0.0010261674178764224,0,0,0,0,-0.00410466967150569,-0.024628017097711563,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-31 -->\nSEI                 SEI Set interrupt disable status                  SED\n                                                        N Z C I D V\n  Operation:  1 -> I                                    _ _ _ 1 _ _\n                                (Ref: 3.2.1)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   SEI                 |    78   |    1    |    2     |\n  +----------------+-----------------------+---------+---------+----------+\n\nSTA                  STA Store accumulator in memory                  STA","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-31"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.0010462639620527625,0,0,0,0,0,0.0005231319810263813,0,0,-0.0005231319810263813,0,0.002092527924105525,0,0,0,-0.0015693960012868047,0,0.010462639853358269,0,0,-0.00418505584821105,-0.0010462639620527625,0,0,0.020925279706716537,0,0,-0.0010462639620527625,0,0.014647695235908031,0.005231319926679134,0,-0.002092527924105525,-0.002092527924105525,0,0,0,0,0,-0.0010462639620527625,0,0,0.0010462639620527625,0,0,-0.0005231319810263813,0,0,0,0,0,-0.0005231319810263813,0,0,0.002092527924105525,0,0,-0.00418505584821105,0,0,0,0,0,-0.0010462639620527625,0,0,0.0010462639620527625,0,0,-0.011508903466165066,0,0,0.005754451733082533,0,0,0,0,0,0,0,-0.00418505584821105,-0.0031387920025736094,0,0.00418505584821105,0,0,-0.00418505584821105,-0.0005231319810263813,0,0.002092527924105525,0,0,-0.006277584005147219,-0.0010462639620527625,0,0,0,0,-0.0083701116964221,0,0,0.8663065433502197,0,0,0,-0.0005231319810263813,0,0,0.0010462639620527625,0,0,-0.013078299351036549,0,0.0083701116964221,0.005231319926679134,0,-0.002092527924105525,-0.002092527924105525,0,0,0,0,0,0,0,0.0167402233928442,0.007323847617954016,0,-0.00418505584821105,-0.0010462639620527625,0,0,0,0,0,0,0,0,0.0010462639620527625,0,-0.00418505584821105,0,0,0.00418505584821105,0.002615659963339567,0,-0.006277584005147219,-0.0010462639620527625,0,0.02301780693233013,0,0,0,-0.0005231319810263813,0,0.00418505584821105,0.0005231319810263813,0,-0.002092527924105525,0,0,0,0,0,-0.00418505584821105,0,0,0.006277584005147219,0.0005231319810263813,0,0,-0.0010462639620527625,0,0.00418505584821105,0,0,0,-0.002615659963339567,0,0.002092527924105525,0.002092527924105525,0,-0.002092527924105525,-0.007846979424357414,0,0,0.002092527924105525,0,-0.006277584005147219,-0.0031387920025736094,0,0,0,0,-0.00418505584821105,-0.005231319926679134,0,0.07533100247383118,0.43315327167510986,0,-0.00418505584821105,0,0,0,0,0,0,-0.0005231319810263813,0,0,0.00418505584821105,0,0,-0.0010462639620527625,0,0,0,0,-0.002092527924105525,0,0,0,0.008893243968486786,0,-0.002092527924105525,-0.002092527924105525,0,0.00418505584821105,0.002615659963339567,0,-0.0083701116964221,-0.0010462639620527625,0,0,0,0,0,-0.002092527924105525,0,0.00418505584821105,0.005754451733082533,0,0,-0.003661923808977008,0,0.014647695235908031,0.011508903466165066,0,0,0,0,0,0.002092527924105525,0,-0.00418505584821105,-0.0010462639620527625,0,0,0,0,-0.002092527924105525,-0.002092527924105525,0,0,0.0031387920025736094,0,0,0,0,0,0.002092527924105525,0,0,0,0,0,0.0010462639620527625,0,-0.002092527924105525,-0.0010462639620527625,0,0,0,0,-0.052313197404146194,-0.0031387920025736094,0,0,0,0,0,-0.0031387920025736094,0,0,0.03871176764369011,0,0,-0.0031387920025736094,0,0,0.0005231319810263813,0,0,-0.0015693960012868047,0,0,0,0,0,-0.002092527924105525,0,0.00418505584821105,0.21657663583755493,0,0,-0.0010462639620527625,0,0.010462639853358269,0,0,-0.00418505584821105,-0.0010462639620527625,0,0,0.00418505584821105,0,-0.002092527924105525,-0.0047081876546144485,0,0.002092527924105525,0,0,0,0,0,0,0.006277584005147219,0,0,-0.0010462639620527625,0,0.002092527924105525,0.007323847617954016,0,-0.00418505584821105,0,0,0,0,0,-0.002092527924105525,-0.0031387920025736094,0,0,0.0010462639620527625,0,-0.02301780693233013,-0.002615659963339567,0,0.00418505584821105,0.005754451733082533,0,0,0,0,0,0.0010462639620527625,0,-0.00418505584821105,-0.0005231319810263813,0,0,0,0,0,-0.002092527924105525,0,0,0.0015693960012868047,0,-0.002092527924105525,-0.026156598702073097,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-34 -->\nTAX                TAX Transfer accumulator to index X                TAX\n\nOperation:  A -> X                                    N Z C I D V\n                                                        / / _ _ _ _\n                                 (Ref: 7.11)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   TAX                 |    AA   |    1    |    2     |\n  +----------------+-----------------------+---------+---------+----------+\n\nTAY                TAY Transfer accumulator to index Y                TAY\n\nOperation:  A -> Y                                    N Z C I D V\n                                                        / / _ _ _ _\n                                 (Ref: 7.13)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   TAY                 |    A8   |    1    |    2     |\n  +----------------+-----------------------+---------+---------+----------+\n\n252   BASIC TO MACHINE LANGUAGE\n~\n\nTSX              TSX Transfer stack pointer to index X                TSX","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-34"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.0007786744390614331,0,-0.0015573488781228662,0,0,0,0.00038933721953071654,0,0,-0.00038933721953071654,0,0.0015573488781228662,0,0,0,-0.0007786744390614331,0,0.007786744739860296,0,0,-0.006229395512491465,-0.00116801168769598,0,0,0.01635216362774372,0,0,-0.0007786744390614331,0,0.006229395512491465,0.00467204675078392,0,0,-0.0015573488781228662,0,0,0,0,0,-0.0007786744390614331,0,0,0.0007786744390614331,0,0,0,0,0,0,0,-0.0015573488781228662,-0.00038933721953071654,0,0,0.00233602337539196,0,0,-0.0031146977562457323,0,0,0,0,0,-0.00116801168769598,0,0,0.00116801168769598,0,-0.0015573488781228662,-0.00934409350156784,0,0,0.00233602337539196,0,0,-0.00116801168769598,0,0,0.0007786744390614331,0,-0.0015573488781228662,-0.00233602337539196,0,0.0015573488781228662,0,0,-0.00467204675078392,-0.00038933721953071654,0,0.0015573488781228662,0,0,-0.00467204675078392,-0.0007786744390614331,0,0,0,0,-0.006229395512491465,-0.0007786744390614331,0,0.8690006732940674,0.00038933721953071654,0,0,-0.0015573488781228662,0,0,0.0007786744390614331,0,-0.006229395512491465,-0.010122767649590969,0,0.00467204675078392,0.003893372369930148,0,-0.0015573488781228662,-0.0031146977562457323,0,0,0,0,0,0,0,0.01245879102498293,0.0031146977562457323,0,-0.00467204675078392,0,0,0,0,0,0,-0.00038933721953071654,0,0,0.0007786744390614331,0,-0.0031146977562457323,0,0,0.0031146977562457323,0.001946686184965074,0,0,-0.0015573488781228662,0,0.017130838707089424,0,0,0,-0.00038933721953071654,0,0.0031146977562457323,0.00038933721953071654,0,-0.0015573488781228662,0,0,0,0,0,-0.0031146977562457323,-0.0007786744390614331,0,0.0031146977562457323,0.0007786744390614331,0,0,-0.0007786744390614331,0,0.0031146977562457323,0,0,0,-0.00116801168769598,0,0.0015573488781228662,0.00116801168769598,0,-0.0015573488781228662,-0.00700807012617588,0,0,0.0015573488781228662,0,-0.0031146977562457323,-0.002725360682234168,0,0,0.00038933721953071654,0,-0.0015573488781228662,-0.003893372369930148,0,0.05917925760149956,0.4345003366470337,0,-0.0031146977562457323,0,0,0.0031146977562457323,0,0,0,-0.00350403506308794,0,0,0.00233602337539196,0,0,-0.00116801168769598,0,0,0,0,0,0,0,0,0.006618733052164316,0,-0.0015573488781228662,-0.00233602337539196,0,0.0031146977562457323,0.001946686184965074,0,-0.006229395512491465,-0.0015573488781228662,0,0,0,0,-0.0015573488781228662,-0.0015573488781228662,0,0.0015573488781228662,0.0031146977562457323,0,0,0,0,0.0031146977562457323,0.008565419353544712,0,-0.0015573488781228662,0,0,0,0.0015573488781228662,0,-0.0031146977562457323,-0.0007786744390614331,0,0,0,0,-0.0015573488781228662,-0.001946686184965074,0,0,0.0015573488781228662,0,0,0,0,0,0.0015573488781228662,0,0,0,0,0.0015573488781228662,0.0007786744390614331,0,-0.006229395512491465,-0.00116801168769598,0,0,0,0,-0.040491070598363876,-0.0015573488781228662,0,0,0,0,0,-0.00116801168769598,0,0,0.02997896634042263,0,0,-0.002725360682234168,0,0,0.001946686184965074,0,0,-0.00116801168769598,0,0,0,0,-0.0015573488781228662,-0.0015573488781228662,0,0.0031146977562457323,0.21725016832351685,0,0,0,0,0.007786744739860296,0,0,-0.0031146977562457323,-0.00233602337539196,0,0,0.002725360682234168,0,-0.0015573488781228662,-0.00350403506308794,0,0.0015573488781228662,0,0,0,-0.0007786744390614331,0,0,0.003893372369930148,0,0,-0.00116801168769598,0,0.0031146977562457323,0.0015573488781228662,0,-0.0031146977562457323,-0.0007786744390614331,0,0,0,0,-0.0015573488781228662,-0.00233602337539196,0,0.0015573488781228662,0.0007786744390614331,0,-0.01868818700313568,-0.0007786744390614331,0,0.0031146977562457323,0.004282709676772356,0,-0.0015573488781228662,0,0,0.0015573488781228662,0.0007786744390614331,0,-0.0031146977562457323,-0.00038933721953071654,0,0,0.0007786744390614331,0,0,-0.003893372369930148,0,0,0.0007786744390614331,0,-0.0015573488781228662,-0.020245535299181938,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-36 -->\nTXS              TXS Transfer index X to stack pointer                TXS\n                                                        N Z C I D V\n  Operation:  X -> S                                    _ _ _ _ _ _\n                                 (Ref: 8.8)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   TXS                 |    9A   |    1    |    2     |\n  +----------------+-----------------------+---------+---------+----------+\n\nTYA                TYA Transfer index Y to accumulator                TYA\n\nOperation:  Y -> A                                    N Z C I D V\n                                                        / / _ _ _ _\n                                 (Ref: 7.14)\n  +----------------+-----------------------+---------+---------+----------+\n  | Addressing Mode| Assembly Language Form| OP CODE |No. Bytes|No. Cycles|\n  +----------------+-----------------------+---------+---------+----------+\n  |  Implied       |   TYA                 |    98   |    1    |    2     |\n  +----------------+-----------------------+---------+---------+----------+\n\nBASIC TO MACHINE LANGUAGE   253\n~\n\n+------------------------------------------------------------------------\n  | INSTRUCTION ADDRESSING MODES AND RELATED EXECUTION TIMES\n  | (in clock cycles)\n  +------------------------------------------------------------------------","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#IMMEDIATE-ADDRESSING-MODE-36"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0,0,0,0,0,0,0.02449979819357395,0,0,0,0,0.0979991927742958,0.0489995963871479,0,0,0,0,0.293997585773468,0,0,0,0,0,0,0,0,0,0,0,0,0.0489995963871479,0,0,-0.0489995963871479,0,0.0979991927742958,0,0,0,-0.02449979819357395,0,0,0,0,0,0,0,0,0,0,0,-0.02449979819357395,0,0,0,0,0,0,0,0,0,0,0,-0.0489995963871479,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.02449979819357395,0,0,0,0,-0.0979991927742958,-0.0489995963871479,0,0,0.02449979819357395,0,0,0,0,0.48999595642089844,0,0,0,0,0,0,0.0489995963871479,0,0,0,0,0.0979991927742958,0.146998792886734,0,-0.0979991927742958,0,0,0,0,0,0,0,0,0.1959983855485916,0.02449979819357395,0,0,0,0,0,0.0489995963871479,0,0,0,0,0,0,0,0,0,0,0,0.02449979819357395,0,0,-0.02449979819357395,0,0.48999595642089844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.02449979819357395,0,0.0979991927742958,0,0,0,0,0,0,0,0,0,-0.0489995963871479,0,0,0,0,0,0,0,0,0.24499797821044922,0,0,0,0,0,0,0,0,-0.02449979819357395,0,0,0.0489995963871479,0,-0.0979991927742958,-0.0489995963871479,0,0,0,0,0,0,0,0,0.12249898910522461,0,-0.0979991927742958,0,0,0,0.073499396443367,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2694977819919586,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0979991927742958,0,0,0,0,0,0,0,0,0.0979991927742958,0,0,0,0,0,0,0.0489995963871479,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0979991927742958,0,0,0,-0.02449979819357395,0,0,0,0,0,-0.0489995963871479,0,0,0.12249898910522461,0,0,0,0,0.0979991927742958,0,0,-0.0979991927742958,-0.0489995963871479,0,0,0.02449979819357395,0,0,-0.02449979819357395,0,0,0,0,0,0,0,0,0.0489995963871479,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0979991927742958,0,0,0,0,0,0,-0.0489995963871479,0,0,0.12249898910522461,0,0,0,0,0,0.0489995963871479,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0979991927742958,0,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE -->\nEXAMPLE:\n\nJSR CHRIN\n    STA DATA","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0,0,-0.03709273040294647,-0.009273182600736618,0,0.07418546080589294,0.07418546080589294,0,-0.03709273040294647,-0.027819547802209854,0,0.03709273040294647,0.018546365201473236,0,-0.03709273040294647,-0.027819547802209854,0,0.48220551013946533,0.009273182600736618,0,-0.03709273040294647,-0.018546365201473236,0,0,0,0,0,-0.009273182600736618,0,0.07418546080589294,0.05563909560441971,0,0,0,0,0.03709273040294647,0.009273182600736618,0,-0.03709273040294647,0,0,0.03709273040294647,0.018546365201473236,0,0,-0.009273182600736618,0,0.03709273040294647,0.027819547802209854,0,-0.1483709216117859,-0.018546365201473236,0,0.07418546080589294,0,0,0,-0.04636591300368309,0,0,0.04636591300368309,0,0,-0.08345864713191986,0,0.07418546080589294,0.009273182600736618,0,-0.03709273040294647,-0.027819547802209854,0,0,0,0,0,-0.05563909560441971,0,0.03709273040294647,0.009273182600736618,0,-0.03709273040294647,0,0,0,0,0,-0.11127819120883942,-0.07418546080589294,0,0.07418546080589294,0,0,-0.03709273040294647,-0.04636591300368309,0,0,0,0,0,-0.027819547802209854,0,0.2596491277217865,0.03709273040294647,0,0,-0.018546365201473236,0,0,0.018546365201473236,0,-0.03709273040294647,-0.018546365201473236,0,0.03709273040294647,0.24110275506973267,0,-0.03709273040294647,-0.018546365201473236,0,0,0.027819547802209854,0,0,-0.009273182600736618,0,0.2596491277217865,0.04636591300368309,0,-0.07418546080589294,-0.009273182600736618,0,0.1483709216117859,0.018546365201473236,0,0,-0.018546365201473236,0,0,0.018546365201473236,0,0,0,0,0.07418546080589294,0.03709273040294647,0,0,-0.07418546080589294,0,0.18546365201473236,0.03709273040294647,0,0,0,0,0,0.009273182600736618,0,-0.03709273040294647,0,0,0.11127819120883942,0.04636591300368309,0,-0.07418546080589294,-0.018546365201473236,0,0.1483709216117859,0,0,-0.11127819120883942,-0.018546365201473236,0,0,0.03709273040294647,0,-0.03709273040294647,-0.05563909560441971,0,0.07418546080589294,0,0,-0.03709273040294647,-0.06491228193044662,0,0,0.03709273040294647,0,-0.03709273040294647,-0.03709273040294647,0,0.03709273040294647,0,0,-0.07418546080589294,0,0,0,0.12982456386089325,0,-0.03709273040294647,-0.027819547802209854,0,0.07418546080589294,0,0,0,-0.027819547802209854,0,0.03709273040294647,0.018546365201473236,0,0,-0.027819547802209854,0,0,0.018546365201473236,0,-0.03709273040294647,-0.009273182600736618,0,0.03709273040294647,0.13909773528575897,0,-0.07418546080589294,-0.04636591300368309,0,0,0.19473683834075928,0,-0.03709273040294647,-0.009273182600736618,0,0.03709273040294647,0,0,-0.03709273040294647,0,0,0.03709273040294647,0.05563909560441971,0,-0.03709273040294647,0,0,0,0.1020050123333931,0,-0.07418546080589294,-0.009273182600736618,0,0.03709273040294647,0.009273182600736618,0,0,-0.018546365201473236,0,0,0.06491228193044662,0,-0.07418546080589294,-0.07418546080589294,0,0,0.09273182600736618,0,-0.11127819120883942,-0.05563909560441971,0,0,0,0,-0.03709273040294647,-0.018546365201473236,0,0,0.05563909560441971,0,0,-0.027819547802209854,0,0,0,0,0,-0.018546365201473236,0,0,0.027819547802209854,0,0,-0.04636591300368309,0,0.11127819120883942,0,0,-0.03709273040294647,-0.04636591300368309,0,0.03709273040294647,0.05563909560441971,0,-0.03709273040294647,-0.009273182600736618,0,0,0.018546365201473236,0,0,0,0,0,0.06491228193044662,0,0,-0.018546365201473236,0,0.07418546080589294,0.018546365201473236,0,0,-0.04636591300368309,0,0,0.009273182600736618,0,0,-0.027819547802209854,0,0.03709273040294647,0.018546365201473236,0,0,-0.018546365201473236,0,0.03709273040294647,0.08345864713191986,0,0,-0.03709273040294647,0,0,0.03709273040294647,0,-0.07418546080589294,-0.03709273040294647,0,0.07418546080589294,0.018546365201473236,0,-0.1483709216117859,0,0,0,0.018546365201473236,0,-0.03709273040294647,-0.03709273040294647,0,0,0.04636591300368309,0,-0.07418546080589294,-0.05563909560441971,0,0,0,0,0,-0.027819547802209854,0,0,0.027819547802209854,0,-0.11127819120883942,-0.018546365201473236,0,0,0.03709273040294647,0,-0.03709273040294647,-0.027819547802209854,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE -->\nEXAMPLE:\n\nLDA #'X       ;SEND AN X TO THE SERIAL BUS\n    JSR CIOUT\n\nB-7. Function Name: CINT\n\nPurpose: Initialize screen editor & 6567 video chip\n    Call address: $FF81 (hex) 65409 (decimal)\n    Communication registers: None\n    Preparatory routines: None\n    Error returns: None\n    Stack requirements: 4\n    Registers affected: A, X, Y\n\nDescription: This routine sets up the 6567 video controller chip in the\n  Commodore 64 for normal operation. The KERNAL screen editor is also\n  initialized. This routine should be called by a Commodore 64 program\n  cartridge.\n\nHow to Use:\n\n1) Call this routine.","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0.028395945206284523,0.014197972603142262,0,0,-0.028395945206284523,0,0.028395945206284523,0.014197972603142262,0,-0.08518783748149872,-0.035494931042194366,0,0.028395945206284523,0.014197972603142262,0,-0.028395945206284523,-0.056791890412569046,0,0.36914727091789246,0.014197972603142262,0,-0.028395945206284523,-0.02129695937037468,0,0,0.007098986301571131,0,-0.028395945206284523,-0.02129695937037468,0,0.056791890412569046,0.07808884978294373,0,0,-0.014197972603142262,0,0.028395945206284523,0,0,0,0,0,0,0,0,-0.17037567496299744,-0.02129695937037468,0,0.056791890412569046,0,0,0,-0.007098986301571131,0,0.11358378082513809,0.014197972603142262,0,-0.056791890412569046,-0.02129695937037468,0,0,0.028395945206284523,0,0,-0.028395945206284523,0,0.028395945206284523,0.04259391874074936,0,0,-0.014197972603142262,0,0,0.007098986301571131,0,0,-0.04259391874074936,0,0,0,0,0,0,0,0.028395945206284523,0,0,-0.25556349754333496,-0.16327668726444244,0,0.056791890412569046,0.04259391874074936,0,-0.028395945206284523,-0.028395945206284523,0,0,0.014197972603142262,0,-0.11358378082513809,-0.014197972603142262,0,0.1987716108560562,0.014197972603142262,0,-0.028395945206284523,-0.04259391874074936,0,0,0.014197972603142262,0,-0.028395945206284523,-0.02129695937037468,0,0.028395945206284523,0.18457363545894623,0,-0.08518783748149872,-0.02129695937037468,0,0,0,0,0,-0.028395945206284523,0,0.22716756165027618,0.035494931042194366,0,-0.11358378082513809,-0.007098986301571131,0,0.028395945206284523,0.02129695937037468,0,0,0,0,0.056791890412569046,0,0,-0.028395945206284523,-0.09228681772947311,0,0,0.04969290271401405,0,-0.028395945206284523,-0.007098986301571131,0,0.1987716108560562,0.056791890412569046,0,0,-0.028395945206284523,0,0,0,0,-0.056791890412569046,0,0,0.11358378082513809,0.014197972603142262,0,-0.08518783748149872,0,0,0.056791890412569046,0,0,-0.11358378082513809,-0.007098986301571131,0,0.056791890412569046,0.014197972603142262,0,-0.056791890412569046,-0.014197972603142262,0,0.056791890412569046,0.02129695937037468,0,-0.028395945206284523,-0.13488073647022247,0,0,0.028395945206284523,0,-0.17037567496299744,-0.035494931042194366,0,0,0,0,-0.08518783748149872,-0.056791890412569046,0,0.028395945206284523,0.0993858054280281,0,-0.028395945206284523,-0.08518783748149872,0,0.14197972416877747,0.007098986301571131,0,0,-0.02129695937037468,0,0,0.02129695937037468,0,0,-0.04259391874074936,0,0,0.007098986301571131,0,-0.08518783748149872,-0.02129695937037468,0,0,0.12068276852369308,0,-0.028395945206284523,-0.06389087438583374,0,0.056791890412569046,0.1064847931265831,0,-0.028395945206284523,-0.007098986301571131,0,0,0.028395945206284523,0,0,-0.02129695937037468,0,0.11358378082513809,0.014197972603142262,0,0,-0.014197972603142262,0,0.028395945206284523,0.1064847931265831,0,0,0,0,0,0,0,0,-0.07098986208438873,0,0,0.07098986208438873,0,-0.08518783748149872,-0.04259391874074936,0,0.11358378082513809,0.056791890412569046,0,-0.056791890412569046,-0.07098986208438873,0,0,0.028395945206284523,0,-0.056791890412569046,-0.028395945206284523,0,0,0.035494931042194366,0,0,-0.014197972603142262,0,0,0,0,-0.028395945206284523,-0.08518783748149872,0,0,0,0,-0.028395945206284523,-0.04259391874074936,0,0,0.02129695937037468,0,-0.056791890412569046,-0.07808884978294373,0,0.028395945206284523,0.08518783748149872,0,-0.028395945206284523,-0.007098986301571131,0,0.028395945206284523,0,0,0,-0.028395945206284523,0,0,0.04969290271401405,0,-0.028395945206284523,-0.04969290271401405,0,0.08518783748149872,0,0,-0.028395945206284523,-0.02129695937037468,0,0,0.035494931042194366,0,0,-0.035494931042194366,0,0,0,0,0,0,0,0,0.11358378082513809,0,0,-0.028395945206284523,0,0,0.02129695937037468,0,-0.028395945206284523,0,0,0.056791890412569046,0.014197972603142262,0,-0.056791890412569046,-0.007098986301571131,0,0.028395945206284523,0,0,-0.028395945206284523,-0.04969290271401405,0,0,0.1064847931265831,0,-0.08518783748149872,-0.028395945206284523,0,0,0,0,0,-0.04259391874074936,0,0,0.028395945206284523,0,-0.28395944833755493,-0.02129695937037468,0,0.028395945206284523,0.014197972603142262,0,-0.028395945206284523,-0.04259391874074936,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE -->\nEXAMPLE:\n\nJSR CLALL   ;CLOSE ALL FILES AND SELECT DEFAULT I/O CHANNELS\n    JMP RUN     ;BEGIN EXECUTION\n\nB-9. Function Name: CLOSE\n\nPurpose: Close a logical file\n    Call address: $FFC3 (hex) 65475 (decimal)\n    Communication registers: A\n    Preparatory routines: None\n    Error returns: 0,240 (See READST)\n    Stack requirements: 2+\n    Registers affected: A, X, Y\n\nDescription: This routine is used to close a logical file after all I/O\n  operations have been completed on that file. This routine is called after\n  the accumulator is loaded with the logical file number to be closed (the\n  same number used when the file was opened using the OPEN routine).\n\nBASIC TO MACHINE LANGUAGE   281\n~\n\nHow to Use:\n\n1) Load the accumulator with the number of the logical file to be\n       closed.\n    2) Call this routine.","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.0141611872240901,0,0,-0.037763167172670364,0,0.0566447488963604,0.04720395803451538,0,-0.018881583586335182,-0.04720395803451538,0,0.018881583586335182,0.009440791793167591,0,-0.09440791606903076,-0.06608553975820541,0,0.26434215903282166,0.0141611872240901,0,-0.037763167172670364,-0.009440791793167591,0,0.037763167172670364,0,0,0,-0.0141611872240901,0,0.09440791606903076,0.05192435532808304,0,0,-0.018881583586335182,0,0.018881583586335182,0.009440791793167591,0,0,-0.009440791793167591,0,0.037763167172670364,0.018881583586335182,0,-0.037763167172670364,-0.037763167172670364,0,0.018881583586335182,0.0283223744481802,0,-0.07552633434534073,-0.009440791793167591,0,0.1132894977927208,0.018881583586335182,0,-0.018881583586335182,-0.037763167172670364,0,0.018881583586335182,0.0283223744481802,0,0,-0.02360197901725769,0,0.0566447488963604,0.02360197901725769,0,0,-0.0283223744481802,0,0.018881583586335182,0.0047203958965837955,0,0,-0.06608553975820541,0,0,0,0,-0.07552633434534073,-0.03304276987910271,0,0.037763167172670364,0.009440791793167591,0,-0.15105266869068146,-0.25490137934684753,0,0.037763167172670364,0,0,-0.037763167172670364,-0.0141611872240901,0,0,0.0141611872240901,0,0,-0.0047203958965837955,0,0.15105266869068146,0.0283223744481802,0,-0.037763167172670364,-0.009440791793167591,0,0.018881583586335182,0.009440791793167591,0,-0.09440791606903076,-0.04720395803451538,0,0.037763167172670364,0.13217107951641083,0,-0.018881583586335182,-0.02360197901725769,0,0.018881583586335182,0.037763167172670364,0,0,-0.0141611872240901,0,0.24546058475971222,0.05192435532808304,0,-0.0566447488963604,-0.018881583586335182,0,0.09440791606903076,0.0141611872240901,0,-0.018881583586335182,0,0,0.07552633434534073,0.018881583586335182,0,-0.018881583586335182,-0.02360197901725769,0,0,0.018881583586335182,0,-0.037763167172670364,-0.04248356074094772,0,0.18881583213806152,0.061365146189928055,0,-0.037763167172670364,-0.0141611872240901,0,0,0.018881583586335182,0,-0.07552633434534073,-0.009440791793167591,0,0.13217107951641083,0.03304276987910271,0,-0.037763167172670364,0,0,0.1132894977927208,0.009440791793167591,0,-0.037763167172670364,-0.0047203958965837955,0,0.0566447488963604,0.0141611872240901,0,-0.1132894977927208,-0.04720395803451538,0,0.037763167172670364,0.0283223744481802,0,-0.07552633434534073,-0.0896875187754631,0,0,0.018881583586335182,0,-0.1132894977927208,-0.04720395803451538,0,0.018881583586335182,0,0,-0.037763167172670364,-0.0141611872240901,0,0,0.07552633434534073,0,-0.018881583586335182,-0.13689148426055908,0,0.13217107951641083,0.009440791793167591,0,-0.037763167172670364,-0.05192435532808304,0,0,0.018881583586335182,0,0,-0.009440791793167591,0,0,0.02360197901725769,0,-0.07552633434534073,-0.0047203958965837955,0,0.07552633434534073,0.12745068967342377,0,-0.037763167172670364,-0.05192435532808304,0,0.07552633434534073,0.1132894977927208,0,-0.1132894977927208,-0.018881583586335182,0,0,0.04720395803451538,0,-0.018881583586335182,-0.009440791793167591,0,0.018881583586335182,0.02360197901725769,0,0,-0.018881583586335182,0,0.018881583586335182,0.09912831336259842,0,-0.037763167172670364,-0.018881583586335182,0,0,0.009440791793167591,0,-0.018881583586335182,-0.04720395803451538,0,0.037763167172670364,0.07080593705177307,0,-0.07552633434534073,-0.037763167172670364,0,0,0.08496712148189545,0,-0.018881583586335182,-0.02360197901725769,0,0.0566447488963604,0.03304276987910271,0,-0.018881583586335182,-0.0566447488963604,0,0,0.03304276987910271,0,0,-0.037763167172670364,0,0,0.0047203958965837955,0,0,-0.0566447488963604,0,0,0.009440791793167591,0,-0.018881583586335182,-0.037763167172670364,0,0.07552633434534073,0.009440791793167591,0,-0.0566447488963604,-0.04720395803451538,0,0.018881583586335182,0.07552633434534073,0,-0.07552633434534073,-0.0283223744481802,0,0.018881583586335182,0,0,0,0,0,0,0.037763167172670364,0,-0.018881583586335182,-0.04720395803451538,0,0.037763167172670364,0.04248356074094772,0,-0.018881583586335182,-0.04248356074094772,0,0.018881583586335182,0.04720395803451538,0,-0.018881583586335182,-0.061365146189928055,0,0.037763167172670364,0.0047203958965837955,0,-0.037763167172670364,-0.009440791793167591,0,0.018881583586335182,0.07080593705177307,0,0,-0.0141611872240901,0,0,0.03304276987910271,0,-0.018881583586335182,-0.02360197901725769,0,0.0566447488963604,0.018881583586335182,0,-0.037763167172670364,-0.0141611872240901,0,0.037763167172670364,0.018881583586335182,0,-0.0566447488963604,-0.04720395803451538,0,0,0.04720395803451538,0,-0.1132894977927208,-0.018881583586335182,0,0,0.0283223744481802,0,-0.0566447488963604,-0.0283223744481802,0,0,0.03304276987910271,0,-0.4720395803451538,-0.009440791793167591,0,0,0.0283223744481802,0,-0.018881583586335182,-0.009440791793167591,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE -->\nEXAMPLE:\n\n;WAIT FOR A CHARACTER\n    WAIT JSR GETIN\n         CMP #0\n         BEQ WAIT\n\nBASIC TO MACHINE LANGUAGE   283\n~\n\nB-12. Function Name: IOBASE\n\nPurpose: Define I/O memory page\n    Call address: $FFF3 (hex) 65523 (decimal)\n    Communication registers: X, Y\n    Preparatory routines: None\n    Error returns:\n    Stack requirements: 2\n    Registers affected: X, Y\n\nDescription: This routine sets the X and Y registers to the address of\n  the memory section where the memory mapped 110 devices are located. This\n  address can then be used with an offset to access the memory mapped I/O\n  devices in the Commodore 64. The offset is the number of locations from\n  the beginning of the page on which the I/O register you want is located.\n  The X register contains the low order address byte, while the Y register\n  contains the high order address byte.\n    This routine exists to provide compatibility between the Commodore 64,\n  VIC-20, and future models of the Commodore 64. If the J/0 locations for\n  a machine language program are set by a call to this routine, they should\n  still remain compatible with future versions of the Commodore 64, the\n  KERNAL and BASIC.\n\nHow to Use:\n\n1) Call this routine by using the JSR instruction.\n    2) Store the X and the Y registers in consecutive locations.\n    3) Load the Y register with the offset.\n    4) Access that I/O location.","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.0052625020034611225,0,0,-0.04210001602768898,0,0.04210001602768898,0.015787506476044655,0,-0.02105000801384449,-0.047362517565488815,0,0.02105000801384449,0.010525004006922245,0,-0.02105000801384449,-0.057887520641088486,0,0.3578501343727112,0.015787506476044655,0,-0.02105000801384449,-0.010525004006922245,0,0,0,0,0,-0.036837514489889145,0,0.04210001602768898,0.08420003205537796,0,0,0,0,0.02105000801384449,0.010525004006922245,0,0,0,0,0.02105000801384449,0.010525004006922245,0,-0.04210001602768898,-0.026312509551644325,0,0.02105000801384449,0,0,-0.04210001602768898,-0.0052625020034611225,0,0.02105000801384449,0.015787506476044655,0,0,-0.036837514489889145,0,0,0.02105000801384449,0,0,-0.02105000801384449,0,0,0.036837514489889145,0,-0.08420003205537796,0,0,0.08420003205537796,0,0,0,-0.026312509551644325,0,0.02105000801384449,0.026312509551644325,0,-0.06315002590417862,0,0,0.02105000801384449,0,0,-0.14735005795955658,-0.1789250671863556,0,0.04210001602768898,0,0,-0.04210001602768898,-0.06841252744197845,0,0,0.0052625020034611225,0,0,0,0,0.2105000764131546,0.02105000801384449,0,0,-0.02105000801384449,0,0,0.010525004006922245,0,-0.02105000801384449,-0.010525004006922245,0,0.02105000801384449,0.1789250671863556,0,-0.02105000801384449,-0.015787506476044655,0,0.02105000801384449,0,0,0,-0.010525004006922245,0,0.14735005795955658,0.026312509551644325,0,-0.14735005795955658,-0.015787506476044655,0,0.06315002590417862,0.015787506476044655,0,-0.02105000801384449,0,0,0.06315002590417862,0.010525004006922245,0,-0.02105000801384449,-0.026312509551644325,0,0.02105000801384449,0.026312509551644325,0,-0.04210001602768898,-0.02105000801384449,0,0.3157501220703125,0.010525004006922245,0,0,0,0,0,0.0052625020034611225,0,-0.04210001602768898,0,0,0.04210001602768898,0,0,-0.04210001602768898,-0.04210001602768898,0,0.16840006411075592,0.04210001602768898,0,-0.1052500382065773,0,0,0.02105000801384449,0.02105000801384449,0,-0.12630005180835724,-0.036837514489889145,0,0.06315002590417862,0.015787506476044655,0,-0.1052500382065773,-0.07367502897977829,0,0,0.02105000801384449,0,-0.1052500382065773,-0.03157501295208931,0,0.02105000801384449,0.0052625020034611225,0,-0.04210001602768898,0,0,0,0.1052500382065773,0,-0.1052500382065773,-0.07893753051757812,0,0.2105000764131546,0,0,0,-0.036837514489889145,0,0.04210001602768898,0.010525004006922245,0,0,-0.010525004006922245,0,0,0.02105000801384449,0,-0.1052500382065773,-0.0052625020034611225,0,0,0.07893753051757812,0,-0.02105000801384449,-0.07893753051757812,0,0.06315002590417862,0.1210375428199768,0,-0.14735005795955658,-0.015787506476044655,0,0,0.03157501295208931,0,-0.04210001602768898,-0.010525004006922245,0,0.1052500382065773,0.02105000801384449,0,0,-0.02105000801384449,0,0,0.1631375551223755,0,-0.02105000801384449,0,0,0.06315002590417862,0.0052625020034611225,0,0,-0.03157501295208931,0,0,0.026312509551644325,0,-0.08420003205537796,-0.03157501295208931,0,0,0.0894625335931778,0,-0.06315002590417862,-0.05262501910328865,0,0.02105000801384449,0.010525004006922245,0,0,-0.06315002590417862,0,0,0.03157501295208931,0,-0.04210001602768898,-0.07367502897977829,0,0,0.02105000801384449,0,0,-0.05262501910328865,0,0,0.015787506476044655,0,-0.02105000801384449,-0.036837514489889145,0,0,0.0052625020034611225,0,-0.04210001602768898,-0.0894625335931778,0,0.02105000801384449,0.11577504128217697,0,-0.06315002590417862,-0.010525004006922245,0,0.02105000801384449,0.02105000801384449,0,0,0,0,0,0.05262501910328865,0,-0.02105000801384449,-0.05262501910328865,0,0.06315002590417862,0,0,0,-0.015787506476044655,0,0,0.036837514489889145,0,0,-0.07893753051757812,0,0.02105000801384449,0.0052625020034611225,0,0,-0.02105000801384449,0,0,0.0894625335931778,0,0,-0.036837514489889145,0,0,0.015787506476044655,0,0,-0.015787506476044655,0,0.04210001602768898,0.047362517565488815,0,-0.02105000801384449,-0.0052625020034611225,0,0.02105000801384449,0.0052625020034611225,0,0,-0.05262501910328865,0,0,0.07893753051757812,0,-0.04210001602768898,-0.03157501295208931,0,0.02105000801384449,0.010525004006922245,0,0,-0.010525004006922245,0,0,0.010525004006922245,0,-0.3157501220703125,-0.03157501295208931,0,0,0.04210001602768898,0,-0.1052500382065773,-0.026312509551644325,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE -->\nEXAMPLE:\n\nThis is an implementation of the BASIC statement: OPEN 15,8,15,\"I/O\"\n\nLDA #NAME2-NAME    ;LENGTH OF FILE NAME FOR SETLFS\n          LDY #>NAME         ;ADDRESS OF FILE NAME\n          LDX #<NAME\n          JSR SETNAM\n          LDA #15\n          LDX #8\n          LDY #15\n          JSR SETLFS\n          JSR OPEN\n    NAME  .BYT 'I/O'\n    NAME2\n\nBASIC TO MACHINE LANGUAGE   289\n~\n\nB-19. Function Name: PLOT\n\nPurpose: Set cursor location\n    Call address: $FFF0 (hex) 65520 (decimal)\n    Communication registers: A, X, Y\n    Preparatory routines: None\n    Error returns: None\n    Stack requirements: 2\n    Registers affected: A, X, Y\n\nDescription: A call to this routine with the accumulator carry flag\n  set loads the current position of the cursor on the screen (in X,Y\n  coordinates) into the Y and X registers. Y is the column number of the\n  cursor location (6-39), and X is the row number of the location of the\n  cursor (0-24). A call with the carry bit clear moves the cursor to X,Y\n  as determined by the Y and X registers.\n\nHow to Use:","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.01622801460325718,0,0,-0.00811400730162859,0,0.03245602920651436,0.01622801460325718,0,-0.03245602920651436,0,0,0.06491205841302872,0.04057003930211067,0,-0.06491205841302872,-0.03245602920651436,0,0.42192840576171875,0.024342022836208344,0,-0.06491205841302872,-0.04057003930211067,0,0,0.024342022836208344,0,-0.03245602920651436,-0.00811400730162859,0,0.06491205841302872,0.024342022836208344,0,-0.03245602920651436,-0.01622801460325718,0,0.03245602920651436,0,0,0,-0.00811400730162859,0,0.12982411682605743,0,0,0,-0.00811400730162859,0,0.06491205841302872,0,0,-0.03245602920651436,-0.01622801460325718,0,0.06491205841302872,0.03245602920651436,0,0,-0.01622801460325718,0,0.03245602920651436,0.04868404567241669,0,0,-0.03245602920651436,0,0,0.04868404567241669,0,0,-0.00811400730162859,0,0,0,0,0,-0.04868404567241669,0,0.06491205841302872,0.01622801460325718,0,0,0,0,0.06491205841302872,0,0,-0.09736809134483337,-0.12982411682605743,0,0.03245602920651436,0,0,-0.03245602920651436,-0.04057003930211067,0,0,0,0,0,0,0,0.2271922081708908,0.024342022836208344,0,-0.03245602920651436,-0.04868404567241669,0,0.03245602920651436,0.04057003930211067,0,-0.03245602920651436,-0.03245602920651436,0,0.03245602920651436,0.21096420288085938,0,-0.06491205841302872,-0.03245602920651436,0,0,0,0,0,-0.01622801460325718,0,0.2921042740345001,0.04057003930211067,0,-0.09736809134483337,-0.024342022836208344,0,0,0.01622801460325718,0,0,-0.00811400730162859,0,0.09736809134483337,0.06491205841302872,0,-0.03245602920651436,0,0,0,0.04057003930211067,0,0,-0.024342022836208344,0,0.25964823365211487,0.03245602920651436,0,0,0,0,0.09736809134483337,0.01622801460325718,0,-0.06491205841302872,0,0,0.09736809134483337,0,0,-0.03245602920651436,0,0,0.06491205841302872,0,0,-0.12982411682605743,-0.00811400730162859,0,0.06491205841302872,0.04868404567241669,0,-0.03245602920651436,-0.01622801460325718,0,0.06491205841302872,0.04868404567241669,0,0,-0.04868404567241669,0,0.09736809134483337,0.01622801460325718,0,-0.06491205841302872,-0.03245602920651436,0,0.09736809134483337,0.00811400730162859,0,-0.09736809134483337,0,0,0.09736809134483337,0.1135961040854454,0,-0.03245602920651436,-0.07302606850862503,0,0.03245602920651436,0.01622801460325718,0,0,-0.024342022836208344,0,0,0.01622801460325718,0,-0.03245602920651436,-0.03245602920651436,0,0,0.00811400730162859,0,-0.03245602920651436,-0.00811400730162859,0,0,0.1622801572084427,0,-0.06491205841302872,-0.06491205841302872,0,0.12982411682605743,0.10548210144042969,0,0,-0.01622801460325718,0,0.06491205841302872,0.04868404567241669,0,0,-0.024342022836208344,0,0.06491205841302872,0.01622801460325718,0,-0.03245602920651436,-0.00811400730162859,0,0,0.13793812692165375,0,-0.06491205841302872,0,0,0,0.08114007860422134,0,0,-0.03245602920651436,0,0,0.06491205841302872,0,-0.06491205841302872,-0.024342022836208344,0,0,0.04868404567241669,0,-0.09736809134483337,-0.06491205841302872,0,0,0.04057003930211067,0,0,-0.01622801460325718,0,0.03245602920651436,0.03245602920651436,0,-0.12982411682605743,0,0,0.03245602920651436,0.04868404567241669,0,0,-0.03245602920651436,0,0,0.06491205841302872,0,0,-0.04868404567241669,0,0,0.06491205841302872,0,0,-0.04057003930211067,0,0.03245602920651436,0.024342022836208344,0,-0.03245602920651436,-0.00811400730162859,0,0,0,0,-0.03245602920651436,-0.01622801460325718,0,0,0.0567980520427227,0,0,-0.024342022836208344,0,0.03245602920651436,0.00811400730162859,0,-0.03245602920651436,-0.04057003930211067,0,0,0.07302606850862503,0,0,-0.01622801460325718,0,0,0.03245602920651436,0,0,0,0,0,0.10548210144042969,0,0,-0.04057003930211067,0,0,0,0,-0.03245602920651436,-0.03245602920651436,0,0.06491205841302872,0.024342022836208344,0,-0.06491205841302872,-0.00811400730162859,0,0.06491205841302872,0,0,0,-0.03245602920651436,0,0,0.06491205841302872,0,-0.06491205841302872,-0.04868404567241669,0,0.03245602920651436,0.024342022836208344,0,0,-0.01622801460325718,0,0,0.04057003930211067,0,-0.2271922081708908,-0.07302606850862503,0,0,0.03245602920651436,0,-0.03245602920651436,-0.03245602920651436,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE -->\nEXAMPLE:\n\nJSR RDTIM\n    STY TIME\n    STX TIME+1\n    STA TIME+2\n    ...\n    TIME *=*+3\n                                            BASIC TO MACHINE LANGUAGE   291\n~\n\nB-22. Function Name: READST\n\nPurpose: Read status word\n    Call address: $FFB7 (hex) 65463 (decimal)\n    Communication registers: A\n    Preparatory routines: None\n    Error returns: None\n    Stack requirements: 2\n    Registers affected: A\n\nDescription: This routine returns the current status of the I/O devices\n  in the accumulator. The routine is usually called after new communication\n  to an I/O device. The routine gives you information about device status,\n  or errors that have occurred during the I/O operation.\n    The bits returned in the accumulator contain the following information:\n  (see table below)","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0.06063390523195267,0.015158476307988167,0,-0.06063390523195267,-0.022737715393304825,0,0.030316952615976334,0.015158476307988167,0,-0.030316952615976334,0,0,0.030316952615976334,0.030316952615976334,0,-0.0909508615732193,-0.04547543078660965,0,0.42443734407424927,0.007579238153994083,0,-0.030316952615976334,0,0,0,0.007579238153994083,0,0,-0.007579238153994083,0,0.06063390523195267,0.13642628490924835,0,0,0,0,0.030316952615976334,0,0,0,0,0,0.030316952615976334,0,0,-0.030316952615976334,-0.007579238153994083,0,0.030316952615976334,0.007579238153994083,0,-0.0909508615732193,-0.007579238153994083,0,0.06063390523195267,0.022737715393304825,0,-0.030316952615976334,-0.05305466800928116,0,0,0.03789618983864784,0,0,-0.05305466800928116,0,0.030316952615976334,0.007579238153994083,0,0,-0.030316952615976334,0,0,0.007579238153994083,0,0,-0.05305466800928116,0,0.030316952615976334,0,0,-0.030316952615976334,-0.04547543078660965,0,0.030316952615976334,0.007579238153994083,0,-0.0909508615732193,-0.0909508615732193,0,0.06063390523195267,0,0,-0.030316952615976334,-0.022737715393304825,0,0,0.03789618983864784,0,0,-0.03789618983864784,0,0.21221867203712463,0.015158476307988167,0,-0.030316952615976334,-0.015158476307988167,0,0,0.015158476307988167,0,-0.030316952615976334,-0.05305466800928116,0,0.030316952615976334,0.21221867203712463,0,-0.030316952615976334,-0.015158476307988167,0,0.06063390523195267,0,0,-0.030316952615976334,0,0,0.3638034462928772,0.04547543078660965,0,-0.12126781046390533,-0.007579238153994083,0,0.06063390523195267,0.015158476307988167,0,0,0,0,0,0.015158476307988167,0,-0.030316952615976334,-0.015158476307988167,0,0.06063390523195267,0.06063390523195267,0,-0.030316952615976334,-0.04547543078660965,0,0.15158475935459137,0.030316952615976334,0,0,-0.015158476307988167,0,0,0,0,-0.06063390523195267,0,0,0.0909508615732193,0.015158476307988167,0,-0.06063390523195267,0,0,0.12126781046390533,0,0,-0.0909508615732193,-0.015158476307988167,0,0.06063390523195267,0.030316952615976334,0,-0.0909508615732193,-0.03789618983864784,0,0.06063390523195267,0.015158476307988167,0,0,-0.04547543078660965,0,0,0.030316952615976334,0,-0.12126781046390533,-0.030316952615976334,0,0.030316952615976334,0,0,0,-0.022737715393304825,0,0.030316952615976334,0.10610933601856232,0,-0.030316952615976334,-0.05305466800928116,0,0.1819017231464386,0,0,0,-0.022737715393304825,0,0,0.030316952615976334,0,0,-0.030316952615976334,0,0,0.03789618983864784,0,-0.030316952615976334,-0.022737715393304825,0,0.030316952615976334,0.1894809603691101,0,-0.030316952615976334,-0.08337162435054779,0,0.0909508615732193,0.13642628490924835,0,-0.0909508615732193,-0.007579238153994083,0,0.030316952615976334,0,0,-0.030316952615976334,-0.015158476307988167,0,0.030316952615976334,0.04547543078660965,0,-0.12126781046390533,-0.015158476307988167,0,0.030316952615976334,0.08337162435054779,0,-0.0909508615732193,0,0,0,0.007579238153994083,0,0,-0.03789618983864784,0,0.030316952615976334,0.05305466800928116,0,-0.06063390523195267,-0.05305466800928116,0,0,0.07579237967729568,0,-0.030316952615976334,-0.05305466800928116,0,0.030316952615976334,0.030316952615976334,0,-0.030316952615976334,-0.04547543078660965,0,0,0.03789618983864784,0,0,0,0,0,0,0,-0.030316952615976334,-0.06063390523195267,0,0,0.022737715393304825,0,0,-0.007579238153994083,0,0,0.022737715393304825,0,0,-0.03789618983864784,0,0.06063390523195267,0.10610933601856232,0,-0.030316952615976334,-0.007579238153994083,0,0,0,0,0,0,0,0,0.05305466800928116,0,0,-0.022737715393304825,0,0.1819017231464386,0.015158476307988167,0,0,-0.022737715393304825,0,0,0.05305466800928116,0,0,-0.05305466800928116,0,0,0.030316952615976334,0,0,-0.022737715393304825,0,0,0.10610933601856232,0,0,-0.0909508615732193,0,0,0.030316952615976334,0,-0.06063390523195267,-0.04547543078660965,0,0.06063390523195267,0,0,-0.0909508615732193,-0.007579238153994083,0,0,0.030316952615976334,0,0,-0.03789618983864784,0,0,0.03789618983864784,0,-0.06063390523195267,-0.015158476307988167,0,0,0.015158476307988167,0,-0.0909508615732193,-0.030316952615976334,0,0,0.022737715393304825,0,-0.15158475935459137,-0.015158476307988167,0,0,0.030316952615976334,0,-0.030316952615976334,-0.03789618983864784,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE -->\nEXAMPLE:\n\nGET  JSR SCNKEY      ;SCAN KEYBOARD\n         JSR GETIN       ;GET CHARACTER\n         CMP #0          ;IS IT NULL?\n         BEQ GET         ;YES... SCAN AGAIN\n         JSR CHROUT      ;PRINT IT\n\nB-26. Function Name: SCREEN\n\nPurpose: Return screen format\n    Call address: $FFED (hex) 65517 (decimal)\n    Communication registers: X, Y\n    Preparatory routines: None\n    Stack requirements: 2\n    Registers affected: X, Y\n\nDescription: This routine returns the format of the screen, e.g., 40\n  columns in X and 25 lines in Y. The routine can be used to determine what\n  machine a program is running on. This function has been implemented on\n  the Commodore 64 to help upward compatibility of your programs.\n\nBASIC TO MACHINE LANGUAGE   295\n~\n\nHow to Use:\n\n1) Call this routine.","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.0064123645424842834,0,0,-0.0064123645424842834,0,0.025649458169937134,0.012824729084968567,0,-0.05129891633987427,-0.025649458169937134,0,0.05129891633987427,0.06412364542484283,0,-0.025649458169937134,-0.08977310359477997,0,0.33344295620918274,0.0064123645424842834,0,-0.025649458169937134,-0.012824729084968567,0,0,0,0,-0.025649458169937134,-0.025649458169937134,0,0.025649458169937134,0.0384741872549057,0,-0.025649458169937134,0,0,0.025649458169937134,0,0,0,-0.0064123645424842834,0,0.025649458169937134,0,0,-0.0769483745098114,-0.044886551797389984,0,0.025649458169937134,0,0,0,-0.0064123645424842834,0,0.20519566535949707,0.03206182271242142,0,-0.0769483745098114,-0.0384741872549057,0,0,0.012824729084968567,0,0,-0.01923709362745285,0,0,0.03206182271242142,0,0,-0.0064123645424842834,0,0,0,0,-0.1538967490196228,-0.1154225617647171,0,0.025649458169937134,0,0,-0.0769483745098114,0,0,0,0,0,-0.10259783267974854,-0.1154225617647171,0,0.05129891633987427,0.012824729084968567,0,-0.025649458169937134,-0.01923709362745285,0,0,0,0,0,-0.025649458169937134,0,0.20519566535949707,0.012824729084968567,0,0,-0.025649458169937134,0,0,0.03206182271242142,0,-0.025649458169937134,-0.012824729084968567,0,0.1538967490196228,0.16672147810459137,0,-0.025649458169937134,-0.012824729084968567,0,0.025649458169937134,0,0,0,-0.025649458169937134,0,0.2308451235294342,0.03206182271242142,0,-0.05129891633987427,-0.01923709362745285,0,0,0.012824729084968567,0,0,0,0,0.05129891633987427,0.012824729084968567,0,0,-0.044886551797389984,0,0,0.01923709362745285,0,0,0,0,0.2308451235294342,0.10259783267974854,0,-0.025649458169937134,-0.0384741872549057,0,0.05129891633987427,0,0,0,-0.0064123645424842834,0,0.12824729084968567,0,0,-0.0769483745098114,0,0,0.025649458169937134,0.0064123645424842834,0,-0.10259783267974854,-0.08977310359477997,0,0.025649458169937134,0.01923709362745285,0,-0.025649458169937134,-0.044886551797389984,0,0.05129891633987427,0.0064123645424842834,0,0,-0.05129891633987427,0,0.10259783267974854,0.025649458169937134,0,-0.3077934980392456,-0.07053600996732712,0,0.025649458169937134,0,0,-0.05129891633987427,0,0,0,0.10259783267974854,0,-0.05129891633987427,-0.05129891633987427,0,0.10259783267974854,0.0064123645424842834,0,0,-0.01923709362745285,0,0,0.0769483745098114,0,-0.025649458169937134,-0.012824729084968567,0,0,0.01923709362745285,0,-0.12824729084968567,-0.012824729084968567,0,0,0.12824729084968567,0,-0.025649458169937134,-0.03206182271242142,0,0.0769483745098114,0.08336073905229568,0,-0.05129891633987427,-0.0064123645424842834,0,0,0.025649458169937134,0,-0.025649458169937134,-0.0064123645424842834,0,0.0769483745098114,0.0064123645424842834,0,-0.025649458169937134,-0.0064123645424842834,0,0,0.12183492630720139,0,0,-0.012824729084968567,0,0,0.03206182271242142,0,0,-0.01923709362745285,0,0,0.07053600996732712,0,-0.05129891633987427,-0.0384741872549057,0,0,0.06412364542484283,0,-0.025649458169937134,-0.07053600996732712,0,0,0.012824729084968567,0,-0.10259783267974854,-0.012824729084968567,0,0,0.025649458169937134,0,0,0,0,0.025649458169937134,0.05129891633987427,0,0,-0.1923709362745285,0,0,0.01923709362745285,0,0,-0.044886551797389984,0,0,0,0,-0.05129891633987427,-0.05129891633987427,0,0.0769483745098114,0.06412364542484283,0,-0.025649458169937134,-0.0064123645424842834,0,0,0,0,0,-0.012824729084968567,0,0,0.05129891633987427,0,-0.025649458169937134,-0.06412364542484283,0,0.025649458169937134,0,0,0,-0.01923709362745285,0,0,0.0769483745098114,0,0,-0.03206182271242142,0,0,0.0064123645424842834,0,-0.025649458169937134,-0.012824729084968567,0,0,0.09618546813726425,0,0,-0.025649458169937134,0,0.025649458169937134,0,0,-0.05129891633987427,0,0,0.025649458169937134,0.012824729084968567,0,-0.025649458169937134,0,0,0.025649458169937134,0,0,0,-0.025649458169937134,0,0,0.05771128088235855,0,-0.2308451235294342,-0.01923709362745285,0,0,0.012824729084968567,0,0,-0.05129891633987427,0,0,0.03206182271242142,0,-0.20519566535949707,-0.01923709362745285,0,0.025649458169937134,0.01923709362745285,0,-0.025649458169937134,-0.025649458169937134,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE -->\nEXAMPLE:\n\nJSR SCREEN\n    STX MAXCOL\n    STY MAXROW\n\nB-27. Function Name: SECOND\n\nPurpose: Send secondary address for LISTEN\n    Call address: $FF93 (hex) 65427 (decimal)\n    Communication registers: A\n    Preparatory routines: LISTEN\n    Error returns: See READST\n    Stack requirements: 8\n    Registers affected: A\n\nDescription: This routine is used to send a secondary address to an\n  I/O device after a call to the LISTEN routine is made, and the device is\n  commanded to LISTEN. The routine canNOT be used to send a secondary\n  address after a call to the TALK routine.\n    A secondary address is usually used to give setup information to a\n  device before I/O operations begin.\n    When a secondary address is to be sent to a device on the serial bus,\n  the address must first be ORed with $60.\n\nHow to Use:\n\n1) load the accumulator with the secondary address to be sent.\n    2) Call this routine.","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0.07323824614286423,0.013732170686125755,0,0,-0.036619123071432114,0,0.036619123071432114,0.013732170686125755,0,-0.036619123071432114,-0.02746434137225151,0,0.07323824614286423,0.018309561535716057,0,-0.09154780209064484,-0.04577390104532242,0,0.2929529845714569,0.004577390383929014,0,-0.018309561535716057,-0.013732170686125755,0,0.018309561535716057,0.009154780767858028,0,-0.018309561535716057,-0.013732170686125755,0,0.036619123071432114,0.10070258378982544,0,-0.018309561535716057,-0.03204173222184181,0,0.036619123071432114,0.009154780767858028,0,-0.018309561535716057,0,0,0.018309561535716057,0.02746434137225151,0,0,-0.06866085529327393,0,0.018309561535716057,0,0,-0.018309561535716057,-0.009154780767858028,0,0.036619123071432114,0.004577390383929014,0,0,-0.04119651019573212,0,0,0.018309561535716057,0,-0.05492868274450302,-0.018309561535716057,0,0.036619123071432114,0.018309561535716057,0,0,-0.009154780767858028,0,0.036619123071432114,0.013732170686125755,0,0,-0.03204173222184181,0,0.018309561535716057,0.07323824614286423,0,-0.018309561535716057,-0.009154780767858028,0,0.018309561535716057,0.013732170686125755,0,-0.20140516757965088,-0.21971473097801208,0,0.07323824614286423,0.013732170686125755,0,-0.05492868274450302,-0.06408346444368362,0,0.018309561535716057,0.036619123071432114,0,-0.018309561535716057,0,0,0.21971473097801208,0.018309561535716057,0,-0.036619123071432114,-0.02746434137225151,0,0,0.04119651019573212,0,-0.09154780209064484,-0.04577390104532242,0,0.018309561535716057,0.14647649228572845,0,-0.018309561535716057,-0.018309561535716057,0,0.018309561535716057,0.009154780767858028,0,-0.05492868274450302,-0.02288695052266121,0,0.21971473097801208,0.02288695052266121,0,-0.14647649228572845,-0.018309561535716057,0,0.018309561535716057,0.018309561535716057,0,-0.036619123071432114,-0.009154780767858028,0,0,0.013732170686125755,0,-0.018309561535716057,-0.004577390383929014,0,0.018309561535716057,0.04119651019573212,0,-0.05492868274450302,-0.02288695052266121,0,0.20140516757965088,0.018309561535716057,0,0,0,0,0,0.013732170686125755,0,-0.018309561535716057,-0.05035129189491272,0,0.05492868274450302,0.018309561535716057,0,-0.07323824614286423,0,0,0.07323824614286423,0.018309561535716057,0,-0.14647649228572845,-0.013732170686125755,0,0.05492868274450302,0.018309561535716057,0,-0.07323824614286423,-0.013732170686125755,0,0.05492868274450302,0.013732170686125755,0,0,-0.10527997463941574,0,0.036619123071432114,0.036619123071432114,0,-0.10985736548900604,-0.036619123071432114,0,0.018309561535716057,0.04119651019573212,0,-0.05492868274450302,-0.009154780767858028,0,0,0.10985736548900604,0,-0.018309561535716057,-0.12358953803777695,0,0.14647649228572845,0.004577390383929014,0,-0.018309561535716057,-0.06866085529327393,0,0.036619123071432114,0.02746434137225151,0,0,-0.009154780767858028,0,0,0.018309561535716057,0,-0.09154780209064484,-0.036619123071432114,0,0,0.12816692888736725,0,-0.036619123071432114,-0.09612519294023514,0,0.018309561535716057,0.08239302039146423,0,-0.05492868274450302,-0.02288695052266121,0,0,0.004577390383929014,0,-0.036619123071432114,-0.013732170686125755,0,0.036619123071432114,0.018309561535716057,0,0,-0.03204173222184181,0,0.05492868274450302,0.10985736548900604,0,-0.05492868274450302,-0.004577390383929014,0,0.036619123071432114,0.004577390383929014,0,-0.036619123071432114,-0.009154780767858028,0,0.05492868274450302,0.03204173222184181,0,-0.036619123071432114,-0.04119651019573212,0,0.018309561535716057,0.04577390104532242,0,-0.07323824614286423,-0.07323824614286423,0,0,0.02746434137225151,0,0,-0.05035129189491272,0,0,0.036619123071432114,0,-0.036619123071432114,0,0,0.018309561535716057,0.02746434137225151,0,0,-0.05492868274450302,0,0,0.013732170686125755,0,-0.036619123071432114,-0.03204173222184181,0,0,0.004577390383929014,0,-0.05492868274450302,-0.05950607359409332,0,0.018309561535716057,0.09154780209064484,0,-0.036619123071432114,-0.02288695052266121,0,0,0.02288695052266121,0,0,-0.004577390383929014,0,0.018309561535716057,0.05492868274450302,0,-0.018309561535716057,-0.05492868274450302,0,0.12816692888736725,0,0,-0.05492868274450302,-0.04119651019573212,0,0,0.013732170686125755,0,0,-0.03204173222184181,0,0.05492868274450302,0.004577390383929014,0,-0.09154780209064484,-0.03204173222184181,0,0,0.07323824614286423,0,0,-0.036619123071432114,0,0,0.03204173222184181,0,-0.05492868274450302,-0.036619123071432114,0,0.036619123071432114,0.018309561535716057,0,-0.018309561535716057,-0.02288695052266121,0,0.018309561535716057,0.03204173222184181,0,-0.018309561535716057,-0.03204173222184181,0,0,0.05950607359409332,0,-0.036619123071432114,-0.036619123071432114,0,0.12816692888736725,0,0,0,-0.004577390383929014,0,0,0.013732170686125755,0,-0.42111989855766296,-0.036619123071432114,0,0.018309561535716057,0.02746434137225151,0,-0.09154780209064484,-0.036619123071432114,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE -->\nEXAMPLE:\n\nLDA #NAME2-NAME     ;LOAD LENGTH OF FILE NAME\n    LDX #<NAME          ;LOAD ADDRESS OF FILE NAME\n    LDY #>NAME\n    JSR SETNAM\n\nB-31. Function Name: SETTIM\n\nPurpose: Set the system clock\n    Call address: $FFDB (hex) 65499 (decimal)\n    Communication registers: A, X, Y\n    Preparatory routines: None\n    Error returns: None\n    Stack requirements: 2\n    Registers affected: None\n\nBASIC TO MACHINE LANGUAGE   299\n~\n\nDescription: A system clock is maintained by an interrupt routine that\n  updates the clock every 1/60th of a second (one \"jiffy\"). The clock is\n  three bytes long, which gives it the capability to count up to 5,184,000\n  jiffies (24 hours). At that point the clock resets to zero. Before\n  calling this routine to set the clock, the accumulator must contain the\n  most significant byte, the X index register the next most significant\n  byte, and the Y index register the least significant byte of the initial\n  time setting (in jiffies).\n\nHow to Use:\n    1) Load the accumulator with the MSB of the 3-byte number to set the\n       clock.\n    2) Load the X register with the next byte.\n    3) Load the Y register with the LSB.\n    4) Call this routine.\n\nEXAMPLE:\n   ;SET THE CLOCK TO 10 MINUTES = 3600 JIFFIES\n   LDA #0               ;MOST SIGNIFICANT\n   LDX #>3600\n   LDY #<3600           ;LEAST SIGNIFICANT\n   JSR SETTIM\n\nB-32. Function  Name: SETTMO","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0.029695693403482437,0.007423923350870609,0,0,-0.06681530922651291,0,0.11878277361392975,0.029695693403482437,0,-0.029695693403482437,0,0,0.059391386806964874,0.044543541967868805,0,0,-0.07423923164606094,0,0.44543540477752686,0.007423923350870609,0,-0.059391386806964874,-0.014847846701741219,0,0,0,0,0,-0.007423923350870609,0,0.08908708393573761,0.05196746438741684,0,0,0,0,0.029695693403482437,0.029695693403482437,0,0,-0.014847846701741219,0,0,0.014847846701741219,0,0,-0.022271770983934402,0,0.029695693403482437,0,0,0,-0.007423923350870609,0,0.059391386806964874,0.007423923350870609,0,-0.029695693403482437,-0.029695693403482437,0,0,0.014847846701741219,0,0,-0.059391386806964874,0,0,0.007423923350870609,0,0,0,0,0,0,0,0,-0.029695693403482437,0,0,0.029695693403482437,0,0,0,0,0.059391386806964874,0.007423923350870609,0,-0.17817416787147522,-0.13363061845302582,0,0.11878277361392975,0.007423923350870609,0,-0.08908708393573761,-0.06681530922651291,0,0,0.014847846701741219,0,0,-0.014847846701741219,0,0.20786985754966736,0.059391386806964874,0,0,-0.014847846701741219,0,0,0.029695693403482437,0,-0.029695693403482437,0,0,0.059391386806964874,0.22271770238876343,0,-0.029695693403482437,-0.05196746438741684,0,0,0,0,-0.059391386806964874,0,0,0.2375655472278595,0.06681530922651291,0,-0.11878277361392975,-0.014847846701741219,0,0.059391386806964874,0.014847846701741219,0,0,0,0,0,0,0,0,0,0,0,0.029695693403482437,0,-0.029695693403482437,0,0,0.17817416787147522,0.03711961582303047,0,0,-0.022271770983934402,0,0,0.007423923350870609,0,0,0,0,0.20786985754966736,0,0,-0.11878277361392975,0,0,0.059391386806964874,0,0,-0.059391386806964874,-0.014847846701741219,0,0.029695693403482437,0.007423923350870609,0,-0.08908708393573761,-0.029695693403482437,0,0.11878277361392975,0.029695693403482437,0,0,-0.08908708393573761,0,0,0.059391386806964874,0,-0.17817416787147522,-0.059391386806964874,0,0.029695693403482437,0.014847846701741219,0,-0.059391386806964874,0,0,0,0.10393492877483368,0,-0.029695693403482437,-0.059391386806964874,0,0.08908708393573761,0,0,0,-0.03711961582303047,0,0.059391386806964874,0.03711961582303047,0,0,-0.014847846701741219,0,0,0.029695693403482437,0,-0.08908708393573761,-0.03711961582303047,0,0,0.13363061845302582,0,-0.029695693403482437,-0.059391386806964874,0,0.029695693403482437,0.14105454087257385,0,0,-0.014847846701741219,0,0,0,0,0,0,0,0.029695693403482437,0.022271770983934402,0,0,-0.014847846701741219,0,0,0.09651100635528564,0,0,0,0,0,0,0,0,0,0,0.029695693403482437,0.11135885119438171,0,-0.059391386806964874,-0.059391386806964874,0,0.029695693403482437,0.044543541967868805,0,-0.08908708393573761,-0.03711961582303047,0,0,0.014847846701741219,0,-0.059391386806964874,-0.044543541967868805,0,0,0.059391386806964874,0,0,0,0,0,0,0,0,-0.08908708393573761,0,0,0.014847846701741219,0,-0.08908708393573761,-0.029695693403482437,0,0,0.014847846701741219,0,0,-0.059391386806964874,0,0.08908708393573761,0.07423923164606094,0,-0.059391386806964874,-0.022271770983934402,0,0,0.029695693403482437,0,0,0,0,0,0.05196746438741684,0,0,-0.044543541967868805,0,0.059391386806964874,0,0,0,-0.022271770983934402,0,0.029695693403482437,0.029695693403482437,0,-0.029695693403482437,-0.007423923350870609,0,0.029695693403482437,0,0,0,-0.014847846701741219,0,0,0.07423923164606094,0,0,-0.029695693403482437,0,0,0.014847846701741219,0,-0.059391386806964874,0,0,0.029695693403482437,0,0,-0.11878277361392975,0,0,0,0.014847846701741219,0,0,-0.03711961582303047,0,0,0.059391386806964874,0,-0.059391386806964874,-0.044543541967868805,0,0.059391386806964874,0,0,0,-0.029695693403482437,0,0,0.05196746438741684,0,-0.2375655472278595,-0.029695693403482437,0,0,0.014847846701741219,0,-0.08908708393573761,-0.014847846701741219,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE -->\nEXAMPLE:\n\n;TELL DEVICE #4 TO TALK WITH COMMAND #7\n    LDA #4\n    JSR TALK\n    LDA #7\n    JSR TALKSA\n\nB-36. Function Name: UDTIM\n\nPurpose: Update the system clock\n    Call address: $FFEA (hex) 65514 (decimal)\n    Communication registers: None\n    Preparatory routines: None\n    Error returns: None\n    Stack requirements: 2\n    Registers affected: A, X\n\nDescription: This routine updates the system clock. Normally this\n  routine is called by the normal KERNAL interrupt routine every 1/60th of\n  a second. If the user program processes its own interrupts this routine\n  must be called to update the time. In addition, the <STOP> key routine\n  must be called, if the <STOP> key is to remain functional.\n\nHow to Use:\n    1) Call this routine.","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#EXAMPLE"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.009241252206265926,0,0,-0.08779189735651016,0,0.05544751510024071,0.018482504412531853,0,0,-0.06468876451253891,0,0.018482504412531853,0.036965008825063705,0,-0.05544751510024071,-0.032344382256269455,0,0.018482504412531853,0.018482504412531853,0,-0.018482504412531853,-0.018482504412531853,0,0,0,0,0,-0.004620626103132963,0,0.09241252392530441,0.06006813794374466,0,0,0,0,0,0,0,0,0,0,0.036965008825063705,0.023103130981326103,0,-0.05544751510024071,-0.10627440363168716,0,0.05544751510024071,0.06930939108133316,0,0,-0.004620626103132963,0,0.07393001765012741,0.05544751510024071,0,-0.036965008825063705,-0.05544751510024071,0,0,0.032344382256269455,0,-0.09241252392530441,-0.041585635393857956,0,0.09241252392530441,0.009241252206265926,0,0,-0.009241252206265926,0,0.018482504412531853,0.032344382256269455,0,-0.018482504412531853,-0.05082688853144646,0,0,0.009241252206265926,0,-0.07393001765012741,-0.027723757550120354,0,0.036965008825063705,0.009241252206265926,0,-0.036965008825063705,-0.22179006040096283,0,0,0.009241252206265926,0,-0.036965008825063705,-0.027723757550120354,0,0,0.023103130981326103,0,0,0,0,0.22179006040096283,0.027723757550120354,0,-0.018482504412531853,-0.036965008825063705,0,0.036965008825063705,0.013861878775060177,0,-0.18482504785060883,-0.036965008825063705,0,0.018482504412531853,0.013861878775060177,0,-0.036965008825063705,-0.018482504412531853,0,0,0,0,-0.036965008825063705,-0.027723757550120354,0,0.22179006040096283,0.06468876451253891,0,-0.018482504412531853,-0.004620626103132963,0,0.11089503020048141,0.009241252206265926,0,-0.036965008825063705,-0.004620626103132963,0,0.018482504412531853,0.018482504412531853,0,-0.018482504412531853,-0.027723757550120354,0,0.018482504412531853,0.032344382256269455,0,-0.05544751510024071,0,0,0.11089503020048141,0.036965008825063705,0,-0.018482504412531853,-0.018482504412531853,0,0.05544751510024071,0.009241252206265926,0,0,-0.08317127078771591,0,0.018482504412531853,0.06930939108133316,0,-0.018482504412531853,0,0,0.036965008825063705,0.036965008825063705,0,0,-0.032344382256269455,0,0,0.013861878775060177,0,-0.27723756432533264,-0.05082688853144646,0,0.07393001765012741,0.023103130981326103,0,-0.036965008825063705,-0.023103130981326103,0,0,0.009241252206265926,0,-0.09241252392530441,-0.032344382256269455,0,0,0.004620626103132963,0,-0.036965008825063705,-0.009241252206265926,0,0,0.11089503020048141,0,-0.018482504412531853,-0.11551564931869507,0,0.20330755412578583,0.018482504412531853,0,0,-0.10165377706289291,0,0,0.009241252206265926,0,0,-0.018482504412531853,0,0.018482504412531853,0.013861878775060177,0,-0.12937752902507782,-0.018482504412531853,0,0.09241252392530441,0.11551564931869507,0,-0.018482504412531853,-0.023103130981326103,0,0,0.06006813794374466,0,-0.036965008825063705,-0.023103130981326103,0,0.018482504412531853,0.009241252206265926,0,-0.05544751510024071,-0.009241252206265926,0,0,0.032344382256269455,0,0,-0.027723757550120354,0,0.05544751510024071,0.05544751510024071,0,-0.09241252392530441,-0.009241252206265926,0,0,0.036965008825063705,0,-0.036965008825063705,-0.013861878775060177,0,0.036965008825063705,0.023103130981326103,0,-0.036965008825063705,-0.009241252206265926,0,0.036965008825063705,0.036965008825063705,0,-0.036965008825063705,-0.009241252206265926,0,0.09241252392530441,0,0,0,-0.16172191500663757,0,0,0.06006813794374466,0,-0.14786003530025482,-0.018482504412531853,0,0.018482504412531853,0.004620626103132963,0,-0.036965008825063705,-0.05082688853144646,0,0.018482504412531853,0,0,-0.036965008825063705,-0.036965008825063705,0,0,0.009241252206265926,0,-0.11089503020048141,-0.018482504412531853,0,0.07393001765012741,0.10165377706289291,0,-0.018482504412531853,-0.009241252206265926,0,0.036965008825063705,0,0,-0.018482504412531853,0,0,0,0.06468876451253891,0,0,-0.06930939108133316,0,0.018482504412531853,0.05544751510024071,0,0,-0.05544751510024071,0,0,0.004620626103132963,0,0,-0.027723757550120354,0,0.036965008825063705,0.009241252206265926,0,-0.14786003530025482,-0.036965008825063705,0,0.09241252392530441,0.05544751510024071,0,0,-0.004620626103132963,0,0.11089503020048141,0.05544751510024071,0,-0.09241252392530441,-0.05544751510024071,0,0.05544751510024071,0.004620626103132963,0,-0.05544751510024071,-0.023103130981326103,0,0.018482504412531853,0.023103130981326103,0,-0.018482504412531853,-0.032344382256269455,0,0.036965008825063705,0.046206261962652206,0,-0.05544751510024071,-0.023103130981326103,0,0.018482504412531853,0.06006813794374466,0,-0.036965008825063705,0,0,0,0.004620626103132963,0,-0.42509761452674866,-0.07855064421892166,0,0,0.018482504412531853,0,-0.036965008825063705,-0.018482504412531853,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#ADDRESSING-MODES -->\nADDRESSING MODES\n\nACCUMULATOR ADDRESSING - This form of addressing is represented with a\n  one byte instruction, implying an operation on the accumulator.\n\nIMMEDIATE ADDRESSING - In immediate addressing, the operand is contained\n  in the second byte of the instruction, with no further memory addressing\n  required.\n\nABSOLUTE ADDRESSING - In absolute addressing, the second byte of the\n  instruction specifies the eight low order bits of the effective address\n  while the third byte specifies the eight high order bits. Thus, the\n  absolute addressing mode allows access to the entire 64K bytes of\n  addressable memory.\n\nZERO PAGE ADDRESSING - The zero page instructions allow for shorter code\n\nAPPENDIX L   411\n~\n\nand execution times by only fetching the second byte of the instruction\n  and assuming a zero high address byte. Careful use of the zero page can\n  result in significant increase in code efficiency.\n\nINDEXED ZERO PAGE ADDRESSING - (X, Y indexing)-This form of addressing is\n  used in conjunction with the index register and is referred to as \"Zero\n  Page, X\" or \"Zero Page, Y.\" The effective address is calculated by adding\n  the second byte to the contents of the index register. Since this is a\n  form of \"Zero Page\" addressing, the content of the second byte references\n  a location in page zero. Additionally, due to the \"Zero Page\" addressing\n  nature of this mode, no carry is added to the high order 8 bits of memory\n  and crossing of page boundaries does not occur.","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#ADDRESSING-MODES"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0.022556431591510773,0,0,-0.20300787687301636,-0.011278215795755386,0,0.045112863183021545,0.022556431591510773,0,-0.022556431591510773,-0.09586483240127563,0,0.022556431591510773,0.0394737534224987,0,-0.18045145273208618,-0.01691732369363308,0,0.045112863183021545,0.011278215795755386,0,0,0,0,0,0.045112863183021545,0,0,-0.005639107897877693,0,0,0.045112863183021545,0,0,-0.05075196921825409,0,0,0.01691732369363308,0,0,-0.1691732257604599,0,0,0.06766929477453232,0,-0.06766929477453232,-0.028195537626743317,0,0,0,0,-0.20300787687301636,-0.005639107897877693,0,0,0.022556431591510773,0,-0.022556431591510773,-0.045112863183021545,0,0.022556431591510773,0.01691732369363308,0,0,-0.05075196921825409,0,0.022556431591510773,0.005639107897877693,0,-0.045112863183021545,-0.0789475068449974,0,0.022556431591510773,0.01691732369363308,0,0,-0.005639107897877693,0,0,0.022556431591510773,0,-0.06766929477453232,-0.0394737534224987,0,0.022556431591510773,0.005639107897877693,0,-0.045112863183021545,-0.005639107897877693,0,0,0.011278215795755386,0,-0.022556431591510773,-0.028195537626743317,0,0.022556431591510773,0.022556431591510773,0,-0.022556431591510773,-0.10150393843650818,0,0.36090290546417236,0.028195537626743317,0,0,-0.062030185014009476,0,0,0.011278215795755386,0,0,-0.09586483240127563,0,0.09022572636604309,0.022556431591510773,0,-0.022556431591510773,-0.005639107897877693,0,0.045112863183021545,0.005639107897877693,0,-0.13533858954906464,-0.045112863183021545,0,0.06766929477453232,0.011278215795755386,0,-0.045112863183021545,0,0,0,0.005639107897877693,0,-0.13533858954906464,0,0,0.20300787687301636,0.022556431591510773,0,-0.045112863183021545,-0.03383464738726616,0,0.09022572636604309,0.01691732369363308,0,-0.045112863183021545,-0.12406037002801895,0,0.13533858954906464,0,0,-0.045112863183021545,-0.09586483240127563,0,0,0.045112863183021545,0,0,0,0,0,0.011278215795755386,0,0,-0.022556431591510773,0,0.09022572636604309,0.022556431591510773,0,0,-0.011278215795755386,0,0,0.005639107897877693,0,0,-0.05639107525348663,0,0.045112863183021545,0.011278215795755386,0,-0.022556431591510773,-0.062030185014009476,0,0.06766929477453232,0.005639107897877693,0,-0.06766929477453232,-0.011278215795755386,0,0,0.022556431591510773,0,0,-0.022556431591510773,0,0,0.18045145273208618,0,-0.022556431591510773,0,0,0.045112863183021545,0,0,-0.022556431591510773,-0.005639107897877693,0,0.06766929477453232,0.05075196921825409,0,0,-0.062030185014009476,0,0,0.03383464738726616,0,-0.11278215050697327,-0.07330840080976486,0,0,0.0394737534224987,0,-0.022556431591510773,-0.06766929477453232,0,0,0.011278215795755386,0,-0.09022572636604309,-0.06766929477453232,0,0.022556431591510773,0.10150393843650818,0,-0.022556431591510773,-0.022556431591510773,0,0.022556431591510773,0.045112863183021545,0,0,-0.022556431591510773,0,0.022556431591510773,0.06766929477453232,0,-0.022556431591510773,-0.022556431591510773,0,0,0,0,-0.06766929477453232,-0.01691732369363308,0,0.022556431591510773,0,0,-0.022556431591510773,-0.05075196921825409,0,0.045112863183021545,0.045112863183021545,0,-0.06766929477453232,-0.005639107897877693,0,0.045112863183021545,0.005639107897877693,0,0,0,0,0.022556431591510773,0.028195537626743317,0,-0.20300787687301636,-0.022556431591510773,0,0,0.0394737534224987,0,-0.022556431591510773,-0.03383464738726616,0,0,0,0,-0.022556431591510773,-0.01691732369363308,0,0.022556431591510773,0.005639107897877693,0,-0.18045145273208618,-0.022556431591510773,0,0.045112863183021545,0.022556431591510773,0,0,-0.01691732369363308,0,0.022556431591510773,0.0394737534224987,0,0,-0.005639107897877693,0,0.09022572636604309,0.09022572636604309,0,0,-0.05639107525348663,0,0.06766929477453232,0,0,-0.09022572636604309,-0.011278215795755386,0,0,0.022556431591510773,0,-0.3383464515209198,-0.05075196921825409,0,0.13533858954906464,0.022556431591510773,0,0,-0.045112863183021545,0,0,0.028195537626743317,0,0,-0.011278215795755386,0,0.045112863183021545,0.011278215795755386,0,-0.045112863183021545,-0.045112863183021545,0,0.022556431591510773,0.05075196921825409,0,-0.09022572636604309,-0.045112863183021545,0,0,0.03383464738726616,0,-0.1578950136899948,-0.022556431591510773,0,0.022556431591510773,0.05639107525348663,0,0,-0.045112863183021545,0,0.045112863183021545,0.022556431591510773,0,-0.045112863183021545,0,0,0,0.011278215795755386,0,0,-0.10150393843650818,0,0,0.022556431591510773,0,-0.022556431591510773,-0.011278215795755386,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#INSTRUCTION-SET-ALPHABETIC-SEQUENCE -->\nINSTRUCTION SET - ALPHABETIC SEQUENCE\n\nADC   Add Memory to Accumulator with Carry\n          AND   \"AND\" Memory with Accumulator\n          ASL   Shift left One Bit (Memory or Accumulator)\n\nBCC   Branch on Carry Clear\n          BCS   Branch on Carry Set\n          BEQ   Branch on Result Zero\n          BIT   Test Bits in Memory with Accumulator\n          BMI   Branch on Result Minus\n          BNE   Branch on Result not Zero\n          BPL   Branch on Result Plus\n          BRK   Force Break\n          BVC   Branch on Overflow Clear\n          BVS   Branch on Overflow Set\n\nCLC   Clear Carry Flag\n          CLD   Clear Decimal Mode\n          CLI   Clear Interrupt Disable Bit\n          CLV   Clear Overflow Flag\n          CMP   Compare Memory and Accumulator\n          CPX   Compare Memory and Index X\n          CPY   Compare Memory and Index Y\n\nAPPENDIX L   413\n~\n\nDEC   Decrement Memory by One\n          DEX   Decrement Index X by One\n          DEY   Decrement Index Y by One\n\nEOR   \"Exclusive-OR\" Memory with Accumulator\n\nINC   Increment Memory by One\n          INX   Increment Index X by one\n          INY   Increment Index Y by one\n\nJMP   Jump to New location\n          JSR   Jump to New Location Saving Return Address\n\nLDA   Load Accumulator with Memory\n          LDX   Load Index X with Memory\n          LDY   Load Index Y with Memory\n          LSR   Shift One Bit Right (Memory or Accumulator)\n\nNOP   No Operation\n\nORA   \"OR\" Memory with Accumulator","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#INSTRUCTION-SET-ALPHABETIC-SEQUENCE"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.012683968991041183,0,0,-0.010569973848760128,0,0.008455979637801647,0.006341984495520592,0,-0.016911959275603294,-0.019025953486561775,0,0.016911959275603294,0.002113994909450412,0,-0.025367937982082367,-0.016911959275603294,0,0.025367937982082367,0.019025953486561775,0,-0.04227989539504051,-0.008455979637801647,0,0.008455979637801647,0.016911959275603294,0,0,-0.004227989818900824,0,0.008455979637801647,0.027481932193040848,0,-0.025367937982082367,-0.002113994909450412,0,0,0,0,0,-0.010569973848760128,0,0.04227989539504051,0.010569973848760128,0,0,-0.016911959275603294,0,0.016911959275603294,0.008455979637801647,0,0,-0.012683968991041183,0,0.04227989539504051,0.002113994909450412,0,0,-0.021139947697520256,0,0,0.014797964133322239,0,-0.016911959275603294,-0.016911959275603294,0,0.025367937982082367,0,0,-0.016911959275603294,-0.008455979637801647,0,0.025367937982082367,0.004227989818900824,0,0,-0.029595928266644478,0,0.03382391855120659,0,0,-0.016911959275603294,-0.006341984495520592,0,0.016911959275603294,0.012683968991041183,0,-0.1522076278924942,-0.06341984122991562,0,0,0.027481932193040848,0,-0.008455979637801647,-0.03382391855120659,0,0.008455979637801647,0.006341984495520592,0,0,-0.006341984495520592,0,0.7694941163063049,0.006341984495520592,0,-0.025367937982082367,-0.021139947697520256,0,0,0.023253943771123886,0,-0.06764783710241318,-0.054963864386081696,0,0.016911959275603294,0.019025953486561775,0,-0.03382391855120659,-0.023253943771123886,0,0,0.006341984495520592,0,-0.04227989539504051,-0.006341984495520592,0,0.059191856533288956,0.004227989818900824,0,-0.11838371306657791,-0.014797964133322239,0,0,0.006341984495520592,0,-0.008455979637801647,-0.004227989818900824,0,0.008455979637801647,0.027481932193040848,0,0,-0.002113994909450412,0,0.008455979637801647,0.012683968991041183,0,-0.008455979637801647,0,0,0.06764783710241318,0.021139947697520256,0,-0.016911959275603294,-0.004227989818900824,0,0,0.004227989818900824,0,0,-0.008455979637801647,0,0,0.016911959275603294,0,-0.008455979637801647,-0.010569973848760128,0,0.008455979637801647,0.012683968991041183,0,-0.04227989539504051,-0.010569973848760128,0,0,0.021139947697520256,0,-0.025367937982082367,-0.016911959275603294,0,0.008455979637801647,0.008455979637801647,0,-0.025367937982082367,-0.08033180236816406,0,0.008455979637801647,0,0,-0.050735875964164734,-0.012683968991041183,0,0.025367937982082367,0.004227989818900824,0,0,-0.002113994909450412,0,0.016911959275603294,0.38686105608940125,0,0,-0.04227989539504051,0,0.0761038139462471,0.008455979637801647,0,-0.008455979637801647,-0.050735875964164734,0,0,0.008455979637801647,0,-0.008455979637801647,-0.016911959275603294,0,0.008455979637801647,0.002113994909450412,0,-0.06764783710241318,-0.025367937982082367,0,0,0.03382391855120659,0,-0.03382391855120659,-0.0655338391661644,0,0.008455979637801647,0.006341984495520592,0,0,-0.014797964133322239,0,0.025367937982082367,0.006341984495520592,0,0,0,0,0,0.006341984495520592,0,0,-0.010569973848760128,0,0.016911959275603294,0.03382391855120659,0,-0.050735875964164734,-0.008455979637801647,0,0,0.010569973848760128,0,-0.008455979637801647,0,0,0.03382391855120659,0.004227989818900824,0,-0.016911959275603294,-0.004227989818900824,0,0.04227989539504051,0.014797964133322239,0,0,-0.021139947697520256,0,0.025367937982082367,0,0,-0.025367937982082367,-0.016911959275603294,0,0.008455979637801647,0.010569973848760128,0,-0.050735875964164734,-0.016911959275603294,0,0.059191856533288956,0.010569973848760128,0,-0.16911958158016205,-0.025367937982082367,0,0.025367937982082367,0.021139947697520256,0,-0.008455979637801647,-0.004227989818900824,0,0.008455979637801647,0.012683968991041183,0,-0.025367937982082367,-0.03805190697312355,0,0,0.03805190697312355,0,-0.008455979637801647,-0.006341984495520592,0,0.025367937982082367,0.002113994909450412,0,-0.016911959275603294,-0.004227989818900824,0,0.025367937982082367,0.1966015249490738,0,-0.008455979637801647,-0.04016590118408203,0,0.016911959275603294,0,0,0,-0.03382391855120659,0,0,0.008455979637801647,0,-0.016911959275603294,-0.008455979637801647,0,0.016911959275603294,0.012683968991041183,0,0,-0.010569973848760128,0,0.016911959275603294,0.014797964133322239,0,-0.008455979637801647,-0.029595928266644478,0,0,0.008455979637801647,0,-0.04227989539504051,-0.027481932193040848,0,0.016911959275603294,0.002113994909450412,0,-0.03382391855120659,-0.004227989818900824,0,0,0.019025953486561775,0,-0.016911959275603294,-0.010569973848760128,0,0,0.03805190697312355,0,-0.03382391855120659,-0.004227989818900824,0,0,0.012683968991041183,0,-0.008455979637801647,-0.012683968991041183,0,0.008455979637801647,0.004227989818900824,0,-0.11838371306657791,-0.027481932193040848,0,0.03382391855120659,0.03170992061495781,0,-0.06764783710241318,-0.09512976557016373,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#MULTI-COLOR-CHARACTER-MODE-MCM-1-BMM-ECM-0 -->\nMULTI-COLOR CHARACTER MODE (MCM = 1, BMM = ECM = 0 )\n\nMulti-color mode provides additional color flexibility allowing up to\n  four colors within each character but with reduced resolution. The multi-\n  color mode is selected by setting the MCM bit in register 22 ($16) to\n  \"1,\" which causes the dot data stored in the character base to be\n  interpreted in a different manner. If the MSB of the color nybble is a\n  \"0,\" the character will be displayed as described in standard character\n  mode, allowing the two modes to be inter-mixed (however, only the lower\n  order 8 colors are available). When the MSB of the color nybble is a \"1\"\n  (if MCM:MSB(CM) = 1) the character bits are interpreted in the multi-\n  color mode:\n\n| CHARACTER  |\n     FUNCTION   |  BIT PAIR  |               COLOR DISPLAYED\n  --------------+------------+---------------------------------------------\n    Background  |     00     |  Background #0 Color\n                |            |  (register 33 ($21))\n    Background  |     01     |  Background #1 Color\n                |            |  (register 34 ($22)\n    Foreground  |     10     |  Background #2 Color\n                |            |  (register 35 ($23)\n    Foreground  |     11     |  Color specified by 3 LSB\n                |            |  of color nybble\n\nSince two bits are required to specify one dot color, the character is\n  now displayed as a 4*8 matrix with each dot twice the horizontal size as\n  in standard mode. Note, however, that each character region can now\n  contain 4 different colors, two as foreground and two as background (see\n  MOB priority).","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#MULTI-COLOR-CHARACTER-MODE-MCM-1-BMM-ECM-0"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.004932741168886423,0,0,-0.024663705378770828,0,0,0.0024663705844432116,0,-0.009865482337772846,-0.0024663705844432116,0,0.009865482337772846,0.012331852689385414,0,-0.019730964675545692,-0.019730964675545692,0,0.039461929351091385,0.009865482337772846,0,0,-0.009865482337772846,0,0.019730964675545692,0.007399111986160278,0,-0.049327410757541656,-0.004932741168886423,0,0.049327410757541656,0.039461929351091385,0,0,-0.004932741168886423,0,0.009865482337772846,0,0,0,-0.004932741168886423,0,0.019730964675545692,0.024663705378770828,0,0,-0.019730964675545692,0,0,0,0,-0.009865482337772846,-0.0024663705844432116,0,0.019730964675545692,0.004932741168886423,0,0,-0.019730964675545692,0,0.029596447944641113,0.004932741168886423,0,-0.029596447944641113,-0.004932741168886423,0,0.009865482337772846,0.024663705378770828,0,0,-0.0024663705844432116,0,0,0.022197335958480835,0,0,-0.009865482337772846,0,0.019730964675545692,0.004932741168886423,0,-0.009865482337772846,0,0,0.029596447944641113,0.03699555993080139,0,-0.07892385870218277,-0.03699555993080139,0,0.009865482337772846,0.009865482337772846,0,-0.009865482337772846,-0.007399111986160278,0,0,0,0,-0.009865482337772846,-0.007399111986160278,0,0.7892385721206665,0.004932741168886423,0,0,-0.03206281736493111,0,0,0.007399111986160278,0,-0.05919289588928223,-0.04686104133725166,0,0.009865482337772846,0.019730964675545692,0,-0.019730964675545692,-0.004932741168886423,0,0.019730964675545692,0.009865482337772846,0,-0.019730964675545692,-0.024663705378770828,0,0.0690583810210228,0.029596447944641113,0,-0.07892385870218277,-0.0024663705844432116,0,0,0.009865482337772846,0,-0.05919289588928223,-0.0024663705844432116,0,0.009865482337772846,0.009865482337772846,0,0,-0.0024663705844432116,0,0.009865482337772846,0.0172645952552557,0,-0.029596447944641113,-0.007399111986160278,0,0.0690583810210228,0.009865482337772846,0,0,0,0,0.009865482337772846,0.02713007666170597,0,-0.039461929351091385,-0.0172645952552557,0,0,0.004932741168886423,0,0,0,0,0,0,0,-0.009865482337772846,-0.009865482337772846,0,0.019730964675545692,0.012331852689385414,0,-0.05919289588928223,-0.007399111986160278,0,0.009865482337772846,0.02713007666170597,0,-0.009865482337772846,-0.039461929351091385,0,0.009865482337772846,0.009865482337772846,0,-0.05919289588928223,-0.004932741168886423,0,0,0,0,-0.019730964675545692,-0.004932741168886423,0,0.029596447944641113,0.39955204725265503,0,0,-0.0172645952552557,0,0.019730964675545692,0.0024663705844432116,0,0,-0.03206281736493111,0,0,0.004932741168886423,0,-0.019730964675545692,-0.009865482337772846,0,0,0.009865482337772846,0,-0.05919289588928223,-0.012331852689385414,0,0,0.03699555993080139,0,-0.009865482337772846,-0.04439467191696167,0,0.019730964675545692,0.009865482337772846,0,0,-0.029596447944641113,0,0,0.009865482337772846,0,0,-0.012331852689385414,0,0,0.0172645952552557,0,-0.009865482337772846,-0.014798223972320557,0,0.049327410757541656,0.03699555993080139,0,-0.039461929351091385,0,0,0.019730964675545692,0.009865482337772846,0,0,-0.019730964675545692,0,0.10852030664682388,0,0,-0.009865482337772846,-0.0024663705844432116,0,0.019730964675545692,0.004932741168886423,0,-0.009865482337772846,-0.004932741168886423,0,0,0.0172645952552557,0,-0.029596447944641113,-0.03699555993080139,0,0.019730964675545692,0.007399111986160278,0,-0.10852030664682388,-0.004932741168886423,0,0.009865482337772846,0.004932741168886423,0,-0.14798223972320557,-0.029596447944641113,0,0,0.004932741168886423,0,-0.019730964675545692,-0.012331852689385414,0,0,0.022197335958480835,0,0,-0.019730964675545692,0,0.019730964675545692,0.012331852689385414,0,-0.009865482337772846,-0.0024663705844432116,0,0.019730964675545692,0,0,-0.009865482337772846,-0.012331852689385414,0,0,0.19730964303016663,0,-0.009865482337772846,-0.029596447944641113,0,0.0690583810210228,0,0,-0.009865482337772846,-0.019730964675545692,0,0,0.012331852689385414,0,0,-0.004932741168886423,0,0.049327410757541656,0.004932741168886423,0,-0.009865482337772846,-0.004932741168886423,0,0,0.0172645952552557,0,0,-0.024663705378770828,0,0,0.024663705378770828,0,-0.039461929351091385,-0.0345291905105114,0,0.009865482337772846,0.012331852689385414,0,-0.009865482337772846,0,0,0.049327410757541656,0.056726522743701935,0,0,-0.012331852689385414,0,0.019730964675545692,0.02713007666170597,0,0,-0.004932741168886423,0,0,0.0024663705844432116,0,0,-0.024663705378770828,0,0.019730964675545692,0.009865482337772846,0,-0.0690583810210228,-0.05426015332341194,0,0.009865482337772846,0.004932741168886423,0,-0.009865482337772846,-0.07645749300718307,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#INTERRUPT-REGISTER -->\nINTERRUPT REGISTER\n\nThe interrupt register shows the status of the four sources of\n  interrupt. An interrupt latch in register 25 ($19) is set to \"1\" when an\n  interrupt source has generated an interrupt request. The four sources of\n  interrupt are:\n\nLATCH |ENABLE|\n    BIT  | BIT  |                       WHEN SET\n  -------+------+----------------------------------------------------------\n    IRST | ERST | Set when (raster count) = (stored raster count)\n    IMDC | EMDC | Set by MOB-DATA collision register (first collision only)\n    IMMC | EMMC | Set by MOB-MOB collision register (first collision only)\n    ILP  | ELP  | Set by negative transition of LP input (once per frame)\n    IRQ  |      | Set high by latch set and enabled (invert of /IRQ output)\n\nTo enable an interrupt request to set the /IRQ output to \"0\", the\n  corresponding interrupt enable bit in register 26 ($1A) must be set to\n  \"1\". Once an interrupt latch has been set, the latch may be cleared only\n  by writing a \"1\" to the desired latch in the interrupt register. This\n  feature allows selective handling of video interrupts without software\n  required to \"remember\" active interrupts.\n\nAPPENDIX N   447\n~","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#INTERRUPT-REGISTER"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0.004410548135638237,0.014334280975162983,0,-0.008821096271276474,-0.008821096271276474,0,0.004410548135638237,0.013231644406914711,0,-0.013231644406914711,-0.0033079111017286777,0,0.017642192542552948,0.0066158222034573555,0,-0.013231644406914711,-0.011026370339095592,0,0.008821096271276474,0.008821096271276474,0,-0.004410548135638237,-0.011026370339095592,0,0.013231644406914711,0.012129006907343864,0,-0.013231644406914711,-0.0066158222034573555,0,0.004410548135638237,0.009923732839524746,0,-0.013231644406914711,-0.007718459237366915,0,0.008821096271276474,0.009923732839524746,0,-0.017642192542552948,-0.0033079111017286777,0,0.013231644406914711,0.0033079111017286777,0,-0.008821096271276474,-0.009923732839524746,0,0,0.0066158222034573555,0,-0.017642192542552948,-0.005513185169547796,0,0.013231644406914711,0.0022052740678191185,0,0,-0.019847465679049492,0,0.022052740678191185,0.005513185169547796,0,-0.017642192542552948,-0.0066158222034573555,0,0,0.004410548135638237,0,-0.008821096271276474,-0.009923732839524746,0,0.013231644406914711,0.028668561950325966,0,-0.004410548135638237,-0.011026370339095592,0,0.004410548135638237,0.005513185169547796,0,-0.008821096271276474,-0.008821096271276474,0,0,0.0066158222034573555,0,-0.10585315525531769,-0.013231644406914711,0,0.013231644406914711,0.005513185169547796,0,-0.013231644406914711,-0.02756592631340027,0,0,0.004410548135638237,0,-0.008821096271276474,-0.012129006907343864,0,0.7586143016815186,0.005513185169547796,0,-0.004410548135638237,-0.008821096271276474,0,0,0.008821096271276474,0,-0.013231644406914711,-0.09041623771190643,0,0.017642192542552948,0.008821096271276474,0,-0.004410548135638237,-0.004410548135638237,0,0.004410548135638237,0.011026370339095592,0,-0.017642192542552948,-0.007718459237366915,0,0.008821096271276474,0.0033079111017286777,0,-0.12790589034557343,-0.009923732839524746,0,0.022052740678191185,0.007718459237366915,0,-0.004410548135638237,-0.012129006907343864,0,0.017642192542552948,0.008821096271276474,0,-0.017642192542552948,-0.005513185169547796,0,0.004410548135638237,0.004410548135638237,0,-0.013231644406914711,-0.012129006907343864,0,0.026463288813829422,0.011026370339095592,0,-0.013231644406914711,0,0,0.004410548135638237,0.012129006907343864,0,-0.017642192542552948,-0.013231644406914711,0,0,0.0022052740678191185,0,-0.013231644406914711,-0.005513185169547796,0,0.052926577627658844,0.007718459237366915,0,-0.004410548135638237,-0.005513185169547796,0,0.022052740678191185,0.0033079111017286777,0,-0.017642192542552948,-0.0066158222034573555,0,0.017642192542552948,0.0011026370339095592,0,-0.004410548135638237,-0.05733712390065193,0,0.017642192542552948,0.009923732839524746,0,-0.017642192542552948,-0.009923732839524746,0,0.008821096271276474,0.0022052740678191185,0,-0.017642192542552948,-0.008821096271276474,0,0.03087383694946766,0.3815124034881592,0,-0.017642192542552948,-0.004410548135638237,0,0.004410548135638237,0.0022052740678191185,0,-0.004410548135638237,-0.011026370339095592,0,0.004410548135638237,0.009923732839524746,0,-0.013231644406914711,-0.004410548135638237,0,0.004410548135638237,0.0033079111017286777,0,-0.004410548135638237,-0.012129006907343864,0,0.008821096271276474,0.008821096271276474,0,-0.013231644406914711,-0.06726086139678955,0,0,0.013231644406914711,0,-0.052926577627658844,-0.0033079111017286777,0,0.013231644406914711,0.012129006907343864,0,-0.008821096271276474,-0.012129006907343864,0,0.008821096271276474,0.0033079111017286777,0,-0.004410548135638237,-0.009923732839524746,0,0.08821096271276474,0.01543691847473383,0,-0.017642192542552948,-0.011026370339095592,0,0.004410548135638237,0.005513185169547796,0,0,-0.011026370339095592,0,0.008821096271276474,0,0,-0.035284385085105896,-0.011026370339095592,0,0.004410548135638237,0.029771199449896812,0,-0.07497932016849518,-0.0022052740678191185,0,0.008821096271276474,0.0165395550429821,0,-0.03087383694946766,-0.013231644406914711,0,0.013231644406914711,0.008821096271276474,0,-0.008821096271276474,-0.004410548135638237,0,0,0.012129006907343864,0,-0.3352016508579254,-0.009923732839524746,0,0.017642192542552948,0.005513185169547796,0,-0.008821096271276474,-0.011026370339095592,0,0.017642192542552948,0.01543691847473383,0,-0.004410548135638237,-0.035284385085105896,0,0.004410548135638237,0.005513185169547796,0,-0.013231644406914711,-0.005513185169547796,0,0.013231644406914711,0.0022052740678191185,0,-0.013231644406914711,-0.008821096271276474,0,0.008821096271276474,0.19185884296894073,0,-0.004410548135638237,-0.0033079111017286777,0,0.017642192542552948,0.004410548135638237,0,-0.013231644406914711,-0.009923732839524746,0,0.017642192542552948,0.004410548135638237,0,0,-0.02756592631340027,0,0.004410548135638237,0.007718459237366915,0,-0.017642192542552948,-0.008821096271276474,0,0.008821096271276474,0.0066158222034573555,0,-0.004410548135638237,-0.03418174758553505,0,0.004410548135638237,0.049618665128946304,0,-0.013231644406914711,-0.009923732839524746,0,0.004410548135638237,0.0066158222034573555,0,-0.008821096271276474,-0.004410548135638237,0,0.004410548135638237,0.005513185169547796,0,-0.017642192542552948,-0.02095010317862034,0,0.013231644406914711,0.008821096271276474,0,-0.013231644406914711,-0.04079756885766983,0,0.008821096271276474,0.005513185169547796,0,-0.017642192542552948,-0.019847465679049492,0,0.008821096271276474,0.0066158222034573555,0,-0.008821096271276474,-0.007718459237366915,0,0.008821096271276474,0.013231644406914711,0,-0.017642192542552948,-0.16870346665382385,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#PIN-CONFIGURATION-3 -->\nREGISTER MAP\n  +----------+------------------------------------------------------------+\n  | ADDRESS  | DB7  DB6  DB5  DB4  DB3  DB2  DB1  DB0     DESCRIPTION     |\n  +----------+------------------------------------------------------------+\n  | 00 ($00) | M0X7 M0X6 M0X5 M0X4 M0X3 M0X2 M0X1 M0X0  MOB 0 X-position  |\n  | 01 ($01) | M0Y7 M0Y6 M0Y5 M0Y4 M0Y3 M0Y2 M0Y1 M0Y0  MOB 0 Y-position  |\n  | 02 ($02) | M1X7 M1X6 M1X5 M1X4 M1X3 M1X2 M1Xl M1X0  MOB 1 X-position  |\n  | 03 ($03) | M1Y7 M1Y6 M1Y5 M1Y4 M1Y3 M1Y2 M1Y1 M1Y0  MOB 1 Y-position  |\n  | 04 ($04) | M2X7 M2X6 M2X5 M2X4 M2X3 M2X2 M2X1 M2X0  MOB 2 X-position  |\n  | 05 ($05) | M2Y7 M2Y6 M2Y5 M2Y4 M2Y3 M2Y2 M2Y1 M2Y0  MOB 2 Y-position  |\n  | 06 ($06) | M3X7 M3X6 M3X5 M3X4 M3X3 M3X2 M3X1 M3X0  MOB 3 X-position  |\n  | 07 ($07) | M3Y7 M3Y6 M3Y5 M3Y4 M3Y3 M3Y2 M3Y1 M3Y0  MOB 3 Y-position  |\n  | 08 ($08) | M4X7 M4X6 M4X5 M4X4 M4X3 M4X2 M4X1 M4X0  MOB 4 X-position  |\n  | 09 ($09) | M4Y7 M4Y6 M4Y5 M4Y4 M4Y3 M4Y2 M4Y1 M4Y0  MOB 4 Y-position  |\n  | 10 ($0A) | M5X7 M5X6 M5X5 M5X4 M5X3 M5X2 M5X1 M5X0  MOB 5 X-position  |\n  | 11 ($0B) | M5Y7 M5Y6 M5Y5 M5Y4 M5Y3 M5Y2 M5Y1 M5Y0  MOB 5 Y-position  |\n  | 12 ($0C) | M6X7 M6X6 M6X5 M6X4 M6X3 M6X2 M6X1 M6X0  MOB 6 X-position  |\n  | 13 ($0D) | M6Y7 M6Y6 M6Y5 M6Y4 M6Y3 M6Y2 M6Y1 M6Y0  MOB 6 Y-position  |\n  | 14 ($0E) | M7X7 M7X6 M7X5 M7X4 M7X3 M7X2 M7Xl M7X0  MOB 7 X-position  |\n  | 15 ($0F) | M7Y7 M7Y6 M7Y5 M7Y4 M7Y3 M7Y2 M7Y1 M6Y0  MOB 7 Y-position  |\n  | 16 ($10) | M7X8 M6X8 M5X8 M4X8 M3X8 M2X8 M1X8 M0X8  MSB of X-position |\n  | 17 ($11) | RC8  ECM  BMM  DEN  RSEL Y2   Y1   Y0      See text        |\n  | 18 ($12) | RC7  RC6  RC5  RC4  RC3  RC2  RC1  RC0   Raster register   |\n  | 19 ($13) | LPX8 LPX7 LPX6 LPX5 LPX4 LPX3 LPX2 LPX1  Light Pen X       |\n  | 20 ($14) | LPY7 LPY6 LPY5 LPY4 LPY3 LPY2 LPY1 LPY0  Light Pen Y       |\n  | 21 ($15) | M7E  M6E  M5E  M4E  M3E  M2E  M1E  M0E   MOB Enable        |\n  | 22 ($16) |  -    -   RES  MCM  CSEL X2   X1   X0      See text        |\n  | 23 ($17) | M7YE M6YE M5YE M4YE M3YE M2YE M1YE M0YE  MOB Y-expand      |","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#PIN-CONFIGURATION-3"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0.0049994103610515594,0.009998820722103119,0,0,-0.0049994103610515594,0,0.009998820722103119,0.012498525902628899,0,-0.009998820722103119,-0.0012498525902628899,0,0.009998820722103119,0.0037495577707886696,0,-0.0049994103610515594,-0.0049994103610515594,0,0.014998231083154678,0.0037495577707886696,0,-0.009998820722103119,-0.0024997051805257797,0,0,0.007499115541577339,0,-0.0049994103610515594,-0.008748968131840229,0,0,0.009998820722103119,0,-0.014998231083154678,-0.007499115541577339,0,0.009998820722103119,0.007499115541577339,0,-0.0049994103610515594,-0.007499115541577339,0,0.014998231083154678,0,0,-0.0049994103610515594,-0.0049994103610515594,0,0.009998820722103119,0.006249262951314449,0,-0.014998231083154678,-0.006249262951314449,0,0,0.006249262951314449,0,-0.0049994103610515594,-0.007499115541577339,0,0.009998820722103119,0.0049994103610515594,0,0,-0.0049994103610515594,0,0.009998820722103119,0,0,-0.0049994103610515594,-0.008748968131840229,0,0.009998820722103119,0.039995282888412476,0,0,-0.006249262951314449,0,0.07999056577682495,0.006249262951314449,0,-0.0049994103610515594,0,0,0.014998231083154678,0.0037495577707886696,0,-0.11998584866523743,-0.012498525902628899,0,0,0.008748968131840229,0,-0.009998820722103119,-0.011248673312366009,0,0.0049994103610515594,0.0037495577707886696,0,-0.0049994103610515594,0,0,0.7599103450775146,0.007499115541577339,0,-0.009998820722103119,-0.007499115541577339,0,0.0049994103610515594,0.0049994103610515594,0,-0.014998231083154678,-0.08998938649892807,0,0.0049994103610515594,0.009998820722103119,0,-0.009998820722103119,-0.006249262951314449,0,0.014998231083154678,0.0049994103610515594,0,-0.014998231083154678,-0.0024997051805257797,0,0.014998231083154678,0.0012498525902628899,0,-0.11498643457889557,-0.009998820722103119,0,0.0049994103610515594,0.006249262951314449,0,-0.024997051805257797,-0.0024997051805257797,0,0,0.008748968131840229,0,-0.0049994103610515594,-0.006249262951314449,0,0.014998231083154678,0.008748968131840229,0,-0.0049994103610515594,-0.007499115541577339,0,0.039995282888412476,0.0037495577707886696,0,-0.009998820722103119,-0.0049994103610515594,0,0.0049994103610515594,0.0049994103610515594,0,-0.024997051805257797,-0.0012498525902628899,0,0.009998820722103119,0.007499115541577339,0,-0.014998231083154678,-0.0037495577707886696,0,0.014998231083154678,0.007499115541577339,0,0,-0.0024997051805257797,0,0.019997641444206238,0.042494986206293106,0,-0.009998820722103119,-0.0037495577707886696,0,0.009998820722103119,0.007499115541577339,0,-0.0049994103610515594,-0.06374248117208481,0,0.0049994103610515594,0.008748968131840229,0,0,-0.007499115541577339,0,0.0049994103610515594,0.0049994103610515594,0,-0.009998820722103119,-0.0024997051805257797,0,0.019997641444206238,0.3812050223350525,0,-0.0049994103610515594,-0.008748968131840229,0,0.009998820722103119,0.0049994103610515594,0,-0.029996462166309357,-0.012498525902628899,0,0,0.0037495577707886696,0,-0.009998820722103119,-0.0049994103610515594,0,0,0.009998820722103119,0,-0.009998820722103119,-0.009998820722103119,0,0.0049994103610515594,0.009998820722103119,0,-0.014998231083154678,-0.05874307081103325,0,0.0049994103610515594,0.006249262951314449,0,-0.009998820722103119,-0.014998231083154678,0,0,0,0,-0.009998820722103119,-0.0037495577707886696,0,0,0.007499115541577339,0,-0.0049994103610515594,-0.006249262951314449,0,0.08998938649892807,0.022497346624732018,0,-0.0049994103610515594,-0.006249262951314449,0,0.0049994103610515594,0.006249262951314449,0,0,-0.013748378492891788,0,0.0049994103610515594,0.007499115541577339,0,-0.019997641444206238,-0.011248673312366009,0,0.014998231083154678,0.007499115541577339,0,-0.0049994103610515594,-0.0012498525902628899,0,0.0049994103610515594,0.012498525902628899,0,0,-0.0049994103610515594,0,0.009998820722103119,0.007499115541577339,0,-0.009998820722103119,-0.0037495577707886696,0,0,0.0049994103610515594,0,-0.34995871782302856,0,0,0.009998820722103119,0.022497346624732018,0,-0.0049994103610515594,-0.006249262951314449,0,0.019997641444206238,0.013748378492891788,0,0,-0.03249616548418999,0,0.0049994103610515594,0.0049994103610515594,0,-0.009998820722103119,-0.017497936263680458,0,0.0049994103610515594,0.0012498525902628899,0,0,-0.006249262951314449,0,0.0049994103610515594,0.18997758626937866,0,-0.014998231083154678,-0.007499115541577339,0,0.014998231083154678,0.0037495577707886696,0,0,-0.011248673312366009,0,0.014998231083154678,0.0037495577707886696,0,-0.009998820722103119,-0.007499115541577339,0,0,0.0037495577707886696,0,-0.0049994103610515594,-0.008748968131840229,0,0.009998820722103119,0.0037495577707886696,0,-0.0049994103610515594,-0.031246313825249672,0,0.009998820722103119,0.0462445467710495,0,-0.009998820722103119,-0.008748968131840229,0,0.009998820722103119,0.0024997051805257797,0,-0.0049994103610515594,-0.0012498525902628899,0,0,0.006249262951314449,0,-0.014998231083154678,-0.011248673312366009,0,0.034995872527360916,0.017497936263680458,0,-0.009998820722103119,-0.0049994103610515594,0,0.009998820722103119,0.0037495577707886696,0,0,-0.006249262951314449,0,0.0049994103610515594,0.007499115541577339,0,-0.014998231083154678,-0.008748968131840229,0,0.009998820722103119,0.0037495577707886696,0,-0.019997641444206238,-0.17497935891151428,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#PIN-CONFIGURATION-5 -->\n| 24 ($18) | VM13 VM12 VM11 VM10 CB13 CB12 CB11  -    Memory Pointers   |\n  | 25 ($19) | IRQ   -    -    -   ILP  IMMC IMBC IRST  Interrupt Register|\n  | 26 ($1A) |  -    -    -    -   ELP  EMMC EMBC ERST  Enable Interrupt  |\n  | 27 ($1B) | M7DP M6DP M5DP M4DP M3DP M2DP M1DP M0DP  MOB-DATA Priority |\n  | 28 ($1C) | M7MC M6MC M5MC M4MC M3MC M2MC M1MC M0MC  MOB Multicolor Sel|\n  | 29 ($1D) | M7XE M6XE M5XE M4XE M3XE M2XE M1XE M0XE  MOB X-expand      |\n  | 30 ($1E) | M7M  M6M  M5M  M4M  M3M  M2M  M1M  M0M   MOB-MOB Collision |\n  | 31 ($1F) | M7D  M6D  M5D  M4D  M3D  M2D  M1D  M0D   MOB-DATA Collision|\n  | 32 ($20) |  -    -    -    -   EC3  EC2  EC1  EC0   Exterior Color    |\n  | 33 ($21) |  -    -    -    -   B0C3 B0C2 B0C1 B0C0  Bkgd #0 Color     |\n  | 34 ($22) |  -    -    -    -   B1C3 B1C2 B1C1 B1C0  Bkgd #1 Color     |\n  | 35 ($23) |  -    -    -    -   B2C3 B2C2 B2C1 B2C0  Bkgd #2 Color     |\n  | 36 ($24) |  -    -    -    -   B3C3 B3C2 B3C1 B3C0  Bkgd #3 Color     |\n  | 37 ($25) |  -    -    -    -   MM03 MM02 MM01 MM00  MOB Multicolor #0 |\n  | 38 ($26) |  -    -    -    -   MM13 MM12 MM11 MM10  MOB Multicolor #1 |\n  | 39 ($27) |  -    -    -    -   M0C3 M0C2 M0C1 M0C0  MOB 0 Color       |\n  | 40 ($28) |  -    -    -    -   M1C3 M1C2 M1C1 M1C0  MOB 1 Color       |\n  | 41 ($29) |  -    -    -    -   M2C3 M2C2 M2C1 M2C0  MOB 2 Color       |\n  | 42 ($2A) |  -    -    -    -   M3C3 M3C2 M3C1 M3C0  MOB 3 Color       |\n  | 43 ($2B) |  -    -    -    -   M4C3 M4C2 M4C1 M4C0  MOB 4 Color       |\n  | 44 ($2C) |  -    -    -    -   M5C3 M5C2 M5C1 M5C0  MOB 5 Color       |\n  | 45 ($2D) |  -    -    -    -   M6C3 M6C2 M6C1 M6C0  MOB 6 Color       |\n  | 46 ($2E) |  -    -    -    -   M7C3 M7C2 M7C1 M7C0  MOB 7 Color       |\n  +----------+------------------------------------------------------------+","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#PIN-CONFIGURATION-5"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.01045816857367754,0,0,-0.02091633714735508,0,0.04183267429471016,0.01045816857367754,0,-0.04183267429471016,-0.04183267429471016,0,0.04183267429471016,0.01045816857367754,0,-0.08366534858942032,0,0,0.04183267429471016,0,0,-0.04183267429471016,0,0,0,0,0,0,-0.02091633714735508,0,0.08366534858942032,0.08366534858942032,0,-0.04183267429471016,0,0,0.04183267429471016,0.04183267429471016,0,0,-0.02091633714735508,0,0.08366534858942032,0.01045816857367754,0,0,-0.031374506652355194,0,0,0,0,0,-0.01045816857367754,0,0.08366534858942032,0,0,-0.04183267429471016,0,0,0,0,0,-0.04183267429471016,-0.04183267429471016,0,0.04183267429471016,0,0,0,0,0,0.04183267429471016,0,0,0,-0.031374506652355194,0,0,0.02091633714735508,0,-0.12549802660942078,-0.031374506652355194,0,0,0,0,-0.2928287088871002,-0.04183267429471016,0,0,0.031374506652355194,0,-0.04183267429471016,-0.031374506652355194,0,0,0,0,0,-0.01045816857367754,0,0.46015942096710205,0.02091633714735508,0,0,-0.02091633714735508,0,0,0.02091633714735508,0,0,-0.04183267429471016,0,0.04183267429471016,0.02091633714735508,0,-0.12549802660942078,-0.02091633714735508,0,0.04183267429471016,0,0,0,-0.02091633714735508,0,0.25099605321884155,0.04183267429471016,0,-0.16733069717884064,-0.02091633714735508,0,0,0.02091633714735508,0,-0.04183267429471016,0,0,0,0.04183267429471016,0,-0.04183267429471016,-0.01045816857367754,0,0.04183267429471016,0.01045816857367754,0,-0.08366534858942032,0,0,0.2928287088871002,0.052290841937065125,0,-0.04183267429471016,-0.031374506652355194,0,0.08366534858942032,0,0,0,-0.031374506652355194,0,0,0.02091633714735508,0,0,0,0,0,0.02091633714735508,0,0,0,0,0.04183267429471016,0,0,-0.08366534858942032,-0.08366534858942032,0,0.04183267429471016,0,0,0,-0.1464143544435501,0,0.04183267429471016,0,0,0,-0.02091633714735508,0,0,0,0,0,-0.01045816857367754,0,0,0.23007971048355103,0,0,-0.01045816857367754,0,0.25099605321884155,0.01045816857367754,0,0,-0.01045816857367754,0,0.08366534858942032,0.02091633714735508,0,0,-0.06274901330471039,0,0.04183267429471016,0.031374506652355194,0,-0.04183267429471016,-0.01045816857367754,0,0,0.13595619797706604,0,-0.04183267429471016,-0.10458168387413025,0,0,0.01045816857367754,0,0,-0.031374506652355194,0,0,0,0,0,-0.02091633714735508,0,0,0.04183267429471016,0,0,-0.052290841937065125,0,0,0.15687252581119537,0,-0.12549802660942078,-0.02091633714735508,0,0.08366534858942032,0.06274901330471039,0,-0.04183267429471016,0,0,0,0,0,-0.08366534858942032,0,0,0.04183267429471016,0.02091633714735508,0,-0.04183267429471016,-0.01045816857367754,0,0,0.02091633714735508,0,-0.04183267429471016,-0.052290841937065125,0,0,0.031374506652355194,0,0,0,0,0,0.031374506652355194,0,0,0,0,0,0,0,0,-0.031374506652355194,0,0,0,0,-0.08366534858942032,-0.07320717722177505,0,0,0.12549802660942078,0,0,-0.01045816857367754,0,0,0.04183267429471016,0,0,0,0,0,0.13595619797706604,0,-0.04183267429471016,-0.02091633714735508,0,0.04183267429471016,0,0,0,-0.02091633714735508,0,0.04183267429471016,0.01045816857367754,0,-0.04183267429471016,-0.031374506652355194,0,0,0.01045816857367754,0,-0.04183267429471016,0,0,0,0.06274901330471039,0,0,-0.04183267429471016,0,0,0,0,0,-0.07320717722177505,0,0,0.04183267429471016,0,-0.08366534858942032,-0.031374506652355194,0,0,0.01045816857367754,0,0,-0.06274901330471039,0,0,0.09412351995706558,0,0,-0.031374506652355194,0,0,0.02091633714735508,0,-0.04183267429471016,-0.02091633714735508,0,0,0,0,-0.04183267429471016,0,0,0.04183267429471016,0,0,-0.04183267429471016,0,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#CONCEPT -->\nCONCEPT\n\nThe 6581 Sound Interface Device (SID) is a single-chip, 3-voice elec-\n  tronic music synthesizer/sound effects generator compatible with the 65XX\n  and similar microprocessor families. SID provides wide-range, high-\n  resolution control of pitch (frequency), tone color (harmonic content),\n  and dynamics (volume). Specialized control circuitry minimizes software\n  overhead, facilitating use in arcade/home video games and low-cost\n  musical instruments.","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#CONCEPT"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0,0,-0.1285722553730011,-0.010714353993535042,0,0,0.032143063843250275,0,0,-0.021428707987070084,0,0.04285741597414017,0,0,-0.08571483194828033,-0.04285741597414017,0,0.04285741597414017,0.05357177183032036,0,-0.04285741597414017,-0.04285741597414017,0,0,0,0,-0.1285722553730011,-0.04285741597414017,0,0,0.04285741597414017,0,0,-0.021428707987070084,0,0,0.07500047981739044,0,-0.08571483194828033,-0.010714353993535042,0,0.04285741597414017,0,0,0,-0.04285741597414017,0,0,0,0,0,-0.032143063843250275,0,0,0,0,0,-0.010714353993535042,0,0,0.04285741597414017,0,0,-0.08571483194828033,0,0,0,0,-0.04285741597414017,-0.010714353993535042,0,0,0,0,-0.1285722553730011,-0.021428707987070084,0,0.08571483194828033,0.021428707987070084,0,-0.17142966389656067,0,0,0,0,0,-0.2571445107460022,-0.11785789579153061,0,0,0.021428707987070084,0,-0.08571483194828033,-0.07500047981739044,0,0.08571483194828033,0.010714353993535042,0,0,-0.06428612768650055,0,0.21428708732128143,0,0,-0.04285741597414017,-0.010714353993535042,0,0.04285741597414017,0.032143063843250275,0,-0.04285741597414017,-0.04285741597414017,0,0.04285741597414017,0.021428707987070084,0,-0.08571483194828033,-0.021428707987070084,0,0,0,0,-0.04285741597414017,-0.07500047981739044,0,0.2571445107460022,0,0,-0.30000191926956177,0,0,0.04285741597414017,0.021428707987070084,0,0,-0.06428612768650055,0,0,0.021428707987070084,0,0,-0.021428707987070084,0,0,0.010714353993535042,0,0,0,0,0.2571445107460022,0.032143063843250275,0,0,0,0,0,0,0,0,-0.010714353993535042,0,0,0,0,0,-0.032143063843250275,0,0,0,0,0,-0.06428612768650055,0,0,0.06428612768650055,0,-0.04285741597414017,-0.11785789579153061,0,0.1285722553730011,0,0,0,-0.1285722553730011,0,0,0,0,-0.17142966389656067,-0.05357177183032036,0,0.04285741597414017,0.05357177183032036,0,0,0,0,0,0.10714354366064072,0,0,-0.07500047981739044,0,0.08571483194828033,0.032143063843250275,0,-0.08571483194828033,-0.04285741597414017,0,0.04285741597414017,0.021428707987070084,0,-0.04285741597414017,-0.07500047981739044,0,0,0,0,-0.08571483194828033,-0.021428707987070084,0,0,0.139286607503891,0,-0.04285741597414017,-0.17142966389656067,0,0,0.032143063843250275,0,-0.04285741597414017,-0.010714353993535042,0,0,0,0,-0.08571483194828033,-0.032143063843250275,0,0,0,0,-0.04285741597414017,0,0,0,0.1285722553730011,0,0,-0.021428707987070084,0,0,0.010714353993535042,0,0,0,0,0,0,0,-0.04285741597414017,0,0,0,0,0,-0.1285722553730011,0,0,0.04285741597414017,0,0,0,-0.021428707987070084,0,0,0.06428612768650055,0,-0.04285741597414017,-0.010714353993535042,0,0.04285741597414017,0,0,0,-0.11785789579153061,0,0,0.04285741597414017,0,0,-0.04285741597414017,0,0,0,0,-0.04285741597414017,-0.06428612768650055,0,0,0.04285741597414017,0,0,-0.06428612768650055,0,0.08571483194828033,0.04285741597414017,0,-0.08571483194828033,-0.021428707987070084,0,0,0.05357177183032036,0,-0.08571483194828033,-0.05357177183032036,0,0.04285741597414017,0.010714353993535042,0,0,-0.032143063843250275,0,0.1285722553730011,0.010714353993535042,0,0,-0.04285741597414017,0,0,0,0,-0.04285741597414017,-0.05357177183032036,0,0,0.06428612768650055,0,-0.04285741597414017,-0.09642918407917023,0,0,0.010714353993535042,0,0,0,0,0.08571483194828033,0,0,-0.1285722553730011,0,0,0,0,0,0,-0.021428707987070084,0,0,0.06428612768650055,0,-0.04285741597414017,-0.06428612768650055,0,0.04285741597414017,0.021428707987070084,0,0,0,0,0,0,0,-0.21428708732128143,-0.021428707987070084,0,0.04285741597414017,0.021428707987070084,0,-0.08571483194828033,0,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#MISCELLANEOUS -->\nMISCELLANEOUS\n\nPOTX (Register $19)\n\nThis register allows the microprocessor to read the position of the\n  potentiometer tied to POTX (pin 24), with values ranging from 0 at\n  minimum resistance, to 255 ($FF) at maximum resistance. The value is\n  always valid and is updated every 512 (02 clock cycles. See the Pin\n  Description section for information on pot and capacitor values.\n\nPOTY (Register $1A)\n\nSame as POTX for the pot tied to POTY (pin 23).\n\nOSC 3/RANDOM (Register $1B)","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#MISCELLANEOUS"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.010031680576503277,0,-0.02292955480515957,-0.002866194350644946,0,0.005732388701289892,0.001433097175322473,0,-0.06305627524852753,-0.010031680576503277,0,0.011464777402579784,0.002866194350644946,0,-0.01719716750085354,-0.00859858375042677,0,0.005732388701289892,0.002866194350644946,0,-0.01719716750085354,-0.007165485993027687,0,0,0.041559819132089615,0,-0.011464777402579784,-0.005732388701289892,0,0.005732388701289892,0.2120983898639679,0,0,-0.001433097175322473,0,0.005732388701289892,0.020063361153006554,0,-0.005732388701289892,-0.002866194350644946,0,0,0.001433097175322473,0,-0.01719716750085354,-0.020063361153006554,0,0,0.00859858375042677,0,0,-0.001433097175322473,0,0,0.012897875159978867,0,-0.005732388701289892,-0.002866194350644946,0,0.011464777402579784,0.001433097175322473,0,-0.01719716750085354,-0.002866194350644946,0,0.01719716750085354,0.00859858375042677,0,-0.011464777402579784,-0.007165485993027687,0,0,0.005732388701289892,0,0,0,0,0.005732388701289892,0,0,-0.01719716750085354,-0.002866194350644946,0,0.051591500639915466,0.012897875159978867,0,-0.005732388701289892,-0.001433097175322473,0,0,0.005732388701289892,0,-0.011464777402579784,-0.004299291875213385,0,0.01719716750085354,0.00859858375042677,0,0,-0.014330971986055374,0,0.30381661653518677,0.00859858375042677,0,-0.01719716750085354,-0.04299291595816612,0,0.005732388701289892,0.007165485993027687,0,-0.02292955480515957,-0.010031680576503277,0,0.02292955480515957,0.005732388701289892,0,-0.01719716750085354,-0.00859858375042677,0,0.011464777402579784,0,0,-0.01719716750085354,-0.010031680576503277,0,0.02866194397211075,0.004299291875213385,0,-0.01719716750085354,-0.002866194350644946,0,0.005732388701289892,0.004299291875213385,0,-0.01719716750085354,-0.005732388701289892,0,0.011464777402579784,0.020063361153006554,0,-0.02866194397211075,-0.00859858375042677,0,0.011464777402579784,0.00859858375042677,0,-0.01719716750085354,0,0,0.0974506139755249,0.001433097175322473,0,-0.005732388701289892,-0.004299291875213385,0,0.011464777402579784,0.005732388701289892,0,-0.0573238879442215,-0.014330971986055374,0,0,0.010031680576503277,0,-0.01719716750085354,-0.005732388701289892,0,0.005732388701289892,0.004299291875213385,0,0,-0.001433097175322473,0,0.01719716750085354,0.002866194350644946,0,-0.011464777402579784,-0.010031680576503277,0,0.005732388701289892,0.02722884714603424,0,-0.005732388701289892,-0.004299291875213385,0,0,0.002866194350644946,0,-0.011464777402579784,-0.005732388701289892,0,0,0.00859858375042677,0,-0.005732388701289892,-0.001433097175322473,0,0.005732388701289892,0.1562075912952423,0,-0.02292955480515957,-0.00859858375042677,0,0.7796049118041992,0.005732388701289892,0,-0.005732388701289892,-0.012897875159978867,0,0.06878867000341415,0.011464777402579784,0,0,-0.014330971986055374,0,0.005732388701289892,0.007165485993027687,0,-0.03439433500170708,-0.024362653493881226,0,0.02292955480515957,0.01719716750085354,0,-0.005732388701289892,-0.012897875159978867,0,0.01719716750085354,0.004299291875213385,0,0,-0.012897875159978867,0,0.005732388701289892,0.005732388701289892,0,0,-0.01719716750085354,0,0.02292955480515957,0.007165485993027687,0,-0.01719716750085354,-0.00859858375042677,0,0,0.05015840381383896,0,0,-0.004299291875213385,0,0,0.005732388701289892,0,0,-0.03296123445034027,0,0.01719716750085354,0,0,-0.005732388701289892,-0.00859858375042677,0,0,0.002866194350644946,0,-0.005732388701289892,-0.001433097175322473,0,0.03439433500170708,0.011464777402579784,0,-0.011464777402579784,-0.010031680576503277,0,0.02292955480515957,0.007165485993027687,0,-0.04585910961031914,-0.005732388701289892,0,0.005732388701289892,0,0,-0.005732388701289892,-0.005732388701289892,0,0.011464777402579784,0.001433097175322473,0,0,-0.007165485993027687,0,0,0.01576406881213188,0,-0.01719716750085354,-0.012897875159978867,0,0.005732388701289892,0.3898024559020996,0,-0.011464777402579784,-0.005732388701289892,0,0.005732388701289892,0.0386936254799366,0,-0.011464777402579784,0,0,0.08025344461202621,0.07882034778594971,0,0,-0.02149645797908306,0,0.03439433500170708,0.012897875159978867,0,0,-0.00859858375042677,0,0.005732388701289892,0.014330971986055374,0,-0.005732388701289892,-0.004299291875213385,0,0,0.005732388701289892,0,-0.02292955480515957,-0.004299291875213385,0,0.005732388701289892,0.018630264326930046,0,0,-0.012897875159978867,0,0.01719716750085354,0.001433097175322473,0,-0.005732388701289892,-0.004299291875213385,0,0,0.002866194350644946,0,-0.005732388701289892,-0.007165485993027687,0,0.005732388701289892,0.011464777402579784,0,-0.005732388701289892,-0.007165485993027687,0,0.011464777402579784,0.024362653493881226,0,0,-0.004299291875213385,0,0,0.020063361153006554,0,-0.005732388701289892,-0.020063361153006554,0,0.01719716750085354,0.011464777402579784,0,0,-0.02722884714603424,0,0.011464777402579784,0.004299291875213385,0,-0.005732388701289892,-0.002866194350644946,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#INDEX -->\nINDEX\n\nAbbreviations, BASIC Commands, Statements, and Functions, x, 29, 31-34,\n    374-375\n  ABS function, 31, 35, 374\n  Accessories, 335-371\n  Accumulator, 213\n  ACPTR, 272-274\n  ADC, 232, 235, 254\n  Addition, 3, 9-11, 16\n  Addressing, 211, 215-217, 411-413\n  A/D/S/R, 183-185, 189, 196-199\n  AND, 232, 235, 254\n  AND operator, 13-16, 31, 35-36, 374\n  Animation, xiii, 153, 166\n  Applications, xiii-xvi\n  Arithmetic expressions, 10-12\n  Arithmetic operators, 10-12, 16\n  Arrays, 10-12, 44-45\n  ASC function, 31, 37, 374\n  ASCII character codes, 31, 38, 340, 374\n  ASL, 232, 236, 254\n  Assembler, 215, 218, 227, 310\n  ArcTaNgent function, 31, 38, 374\n  Attack, (see A/D/S/R)\n\nBank selection, 101-102, 133\n  BASIC abbreviations, 29, 31-34, 374-375\n  BASIC commands, 31-34, 41, 58-60, 62, 81-82, 91\n  BASIC miscellaneous functions, 31-34, 43-44, 49, 56-57, 61, 69, 70, 80,\n    83-85, 89\n  BASIC numeric functions, 31-35, 37-38, 42, 46-47, 49, 83-84, 88-89\n  BASIC operators, 3, 9-15, 31-36, 63-64, 68, 92\n  BASIC statements, 18-26, 31-34, 39-55, 57, 62-67, 69-79, 86-87, 92\n  BASIC string functions, 31-34, 38, 56, 61, 79, 87, 89\n  BASIC variables, 7-26\n  BCC, 232, 236, 254\n  BCS, 232, 236, 254\n  BEQ, 226-227, 232, 237, 254\n  Bibliography, 388-390\n  Binary, 69, 92, 108, 112, 216-217\n  Bit, 99-149, 290, 298, 300-301, 305, 343-357, 359\n\nINDEX   483\n~","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#INDEX"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0.006110146641731262,0,0,-0.012220293283462524,-0.019857976585626602,0,0.018330439925193787,0.015275366604328156,0,-0.06721161305904388,0,0,0.006110146641731262,0.007637683302164078,0,-0.03666087985038757,-0.0015275366604328156,0,0.018330439925193787,0.004582609981298447,0,-0.05499131977558136,-0.003055073320865631,0,0.006110146641731262,0.029023196548223495,0,-0.018330439925193787,-0.006110146641731262,0,0,0.20163483917713165,0,0,0,0,0.012220293283462524,0.01680290326476097,0,-0.012220293283462524,-0.01374782994389534,0,0,0.006110146641731262,0,-0.018330439925193787,-0.007637683302164078,0,0.006110146641731262,0.01680290326476097,0,-0.03666087985038757,-0.007637683302164078,0,0.006110146641731262,0.004582609981298447,0,-0.012220293283462524,-0.007637683302164078,0,0,0.003055073320865631,0,-0.018330439925193787,-0.003055073320865631,0,0.02444058656692505,0.009165219962596893,0,-0.03055073320865631,-0.01680290326476097,0,0.012220293283462524,0.010692756623029709,0,-0.012220293283462524,-0.003055073320865631,0,0.03666087985038757,0.0015275366604328156,0,-0.006110146641731262,-0.006110146641731262,0,0.018330439925193787,0.010692756623029709,0,-0.03666087985038757,-0.012220293283462524,0,0.012220293283462524,0.0015275366604328156,0,-0.006110146641731262,-0.004582609981298447,0,0.012220293283462524,0.006110146641731262,0,-0.006110146641731262,-0.010692756623029709,0,0.256626158952713,0.01374782994389534,0,-0.03666087985038757,-0.04582609981298447,0,0.012220293283462524,0.007637683302164078,0,-0.012220293283462524,-0.018330439925193787,0,0.012220293283462524,0.009165219962596893,0,-0.018330439925193787,-0.03666087985038757,0,0,0.009165219962596893,0,-0.018330439925193787,-0.009165219962596893,0,0.018330439925193787,0.0015275366604328156,0,-0.07943190634250641,0,0,0.02444058656692505,0.007637683302164078,0,-0.012220293283462524,-0.006110146641731262,0,0.012220293283462524,0.01374782994389534,0,0,-0.010692756623029709,0,0.018330439925193787,0.004582609981298447,0,-0.018330439925193787,-0.018330439925193787,0,0.07332175970077515,0.004582609981298447,0,0,-0.007637683302164078,0,0.02444058656692505,0.0015275366604328156,0,-0.02444058656692505,-0.010692756623029709,0,0,0.018330439925193787,0,-0.006110146641731262,-0.01680290326476097,0,0,0.007637683302164078,0,-0.006110146641731262,-0.007637683302164078,0,0,0.018330439925193787,0,-0.006110146641731262,-0.004582609981298447,0,0.012220293283462524,0.010692756623029709,0,0,-0.02444058656692505,0,0.018330439925193787,0.010692756623029709,0,-0.006110146641731262,-0.004582609981298447,0,0.006110146641731262,0.006110146641731262,0,-0.012220293283462524,-0.004582609981298447,0,0.006110146641731262,0.13136816024780273,0,-0.012220293283462524,-0.022913049906492233,0,0.7943190932273865,0.006110146641731262,0,0,-0.007637683302164078,0,0.05499131977558136,0.007637683302164078,0,-0.042771026492118835,-0.012220293283462524,0,0.012220293283462524,0.004582609981298447,0,-0.018330439925193787,-0.025968123227357864,0,0.018330439925193787,0.010692756623029709,0,-0.018330439925193787,-0.0488811731338501,0,0.006110146641731262,0.01680290326476097,0,-0.018330439925193787,-0.019857976585626602,0,0.012220293283462524,0.007637683302164078,0,0,-0.004582609981298447,0,0.02444058656692505,0.009165219962596893,0,-0.018330439925193787,-0.009165219962596893,0,0.006110146641731262,0.039715953171253204,0,0,-0.003055073320865631,0,0.006110146641731262,0.012220293283462524,0,-0.012220293283462524,-0.01680290326476097,0,0.018330439925193787,0.0015275366604328156,0,-0.012220293283462524,-0.012220293283462524,0,0.006110146641731262,0.0015275366604328156,0,-0.006110146641731262,-0.006110146641731262,0,0.012220293283462524,0,0,-0.018330439925193787,-0.007637683302164078,0,0.018330439925193787,0.012220293283462524,0,-0.0488811731338501,-0.007637683302164078,0,0.018330439925193787,0.012220293283462524,0,0,-0.006110146641731262,0,0,0.012220293283462524,0,-0.03666087985038757,-0.007637683302164078,0,0.02444058656692505,0.007637683302164078,0,0,-0.015275366604328156,0,0.006110146641731262,0.40021461248397827,0,0,-0.0015275366604328156,0,0.006110146641731262,0.03055073320865631,0,0,-0.022913049906492233,0,0.05499131977558136,0.07026668637990952,0,-0.006110146641731262,-0.018330439925193787,0,0.006110146641731262,0.012220293283462524,0,0,-0.012220293283462524,0,0.006110146641731262,0.006110146641731262,0,-0.006110146641731262,-0.01374782994389534,0,0.006110146641731262,0.006110146641731262,0,-0.006110146641731262,-0.004582609981298447,0,0.02444058656692505,0.01680290326476097,0,-0.006110146641731262,-0.029023196548223495,0,0.006110146641731262,0.009165219962596893,0,-0.006110146641731262,-0.003055073320865631,0,0,0.006110146641731262,0,-0.006110146641731262,-0.006110146641731262,0,0.006110146641731262,0.01374782994389534,0,-0.02444058656692505,-0.010692756623029709,0,0.018330439925193787,0.021385513246059418,0,-0.006110146641731262,-0.003055073320865631,0,0,0.012220293283462524,0,-0.006110146641731262,-0.015275366604328156,0,0.012220293283462524,0.009165219962596893,0,-0.018330439925193787,-0.025968123227357864,0,0,0.009165219962596893,0,-0.006110146641731262,-0.0015275366604328156,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#INDEX-3 -->\nCLR/HOME key, 220\n  CLV, 232, 240, 254\n  CMD statement, 31, 40-41, 374\n  CMP, 232, 241, 254\n  Collision detect, 144-145, 180\n  Color adjustment, 113\n  Color combinations chart, 152\n  Color memory, 103\n  Color register, 117, 120, 128, 135-136, 179\n  Color screen, background, border, 115-119, 128, 135-137, 176, 179-180\n  Commands, BASIC, 31-92\n  Commodore magazine, xvii-xviii, 390\n  Commodore 64 memory map, 310\n  Complement, twos, 63-64\n  Constants, floating-point, integer, string, 4-7, 46, 77-78\n  CONTinue command, 31, 41-42, 46, 81, 86, 374\n  ConTRoL key, 58, 72, 93-97, 171\n  COSine function, 31-34, 42, 374\n  CP/M, x, xiv, 368-371\n  CPX, 227, 232, 241, 254\n  CPY, 227, 232, 241, 254\n  Crunching BASIC programs, 24-27, 156\n  CuRSoR keys, 93-97, 336\n\nDATASSETTE(TM) recorder, (see cassette, tape recorder)\n  DATA statement, 26, 31, 42-43, 76-77, 111-114, 164, 169, 174, 374\n  DEC, 232, 242, 254\n  Decay, (see AIDIS/R)\n  DEFine FuNction statement, 31, 43-44, 374\n  DELete key, 71-72, 95-96\n  DEX, 226, 232 242, 254\n  DEY, 226, 232: 242, 254\n  DiMension statement, 9, 31, 44-45, 374\n  Direct mode, 3\n  Division, 3, 10-11\n\nEdit mode, 93-97\n  Editor, screen, 93-97\n  END statement, 32, 46, 79, 93, 374\n  Envelope generator, (see A/D/S/R)\n  EOR, 232, 243, 254\n  Equal, not-equal-to signs, 3, 9-12\n\nINDEX   485\n~\n\nError messages, 306, 400-401\n  Expansion port(s), (also user port, serial port, RS-232 port), 335-371\n  EXPonent function, 32, 46, 374\n  Exponentiation, 5-6, 10, 12, 16","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#INDEX-3"},{"name":"zimmers.net/cbmpics/cbm/c64/c64prg.txt","language":"asm","vector":[0,0.005900436546653509,0,-0.029502183198928833,-0.01770131103694439,0,0.005900436546653509,0.005900436546653509,0,-0.029502183198928833,-0.0014751091366633773,0,0.005900436546653509,0.014751091599464417,0,-0.029502183198928833,-0.004425327759236097,0,0.011800873093307018,0,0,-0.023601746186614037,-0.007375545799732208,0,0.005900436546653509,0.004425327759236097,0,-0.011800873093307018,-0.011800873093307018,0,0.011800873093307018,0.2079903930425644,0,0,-0.0014751091366633773,0,0.011800873093307018,0.022126637399196625,0,0,-0.013275982812047005,0,0,0.030977291986346245,0,-0.011800873093307018,-0.005900436546653509,0,0,0.014751091599464417,0,-0.011800873093307018,-0.011800873093307018,0,0,0.0191764198243618,0,0,-0.008850655518472195,0,0.01770131103694439,0.010325764305889606,0,-0.01770131103694439,-0.007375545799732208,0,0.01770131103694439,0.004425327759236097,0,-0.011800873093307018,-0.013275982812047005,0,0.04720349237322807,0.0014751091366633773,0,-0.01770131103694439,-0.005900436546653509,0,0.011800873093307018,0.004425327759236097,0,-0.005900436546653509,-0.011800873093307018,0,0.023601746186614037,0.0029502182733267546,0,-0.005900436546653509,-0.011800873093307018,0,0.005900436546653509,0.005900436546653509,0,-0.011800873093307018,-0.013275982812047005,0,0.005900436546653509,0.005900436546653509,0,0,-0.0191764198243618,0,0.29502183198928833,0.005900436546653509,0,0,-0.022126637399196625,0,0.03540262207388878,0.005900436546653509,0,-0.011800873093307018,-0.01622620038688183,0,0.023601746186614037,0.005900436546653509,0,-0.011800873093307018,-0.020651528611779213,0,0.011800873093307018,0.004425327759236097,0,-0.005900436546653509,-0.005900436546653509,0,0.029502183198928833,0.011800873093307018,0,-0.011800873093307018,-0.0014751091366633773,0,0.005900436546653509,0.005900436546653509,0,-0.005900436546653509,-0.0014751091366633773,0,0.041303057223558426,0.0014751091366633773,0,-0.011800873093307018,-0.007375545799732208,0,0.005900436546653509,0.005900436546653509,0,-0.011800873093307018,-0.005900436546653509,0,0.10030742734670639,0.0029502182733267546,0,0,-0.005900436546653509,0,0.01770131103694439,0.020651528611779213,0,-0.011800873093307018,-0.011800873093307018,0,0,0.013275982812047005,0,-0.005900436546653509,-0.008850655518472195,0,0.011800873093307018,0.029502183198928833,0,0,-0.011800873093307018,0,0.023601746186614037,0.008850655518472195,0,0,-0.005900436546653509,0,0.011800873093307018,0.013275982812047005,0,-0.005900436546653509,-0.008850655518472195,0,0.011800873093307018,0.0029502182733267546,0,-0.005900436546653509,-0.008850655518472195,0,0,0.004425327759236097,0,-0.01770131103694439,0,0,0.005900436546653509,0.14898602664470673,0,-0.03540262207388878,-0.004425327759236097,0,0.7847580909729004,0.020651528611779213,0,-0.005900436546653509,-0.010325764305889606,0,0.06490480154752731,0.011800873093307018,0,-0.005900436546653509,-0.013275982812047005,0,0.029502183198928833,0.007375545799732208,0,0,-0.010325764305889606,0,0.023601746186614037,0.01622620038688183,0,-0.023601746186614037,-0.013275982812047005,0,0.029502183198928833,0.005900436546653509,0,-0.011800873093307018,-0.008850655518472195,0,0.01770131103694439,0.022126637399196625,0,-0.005900436546653509,-0.008850655518472195,0,0.005900436546653509,0.005900436546653509,0,-0.005900436546653509,-0.005900436546653509,0,0.005900436546653509,0.05310393124818802,0,0,0,0,0.005900436546653509,0.008850655518472195,0,-0.04720349237322807,-0.008850655518472195,0,0,0,0,-0.011800873093307018,-0.005900436546653509,0,0,0.005900436546653509,0,-0.01770131103694439,0,0,0.023601746186614037,0.01622620038688183,0,-0.01770131103694439,-0.004425327759236097,0,0.011800873093307018,0.010325764305889606,0,-0.029502183198928833,-0.005900436546653509,0,0.011800873093307018,0.01770131103694439,0,-0.005900436546653509,-0.007375545799732208,0,0,0.0029502182733267546,0,-0.03540262207388878,-0.010325764305889606,0,0.005900436546653509,0.008850655518472195,0,0,-0.0191764198243618,0,0.023601746186614037,0.39385414123535156,0,-0.005900436546653509,-0.005900436546653509,0,0,0.03392751142382622,0,-0.005900436546653509,-0.0029502182733267546,0,0.005900436546653509,0.0885065495967865,0,-0.005900436546653509,0,0,0.023601746186614037,0.020651528611779213,0,0,-0.014751091599464417,0,0.011800873093307018,0.020651528611779213,0,-0.023601746186614037,-0.008850655518472195,0,0.04720349237322807,0.011800873093307018,0,-0.011800873093307018,-0.004425327759236097,0,0.01770131103694439,0.010325764305889606,0,-0.011800873093307018,-0.005900436546653509,0,0.023601746186614037,0.004425327759236097,0,-0.011800873093307018,-0.0014751091366633773,0,0.011800873093307018,0.013275982812047005,0,-0.011800873093307018,-0.02655196562409401,0,0.005900436546653509,0.0014751091366633773,0,-0.023601746186614037,-0.008850655518472195,0,0,0.025076856836676598,0,-0.011800873093307018,-0.008850655518472195,0,0.005900436546653509,0.01622620038688183,0,0,-0.011800873093307018,0,0.005900436546653509,0.005900436546653509,0,-0.01770131103694439,-0.01622620038688183,0,0.011800873093307018,0.008850655518472195,0,-0.01770131103694439,-0.0029502182733267546,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#INDEX-5 -->\nINTeger function, 32, 56, 80, 374\n  Integer,, arrays, constants, variables, 4-5, 7-9\n  INX, 226-227, 232, 243, 254\n  INY, 226-227, 232, 244, 254\n  IOBASE, 272-273, 284\n  I/O Guide, 335-375\n  IOINIT, 272-273, 285\n  I/O Pinouts, 395-397\n  I/O Ports, 214, 260, 335-375\n  I/O Registers, 104-106, 212-214\n  I/O Statements, 39, 50, 54-55, 65-67, 75\n  IRQ, 308\n\nJoysticks, 343-345\n  JMP, 228-230, 232, 244, 254, 270, 308\n  JSR, 228-230, 233, 244, 255, 268, 270\n\nKERNAL, 2, 94, 209, 228-230, 308, 268-306, 348-358\n  Keyboard, 93-98\n  Keywords, BASIC, 29-92\n\nLDA, 218-220, 233, 245, 255\n  LDX, 233, 245, 255\n  LDY, 233, 246, 255\n  LEFT$ function, 32, 56, 375\n  LENgth function, 32, 57, 375\n  Less than, equal to or, 3, 12-13, 16\n  LET statement, 32, 57, 375\n  LIST command, 32, 58, 375\n  LISTEN, 272-273, 285\n  LOAD, 272-273, 286\n  LOAD command, 32, 59-60, 370, 375\n  Loading programs from tape, disk, 59-60, 337-338, 340-342\n  LOGarithm function, 32, 61, 375\n  Lower case characters, 72-74, 105\n  LPX (LPY), 348\n  LSR, 233, 246, 255\n\nMachine language, 209-334, 411-413\n  Mask, 92\n  Mathematics formulas, 394\n  Mathematical symbols, 3, 6-17, 394\n\nINDEX   487\n~\n\nMEMBOT, 272-273, 287\n  Memory maps, 212, 262-267, 272-273,\n    310-3@4\n  Memory map, abbreviated, 212\n  Memory reallocation, 101-103\n  MEMTOP, 272-273, 288\n  MID$ function, 33, 61, 375\n  Modem, xiii-xviii, 339-340\n  Modulation, 183, 207-208\n  Multiplication, 3, 10-11\n  Music, 183-208","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt","sourceMtimeMs":1761327714834.8442,"origin":"external/zimmers.net/cbmpics/cbm/c64/c64prg.txt#INDEX-5"},{"name":"zimmers.net/cbmpics/cbm/c64/vic-ii.txt","language":"asm","vector":[0.0037058282177895308,0.0018529141088947654,0,0,0,0,0.0037058282177895308,0.0037058282177895308,0,-0.014823312871158123,-0.0009264570544473827,0,0.0037058282177895308,0,0,0,-0.0037058282177895308,0,0.0037058282177895308,0,0,0,0,0,0,0.033352453261613846,0,0,-0.0018529141088947654,0,0.0037058282177895308,0.0037058282177895308,0,-0.0037058282177895308,-0.0009264570544473827,0,0,0,0,-0.0037058282177895308,-0.005558742210268974,0,0.0037058282177895308,0.004632285330444574,0,0,-0.0037058282177895308,0,0.0037058282177895308,0.0009264570544473827,0,0,-0.0018529141088947654,0,0.0074116564355790615,0.0074116564355790615,0,0,-0.005558742210268974,0,0,0,0,0,-0.0037058282177895308,0,0.0074116564355790615,0.0009264570544473827,0,0,-0.0009264570544473827,0,0,0,0,0,-0.009264570660889149,0,0.0037058282177895308,0.002779371105134487,0,-0.025940798223018646,0,0,0.025940798223018646,0.0009264570544473827,0,-0.0074116564355790615,-0.016676226630806923,0,0.0037058282177895308,0,0,-0.0074116564355790615,-0.004632285330444574,0,0,0.0018529141088947654,0,0,-0.0009264570544473827,0,0.8152822256088257,0.0018529141088947654,0,-0.011117484420537949,-0.009264570660889149,0,0.0074116564355790615,0.0018529141088947654,0,-0.011117484420537949,-0.06392553448677063,0,0.0037058282177895308,0.0018529141088947654,0,-0.0074116564355790615,0,0,0.0074116564355790615,0.0009264570544473827,0,0,0,0,0.033352453261613846,0.0018529141088947654,0,-0.011117484420537949,-0.0018529141088947654,0,0,0,0,0,-0.0018529141088947654,0,0.037058282643556595,0.0018529141088947654,0,0,-0.0009264570544473827,0,0.0074116564355790615,0.0018529141088947654,0,0,0,0,0.05188159644603729,0.0037058282177895308,0,0,-0.002779371105134487,0,0,0.0009264570544473827,0,0,-0.0009264570544473827,0,0.0074116564355790615,0.0037058282177895308,0,-0.0037058282177895308,0,0,0,0.0009264570544473827,0,0,-0.002779371105134487,0,0.0074116564355790615,0.0018529141088947654,0,0,-0.013896855525672436,0,0.0074116564355790615,0.012970399111509323,0,-0.0037058282177895308,-0.0037058282177895308,0,0,0.0018529141088947654,0,-0.014823312871158123,-0.0064851995557546616,0,0,0,0,0,0,0,0.13340981304645538,0.40764111280441284,0,0,-0.011117484420537949,0,0.014823312871158123,0.0037058282177895308,0,-0.0037058282177895308,-0.0074116564355790615,0,0,0.002779371105134487,0,0,-0.0037058282177895308,0,0.011117484420537949,0.004632285330444574,0,-0.0074116564355790615,-0.0037058282177895308,0,0.0037058282177895308,0.01760268397629261,0,-0.0074116564355790615,-0.005558742210268974,0,0.022234968841075897,0.0009264570544473827,0,0,0,0,0,0.018529141321778297,0,-0.0074116564355790615,0,0,0.0037058282177895308,0.004632285330444574,0,-0.0037058282177895308,-0.0009264570544473827,0,0,0.025940798223018646,0,-0.014823312871158123,-0.0009264570544473827,0,0.011117484420537949,0.0009264570544473827,0,0,0,0,0.0037058282177895308,0.004632285330444574,0,-0.022234968841075897,-0.0018529141088947654,0,0,0.0018529141088947654,0,-0.0037058282177895308,0,0,0,0.0037058282177895308,0,-0.0037058282177895308,0,0,0,0.005558742210268974,0,-0.0074116564355790615,-0.0018529141088947654,0,0,0,0,-0.2557021379470825,-0.0074116564355790615,0,0,0.0009264570544473827,0,0,-0.0064851995557546616,0,0.0037058282177895308,0.0731901079416275,0,0,-0.0018529141088947654,0,0,0.008338113315403461,0,0,-0.0037058282177895308,0,0,0,0,0,0,0,0,0.20937930047512054,0,-0.0037058282177895308,-0.0064851995557546616,0,0,0.0037058282177895308,0,0,-0.0064851995557546616,0,0,0.012043941766023636,0,-0.011117484420537949,-0.0018529141088947654,0,0.0037058282177895308,0.0018529141088947654,0,-0.0037058282177895308,-0.0037058282177895308,0,0,0.010191028006374836,0,0,-0.004632285330444574,0,0.0037058282177895308,0,0,-0.011117484420537949,-0.0074116564355790615,0,0,0.014823312871158123,0,-0.0037058282177895308,0,0,0,0.0037058282177895308,0,0,-0.011117484420537949,0,0,0.012970399111509323,0,-0.011117484420537949,-0.0018529141088947654,0,0,0,0,0,-0.0018529141088947654,0,0,0.0018529141088947654,0,-0.022234968841075897,-0.004632285330444574,0,0,0,0,-0.0074116564355790615,-0.12785106897354126,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt#Page-1-9 -->\n$ffff +--------------+  /$e000 +----------+  +----------+\n       |  Kernal ROM  | /       |  I/O  2  |  |          |\n $e000 +--------------+/  $df00 +----------+  |          |\n       |I/O, Char ROM |         |  I/O  1  |  |          |\n $d000 +--------------+\\  $de00 +----------+  |          |\n       |     RAM      | \\       |  CIA  2  |  |          |\n $c000 +--------------+  \\$dd00 +----------+  |          |\n       |  Basic ROM   |         |  CIA  1  |  |          |\n $a000 +--------------+   $dc00 +----------+  | Char ROM |\n       |              |         |Color RAM |  |          |\n       .     RAM      .         |          |  |          |\n       .              .   $d800 +----------+  |          |\n       |              |         |   SID    |  |          |\n $0002 +--------------+         |registers |  |          |\n       | I/O port DR  |   $d400 +----------+  |          |\n $0001 +--------------+         |   VIC    |  |          |\n       | I/O port DDR |         |registers |  |          |\n $0000 +--------------+   $d000 +----------+  +----------+\n\nBasically, the 64KB main memory can be accessed in a linear fashion, but\nthey are overlaid by ROM and register areas at several positions. A write\naccess to a ROM area will store the byte in the RAM lying \"under\" the ROM.\nThe 6510 I/O port is mapped to addresses $0000 (for the data direction\nregister) and $0001 (for the data register).","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt","sourceMtimeMs":1761327824819.5244,"origin":"external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt#Page-1-9"},{"name":"zimmers.net/cbmpics/cbm/c64/vic-ii.txt","language":"asm","vector":[0.00025576999178156257,0.0009591374546289444,0,-0.00025576999178156257,-0.0003836549585685134,0,0.0005115399835631251,0.00025576999178156257,0,-0.0010230799671262503,-0.0003836549585685134,0,0.0005115399835631251,0.00025576999178156257,0,-0.0015346198342740536,-0.000319712475175038,0,0.0007673099171370268,0.0008312524296343327,0,-0.001278849900700152,-0.0005754824378527701,0,0,0.02046159841120243,0,0,-0.00044759747106581926,0,0.0005115399835631251,0.000639424950350076,0,-0.0005115399835631251,-0.00012788499589078128,0,0.0010230799671262503,0.0003836549585685134,0,-0.00025576999178156257,-0.0008312524296343327,0,0,0.0001918274792842567,0,-0.0010230799671262503,-0.0003836549585685134,0,0.00025576999178156257,0.00025576999178156257,0,-0.0020461599342525005,-0.00044759747106581926,0,0.0005115399835631251,0.000319712475175038,0,-0.00025576999178156257,-0.0021740447264164686,0,0.001278849900700152,0.00012788499589078128,0,-0.0007673099171370268,-0.00044759747106581926,0,0.0005115399835631251,0.00012788499589078128,0,-0.00025576999178156257,-0.0009591374546289444,0,0.0007673099171370268,0.0003836549585685134,0,0,-0.0008951949421316385,0,0.0023019297514110804,0.0005115399835631251,0,-0.001278849900700152,-0.0003836549585685134,0,0.00025576999178156257,0.0005754824378527701,0,-0.001278849900700152,-0.0007033674628473818,0,0,0.000319712475175038,0,-0.0007673099171370268,-0.0003836549585685134,0,0.0005115399835631251,0.00025576999178156257,0,-0.0007673099171370268,-0.0001918274792842567,0,0.8655256032943726,0.000319712475175038,0,-0.0005115399835631251,-0.0007673099171370268,0,0,0.00025576999178156257,0,-0.001278849900700152,-0.019950058311223984,0,0.0005115399835631251,0.0005115399835631251,0,-0.0007673099171370268,-0.0007673099171370268,0,0.00025576999178156257,0.00006394249794539064,0,-0.0010230799671262503,-0.0001918274792842567,0,0.0015346198342740536,0.000319712475175038,0,-0.00025576999178156257,-0.0003836549585685134,0,0.001278849900700152,0.0008951949421316385,0,-0.001278849900700152,-0.00025576999178156257,0,0.0010230799671262503,0.00012788499589078128,0,-0.0007673099171370268,-0.0007033674628473818,0,0.0007673099171370268,0.000319712475175038,0,-0.003069239668548107,-0.0010230799671262503,0,0.0020461599342525005,0.00044759747106581926,0,-0.006650019437074661,-0.0003836549585685134,0,0.0007673099171370268,0.0007033674628473818,0,0,-0.00044759747106581926,0,0,0.0003836549585685134,0,-0.001278849900700152,-0.00025576999178156257,0,0.003580779768526554,0.00044759747106581926,0,-0.0005115399835631251,-0.0007033674628473818,0,0.0028134698513895273,0.001214907388202846,0,-0.0005115399835631251,-0.0007673099171370268,0,0.0005115399835631251,0.0001918274792842567,0,0,-0.0010230799671262503,0,0.0005115399835631251,0.0001918274792842567,0,-0.00025576999178156257,-0.0008312524296343327,0,0.00025576999178156257,0.00044759747106581926,0,-0.001278849900700152,-0.0005115399835631251,0,0.08082331717014313,0.4328906834125519,0,-0.00025576999178156257,-0.0005115399835631251,0,0.0010230799671262503,0.00006394249794539064,0,-0.0005115399835631251,-0.0007673099171370268,0,0,0.000319712475175038,0,-0.001278849900700152,-0.00044759747106581926,0,0.00025576999178156257,0.00025576999178156257,0,-0.0010230799671262503,-0.0007673099171370268,0,0,0.0008951949421316385,0,-0.0007673099171370268,-0.0005115399835631251,0,0.0007673099171370268,0.0008312524296343327,0,-0.003069239668548107,-0.0009591374546289444,0,0,0.0005115399835631251,0,-0.0007673099171370268,-0.0003836549585685134,0,0,0.0005115399835631251,0,-0.0007673099171370268,-0.0016625048592686653,0,0,0.001278849900700152,0,0,-0.0033889522310346365,0,0.0005115399835631251,0.0003836549585685134,0,-0.0005115399835631251,-0.00025576999178156257,0,0.001278849900700152,0.00006394249794539064,0,-0.0007673099171370268,-0.0011509648757055402,0,0.0007673099171370268,0.0019182749092578888,0,-0.0005115399835631251,-0.000319712475175038,0,0.0005115399835631251,0.0017264473717659712,0,-0.00025576999178156257,-0.00044759747106581926,0,0.00025576999178156257,0.0003836549585685134,0,-0.0010230799671262503,-0.00006394249794539064,0,0,0.00044759747106581926,0,-0.07673099637031555,-0.00012788499589078128,0,0.0005115399835631251,0.0007033674628473818,0,-0.0005115399835631251,-0.0009591374546289444,0,0.00025576999178156257,0.040475599467754364,0,-0.0007673099171370268,-0.00044759747106581926,0,0.00025576999178156257,0.0005115399835631251,0,-0.0005115399835631251,-0.00044759747106581926,0,0.0015346198342740536,0.00012788499589078128,0,-0.0005115399835631251,-0.0008312524296343327,0,0.0005115399835631251,0.21650928258895874,0,-0.0007673099171370268,-0.000639424950350076,0,0.0007673099171370268,0,0,0,-0.0007033674628473818,0,0.0007673099171370268,0.0005115399835631251,0,-0.0010230799671262503,-0.0017264473717659712,0,0.00025576999178156257,0.00006394249794539064,0,-0.00025576999178156257,-0.000639424950350076,0,0.0005115399835631251,0.0003836549585685134,0,-0.0005115399835631251,-0.00044759747106581926,0,0.00025576999178156257,0.000319712475175038,0,-0.0028134698513895273,-0.000319712475175038,0,0.00025576999178156257,0.0005115399835631251,0,-0.0005115399835631251,-0.00044759747106581926,0,0.00025576999178156257,0.0008312524296343327,0,-0.0015346198342740536,-0.0011509648757055402,0,0.0007673099171370268,0.0008951949421316385,0,-0.001790389884263277,-0.0019182749092578888,0,0.0007673099171370268,0.00044759747106581926,0,-0.0005115399835631251,-0.00012788499589078128,0,0.0005115399835631251,0.00012788499589078128,0,-0.0010230799671262503,-0.0008312524296343327,0,0.00025576999178156257,0.0008951949421316385,0,-0.0005115399835631251,-0.038493383675813675,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt#Page-1-17 -->\n#| Adr.  |Bit7|Bit6|Bit5|Bit4|Bit3|Bit2|Bit1|Bit0| Function\n--+-------+----+----+----+----+----+----+----+----+------------------------\n 0| $d000 |                  M0X                  | X coordinate sprite 0\n--+-------+---------------------------------------+------------------------\n 1| $d001 |                  M0Y                  | Y coordinate sprite 0\n--+-------+---------------------------------------+------------------------\n 2| $d002 |                  M1X                  | X coordinate sprite 1\n--+-------+---------------------------------------+------------------------\n 3| $d003 |                  M1Y                  | Y coordinate sprite 1\n--+-------+---------------------------------------+------------------------\n 4| $d004 |                  M2X                  | X coordinate sprite 2\n--+-------+---------------------------------------+------------------------\n 5| $d005 |                  M2Y                  | Y coordinate sprite 2\n--+-------+---------------------------------------+------------------------\n 6| $d006 |                  M3X                  | X coordinate sprite 3\n--+-------+---------------------------------------+------------------------\n 7| $d007 |                  M3Y                  | Y coordinate sprite 3\n--+-------+---------------------------------------+------------------------\n 8| $d008 |                  M4X                  | X coordinate sprite 4\n--+-------+---------------------------------------+------------------------\n 9| $d009 |                  M4Y                  | Y coordinate sprite 4\n--+-------+---------------------------------------+------------------------\n10| $d00a |                  M5X                  | X coordinate sprite 5\n--+-------+---------------------------------------+------------------------\n11| $d00b |                  M5Y                  | Y coordinate sprite 5\n--+-------+---------------------------------------+------------------------\n12| $d00c |                  M6X                  | X coordinate sprite 6\n--+-------+---------------------------------------+------------------------\n13| $d00d |                  M6Y                  | Y coordinate sprite 6\n--+-------+---------------------------------------+------------------------\n14| $d00e |                  M7X                  | X coordinate sprite 7\n--+-------+---------------------------------------+------------------------\n15| $d00f |                  M7Y                  | Y coordinate sprite 7\n--+-------+----+----+----+----+----+----+----+----+------------------------\n16| $d010 |M7X8|M6X8|M5X8|M4X8|M3X8|M2X8|M1X8|M0X8| MSBs of X coordinates\n--+-------+----+----+----+----+----+----+----+----+------------------------\n17| $d011 |RST8| ECM| BMM| DEN|RSEL|    YSCROLL   | Control register 1\n--+-------+----+----+----+----+----+--------------+------------------------\n18| $d012 |                 RASTER                | Raster counter\n--+-------+---------------------------------------+------------------------\n19| $d013 |                  LPX                  | Light pen X\n--+-------+---------------------------------------+------------------------\n20| $d014 |                  LPY                  | Light pen Y\n--+-------+----+----+----+----+----+----+----+----+------------------------\n21| $d015 | M7E| M6E| M5E| M4E| M3E| M2E| M1E| M0E| Sprite enabled\n--+-------+----+----+----+----+----+----+----+----+------------------------\n22| $d016 |  - |  - | RES| MCM|CSEL|    XSCROLL   | Control register 2\n--+-------+----+----+----+----+----+----+----+----+------------------------\n23| $d017 |M7YE|M6YE|M5YE|M4YE|M3YE|M2YE|M1YE|M0YE| Sprite Y expansion\n--+-------+----+----+----+----+----+----+----+----+------------------------\n24| $d018 |VM13|VM12|VM11|VM10|CB13|CB12|CB11|  - | Memory pointers\n--+-------+----+----+----+----+----+----+----+----+------------------------\n25| $d019 | IRQ|  - |  - |  - | ILP|IMMC|IMBC|IRST| Interrupt register\n--+-------+----+----+----+----+----+----+----+----+------------------------\n26| $d01a |  - |  - |  - |  - | ELP|EMMC|EMBC|ERST| Interrupt enabled\n--+-------+----+----+----+----+----+----+----+----+------------------------\n27| $d01b |M7DP|M6DP|M5DP|M4DP|M3DP|M2DP|M1DP|M0DP| Sprite data priority\n--+-------+----+----+----+----+----+----+----+----+------------------------\n28| $d01c |M7MC|M6MC|M5MC|M4MC|M3MC|M2MC|M1MC|M0MC| Sprite multicolor\n--+-------+----+----+----+----+----+----+----+----+------------------------\n29| $d01d |M7XE|M6XE|M5XE|M4XE|M3XE|M2XE|M1XE|M0XE| Sprite X expansion\n--+-------+----+----+----+----+----+----+----+----+------------------------\n30| $d01e | M7M| M6M| M5M| M4M| M3M| M2M| M1M| M0M| Sprite-sprite collision\n--+-------+----+----+----+----+----+----+----+----+------------------------\n31| $d01f | M7D| M6D| M5D| M4D| M3D| M2D| M1D| M0D| Sprite-data collision\n--+-------+----+----+----+----+----+----+----+----+------------------------\n32| $d020 |  - |  - |  - |  - |         EC        | Border color\n--+-------+----+----+----+----+-------------------+------------------------\n33| $d021 |  - |  - |  - |  - |        B0C        | Background color 0\n--+-------+----+----+----+----+-------------------+------------------------\n34| $d022 |  - |  - |  - |  - |        B1C        | Background color 1\n--+-------+----+----+----+----+-------------------+------------------------\n35| $d023 |  - |  - |  - |  - |        B2C        | Background color 2\n--+-------+----+----+----+----+-------------------+------------------------\n36| $d024 |  - |  - |  - |  - |        B3C        | Background color 3\n--+-------+----+----+----+----+-------------------+------------------------\n37| $d025 |  - |  - |  - |  - |        MM0        | Sprite multicolor 0\n--+-------+----+----+----+----+-------------------+------------------------\n38| $d026 |  - |  - |  - |  - |        MM1        | Sprite multicolor 1\n--+-------+----+----+----+----+-------------------+------------------------\n39| $d027 |  - |  - |  - |  - |        M0C        | Color sprite 0\n--+-------+----+----+----+----+-------------------+------------------------\n40| $d028 |  - |  - |  - |  - |        M1C        | Color sprite 1\n--+-------+----+----+----+----+-------------------+------------------------\n41| $d029 |  - |  - |  - |  - |        M2C        | Color sprite 2\n--+-------+----+----+----+----+-------------------+------------------------\n42| $d02a |  - |  - |  - |  - |        M3C        | Color sprite 3\n--+-------+----+----+----+----+-------------------+------------------------\n43| $d02b |  - |  - |  - |  - |        M4C        | Color sprite 4\n--+-------+----+----+----+----+-------------------+------------------------\n44| $d02c |  - |  - |  - |  - |        M5C        | Color sprite 5\n--+-------+----+----+----+----+-------------------+------------------------\n45| $d02d |  - |  - |  - |  - |        M6C        | Color sprite 6\n--+-------+----+----+----+----+-------------------+------------------------\n46| $d02e |  - |  - |  - |  - |        M7C        | Color sprite 7\n--+-------+----+----+----+----+-------------------+------------------------","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt","sourceMtimeMs":1761327824819.5244,"origin":"external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt#Page-1-17"},{"name":"zimmers.net/cbmpics/cbm/c64/vic-ii.txt","language":"asm","vector":[0.032460570335388184,0.008115142583847046,0,0,-0.0527484305202961,0,0.09738171845674515,0.008115142583847046,0,-0.016230285167694092,-0.02840300090610981,0,0.032460570335388184,0.004057571291923523,0,-0.032460570335388184,-0.032460570335388184,0,0.032460570335388184,0.004057571291923523,0,-0.032460570335388184,-0.04057571664452553,0,0.016230285167694092,0.004057571291923523,0,0,-0.016230285167694092,0,0,0.04463328793644905,0,0,-0.012172714807093143,0,0,0.008115142583847046,0,0,-0.024345429614186287,0,0.08115143328905106,0.03651814162731171,0,0,-0.048690859228372574,0,0,0.008115142583847046,0,-0.08115143328905106,-0.004057571291923523,0,0.14607256650924683,0.004057571291923523,0,-0.048690859228372574,-0.016230285167694092,0,0,0.04463328793644905,0,-0.016230285167694092,-0.016230285167694092,0,0.06492114067077637,0.032460570335388184,0,0,-0.008115142583847046,0,0,0,0,0,-0.04057571664452553,0,0.048690859228372574,0.04057571664452553,0,-0.11361200362443924,-0.02840300090610981,0,0.09738171845674515,0.012172714807093143,0,-0.12984228134155273,-0.25562700629234314,0,0,0.012172714807093143,0,-0.016230285167694092,-0.03651814162731171,0,0.016230285167694092,0.03651814162731171,0,-0.016230285167694092,0,0,0.25968456268310547,0.0527484305202961,0,-0.08115143328905106,-0.03651814162731171,0,0.048690859228372574,0.04057571664452553,0,-0.048690859228372574,-0.03651814162731171,0,0.032460570335388184,0.020287858322262764,0,-0.016230285167694092,-0.020287858322262764,0,0,0.008115142583847046,0,-0.032460570335388184,-0.012172714807093143,0,0.1785331517457962,0,0,-0.06492114067077637,-0.004057571291923523,0,0,0,0,-0.016230285167694092,-0.020287858322262764,0,0.016230285167694092,0.04057571664452553,0,0,-0.008115142583847046,0,0.032460570335388184,0.004057571291923523,0,-0.016230285167694092,-0.04057571664452553,0,0.1947634369134903,0.07303628325462341,0,-0.06492114067077637,-0.03651814162731171,0,0,0.016230285167694092,0,0,-0.008115142583847046,0,0.016230285167694092,0.032460570335388184,0,0,0,0,0.08115143328905106,0,0,-0.016230285167694092,-0.004057571291923523,0,0,0.04057571664452553,0,-0.1785331517457962,-0.06492114067077637,0,0.032460570335388184,0.06086357310414314,0,-0.016230285167694092,-0.06897871196269989,0,0.016230285167694092,0,0,-0.09738171845674515,-0.012172714807093143,0,0.016230285167694092,0.02840300090610981,0,0,-0.020287858322262764,0,0.016230285167694092,0.13389985263347626,0,0,-0.16636043787002563,0,0.14607256650924683,0.02840300090610981,0,-0.048690859228372574,-0.04057571664452553,0,0.032460570335388184,0.024345429614186287,0,0,-0.008115142583847046,0,0.016230285167694092,0.024345429614186287,0,-0.1947634369134903,-0.020287858322262764,0,0.032460570335388184,0.09738171845674515,0,-0.016230285167694092,-0.04057571664452553,0,0.016230285167694092,0.008115142583847046,0,-0.032460570335388184,-0.016230285167694092,0,0.048690859228372574,0.012172714807093143,0,0,0,0,0.032460570335388184,0.016230285167694092,0,0,-0.008115142583847046,0,0,0.09738171845674515,0,-0.12984228134155273,-0.032460570335388184,0,0,0.020287858322262764,0,-0.016230285167694092,0,0,0.016230285167694092,0.008115142583847046,0,-0.016230285167694092,-0.020287858322262764,0,0.016230285167694092,0.07709386199712753,0,-0.016230285167694092,-0.020287858322262764,0,0.08115143328905106,0,0,0,-0.09332414716482162,0,0.016230285167694092,0.032460570335388184,0,-0.11361200362443924,-0.008115142583847046,0,0.09738171845674515,0.008115142583847046,0,-0.08115143328905106,-0.048690859228372574,0,0.016230285167694092,0.020287858322262764,0,-0.016230285167694092,-0.02840300090610981,0,0,0.032460570335388184,0,-0.048690859228372574,-0.032460570335388184,0,0,0.07303628325462341,0,-0.016230285167694092,-0.02840300090610981,0,0,0.020287858322262764,0,-0.08115143328905106,-0.004057571291923523,0,0,0.07303628325462341,0,-0.032460570335388184,-0.11766957491636276,0,0.016230285167694092,0.02840300090610981,0,0,-0.020287858322262764,0,0,0.016230285167694092,0,-0.048690859228372574,-0.020287858322262764,0,0.06492114067077637,0.024345429614186287,0,0,-0.008115142583847046,0,0,0.06086357310414314,0,0,-0.016230285167694092,0,0,0,0,-0.016230285167694092,-0.06897871196269989,0,0.06492114067077637,0.004057571291923523,0,-0.032460570335388184,-0.008115142583847046,0,0.048690859228372574,0.016230285167694092,0,-0.016230285167694092,-0.012172714807093143,0,0,0.05680600181221962,0,-0.016230285167694092,-0.024345429614186287,0,0.08115143328905106,0.04057571664452553,0,-0.048690859228372574,0,0,0.016230285167694092,0.012172714807093143,0,-0.5031388401985168,-0.05680600181221962,0,0.016230285167694092,0.06897871196269989,0,-0.06492114067077637,-0.04463328793644905,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt#Page-1-19 -->\nIn this article, the specification of a position on the screen is done with\nthe raster line number as the Y coordinate (RASTER, register $d011/$d012)\nand a X coordinate that corresponds to the sprite coordinate system. When\nspecifying the time of a VIC memory access or an internal operation in the\nVIC, the raster line number is used as Y coordinate and the number of the\nclock cycle within the line as X coordinate. As previously mentioned, 8\npixels make a clock cycle, so the specification of a sprite X coordinate is\neight times more precise than that of a cycle number.\n\nThe graphics are displayed in an unmovable window in the middle of the\nvisible screen area, the \"display window\". The area outside the display\nwindow is covered by the screen border and is displayed in the border color\n(EC, register $d020). You can also turn off the border partially or\ncompletely with some little tweaking; then you see that the display window\nis part of a \"display column\" that is made up by the linear extension of\nthe display window to the top and bottom. With that you can divide the\nborder in an upper/lower border and a left/right border. The visible screen\narea is surrounded by blanking intervals in which the video signal is\nturned off and in which the raster beam returns to the start of the next\nline or the start of the frame, respectively.\n\nThe following figure (not in scale) illustrates the last paragraph:\n\nVisible pixels/line\n     ____________________|___________________\n    /                                        \\","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt","sourceMtimeMs":1761327824819.5244,"origin":"external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt#Page-1-19"},{"name":"zimmers.net/cbmpics/cbm/c64/vic-ii.txt","language":"asm","vector":[0,0.0044595529325306416,0,0,-0.002837897278368473,0,0,0.0016216555377468467,0,-0.0032433110754936934,0,0,0.0016216555377468467,0,0,-0.011351589113473892,-0.0016216555377468467,0,0.011351589113473892,0.007297449745237827,0,-0.006486622150987387,-0.0008108277688734233,0,0,0.04216304421424866,0,0,0,0,0,0.002027069451287389,0,0,-0.0008108277688734233,0,0,0.0008108277688734233,0,0,-0.0008108277688734233,0,0,0,0,0,-0.0012162416242063046,0,0.006486622150987387,0,0,-0.006486622150987387,-0.00040541388443671167,0,0.0016216555377468467,0,0,-0.0032433110754936934,-0.007297449745237827,0,0,0,0,-0.008108277805149555,-0.0008108277688734233,0,0.004864966496825218,0.00040541388443671167,0,0,-0.0032433110754936934,0,0,0,0,0,-0.0032433110754936934,0,0.004864966496825218,0.00040541388443671167,0,-0.006486622150987387,0,0,0,0.00040541388443671167,0,-0.017838211730122566,-0.002837897278368473,0,0,0,0,-0.0016216555377468467,-0.0008108277688734233,0,0,0.0008108277688734233,0,0,0,0,0.840017557144165,0.0012162416242063046,0,0,-0.008108277805149555,0,0,0.0008108277688734233,0,-0.004864966496825218,-0.04419011250138283,0,0.008108277805149555,0.006892036180943251,0,-0.004864966496825218,-0.004054138902574778,0,0,0,0,-0.0016216555377468467,0,0,0.009729932993650436,0,0,-0.012973244301974773,-0.0008108277688734233,0,0,0.0036487248726189137,0,0,-0.00040541388443671167,0,0.0016216555377468467,0,0,-0.0016216555377468467,0,0,0.004864966496825218,0.004054138902574778,0,-0.0016216555377468467,-0.0032433110754936934,0,0.025946488603949547,0.0012162416242063046,0,-0.0032433110754936934,-0.002027069451287389,0,0.0016216555377468467,0,0,-0.0016216555377468467,-0.0044595529325306416,0,0,0.002432483248412609,0,0,0,0,0.0016216555377468467,0,0,-0.004864966496825218,-0.0036487248726189137,0,0.008108277805149555,0.002432483248412609,0,-0.004864966496825218,-0.0036487248726189137,0,0.006486622150987387,0,0,0,-0.010540761053562164,0,0,0,0,0,-0.002432483248412609,0,0,0,0,0,0,0,0.16865217685699463,0.4200087785720825,0,0,-0.0012162416242063046,0,0.0016216555377468467,0,0,-0.0032433110754936934,-0.002837897278368473,0,0,0.004054138902574778,0,0,-0.002432483248412609,0,0,0,0,-0.0016216555377468467,-0.0016216555377468467,0,0,0.005270380526781082,0,-0.0016216555377468467,-0.009324518963694572,0,0,0.002837897278368473,0,0,-0.0016216555377468467,0,0,0.0008108277688734233,0,0,-0.0008108277688734233,0,0.0016216555377468467,0.002432483248412609,0,0,-0.0008108277688734233,0,0,0.012973244301974773,0,0,-0.0016216555377468467,0,0.0016216555377468467,0.0008108277688734233,0,0,-0.0008108277688734233,0,0.0016216555377468467,0.0016216555377468467,0,-0.0016216555377468467,-0.0016216555377468467,0,0,0.0012162416242063046,0,0,-0.0032433110754936934,0,0.0032433110754936934,0.004054138902574778,0,0,-0.0044595529325306416,0,0.004864966496825218,0.0044595529325306416,0,-0.025946488603949547,0,0,0,0,0,-0.15405727922916412,0,0,0.004864966496825218,0.0012162416242063046,0,-0.0032433110754936934,-0.0016216555377468467,0,0,0.08432608842849731,0,0,-0.0044595529325306416,0,0,0.0008108277688734233,0,-0.0032433110754936934,-0.002027069451287389,0,0.014594899490475655,0,0,-0.0016216555377468467,0,0,0,0.21000438928604126,0,0,-0.0008108277688734233,0,0.0032433110754936934,0,0,0,-0.002027069451287389,0,0.0016216555377468467,0.002027069451287389,0,-0.0016216555377468467,-0.0012162416242063046,0,0,0,0,-0.0016216555377468467,-0.00040541388443671167,0,0,0.0032433110754936934,0,0,-0.0032433110754936934,0,0,0,0,-0.014594899490475655,0,0,0,0.0012162416242063046,0,-0.0016216555377468467,-0.00040541388443671167,0,0,0.002027069451287389,0,-0.006486622150987387,-0.0012162416242063046,0,0,0.006486622150987387,0,-0.006486622150987387,-0.0008108277688734233,0,0,0.002027069451287389,0,0,-0.00040541388443671167,0,0,0.002432483248412609,0,-0.004864966496825218,-0.012973244301974773,0,0,0.00040541388443671167,0,-0.0016216555377468467,-0.0782448798418045,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt#Page-1-42 -->\n+----+----+----+----+----+----+----+----+----+----+----+----+\n | 11 | 10 |  9 |  8 |  7 |  6 |  5 |  4 |  3 |  2 |  1 |  0 |\n +----+----+----+----+----+----+----+----+----+----+----+----+\n | MC |   Color of   | D7 | D6 | D5 | D4 | D3 | D2 | D1 | D0 |\n |flag|  \"11\" pixels |    |    |    |    |    |    |    |    |\n +----+--------------+----+----+----+----+----+----+----+----+\n\ng-access\n\nAddresses\n\n+----+----+----+----+----+----+----+----+----+----+----+----+----+----+\n | 13 | 12 | 11 | 10 |  9 |  8 |  7 |  6 |  5 |  4 |  3 |  2 |  1 |  0 |\n +----+----+----+----+----+----+----+----+----+----+----+----+----+----+\n |CB13|CB12|CB11| D7 | D6 | D5 | D4 | D3 | D2 | D1 | D0 | RC2| RC1| RC0|\n +----+----+----+----+----+----+----+----+----+----+----+----+----+----+\n\nData\n\n+----+----+----+----+----+----+----+----+\n |  7 |  6 |  5 |  4 |  3 |  2 |  1 |  0 |\n +----+----+----+----+----+----+----+----+\n |         8 pixels (1 bit/pixel)        |\n |                                       | MC flag = 0\n | \"0\": Background color 0 ($d021)       |\n | \"1\": Color from bits 8-10 of c-data   |\n +---------------------------------------+\n |         4 pixels (2 bits/pixel)       |\n |                                       |\n | \"00\": Background color 0 ($d021)      | MC flag = 1\n | \"01\": Background color 1 ($d022)      |\n | \"10\": Background color 2 ($d023)      |\n | \"11\": Color from bits 8-10 of c-data  |\n +---------------------------------------+\n\n3.7.3.3. Standard bitmap mode (ECM/BMM/MCM=0/1/0)\n-------------------------------------------------","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt","sourceMtimeMs":1761327824819.5244,"origin":"external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt#Page-1-42"},{"name":"zimmers.net/cbmpics/cbm/c64/vic-ii.txt","language":"asm","vector":[0.029035290703177452,0.0036294113378971815,0,0,-0.029035290703177452,0,0,0.014517645351588726,0,-0.0435529388487339,-0.0871058776974678,0,0.029035290703177452,0.014517645351588726,0,-0.11614116281270981,-0.029035290703177452,0,0.029035290703177452,0,0,0,-0.007258822675794363,0,0,0.014517645351588726,0,0,-0.02177646942436695,0,0,0.0326647013425827,0,-0.014517645351588726,0,0,0,0.007258822675794363,0,0,-0.0435529388487339,0,0.0435529388487339,0.014517645351588726,0,0,-0.007258822675794363,0,0.0725882276892662,0.010888234712183475,0,-0.029035290703177452,-0.010888234712183475,0,0.0871058776974678,0.029035290703177452,0,-0.0435529388487339,-0.02177646942436695,0,0.014517645351588726,0,0,0,-0.02177646942436695,0,0.0435529388487339,0.0326647013425827,0,0,-0.0036294113378971815,0,0,0.0036294113378971815,0,0,-0.029035290703177452,0,0,0.014517645351588726,0,-0.1306588053703308,0,0,0.0435529388487339,0.014517645351588726,0,-0.1451764553785324,-0.11614116281270981,0,0,0.010888234712183475,0,-0.014517645351588726,-0.029035290703177452,0,0.014517645351588726,0.01814705692231655,0,-0.014517645351588726,0,0,0.638776421546936,0.0036294113378971815,0,0,-0.0254058800637722,0,0.014517645351588726,0.014517645351588726,0,-0.0871058776974678,-0.058070581406354904,0,0.029035290703177452,0.014517645351588726,0,-0.029035290703177452,-0.0036294113378971815,0,0,0.0036294113378971815,0,-0.014517645351588726,-0.0326647013425827,0,0.1742117553949356,0,0,-0.11614116281270981,-0.010888234712183475,0,0.014517645351588726,0,0,-0.029035290703177452,-0.0036294113378971815,0,0,0.029035290703177452,0,0,-0.010888234712183475,0,0.029035290703177452,0.0362941138446331,0,0,-0.014517645351588726,0,0.1742117553949356,0.047182347625494,0,-0.0871058776974678,-0.0435529388487339,0,0.014517645351588726,0.010888234712183475,0,-0.014517645351588726,0,0,0.029035290703177452,0.0254058800637722,0,-0.014517645351588726,-0.0036294113378971815,0,0.029035290703177452,0,0,0,-0.007258822675794363,0,0.014517645351588726,0,0,-0.0871058776974678,-0.0689588189125061,0,0.029035290703177452,0.0326647013425827,0,-0.0871058776974678,-0.0725882276892662,0,0.058070581406354904,0,0,-0.0871058776974678,-0.014517645351588726,0,0,0.014517645351588726,0,0,-0.007258822675794363,0,0,0.3230176270008087,0,0,-0.0508117601275444,0,0.1306588053703308,0.010888234712183475,0,0,-0.0508117601275444,0,0,0.02177646942436695,0,0,-0.014517645351588726,0,0.029035290703177452,0,0,-0.029035290703177452,-0.01814705692231655,0,0.014517645351588726,0.094364695250988,0,-0.014517645351588726,-0.0871058776974678,0,0.11614116281270981,0.014517645351588726,0,-0.029035290703177452,-0.014517645351588726,0,0,0,0,-0.058070581406354904,0,0,0.0435529388487339,0.014517645351588726,0,-0.014517645351588726,-0.0036294113378971815,0,0.014517645351588726,0.0871058776974678,0,-0.058070581406354904,-0.0435529388487339,0,0,0.01814705692231655,0,0,-0.007258822675794363,0,0.029035290703177452,0.0326647013425827,0,-0.058070581406354904,-0.014517645351588726,0,0.014517645351588726,0.0362941138446331,0,-0.058070581406354904,-0.010888234712183475,0,0.014517645351588726,0.010888234712183475,0,0,-0.0435529388487339,0,0.014517645351588726,0.0254058800637722,0,-0.014517645351588726,-0.0435529388487339,0,0,0.029035290703177452,0,0,-0.0435529388487339,0,0,0,0,-0.014517645351588726,-0.0326647013425827,0,0.014517645351588726,0.010888234712183475,0,-0.1306588053703308,-0.0362941138446331,0,0,0.0653294026851654,0,-0.014517645351588726,-0.0036294113378971815,0,0,0.0036294113378971815,0,-0.014517645351588726,-0.0036294113378971815,0,0.029035290703177452,0.1742117553949356,0,-0.0435529388487339,-0.014517645351588726,0,0,0.010888234712183475,0,0,-0.029035290703177452,0,0.014517645351588726,0.0653294026851654,0,-0.0871058776974678,-0.02177646942436695,0,0.014517645351588726,0,0,0,-0.0326647013425827,0,0.014517645351588726,0.0653294026851654,0,-0.014517645351588726,-0.0362941138446331,0,0,0.010888234712183475,0,-0.029035290703177452,-0.0362941138446331,0,0,0,0,-0.014517645351588726,0,0,0.0435529388487339,0.02177646942436695,0,0,-0.029035290703177452,0,0,0.0508117601275444,0,-0.029035290703177452,-0.0508117601275444,0,0.029035290703177452,0.010888234712183475,0,0,-0.0036294113378971815,0,0.014517645351588726,0.014517645351588726,0,-0.2032470405101776,-0.010888234712183475,0,0.014517645351588726,0.007258822675794363,0,-0.029035290703177452,0,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt#Page-1-54 -->\nThe sprites can have an arbitrary position on the screen, you can switch\nthem on and off one at a time with the bits of register $d015 (MxE), expand\nthem by the factor 2 in X and/or Y direction with registers $d017/$d01d\n(with the resolution still being 24ÔøΩ21 pixels), choose between standard and\nmulticolor mode with register $d01c (MxMC), set the display priority with\nrespect to the text/bitmap graphics with register $d01b (MxDP) and assign a\ndifferent color to each sprite (registers $d027-$d02e). Besides, the VIC\nhas the ability to detect collisions between sprites among themselves or\nbetween sprites and text/bitmap graphics and to trigger an interrupt on\nsuch collisions (see 3.11.).\n\nThe position of the top left corner of a sprite is specified with the\ncoordinate registers (MxX, MxY) belonging to it. There are 8 bits for the Y\ncoordinate and 9 bits for the X coordinate (the most significant bits of\nall sprites are collected in register $d010).\n\n3.8.1. Memory access and display\n--------------------------------\n\nThe 63 bytes of sprite data necessary for displaying 24ÔøΩ21 pixels are\nstored in memory in a linear fashion: 3 adjacent bytes form one line of the\nsprite.","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt","sourceMtimeMs":1761327824819.5244,"origin":"external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt#Page-1-54"},{"name":"zimmers.net/cbmpics/cbm/c64/vic-ii.txt","language":"asm","vector":[0,0.002333695301786065,0,-0.002333695301786065,-0.003500542836263776,0,0.002333695301786065,0.0005834238254465163,0,0,-0.0011668476508930326,0,0.007001085672527552,0.0005834238254465163,0,-0.00933478120714426,-0.0005834238254465163,0,0.01866956241428852,0.005834238138049841,0,0,-0.0005834238254465163,0,0,0.039089396595954895,0,0,0,0,0.002333695301786065,0.001750271418131888,0,0,-0.0005834238254465163,0,0,0.0011668476508930326,0,0,-0.00466739060357213,0,0,0.002333695301786065,0,0,-0.001750271418131888,0,0.002333695301786065,0.002333695301786065,0,-0.007001085672527552,-0.0011668476508930326,0,0.00466739060357213,0.0029171190690249205,0,-0.002333695301786065,-0.00816793367266655,0,0.002333695301786065,0.002333695301786065,0,-0.007001085672527552,-0.0011668476508930326,0,0.002333695301786065,0.001750271418131888,0,0,-0.005834238138049841,0,0,0,0,0,-0.0029171190690249205,0,0,0,0,-0.014002171345055103,0,0,0,0.0005834238254465163,0,-0.021003257483243942,-0.007584509439766407,0,0,0,0,-0.00933478120714426,-0.002333695301786065,0,0.002333695301786065,0,0,0,-0.002333695301786065,0,0.8424639701843262,0.001750271418131888,0,0,-0.007001085672527552,0,0,0.003500542836263776,0,0,-0.04025624319911003,0,0.014002171345055103,0.00933478120714426,0,-0.00466739060357213,-0.001750271418131888,0,0,0,0,-0.002333695301786065,-0.0005834238254465163,0,0.0163358673453331,0.0011668476508930326,0,-0.0163358673453331,0,0,0.00466739060357213,0.0029171190690249205,0,0,0,0,0.002333695301786065,0,0,0,0,0,0.00466739060357213,0.0011668476508930326,0,-0.011668476276099682,-0.003500542836263776,0,0.025670647621154785,0.0029171190690249205,0,0,-0.003500542836263776,0,0.007001085672527552,0.0011668476508930326,0,0,-0.003500542836263776,0,0.002333695301786065,0.002333695301786065,0,-0.002333695301786065,0,0,0.002333695301786065,0.0005834238254465163,0,-0.007001085672527552,-0.004083966836333275,0,0.00933478120714426,0.0011668476508930326,0,0,-0.007584509439766407,0,0.002333695301786065,0.0005834238254465163,0,0,-0.013418748043477535,0,0.002333695301786065,0,0,-0.002333695301786065,-0.005834238138049841,0,0,0.0011668476508930326,0,-0.002333695301786065,0,0,0.15635758638381958,0.4212319850921631,0,0,-0.003500542836263776,0,0.007001085672527552,0,0,-0.002333695301786065,-0.0011668476508930326,0,0,0.007001085672527552,0,0,-0.0029171190690249205,0,0.00933478120714426,0.0005834238254465163,0,-0.007001085672527552,-0.0011668476508930326,0,0,0.009918204508721828,0,-0.00466739060357213,-0.010501628741621971,0,0.007001085672527552,0.007001085672527552,0,0,0,0,0,0.0011668476508930326,0,0,0,0,0.002333695301786065,0.0029171190690249205,0,0,-0.005834238138049841,0,0,0.012835323810577393,0,-0.002333695301786065,0,0,0,0.003500542836263776,0,0,0,0,0.002333695301786065,0.001750271418131888,0,-0.002333695301786065,-0.0029171190690249205,0,0,0.002333695301786065,0,0,-0.004083966836333275,0,0,0.0052508143708109856,0,-0.00466739060357213,-0.001750271418131888,0,0.002333695301786065,0.001750271418131888,0,-0.028004342690110207,0,0,0,0.0011668476508930326,0,-0.14235541224479675,-0.0011668476508930326,0,0,0,0,-0.007001085672527552,-0.00466739060357213,0,0,0.07817879319190979,0,-0.002333695301786065,-0.0052508143708109856,0,0,0.003500542836263776,0,0,-0.003500542836263776,0,0.011668476276099682,0.0005834238254465163,0,0,0,0,0,0.21528339385986328,0,0,-0.003500542836263776,0,0,0,0,0,-0.002333695301786065,0,0.002333695301786065,0.007001085672527552,0,-0.00933478120714426,-0.0011668476508930326,0,0,0,0,0,-0.0005834238254465163,0,0.00466739060357213,0.0052508143708109856,0,0,-0.004083966836333275,0,0.002333695301786065,0.0011668476508930326,0,-0.0163358673453331,-0.0011668476508930326,0,0.00466739060357213,0.0005834238254465163,0,-0.002333695301786065,0,0,0.002333695301786065,0.002333695301786065,0,-0.011668476276099682,-0.004083966836333275,0,0,0.006417661905288696,0,-0.00466739060357213,0,0,0,0.001750271418131888,0,0,-0.002333695301786065,0,0,0.001750271418131888,0,-0.014002171345055103,-0.014585595577955246,0,0,0.0005834238254465163,0,-0.00466739060357213,-0.07292797416448593,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt#Page-1-60 -->\n+----+----+----+----+----+----+----+----+----+----+----+----+----+----+\n | 13 | 12 | 11 | 10 |  9 |  8 |  7 |  6 |  5 |  4 |  3 |  2 |  1 |  0 |\n +----+----+----+----+----+----+----+----+----+----+----+----+----+----+\n | MP7| MP6| MP5| MP4| MP3| MP2| MP1| MP0| MC5| MC4| MC3| MC2| MC1| MC0|\n +----+----+----+----+----+----+----+----+----+----+----+----+----+----+\n\nData\n\n+----+----+----+----+----+----+----+----+\n |  7 |  6 |  5 |  4 |  3 |  2 |  1 |  0 |\n +----+----+----+----+----+----+----+----+\n |         8 pixels (1 bit/pixel)        |\n |                                       | MxMC = 0\n | \"0\": Transparent                      |\n | \"1\": Sprite color ($d027-$d02e)       |\n +---------------------------------------+\n |         4 pixels (2 bits/pixel)       |\n |                                       |\n | \"00\": Transparent                     | MxMC = 1\n | \"01\": Sprite multicolor 0 ($d025)     |\n | \"10\": Sprite color ($d027-$d02e)      |\n | \"11\": Sprite multicolor 1 ($d026)     |\n +---------------------------------------+\n\n3.8.2. Priority and collision detection\n---------------------------------------\n\nAs soon as several graphics elements (sprites and text/bitmap graphics)\noverlap on the screen, it has to be decided which element is displayed in\nthe foreground. To do this, every element has a priority assigned and only\nthe element with highest priority is displayed.","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt","sourceMtimeMs":1761327824819.5244,"origin":"external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt#Page-1-60"},{"name":"zimmers.net/cbmpics/cbm/c64/vic-ii.txt","language":"asm","vector":[0,0.0008753145230002701,0,-0.0035012580920010805,-0.00437657255679369,0,0.010503774508833885,0.006127201486378908,0,-0.007002516184002161,-0.0017506290460005403,0,0.010503774508833885,0.0035012580920010805,0,-0.01750629022717476,-0.006127201486378908,0,0.010503774508833885,0.00875314511358738,0,0,-0.00875314511358738,0,0.014005032368004322,0.040264468640089035,0,-0.0035012580920010805,0,0,0.014005032368004322,0.014880347065627575,0,0,-0.0026259436272084713,0,0,0,0,-0.0035012580920010805,-0.006127201486378908,0,0.014005032368004322,0.006127201486378908,0,0,-0.0035012580920010805,0,0,0.0026259436272084713,0,-0.010503774508833885,-0.0026259436272084713,0,0.007002516184002161,0.0035012580920010805,0,-0.0035012580920010805,-0.022758176550269127,0,0,0.005251887254416943,0,-0.007002516184002161,-0.0026259436272084713,0,0.0035012580920010805,0.005251887254416943,0,-0.0035012580920010805,-0.00437657255679369,0,0,0.0017506290460005403,0,0,-0.00875314511358738,0,0.010503774508833885,0.005251887254416943,0,-0.024508805945515633,-0.00437657255679369,0,0,0.0035012580920010805,0,-0.007002516184002161,-0.031511321663856506,0,0,0.0035012580920010805,0,-0.0035012580920010805,-0.0026259436272084713,0,0.0035012580920010805,0.0008753145230002701,0,-0.0035012580920010805,-0.0035012580920010805,0,0.8368006944656372,0.006127201486378908,0,-0.0035012580920010805,-0.0035012580920010805,0,0,0.006127201486378908,0,-0.0035012580920010805,-0.036763209849596024,0,0.010503774508833885,0.005251887254416943,0,-0.010503774508833885,0,0,0.010503774508833885,0.009628459811210632,0,-0.0035012580920010805,-0.0026259436272084713,0,0.07352641969919205,0.00875314511358738,0,-0.007002516184002161,0,0,0,0.0035012580920010805,0,0,-0.006127201486378908,0,0.007002516184002161,0.007002516184002161,0,0,0,0,0,0.0026259436272084713,0,-0.007002516184002161,-0.006127201486378908,0,0.04201509803533554,0.0035012580920010805,0,-0.0035012580920010805,-0.0035012580920010805,0,0.0035012580920010805,0.0026259436272084713,0,-0.01750629022717476,-0.00437657255679369,0,0.0035012580920010805,0.0026259436272084713,0,0,-0.0017506290460005403,0,0,0.0008753145230002701,0,-0.007002516184002161,-0.010503774508833885,0,0.0035012580920010805,0.007877830415964127,0,-0.01750629022717476,-0.01312971767038107,0,0.0035012580920010805,0.0017506290460005403,0,0,-0.005251887254416943,0,0,0.0008753145230002701,0,-0.024508805945515633,-0.0035012580920010805,0,0.007002516184002161,0.0026259436272084713,0,0,-0.0035012580920010805,0,0.16105787456035614,0.4184003472328186,0,0,-0.016630975529551506,0,0.03851383924484253,0.0017506290460005403,0,-0.0035012580920010805,-0.0026259436272084713,0,0,0.005251887254416943,0,-0.010503774508833885,-0.006127201486378908,0,0.0035012580920010805,0.007877830415964127,0,-0.007002516184002161,-0.0035012580920010805,0,0.0035012580920010805,0.03938915207982063,0,-0.010503774508833885,-0.007877830415964127,0,0.007002516184002161,0.0026259436272084713,0,-0.007002516184002161,0,0,0,0.007002516184002161,0,-0.0035012580920010805,-0.0008753145230002701,0,0.007002516184002161,0.0035012580920010805,0,-0.0035012580920010805,-0.0035012580920010805,0,0,0.02100754901766777,0,-0.02100754901766777,-0.0026259436272084713,0,0.014005032368004322,0.005251887254416943,0,-0.0035012580920010805,-0.00875314511358738,0,0.014005032368004322,0.0017506290460005403,0,-0.007002516184002161,-0.0026259436272084713,0,0,0.0017506290460005403,0,-0.0035012580920010805,-0.00437657255679369,0,0.0035012580920010805,0.0017506290460005403,0,-0.007002516184002161,-0.010503774508833885,0,0.0035012580920010805,0.0026259436272084713,0,0,-0.0008753145230002701,0,0.0035012580920010805,0,0,-0.11204025894403458,-0.012254402972757816,0,0,0.006127201486378908,0,0,-0.006127201486378908,0,0.010503774508833885,0.08052893728017807,0,-0.0035012580920010805,-0.0017506290460005403,0,0.007002516184002161,0.019256919622421265,0,0,-0.0026259436272084713,0,0.014005032368004322,0.0008753145230002701,0,-0.01750629022717476,-0.006127201486378908,0,0,0.2109507918357849,0,0,-0.00437657255679369,0,0.010503774508833885,0.0017506290460005403,0,-0.0035012580920010805,-0.006127201486378908,0,0,0.006127201486378908,0,-0.007002516184002161,-0.006127201486378908,0,0.010503774508833885,0.0026259436272084713,0,-0.0035012580920010805,-0.0026259436272084713,0,0.0035012580920010805,0.021882863715291023,0,0,-0.0035012580920010805,0,0.0035012580920010805,0,0,-0.04201509803533554,-0.010503774508833885,0,0.010503774508833885,0.00875314511358738,0,-0.0035012580920010805,-0.0017506290460005403,0,0.007002516184002161,0.007002516184002161,0,-0.007002516184002161,-0.005251887254416943,0,0.0035012580920010805,0.010503774508833885,0,-0.007002516184002161,-0.0026259436272084713,0,0.0035012580920010805,0.0026259436272084713,0,-0.007002516184002161,-0.007877830415964127,0,0,0.0026259436272084713,0,-0.0595213882625103,0,0,0.007002516184002161,0.0017506290460005403,0,-0.0035012580920010805,-0.057770758867263794,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt#MxDP1-8 -->\nFor the MBC and MMC interrupts, only the first collision will trigger an\ninterrupt (i.e. if the collision registers $d01e resp. $d01f contained the\nvalue zero before the collision). To trigger further interrupts after a\ncollision, the concerning register has to be cleared first by reading from\nit.\n\nThe bit 7 in the latch $d019 reflects the inverted state of the IRQ output\nof the VIC.\n\n3.13. DRAM refresh\n------------------\n\nThe VIC does five read accesses in every raster line for the refresh of the\ndynamic RAM. An 8 bit refresh counter (REF) is used to generate 256 DRAM\nrow addresses. The counter is reset to $ff in raster line 0 and decremented\nby 1 after each refresh access.\n\nSo the VIC will access addresses $3fff, $3ffe, $3ffd, $3ffc and $3ffb in\nline 0, addresses $3ffa, $3ff9, $3ff8, $3ff7 and $3ff6 in line 1 etc.\n\nRefresh addresses\n\n+----+----+----+----+----+----+----+----+----+----+----+----+----+----+\n | 13 | 12 | 11 | 10 |  9 |  8 |  7 |  6 |  5 |  4 |  3 |  2 |  1 |  0 |\n +----+----+----+----+----+----+----+----+----+----+----+----+----+----+\n |  1 |  1 |  1 |  1 |  1 |  1 |REF7|REF6|REF5|REF4|REF3|REF2|REF1|REF0|\n +----+----+----+----+----+----+----+----+----+----+----+----+----+----+\n\n3.14. Effects/applications\n--------------------------\n\nThe following sections will describe some graphical effects that can be\nachieved by applying the rules and mechanisms of the VIC described in the\nprevious sections.\n\n3.14.1. Hyperscreen\n-------------------","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt","sourceMtimeMs":1761327824819.5244,"origin":"external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt#MxDP1-8"},{"name":"zimmers.net/cbmpics/cbm/c64/vic-ii.txt","language":"asm","vector":[0,0,0,0,-0.044851429760456085,0,0.02990095317363739,0.022425714880228043,0,-0.05980190634727478,-0.01868809573352337,0,0.05980190634727478,0.09717810153961182,0,-0.05980190634727478,-0.03737619146704674,0,0.02990095317363739,0,0,-0.05980190634727478,-0.10465333610773087,0,0.044851429760456085,0,0,0,-0.014950476586818695,0,0,0.0635395273566246,0,-0.014950476586818695,-0.01868809573352337,0,0.014950476586818695,0.0074752382934093475,0,-0.014950476586818695,-0.0074752382934093475,0,0,0.011212857440114021,0,-0.02990095317363739,-0.026163334026932716,0,0.02990095317363739,0.011212857440114021,0,-0.10465333610773087,-0.0037376191467046738,0,0.07475238293409348,0.0074752382934093475,0,-0.014950476586818695,-0.0074752382934093475,0,0.014950476586818695,0.011212857440114021,0,0,-0.0074752382934093475,0,0.05980190634727478,0.022425714880228043,0,-0.044851429760456085,-0.0037376191467046738,0,0.02990095317363739,0,0,0,-0.11960381269454956,0,0.02990095317363739,0.0074752382934093475,0,-0.07475238293409348,-0.03737619146704674,0,0.014950476586818695,0.03363857418298721,0,-0.08970285952091217,-0.23920762538909912,0,0,0.014950476586818695,0,-0.014950476586818695,-0.03737619146704674,0,0.014950476586818695,0.022425714880228043,0,-0.02990095317363739,-0.0074752382934093475,0,0.20930667221546173,0.014950476586818695,0,-0.11960381269454956,-0.02990095317363739,0,0.02990095317363739,0.044851429760456085,0,-0.014950476586818695,-0.03363857418298721,0,0.02990095317363739,0.014950476586818695,0,-0.05980190634727478,-0.03363857418298721,0,0.044851429760456085,0.02990095317363739,0,-0.014950476586818695,-0.0037376191467046738,0,0.20930667221546173,0.04858905076980591,0,-0.02990095317363739,-0.01868809573352337,0,0.05980190634727478,0.0074752382934093475,0,0,-0.05980190634727478,0,0,0,0,0,-0.022425714880228043,0,0.07475238293409348,0.01868809573352337,0,-0.044851429760456085,-0.056064289063215256,0,0.11960381269454956,0.04111381247639656,0,-0.014950476586818695,-0.011212857440114021,0,0,0.011212857440114021,0,-0.014950476586818695,0,0,0.02990095317363739,0.02990095317363739,0,-0.044851429760456085,-0.022425714880228043,0,0.014950476586818695,0.01868809573352337,0,-0.014950476586818695,0,0,0,0.01868809573352337,0,-0.14950476586818695,-0.04111381247639656,0,0.02990095317363739,0.011212857440114021,0,-0.044851429760456085,-0.044851429760456085,0,0,0,0,-0.05980190634727478,-0.03737619146704674,0,0,0.011212857440114021,0,0,-0.03363857418298721,0,0,0.10465333610773087,0,0,-0.17566810548305511,0,0.22425715625286102,0.014950476586818695,0,-0.044851429760456085,-0.026163334026932716,0,0,0.014950476586818695,0,0,-0.02990095317363739,0,0.014950476586818695,0.02990095317363739,0,-0.10465333610773087,-0.022425714880228043,0,0.044851429760456085,0.11960381269454956,0,-0.014950476586818695,-0.02990095317363739,0,0,0.03737619146704674,0,-0.02990095317363739,-0.014950476586818695,0,0.014950476586818695,0.011212857440114021,0,0,0,0,0.05980190634727478,0.03737619146704674,0,-0.014950476586818695,-0.026163334026932716,0,0,0.0635395273566246,0,-0.23920762538909912,-0.011212857440114021,0,0,0,0,0,-0.014950476586818695,0,0.13455429673194885,0.022425714880228043,0,-0.02990095317363739,-0.04858905076980591,0,0.05980190634727478,0.026163334026932716,0,0,-0.011212857440114021,0,0.08970285952091217,0.0037376191467046738,0,-0.02990095317363739,-0.07475238293409348,0,0,0.02990095317363739,0,0,-0.03363857418298721,0,0.05980190634727478,0.0074752382934093475,0,-0.014950476586818695,-0.02990095317363739,0,0,0.0074752382934093475,0,-0.014950476586818695,-0.01868809573352337,0,0.02990095317363739,0.0037376191467046738,0,-0.014950476586818695,-0.022425714880228043,0,0.19435620307922363,0.11212857812643051,0,-0.044851429760456085,-0.026163334026932716,0,0,0.0037376191467046738,0,-0.20930667221546173,-0.0074752382934093475,0,0,0.05980190634727478,0,-0.02990095317363739,-0.08222762495279312,0,0.014950476586818695,0.02990095317363739,0,-0.014950476586818695,-0.011212857440114021,0,0.014950476586818695,0.0074752382934093475,0,-0.014950476586818695,-0.02990095317363739,0,0.014950476586818695,0.01868809573352337,0,0,-0.0037376191467046738,0,0,0.08222762495279312,0,0,-0.014950476586818695,0,0.014950476586818695,0.014950476586818695,0,0,-0.11960381269454956,0,0.014950476586818695,0,0,-0.014950476586818695,0,0,0.014950476586818695,0.08596523851156235,0,0,-0.026163334026932716,0,0,0.05980190634727478,0,-0.11960381269454956,-0.0037376191467046738,0,0.014950476586818695,0.044851429760456085,0,-0.07475238293409348,-0.01868809573352337,0,0,0.0074752382934093475,0,-0.46346476674079895,-0.011212857440114021,0,0,0.03363857418298721,0,-0.07475238293409348,-0.011212857440114021,0],"text":"<!-- Source: external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt#MxDP1-13 -->\nBesides, the access to $d011 to create the Bad Line may not happen until\ncycle 14 of each raster line, or else the RC would be cleared in every line\nand the bitmap display would not be as desired. But this also implies that\nthe first three c-accesses of the VIC in each line do not read valid data,\nbecause the first c-access in cycle 15 requires that BA should already have\ngone low in cycle 12 so that AEC can stay low in cycle 15 (AEC doesn't stay\nlow until three cycles after the negative edge of BA, there is no way\naround that). But as the Bad Line was first created in cycle 14, it's true\nthat BA is low in cycle 15 on the first c-access, but AEC is high and so\nthe internal data bus drivers D0-D7 of the VIC are closed and as the chip\nis manufactured in NMOS technology, it reads the value $ff and not the\nvideo matrix data (the data bus drivers D8-D11 are indeed open, but this is\nexplained in section 3.14.6. in more detail) which is visible as 24 pixel\nwide stripes on the left side of the screen.\n\nPractically you store eight video matrices in memory that are used in the\nfollowing way: In the first raster line the first line of the first matrix,\nin the second line the first line of the second matrix, etc..., in the\neighth line the first line of the eighth matrix, in the ninth line the\nsecond line of the first matrix, etc. With these eight matrices you can\nline-wise cover a complete bitmap.","sourcePath":"external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt","sourceMtimeMs":1761327824819.5244,"origin":"external/zimmers.net/cbmpics/cbm/c64/vic-ii.txt#MxDP1-13"}]}