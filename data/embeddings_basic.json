{"dim":384,"model":"LocalMiniHashEmbedding","records":[{"name":".github/prompts/disassemble-memory-range.prompt.md","language":"basic","vector":[0,0.007161332294344902,0,-0.028645329177379608,-0.028645329177379608,0,0.028645329177379608,0.03580666333436966,0,0,-0.028645329177379608,0,0.028645329177379608,0.04296799376606941,0,-0.057290658354759216,0,0,0.25780797004699707,0,0,0,-0.014322664588689804,0,0,0.014322664588689804,0,0,0,0,0,0.07161332666873932,0,0,0,0,0,0.007161332294344902,0,0,0,0,0.057290658354759216,0,0,-0.028645329177379608,-0.014322664588689804,0,0.028645329177379608,0.07877465337514877,0,-0.028645329177379608,-0.014322664588689804,0,0.057290658354759216,0.014322664588689804,0,0,-0.014322664588689804,0,0,0.007161332294344902,0,0,-0.021483996883034706,0,0,0,0,-0.057290658354759216,0,0,0,0.014322664588689804,0,-0.028645329177379608,-0.028645329177379608,0,0,0.014322664588689804,0,-0.11458131670951843,0,0,0,0,0,-0.057290658354759216,-0.057290658354759216,0,0,0,0,-0.08593598753213882,-0.07161332666873932,0,0,0.007161332294344902,0,0,-0.014322664588689804,0,0.5729066133499146,0.014322664588689804,0,0,0,0,0,0.014322664588689804,0,0,-0.028645329177379608,0,0.057290658354759216,0.12890398502349854,0,-0.028645329177379608,-0.014322664588689804,0,0,0,0,-0.057290658354759216,-0.014322664588689804,0,0.3723892867565155,0,0,-0.028645329177379608,0,0,0,0,0,0,-0.007161332294344902,0,0,0.03580666333436966,0,0,-0.014322664588689804,0,0,0.028645329177379608,0,0,-0.014322664588689804,0,0.057290658354759216,0.028645329177379608,0,0,0,0,0,0,0,0,-0.007161332294344902,0,0.028645329177379608,0.021483996883034706,0,0,-0.03580666333436966,0,0,0.007161332294344902,0,0,-0.021483996883034706,0,0.028645329177379608,0,0,0,-0.06445199251174927,0,0.14322665333747864,0,0,0,-0.028645329177379608,0,0.17187197506427765,0.007161332294344902,0,0,-0.050129327923059464,0,0,0.007161332294344902,0,0,0,0,0,0.2864533066749573,0,0,-0.028645329177379608,0,0.17187197506427765,0,0,0,-0.028645329177379608,0,0.028645329177379608,0.028645329177379608,0,0,-0.021483996883034706,0,0,0.007161332294344902,0,0,-0.028645329177379608,0,0.14322665333747864,0.1933559775352478,0,0,-0.028645329177379608,0,0,0.06445199251174927,0,0,0,0,0.028645329177379608,0,0,-0.028645329177379608,0,0,0,0,0,0,0,0,0,0.028645329177379608,0,-0.057290658354759216,0,0,0,0.014322664588689804,0,0,-0.007161332294344902,0,0,0.021483996883034706,0,0,-0.007161332294344902,0,0,0.014322664588689804,0,-0.057290658354759216,0,0,0.028645329177379608,0.014322664588689804,0,0,0,0,0,0.07161332666873932,0,0,-0.014322664588689804,0,0,0.08593598753213882,0,0,-0.007161332294344902,0,0,0,0,-0.057290658354759216,-0.028645329177379608,0,0,0,0,-0.057290658354759216,-0.014322664588689804,0,0,0.08593598753213882,0,0,-0.021483996883034706,0,0,0.014322664588689804,0,-0.028645329177379608,0,0,0.028645329177379608,0.14322665333747864,0,0,0,0,0.057290658354759216,0.07161332666873932,0,0,0,0,0,0.014322664588689804,0,0,-0.007161332294344902,0,0,0.014322664588689804,0,-0.028645329177379608,-0.028645329177379608,0,0.08593598753213882,0.09309732168912888,0,-0.028645329177379608,-0.007161332294344902,0,0.028645329177379608,0,0,-0.028645329177379608,-0.028645329177379608,0,0,0,0,-0.028645329177379608,0,0,0,0,0,0,0,0,0.028645329177379608,0.014322664588689804,0,-0.028645329177379608,-0.028645329177379608,0,0.028645329177379608,0.014322664588689804,0,0,0,0,0,0.007161332294344902,0,-0.11458131670951843,0,0,0,0,0,-0.11458131670951843,0,0],"text":"<!-- Source: .github/prompts/disassemble-memory-range.prompt.md -->\n---\ndescription: Disassemble memory range template\nmode: agent\n---\n\n<!-- id: disassemble_memory -->\n<!-- keywords: disassemble, decode, memory, dump, range -->\n\nGoal: Inspect a memory range and decode it into 6502 opcodes.\nInput: start address in hex and byte length.\nSteps:\n1. Read the memory range using the REST API.\n2. Decode bytes into opcodes and annotate known vectors (KERNAL, screen, etc.).\n3. Provide safety notes and next steps for the operator.\n","sourcePath":".github/prompts/disassemble-memory-range.prompt.md","sourceMtimeMs":1761171210710.0127},{"name":".github/prompts/generate-petscii-art.prompt.md","language":"basic","vector":[0,0.007781453430652618,0,0,0,0,0,0.031125813722610474,0,0,-0.015562906861305237,0,0.031125813722610474,0.015562906861305237,0,-0.031125813722610474,-0.007781453430652618,0,0.2490065097808838,0,0,0,0,0,0,0,0,0,-0.015562906861305237,0,0.031125813722610474,0.03890726715326309,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.007781453430652618,0,0.031125813722610474,0.015562906861305237,0,-0.1245032548904419,-0.015562906861305237,0,0.06225162744522095,0.007781453430652618,0,-0.031125813722610474,-0.015562906861305237,0,0,0.031125813722610474,0,-0.06225162744522095,-0.015562906861305237,0,0.06225162744522095,0.04668872058391571,0,0,-0.007781453430652618,0,0,0.031125813722610474,0,0,0,0,0,0.06225162744522095,0,-0.031125813722610474,0,0,0,0.015562906861305237,0,-0.031125813722610474,-0.015562906861305237,0,0,0,0,-0.09337744116783142,-0.05447017401456833,0,0,0.007781453430652618,0,0,0,0,0.6225162744522095,0,0,0,0,0,0,0.015562906861305237,0,0,-0.023344360291957855,0,0.031125813722610474,0.1245032548904419,0,-0.09337744116783142,0,0,0.031125813722610474,0,0,-0.031125813722610474,-0.007781453430652618,0,0.3423839509487152,0.015562906861305237,0,0,0,0,0.06225162744522095,0,0,-0.031125813722610474,0,0,0,0,0,0,-0.007781453430652618,0,0.031125813722610474,0.023344360291957855,0,-0.031125813722610474,-0.06225162744522095,0,0.09337744116783142,0.031125813722610474,0,0,-0.015562906861305237,0,0.031125813722610474,0,0,-0.06225162744522095,-0.031125813722610474,0,0.06225162744522095,0.03890726715326309,0,0,-0.007781453430652618,0,0,0,0,0,-0.007781453430652618,0,0.031125813722610474,0.007781453430652618,0,0,-0.023344360291957855,0,0.1245032548904419,0.007781453430652618,0,0,-0.015562906861305237,0,0.06225162744522095,0.015562906861305237,0,-0.031125813722610474,-0.04668872058391571,0,0,0.031125813722610474,0,0,0,0,0,0.31903958320617676,0,0,-0.007781453430652618,0,0.09337744116783142,0,0,0,-0.023344360291957855,0,0,0.015562906861305237,0,0,-0.04668872058391571,0,0,0.015562906861305237,0,-0.031125813722610474,-0.015562906861305237,0,0,0.17897342145442963,0,0,-0.007781453430652618,0,0.031125813722610474,0.09337744116783142,0,0,-0.015562906861305237,0,0.06225162744522095,0,0,0,0,0,0.1245032548904419,0.023344360291957855,0,-0.031125813722610474,-0.015562906861305237,0,0,0.04668872058391571,0,0,0,0,0,0.015562906861305237,0,0,-0.031125813722610474,0,0,0.03890726715326309,0,0,-0.031125813722610474,0,0,0.015562906861305237,0,-0.031125813722610474,-0.007781453430652618,0,0.031125813722610474,0.015562906861305237,0,0,-0.015562906861305237,0,0,0.07781453430652618,0,0,0,0,0,0.031125813722610474,0,-0.031125813722610474,-0.015562906861305237,0,0,0,0,0,-0.007781453430652618,0,0,0,0,-0.031125813722610474,-0.007781453430652618,0,0,0.04668872058391571,0,0,-0.023344360291957855,0,0,0,0,0,0,0,0,0.15562906861305237,0,-0.031125813722610474,-0.015562906861305237,0,0.031125813722610474,0,0,0,0,0,0,0.023344360291957855,0,0,-0.023344360291957855,0,0,0.03890726715326309,0,0,-0.007781453430652618,0,0.031125813722610474,0.14784760773181915,0,-0.031125813722610474,-0.015562906861305237,0,0,0.015562906861305237,0,-0.031125813722610474,-0.007781453430652618,0,0.031125813722610474,0,0,-0.031125813722610474,0,0,0.031125813722610474,0.007781453430652618,0,0,-0.007781453430652618,0,0.06225162744522095,0.023344360291957855,0,0,-0.015562906861305237,0,0.1245032548904419,0.023344360291957855,0,0,-0.015562906861305237,0,0.031125813722610474,0.015562906861305237,0,-0.031125813722610474,0,0,0,0,0,-0.09337744116783142,-0.015562906861305237,0],"text":"<!-- Source: .github/prompts/generate-petscii-art.prompt.md -->\n---\ndescription: Generate PETSCII art template\nmode: agent\n---\n\n<!-- id: generate_petscii_art -->\n<!-- keywords: petscii, art, image, screen -->\n\nGoal: Produce PETSCII imagery or text effects.\nInput: prompt or explicit text plus optional colours.\nSteps:\n1. Retrieve one to three relevant references via RAG.\n2. Create a BASIC program and run it if allowed.\n3. Return the bitmap or BASIC program along with provenance references.\n","sourcePath":".github/prompts/generate-petscii-art.prompt.md","sourceMtimeMs":1761171210711.0127},{"name":".github/prompts/print-text.prompt.md","language":"basic","vector":[0.031009616330266,0.0077524040825665,0,0,0,0,0,0.031009616330266,0,-0.031009616330266,-0.023257210850715637,0,0,0.03876201808452606,0,-0.124038465321064,-0.0077524040825665,0,0.3100961446762085,0,0,0,0,0,0,0.031009616330266,0,0,-0.023257210850715637,0,0,0.031009616330266,0,0,-0.023257210850715637,0,0,0.0077524040825665,0,0,-0.015504808165133,0,0.062019232660532,0.0077524040825665,0,0,0,0,0.031009616330266,0.015504808165133,0,-0.031009616330266,0,0,0.062019232660532,0,0,0,-0.023257210850715637,0,0,0.0077524040825665,0,0,-0.015504808165133,0,0.031009616330266,0,0,0,-0.031009616330266,0,0.09302884340286255,0.0077524040825665,0,0,0,0,0,0.046514421701431274,0,-0.062019232660532,0,0,0,0,0,-0.031009616330266,-0.062019232660532,0,0,0,0,-0.09302884340286255,-0.046514421701431274,0,0.124038465321064,0.031009616330266,0,0,0,0,0.5891826748847961,0,0,-0.031009616330266,-0.015504808165133,0,0,0,0,0,-0.062019232660532,0,0.031009616330266,0.15504807233810425,0,-0.031009616330266,0,0,0,0,0,-0.031009616330266,-0.0077524040825665,0,0.3100961446762085,0,0,0,0,0,0,0,0,-0.031009616330266,0,0,0,0.046514421701431274,0,0,0,0,0,0.015504808165133,0,0,-0.015504808165133,0,0.062019232660532,0.031009616330266,0,0,-0.0077524040825665,0,0.031009616330266,0,0,-0.031009616330266,0,0,0.031009616330266,0.023257210850715637,0,0,0,0,0,0.046514421701431274,0,0,-0.0077524040825665,0,0.031009616330266,0,0,0,-0.03876201808452606,0,0.124038465321064,0,0,-0.031009616330266,-0.031009616330266,0,0.15504807233810425,0,0,-0.031009616330266,-0.046514421701431274,0,0,0.08527643978595734,0,0,0,0,0,0.29459133744239807,0,-0.09302884340286255,-0.046514421701431274,0,0.124038465321064,0,0,-0.09302884340286255,-0.023257210850715637,0,0.031009616330266,0.023257210850715637,0,0,-0.015504808165133,0,0.031009616330266,0,0,0,-0.023257210850715637,0,0,0.15504807233810425,0,0,-0.031009616330266,0,0,0.07752403616905212,0,-0.031009616330266,-0.015504808165133,0,0.031009616330266,0,0,0,0,0,0,0,0,0,0,0,0.031009616330266,0.031009616330266,0,0,0,0,0,0.031009616330266,0,0,-0.015504808165133,0,0,0.023257210850715637,0,0,-0.0077524040825665,0,0,0.015504808165133,0,0,0,0,0.062019232660532,0.015504808165133,0,0,0,0,0,0.06977163255214691,0,0,-0.015504808165133,0,0,0.10078124701976776,0,0,-0.015504808165133,0,0,0,0,0,-0.015504808165133,0,0,0,0,-0.031009616330266,-0.05426682531833649,0,0,0.062019232660532,0,0,-0.06977163255214691,0,0,0.046514421701431274,0,0,0,0,0.062019232660532,0.16280047595500946,0,0,-0.0077524040825665,0,0,0,0,0,0,0,0,0.0077524040825665,0,-0.031009616330266,-0.023257210850715637,0,0,0.015504808165133,0,0,-0.0077524040825665,0,0.031009616330266,0.07752403616905212,0,0,0,0,0,0.015504808165133,0,-0.031009616330266,-0.0077524040825665,0,0,0,0,-0.031009616330266,0,0,0,0,0,-0.062019232660532,0,0,0,0.015504808165133,0,0,0,0,0.09302884340286255,0.03876201808452606,0,0,-0.0077524040825665,0,0,0.0077524040825665,0,-0.124038465321064,0,0,0,0,0,-0.09302884340286255,0,0],"text":"<!-- Source: .github/prompts/print-text.prompt.md -->\n---\ndescription: Print text to Commodore or Epson printers template\nmode: agent\n---\n\n<!-- id: print_text -->\n<!-- keywords: print, printer, device 4, epson, commodore -->\n\nGoal: Print strings on device 4.\nSteps:\n1. Choose the target: `commodore` or `epson`.\n2. Generate BASIC that opens the device and prints using PRINT# on the selected channel.\n3. Optionally add a form feed and close channels when finished.\n","sourcePath":".github/prompts/print-text.prompt.md","sourceMtimeMs":1761171210711.0127},{"name":"AGENTS.md","language":"basic","vector":[0.010037443600594997,0.011919463984668255,0,-0.005018721800297499,-0.007528082933276892,0,0.015056165866553783,0.010037443600594997,0,-0.027602970600128174,-0.03450371325016022,0,0.01254680473357439,0.018820207566022873,0,-0.017565526068210602,-0.027602970600128174,0,0.1856927126646042,0.1060204952955246,0,-0.05771530047059059,-0.008782763034105301,0,0.01254680473357439,0.0069007426500320435,0,-0.022584248334169388,-0.021329566836357117,0,0.030112331733107567,0.08782763034105301,0,-0.005018721800297499,-0.00815542321652174,0,0.0025093609001487494,0.016938185319304466,0,-0.015056165866553783,-0.013801485300064087,0,0.017565526068210602,0.008782763034105301,0,-0.01254680473357439,-0.02070222795009613,0,0.007528082933276892,0.015056165866553783,0,-0.03262169286608696,-0.008782763034105301,0,0.04014977440237999,0.02509360946714878,0,-0.022584248334169388,-0.02383892796933651,0,0.015056165866553783,0.010037443600594997,0,-0.04014977440237999,-0.016938185319304466,0,0.03262169286608696,0.00815542321652174,0,-0.052696578204631805,-0.014428825117647648,0,0.04265913367271423,0.02697562985122204,0,0,-0.03889509290456772,0,0.015056165866553783,0.03262169286608696,0,-0.08280891180038452,-0.006273402366787195,0,0.030112331733107567,0.008782763034105301,0,-0.06775274127721786,-0.05018721893429756,0,0.030112331733107567,0.015056165866553783,0,-0.035131052136421204,-0.007528082933276892,0,0.41655391454696655,0.0069007426500320435,0,-0.020074887201189995,-0.005018721800297499,0,0.24340800940990448,0.013801485300064087,0,-0.017565526068210602,-0.04579583555459976,0,0.007528082933276892,0.013174144551157951,0,-0.010037443600594997,-0.018820207566022873,0,0.005018721800297499,0.0972377359867096,0,-0.015056165866553783,-0.03136701136827469,0,0.020074887201189995,0.007528082933276892,0,-0.02509360946714878,-0.027602970600128174,0,0.24591736495494843,0.021329566836357117,0,-0.0928463563323021,-0.009410103783011436,0,0.017565526068210602,0.003764041466638446,0,-0.017565526068210602,-0.010664783418178558,0,0.01254680473357439,0.009410103783011436,0,-0.022584248334169388,-0.011919463984668255,0,0.017565526068210602,0.014428825117647648,0,-0.015056165866553783,-0.018820207566022873,0,0.20576760172843933,0.025720950216054916,0,-0.03262169286608696,-0.013174144551157951,0,0.017565526068210602,0.008782763034105301,0,-0.04265913367271423,-0.023211589083075523,0,0.05018721893429756,0.022584248334169388,0,-0.005018721800297499,-0.028857650235295296,0,0.05018721893429756,0.02948499098420143,0,-0.027602970600128174,-0.010037443600594997,0,0.01254680473357439,0.011292124167084694,0,-0.010037443600594997,-0.04265913367271423,0,0.030112331733107567,0.017565526068210602,0,-0.007528082933276892,-0.03701307252049446,0,0.02509360946714878,0.02697562985122204,0,-0.05520594120025635,-0.03136701136827469,0,0.40400710701942444,0.2208237648010254,0,-0.010037443600594997,-0.011919463984668255,0,0.022584248334169388,0.12484070658683777,0,-0.04014977440237999,-0.031994350254535675,0,0.26599225401878357,0.008782763034105301,0,-0.01254680473357439,-0.0069007426500320435,0,0.022584248334169388,0.005018721800297499,0,-0.04014977440237999,-0.008782763034105301,0,0.02509360946714878,0.013801485300064087,0,-0.05771530047059059,-0.01944754645228386,0,0.010037443600594997,0.12609538435935974,0,-0.015056165866553783,-0.05081455782055855,0,0.035131052136421204,0.05520594120025635,0,-0.015056165866553783,-0.023211589083075523,0,0.010037443600594997,0.009410103783011436,0,-0.05771530047059059,-0.016938185319304466,0,0.01254680473357439,0.01631084643304348,0,-0.03262169286608696,-0.008782763034105301,0,0.01254680473357439,0.10351113975048065,0,-0.045168496668338776,-0.020074887201189995,0,0.030112331733107567,0.013174144551157951,0,-0.010037443600594997,-0.024466268718242645,0,0.010037443600594997,0.02697562985122204,0,-0.015056165866553783,-0.010664783418178558,0,0.020074887201189995,0.035131052136421204,0,-0.015056165866553783,-0.01944754645228386,0,0.007528082933276892,0.010037443600594997,0,-0.010037443600594997,-0.015056165866553783,0,0.02509360946714878,0.023211589083075523,0,-0.1279774010181427,-0.016938185319304466,0,0.027602970600128174,0.023211589083075523,0,-0.04014977440237999,-0.027602970600128174,0,0.017565526068210602,0.20576760172843933,0,-0.010037443600594997,-0.025720950216054916,0,0.005018721800297499,0.018820207566022873,0,-0.06524338573217392,-0.03701307252049446,0,0.02509360946714878,0.14052420854568481,0,-0.027602970600128174,-0.015056165866553783,0,0.010037443600594997,0.11543060094118118,0,-0.01254680473357439,-0.02509360946714878,0,0.0025093609001487494,0.07339880615472794,0,-0.022584248334169388,-0.033249031752347946,0,0.04265913367271423,0.0069007426500320435,0,-0.010037443600594997,-0.010037443600594997,0,0.022584248334169388,0.018820207566022873,0,-0.007528082933276892,-0.011292124167084694,0,0.005018721800297499,0.010037443600594997,0,-0.01254680473357439,-0.035131052136421204,0,0.02509360946714878,0.06775274127721786,0,-0.010037443600594997,-0.039522435516119,0,0.03262169286608696,0.010664783418178558,0,-0.04014977440237999,-0.02697562985122204,0,0.015056165866553783,0.018192866817116737,0,-0.005018721800297499,-0.010664783418178558,0,0.010037443600594997,0.009410103783011436,0,-0.01254680473357439,-0.011292124167084694,0,0.04767785593867302,0.061479341238737106,0,-0.05520594120025635,-0.015683505684137344,0,0.05018721893429756,0.00815542321652174,0,-0.007528082933276892,-0.015683505684137344,0,0.01254680473357439,0.02509360946714878,0,-0.0928463563323021,-0.06524338573217392,0,0.020074887201189995,0.026348289102315903,0,-0.007528082933276892,-0.02697562985122204,0],"text":"<!-- Source: AGENTS.md -->\n# Agent Integration Guide\n\nThis server exposes a Model Context Protocol (MCP) surface for driving a Commodore 64 (Ultimate 64/Commodore 64 Ultimate) over its REST API. It is designed for agent workflows that need to upload and run programs, inspect memory or screen state, control devices, or retrieve C64 knowledge snippets.\n\n## Configuration Artifacts\n\n- `mcp.json` is the human-maintained project configuration. It declares the server entry point, environment variables, and metadata shipped with the npm package.\n- `mcp-manifest.json` is auto-generated by `npm run manifest` (or `npm run build`). Clients read this manifest to discover available MCP tools. Regenerate it when tool decorators change instead of editing it directly.\n\n## Quick Start\n\n### Run the Server\n\n- Install and configure per the README (“Install” and “Quick start”).\n- Start the server locally:\n\n```bash\nnpm start\n```\n\nThe server listens on `http://localhost:8000` (override with `PORT`).\n\n### Capabilities at a Glance\n\n- **Program runners**: `upload_and_run_basic`, `upload_and_run_asm`, `upload_and_run_program`, `run_prg_file`, `load_prg_file`, `run_crt_file`, `sidplay_file`, `modplay_file`.\n- **Screen & memory**: `read_screen`, `read_memory`, `write_memory`.\n- **System control**: `reset_c64`, `reboot_c64`, `version`, `info`, `pause`, `resume`, `poweroff`, `menu_button`, `debugreg_read`, `debugreg_write`.\n- **Drives & files**: `drives` (list), `drive_mount`, `drive_remove`, `drive_reset`, `drive_on`, `drive_off`, `drive_mode`, `file_info`, `create_d64`, `create_d71`, `create_d81`, `create_dnp`.\n- **SID / music**: `sid_volume`, `sid_reset`, `sid_note_on`, `sid_note_off`, `sid_silence_all`, `music_generate`. For a concise SID overview document, call `GET /knowledge/sid_overview`. For practical SID programming with expressive children's songs, see `data/audio/sid-programming-best-practices.md` and the example `data/basic/examples/audio/alle-meine-entchen-expressive.bas`.\n- **Audio analysis**: `analyze_audio` records and analyzes audio output to verify generated music, detects pitch, notes, and provides feedback for iterative composition.\n- **Knowledge & RAG**: `basic_v2_spec`, `asm_quick_reference`, `rag_retrieve_basic`, `rag_retrieve_asm`, plus `GET /rag/retrieve` for quick experiments.\n\nRefer to `mcp-manifest.json` for the complete tool list and parameter types.\n\n### Use with GitHub Copilot Chat (VS Code)\n\n1. Enable MCP support (Copilot Chat v1.214+): Settings → Extensions → GitHub Copilot → Chat: Experimental: MCP → enable, then restart VS Code.\n1. Add the server under Settings → GitHub Copilot → Experimental → MCP Servers:\n\n```json\n{\n  \"github.copilot.chat.experimental.mcp\": {\n    \"servers\": [\n      {\n        \"name\": \"c64-mcp\",\n        \"url\": \"http://localhost:8000\",\n  \"manifestPath\": \"/absolute/path/to/your/checkout/mcp-manifest.json\",\n        \"type\": \"http\"\n      }\n    ]\n  }\n}\n```\n\n1. Keep `npm start` running. In Copilot Chat, invoke tools by natural language (for example, “Upload and run this BASIC program”, “Read the current screen”, “Write $D020=2”).\n\n### Use with Other MCP Clients\n\n- Point the client at `http://localhost:8000` and load `mcp-manifest.json`.\n- Expose the tools you need to the LLM session; call them with JSON bodies as described in the manifest.\n\n### HTTP Examples (Manual Testing)\n\n```bash\n# Upload and run BASIC\ncurl -s -X POST -H 'Content-Type: application/json' \\\n  -d '{\"program\":\"10 PRINT \\\"HELLO\\\"\\n20 GOTO 10\"}' \\\n  http://localhost:8000/tools/upload_and_run_basic | jq\n\n# Read current screen content (PETSCII→ASCII)\ncurl -s http://localhost:8000/tools/read_screen | jq\n\n# Reset the machine\ncurl -s -X POST http://localhost:8000/tools/reset_c64\n```\n\n### Notes\n\n- Some tools can affect device state (for example, power, reboot, drive operations). Use them deliberately.\n- The server includes a local RAG over examples in `data/` and optional fetched sources; see the README for details.\n- For optimal SID music results, review `data/audio/sid-programming-best-practices.md`, which documents successful approaches for pleasant, musical sounds.\n\n### Audio Feedback Loop Workflow\n\nThe server supports an intelligent audio verification workflow for iterative music composition:\n\n1. **Compose**: Use `music_generate` or `upload_and_run_basic` to create and play SID music.\n2. **Verify**: Use natural language like \"check the music\", \"verify the song\", or \"does it sound right?\"\n3. **Analyze**: The `analyze_audio` tool automatically detects verification requests and records/analyzes audio.\n4. **Feedback**: Get detailed analysis including detected notes, pitch accuracy, and musical feedback.\n5. **Iterate**: Use the feedback to refine your composition.\n\nThe workflow has been proven successful with real hardware testing. For best results, use the triangle wave approach and ADSR settings documented in `data/audio/sid-programming-best-practices.md`.\n\nExample workflow:\n\n```bash\n# Compose a song\ncurl -X POST -H 'Content-Type: application/json' \\\n  -d '{\"request\":\"Generate a simple C major scale melody\"}' \\\n  http://localhost:8000/tools/music_generate\n\n# Verify the output\ncurl -X POST -H 'Content-Type: application/json' \\\n  -d '{\"request\":\"check if the music sounds correct\"}' \\\n  http://localhost:8000/tools/analyze_audio\n```\n\n### Children's Songs and Musical Expression\n\nWhen creating children's songs or simple melodies, the server has proven approaches for musical expression:\n\n**Key Principles for Engaging Melodies:**\n\n- **Varied timing** – not all notes the same length (avoid mechanical feel).\n- **Phrase breathing** – longer pauses between musical phrases (150–200 cycles).\n- **Emphasis patterns** – important notes get longer duration (250–400+ cycles).\n- **Character variation** – each verse or phrase has its own timing personality.\n- **Triangle wave + proper ADSR** – produces warm, pleasant tones.\n\n**Example Request Patterns:**\n\n- \"Create a simple children's song with musical expression\"\n- \"Write a melody that tells a story, not just plays notes\"\n- \"Make a song with proper phrasing and breathing\"\n\n**Reference Implementation:** `data/basic/examples/audio/alle-meine-entchen-expressive.bas` demonstrates these principles in a complete traditional German children's song with proper musical phrasing.\n\n## Personas\n\nUse these focused personas to seed agent context. Each section aligns with `.github/prompts/*.prompt.md` templates and the primer in `data/context/bootstrap.md`.\n\n### BASIC Agent\n\n- **Focus**: Commodore BASIC v2 programs, PETSCII, simple I/O, printing.\n- **Strengths**: Tokenization pitfalls, line management, device I/O (device 4 printers), screen text.\n- **Behaviors**: Produces runnable BASIC with proper tokens; uses RAG to recall examples.\n\n### ASM Agent\n\n- **Focus**: 6502/6510 assembly for C64—raster, sprites, IRQs, memory-mapped I/O.\n- **Strengths**: Zero-page usage, addressing modes, VIC-II/SID/CIA registers, timing.\n- **Behaviors**: Assembles to PRG; uses references for safe raster timing and sprite control.\n\n### SID Composer\n\n- **Focus**: Musical composition for SID—ADSR, waveforms, filters, pattern sequencing.\n- **Strengths**: Expressive timing, phrasing, pleasant tone (triangle or pulse), pitch verification.\n- **Behaviors**: Leverages the audio analysis feedback loop; references best practices.\n\n### Memory Debugger\n\n- **Focus**: Inspect and modify memory, disassemble ranges, verify screen or colour RAM.\n- **Strengths**: Safe PEEK/POKE, address math, hex/decimal conversions, provenance.\n- **Behaviors**: Careful with device state; provides reversible steps.\n\n### Drive Manager\n\n- **Focus**: Mount or create disk images, list drives, manage modes.\n- **Strengths**: D64/D71/D81/DNP creation; IEC concepts; Ultimate menu usage.\n- **Behaviors**: Conservative operations; confirms preconditions.\n\n### VIC Painter\n\n- **Focus**: Drawing with PETSCII and bitmap modes; sprites and raster effects.\n- **Strengths**: VIC-II registers ($D000–$D02E), border/background ($D020/$D021), bitmap/charset setup, sprite multiplexing basics.\n- **Behaviors**: Composes BASIC or ASM to draw images, set colours, position or move sprites; uses raster IRQ for stable timing when needed.\n","sourcePath":"AGENTS.md","sourceMtimeMs":1761342165951.349},{"name":"audio/alle-meine-entchen-expressive.bas","language":"basic","vector":[0,0.005186052061617374,0,0,0,0,0,0.15644590556621552,0,0,-0.036302365362644196,0,0,0.000864342029672116,0,0,-0.038895390927791595,0,0.515147864818573,0.08211249113082886,0,-0.013829472474753857,-0.004321710206568241,0,0,0.003457368118688464,0,-0.003457368118688464,-0.006914736237376928,0,0.017286840826272964,0.07951946556568146,0,0,-0.012965129688382149,0,0,0.017286840826272964,0,0,-0.001728684059344232,0,0,0.001728684059344232,0,-0.07606209814548492,-0.02420157566666603,0,0,0.004321710206568241,0,-0.003457368118688464,0,0,0.013829472474753857,0.07865512371063232,0,-0.003457368118688464,-0.07779078185558319,0,0.006914736237376928,0.001728684059344232,0,-0.003457368118688464,-0.009507762268185616,0,0.027658944949507713,0.005186052061617374,0,0,-0.028523286804556847,0,0.013829472474753857,0,0,-0.003457368118688464,0,0,0,0.001728684059344232,0,-0.006914736237376928,-0.001728684059344232,0,0.010372104123234749,0.001728684059344232,0,-0.013829472474753857,-0.004321710206568241,0,0.15903893113136292,0.003457368118688464,0,0,-0.006914736237376928,0,0,0.000864342029672116,0,0,0,0,0.07606209814548492,0,0,-0.003457368118688464,-0.007779078092426062,0,0,0.000864342029672116,0,0,-0.001728684059344232,0,0,0.25930261611938477,0,-0.020744208246469498,-0.006914736237376928,0,0,0.07692644000053406,0,-0.013829472474753857,-0.019879866391420364,0,0.010372104123234749,0.008643420413136482,0,-0.017286840826272964,-0.000864342029672116,0,0,0.023337233811616898,0,-0.027658944949507713,0,0,0,0.001728684059344232,0,0,-0.038895390927791595,0,0,0,0,0,-0.002593026030808687,0,0.020744208246469498,0.006914736237376928,0,0,-0.002593026030808687,0,0.15212419629096985,0.003457368118688464,0,-0.003457368118688464,-0.001728684059344232,0,0.003457368118688464,0.01469381432980299,0,-0.003457368118688464,0,0,0,0.009507762268185616,0,-0.15212419629096985,-0.03975973278284073,0,0.006914736237376928,0.000864342029672116,0,0,-0.007779078092426062,0,0.010372104123234749,0.006050393916666508,0,0,-0.007779078092426062,0,0.003457368118688464,0.07951946556568146,0,-0.14866682887077332,0,0,0.14175209403038025,0.000864342029672116,0,-0.017286840826272964,0,0,0,0.03803104907274246,0,-0.020744208246469498,-0.002593026030808687,0,0.31807786226272583,0.001728684059344232,0,-0.04494578391313553,-0.000864342029672116,0,0.06914736330509186,0,0,0,-0.010372104123234749,0,0.006914736237376928,0,0,-0.09680630266666412,-0.006914736237376928,0,0.010372104123234749,0.005186052061617374,0,0,-0.008643420413136482,0,0.2938762903213501,0.12878696620464325,0,-0.006914736237376928,-0.017286840826272964,0,0,0,0,-0.003457368118688464,-0.000864342029672116,0,0.013829472474753857,0.004321710206568241,0,-0.10717841237783432,0,0,0,0.010372104123234749,0,0,0,0,0,0.07606209814548492,0,-0.006914736237376928,-0.020744208246469498,0,0.006914736237376928,0.001728684059344232,0,-0.010372104123234749,-0.002593026030808687,0,0,0.003457368118688464,0,-0.020744208246469498,-0.07692644000053406,0,0.003457368118688464,0.005186052061617374,0,0,-0.000864342029672116,0,0,0.012100787833333015,0,-0.031116312369704247,0,0,0.003457368118688464,0.005186052061617374,0,-0.006914736237376928,-0.07519775629043579,0,0.006914736237376928,0.07087604701519012,0,0,-0.010372104123234749,0,0.30770576000213623,0.002593026030808687,0,-0.07260473072528839,-0.013829472474753857,0,0,0.19879865646362305,0,-0.003457368118688464,-0.022472891956567764,0,0.09334893524646759,0.03457368165254593,0,0,0,0,0.006914736237376928,0.022472891956567764,0,-0.003457368118688464,-0.049267493188381195,0,0,0.005186052061617374,0,-0.003457368118688464,0,0,0,0.14693814516067505,0,-0.003457368118688464,-0.008643420413136482,0,0,0,0,0,-0.005186052061617374,0,0.003457368118688464,0.009507762268185616,0,0,-0.05791091546416283,0,0.010372104123234749,0,0,-0.15212419629096985,-0.006914736237376928,0,0.003457368118688464,0,0,-0.017286840826272964,-0.003457368118688464,0,0.003457368118688464,0.003457368118688464,0,-0.003457368118688464,-0.005186052061617374,0,0,0.005186052061617374,0,0,-0.010372104123234749,0,0.003457368118688464,0.03975973278284073,0,0,-0.000864342029672116,0,0,0.000864342029672116,0,-0.003457368118688464,-0.01642249897122383,0,0.006914736237376928,0.001728684059344232,0,-0.003457368118688464,-0.041488416492938995,0],"text":"10 REM ALLE MEINE ENTCHEN - MUSICAL PHRASING\n20 REM WITH PROPER EMPHASIS AND BREATHING\n30 REM USING TRIANGLE WAVE AND PROPER ADSR\n40 REM\n50 POKE 54296,15:REM VOLUME TO MAXIMUM\n60 POKE 54277,17:POKE 54278,240:REM FAST ATTACK, SLOW RELEASE\n70 REM\n80 PRINT \"PLAYING ALLE MEINE ENTCHEN...\"\n90 PRINT \"WITH MUSICAL EXPRESSION!\"\n100 REM\n110 REM ALLE MEINE ENTCHEN (C-D-E-F-G-G) - OPENING PHRASE\n120 POKE 54273,30:POKE 54274,0:POKE 54276,17:FOR I=1 TO 250:NEXT I:POKE 54276,16:FOR I=1 TO 40:NEXT I\n130 POKE 54273,34:POKE 54274,0:POKE 54276,17:FOR I=1 TO 180:NEXT I:POKE 54276,16:FOR I=1 TO 40:NEXT I\n140 POKE 54273,38:POKE 54274,0:POKE 54276,17:FOR I=1 TO 180:NEXT I:POKE 54276,16:FOR I=1 TO 40:NEXT I\n150 POKE 54273,40:POKE 54274,0:POKE 54276,17:FOR I=1 TO 180:NEXT I:POKE 54276,16:FOR I=1 TO 40:NEXT I\n160 POKE 54273,45:POKE 54274,0:POKE 54276,17:FOR I=1 TO 200:NEXT I:POKE 54276,16:FOR I=1 TO 50:NEXT I\n170 POKE 54273,45:POKE 54274,0:POKE 54276,17:FOR I=1 TO 400:NEXT I:POKE 54276,16:FOR I=1 TO 150:NEXT I\n180 REM\n190 REM SCHWIMMEN AUF DEM SEE (A-A-A-A-G) - FLOATING PHRASE\n200 POKE 54273,51:POKE 54274,0:POKE 54276,17:FOR I=1 TO 160:NEXT I:POKE 54276,16:FOR I=1 TO 30:NEXT I\n210 POKE 54273,51:POKE 54274,0:POKE 54276,17:FOR I=1 TO 160:NEXT I:POKE 54276,16:FOR I=1 TO 30:NEXT I\n220 POKE 54273,51:POKE 54274,0:POKE 54276,17:FOR I=1 TO 160:NEXT I:POKE 54276,16:FOR I=1 TO 30:NEXT I\n230 POKE 54273,51:POKE 54274,0:POKE 54276,17:FOR I=1 TO 160:NEXT I:POKE 54276,16:FOR I=1 TO 50:NEXT I\n240 POKE 54273,45:POKE 54274,0:POKE 54276,17:FOR I=1 TO 450:NEXT I:POKE 54276,16:FOR I=1 TO 200:NEXT I\n250 REM\n260 REM KOEPFCHEN IN DAS WASSER (F-F-F-F-E) - DIVING MOTION\n270 POKE 54273,40:POKE 54274,0:POKE 54276,17:FOR I=1 TO 140:NEXT I:POKE 54276,16:FOR I=1 TO 25:NEXT I\n280 POKE 54273,40:POKE 54274,0:POKE 54276,17:FOR I=1 TO 140:NEXT I:POKE 54276,16:FOR I=1 TO 25:NEXT I\n290 POKE 54273,40:POKE 54274,0:POKE 54276,17:FOR I=1 TO 140:NEXT I:POKE 54276,16:FOR I=1 TO 25:NEXT I\n300 POKE 54273,40:POKE 54274,0:POKE 54276,17:FOR I=1 TO 140:NEXT I:POKE 54276,16:FOR I=1 TO 50:NEXT I\n310 POKE 54273,38:POKE 54274,0:POKE 54276,17:FOR I=1 TO 350:NEXT I:POKE 54276,16:FOR I=1 TO 120:NEXT I\n320 REM\n330 REM SCHWAENZCHEN IN DIE HOEH (D-D-D-D-C) - TRIUMPHANT ENDING\n340 POKE 54273,34:POKE 54274,0:POKE 54276,17:FOR I=1 TO 180:NEXT I:POKE 54276,16:FOR I=1 TO 30:NEXT I\n350 POKE 54273,34:POKE 54274,0:POKE 54276,17:FOR I=1 TO 180:NEXT I:POKE 54276,16:FOR I=1 TO 30:NEXT I\n360 POKE 54273,34:POKE 54274,0:POKE 54276,17:FOR I=1 TO 180:NEXT I:POKE 54276,16:FOR I=1 TO 30:NEXT I\n370 POKE 54273,34:POKE 54274,0:POKE 54276,17:FOR I=1 TO 200:NEXT I:POKE 54276,16:FOR I=1 TO 50:NEXT I\n380 POKE 54273,30:POKE 54274,0:POKE 54276,17:FOR I=1 TO 600:NEXT I:POKE 54276,16\n390 REM\n400 POKE 54276,0:PRINT \"ALLE MEINE ENTCHEN COMPLETE!\"\n410 PRINT \"WITH MUSICAL EXPRESSION AND PHRASING!\"","sourcePath":"data/basic/examples/audio/alle-meine-entchen-expressive.bas","sourceMtimeMs":1761081842125.2327},{"name":"audio/c-major-scale-pleasant.bas","language":"basic","vector":[0,0.010819748044013977,0,0,0,0,0,0.15580438077449799,0,0,-0.034623194485902786,0,0,0.002163949655368924,0,0,-0.04111504554748535,0,0.5020363330841064,0.07573823630809784,0,-0.017311597242951393,-0.006491849198937416,0,0,0.004327899310737848,0,-0.008655798621475697,-0.006491849198937416,0,0.008655798621475697,0.0822300910949707,0,0,-0.010819748044013977,0,0,0.038951095193624496,0,0,0,0,0,0.004327899310737848,0,-0.07790219038724899,-0.02380344644188881,0,0,0.006491849198937416,0,-0.008655798621475697,0,0,0.04327899217605591,0.07141034305095673,0,-0.008655798621475697,-0.06708244234323502,0,0.008655798621475697,0.004327899310737848,0,-0.04327899217605591,-0.010819748044013977,0,0.017311597242951393,0.006491849198937416,0,0,-0.03245924413204193,0,0.008655798621475697,0,0,0,-0.004327899310737848,0,0,0.004327899310737848,0,0,-0.010819748044013977,0,0.025967396795749664,0,0,-0.06924638897180557,-0.002163949655368924,0,0.14714857935905457,0,0,-0.008655798621475697,-0.008655798621475697,0,0,0.002163949655368924,0,-0.008655798621475697,0,0,0.025967396795749664,0.002163949655368924,0,0,-0.012983698397874832,0,0.008655798621475697,0,0,0,0,0,0,0.25534605979919434,0,-0.017311597242951393,-0.008655798621475697,0,0,0.07790219038724899,0,-0.025967396795749664,-0.021639496088027954,0,0.025967396795749664,0.004327899310737848,0,-0.08655798435211182,-0.004327899310737848,0,0,0.021639496088027954,0,-0.025967396795749664,0,0,0,0.002163949655368924,0,0,-0.04111504554748535,0,0,0,0,-0.06059059128165245,-0.006491849198937416,0,0.017311597242951393,0.021639496088027954,0,-0.07790219038724899,-0.004327899310737848,0,0.14714857935905457,0.006491849198937416,0,-0.008655798621475697,-0.021639496088027954,0,0.008655798621475697,0.010819748044013977,0,-0.008655798621475697,0,0,0,0.006491849198937416,0,-0.13849277794361115,-0.03245924413204193,0,0.008655798621475697,0.002163949655368924,0,0,-0.004327899310737848,0,0,0.015147647820413113,0,0,-0.038951095193624496,0,0.008655798621475697,0.07357428967952728,0,-0.12983697652816772,-0.004327899310737848,0,0.12983697652816772,0.002163949655368924,0,-0.025967396795749664,-0.004327899310737848,0,0,0.012983698397874832,0,-0.008655798621475697,0,0,0.3289203643798828,0.004327899310737848,0,-0.025967396795749664,-0.002163949655368924,0,0.15580438077449799,0,0,0,-0.008655798621475697,0,0,0,0,-0.09521378576755524,-0.012983698397874832,0,0.008655798621475697,0.012983698397874832,0,0,-0.04327899217605591,0,0.26832976937294006,0.1255090832710266,0,-0.008655798621475697,-0.017311597242951393,0,0,0,0,-0.008655798621475697,-0.002163949655368924,0,0.008655798621475697,0.002163949655368924,0,-0.09521378576755524,-0.030295295640826225,0,0,0.008655798621475697,0,-0.017311597242951393,-0.038951095193624496,0,0,0.07357428967952728,0,-0.04327899217605591,-0.02380344644188881,0,0,0.004327899310737848,0,-0.008655798621475697,-0.006491849198937416,0,0,0.010819748044013977,0,-0.017311597242951393,-0.07141034305095673,0,0.008655798621475697,0.006491849198937416,0,0,-0.010819748044013977,0,0.008655798621475697,0.004327899310737848,0,-0.05193479359149933,0,0,0,0.006491849198937416,0,0,-0.06491848826408386,0,0.017311597242951393,0.06491848826408386,0,0,-0.012983698397874832,0,0.31160876154899597,0.006491849198937416,0,-0.06924638897180557,-0.021639496088027954,0,0,0.20124731957912445,0,-0.017311597242951393,-0.015147647820413113,0,0.08655798435211182,0.07790219038724899,0,0,-0.002163949655368924,0,0.008655798621475697,0.006491849198937416,0,-0.008655798621475697,-0.04760689288377762,0,0,0.006491849198937416,0,-0.008655798621475697,0,0,0,0.13416488468647003,0,0,-0.008655798621475697,0,0.008655798621475697,0,0,0,-0.010819748044013977,0,0.008655798621475697,0.010819748044013977,0,0,-0.06924638897180557,0,0.008655798621475697,0,0,-0.12983697652816772,-0.015147647820413113,0,0.008655798621475697,0,0,-0.017311597242951393,-0.021639496088027954,0,0.008655798621475697,0,0,-0.017311597242951393,-0.019475547596812248,0,0,0.004327899310737848,0,0,-0.02813134528696537,0,0.008655798621475697,0.04111504554748535,0,0,-0.002163949655368924,0,0,0.006491849198937416,0,0,-0.02813134528696537,0,0,0,0,-0.008655798621475697,-0.034623194485902786,0],"text":"10 REM PLEASANT C MAJOR SCALE\n20 REM USES TRIANGLE WAVE AND PROPER ADSR\n30 REM BASED ON REAL HARDWARE TESTING\n40 REM \n50 POKE 54296,15:REM VOLUME TO MAXIMUM\n60 POKE 54277,17:POKE 54278,240:REM FAST ATTACK, SLOW RELEASE\n70 REM\n80 REM LOWER C MAJOR SCALE WITH TRIANGLE WAVE\n90 PRINT \"PLAYING C MAJOR SCALE...\"\n100 REM\n110 REM C (30)\n120 POKE 54273,30:POKE 54274,0:POKE 54276,17:FOR I=1 TO 3000:NEXT I:POKE 54276,16:FOR I=1 TO 500:NEXT I\n130 REM D (34)  \n140 POKE 54273,34:POKE 54274,0:POKE 54276,17:FOR I=1 TO 3000:NEXT I:POKE 54276,16:FOR I=1 TO 500:NEXT I\n150 REM E (38)\n160 POKE 54273,38:POKE 54274,0:POKE 54276,17:FOR I=1 TO 3000:NEXT I:POKE 54276,16:FOR I=1 TO 500:NEXT I\n170 REM F (40)\n180 POKE 54273,40:POKE 54274,0:POKE 54276,17:FOR I=1 TO 3000:NEXT I:POKE 54276,16:FOR I=1 TO 500:NEXT I\n190 REM G (45)\n200 POKE 54273,45:POKE 54274,0:POKE 54276,17:FOR I=1 TO 3000:NEXT I:POKE 54276,16:FOR I=1 TO 500:NEXT I\n210 REM A (51)\n220 POKE 54273,51:POKE 54274,0:POKE 54276,17:FOR I=1 TO 3000:NEXT I:POKE 54276,16:FOR I=1 TO 500:NEXT I\n230 REM B (57)\n240 POKE 54273,57:POKE 54274,0:POKE 54276,17:FOR I=1 TO 3000:NEXT I:POKE 54276,16:FOR I=1 TO 500:NEXT I\n250 REM C (60)\n260 POKE 54273,60:POKE 54274,0:POKE 54276,17:FOR I=1 TO 3000:NEXT I:POKE 54276,16\n270 REM\n280 POKE 54276,0:PRINT \"SMOOTH SCALE COMPLETE\"\n290 PRINT \"SID REGISTERS CLEARED\"","sourcePath":"data/basic/examples/audio/c-major-scale-pleasant.bas","sourceMtimeMs":1761081842082.2336},{"name":"doc/developer.md","language":"basic","vector":[0,0,0,-0.11157210171222687,-0.03486628457903862,0,0,0.03486628457903862,0,-0.11157210171222687,0,0,0,0.03486628457903862,0,0,-0.020919770002365112,0,0.08367908000946045,0,0,-0.027893025428056717,-0.013946512714028358,0,0,0.006973256357014179,0,0,-0.020919770002365112,0,0,0.020919770002365112,0,0,0,0,0,0,0,-0.027893025428056717,0,0,0,0.027893025428056717,0,-0.055786050856113434,-0.020919770002365112,0,0,0.006973256357014179,0,-0.055786050856113434,-0.027893025428056717,0,0.027893025428056717,0.006973256357014179,0,-0.055786050856113434,-0.013946512714028358,0,0,0.020919770002365112,0,0,-0.027893025428056717,0,0,0.055786050856113434,0,0,-0.006973256357014179,0,0,0.020919770002365112,0,0,-0.020919770002365112,0,0.027893025428056717,0,0,-0.11157210171222687,-0.03486628457903862,0,0,0,0,-0.055786050856113434,-0.041839540004730225,0,0.027893025428056717,0.020919770002365112,0,-0.027893025428056717,-0.013946512714028358,0,0.3347163200378418,0,0,-0.08367908000946045,-0.055786050856113434,0,0.44628840684890747,0,0,0,-0.055786050856113434,0,0,0,0,0,-0.006973256357014179,0,0.027893025428056717,0.041839540004730225,0,0,-0.027893025428056717,0,0,0,0,0,0,0,0.39050236344337463,0.006973256357014179,0,-0.027893025428056717,0,0,0,0,0,-0.027893025428056717,-0.020919770002365112,0,0,0,0,0,-0.03486628457903862,0,0,0.006973256357014179,0,0,-0.027893025428056717,0,0.3068232834339142,0.013946512714028358,0,-0.08367908000946045,-0.027893025428056717,0,0,0.006973256357014179,0,-0.055786050856113434,-0.006973256357014179,0,0.027893025428056717,0,0,0,0,0,0,0,0,-0.027893025428056717,-0.006973256357014179,0,0,0.020919770002365112,0,-0.027893025428056717,-0.06275931000709534,0,0.13946513831615448,0.027893025428056717,0,0,-0.027893025428056717,0,0.08367908000946045,0.020919770002365112,0,-0.08367908000946045,-0.020919770002365112,0,0,0.1673581600189209,0,0,-0.055786050856113434,0,0.027893025428056717,0.22314420342445374,0,-0.027893025428056717,-0.020919770002365112,0,0.027893025428056717,0,0,0,-0.006973256357014179,0,0,0.013946512714028358,0,0,-0.027893025428056717,0,0.055786050856113434,0,0,-0.027893025428056717,-0.027893025428056717,0,0.027893025428056717,0.19525118172168732,0,-0.11157210171222687,-0.013946512714028358,0,0.027893025428056717,0.020919770002365112,0,0,-0.020919770002365112,0,0.027893025428056717,0,0,-0.055786050856113434,0,0,0,0,0,-0.027893025428056717,0,0,0.027893025428056717,0.1534116417169571,0,-0.027893025428056717,-0.04881279543042183,0,0,0,0,-0.027893025428056717,-0.041839540004730225,0,0,0.013946512714028358,0,0,-0.013946512714028358,0,0.08367908000946045,0.006973256357014179,0,0,-0.027893025428056717,0,0,0,0,0,-0.013946512714028358,0,0,0.06973256915807724,0,0,0,0,0,0.041839540004730225,0,-0.027893025428056717,-0.041839540004730225,0,0,0.006973256357014179,0,-0.055786050856113434,-0.027893025428056717,0,0,0.013946512714028358,0,0,-0.027893025428056717,0,0.027893025428056717,0.020919770002365112,0,0,-0.006973256357014179,0,0,0.08367908000946045,0,-0.027893025428056717,-0.020919770002365112,0,0,0.13946513831615448,0,-0.027893025428056717,-0.013946512714028358,0,0.027893025428056717,0.013946512714028358,0,0,-0.055786050856113434,0,0,0.020919770002365112,0,0,0,0,0.027893025428056717,0.013946512714028358,0,-0.027893025428056717,-0.027893025428056717,0,0,0.09762559086084366,0,0,-0.020919770002365112,0,0,0.013946512714028358,0,-0.027893025428056717,-0.020919770002365112,0,0.027893025428056717,0,0,-0.027893025428056717,-0.013946512714028358,0,0.11157210171222687,0,0,0,0,0,0.027893025428056717,0.11854536086320877,0,-0.027893025428056717,-0.020919770002365112,0,0,0,0,-0.055786050856113434,-0.013946512714028358,0,0,0.006973256357014179,0,-0.08367908000946045,0,0,0,0,0,-0.027893025428056717,-0.020919770002365112,0],"text":"<!-- Source: doc/developer.md#Project Layout -->\n## Project Layout\n\n```\nsrc/                Core server and client logic\n  basicConverter.ts BASIC text → PRG encoder\n  c64Client.ts      REST client for c64 devices\n  config.ts         Configuration loader\n  index.ts          Fastify MCP endpoint\ndoc/                Reference material and specs\nscripts/            Utility CLI entry points (tests, etc.)\ntest/               Node test runner suites and helpers\n```\n\nKey documentation:\n- `data/basic/basic-spec.md` — BASIC tokenisation rules used by the converter.\n- `doc/rest/c64-rest-api.md` — Summary of the c64 REST API.\n- `doc/rest/c64-openapi.yaml` — Machine-readable API schema for mocking and generators.","sourcePath":"doc/developer.md","sourceMtimeMs":1761341327845.1206},{"name":"doc/developer.md","language":"basic","vector":[0,0,0,-0.09088627249002457,0,0,0,0.015147712081670761,0,-0.015147712081670761,-0.018934641033411026,0,0,0.0037869280204176903,0,0,-0.015147712081670761,0,0.18177254498004913,0.0037869280204176903,0,-0.015147712081670761,-0.0037869280204176903,0,0,0.0075738560408353806,0,0,-0.04923006519675255,0,0.015147712081670761,0,0,-0.030295424163341522,0,0,0,0.0037869280204176903,0,-0.030295424163341522,-0.03786928206682205,0,0.030295424163341522,0.0037869280204176903,0,0,-0.01136078406125307,0,0,0.015147712081670761,0,0,-0.0037869280204176903,0,0,0.0075738560408353806,0,0,0,0,0,0.015147712081670761,0,0,-0.026508497074246407,0,0,0.02272156812250614,0,-0.030295424163341522,-0.026508497074246407,0,0.13632941246032715,0.015147712081670761,0,-0.015147712081670761,-0.0037869280204176903,0,0,0,0,-0.04544313624501228,0,0,0,0.0075738560408353806,0,-0.030295424163341522,-0.06816470623016357,0,0.015147712081670761,0,0,-0.015147712081670761,-0.015147712081670761,0,0.48472678661346436,0,0,0,-0.04544313624501228,0,0.5453176498413086,0,0,0,-0.0075738560408353806,0,0,0.0037869280204176903,0,0,-0.0075738560408353806,0,0.015147712081670761,0.09088627249002457,0,0,-0.0075738560408353806,0,0.030295424163341522,0,0,-0.030295424163341522,-0.0075738560408353806,0,0.24236339330673218,0.0075738560408353806,0,-0.0757385641336441,-0.015147712081670761,0,0,0,0,0,-0.015147712081670761,0,0.015147712081670761,0.015147712081670761,0,-0.015147712081670761,-0.02272156812250614,0,0,0,0,-0.030295424163341522,0,0,0.12118169665336609,0,0,-0.030295424163341522,-0.018934641033411026,0,0,0,0,-0.04544313624501228,0,0,0.015147712081670761,0.0037869280204176903,0,0,-0.015147712081670761,0,0.030295424163341522,0.07195163518190384,0,-0.015147712081670761,-0.0075738560408353806,0,0,0.0075738560408353806,0,0,-0.03408235311508179,0,0.060590848326683044,0.0075738560408353806,0,-0.015147712081670761,-0.018934641033411026,0,0.015147712081670761,0.0075738560408353806,0,-0.060590848326683044,-0.0075738560408353806,0,0.015147712081670761,0.24236339330673218,0,-0.015147712081670761,0,0,0.030295424163341522,0.27644574642181396,0,-0.015147712081670761,-0.03408235311508179,0,0,0,0,0,-0.0075738560408353806,0,0.015147712081670761,0.0075738560408353806,0,0,-0.02272156812250614,0,0.015147712081670761,0.015147712081670761,0,-0.04544313624501228,-0.018934641033411026,0,0.030295424163341522,0.12118169665336609,0,-0.015147712081670761,-0.03786928206682205,0,0,0.04544313624501228,0,0,-0.0037869280204176903,0,0,0.0075738560408353806,0,-0.015147712081670761,-0.0075738560408353806,0,0.030295424163341522,0.0037869280204176903,0,-0.0757385641336441,-0.02272156812250614,0,0.060590848326683044,0.060590848326683044,0,-0.015147712081670761,-0.02272156812250614,0,0,0.0075738560408353806,0,0,-0.02272156812250614,0,0,0.0075738560408353806,0,0,0,0,0,0.015147712081670761,0,0,-0.0075738560408353806,0,0,0,0,0,0,0,0,0.030295424163341522,0,0,-0.015147712081670761,0,0.015147712081670761,0.04165620729327202,0,-0.030295424163341522,-0.03408235311508179,0,0,0.0075738560408353806,0,0,-0.018934641033411026,0,0,0.015147712081670761,0,-0.030295424163341522,-0.015147712081670761,0,0,0.0037869280204176903,0,0,-0.0037869280204176903,0,0,0.12875555455684662,0,0,0,0,0,0.14390327036380768,0,-0.09088627249002457,-0.02272156812250614,0,0,0.015147712081670761,0,0,-0.0075738560408353806,0,0,0.0037869280204176903,0,-0.0757385641336441,0,0,0,0.0075738560408353806,0,0,-0.015147712081670761,0,0.015147712081670761,0.0757385641336441,0,0,-0.05680391937494278,0,0.015147712081670761,0.030295424163341522,0,0,-0.0075738560408353806,0,0.030295424163341522,0.0037869280204176903,0,-0.04544313624501228,-0.0037869280204176903,0,0.030295424163341522,0,0,-0.015147712081670761,-0.0075738560408353806,0,0,0.030295424163341522,0,0,-0.0075738560408353806,0,0,0,0,0,-0.01136078406125307,0,0.015147712081670761,0.0037869280204176903,0,-0.13632941246032715,0,0,0,0.015147712081670761,0,-0.030295424163341522,-0.018934641033411026,0],"text":"<!-- Source: doc/developer.md#Useful npm Scripts -->\n## Useful npm Scripts\n\n- `npm start`: Launch the Fastify MCP server with ts-node.\n- `npm run build`: Type-check TypeScript sources and generate `mcp-manifest.json`.\n- `npm test`: Run tests against the bundled mock server.\n- `npm test -- --real [--base-url=http://host]`: Run against hardware.\n- `npm run check`: Build + mock tests.\n- `npm run c64:tool`: Interactive BASIC/PRG helper.\n- `npm run api:generate`: Regenerate the REST client (`generated/c64/index.ts`).\n\nThe test script is implemented in `scripts/run-tests.mjs`. It sets `C64_TEST_TARGET` for the suites and accepts the following flags:\n- `--mock` (default) to use `test/mockC64Server.mjs`.\n- `--real` to forward requests to real hardware.\n- `--base-url` to override the REST endpoint when using `--real`.","sourcePath":"doc/developer.md","sourceMtimeMs":1761341327845.1206},{"name":"doc/developer.md","language":"basic","vector":[0,0,0,-0.03295447677373886,-0.012357927858829498,0,0,0.012357927858829498,0,-0.04943171143531799,-0.008238619193434715,0,0,0.004119309596717358,0,0,0,0,0.03295447677373886,0.004119309596717358,0,0,0,0,0,0.053551021963357925,0,-0.06590895354747772,-0.012357927858829498,0,0.04943171143531799,0,0,0,0,0,0,0.01647723838686943,0,-0.01647723838686943,-0.004119309596717358,0,0,0.01647723838686943,0,-0.01647723838686943,0,0,0,0,0,0,-0.008238619193434715,0,0.03295447677373886,0,0,0,-0.008238619193434715,0,0,0,0,0,-0.008238619193434715,0,0,0.06178963929414749,0,-0.06590895354747772,-0.004119309596717358,0,0.09886342287063599,0.008238619193434715,0,0,0,0,0,0,0,-0.04943171143531799,-0.012357927858829498,0,0,0,0,-0.11534066498279572,0,0,0.03295447677373886,0,0,-0.18124961853027344,-0.024715855717658997,0,0.19772684574127197,0,0,-0.08238618820905685,-0.01647723838686943,0,0.49431711435317993,0,0,0,-0.11945997178554535,0,0,0.004119309596717358,0,0,-0.008238619193434715,0,0.03295447677373886,0.01647723838686943,0,0,-0.004119309596717358,0,0.01647723838686943,0,0,-0.01647723838686943,-0.037073783576488495,0,0.1647723764181137,0.024715855717658997,0,-0.29659026861190796,0,0,0,0,0,0,-0.008238619193434715,0,0,0,0,0,-0.012357927858829498,0,0,0,0,0,0,0,0.2142040878534317,0.024715855717658997,0,0,0,0,0,0.004119309596717358,0,-0.01647723838686943,0,0,0.01647723838686943,0,0,0,-0.03295447677373886,0,0,0.04943171143531799,0,0,0,0,0,0,0,-0.01647723838686943,-0.02883516624569893,0,0.04943171143531799,0.024715855717658997,0,0,-0.05767033249139786,0,0.01647723838686943,0.01647723838686943,0,0,-0.09062480926513672,0,0.01647723838686943,0.09886342287063599,0,0,-0.04531240463256836,0,0.2142040878534317,0.24715855717658997,0,-0.01647723838686943,0,0,0,0,0,0,-0.004119309596717358,0,0,0.01647723838686943,0,-0.01647723838686943,-0.008238619193434715,0,0.03295447677373886,0.008238619193434715,0,0,-0.020596547052264214,0,0,0.08238618820905685,0,-0.03295447677373886,-0.14829513430595398,0,0,0.008238619193434715,0,-0.03295447677373886,0,0,0,0,0,0,-0.01647723838686943,0,0.04943171143531799,0.012357927858829498,0,-0.01647723838686943,0,0,0.03295447677373886,0.10710204392671585,0,0,-0.004119309596717358,0,0,0,0,-0.01647723838686943,-0.012357927858829498,0,0,0.008238619193434715,0,0,0,0,0,0.008238619193434715,0,-0.06590895354747772,0,0,0,0,0,0,-0.008238619193434715,0,0,0.024715855717658997,0,-0.3789764642715454,-0.01647723838686943,0,0.01647723838686943,0.03295447677373886,0,-0.03295447677373886,0,0,0,0.008238619193434715,0,-0.01647723838686943,-0.012357927858829498,0,0,0.10710204392671585,0,-0.01647723838686943,-0.037073783576488495,0,0,0.008238619193434715,0,0,-0.04531240463256836,0,0,0.04943171143531799,0,0,-0.02883516624569893,0,0,0.1400565207004547,0,-0.01647723838686943,0,0,0,0,0,0,-0.01647723838686943,0,0.03295447677373886,0.008238619193434715,0,0,-0.01647723838686943,0,0.01647723838686943,0.004119309596717358,0,0,-0.004119309596717358,0,0,0.06590895354747772,0,0,-0.08238618820905685,0,0,0.01647723838686943,0,0,0,0,0,0,0,-0.01647723838686943,-0.008238619193434715,0,0.09886342287063599,0,0,0,0,0,0,0.053551021963357925,0,0,-0.03295447677373886,0,0,0,0,-0.01647723838686943,-0.004119309596717358,0,0,0.004119309596717358,0,0,-0.1894882321357727,0,0,0.008238619193434715,0,-0.01647723838686943,-0.01647723838686943,0],"text":"<!-- Source: doc/developer.md#Architecture at a Glance -->\n## Architecture at a Glance\n\n```mermaid\nflowchart TD\n    subgraph MCP Server (src/index.ts)\n      Tools[\"HTTP endpoints /tools/*\"]\n      ClientFacade[\"C64Client facade (src/c64Client.ts)\"]\n    end\n\n    subgraph Generated SDK (generated/c64/)\n    Api[\"Auto-generated REST client\"]\n    end\n\n    Tools --> ClientFacade\n    ClientFacade --> Api\n    Api -->|HTTP| C64API[\"c64 REST API\"]\n\n    ClientFacade --> BasicConverter[\"basicConverter.ts (BASIC → PRG)\"]\n    ClientFacade --> Config[\"config.ts (load C64 host/base URL)\"]\n```\n\n```mermaid\nflowchart LR\n  OpenAPI[\"doc/rest/c64-openapi.yaml\"]\n    Generator[\"npm run api:generate (swagger-typescript-api)\"]\n    Generated[\"generated/c64/index.ts\"]\n    Facade[\"src/c64Client.ts\"]\n\n    OpenAPI --> Generator --> Generated --> Facade\n```","sourcePath":"doc/developer.md","sourceMtimeMs":1761341327845.1206},{"name":"doc/developer.md","language":"basic","vector":[0,0.01879695989191532,0,0,-0.00469923997297883,0,0.01879695989191532,0.014097719453275204,0,-0.01879695989191532,-0.01879695989191532,0,0,0.00469923997297883,0,-0.07518783956766129,-0.00939847994595766,0,0.056390877813100815,0.01879695989191532,0,-0.056390877813100815,-0.00939847994595766,0,0,0.00939847994595766,0,0,-0.01879695989191532,0,0.07518783956766129,0.07988707721233368,0,-0.01879695989191532,-0.00939847994595766,0,0,0.056390877813100815,0,0,-0.00939847994595766,0,0.01879695989191532,0.00469923997297883,0,0,0,0,0,0,0,-0.01879695989191532,-0.01879695989191532,0,0.07518783956766129,0.01879695989191532,0,-0.01879695989191532,-0.028195438906550407,0,0.056390877813100815,0.00939847994595766,0,0,-0.014097719453275204,0,0,0,0,-0.01879695989191532,-0.014097719453275204,0,0.09398479759693146,0,0,0,0,0,0,0.01879695989191532,0,-0.09398479759693146,-0.00469923997297883,0,0.01879695989191532,0.00939847994595766,0,-0.09398479759693146,-0.08458631485700607,0,0,0,0,-0.056390877813100815,-0.028195438906550407,0,0.4511270225048065,0,0,0,-0.00469923997297883,0,0.16917262971401215,0.014097719453275204,0,-0.09398479759693146,-0.00939847994595766,0,0,0,0,0,-0.056390877813100815,0,0.09398479759693146,0.03289467841386795,0,0,-0.028195438906550407,0,0,0,0,0,-0.00939847994595766,0,0.5263148546218872,0.03759391978383064,0,-0.07518783956766129,-0.00939847994595766,0,0,0.00939847994595766,0,0,-0.00469923997297883,0,0,0.014097719453275204,0,-0.01879695989191532,0,0,0.01879695989191532,0.014097719453275204,0,-0.01879695989191532,-0.00939847994595766,0,0.056390877813100815,0.06109011918306351,0,0,-0.014097719453275204,0,0.01879695989191532,0.028195438906550407,0,0,0,0,0.03759391978383064,0,0,-0.01879695989191532,-0.00939847994595766,0,0.09398479759693146,0.05169163644313812,0,0,-0.00469923997297883,0,0.03759391978383064,0.00469923997297883,0,-0.01879695989191532,-0.05169163644313812,0,0.056390877813100815,0.00939847994595766,0,0,-0.05169163644313812,0,0.01879695989191532,0,0,-0.03759391978383064,-0.028195438906550407,0,0,0.23496198654174805,0,0,0,0,0,0.08458631485700607,0,-0.07518783956766129,-0.08928555995225906,0,0.2067665457725525,0,0,-0.03759391978383064,-0.014097719453275204,0,0.03759391978383064,0.04699239879846573,0,0,0,0,0.01879695989191532,0.00469923997297883,0,0,-0.00469923997297883,0,0,0.2631574273109436,0,-0.07518783956766129,-0.056390877813100815,0,0.03759391978383064,0.014097719453275204,0,-0.07518783956766129,-0.014097719453275204,0,0,0,0,-0.01879695989191532,-0.00939847994595766,0,0,0.028195438906550407,0,-0.01879695989191532,-0.014097719453275204,0,0,0.028195438906550407,0,0,0,0,0,0.014097719453275204,0,-0.01879695989191532,0,0,0.03759391978383064,0.01879695989191532,0,0,-0.014097719453275204,0,0,0.0657893568277359,0,0,-0.00469923997297883,0,0,0.03289467841386795,0,-0.01879695989191532,-0.00939847994595766,0,0.01879695989191532,0.028195438906550407,0,0,-0.00469923997297883,0,0,0.03289467841386795,0,-0.07518783956766129,-0.01879695989191532,0,0.01879695989191532,0,0,0,-0.023496199399232864,0,0,0.00469923997297883,0,-0.03759391978383064,-0.06109011918306351,0,0,0.10338327288627625,0,0,-0.03289467841386795,0,0.03759391978383064,0.1315787136554718,0,-0.01879695989191532,0,0,0.01879695989191532,0.05169163644313812,0,0,-0.023496199399232864,0,0.056390877813100815,0,0,0,-0.03759391978383064,0,0.09398479759693146,0.042293157428503036,0,-0.01879695989191532,-0.03759391978383064,0,0,0,0,0,-0.00939847994595766,0,0,0.1315787136554718,0,0,-0.028195438906550407,0,0.01879695989191532,0,0,-0.01879695989191532,0,0,0.01879695989191532,0,0,-0.01879695989191532,-0.014097719453275204,0,0,0.023496199399232864,0,-0.01879695989191532,-0.00469923997297883,0,0,0.014097719453275204,0,0,0,0,0.03759391978383064,0.00469923997297883,0,0,-0.00939847994595766,0,0,0.01879695989191532,0,-0.16917262971401215,-0.00469923997297883,0,0,0.023496199399232864,0,-0.056390877813100815,-0.03759391978383064,0],"text":"<!-- Source: doc/developer.md#Release Workflow -->\n## Release Workflow\n\n1. Create a short-lived branch (for example `release/X.Y.Z`) from the target commit.\n2. Run `npm run release:prepare -- <semver>` to bump versions (`major`, `minor`, `patch`, or explicit like `0.2.0`). This updates `package.json`, `package-lock.json`, `mcp.json`, regenerates `mcp-manifest.json`, and prepends a new section to `CHANGELOG.md` from commit messages since the last tag.\n3. Review and commit the changes, then open a pull request.\n4. After the PR merges, create and push the tag (`git tag X.Y.Z && git push origin X.Y.Z`) or use the GitHub release UI; CI will now see matching versions.\n5. Perform the publish/release steps that rely on the tag (npm publish, GitHub release, etc.).","sourcePath":"doc/developer.md","sourceMtimeMs":1761341327845.1206},{"name":"doc/developer.md","language":"basic","vector":[0,0.005728801712393761,0,-0.011457603424787521,-0.011457603424787521,0,0.011457603424787521,0.014322003349661827,0,-0.034372810274362564,-0.022915206849575043,0,0.045830413699150085,0,0,-0.06874562054872513,-0.008593202568590641,0,0.22915205359458923,0.020050805062055588,0,-0.022915206849575043,-0.011457603424787521,0,0,0.017186405137181282,0,-0.011457603424787521,-0.034372810274362564,0,0,0.040101610124111176,0,-0.022915206849575043,-0.011457603424787521,0,0,0.040101610124111176,0,0,-0.017186405137181282,0,0.022915206849575043,0,0,0,-0.008593202568590641,0,0,0,0,-0.022915206849575043,-0.0028644008561968803,0,0.08020322024822235,0.011457603424787521,0,-0.011457603424787521,-0.022915206849575043,0,0.011457603424787521,0.011457603424787521,0,-0.011457603424787521,-0.022915206849575043,0,0.045830413699150085,0.008593202568590641,0,-0.011457603424787521,-0.017186405137181282,0,0.045830413699150085,0.008593202568590641,0,0,-0.02577960677444935,0,0,0.011457603424787521,0,-0.022915206849575043,-0.014322003349661827,0,0.011457603424787521,0.014322003349661827,0,-0.2176944613456726,-0.0515592135488987,0,0,0.011457603424787521,0,-0.022915206849575043,-0.005728801712393761,0,0.5155921578407288,0,0,0,-0.005728801712393761,0,0.35518568754196167,0.011457603424787521,0,-0.05728801339864731,-0.017186405137181282,0,0.011457603424787521,0.022915206849575043,0,-0.011457603424787521,-0.040101610124111176,0,0.034372810274362564,0.11744043231010437,0,-0.022915206849575043,-0.017186405137181282,0,0.022915206849575043,0,0,0,-0.014322003349661827,0,0.1604064404964447,0,0,-0.24060966074466705,-0.011457603424787521,0,0,0.005728801712393761,0,-0.022915206849575043,-0.005728801712393761,0,0,0.011457603424787521,0,-0.034372810274362564,-0.005728801712393761,0,0.011457603424787521,0.011457603424787521,0,0,-0.017186405137181282,0,0.24060966074466705,0.05442361533641815,0,0,-0.011457603424787521,0,0.022915206849575043,0.005728801712393761,0,-0.022915206849575043,-0.008593202568590641,0,0,0.022915206849575043,0,0,-0.005728801712393761,0,0.022915206849575043,0.022915206849575043,0,-0.034372810274362564,-0.005728801712393761,0,0,0.005728801712393761,0,0,-0.020050805062055588,0,0.05728801339864731,0.005728801712393761,0,-0.022915206849575043,-0.11457602679729462,0,0,0,0,-0.034372810274362564,-0.020050805062055588,0,0.034372810274362564,0.2577960789203644,0,0,-0.005728801712393761,0,0.06874562054872513,0.18332165479660034,0,-0.09166082739830017,-0.05442361533641815,0,0.06874562054872513,0.005728801712393761,0,0,-0.008593202568590641,0,0.045830413699150085,0.017186405137181282,0,-0.022915206849575043,-0.014322003349661827,0,0,0.014322003349661827,0,-0.011457603424787521,-0.008593202568590641,0,0,0.09166082739830017,0,-0.011457603424787521,-0.13749124109745026,0,0.045830413699150085,0.05728801339864731,0,-0.045830413699150085,-0.017186405137181282,0,0,0,0,-0.022915206849575043,-0.020050805062055588,0,0.034372810274362564,0.005728801712393761,0,-0.022915206849575043,-0.005728801712393761,0,0.034372810274362564,0.12030483037233353,0,-0.034372810274362564,0,0,0.045830413699150085,0.017186405137181282,0,-0.011457603424787521,-0.011457603424787521,0,0.011457603424787521,0,0,0,-0.005728801712393761,0,0.045830413699150085,0.03150840848684311,0,0,-0.020050805062055588,0,0,0.0028644008561968803,0,0,-0.0028644008561968803,0,0.022915206849575043,0.040101610124111176,0,0,-0.014322003349661827,0,0,0.011457603424787521,0,-0.022915206849575043,-0.017186405137181282,0,0.011457603424787521,0.017186405137181282,0,-0.022915206849575043,-0.005728801712393761,0,0,0.03723720833659172,0,-0.034372810274362564,-0.10025402903556824,0,0,0.034372810274362564,0,0,-0.005728801712393761,0,0.022915206849575043,0.15181323885917664,0,-0.022915206849575043,-0.011457603424787521,0,0,0.08879642188549042,0,-0.022915206849575043,-0.020050805062055588,0,0.045830413699150085,0.0028644008561968803,0,-0.022915206849575043,-0.008593202568590641,0,0.05728801339864731,0.03150840848684311,0,-0.022915206849575043,-0.028644006699323654,0,0,0.005728801712393761,0,-0.011457603424787521,-0.011457603424787521,0,0,0.05728801339864731,0,0,-0.07161001861095428,0,0,0.017186405137181282,0,-0.022915206849575043,-0.022915206849575043,0,0.022915206849575043,0.022915206849575043,0,-0.034372810274362564,-0.014322003349661827,0,0,0.008593202568590641,0,-0.022915206849575043,0,0,0,0.08306761831045151,0,-0.034372810274362564,0,0,0,0.005728801712393761,0,-0.022915206849575043,-0.005728801712393761,0,0.022915206849575043,0.011457603424787521,0,-0.1031184270977974,0,0,0,0.005728801712393761,0,-0.011457603424787521,-0.020050805062055588,0],"text":"<!-- Source: doc/developer.md#Commit Messages and CHANGELOG Generation -->\n### Commit Messages and CHANGELOG Generation\n\nThis repository uses a light [Conventional Commits](https://www.conventionalcommits.org) style to generate a [`CHANGELOG.md`](https://github.com/chrisgleissner/c64-mcp/blob/main/CHANGELOG.md) (in line with [Keep a Changelog](https://keepachangelog.com/) principles) automatically during `release:prepare`:\n\n- Format: `type(scope)?: subject`\n- Examples:\n  - `feat: add SID triangle-wave example`\n  - `fix(petscii): correct chargen mapping for inverted glyphs`\n  - `docs: clarify health checks (/health vs /tools/version)`\n  - `refactor: extract audio analyzer helpers`\n  - `perf: speed up RAG embedding load`\n  - `chore(ci): pin setup-node to v4`\n- Breaking changes: add a `!` after the type, e.g., `feat!: remove deprecated /tools/info fallback`.\n\nDuring a release prep, the script groups commits since the previous tag into sections:\n\n- Features (`feat`)\n- Bug Fixes (`fix`)\n- Performance (`perf`)\n- Refactoring (`refactor`)\n- Documentation (`docs`)\n- Tests (`test`)\n- Chores (`build`, `ci`, `chore`)\n- Other (non-conforming subjects)\n\nTips:\n\n- Prefer concise subjects; the changelog lists the subject plus the short SHA.\n- Skip “Merge …” subjects; they are filtered automatically.\n- You can run `npm run changelog:generate` to regenerate locally; it prepends a new section for the current `package.json` version using commits since the last tag.","sourcePath":"doc/developer.md","sourceMtimeMs":1761341327845.1206},{"name":"doc/developer.md","language":"basic","vector":[0,0,0,-0.043867841362953186,0,0,0,0.02558957412838936,0,-0.014622613787651062,-0.014622613787651062,0,0,0.0036556534469127655,0,-0.10235829651355743,-0.018278267234563828,0,0.14622613787651062,0.02558957412838936,0,-0.014622613787651062,-0.007311306893825531,0,0,0.018278267234563828,0,0,0,0,0.043867841362953186,0.05117914825677872,0,-0.014622613787651062,-0.018278267234563828,0,0.014622613787651062,0.007311306893825531,0,-0.014622613787651062,0,0,0,0.03290088102221489,0,-0.014622613787651062,-0.0036556534469127655,0,0,0.0036556534469127655,0,0,-0.03290088102221489,0,0.043867841362953186,0.0036556534469127655,0,0,-0.010966960340738297,0,0,0.007311306893825531,0,-0.014622613787651062,-0.05483480170369148,0,0,0.007311306893825531,0,0,-0.014622613787651062,0,0.029245227575302124,0.014622613787651062,0,0,-0.02558957412838936,0,0,0.018278267234563828,0,-0.029245227575302124,0,0,0.014622613787651062,0.021933920681476593,0,-0.08773568272590637,-0.062146108597517014,0,0.014622613787651062,0.029245227575302124,0,-0.014622613787651062,-0.007311306893825531,0,0.5849045515060425,0,0,0,-0.021933920681476593,0,0.2632070481777191,0.0036556534469127655,0,-0.014622613787651062,-0.007311306893825531,0,0,0,0,-0.029245227575302124,-0.05849045515060425,0,0.029245227575302124,0.07311306893825531,0,0,-0.007311306893825531,0,0.029245227575302124,0.0036556534469127655,0,-0.043867841362953186,-0.0036556534469127655,0,0.29245227575302124,0.021933920681476593,0,-0.07311306893825531,-0.007311306893825531,0,0,0.010966960340738297,0,-0.05849045515060425,-0.007311306893825531,0,0,0.0036556534469127655,0,0,-0.007311306893825531,0,0,0.010966960340738297,0,0,-0.007311306893825531,0,0.3070749044418335,0.02558957412838936,0,-0.014622613787651062,0,0,0.014622613787651062,0.014622613787651062,0,0,-0.007311306893825531,0,0,0,0,0,-0.007311306893825531,0,0,0.014622613787651062,0,-0.043867841362953186,-0.0036556534469127655,0,0,0.0036556534469127655,0,0,-0.04021218791604042,0,0.07311306893825531,0.010966960340738297,0,-0.029245227575302124,-0.043867841362953186,0,0.014622613787651062,0.010966960340738297,0,-0.07311306893825531,-0.018278267234563828,0,0.07311306893825531,0.29976359009742737,0,-0.029245227575302124,0,0,0.043867841362953186,0.14257048070430756,0,0,-0.036556534469127655,0,0.1169809103012085,0.010966960340738297,0,-0.014622613787651062,-0.018278267234563828,0,0,0.014622613787651062,0,0,-0.010966960340738297,0,0.014622613787651062,0.014622613787651062,0,-0.014622613787651062,-0.02558957412838936,0,0.014622613787651062,0.14622613787651062,0,-0.07311306893825531,-0.062146108597517014,0,0.014622613787651062,0.036556534469127655,0,-0.014622613787651062,-0.03290088102221489,0,0,0,0,-0.014622613787651062,0,0,0,0.010966960340738297,0,-0.05849045515060425,-0.0036556534469127655,0,0.029245227575302124,0.1571931093931198,0,-0.014622613787651062,-0.010966960340738297,0,0.014622613787651062,0.007311306893825531,0,0,-0.0036556534469127655,0,0,0,0,-0.014622613787651062,0,0,0.029245227575302124,0.010966960340738297,0,0,-0.021933920681476593,0,0,0,0,0,-0.0036556534469127655,0,0.014622613787651062,0.036556534469127655,0,0,-0.014622613787651062,0,0,0.014622613787651062,0,-0.029245227575302124,-0.036556534469127655,0,0,0.036556534469127655,0,0,-0.021933920681476593,0,0.014622613787651062,0.02558957412838936,0,-0.014622613787651062,-0.021933920681476593,0,0,0.062146108597517014,0,0,-0.010966960340738297,0,0.014622613787651062,0.14622613787651062,0,0,0,0,0.014622613787651062,0.07311306893825531,0,0,-0.010966960340738297,0,0.043867841362953186,0.007311306893825531,0,-0.029245227575302124,-0.043867841362953186,0,0.014622613787651062,0.014622613787651062,0,0,-0.007311306893825531,0,0.05849045515060425,0.007311306893825531,0,0,-0.018278267234563828,0,0,0.07311306893825531,0,-0.029245227575302124,-0.04752349480986595,0,0,0.014622613787651062,0,-0.014622613787651062,-0.021933920681476593,0,0.014622613787651062,0.007311306893825531,0,-0.10235829651355743,0,0,0.014622613787651062,0,0,0,-0.007311306893825531,0,0.014622613787651062,0.09139133989810944,0,-0.043867841362953186,-0.0036556534469127655,0,0.029245227575302124,0.0036556534469127655,0,0,0,0,0.043867841362953186,0.007311306893825531,0,-0.1169809103012085,0,0,0.043867841362953186,0,0,-0.014622613787651062,-0.02558957412838936,0],"text":"<!-- Source: doc/developer.md#Retrieval-Augmented Knowledge -->\n## Retrieval-Augmented Knowledge\n\n- RAG subsystem (`src/rag/*`) indexes `.bas`, `.asm`, `.s`, and Markdown files under `data/*`. Changes trigger a background re-index.\n- Selected docs under `doc/` are also indexed (default: `data/assembly/assembly-spec.md`). Extend the set by exporting `RAG_DOC_FILES=path/to/doc1.md,path/to/doc2.md` before a rebuild.\n- Set `RAG_EMBEDDINGS_DIR` to redirect the generated `embeddings_basic.json` / `embeddings_asm.json` files to another directory (the test runner uses `artifacts/test-embeddings` to avoid touching tracked files).\n- External sources: edit `src/rag/sources.csv` (`type,description,link,depth`), then:\n\n```bash\nnpm run rag:fetch\nnpm run rag:rebuild  # or rely on auto-reindex (~15s default)\n```\n\n- Defaults: in-domain only; adaptive rate limiting; no network during build/test.\n- See `data/assembly/assembly-spec.md` for the assembly quick reference surfaced by `asm_quick_reference` and `/rag/retrieve`.","sourcePath":"doc/developer.md","sourceMtimeMs":1761341327845.1206},{"name":"doc/rest/c64-rest-api.md","language":"basic","vector":[0,0,0,-0.039924465119838715,0,0,0,0.0024952790699899197,0,0,-0.009981116279959679,0,0,0.014971674419939518,0,0,0,0,0.21958455443382263,0.019962232559919357,0,-0.009981116279959679,0,0,0,0.0024952790699899197,0,-0.019962232559919357,-0.0349339060485363,0,0.09981115907430649,0.0349339060485363,0,0,-0.012476394884288311,0,0,0,0,-0.05988669767975807,-0.024952789768576622,0,0.009981116279959679,0,0,-0.05988669767975807,0,0,0,0.0024952790699899197,0,-0.019962232559919357,-0.0024952790699899197,0,0.029943348839879036,0.0024952790699899197,0,0,0,0,0,0,0,-0.11977339535951614,-0.0024952790699899197,0,0,0.014971674419939518,0,0,-0.014971674419939518,0,0,0,0,0,-0.004990558139979839,0,0,0,0,-0.049905579537153244,-0.029943348839879036,0,0,0,0,-0.049905579537153244,-0.009981116279959679,0,0.009981116279959679,0.007485837209969759,0,-0.009981116279959679,-0.009981116279959679,0,0.3393579423427582,0,0,-0.029943348839879036,-0.022457512095570564,0,0.22956566512584686,0,0,-0.019962232559919357,-0.004990558139979839,0,0.09981115907430649,0,0,0,-0.15470729768276215,0,0.009981116279959679,0.10979227721691132,0,0,-0.004990558139979839,0,0,0,0,0,-0.014971674419939518,0,0.10979227721691132,0.05489613860845566,0,-0.049905579537153244,0,0,0.029943348839879036,0,0,0,-0.029943348839879036,0,0,0.004990558139979839,0,0,-0.047410301864147186,0,0,0.007485837209969759,0,-0.009981116279959679,-0.009981116279959679,0,0.21958455443382263,0.014971674419939518,0,0,-0.004990558139979839,0,0.009981116279959679,0,0,0,-0.05988669767975807,0,0.0698678120970726,0,0,-0.019962232559919357,0,0,0,0,0,0,0,0,0,0,0,0,-0.024952789768576622,0,0.009981116279959679,0.007485837209969759,0,0,-0.02744806930422783,0,0.019962232559919357,0.004990558139979839,0,0,-0.004990558139979839,0,0.07984893023967743,0.1696789711713791,0,0,-0.029943348839879036,0,0.009981116279959679,0.11478283256292343,0,0,-0.014971674419939518,0,0.07984893023967743,0.049905579537153244,0,-0.049905579537153244,-0.0024952790699899197,0,0,0.004990558139979839,0,-0.05988669767975807,-0.009981116279959679,0,0,0,0,0,0,0,0.009981116279959679,0.05489613860845566,0,-0.009981116279959679,-0.024952789768576622,0,0.009981116279959679,0.0698678120970726,0,0,-0.0024952790699899197,0,0,0,0,-0.009981116279959679,-0.004990558139979839,0,0,0.024952789768576622,0,-0.039924465119838715,-0.004990558139979839,0,0,0.10979227721691132,0,-0.019962232559919357,-0.014971674419939518,0,0,0.007485837209969759,0,0,-0.014971674419939518,0,0,0.0349339060485363,0,0,-0.014971674419939518,0,0.029943348839879036,0.007485837209969759,0,-0.019962232559919357,0,0,0,0,0,-0.009981116279959679,-0.029943348839879036,0,0,0.004990558139979839,0,-0.019962232559919357,0,0,0,0.009981116279959679,0,-0.6188291907310486,0,0,0,0.039924465119838715,0,0,-0.012476394884288311,0,0,0.004990558139979839,0,-0.019962232559919357,-0.012476394884288311,0,0.019962232559919357,0.04241974279284477,0,0,-0.02744806930422783,0,0,0.08483948558568954,0,0,-0.03742918372154236,0,0,0.057391416281461716,0,-0.0698678120970726,-0.004990558139979839,0,0.029943348839879036,0.029943348839879036,0,0,-0.004990558139979839,0,0,0.007485837209969759,0,-0.019962232559919357,0,0,0,0,0,0,-0.004990558139979839,0,0,0.02744806930422783,0,0,-0.03243862837553024,0,0,0.007485837209969759,0,0,-0.009981116279959679,0,0,0,0,0,0,0,0.029943348839879036,0,0,-0.009981116279959679,-0.0024952790699899197,0,0,0.0698678120970726,0,0,-0.009981116279959679,0,0,0.0024952790699899197,0,-0.05988669767975807,-0.004990558139979839,0,0,0.01746695302426815,0,-0.019962232559919357,-0.014971674419939518,0,0,0,0,-0.009981116279959679,-0.3094145953655243,0],"text":"<!-- Source: doc/rest/c64-rest-api.md#Runners -->\n## Runners\n\n| Method | Path | Parameters | Description |\n| --- | --- | --- | --- |\n| PUT | `/v1/runners:sidplay` | `file` (path), `songnr?` | Play a SID file from the device filesystem; optional song selection. |\n| POST | `/v1/runners:sidplay` | `songnr?` | Play an uploaded SID attachment, optional second attachment for song lengths. |\n| PUT | `/v1/runners:modplay` | `file` (path) | Play an Amiga MOD from the filesystem. |\n| POST | `/v1/runners:modplay` | – | Play an uploaded MOD attachment. |\n| PUT | `/v1/runners:load_prg` | `file` (path) | Reset, DMA-load PRG from disk into memory; does **not** run. |\n| POST | `/v1/runners:load_prg` | – | Reset, DMA-load uploaded PRG attachment; does **not** run. |\n| PUT | `/v1/runners:run_prg` | `file` (path) | Reset, DMA-load PRG from disk, then run. |\n| POST | `/v1/runners:run_prg` | – | Reset, DMA-load uploaded PRG attachment, then run. |\n| PUT | `/v1/runners:run_crt` | `file` (path) | Reset with cartridge image from filesystem active. |\n| POST | `/v1/runners:run_crt` | – | Reset with uploaded cartridge attachment active. |","sourcePath":"doc/rest/c64-rest-api.md","sourceMtimeMs":1761341027569.1},{"name":"doc/rest/c64-rest-api.md","language":"basic","vector":[0.009275775402784348,0,0,-0.009275775402784348,-0.006956831552088261,0,0,0.013913663104176521,0,0,0,0,0.018551550805568695,0.002318943850696087,0,-0.009275775402784348,-0.006956831552088261,0,0.11130930483341217,0.011594719253480434,0,-0.018551550805568695,-0.018551550805568695,0,0,0.002318943850696087,0,0,-0.004637887701392174,0,0,0.030146269127726555,0,0,-0.011594719253480434,0,0.018551550805568695,0.002318943850696087,0,-0.009275775402784348,-0.011594719253480434,0,0.009275775402784348,0.002318943850696087,0,-0.009275775402784348,0,0,0,0.004637887701392174,0,-0.018551550805568695,-0.009275775402784348,0,0.018551550805568695,0.004637887701392174,0,0,-0.002318943850696087,0,0,0,0,-0.12986084818840027,0,0,0,0.004637887701392174,0,0,-0.004637887701392174,0,0,0.011594719253480434,0,-0.018551550805568695,-0.02318943850696087,0,0,0.013913663104176521,0,-0.018551550805568695,-0.03246521204710007,0,0.009275775402784348,0.002318943850696087,0,-0.07420620322227478,-0.013913663104176521,0,0.018551550805568695,0.002318943850696087,0,-0.009275775402784348,-0.018551550805568695,0,0.4081341028213501,0.004637887701392174,0,-0.018551550805568695,-0.009275775402784348,0,0.231894388794899,0,0,-0.009275775402784348,-0.002318943850696087,0,0.07420620322227478,0.011594719253480434,0,-0.018551550805568695,-0.15536923706531525,0,0.027827326208353043,0.055654652416706085,0,0,-0.009275775402784348,0,0.018551550805568695,0,0,0,0,0,0.12986084818840027,0,0,-0.07420620322227478,0,0,0.009275775402784348,0.013913663104176521,0,-0.009275775402784348,-0.013913663104176521,0,0.009275775402784348,0.004637887701392174,0,0,-0.006956831552088261,0,0,0.009275775402784348,0,-0.018551550805568695,-0.013913663104176521,0,0.24117015302181244,0.009275775402784348,0,0,-0.004637887701392174,0,0.018551550805568695,0,0,-0.10203352570533752,-0.06493042409420013,0,0.07420620322227478,0,0,0,0,0,0,0.002318943850696087,0,0,-0.009275775402784348,0,0,0,0,-0.027827326208353043,-0.009275775402784348,0,0.055654652416706085,0.004637887701392174,0,0,-0.03710310161113739,0,0.009275775402784348,0.011594719253480434,0,-0.027827326208353043,-0.016232606023550034,0,0.009275775402784348,0.21102389693260193,0,0,-0.02550838142633438,0,0.009275775402784348,0.1159471943974495,0,0,-0.011594719253480434,0,0.04637887701392174,0.03710310161113739,0,-0.009275775402784348,-0.016232606023550034,0,0.009275775402784348,0.016232606023550034,0,-0.009275775402784348,-0.002318943850696087,0,0.009275775402784348,0.009275775402784348,0,0,0,0,0.018551550805568695,0.06956831365823746,0,-0.03710310161113739,-0.03942204639315605,0,0,0.03246521204710007,0,-0.009275775402784348,-0.009275775402784348,0,0,0.004637887701392174,0,0,0,0,0.018551550805568695,0,0,-0.018551550805568695,-0.009275775402784348,0,0.027827326208353043,0.12522296607494354,0,0,-0.002318943850696087,0,0,0.011594719253480434,0,0,-0.053335707634687424,0,0.009275775402784348,0.03710310161113739,0,0,-0.004637887701392174,0,0.009275775402784348,0.004637887701392174,0,-0.018551550805568695,0,0,0,0,0,-0.018551550805568695,-0.04637887701392174,0,0,0.027827326208353043,0,-0.009275775402784348,0,0,0.009275775402784348,0.004637887701392174,0,-0.6029254198074341,-0.018551550805568695,0,0,0.004637887701392174,0,0,-0.004637887701392174,0,0,0.006956831552088261,0,0,-0.018551550805568695,0,0,0.027827326208353043,0,0,-0.006956831552088261,0,0.018551550805568695,0.10667141526937485,0,-0.03710310161113739,-0.009275775402784348,0,0,0.06261148303747177,0,-0.009275775402784348,-0.002318943850696087,0,0.03710310161113739,0.027827326208353043,0,-0.018551550805568695,-0.02318943850696087,0,0,0.006956831552088261,0,-0.018551550805568695,-0.004637887701392174,0,0,0.004637887701392174,0,0,0,0,0,0.041740987449884415,0,0,-0.027827326208353043,0,0.009275775402784348,0.016232606023550034,0,0,-0.002318943850696087,0,0,0.002318943850696087,0,0,0,0,0,0.004637887701392174,0,0,-0.004637887701392174,0,0.009275775402784348,0.06493042409420013,0,-0.04637887701392174,-0.009275775402784348,0,0.027827326208353043,0.004637887701392174,0,-0.06493042409420013,-0.03478415682911873,0,0,0.018551550805568695,0,-0.027827326208353043,-0.004637887701392174,0,0,0.004637887701392174,0,-0.027827326208353043,-0.30146270990371704,0],"text":"<!-- Source: doc/rest/c64-rest-api.md#Machine Control -->\n## Machine Control\n\n| Method | Path | Parameters | Description |\n| --- | --- | --- | --- |\n| PUT | `/v1/machine:reset` | – | Soft reset; config unchanged. |\n| PUT | `/v1/machine:reboot` | – | Restart cartridge + soft reset. |\n| PUT | `/v1/machine:pause` | – | Assert DMA pause (halts CPU, timers continue). |\n| PUT | `/v1/machine:resume` | – | Release DMA pause. |\n| PUT | `/v1/machine:poweroff` | – | Power down (U64 only, response may be absent). |\n| PUT | `/v1/machine:menu_button` | – | Toggle Ultimate menu as if pressing the hardware button. |\n| PUT | `/v1/machine:writemem` | `address`, `data` (hex) | DMA-write ≤ 128 bytes supplied as hex string. |\n| POST | `/v1/machine:writemem` | `address` (hex), binary body | DMA-write attachment beginning at `address`; must not wrap `$FFFF`. |\n| GET | `/v1/machine:readmem` | `address` (hex), `length?` | DMA-read; firmware may return binary or base64/array payload. Default length 256 bytes. |\n| GET | `/v1/machine:debugreg` | – | Read `$D7FF` debug register (U64 only). |\n| PUT | `/v1/machine:debugreg` | `value` (hex) | Write then return the `$D7FF` debug register (U64 only). |","sourcePath":"doc/rest/c64-rest-api.md","sourceMtimeMs":1761341027569.1},{"name":"doc/rest/c64-rest-api.md","language":"basic","vector":[0,0,0,0,-0.006814275868237019,0,0,0.009085701778531075,0,0,-0.013628551736474037,0,0.01817140355706215,0.006814275868237019,0,-0.027257103472948074,0,0,0.11811411380767822,0,0,-0.009085701778531075,-0.009085701778531075,0,0.009085701778531075,0.011357126757502556,0,0,-0.01589997671544552,0,0,0.03179995343089104,0,0,-0.01589997671544552,0,0.11811411380767822,0,0,-0.009085701778531075,-0.004542850889265537,0,0,0.004542850889265537,0,-0.01817140355706215,0,0,0,0,0,0,-0.0022714254446327686,0,0,0.011357126757502556,0,-0.01817140355706215,-0.004542850889265537,0,0,0.004542850889265537,0,-0.09085701406002045,-0.006814275868237019,0,0.08177131414413452,0.004542850889265537,0,0,-0.006814275868237019,0,0.009085701778531075,0.006814275868237019,0,0,-0.004542850889265537,0,0.009085701778531075,0.004542850889265537,0,-0.0363428071141243,-0.013628551736474037,0,0.027257103472948074,0.004542850889265537,0,-0.06359990686178207,-0.013628551736474037,0,0.027257103472948074,0.0022714254446327686,0,-0.009085701778531075,-0.004542850889265537,0,0.3634280562400818,0,0,-0.0363428071141243,-0.0022714254446327686,0,0.17262832820415497,0,0,-0.04542850703001022,-0.004542850889265537,0,0.09994271397590637,0.009085701778531075,0,-0.01817140355706215,-0.15445692837238312,0,0.009085701778531075,0.05905705690383911,0,0,-0.004542850889265537,0,0.09994271397590637,0.006814275868237019,0,-0.05451420694589615,-0.004542850889265537,0,0.1817140281200409,0.0022714254446327686,0,-0.0726856142282486,0,0,0,0.05905705690383911,0,0,-0.009085701778531075,0,0,0.004542850889265537,0,0,-0.01589997671544552,0,0,0.009085701778531075,0,-0.009085701778531075,-0.004542850889265537,0,0.35434234142303467,0,0,-0.009085701778531075,-0.009085701778531075,0,0.009085701778531075,0,0,0,-0.04542850703001022,0,0.0726856142282486,0.04088565707206726,0,-0.009085701778531075,0,0,0.027257103472948074,0.004542850889265537,0,0,-0.0022714254446327686,0,0,0.006814275868237019,0,-0.027257103472948074,-0.02044282853603363,0,0.01817140355706215,0.013628551736474037,0,-0.01817140355706215,-0.03179995343089104,0,0.009085701778531075,0.01589997671544552,0,0,-0.004542850889265537,0,0,0.18398545682430267,0,0,-0.02271425351500511,0,0.009085701778531075,0.08631416410207748,0,-0.009085701778531075,-0.029528528451919556,0,0.05451420694589615,0.049971356987953186,0,-0.027257103472948074,-0.011357126757502556,0,0,0.004542850889265537,0,-0.01817140355706215,0,0,0.01817140355706215,0.049971356987953186,0,0,-0.027257103472948074,0,0,0.09539986401796341,0,-0.009085701778531075,-0.04315708205103874,0,0.04542850703001022,0.029528528451919556,0,0,-0.0022714254446327686,0,0,0.0022714254446327686,0,-0.009085701778531075,0,0,0.01817140355706215,0,0,-0.027257103472948074,-0.004542850889265537,0,0.009085701778531075,0.2066996991634369,0,-0.01817140355706215,-0.006814275868237019,0,0,0.004542850889265537,0,-0.01817140355706215,-0.004542850889265537,0,0.01817140355706215,0.0363428071141243,0,0,-0.004542850889265537,0,0.009085701778531075,0.013628551736474037,0,0,-0.004542850889265537,0,0,0,0,-0.009085701778531075,-0.0363428071141243,0,0,0.029528528451919556,0,-0.01817140355706215,-0.009085701778531075,0,0,0.006814275868237019,0,-0.5633134841918945,0,0,0,0.0022714254446327686,0,0,-0.009085701778531075,0,0.009085701778531075,0.011357126757502556,0,-0.01817140355706215,-0.02044282853603363,0,0.009085701778531075,0.03407137840986252,0,0,-0.01589997671544552,0,0,0.09085701406002045,0,-0.01817140355706215,-0.01817140355706215,0,0.01817140355706215,0.05224278196692467,0,-0.027257103472948074,-0.011357126757502556,0,0.0363428071141243,0.024985678493976593,0,-0.01817140355706215,-0.009085701778531075,0,0,0.024985678493976593,0,0,0,0,0,0.024985678493976593,0,0,-0.01817140355706215,0,0,0.05451420694589615,0,0,-0.03179995343089104,0,0,0.004542850889265537,0,-0.009085701778531075,-0.009085701778531075,0,0.009085701778531075,0,0,-0.009085701778531075,-0.009085701778531075,0,0,0.009085701778531075,0,0,-0.0022714254446327686,0,0.009085701778531075,0.09312843531370163,0,0,-0.0022714254446327686,0,0.009085701778531075,0.0022714254446327686,0,-0.01817140355706215,-0.004542850889265537,0,0,0.01817140355706215,0,-0.027257103472948074,-0.011357126757502556,0,0,0.006814275868237019,0,-0.009085701778531075,-0.28165674209594727,0],"text":"<!-- Source: doc/rest/c64-rest-api.md#Floppy Drives -->\n## Floppy Drives\n\n| Method | Path | Parameters | Description |\n| --- | --- | --- | --- |\n| GET | `/v1/drives` | – | Enumerate internal drives, mounted images, and SoftIEC partitions. |\n| PUT | `/v1/drives/{drive}:mount` | `image` (path), `type?`, `mode?` | Mount existing image (`d64/g64/d71/g71/d81`) with mode `readwrite/readonly/unlinked`. |\n| POST | `/v1/drives/{drive}:mount` | `type?`, `mode?`, attachment | Mount uploaded image attachment. |\n| PUT | `/v1/drives/{drive}:reset` | – | Reset selected drive. |\n| PUT | `/v1/drives/{drive}:remove` | – | Eject mounted image; when mounted in unlinked mode it simply drops the link so further writes are discarded. |\n| PUT | `/v1/drives/{drive}:on` | – | Power on (or reset) the drive. |\n| PUT | `/v1/drives/{drive}:off` | – | Power off the drive (removes it from IEC bus). |\n| PUT | `/v1/drives/{drive}:load_rom` | `file` (path) | Temporarily load ROM image from filesystem (16 K/32 K). |\n| POST | `/v1/drives/{drive}:load_rom` | attachment | Temporarily load ROM from uploaded binary. |\n| PUT | `/v1/drives/{drive}:set_mode` | `mode` (`1541\\|1571\\|1581`) | Change drive mode; resets and reloads ROM. |","sourcePath":"doc/rest/c64-rest-api.md","sourceMtimeMs":1761341027569.1},{"name":"doc/troubleshooting-mcp.md","language":"basic","vector":[0,0.004804583732038736,0,0,-0.028827503323554993,0,0,0.019218334928154945,0,0,-0.009609167464077473,0,0.019218334928154945,0.009609167464077473,0,-0.03843666985630989,-0.019218334928154945,0,0.24983835220336914,0.09609168022871017,0,0,-0.019218334928154945,0,0,0.024022920057177544,0,0,-0.062459588050842285,0,0,0.028827503323554993,0,0,-0.009609167464077473,0,0,0.009609167464077473,0,-0.03843666985630989,-0.014413751661777496,0,0.019218334928154945,0,0,0,-0.04324125498533249,0,0,0,0,0,-0.004804583732038736,0,0,0.009609167464077473,0,0,-0.019218334928154945,0,0,0.004804583732038736,0,0,-0.009609167464077473,0,0.07687333971261978,0.014413751661777496,0,-0.03843666985630989,0,0,0.019218334928154945,0.019218334928154945,0,0,-0.019218334928154945,0,0,0,0,0,0,0,0,0,0,-0.057655006647109985,-0.028827503323554993,0,0.019218334928154945,0.009609167464077473,0,-0.019218334928154945,-0.024022920057177544,0,0.19218336045742035,0,0,-0.07687333971261978,0,0,0.3267117142677307,0,0,-0.019218334928154945,-0.10570084303617477,0,0,0.009609167464077473,0,0,-0.03843666985630989,0,0.019218334928154945,0.12491917610168457,0,0,-0.014413751661777496,0,0,0.004804583732038736,0,0,0,0,0.2690567076206207,0.004804583732038736,0,-0.057655006647109985,-0.004804583732038736,0,0,0,0,0,-0.028827503323554993,0,0,0.019218334928154945,0,-0.019218334928154945,-0.028827503323554993,0,0.057655006647109985,0.004804583732038736,0,0,-0.004804583732038736,0,0.17296501994132996,0,0,-0.03843666985630989,-0.004804583732038736,0,0,0,0,0,-0.004804583732038736,0,0,0.03843666985630989,0,0,-0.019218334928154945,0,0.11531001329421997,0.014413751661777496,0,0,-0.004804583732038736,0,0.019218334928154945,0,0,0,0,0,0.03843666985630989,0.004804583732038736,0,-0.03843666985630989,-0.028827503323554993,0,0,0.019218334928154945,0,-0.03843666985630989,-0.019218334928154945,0,0.3843667209148407,0.09609168022871017,0,0,-0.03843666985630989,0,0.019218334928154945,0.16335585713386536,0,-0.019218334928154945,-0.024022920057177544,0,0.07687333971261978,0.004804583732038736,0,0,-0.009609167464077473,0,0.03843666985630989,0.009609167464077473,0,-0.019218334928154945,0,0,0,0,0,-0.13452835381031036,0,0,0,0.13933293521404266,0,-0.019218334928154945,-0.03843666985630989,0,0,0.062459588050842285,0,-0.03843666985630989,0,0,0.019218334928154945,0,0,-0.03843666985630989,-0.009609167464077473,0,0.019218334928154945,0.028827503323554993,0,0,0,0,0,0.08648250997066498,0,0,-0.028827503323554993,0,0,0.004804583732038736,0,0,0,0,0,0,0,0,0,0,0,0.057655006647109985,0,-0.019218334928154945,0,0,0,0.009609167464077473,0,0,0,0,0,0.03843666985630989,0,-0.4228033721446991,-0.028827503323554993,0,0,0.004804583732038736,0,-0.07687333971261978,-0.019218334928154945,0,0,0.19218336045742035,0,-0.057655006647109985,0,0,0.019218334928154945,0.009609167464077473,0,0,-0.024022920057177544,0,0.019218334928154945,0.04324125498533249,0,-0.019218334928154945,-0.004804583732038736,0,0,0.06726417690515518,0,-0.03843666985630989,-0.028827503323554993,0,0.03843666985630989,0.08167792856693268,0,-0.11531001329421997,-0.07206875830888748,0,0.019218334928154945,0,0,-0.019218334928154945,-0.009609167464077473,0,0,0.004804583732038736,0,-0.019218334928154945,-0.019218334928154945,0,0,0.009609167464077473,0,-0.019218334928154945,-0.019218334928154945,0,0,0.07687333971261978,0,0,-0.014413751661777496,0,0.019218334928154945,0,0,-0.019218334928154945,0,0,0,0,0,0,-0.004804583732038736,0,0.019218334928154945,0.014413751661777496,0,0,0,0,0.03843666985630989,0.04324125498533249,0,-0.03843666985630989,-0.019218334928154945,0,0,0,0,0,0,0,0,0,0,-0.057655006647109985,-0.21140168607234955,0,0.019218334928154945,0.028827503323554993,0,-0.03843666985630989,-0.03843666985630989,0],"text":"<!-- Source: doc/troubleshooting-mcp.md#2. VS Code MCP Configuration Issues -->\n### 2. VS Code MCP Configuration Issues\n\n**Symptoms:**\n\n- VS Code Copilot Chat doesn't recognize MCP tools\n- Commands don't execute\n- No MCP server connection\n\n**HTTP MCP Configuration (Working):**\n\n```json\n{\n  \"github.copilot.chat.experimental.mcp\": {\n    \"servers\": [\n      {\n        \"name\": \"c64-mcp\",\n        \"url\": \"http://localhost:8000\",\n  \"manifestPath\": \"/absolute/path/to/c64-mcp/mcp-manifest.json\",\n        \"type\": \"http\"\n      }\n    ]\n  }\n}\n```\n\n**Key Points:**\n\n- Use **absolute paths** for `manifestPath`\n- Ensure the HTTP server is running on port 8000\n- HTTP MCP requires **manual approval** for each command\n- Add to both workspace `.vscode/settings.json` AND user settings","sourcePath":"doc/troubleshooting-mcp.md","sourceMtimeMs":1761339698903.9153},{"name":"doc/troubleshooting-mcp.md","language":"basic","vector":[0,0.017868859693408012,0,0,0,0,0.02382514625787735,0.017868859693408012,0,-0.02382514625787735,-0.035737719386816025,0,0,0.0059562865644693375,0,-0.0476502925157547,-0.05360657721757889,0,0.30972689390182495,0.02382514625787735,0,-0.07147543877363205,0,0,0,0.0059562865644693375,0,0,-0.017868859693408012,0,0,0.035737719386816025,0,0,0,0,0,0,0,0,0,0,0,0.04169400408864021,0,0,-0.04169400408864021,0,0,0.029781432822346687,0,-0.02382514625787735,-0.011912573128938675,0,0,0,0,0,-0.035737719386816025,0,0,0,0,-0.02382514625787735,0,0,0.0476502925157547,0.0059562865644693375,0,-0.21442630887031555,-0.0059562865644693375,0,0,0.035737719386816025,0,0,-0.059562865644693375,0,0,0.0059562865644693375,0,-0.0476502925157547,0,0,0,0,0,-0.0476502925157547,-0.011912573128938675,0,0,0,0,-0.02382514625787735,-0.029781432822346687,0,0.1906011700630188,0,0,0,0,0,0.35737717151641846,0.011912573128938675,0,0,-0.0953005850315094,0,0,0.0059562865644693375,0,0,-0.0476502925157547,0,0.02382514625787735,0.15486344695091248,0,-0.0476502925157547,-0.035737719386816025,0,0,0.0059562865644693375,0,-0.02382514625787735,-0.0059562865644693375,0,0.1429508775472641,0,0,-0.02382514625787735,-0.017868859693408012,0,0.0476502925157547,0.011912573128938675,0,-0.0476502925157547,0,0,0,0,0,0,0,0,0,0.011912573128938675,0,0,-0.011912573128938675,0,0.35737717151641846,0,0,-0.02382514625787735,0,0,0,0,0,-0.0476502925157547,-0.017868859693408012,0,0,0.035737719386816025,0,0,-0.10721315443515778,0,0.07147543877363205,0,0,-0.07147543877363205,-0.017868859693408012,0,0.07147543877363205,0,0,0,-0.02382514625787735,0,0.02382514625787735,0,0,-0.0953005850315094,-0.02382514625787735,0,0.02382514625787735,0.017868859693408012,0,-0.07147543877363205,-0.04169400408864021,0,0,0.0953005850315094,0,0,0,0,0.02382514625787735,0.17868858575820923,0,-0.07147543877363205,-0.0059562865644693375,0,0.0476502925157547,0,0,0,-0.0059562865644693375,0,0,0.011912573128938675,0,0,-0.02382514625787735,0,0.16677601635456085,0.0059562865644693375,0,-0.11912573128938675,-0.017868859693408012,0,0.02382514625787735,0.07147543877363205,0,-0.0476502925157547,-0.02382514625787735,0,0,0.10125686973333359,0,0,-0.04169400408864021,0,0,0,0,0,0,0,0.02382514625787735,0,0,-0.02382514625787735,0,0,0,0.17868858575820923,0,0,-0.011912573128938675,0,0.02382514625787735,0,0,0,-0.02382514625787735,0,0,0,0,0,-0.0059562865644693375,0,0,0.035737719386816025,0,-0.07147543877363205,-0.035737719386816025,0,0,0.035737719386816025,0,0,-0.0059562865644693375,0,0,0.02382514625787735,0,-0.3335520327091217,-0.10125686973333359,0,0.02382514625787735,0.011912573128938675,0,-0.0953005850315094,-0.035737719386816025,0,0,0,0,0,-0.011912573128938675,0,0.02382514625787735,0.011912573128938675,0,-0.02382514625787735,-0.0476502925157547,0,0,0.02382514625787735,0,-0.07147543877363205,-0.0059562865644693375,0,0.0476502925157547,0.0476502925157547,0,0,0,0,0,0.17273230850696564,0,0,-0.059562865644693375,0,0.0476502925157547,0.011912573128938675,0,0,-0.02382514625787735,0,0,0.0059562865644693375,0,0,-0.011912573128938675,0,0,0,0,-0.02382514625787735,-0.0059562865644693375,0,0.0476502925157547,0.0476502925157547,0,0,-0.017868859693408012,0,0,0.011912573128938675,0,-0.07147543877363205,-0.011912573128938675,0,0,0.011912573128938675,0,0,0,0,0,0,0,0,0,0,0.07147543877363205,0.08934429287910461,0,-0.11912573128938675,-0.04169400408864021,0,0,0,0,0,-0.011912573128938675,0,0,0,0,-0.02382514625787735,-0.16677601635456085,0,0,0.029781432822346687,0,-0.02382514625787735,-0.06551915407180786,0],"text":"<!-- Source: doc/troubleshooting-mcp.md#Working Test Sequence -->\n## Working Test Sequence\n\nOnce the server is running, verify with this sequence:\n\n```bash\n# 1. Test basic BASIC program upload\ncurl -X POST -H 'Content-Type: application/json' \\\n  -d '{\"program\":\"10 PRINT \\\"HELLO WORLD\\\"\\n20 END\"}' \\\n  http://localhost:8000/tools/upload_and_run_basic\n\n# 2. Read C64 screen to verify\ncurl -s http://localhost:8000/tools/read_screen\n\n# 3. Test memory write (change border color to red)\ncurl -X POST -H 'Content-Type: application/json' \\\n  -d '{\"address\":\"$D020\",\"bytes\":\"$02\"}' \\\n  http://localhost:8000/tools/write_memory\n```","sourcePath":"doc/troubleshooting-mcp.md","sourceMtimeMs":1761339698903.9153},{"name":"doc/troubleshooting-mcp.md","language":"basic","vector":[0,0.007522838190197945,0,-0.03009135276079178,-0.03009135276079178,0,0,0.007522838190197945,0,-0.09027405828237534,-0.04513702914118767,0,0,0.022568514570593834,0,-0.06018270552158356,-0.01504567638039589,0,0.03009135276079178,0.18054811656475067,0,0,-0.01504567638039589,0,0,0,0,0,-0.06018270552158356,0,0.03009135276079178,0,0,0,-0.01504567638039589,0,0,0.007522838190197945,0,0,0,0,0,0,0,0,-0.01504567638039589,0,0.03009135276079178,0,0,-0.03009135276079178,-0.007522838190197945,0,0.06018270552158356,0,0,0,-0.03009135276079178,0,0,0.007522838190197945,0,0,-0.022568514570593834,0,0.06018270552158356,0,0,-0.03009135276079178,-0.01504567638039589,0,0,0.01504567638039589,0,0,-0.06770554184913635,0,0,0.01504567638039589,0,-0.03009135276079178,-0.01504567638039589,0,0.03009135276079178,0.007522838190197945,0,0,-0.01504567638039589,0,0.06018270552158356,0.03009135276079178,0,-0.03009135276079178,-0.022568514570593834,0,0,0,0,-0.06018270552158356,-0.01504567638039589,0,0.21063947677612305,0,0,0,-0.04513702914118767,0,0.06018270552158356,0,0,-0.03009135276079178,-0.03009135276079178,0,0.06018270552158356,0.01504567638039589,0,0,-0.01504567638039589,0,0.03009135276079178,0,0,0,-0.01504567638039589,0,0.21063947677612305,0.022568514570593834,0,0,0,0,0,0,0,0,-0.007522838190197945,0,0,0,0,-0.09027405828237534,-0.03009135276079178,0,0.06018270552158356,0.01504567638039589,0,0,-0.022568514570593834,0,0.03009135276079178,0.03009135276079178,0,0,0,0,0,0,0,0,0,0,0,0.03009135276079178,0,-0.06018270552158356,-0.01504567638039589,0,0.06018270552158356,0,0,0,-0.01504567638039589,0,0.03009135276079178,0,0,0,-0.01504567638039589,0,0.03009135276079178,0.01504567638039589,0,-0.06018270552158356,-0.007522838190197945,0,0.03009135276079178,0.03009135276079178,0,-0.06018270552158356,-0.04513702914118767,0,0.7221924662590027,0.007522838190197945,0,0,-0.03761419281363487,0,0,0.10531973838806152,0,0,-0.007522838190197945,0,0,0.04513702914118767,0,0,-0.022568514570593834,0,0.03009135276079178,0.03009135276079178,0,0,-0.007522838190197945,0,0,0.01504567638039589,0,-0.06018270552158356,-0.022568514570593834,0,0,0.10531973838806152,0,-0.03009135276079178,-0.01504567638039589,0,0,0.007522838190197945,0,0,0,0,0.03009135276079178,0,0,-0.09027405828237534,-0.04513702914118767,0,0,0.03761419281363487,0,0,0,0,0.06018270552158356,0.01504567638039589,0,-0.03009135276079178,0,0,0,0,0,0,0,0,0.03009135276079178,0.007522838190197945,0,0,-0.03761419281363487,0,0,0.04513702914118767,0,-0.03009135276079178,0,0,0,0.01504567638039589,0,0,0,0,0,0.03009135276079178,0,0,-0.03761419281363487,0,0,0.01504567638039589,0,0,-0.03009135276079178,0,0,0.36109623312950134,0,-0.06018270552158356,-0.007522838190197945,0,0,0.007522838190197945,0,-0.06018270552158356,0,0,0.03009135276079178,0.01504567638039589,0,0,-0.007522838190197945,0,0,0.01504567638039589,0,-0.03009135276079178,-0.01504567638039589,0,0,0.05265986919403076,0,-0.12036541104316711,-0.03009135276079178,0,0,0.01504567638039589,0,-0.03009135276079178,-0.022568514570593834,0,0,0.01504567638039589,0,0,0,0,0,0.022568514570593834,0,0,-0.04513702914118767,0,0,0.05265986919403076,0,0,0,0,0,0.03009135276079178,0,-0.06018270552158356,-0.01504567638039589,0,0,0,0,0,-0.022568514570593834,0,0,0.03009135276079178,0,-0.03009135276079178,0,0,0,0.007522838190197945,0,-0.12036541104316711,-0.01504567638039589,0,0.03009135276079178,0,0,-0.03009135276079178,0,0,0,0,0,-0.03009135276079178,-0.01504567638039589,0,0.06018270552158356,0.01504567638039589,0,-0.03009135276079178,0,0],"text":"<!-- Source: doc/troubleshooting-mcp.md#Key Lessons Learned -->\n## Key Lessons Learned\n\n1. **HTTP MCP is more reliable** than stdout MCP for hardware control\n2. **Always test with curl first** before troubleshooting VS Code integration\n3. **Check process lists** - servers can appear to start but not actually listen\n4. **Use absolute paths** in VS Code MCP configuration\n5. **Manual approval is required** for each HTTP MCP command\n6. **Server logs are crucial** - watch for connectivity messages and errors","sourcePath":"doc/troubleshooting-mcp.md","sourceMtimeMs":1761339698903.9153},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.081.hail_of_barbs.bas","language":"basic","vector":[0,0,0,0,-0.004898783750832081,0,0.03919027000665665,0.019595135003328323,0,0,-0.019595135003328323,0,0,0.019595135003328323,0,-0.019595135003328323,-0.004898783750832081,0,0.09797567129135132,0.04898783564567566,0,-0.03919027000665665,-0.04898783564567566,0,0,0.009797567501664162,0,0,-0.009797567501664162,0,0.03919027000665665,0.20085012912750244,0,-0.05878540128469467,-0.004898783750832081,0,0,0.004898783750832081,0,0,-0.02449391782283783,0,0,0.009797567501664162,0,-0.019595135003328323,-0.009797567501664162,0,0,0,0,0,0,0,0,0,0,0,-0.019595135003328323,0,0,0,0,-0.03919027000665665,0,0,0,0,0,0,-0.029392700642347336,0,0.019595135003328323,0,0,0,0,0,0,0.004898783750832081,0,-0.019595135003328323,0,0,0,0,0,-0.05878540128469467,-0.019595135003328323,0,0.019595135003328323,0,0,-0.11757080256938934,-0.02449391782283783,0,0,0,0,0,-0.009797567501664162,0,0,0.019595135003328323,0,0,0,0,0,0,0,0,-0.009797567501664162,0,0,0.04898783564567566,0,-0.05878540128469467,-0.019595135003328323,0,0,0.009797567501664162,0,0,-0.009797567501664162,0,0,0.029392700642347336,0,-0.05878540128469467,-0.029392700642347336,0,0.019595135003328323,0.014696350321173668,0,0,-0.019595135003328323,0,0,0,0,0,-0.009797567501664162,0,0.03919027000665665,0,0,-0.0783805400133133,0,0,0,0,0,0,0,0,0.019595135003328323,0,0,0,-0.02449391782283783,0,0,0,0,-0.019595135003328323,0,0,0,0.009797567501664162,0,-0.019595135003328323,-0.009797567501664162,0,0,0,0,-0.019595135003328323,-0.009797567501664162,0,0,0,0,0,-0.03429148346185684,0,0,0.009797567501664162,0,-0.019595135003328323,-0.05878540128469467,0,0.0783805400133133,0,0,-0.03919027000665665,0,0,0.03919027000665665,0,0,-0.03919027000665665,-0.004898783750832081,0,0.8034005165100098,0,0,-0.019595135003328323,-0.009797567501664162,0,0.019595135003328323,0,0,-0.09797567129135132,-0.029392700642347336,0,0.03919027000665665,0.009797567501664162,0,0,0,0,0,0,0,0,-0.03429148346185684,0,0,0.03429148346185684,0,0,-0.009797567501664162,0,0,0,0,0,0,0,0,0.029392700642347336,0,-0.0783805400133133,-0.053886618465185165,0,0,0,0,0,0,0,0.019595135003328323,0.009797567501664162,0,0,-0.004898783750832081,0,0,0,0,-0.03919027000665665,-0.009797567501664162,0,0,0,0,-0.019595135003328323,-0.009797567501664162,0,0,0,0,-0.03919027000665665,-0.019595135003328323,0,0,0,0,0,0,0,0,0.004898783750832081,0,0,-0.009797567501664162,0,0,0.03919027000665665,0,0,-0.02449391782283783,0,0.03919027000665665,0.019595135003328323,0,-0.03919027000665665,-0.03429148346185684,0,0.03919027000665665,0.4065990447998047,0,0,-0.03919027000665665,0,0.05878540128469467,0.009797567501664162,0,-0.0783805400133133,-0.04898783564567566,0,0,0.019595135003328323,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.014696350321173668,0,0,0,0,-0.019595135003328323,0,0,0,0,0,0,-0.053886618465185165,0,0,0.004898783750832081,0,-0.03919027000665665,0,0,0,0.009797567501664162,0,0,0,0,0,0.009797567501664162,0,-0.019595135003328323,-0.03919027000665665,0,0,0,0,0,-0.009797567501664162,0,0,0.004898783750832081,0,0,-0.019595135003328323,0,0,0,0,-0.019595135003328323,-0.004898783750832081,0,0,0,0,-0.03919027000665665,-0.004898783750832081,0],"text":"5 REM ** HAIL OF BARBS\n10 DATA 169, 191, 133, 251, 169, 7, 133, 252\n20 DATA 160, 0, 177, 251, 201, 36, 208, 10\n30 DATA 160, 40, 145, 251, 160, 0, 169, 32\n40 DATA 145, 251, 165, 251, 56, 233, 1, 133\n50 DATA 251, 165, 252, 233, 0, 133, 252, 201, 3, 208, 221, 96\n60 FOR L = 820 TO 863 : READ D : POKE L, D : NEXT\n1010 POKE 1024 + INT(40 * RND(1)), 36 : SYS 820 : GOTO 1010\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/09.081.hail_of_barbs.bas","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/09.081.hail_of_barbs.bas","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.103.sprite_vectoring.bas","language":"basic","vector":[0,0.011755150742828846,0,-0.023510301485657692,-0.011755150742828846,0,0,0.09991878271102905,0,-0.023510301485657692,-0.011755150742828846,0,0,0.0411430299282074,0,-0.023510301485657692,-0.047020602971315384,0,0.14106181263923645,0.09404120594263077,0,0,-0.023510301485657692,0,0,0.005877575371414423,0,0,-0.023510301485657692,0,0.023510301485657692,0.1998375654220581,0,0,0,0,0,0.058775756508111954,0,0,-0.023510301485657692,0,0,0.011755150742828846,0,0,-0.011755150742828846,0,0,0.017632726579904556,0,-0.047020602971315384,-0.0411430299282074,0,0,0.017632726579904556,0,-0.023510301485657692,-0.03526545315980911,0,0.047020602971315384,0,0,-0.023510301485657692,-0.005877575371414423,0,0,0.03526545315980911,0,-0.023510301485657692,-0.0411430299282074,0,0.023510301485657692,0,0,0,-0.005877575371414423,0,0,0.011755150742828846,0,0,-0.023510301485657692,0,0.047020602971315384,0,0,-0.07053090631961823,-0.03526545315980911,0,0.14106181263923645,0.005877575371414423,0,0,-0.005877575371414423,0,0,0.005877575371414423,0,0,-0.017632726579904556,0,0.023510301485657692,0,0,0,-0.011755150742828846,0,0.047020602971315384,0,0,0,-0.011755150742828846,0,0.023510301485657692,0.07640848308801651,0,-0.047020602971315384,0,0,0,0.047020602971315384,0,0,0,0,0,0.029387878254055977,0,-0.07053090631961823,-0.011755150742828846,0,0.023510301485657692,0.029387878254055977,0,0,-0.005877575371414423,0,0.023510301485657692,0,0,0,-0.005877575371414423,0,0.023510301485657692,0.023510301485657692,0,-0.023510301485657692,-0.023510301485657692,0,0,0,0,-0.047020602971315384,-0.011755150742828846,0,0.11755151301622391,0.029387878254055977,0,0,-0.011755150742828846,0,0,0.005877575371414423,0,-0.023510301485657692,-0.017632726579904556,0,0,0.017632726579904556,0,-0.11755151301622391,-0.011755150742828846,0,0,0,0,-0.047020602971315384,0,0,0.023510301485657692,0.023510301485657692,0,-0.047020602971315384,-0.0411430299282074,0,0.023510301485657692,0.07053090631961823,0,-0.09404120594263077,0,0,0.14106181263923645,0,0,-0.047020602971315384,-0.011755150742828846,0,0.023510301485657692,0.011755150742828846,0,-0.047020602971315384,-0.005877575371414423,0,0.6112678647041321,0.023510301485657692,0,0,0,0,0.23510302603244781,0.011755150742828846,0,-0.09404120594263077,-0.029387878254055977,0,0,0,0,-0.047020602971315384,-0.005877575371414423,0,0.023510301485657692,0,0,-0.11755151301622391,-0.0411430299282074,0,0.023510301485657692,0.047020602971315384,0,-0.047020602971315384,0,0,0,0.011755150742828846,0,-0.023510301485657692,0,0,0.14106181263923645,0.017632726579904556,0,-0.11755151301622391,-0.011755150742828846,0,0,0,0,-0.023510301485657692,-0.023510301485657692,0,0.047020602971315384,0.058775756508111954,0,0,0,0,0,0,0,-0.09404120594263077,-0.023510301485657692,0,0.023510301485657692,0,0,-0.023510301485657692,-0.06465332955121994,0,0.023510301485657692,0.011755150742828846,0,-0.023510301485657692,-0.029387878254055977,0,0,0.011755150742828846,0,0,-0.029387878254055977,0,0,0.017632726579904556,0,0,-0.047020602971315384,0,0.023510301485657692,0.07053090631961823,0,0,-0.023510301485657692,0,0.18808241188526154,0.023510301485657692,0,0,-0.0411430299282074,0,0.07053090631961823,0.34089937806129456,0,-0.047020602971315384,0,0,0.11755151301622391,0.11755151301622391,0,-0.023510301485657692,-0.047020602971315384,0,0,0.005877575371414423,0,-0.023510301485657692,-0.023510301485657692,0,0.09404120594263077,0.023510301485657692,0,0,-0.058775756508111954,0,0,0.017632726579904556,0,0,-0.03526545315980911,0,0.023510301485657692,0,0,0,-0.011755150742828846,0,0.023510301485657692,0.07053090631961823,0,-0.023510301485657692,-0.07640848308801651,0,0.023510301485657692,0.005877575371414423,0,-0.047020602971315384,-0.011755150742828846,0,0,0.029387878254055977,0,0,0,0,0,0.005877575371414423,0,-0.023510301485657692,-0.05289817973971367,0,0,0.011755150742828846,0,0,-0.023510301485657692,0,0,0.0411430299282074,0,-0.047020602971315384,-0.011755150742828846,0,0,0,0,-0.023510301485657692,-0.005877575371414423,0,0,0,0,0,-0.029387878254055977,0],"text":"REM SPRITE VECTORING ROUTINE\n\n10 DATA 162,0,189,52,3,125,0,208,157,0\n11 DATA 208,232,224,16,208,242,76,49\n12 DATA 234\n40 FOR P=49152 TO 49170\n41 READ D : POKE P,D\n42 NEXT\n\nREM SPRITE POINTERS; ALL POINT TO 15*64\nREM = 960\n\n50 FOR A=2040 TO 2047 : POKE A,15 : NEXT\n\nREM SPRITE DATA (FILL ALL THE BITS); THE\nREM MEMORY REGIONS ARE THE DATASETTE\nREM BUFFER AND AN UNUSED REGION\n\n60 FOR A=960 TO 1022 : POKE A,255 : NEXT\n\nREM SPRITE VECTORS\n\n70 FOR A=820 TO 835\n71 POKE A,INT(4*RND(1)+1)\n72 NEXT\n\nREM SET SERVICE INTERRUPT VECTOR TO THE\nREM VECTORING ROUTINE, AND ENABLE ALL\nREM THE SPRITES\n\n80 POKE 788,0 : POKE 789,192\n81 POKE 53269,255\n","sourcePath":"external/github.com/64kramsystem_c64_asm_book_listings/machine_code_games_routines_for_the_commodore_64/10.103.sprite_vectoring.bas","sourceMtimeMs":1645989844000,"sourceUrl":"https://github.com/64kramsystem/c64_asm_book_listings/blob/master/10.103.sprite_vectoring.bas","sourceRepoUrl":"https://github.com/64kramsystem/c64_asm_book_listings","license":"UNKNOWN","attribution":"Source: 64kramsystem/c64_asm_book_listings (License unknown)"},{"name":"github.com/kschuetz_c64-chip8/roms/demos/Trip8 Demo (2008) [Revival Studios].txt","language":"basic","vector":[0.002717025112360716,0.0020377689506858587,0,-0.002717025112360716,-0.006792563013732433,0,0.008151075802743435,0.002717025112360716,0,-0.002717025112360716,-0.004754793830215931,0,0.002717025112360716,0.0020377689506858587,0,-0.005434050224721432,-0.008151075802743435,0,0.03260430321097374,0.000679256278090179,0,-0.010868100449442863,-0.0061133066192269325,0,0.01630215160548687,0.002717025112360716,0,-0.002717025112360716,-0.0020377689506858587,0,0,0.005434050224721432,0,0,-0.001358512556180358,0,0.008151075802743435,0.013585126027464867,0,0,-0.006792563013732433,0,0.008151075802743435,0.0040755379013717175,0,0,0,0,0.005434050224721432,0,0,-0.002717025112360716,-0.001358512556180358,0,0.01630215160548687,0.008151075802743435,0,0,-0.0040755379013717175,0,0.002717025112360716,0.002717025112360716,0,-0.005434050224721432,-0.004754793830215931,0,0.002717025112360716,0.005434050224721432,0,-0.005434050224721432,-0.008830332197248936,0,0.01630215160548687,0.002717025112360716,0,0,-0.0040755379013717175,0,0.002717025112360716,0.008151075802743435,0,-0.013585126027464867,-0.002717025112360716,0,0.002717025112360716,0.000679256278090179,0,-0.008151075802743435,-0.020377688109874725,0,0.008151075802743435,0.000679256278090179,0,-0.005434050224721432,0,0,0,0.0020377689506858587,0,-0.002717025112360716,-0.004754793830215931,0,0.7933713793754578,0.004754793830215931,0,-0.002717025112360716,-0.001358512556180358,0,0.005434050224721432,0.002717025112360716,0,0,-0.002717025112360716,0,0,0.01698140799999237,0,0,-0.0061133066192269325,0,0.01630215160548687,0.008151075802743435,0,-0.008151075802743435,-0.002717025112360716,0,0.03532132878899574,0.000679256278090179,0,-0.013585126027464867,0,0,0,0.0040755379013717175,0,-0.002717025112360716,-0.002717025112360716,0,0,0.004754793830215931,0,0,-0.000679256278090179,0,0,0.0033962815068662167,0,0,-0.0020377689506858587,0,0.3450621962547302,0.014943638816475868,0,-0.002717025112360716,-0.002717025112360716,0,0.005434050224721432,0.002717025112360716,0,0,-0.002717025112360716,0,0.008151075802743435,0.001358512556180358,0,-0.005434050224721432,-0.002717025112360716,0,0,0.011547356843948364,0,-0.002717025112360716,-0.001358512556180358,0,0.002717025112360716,0.0020377689506858587,0,-0.021736200898885727,-0.006792563013732433,0,0.010868100449442863,0.0040755379013717175,0,-0.008151075802743435,-0.007471819408237934,0,0.002717025112360716,0.005434050224721432,0,-0.03260430321097374,-0.0033962815068662167,0,0.002717025112360716,0.0033962815068662167,0,-0.002717025112360716,-0.002717025112360716,0,0.005434050224721432,0.3966856896877289,0,-0.002717025112360716,-0.011547356843948364,0,0.01630215160548687,0.002717025112360716,0,0,0,0,0,0.000679256278090179,0,-0.005434050224721432,-0.000679256278090179,0,0.005434050224721432,0.010188844054937363,0,0,-0.004754793830215931,0,0,0.018339920789003372,0,-0.005434050224721432,-0.008151075802743435,0,0.005434050224721432,0.008151075802743435,0,-0.005434050224721432,-0.0040755379013717175,0,0.005434050224721432,0.0040755379013717175,0,-0.019019175320863724,-0.000679256278090179,0,0,0,0,-0.008151075802743435,0,0,0,0.17456886172294617,0,-0.010868100449442863,-0.001358512556180358,0,0.005434050224721432,0.004754793830215931,0,0,0,0,0.002717025112360716,0.005434050224721432,0,0,-0.0033962815068662167,0,0.002717025112360716,0.0040755379013717175,0,0,-0.001358512556180358,0,0.002717025112360716,0.0020377689506858587,0,-0.013585126027464867,-0.012226613238453865,0,0.002717025112360716,0.0061133066192269325,0,0,-0.005434050224721432,0,0.005434050224721432,0.005434050224721432,0,0,-0.01630215160548687,0,0.002717025112360716,0.0020377689506858587,0,-0.002717025112360716,-0.004754793830215931,0,0,0.0033962815068662167,0,-0.005434050224721432,-0.0033962815068662167,0,0.002717025112360716,0.010188844054937363,0,0,-0.001358512556180358,0,0,0,0,-0.010868100449442863,-0.0033962815068662167,0,0.002717025112360716,0.20105986297130585,0,-0.002717025112360716,-0.000679256278090179,0,0.002717025112360716,0.001358512556180358,0,-0.002717025112360716,-0.002717025112360716,0,0.027170252054929733,0.002717025112360716,0,-0.010868100449442863,-0.002717025112360716,0,0.005434050224721432,0.006792563013732433,0,0,-0.011547356843948364,0,0,0.008830332197248936,0,0,-0.007471819408237934,0,0.013585126027464867,0,0,-0.005434050224721432,-0.0061133066192269325,0,0.002717025112360716,0.002717025112360716,0,0,0,0,0.010868100449442863,0.001358512556180358,0,-0.013585126027464867,0,0,0.005434050224721432,0.08762406557798386,0,-0.002717025112360716,-0.000679256278090179,0,0.013585126027464867,0.002717025112360716,0,-0.005434050224721432,-0.006792563013732433,0,0,0.0033962815068662167,0,-0.04075537621974945,-0.001358512556180358,0,0,0.002717025112360716,0,0,-0.000679256278090179,0],"text":"-----------------------------------------------------------------------------\n\t\t\t      /////////////////\n\t                      //////////////////\n        \t              ////          ////\n\t               \t      ////   ///////////\n\t                      ////  ///////////\n                              ////  ////\n                              ////  ///////////\n                              ////   //////////\n  \t     \t   \t\n  \t\t\t   www.revival-studios.com\n-----------------------------------------------------------------------------\nTitle\t\t:\tTrip8 / SuperTrip8 demo\nAuthor\t\t:\tMartijn Wenting / Revival Studios\nGenre\t\t:\tDemo\nSystem\t\t:\tChip-8 / SuperChip8\nDate\t\t:\t14/10/2008\nProduct ID\t:\tRS-C8004\n-----------------------------------------------------------------------------\n\nAll the contents of this package are (c)Copyright 2008 Revival Studios.\n\nThe contents of the package may only be spread in its original form, and may not be\npublished or distributed otherwise without the written permission of the authors.\n\nDescription:\n------------\nThe Trip8/SuperTrip8 demo are demo's for the Chip-8 and SuperChip8 systems. The demo consists of an intro, 3D vectorballs, and 4 randomized dot-effects.  \n\nWriting a demo for the original Chip-8 interpreter was a real pain, since your framerate basically drops in half for every sprite you need to draw. So even clearing and redrawing a few dots will cause the framerate to drop to near zero :) Originally the demo was going to be bigger and there were much more graphical effects programmed/prototyped, but a lot of these effects turned out to be too much for the original unoptimized Chip-8 interpreters to handle. \n\nRunning the Demo:\n-----------------\nUse the Megachip emulator or any other Chip-8/SuperChip compatible emulator to run the slideshow.\n\nCredits:\n--------\nProgramming/Graphics/Design by: Martijn Wenting\n\nDistribution:\n-------------\nThis package can be freely distributed in its original form.\nIf you would like to include this slideshow in your rom package, please let me know.\n\nWatch out for more releases soon!\n\n\n\tMartijn Wenting / Revival Studios\n\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/demos/Trip8 Demo (2008) [Revival Studios].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Trip8%20Demo%20(2008)%20%5BRevival%20Studios%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/games/Astro Dodge [Revival Studios, 2008].txt","language":"basic","vector":[0,0.0006941290339455009,0,-0.0027765161357820034,-0.008329547941684723,0,0.01388258021324873,0.0027765161357820034,0,-0.0027765161357820034,-0.006941290106624365,0,0.0027765161357820034,0.0006941290339455009,0,-0.011106064543128014,-0.006941290106624365,0,0.03054167702794075,0.0020823869854211807,0,-0.01388258021324873,-0.0013882580678910017,0,0,0.0013882580678910017,0,-0.0027765161357820034,-0.0034706450533121824,0,0.0027765161357820034,0.004858903121203184,0,0,-0.0027765161357820034,0,0.011106064543128014,0.0041647739708423615,0,-0.0027765161357820034,-0.0027765161357820034,0,0.005553032271564007,0.0034706450533121824,0,-0.0027765161357820034,-0.0013882580678910017,0,0.008329547941684723,0,0,-0.0027765161357820034,-0.0013882580678910017,0,0.005553032271564007,0.004858903121203184,0,0,-0.0027765161357820034,0,0.0027765161357820034,0.0027765161357820034,0,-0.0027765161357820034,-0.0020823869854211807,0,0.008329547941684723,0.0027765161357820034,0,-0.0027765161357820034,-0.0034706450533121824,0,0.016659095883369446,0.0034706450533121824,0,0,-0.005553032271564007,0,0,0.0076354192569851875,0,-0.01388258021324873,-0.0013882580678910017,0,0,0,0,-0.01388258021324873,-0.02498864382505417,0,0.008329547941684723,0,0,-0.008329547941684723,0,0,0,0.0006941290339455009,0,-0.005553032271564007,-0.004858903121203184,0,0.7996366024017334,0.009023677557706833,0,-0.005553032271564007,-0.0013882580678910017,0,0.01388258021324873,0.0027765161357820034,0,0,-0.005553032271564007,0,0.0027765161357820034,0.015270838513970375,0,0,-0.009023677557706833,0,0.008329547941684723,0.0006941290339455009,0,-0.0027765161357820034,-0.0034706450533121824,0,0.03609471023082733,0.0013882580678910017,0,-0.019435612484812737,0,0,0,0.006247160956263542,0,-0.0027765161357820034,-0.0013882580678910017,0,0,0.0027765161357820034,0,0,-0.0027765161357820034,0,0,0.0041647739708423615,0,-0.005553032271564007,-0.0027765161357820034,0,0.33040541410446167,0.0041647739708423615,0,0,-0.0013882580678910017,0,0.0027765161357820034,0.0020823869854211807,0,0,-0.0013882580678910017,0,0.008329547941684723,0.0041647739708423615,0,-0.019435612484812737,-0.0020823869854211807,0,0,0.010411934927105904,0,-0.0027765161357820034,-0.0013882580678910017,0,0.0027765161357820034,0.0006941290339455009,0,-0.016659095883369446,-0.006941290106624365,0,0.005553032271564007,0.0013882580678910017,0,-0.011106064543128014,-0.0076354192569851875,0,0.0027765161357820034,0.005553032271564007,0,-0.02776516042649746,-0.005553032271564007,0,0.0027765161357820034,0.0034706450533121824,0,-0.005553032271564007,-0.0034706450533121824,0,0.005553032271564007,0.3998183012008667,0,-0.0027765161357820034,-0.015270838513970375,0,0.019435612484812737,0.006941290106624365,0,0,0,0,0.005553032271564007,0.0013882580678910017,0,0,-0.0006941290339455009,0,0.008329547941684723,0.0076354192569851875,0,-0.005553032271564007,-0.0020823869854211807,0,0,0.018741482868790627,0,0,-0.012494321912527084,0,0.0027765161357820034,0.0076354192569851875,0,0,-0.004858903121203184,0,0.005553032271564007,0,0,-0.008329547941684723,-0.0006941290339455009,0,0,0.0006941290339455009,0,-0.008329547941684723,-0.0027765161357820034,0,0.0027765161357820034,0.16797922551631927,0,-0.011106064543128014,-0.0006941290339455009,0,0.0027765161357820034,0.0027765161357820034,0,0,-0.0006941290339455009,0,0,0.006247160956263542,0,0,-0.010411934927105904,0,0,0.0013882580678910017,0,0,-0.0013882580678910017,0,0.0027765161357820034,0.0020823869854211807,0,-0.01388258021324873,-0.009023677557706833,0,0.008329547941684723,0.004858903121203184,0,0,-0.006247160956263542,0,0.005553032271564007,0.005553032271564007,0,0,-0.01388258021324873,0,0,0.0013882580678910017,0,-0.008329547941684723,-0.006247160956263542,0,0.0027765161357820034,0.0027765161357820034,0,-0.008329547941684723,-0.004858903121203184,0,0,0.011800193227827549,0,0,-0.0020823869854211807,0,0.0027765161357820034,0.0027765161357820034,0,0,-0.0013882580678910017,0,0,0.2040739357471466,0,-0.005553032271564007,-0.0041647739708423615,0,0,0.0034706450533121824,0,-0.005553032271564007,0,0,0.005553032271564007,0.0020823869854211807,0,-0.005553032271564007,0,0,0.0027765161357820034,0.004858903121203184,0,0,-0.004858903121203184,0,0,0.009023677557706833,0,-0.0027765161357820034,-0.009023677557706833,0,0.008329547941684723,0.0013882580678910017,0,-0.005553032271564007,-0.006247160956263542,0,0.0027765161357820034,0.0013882580678910017,0,0,0,0,0.005553032271564007,0,0,-0.0027765161357820034,-0.0013882580678910017,0,0.005553032271564007,0.08260135352611542,0,-0.005553032271564007,0,0,0.01388258021324873,0.0020823869854211807,0,-0.0027765161357820034,-0.006941290106624365,0,0,0.006247160956263542,0,-0.04997728765010834,-0.004858903121203184,0,0,0.0027765161357820034,0,0,-0.0006941290339455009,0],"text":"-----------------------------------------------------------------------------\n\t\t\t      /////////////////\n\t                      //////////////////\n        \t              ////          ////\n\t               \t      ////   ///////////\n\t                      ////  ///////////\n                              ////  ////\n                              ////  ///////////\n                              ////   //////////\n  \t     \t   \t\n  \t\t\t   www.revival-studios.com\n-----------------------------------------------------------------------------\nTitle\t\t:\tAstro Dodge\nAuthor\t\t:\tMartijn Wenting / Revival Studios\nGenre\t\t:\tGame\nSystem\t\t:\tChip8 / SuperChip8\nDate\t\t:\t18/12/2008\nProduct ID\t:\tRS-C8003\n-----------------------------------------------------------------------------\n\nAll the contents of this package are (c)Copyright 2008 Revival Studios.\n\nThe contents of the package may only be spread in its original form, and may not be\npublished or distributed otherwise without the written permission of the authors.\n\nDescription:\n------------\nAstro Dodge is an arcade game for the Chip8 and SuperChip8 systems.\nBoth versions of the game are included in this package.\n \nYour goal is to make your way through the asteroids field and dodge the asteroids, scoring points for each asteroid you are able to dodge.\nButton 2,4,6,8 will move your ship, button 5 will start the game.\n\nRunning the game(s):\n--------------------\nThe CHIP8 version of the game has been programmed to be compatible with original hardware like the Cosmac VIP and Telmac 1800.\nUse the Megachip emulator or any other Chip8/SuperChip compatible emulator to run the game(s).\n\nCredits:\n--------\nProgramming and Graphics by: Martijn Wenting\n\nDistribution:\n-------------\nThis package can be freely distributed in its original form.\nIf you would like to include this game in your rom package, please let me know.\n\nWatch out for more releases soon!\n\n\n\tMartijn Wenting / Revival Studios\n\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/games/Astro Dodge [Revival Studios, 2008].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Astro%20Dodge%20%5BRevival%20Studios%2C%202008%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/games/Biorhythm [Jef Winsor].txt","language":"basic","vector":[0.012724342755973339,0.015905428677797318,0,0,-0.031810857355594635,0,0.06362171471118927,0.00954325683414936,0,-0.050897371023893356,-0.015905428677797318,0,0.012724342755973339,0.02862977236509323,0,-0.07634605467319489,-0.15587320923805237,0,0.012724342755973339,0.00954325683414936,0,-0.025448685511946678,-0.031810857355594635,0,0,0.015905428677797318,0,0,-0.022267600521445274,0,0.025448685511946678,0.05725954473018646,0,0,-0.02862977236509323,0,0.025448685511946678,0.04771628603339195,0,-0.012724342755973339,-0.025448685511946678,0,0.07634605467319489,0.022267600521445274,0,-0.012724342755973339,-0.022267600521445274,0,0.050897371023893356,0.0031810856889933348,0,-0.050897371023893356,-0.05407845973968506,0,0.15269210934638977,0.0063621713779866695,0,0,-0.025448685511946678,0,0,0.01908651366829872,0,0,-0.031810857355594635,0,0.025448685511946678,0.041354116052389145,0,-0.025448685511946678,-0.03817302733659744,0,0.050897371023893356,0,0,-0.012724342755973339,-0.01908651366829872,0,0,0.01908651366829872,0,-0.1908651441335678,-0.0063621713779866695,0,0.012724342755973339,0.01908651366829872,0,-0.03817302733659744,-0.16859754920005798,0,0.03817302733659744,0.012724342755973339,0,0,-0.00954325683414936,0,0.06362171471118927,0.03499194234609604,0,-0.012724342755973339,-0.012724342755973339,0,0.1908651441335678,0.03499194234609604,0,-0.03817302733659744,-0.025448685511946678,0,0.012724342755973339,0.00954325683414936,0,-0.03817302733659744,-0.04771628603339195,0,0.025448685511946678,0.0063621713779866695,0,0,-0.012724342755973339,0,0.025448685511946678,0.0031810856889933348,0,-0.025448685511946678,-0.0031810856889933348,0,0.41990330815315247,0.025448685511946678,0,-0.12724342942237854,-0.05725954473018646,0,0.10179474204778671,0.015905428677797318,0,-0.025448685511946678,-0.022267600521445274,0,0.012724342755973339,0.04453520104289055,0,-0.025448685511946678,-0.015905428677797318,0,0.03817302733659744,0.025448685511946678,0,0,-0.03499194234609604,0,0.025448685511946678,0.0858893170952797,0,-0.050897371023893356,-0.012724342755973339,0,0.012724342755973339,0.0063621713779866695,0,-0.012724342755973339,0,0,0,0.012724342755973339,0,-0.025448685511946678,-0.03817302733659744,0,0,0.02862977236509323,0,-0.012724342755973339,-0.015905428677797318,0,0.06362171471118927,0.0063621713779866695,0,-0.12724342942237854,-0.09861365705728531,0,0.012724342755973339,0.015905428677797318,0,-0.03817302733659744,-0.02862977236509323,0,0.012724342755973339,0.01908651366829872,0,-0.16541646420955658,-0.0031810856889933348,0,0.012724342755973339,0.041354116052389145,0,0,-0.0063621713779866695,0,0.012724342755973339,0.10497582703828812,0,-0.012724342755973339,-0.10179474204778671,0,0.22903817892074585,0.00954325683414936,0,-0.03817302733659744,-0.022267600521445274,0,0.11451908946037292,0.015905428677797318,0,0,0,0,0.03817302733659744,0.02862977236509323,0,-0.0890704020857811,-0.025448685511946678,0,0.012724342755973339,0.21313273906707764,0,-0.012724342755973339,-0.08270823210477829,0,0,0.05407845973968506,0,-0.025448685511946678,-0.01908651366829872,0,0.025448685511946678,0.0063621713779866695,0,-0.10179474204778671,-0.012724342755973339,0,0.0890704020857811,0.025448685511946678,0,-0.07634605467319489,0,0,0,0.01908651366829872,0,-0.050897371023893356,-0.02862977236509323,0,0,0.025448685511946678,0,-0.025448685511946678,-0.00954325683414936,0,0,0.012724342755973339,0,-0.012724342755973339,-0.025448685511946678,0,0.025448685511946678,0.03817302733659744,0,-0.012724342755973339,-0.0063621713779866695,0,0.11451908946037292,0.031810857355594635,0,-0.050897371023893356,-0.06362171471118927,0,0.012724342755973339,0.012724342755973339,0,0,-0.025448685511946678,0,0.012724342755973339,0.01908651366829872,0,-0.03817302733659744,-0.0858893170952797,0,0,0.0063621713779866695,0,0,-0.04771628603339195,0,0.012724342755973339,0.00954325683414936,0,-0.012724342755973339,-0.015905428677797318,0,0.050897371023893356,0.12406234443187714,0,-0.22903817892074585,-0.01908651366829872,0,0.012724342755973339,0.07316496968269348,0,-0.06362171471118927,-0.0031810856889933348,0,0.025448685511946678,0.06680279970169067,0,-0.03817302733659744,-0.05407845973968506,0,0,0.00954325683414936,0,-0.03817302733659744,-0.015905428677797318,0,0.03817302733659744,0.0063621713779866695,0,-0.050897371023893356,-0.012724342755973339,0,0.025448685511946678,0.01908651366829872,0,0,-0.05725954473018646,0,0,0.14951102435588837,0,-0.10179474204778671,-0.06998388469219208,0,0.012724342755973339,0.025448685511946678,0,-0.03817302733659744,-0.031810857355594635,0,0.025448685511946678,0.0031810856889933348,0,-0.012724342755973339,-0.01908651366829872,0,0.03817302733659744,0.00954325683414936,0,-0.03817302733659744,-0.0063621713779866695,0,0,0.01908651366829872,0,-0.012724342755973339,-0.01908651366829872,0,0.03817302733659744,0.060440629720687866,0,0,-0.02862977236509323,0,0.03817302733659744,0.0063621713779866695,0,-0.33083292841911316,-0.0063621713779866695,0,0.012724342755973339,0.0063621713779866695,0,-0.012724342755973339,-0.022267600521445274,0],"text":"13. VIP Biorhythm\n\nThe theory of Biorhythm states that there are thre predominant cycles that can influence\nhuman behavior.  These include a 23-day physical cycle, a 28-day emotional cycle and a\n33-day intellectual cycle.  All three cycles start at birth and continue throughout life.\n\nEach cycle consists of a positive and a negative period.  Physical, Emotional and\nIntellectual aspects are enhanced during positive periods.  Poor performance is\nindicated by the negative period of a cycle.\n\nA critical day occurs on the crossover from the positive to the negative period or\nvice versa.  A critical day indicates instability in a particular aspect.\n\n\nHow to Use VIP Biorhythm\n\n1. Load the CHIP-8 interpreter at 0000-01FF and\n   the game starting at 0200.\n\n2. Turn RUN switch on.\n\n3. Enter birthdate using 2-digit month, 2-digit day, and 4-digit year.\n\n4. Enter start date using 2-digit month, 2-digit day, and 4-digit year. The start date\n   indicates the first day of the 32-day Biorhythm chart the program will generate.\n\n5. After a period of calculation proportional to the span of time involved, the three\n   cycle curves will be shown for a 32-day period.  Each horizontal bit position\n   represents one day in the cycle.  The start day, on the left, and every seventh\n   day are indicated by week markers.  The first day of a positive or negative period\n   is a critical day.\n\n6. To advance the start date, hold key F down until the desired date is reached.\n   To decrement the start date, hold key B down.  These functions allow changing the\n   start date slightly without reentering all the dates and waiting for the calculations\n   to be preformed.\n  \n7. Press Key 0 to clear the screen and enter a new set of dates.\n\n   \n\n   See VIPG1-13.jpg\n\n\nINTERPRETATION\n\n\n\t\t\tPhysical\t\tEmotional\t\tIntellectual\n\nPositive Period\t\tStrong, \t\tGood moods, \t\tGood Judgement\n(Up)\t\t\tVigorous\t\tCooperative\t\tSharp Mentally\n\nNegative Period\t\tTire easily,\t\tLow Enthusiasm,\t\tLow attentiveness\n(Down)\t\t\tLess Stamina\t\tFeelings Subdued\tand concentration\n\nCritical Days\t\tSusceptible to injury\temotionally unstable,\tPoor memory,\n(Crossover)\t\tor Illness,\t\tUpset easily\t\tProne to mistakes\n\t\t\tLow endurance\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/games/Biorhythm [Jef Winsor].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Biorhythm%20%5BJef%20Winsor%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/games/Craps [Camerlo Cortez, 1978].txt","language":"basic","vector":[0.1323988139629364,0.01654985174536705,0,0,-0.01654985174536705,0,0.0661994069814682,0,0,0,0,0,0.0661994069814682,0.0661994069814682,0,-0.1985982060432434,-0.04964955151081085,0,0.0661994069814682,0,0,0,0,0,0,0,0,0,0,0,0,0.11584895849227905,0,0,0,0,0,0.1323988139629364,0,-0.0661994069814682,-0.0330997034907341,0,0.0661994069814682,0.0330997034907341,0,-0.0661994069814682,0,0,0,0,0,-0.0661994069814682,0,0,0.0661994069814682,0,0,0,0,0,0,0.0330997034907341,0,-0.1985982060432434,0,0,0,0.0330997034907341,0,0,0,0,0.0661994069814682,0,0,0,0,0,0,0.0661994069814682,0,-0.0661994069814682,0,0,0,0,0,0,-0.0992991030216217,0,0.0661994069814682,0,0,0,0,0,0,0.0661994069814682,0,-0.0661994069814682,-0.0330997034907341,0,0.1323988139629364,0.0330997034907341,0,0,0,0,0.1323988139629364,0.04964955151081085,0,0,-0.0992991030216217,0,0.0661994069814682,0.0330997034907341,0,0,0,0,0,0,0,0,0,0,0.3309970200061798,0.0330997034907341,0,-0.1323988139629364,0,0,0.1985982060432434,0,0,0,-0.0330997034907341,0,0,0.0330997034907341,0,-0.0661994069814682,-0.0330997034907341,0,0,0.01654985174536705,0,-0.1323988139629364,-0.0330997034907341,0,0,0.0992991030216217,0,-0.0661994069814682,-0.01654985174536705,0,0,0.01654985174536705,0,0,-0.0992991030216217,0,0,0,0,-0.0661994069814682,0,0,0,0.0330997034907341,0,0,0,0,0.0661994069814682,0.01654985174536705,0,-0.0661994069814682,-0.0330997034907341,0,0,0.01654985174536705,0,0,0,0,0,0.0330997034907341,0,-0.1985982060432434,0,0,0,0.0330997034907341,0,0,-0.0330997034907341,0,0,0.0661994069814682,0,0,-0.04964955151081085,0,0.3309970200061798,0.0661994069814682,0,0,0,0,0,0.0661994069814682,0,0,0,0,0,0.01654985174536705,0,0,0,0,0,0.18204836547374725,0,0,-0.11584895849227905,0,0,0.11584895849227905,0,0,0,0,0,0,0,0,-0.0330997034907341,0,0,0,0,0,-0.0661994069814682,0,0,0,0,0,-0.04964955151081085,0,0,0.01654985174536705,0,0,-0.01654985174536705,0,0,0,0,0,-0.04964955151081085,0,0,0.01654985174536705,0,0,0,0,0,0.0330997034907341,0,-0.1323988139629364,-0.08274925500154495,0,0,0,0,0,0,0,0.0661994069814682,0.01654985174536705,0,0,-0.0992991030216217,0,0,0,0,0,-0.01654985174536705,0,0,0,0,0,0,0,0.1323988139629364,0.18204836547374725,0,0,0,0,0,0,0,0,-0.01654985174536705,0,0,0.0330997034907341,0,0,0,0,0.0661994069814682,0.0330997034907341,0,0,0,0,0.2647976279258728,0.01654985174536705,0,-0.0661994069814682,0,0,0.0661994069814682,0,0,0,0,0,0,0.08274925500154495,0,0,-0.0330997034907341,0,0,0.04964955151081085,0,0,0,0,0.0661994069814682,0,0,0,-0.01654985174536705,0,0.0661994069814682,0,0,0,-0.0330997034907341,0,0,0,0,0,-0.01654985174536705,0,0.1323988139629364,0,0,0,-0.0661994069814682,0,0,0,0,-0.1985982060432434,-0.01654985174536705,0,0,0.0330997034907341,0,0,0,0],"text":"Craps, by: Camerlo Cortez\n\nTo use the Craps program, press any key to roll dice.\n7 or 11 wins, 12, 2 or 3 loses on first roll. The second roll must match the first to win, but if you roll a seven you lose. This program could be expanded to include on-the-screen scoring of bets.\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/games/Craps [Camerlo Cortez, 1978].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Craps%20%5BCamerlo%20Cortez%2C%201978%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/games/Deflection [John Fort].txt","language":"basic","vector":[0.01894628442823887,0.01894628442823887,0,-0.009473142214119434,-0.07341685146093369,0,0.03789256885647774,0.01184142753481865,0,-0.06631199270486832,-0.01657799817621708,0,0.01894628442823887,0.0023682855535298586,0,-0.17051656544208527,-0.03315599635243416,0,0,0.021314570680260658,0,-0.03789256885647774,-0.004736571107059717,0,0.009473142214119434,0.014209713786840439,0,-0.01894628442823887,-0.004736571107059717,0,0,0.01894628442823887,0,-0.009473142214119434,-0.01894628442823887,0,0.03789256885647774,0.03789256885647774,0,0,-0.004736571107059717,0,0.056838855147361755,0.03315599635243416,0,-0.009473142214119434,-0.026051141321659088,0,0.056838855147361755,0,0,-0.0473657101392746,-0.01184142753481865,0,0.1420971304178238,0.01184142753481865,0,-0.01894628442823887,-0.06631199270486832,0,0,0.021314570680260658,0,-0.01894628442823887,-0.0023682855535298586,0,0.028419427573680878,0.004736571107059717,0,-0.009473142214119434,-0.03315599635243416,0,0.009473142214119434,0.0023682855535298586,0,0,-0.04026085510849953,0,0.01894628442823887,0.01894628442823887,0,-0.17051656544208527,-0.0236828550696373,0,0.028419427573680878,0.009473142214119434,0,-0.0947314202785492,-0.1894628405570984,0,0.009473142214119434,0.004736571107059717,0,-0.01894628442823887,-0.014209713786840439,0,0,0.01184142753481865,0,0,-0.009473142214119434,0,0.5020765662193298,0.03552428260445595,0,-0.009473142214119434,-0.03552428260445595,0,0.0947314202785492,0.01657799817621708,0,-0.009473142214119434,-0.10657285153865814,0,0.0473657101392746,0.0023682855535298586,0,-0.028419427573680878,-0.044997427612543106,0,0,0.009473142214119434,0,-0.01894628442823887,-0.01657799817621708,0,0.29366740584373474,0,0,-0.03789256885647774,-0.004736571107059717,0,0.01894628442823887,0.0236828550696373,0,0,-0.0023682855535298586,0,0,0.03315599635243416,0,0,-0.007104856893420219,0,0,0.028419427573680878,0,-0.0473657101392746,-0.028419427573680878,0,0.0473657101392746,0.08999485522508621,0,-0.0473657101392746,-0.01184142753481865,0,0,0.014209713786840439,0,-0.01894628442823887,-0.01657799817621708,0,0,0.014209713786840439,0,-0.07578513771295547,-0.009473142214119434,0,0,0.007104856893420219,0,0,-0.03315599635243416,0,0.056838855147361755,0.014209713786840439,0,-0.08525828272104263,-0.08525828272104263,0,0.009473142214119434,0.01657799817621708,0,-0.009473142214119434,-0.061575423926115036,0,0.009473142214119434,0.004736571107059717,0,-0.13262398540973663,-0.028419427573680878,0,0.0473657101392746,0.009473142214119434,0,0,0,0,0.01894628442823887,0.2557748556137085,0,0,-0.09946799278259277,0,0.07578513771295547,0.0473657101392746,0,-0.03789256885647774,-0.007104856893420219,0,0,0.028419427573680878,0,0,-0.01657799817621708,0,0.01894628442823887,0.009473142214119434,0,-0.0473657101392746,-0.026051141321659088,0,0,0.15157027542591095,0,-0.009473142214119434,-0.061575423926115036,0,0.028419427573680878,0.009473142214119434,0,0,-0.009473142214119434,0,0.0473657101392746,0.0023682855535298586,0,-0.009473142214119434,-0.004736571107059717,0,0,0,0,-0.01894628442823887,-0.026051141321659088,0,0.009473142214119434,0.03315599635243416,0,-0.009473142214119434,-0.0236828550696373,0,0,0.014209713786840439,0,-0.0947314202785492,-0.01184142753481865,0,0,0.014209713786840439,0,0,-0.04973399639129639,0,0.01894628442823887,0.03552428260445595,0,-0.03789256885647774,-0.004736571107059717,0,0.009473142214119434,0.028419427573680878,0,-0.01894628442823887,-0.0473657101392746,0,0.06631199270486832,0.01184142753481865,0,-0.009473142214119434,-0.007104856893420219,0,0.028419427573680878,0.007104856893420219,0,-0.08525828272104263,-0.06631199270486832,0,0.009473142214119434,0.028419427573680878,0,-0.10420456528663635,-0.042629141360521317,0,0.01894628442823887,0.01657799817621708,0,-0.028419427573680878,-0.0236828550696373,0,0,0.04026085510849953,0,0,-0.0236828550696373,0,0.01894628442823887,0,0,-0.009473142214119434,0,0,0.01894628442823887,0.13499227166175842,0,-0.009473142214119434,-0.026051141321659088,0,0,0.0236828550696373,0,-0.01894628442823887,-0.007104856893420219,0,0.07578513771295547,0.026051141321659088,0,-0.009473142214119434,-0.007104856893420219,0,0.056838855147361755,0.0236828550696373,0,-0.028419427573680878,-0.009473142214119434,0,0,0.07341685146093369,0,-0.01894628442823887,-0.01894628442823887,0,0.009473142214119434,0.009473142214119434,0,-0.13262398540973663,-0.004736571107059717,0,0.01894628442823887,0,0,0,-0.0473657101392746,0,0.009473142214119434,0,0,-0.056838855147361755,-0.01184142753481865,0,0,0.021314570680260658,0,-0.07578513771295547,-0.030787711963057518,0,0.03789256885647774,0.004736571107059717,0,0,-0.014209713786840439,0,0.01894628442823887,0.03315599635243416,0,-0.3789256811141968,-0.0236828550696373,0,0,0.014209713786840439,0,-0.009473142214119434,-0.042629141360521317,0],"text":"8.  VIP DEFLECTION\n\nIn the VIP Deflection game you position mirrors anywhere on the display screen.\nThe object of the game is to deflect a ball of the mirrors a maximum number of\ntimes before hitting the target.\n\nThe number of deflections times the target number gives you deflection points.\nThese are added to your previous point total.  If you fail to hit the target you\nget no points.  The winner of the game is the player who accumulates 257 or\nmore deflected points.\n\nHow to Play VIP Deflection\n\n1. Load the CHIP-8 interpretor at 0000-01FF\n   and the game starting at 0200.\n\n2. Turn RUN switch on.\n\n3. After the scores appear a letter, the target with a number and a ball.  The\n   letter signifies the player who will program the mirrors.  This sequence will\n   be repeated until there is a winner.\n\n4. To program the mirrors, select the proper mirror type by using Table 1 (VIP1-8.jpg)\n   as a guide.  Key 1 will place a horizontal mirror on the board.  Key 2 selects a\n   vertical mirror, Key 3 a slant-left mirror, Key 4 a slant-right mirror.\n\n5. After a mirror has been selected, you may position the mirror by using keys 1\n   through 4 and 6 through 9 (see Table 2 for movement of a mirror).  Once a\n   mirror has been selected and positioned, it may be fixed into position by pressing\n   Key 5.\n\n   Table 2 - Mirror Positioning and Ball Direction\n   Key Selection     |  Positioning and Direction\n   ------------------+---------------------------\n         1           |  up and to the left\n         2           |  up\n         3           |  up and to the right\n         4           |  left\n         5           |  right\n         7           |  down and to the left\n         8           |  down\n         9           |  down and to the right\n\n6. You may position up to 10 mirrors on the game board.  After you have the maximum\n   amount on the board you must press Key 0 to progress to the fire mode.  If you\n   wish to progress to the fire mode with less than 10 mirrors programmed, you may\n   do so by pressing Key 0.  You fire the ball in the direction you want by using\n   Keys 1 through 4 and Keys 6 through 9 (see Table 2).\n\n7. After the ball has reached the target or leaves the game board, the player's\n   score is computed and displayed and a new ball and target appear.\n\n\n\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/games/Deflection [John Fort].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Deflection%20%5BJohn%20Fort%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/games/Lunar Lander [Udo Pernisz, 1979].txt","language":"basic","vector":[0.011043847538530827,0.031751058995723724,0,-0.005521923769265413,-0.05936067923903465,0,0.14357000589370728,0.033131539821624756,0,-0.03865346312522888,-0.033131539821624756,0,0.02760961838066578,0.012424328364431858,0,-0.04969731345772743,-0.05659971758723259,0,0.060741160064935684,0.005521923769265413,0,-0.016565769910812378,-0.0013804809423163533,0,0.033131539821624756,0.04693635180592537,0,-0.016565769910812378,-0.00966336578130722,0,0.011043847538530827,0.04693635180592537,0,-0.02760961838066578,-0.033131539821624756,0,0.04969731345772743,0.02760961838066578,0,-0.03865346312522888,-0.012424328364431858,0,0.060741160064935684,0.02760961838066578,0,-0.02760961838066578,-0.008282884955406189,0,0.060741160064935684,0.0027609618846327066,0,-0.05521923676133156,-0.05936067923903465,0,0.060741160064935684,0.00966336578130722,0,-0.1490919291973114,-0.033131539821624756,0,0.016565769910812378,0.02899009920656681,0,-0.016565769910812378,-0.01932673156261444,0,0.05521923676133156,0.023468175902962685,0,-0.011043847538530827,-0.04003394395112991,0,0.022087695077061653,0.005521923769265413,0,0,-0.016565769910812378,0,0.022087695077061653,0.04969731345772743,0,-0.20983310043811798,-0.011043847538530827,0,0.07730692625045776,0.041414424777030945,0,-0.11043847352266312,-0.18084299564361572,0,0.03865346312522888,0.02760961838066578,0,-0.02760961838066578,-0.026229137554764748,0,0.005521923769265413,0.015185290016233921,0,-0.022087695077061653,-0.00966336578130722,0,0.08282884955406189,0.08144836872816086,0,-0.033131539821624756,-0.020707212388515472,0,0.12148232012987137,0.026229137554764748,0,-0.011043847538530827,-0.02760961838066578,0,0.022087695077061653,0.03865346312522888,0,-0.005521923769265413,-0.015185290016233921,0,0.016565769910812378,0.02899009920656681,0,0,-0.016565769910812378,0,0.45831966400146484,0.00966336578130722,0,-0.05521923676133156,-0.01932673156261444,0,0.05521923676133156,0.026229137554764748,0,-0.04969731345772743,-0.01932673156261444,0,0.016565769910812378,0.05383875593543053,0,-0.005521923769265413,-0.01794625073671341,0,0.016565769910812378,0.031751058995723724,0,-0.06626307964324951,-0.03589250147342682,0,0.03865346312522888,0.041414424777030945,0,-0.022087695077061653,-0.08006788790225983,0,0.060741160064935684,0.016565769910812378,0,-0.022087695077061653,-0.008282884955406189,0,0.07730692625045776,0.02899009920656681,0,-0.044175390154123306,-0.030370580032467842,0,0,0.012424328364431858,0,-0.044175390154123306,-0.015185290016233921,0,0.060741160064935684,0.016565769910812378,0,-0.18222348392009735,-0.11319943517446518,0,0.033131539821624756,0.04555587098002434,0,-0.06626307964324951,-0.06764356046915054,0,0.016565769910812378,0.01932673156261444,0,-0.18222348392009735,-0.01932673156261444,0,0.011043847538530827,0.022087695077061653,0,-0.005521923769265413,-0.016565769910812378,0,0,0.060741160064935684,0,-0.005521923769265413,-0.10215558856725693,0,0.17670156061649323,0.0745459645986557,0,-0.06626307964324951,-0.01794625073671341,0,0.022087695077061653,0.01380480919033289,0,-0.005521923769265413,-0.0041414424777030945,0,0.044175390154123306,0.044175390154123306,0,-0.033131539821624756,-0.00966336578130722,0,0,0.23606222867965698,0,-0.03865346312522888,-0.04003394395112991,0,0.02760961838066578,0.042794905602931976,0,-0.011043847538530827,-0.02899009920656681,0,0.07178500294685364,0.016565769910812378,0,-0.011043847538530827,-0.006902404595166445,0,0.03865346312522888,0.011043847538530827,0,-0.060741160064935684,-0.04003394395112991,0,0.022087695077061653,0.031751058995723724,0,-0.022087695077061653,-0.020707212388515472,0,0.044175390154123306,0.04555587098002434,0,0,-0.01794625073671341,0,0.011043847538530827,0.05383875593543053,0,-0.03865346312522888,-0.03589250147342682,0,0,0.015185290016233921,0,-0.005521923769265413,-0.05936067923903465,0,0.03865346312522888,0.03451202064752579,0,-0.02760961838066578,-0.09525318443775177,0,0.03865346312522888,0.030370580032467842,0,-0.005521923769265413,-0.03589250147342682,0,0.04969731345772743,0.01380480919033289,0,-0.011043847538530827,-0.09111174196004868,0,0.033131539821624756,0.011043847538530827,0,-0.02760961838066578,-0.05521923676133156,0,0.04969731345772743,0.01932673156261444,0,-0.033131539821624756,-0.030370580032467842,0,0.016565769910812378,0.09801414608955383,0,-0.022087695077061653,-0.04003394395112991,0,0.005521923769265413,0.012424328364431858,0,0,-0.008282884955406189,0,0.09387270361185074,0.042794905602931976,0,-0.016565769910812378,-0.024848656728863716,0,0.005521923769265413,0.030370580032467842,0,-0.033131539821624756,-0.022087695077061653,0,0.044175390154123306,0.01932673156261444,0,-0.022087695077061653,-0.006902404595166445,0,0.033131539821624756,0.04003394395112991,0,0,-0.005521923769265413,0,0.005521923769265413,0.13390664756298065,0,-0.09939462691545486,-0.044175390154123306,0,0.005521923769265413,0.024848656728863716,0,-0.060741160064935684,-0.023468175902962685,0,0.022087695077061653,0.026229137554764748,0,-0.033131539821624756,-0.0013804809423163533,0,0.02760961838066578,0.00966336578130722,0,-0.04969731345772743,-0.03589250147342682,0,0,0.00966336578130722,0,-0.022087695077061653,-0.008282884955406189,0,0.07730692625045776,0.03451202064752579,0,-0.022087695077061653,-0.01932673156261444,0,0.07730692625045776,0.03865346312522888,0,-0.3423592448234558,-0.01380480919033289,0,0.05521923676133156,0.024848656728863716,0,-0.04969731345772743,-0.016565769910812378,0],"text":"15. Lunar Lander\n\nYou are descending to the floor of a 250-foot crater.  The right side of the TV display\nshows amount of fuel, feet from bottom and fall rate per cycle.  Lenght of fall rate\ncycle changes from about 1/4 second to one second.  The fall rate increases by one\nfoot per second/per cycle.  The computer will update the display only at the end of\neach cycle.\n\nThe left side of the display shows the Lunar Lander descending from 250 feet.  The\nLander will first appear at one of sixteen locations.  It will then slowly drop down\nthe crater.  The crater walls have rock formations protruding from them which must\nbe avoided.  If either rocket motor should touch any part of the crater, the Lander\nwill explode in a cloud of smoke and disintegrate.  (Remember, these are atomic\nthrusters and react like miniature atomic bombs upon impact).\n\nWhen you reach 32 feet, the display will change, and you will see the crater floor.\nYou must now ladn between the rock formations on the floo and maintain a minimum fall\nrate.  As you drop your fall rate to zero, you soon discover that the Lander becomes\nmore and more unstable just as any hovering object would.  And now with perfect skill\nyou guide the ship in for a perfect touch down, or?\n\nHow to Play VIP Lunar Lander\n\n1. Load the CHIP-8 interpreter at 0000-01FF and teh game starting at 0200.\n\n2. Key 2 controls the thrust of the Lunar Lander.  One tone beep equals one pound\n   of fuel and one foot of thrust.\n\n3. Key 4 controlls the horizontal stabilizing engine,  and moves the Lander one\n   foot to the left per one pound of fuel.\n\n4. Key 6 controls the stabilization to the right.\n\n5. Stabilization controls only react after: (a) a complete fall cycle, or (b) after\n   the Key 2 thrust control is pressed.  You must be aware of this at all times or\n   you will crash even though either key 4 or 6 is pressed.\n\n6. At the end of each cycle, the Lunar Lander will move randomly at the rate of one\n   foot either right or left.  Therefore, as the fall rate approaches zero, the Lander\n   becomes more uncontrollable, and your horizontal stabilizers react more quickly.\n   (Just like the real thing).\n\n7. If you land too fast, the Lander will bounce and flip over.\n\n8. If you run out of fuel, the Lander will crash.\n\n9. You will not be allowed to go above 250 feet.  If you try to do so, you will just\n   waste precious fuel.\n\n10. Once you reach 32 feet and move into the landing display, you will not be allowed\n    to rise above 26 feet.  Trying to do so will waste more precious fuel.\n\n11. Game options\n  \n    You may select one of three options at the begining of the game.\n\n    Option 1: You start at 250 feet.  You are given 150 pounds of fuel.  You must land\n              at 5 feet per second or less.  The initial descent display is easy to\n              maneuver through.\n\n    Option 2: You start at 250 feet.  You have 200 pounds of fuel.  You must land at 3 feet\n              per second or less.  The initial descent display is hard to maneuver through.\n\n    Option 3: You start at 32 feet.  You have 100 pounds of fuel.  You must land at 3 feet\n              per second or less.  This display allows you to practice landing.  \n\n    You should consider Option 2 as the complete game when trying for Astronaut Ratings.\n\n12. Astronaut Ratings\n\n    The computer will award you with ratings depending on how good a lander you are.\n\n    You will obtain the rating of Astronaut by landing without regard to fall rate or\n    fuel.  You must not exceed fall rate, or zero fuel.\n    \n    You will obtain the rating of Astronaut Pilot, by ladning with regard to fuel.  80\n    pounds or more if you land between the two rock formations on the floor, and 50\n    pounds or more if you land between the crater wall and a rock formation.\n\n    You will obtain the rating of Astronaut Captain by landing the ship with regard to\n    fuel as per above and if the fall rate is two feet per second or less.  (Not an\n    easy task, as you will soon discover).\n\n13. About Graphics\n\n    This game has some interesting graphic displays when you run out of fuel, crash,\n    land too fast, when you land successfully.  I will leave them to your discovery,\n    as they are fun to watch.\n\n14. Landing Sites\n\n    The final landing display will appear somewhat like the illustration below\n    (VIPG1-15.jpg).  You may land in any of the three locations pointed to.  To land\n    between the crater walls and rock formations, you will have to first bring the\n    Lander to a zero fall rate while hovering in the center landing area.  Then bring\n    the ship up and just over the rock formation, and let it drop down to the landing\n    site.  At the last moment, a few taps on the thruster button will slow the lander\n    to the required fall rate.  It will take you many tries to land here, but don't\n    give up, it can be done!!\n\nNOTE:  VIP Lunar Lander requires at least 3K of RAM.  RAM memories are available to\n       increase your VIP from 2K to 3K at your local computer store or by contacting:\n                        RCA VIP Marketing\n                        New Holland Avenue\n                        Lancaster, PA 17604\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/games/Lunar Lander [Udo Pernisz, 1979].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Lunar%20Lander%20%5BUdo%20Pernisz%2C%201979%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/games/Mastermind FourRow (Robert Lindley, 1978).txt","language":"basic","vector":[0,0.006175693590193987,0,-0.012351387180387974,-0.049405548721551895,0,0.1482166349887848,0.015439233742654324,0,-0.024702774360775948,-0.027790620923042297,0,0.024702774360775948,0.021614927798509598,0,-0.024702774360775948,-0.024702774360775948,0,0.012351387180387974,0.0185270793735981,0,-0.061756934970617294,-0.0030878467950969934,0,0.1358652561903,0.015439233742654324,0,0,0,0,0.11116248369216919,0.08645971119403839,0,0,-0.021614927798509598,0,0,0.0185270793735981,0,-0.012351387180387974,-0.006175693590193987,0,0.0370541587471962,0.0370541587471962,0,-0.024702774360775948,-0.0401420071721077,0,0.0741083174943924,0.0030878467950969934,0,-0.012351387180387974,-0.012351387180387974,0,0.18527080118656158,0.021614927798509598,0,-0.061756934970617294,-0.012351387180387974,0,0.012351387180387974,0.0401420071721077,0,-0.012351387180387974,-0.027790620923042297,0,0,0.015439233742654324,0,0,-0.0030878467950969934,0,0.024702774360775948,0.0030878467950969934,0,0,-0.049405548721551895,0,0.012351387180387974,0.012351387180387974,0,-0.12351386994123459,-0.024702774360775948,0,0,0,0,-0.12351386994123459,-0.22541281580924988,0,0.012351387180387974,0.024702774360775948,0,0,-0.012351387180387974,0,0,0.00926353968679905,0,0,-0.015439233742654324,0,0.0370541587471962,0.0895475521683693,0,-0.0370541587471962,-0.012351387180387974,0,0.012351387180387974,0.015439233742654324,0,0,-0.024702774360775948,0,0,0.00926353968679905,0,0,-0.046317700296640396,0,0,0.06793262809515,0,-0.012351387180387974,-0.006175693590193987,0,0.34583884477615356,0.061756934970617294,0,-0.0741083174943924,0,0,0.012351387180387974,0.006175693590193987,0,-0.11116248369216919,-0.006175693590193987,0,0.049405548721551895,0.024702774360775948,0,-0.0370541587471962,-0.012351387180387974,0,0.0370541587471962,0.049405548721551895,0,-0.061756934970617294,-0.012351387180387974,0,0,0.09881109744310379,0,0,-0.033966314047575,0,0,0.024702774360775948,0,-0.0741083174943924,-0.006175693590193987,0,0.12351386994123459,0,0,-0.11116248369216919,-0.006175693590193987,0,0.024702774360775948,0.015439233742654324,0,-0.024702774360775948,-0.006175693590193987,0,0,0.024702774360775948,0,-0.0741083174943924,-0.061756934970617294,0,0.061756934970617294,0.0030878467950969934,0,-0.061756934970617294,-0.061756934970617294,0,0.0370541587471962,0.006175693590193987,0,-0.09881109744310379,-0.0030878467950969934,0,0.024702774360775948,0.0030878467950969934,0,-0.012351387180387974,0,0,0.012351387180387974,0.0185270793735981,0,0,-0.129689559340477,0,0.24702773988246918,0.015439233742654324,0,-0.0370541587471962,-0.006175693590193987,0,0.024702774360775948,0,0,0,-0.0030878467950969934,0,0,0.0370541587471962,0,-0.1605680286884308,-0.012351387180387974,0,0.012351387180387974,0.1790951043367386,0,0,-0.043229855597019196,0,0.061756934970617294,0.00926353968679905,0,0,-0.07102047652006149,0,0.012351387180387974,0.058669086545705795,0,-0.11116248369216919,-0.0185270793735981,0,0.0370541587471962,0.046317700296640396,0,-0.012351387180387974,-0.030878467485308647,0,0.012351387180387974,0,0,-0.17291942238807678,-0.0030878467950969934,0,0.024702774360775948,0.00926353968679905,0,-0.09881109744310379,-0.043229855597019196,0,0,0.0802840143442154,0,-0.012351387180387974,-0.058669086545705795,0,0.024702774360775948,0.058669086545705795,0,0,-0.027790620923042297,0,0.0370541587471962,0.0030878467950969934,0,-0.0370541587471962,-0.0401420071721077,0,0.061756934970617294,0.030878467485308647,0,0,-0.030878467485308647,0,0.012351387180387974,0.024702774360775948,0,-0.049405548721551895,-0.049405548721551895,0,0.012351387180387974,0.015439233742654324,0,-0.061756934970617294,-0.0370541587471962,0,0,0.006175693590193987,0,-0.024702774360775948,-0.030878467485308647,0,0.024702774360775948,0.1266017109155655,0,0,-0.0185270793735981,0,0.024702774360775948,0.012351387180387974,0,0,0,0,0.024702774360775948,0.00926353968679905,0,0,-0.0895475521683693,0,0.049405548721551895,0.00926353968679905,0,-0.024702774360775948,0,0,0.024702774360775948,0.030878467485308647,0,-0.012351387180387974,0,0,0.0741083174943924,0.006175693590193987,0,0,-0.058669086545705795,0,0,0.10498678684234619,0,-0.024702774360775948,-0.024702774360775948,0,0.012351387180387974,0.00926353968679905,0,-0.024702774360775948,-0.11425032466650009,0,0.0741083174943924,0.024702774360775948,0,0,-0.058669086545705795,0,0.012351387180387974,0.00926353968679905,0,0,-0.021614927798509598,0,0,0.012351387180387974,0,-0.012351387180387974,0,0,0.012351387180387974,0.0185270793735981,0,0,-0.0370541587471962,0,0,0.061756934970617294,0,-0.44464993476867676,-0.027790620923042297,0,0.0370541587471962,0.012351387180387974,0,-0.024702774360775948,-0.030878467485308647,0],"text":"\t\tMASTERMIND\n\t\t   by\n\t      Robert Lindley\n\nI have progranmed two versLons of the game Mastermind. This game is distributed by Invicta Plastics, Suite 940, 200 - 5th Ave., New York, NY 10010, and is available most pLaces where toys and games are sold.\nFor complete details of the game, please refer to their instructions. The information given here refers to this particular VIP iurplementation.\nThe two versions are essentially the same except that the first has a four number code and the second has a five  nr:mber hidden code selected at random..  In the four number version, the digits one through six are used and in the five  number version the diglts zero through seven are used.\nWhile the game is running, the other hex keys, except key F, have no effect. Key F is used when you change your mind and want to change your input. This key erases the current partial entry.\nThe game starts by displaying a series of dashes arranged in rows. As the game progresses, the player attempts to  deduce the hidden code by replacing the dashes with digits entered via the hex keyboard. Each tlme a hex key is used, the selected digit replaces a dash in  one vertical column. This vertical column is one guess of the ten allowed to deduce\nthe hidden number. When the bottom dash in any column is replaced by a digit,  that try is imidiately scored. This score appears below the current column. If any digit in the column exactly matches the hidden number digit in the same row, a broken bar will appear. then four or five (one for each row in the game) appear, the hidden number has been deduced\nand it will be revealed at the right end of  the screen. If any digit in the column matches a hidden digit, but in an incorrect erorr, a white bar will appear. Note that the scoring is across all rows. For example, if there are two fives in a column and one of then is in the correct row and there is only one five in the hidden numbers, one broken bar will appear.\nWhen all allowed ten tries  have been used, the hidden number will be revealed. \n\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/games/Mastermind FourRow (Robert Lindley, 1978).txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Mastermind%20FourRow%20(Robert%20Lindley%2C%201978).txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/games/Most Dangerous Game [Peter Maruhnic].txt","language":"basic","vector":[0.019817953929305077,0.027249686419963837,0,-0.009908976964652538,-0.05697661638259888,0,0.02972692996263504,0.02972692996263504,0,-0.0693628340959549,-0.017340708523988724,0,0.02972692996263504,0.04459039494395256,0,-0.0792718157172203,-0.012386221438646317,0,0.05945385992527008,0.024772442877292633,0,-0.11890771985054016,-0.01486346498131752,0,0.009908976964652538,0.0024772442411631346,0,0,-0.02972692996263504,0,0.019817953929305077,0.04211315140128136,0,0,-0.03715866431593895,0,0.03963590785861015,0.01486346498131752,0,0,-0.03963590785861015,0,0.16845260560512543,0.017340708523988724,0,0,-0.09413527697324753,0,0.10899874567985535,0.01486346498131752,0,-0.0693628340959549,-0.00743173249065876,0,0.1486346572637558,0.0024772442411631346,0,0,-0.019817953929305077,0,0,0.06440834701061249,0,-0.009908976964652538,-0.004954488482326269,0,0.11890771985054016,0.009908976964652538,0,-0.05945385992527008,-0.03468141704797745,0,0,0,0,0,-0.03468141704797745,0,0.009908976964652538,0.02229519747197628,0,-0.11890771985054016,-0.017340708523988724,0,0.009908976964652538,0,0,-0.16845260560512543,-0.17340709269046783,0,0.019817953929305077,0.00743173249065876,0,-0.019817953929305077,-0.004954488482326269,0,0.03963590785861015,0.019817953929305077,0,0,-0.00743173249065876,0,0.17836157977581024,0.019817953929305077,0,-0.009908976964652538,-0.03468141704797745,0,0.02972692996263504,0.03715866431593895,0,0,-0.03963590785861015,0,0.03963590785861015,0.03715866431593895,0,0,-0.0693628340959549,0,0,0.01486346498131752,0,-0.049544885754585266,-0.00743173249065876,0,0.4260860085487366,0.032204173505306244,0,-0.10899874567985535,-0.0024772442411631346,0,0.019817953929305077,0.02972692996263504,0,-0.019817953929305077,-0.0024772442411631346,0,0.03963590785861015,0.08422630280256271,0,-0.08918078988790512,-0.012386221438646317,0,0.02972692996263504,0.05449937283992767,0,-0.019817953929305077,-0.04211315140128136,0,0.049544885754585266,0.0792718157172203,0,-0.009908976964652538,-0.017340708523988724,0,0,0.004954488482326269,0,-0.009908976964652538,-0.04211315140128136,0,0,0.06688559055328369,0,-0.019817953929305077,-0.02972692996263504,0,0.009908976964652538,0,0,-0.019817953929305077,-0.009908976964652538,0,0.049544885754585266,0.00743173249065876,0,-0.1486346572637558,-0.05945385992527008,0,0.03963590785861015,0.009908976964652538,0,-0.009908976964652538,-0.09908977150917053,0,0,0.009908976964652538,0,-0.02972692996263504,-0.017340708523988724,0,0.019817953929305077,0.02972692996263504,0,-0.03963590785861015,-0.004954488482326269,0,0.009908976964652538,0.08918078988790512,0,-0.019817953929305077,-0.09165803343057632,0,0.16845260560512543,0.017340708523988724,0,-0.08918078988790512,0,0,0.019817953929305077,0.024772442877292633,0,-0.019817953929305077,-0.0024772442411631346,0,0.02972692996263504,0.00743173249065876,0,-0.0792718157172203,-0.04211315140128136,0,0,0.2204747349023819,0,-0.02972692996263504,-0.0743173286318779,0,0.009908976964652538,0.024772442877292633,0,0,-0.03963590785861015,0,0.23781543970108032,0.02229519747197628,0,-0.019817953929305077,-0.04459039494395256,0,0,0.019817953929305077,0,-0.019817953929305077,-0.009908976964652538,0,0,0.03468141704797745,0,-0.0792718157172203,-0.004954488482326269,0,0.009908976964652538,0.04211315140128136,0,-0.02972692996263504,-0.004954488482326269,0,0,0.027249686419963837,0,0,-0.027249686419963837,0,0.009908976964652538,0.04211315140128136,0,-0.019817953929305077,-0.009908976964652538,0,0.03963590785861015,0.024772442877292633,0,-0.009908976964652538,-0.0767945721745491,0,0.019817953929305077,0.049544885754585266,0,0,-0.019817953929305077,0,0.08918078988790512,0,0,0,-0.01486346498131752,0,0.02972692996263504,0.012386221438646317,0,-0.03963590785861015,-0.049544885754585266,0,0.03963590785861015,0.00743173249065876,0,-0.02972692996263504,-0.05202212929725647,0,0.08918078988790512,0.08918078988790512,0,-0.009908976964652538,-0.049544885754585266,0,0.03963590785861015,0.019817953929305077,0,-0.009908976964652538,-0.009908976964652538,0,0,0.05945385992527008,0,-0.049544885754585266,-0.04211315140128136,0,0,0.00743173249065876,0,-0.02972692996263504,-0.01486346498131752,0,0.019817953929305077,0.01486346498131752,0,-0.0693628340959549,0,0,0.019817953929305077,0.11890771985054016,0,-0.1486346572637558,-0.02229519747197628,0,0.02972692996263504,0.10652150213718414,0,0,-0.03715866431593895,0,0,0.004954488482326269,0,-0.03963590785861015,-0.04459039494395256,0,0.009908976964652538,0.01486346498131752,0,0,-0.03715866431593895,0,0.019817953929305077,0.00743173249065876,0,-0.05945385992527008,-0.004954488482326269,0,0,0.017340708523988724,0,-0.02972692996263504,-0.012386221438646317,0,0.03963590785861015,0.019817953929305077,0,-0.019817953929305077,-0.00743173249065876,0,0,0.009908976964652538,0,-0.34681418538093567,-0.004954488482326269,0,0.009908976964652538,0.047067638486623764,0,0,-0.004954488482326269,0],"text":"10. VIP Most Dangerous Game\n\nVIP Most Dangerous Game pits a hunter against a hunted in a maze.  The hunter must\nshoot the hunted before either time runs out or the hunted escapes the maze.\nHowever, neither the hunted nor the hunter can see a wall in the maze until he runs\ninto it.  There is always at least one path through the maze.\n\nHow To Play VIP Most Dangerous Game\n\n1. Load the CHIP-8 interpretor at 0000-01FF\n   and the game starting at 0200.\n\n2. Turn RUN switch on.\n\n3. Hunted's turn:\n   When the arrow appears in the lower left, it is the hunted's turn.  Keys 2-4-6-8\n   control direction (up-left-right-down, respectively).  The hunted continues to\n   move until a) he makes 5 moves, b) he hits a wall or c) key 0 is pressed.\n\n4. Hunter's turn\n   When the arrow appears in the lower right, it is the hunter's turn.  The hunter's\n   turn consists of two modes, the move and the shoot.  Keys 2-4-6-8 and 0 control both\n   modes.  Like the hunted, the hunter continues to move until a) he makes 3 moves,\n   b) he hits a wall or c) key 0 is pressed.  If he hits the wall, case b), he cannot\n   fire a bullet.  The hunter may fire one of his bullets using the direction keys\n   2-4-6-8.  The bullet will travel four squares in the corresponding direction, unless\n   a wall is encountered.  If the hunter prefers not to use a bullet, he must press key 0.\n\n5. Repeat steps 3 and 4 until:\n   a) The number of turns (upper left on the display) expire.  The hunted wins.\n   b) The hunter lands on or shoots the hunted.  The hunter wins.\n   c) The hunted lands on hunter, thereby giving up.  The hunter wins.\n   d) The hunted reaches the lower right corner of the maze with at least 1 move\n      remaining in his turn.  The hunted wins, by escaping the maze.\n\n6. Variations of VIP Most Dangerous Game may be played by changing certain bytes in\n   the program.\n\nLocation Default Meaning\n0215\t 0F\t Number of turns in the game.\n0217\t 06\t Number of bullets hunter has at start.\n0219\t 03\t Number of moves per turn for the hunter.\n0221\t 01\t Number of squares per move (hunted and hunter).\n022B\t 05\t Number of moves per turn for the hunted.\n024B\t 01\t If zero, walls are invisible.\n0355\t 04\t Number of squares a bullet will go.\n04E3\t 70\t Probability (out of 100Hex) of a wall appearing.\n04EB\t FE\t If FF, a wall may appear at previously tested boundaries.\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/games/Most Dangerous Game [Peter Maruhnic].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Most%20Dangerous%20Game%20%5BPeter%20Maruhnic%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/games/Programmable Spacefighters [Jef Winsor].txt","language":"basic","vector":[0.025027448311448097,0.010010979138314724,0,-0.005005489569157362,-0.06632273644208908,0,0.08008783310651779,0.016267841681838036,0,-0.060065872967243195,-0.022524703294038773,0,0.015016468241810799,0.027530191466212273,0,-0.030032936483621597,-0.060065872967243195,0,0.08008783310651779,0.060065872967243195,0,-0.045049406588077545,-0.016267841681838036,0,0.010010979138314724,0.026278819888830185,0,-0.0700768530368805,-0.04129528999328613,0,0.08509331941604614,0.045049406588077545,0,-0.005005489569157362,-0.03378705307841301,0,0.055060382932424545,0.021273329854011536,0,-0.015016468241810799,-0.03378705307841301,0,0.12013174593448639,0.04379803314805031,0,-0.025027448311448097,-0.03253568336367607,0,0.040043916553258896,0.013765095733106136,0,-0.015016468241810799,-0.01877058483660221,0,0.140153706073761,0.016267841681838036,0,-0.025027448311448097,-0.03503842651844025,0,0.010010979138314724,0.017519213259220123,0,-0.025027448311448097,-0.021273329854011536,0,0.050054896622896194,0.03754116967320442,0,-0.050054896622896194,-0.036289799958467484,0,0.020021958276629448,0.010010979138314724,0,-0.005005489569157362,-0.06256861984729767,0,0.06507136672735214,0.04129528999328613,0,-0.18019762635231018,-0.022524703294038773,0,0.10511527955532074,0.005005489569157362,0,-0.09510429948568344,-0.10761802643537521,0,0.030032936483621597,0.03503842651844025,0,-0.005005489569157362,-0.011262351647019386,0,0.03503842651844025,0.025027448311448097,0,-0.010010979138314724,-0.03378705307841301,0,0.0700768530368805,0.046300776302814484,0,-0.08509331941604614,-0.03253568336367607,0,0,0.013765095733106136,0,-0.005005489569157362,-0.027530191466212273,0,0.010010979138314724,0.040043916553258896,0,-0.025027448311448097,-0.026278819888830185,0,0.045049406588077545,0.010010979138314724,0,-0.025027448311448097,-0.03879254311323166,0,0.49053797125816345,0.055060382932424545,0,-0.030032936483621597,-0.010010979138314724,0,0.045049406588077545,0.05255763977766037,0,-0.03503842651844025,-0.012513724155724049,0,0.005005489569157362,0.0700768530368805,0,-0.010010979138314724,-0.022524703294038773,0,0.005005489569157362,0.026278819888830185,0,-0.12513723969459534,-0.020021958276629448,0,0.06507136672735214,0.07758508622646332,0,-0.025027448311448097,-0.02878156490623951,0,0,0.025027448311448097,0,-0.030032936483621597,-0.015016468241810799,0,0,0.027530191466212273,0,-0.07508233934640884,-0.03378705307841301,0,0.005005489569157362,0.017519213259220123,0,-0.020021958276629448,-0.01877058483660221,0,0.040043916553258896,0.03754116967320442,0,-0.23525801301002502,-0.09635566920042038,0,0.025027448311448097,0.06256861984729767,0,-0.060065872967243195,-0.055060382932424545,0,0.010010979138314724,0.016267841681838036,0,-0.18019762635231018,-0.025027448311448097,0,0.040043916553258896,0.03754116967320442,0,-0.025027448311448097,-0.010010979138314724,0,0.025027448311448097,0.036289799958467484,0,-0.08509331941604614,-0.09510429948568344,0,0.13014273345470428,0.016267841681838036,0,-0.03503842651844025,-0.002502744784578681,0,0.025027448311448097,0.011262351647019386,0,-0.005005489569157362,-0.013765095733106136,0,0.015016468241810799,0.04254665970802307,0,-0.11012076586484909,-0.027530191466212273,0,0.03503842651844025,0.24902310967445374,0,-0.005005489569157362,-0.022524703294038773,0,0.005005489569157362,0.04254665970802307,0,-0.010010979138314724,-0.02878156490623951,0,0.030032936483621597,0.005005489569157362,0,-0.03503842651844025,-0.022524703294038773,0,0.0700768530368805,0.02377607487142086,0,-0.08509331941604614,-0.0638199895620346,0,0.030032936483621597,0.046300776302814484,0,-0.0700768530368805,-0.016267841681838036,0,0.005005489569157362,0.030032936483621597,0,-0.050054896622896194,-0.021273329854011536,0,0.010010979138314724,0.010010979138314724,0,-0.010010979138314724,-0.04129528999328613,0,0.010010979138314724,0.03754116967320442,0,-0.045049406588077545,-0.016267841681838036,0,0.050054896622896194,0.022524703294038773,0,-0.12513723969459534,-0.1238858625292778,0,0.025027448311448097,0.025027448311448097,0,-0.010010979138314724,-0.04254665970802307,0,0.025027448311448097,0.010010979138314724,0,-0.050054896622896194,-0.09135018289089203,0,0,0.036289799958467484,0,-0.015016468241810799,-0.05756312981247902,0,0.020021958276629448,0.03879254311323166,0,-0.015016468241810799,-0.06632273644208908,0,0.050054896622896194,0.07257959991693497,0,-0.030032936483621597,-0.01877058483660221,0,0.10010979324579239,0.021273329854011536,0,-0.020021958276629448,-0.005005489569157362,0,0.040043916553258896,0.025027448311448097,0,-0.040043916553258896,-0.07633371651172638,0,0.025027448311448097,0.017519213259220123,0,-0.050054896622896194,-0.0037541170604526997,0,0.030032936483621597,0.005005489569157362,0,-0.06507136672735214,-0.011262351647019386,0,0.08008783310651779,0.026278819888830185,0,-0.010010979138314724,-0.02377607487142086,0,0.010010979138314724,0.1576729118824005,0,-0.03503842651844025,-0.050054896622896194,0,0.030032936483621597,0.026278819888830185,0,-0.06507136672735214,-0.04379803314805031,0,0.020021958276629448,0.0037541170604526997,0,-0.025027448311448097,-0.027530191466212273,0,0.040043916553258896,0.006256862077862024,0,-0.030032936483621597,-0.036289799958467484,0,0.005005489569157362,0.021273329854011536,0,-0.09009881317615509,-0.02878156490623951,0,0.08008783310651779,0.025027448311448097,0,-0.020021958276629448,-0.0700768530368805,0,0.005005489569157362,0.012513724155724049,0,-0.21023055911064148,-0.02377607487142086,0,0.06507136672735214,0.013765095733106136,0,0,-0.030032936483621597,0],"text":"14. VIP Programmable Spacefighters\n\nProgrammable Spacefighters is a combat game involving 2 to 8 spaceships competing\nfor the domination of a contained field in space.  The field of play is a \ntwo-dimensional representation of an oblong spheroid.\n\nThe movement and fire of each spacefighter is controlled by programming a series of\ncommands into each fighter's instruction storage table.  Once all the spacefighters\nare programmed, they carry out their commands by sequentially executing a single step\nat a time.  The play of the game ins divided into rounds.  Each spacefighter may\nexecute between 1 and 15 commands per round.\n\nThe fighters all have the same appearance and capabilities.  Players distinguish\nbetween fighters by examining the defense strength and position of their fighters\nat the begining of every round.\n\nEach fighter may face in any of 8 directions.  All firing and forward movement\noccurs in the direction the fighter is currently facing.  As a spacefighter crosses\noutside the two-dimensional field of play, it wraps around and re-enters on the\nopposite side of the field.  Laser bursts terminate when they travel outside the\nfield or hit a target.\n\nEach round consists of a selected number of steps.  Each step is executed in 2 parts.\nDuring the first part, every spacefighter wishing to fire may execute a fire operation.\nThe defense strength of any fighter which is hit by a laser burst is reduced by 1\nand a small flash appears.\n\nAfter all fighters have had an opportunity to execute fire instructions, the movement\npart of the step begins.  Any fighter which has had its defense strength reduced to 0\nis destroyed and a longer flash appears.  The defense strength is changed to a special\ncode so that the fighter will no longer be programmable or take part in the execution\nphase.  The destroyed fighter will still be open to examination during the Defense/\nPosition Check phase.  Fighers having a defense strength greater than 0 may execute\na movement command if there is one.  Breaking each step into 2 such parts removes any\nstrategic advantage to moving first.\n\nThe nature of the game, in that there are variable parameters and no fixed victory\nconditions, allows the players a lot of freedom.  Two to eight players can command\nsingle fighters.  Four or less players can each command multiple fighters.  Two\nfleets could complete to destroy their opponents' flagship first.  Handicaps can\nbe implemented through an imbalance of fighters in different fleets.  An odd number\nof players can play in a free for all or team game.  In a non-combat approach, a full\ncomplement of space fighters could be programmed to preform in kaleidoscope or other\ntype formations.\n\n\nHow to Play VIP Programmable Spacefighters\n\n1. Load the CHIP-8 interpreter at 0000-01FF and\n   the game starting at 0200.\n\n2. Turn RUN switch on.\n\n3. Initalization of Game.\n   Various parameters are entered at the start of the game to determine the number\n   of spacefighters and other aspects of play.\n\n   S: Enter number of spacefighters.  1 to 8 spacefighters may be used.  The program\n      will adjust invalid enteries to the nearest valid number.\n\n   D: Enter defense strength.  A spacefighter may be hit from 1 to F times by laser\n      before being destroyed.\n\n   E: Enter number of command entries.  A spacefighter may be programmed with 1 to F\n      commands during the programming phase of each round.\n\n   C: Enter clock duration/no clock.  A timer clock 1 to F phorseks in duration may\n      be selected.  Each phorsek equals 4 seconds.  The clock is not enabled if a 0\n      is entered.  The clock time is the time allowed for each fighter to be set up.\n\n   F: Enter fire power available.  A spacefighter may be allowed to fire 1 to F\n      laser bursts per round.\n\n   A: Enter accumulation/no accumulation.  A spacefighter may be allowed to accumulate\n      all unused laser bursts by entering 1 to F.  Accumulation is not allowed if a\n      0 is entered.\n\n4. Presentation of Field and Spacefighters.\n   The two-dimensional representation of the palying fields consists of 10 vertical\n   by 15 horizontal positons indicated by grid markings around the perimeter.  The\n   spacefighters will be in their initial positions.\n\n5. Defense/Position Check.\n     Enter number of spacefighter to be examined.\n     S: Current spacefighter being examined.\n     D: Defense strength of current spacefighter.\n     Enter 0 to end defense/position check phase.\n\n6. Program Spacefighters.\n   Surviving spacefighters are programmed in ascending order.  Enter 0 to begin\n   programming first spacefighter.  Defense strength and position are shown during\n   programming.\n     E: indicates number of enteries left after current command.\n     C: indicates time remaining to program current fighter if clock was entered.\n\n    COMMAND   FUNCTION\n      1        Rotate 45 ccw, Move fwd\n      2        Move fwd\n      3        Rotate 45 cw, Move fwd\n      4        Rotate 45 ccw\n      5        Fire\n      6        Rotate 45 cw\n      B        Erase all commands and reprogram current spacefighter\n      E        End programming of current spacefighter\n      7-A,C,D,F  Rest, No operation\n      0        Rest, Begin programming next spacefighter\n\n   Enter 0 to begin programming each successive spacefighter.\n\n7. Execute Commands.\n   Enter 0 after all spacefighters are programmed to start execution of commands.\n\n8. The recommended starting point when tryint the game out is with 1 or 2 spacefighters,\n   any defense, F (15) entries per round, no clock, F (15) fire power and any accumulation\n      S: 1 or 2\n      D: 1\n      E: F\n      C: 0\n      F: F\n      A: 0\n\n   Use the above to try out the movement and fire execution of the fighters.  Try\n   performing loops, figure 8's, tight turns, maximum fire coverage techniques, etc.\n   Start out simple when first playing the game against an opponent.  \n   Eight spacefighters can get very complicated.\n\n9. Changing different parameters creates very different effects on the play of the game.\n   The main effect of a large number of fighters is a more complicated game.  A large\n   number of enteries per round results in a more lively game involving farsighted\n   planning.  Fewer enteries involves more thinking and reacting to immediate developments\n   but is not without strategy when there are multiple fighters opposing each other.\n   The clock provides pressure which can be greatly increased by the moves-to-time ratio.\n   More fire power increases the importance of movement and positioning.  Accumulation\n   of fire power can have long range effects if there is low fire power and a large\n   number of moves per round.\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/games/Programmable Spacefighters [Jef Winsor].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Programmable%20Spacefighters%20%5BJef%20Winsor%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/games/Reversi [Philip Baltzer].txt","language":"basic","vector":[0.012885204516351223,0.016106504946947098,0,-0.012885204516351223,-0.04831951856613159,0,0.09019643068313599,0.05798342078924179,0,-0.025770409032702446,-0.09663903713226318,0,0.012885204516351223,0.0032213011290878057,0,-0.09019643068313599,-0.04509821534156799,0,0.05154081806540489,0.012885204516351223,0,-0.05154081806540489,-0.016106504946947098,0,0.025770409032702446,0.016106504946947098,0,-0.025770409032702446,0,0,0.038655612617731094,0.038655612617731094,0,-0.012885204516351223,-0.016106504946947098,0,0.15462245047092438,0.0032213011290878057,0,-0.025770409032702446,-0.019327806308865547,0,0.11596684157848358,0.028991710394620895,0,0,-0.04187691584229469,0,0.14173725247383118,0,0,-0.05154081806540489,-0.028991710394620895,0,0.16750766336917877,0.025770409032702446,0,-0.012885204516351223,-0.019327806308865547,0,0.012885204516351223,0.0064426022581756115,0,-0.012885204516351223,-0.019327806308865547,0,0.025770409032702446,0.022549107670783997,0,-0.038655612617731094,-0.022549107670783997,0,0.06442601978778839,0.009663903154432774,0,0,-0.035434313118457794,0,0.012885204516351223,0.025770409032702446,0,-0.20616327226161957,-0.06442601978778839,0,0,0.0032213011290878057,0,-0.025770409032702446,-0.20294196903705597,0,0.025770409032702446,0.04509821534156799,0,0,-0.05476211756467819,0,0.10308163613080978,0.009663903154432774,0,-0.025770409032702446,-0.025770409032702446,0,0.12885203957557678,0.04509821534156799,0,-0.025770409032702446,-0.022549107670783997,0,0.025770409032702446,0.0064426022581756115,0,0,-0.04509821534156799,0,0,0.032213009893894196,0,-0.025770409032702446,-0.028991710394620895,0,0,0.032213009893894196,0,0,-0.05154081806540489,0,0.36078572273254395,0.019327806308865547,0,-0.05154081806540489,-0.009663903154432774,0,0.06442601978778839,0.08053252846002579,0,-0.05154081806540489,-0.019327806308865547,0,0,0.06442601978778839,0,-0.025770409032702446,0,0,0.012885204516351223,0.08053252846002579,0,-0.025770409032702446,-0.028991710394620895,0,0.038655612617731094,0.08375383168458939,0,-0.012885204516351223,-0.016106504946947098,0,0.012885204516351223,0.019327806308865547,0,-0.012885204516351223,-0.012885204516351223,0,0.012885204516351223,0.012885204516351223,0,-0.09019643068313599,-0.032213009893894196,0,0,0.038655612617731094,0,-0.012885204516351223,-0.009663903154432774,0,0.012885204516351223,0.0064426022581756115,0,-0.16750766336917877,-0.10630293935537338,0,0.07731122523546219,0.0032213011290878057,0,-0.07731122523546219,-0.019327806308865547,0,0.012885204516351223,0.012885204516351223,0,-0.15462245047092438,-0.009663903154432774,0,0.025770409032702446,0.06442601978778839,0,-0.012885204516351223,-0.022549107670783997,0,0.012885204516351223,0.06442601978778839,0,0,-0.11274553835391998,0,0.07731122523546219,0.022549107670783997,0,-0.038655612617731094,-0.025770409032702446,0,0.012885204516351223,0.0032213011290878057,0,0,-0.016106504946947098,0,0.012885204516351223,0.022549107670783997,0,-0.11596684157848358,-0.0064426022581756115,0,0,0.18361416459083557,0,-0.012885204516351223,-0.04831951856613159,0,0.05154081806540489,0.04509821534156799,0,0,-0.038655612617731094,0,0.025770409032702446,0.0064426022581756115,0,-0.05154081806540489,-0.019327806308865547,0,0.06442601978778839,0.016106504946947098,0,-0.038655612617731094,-0.016106504946947098,0,0.038655612617731094,0.05798342078924179,0,-0.06442601978778839,-0.012885204516351223,0,0,0.035434313118457794,0,-0.18039286136627197,-0.0064426022581756115,0,0.012885204516351223,0.04187691584229469,0,-0.012885204516351223,-0.05798342078924179,0,0.10308163613080978,0.04187691584229469,0,-0.012885204516351223,-0.009663903154432774,0,0.012885204516351223,0.009663903154432774,0,-0.07731122523546219,-0.08697512745857239,0,0,0.04509821534156799,0,-0.038655612617731094,-0.04831951856613159,0,0,0.022549107670783997,0,0,-0.07731122523546219,0,0.025770409032702446,0.016106504946947098,0,-0.012885204516351223,-0.05798342078924179,0,0.07731122523546219,0.0064426022581756115,0,-0.15462245047092438,-0.0064426022581756115,0,0,0.04509821534156799,0,-0.012885204516351223,-0.019327806308865547,0,0.012885204516351223,0.032213009893894196,0,-0.025770409032702446,-0.0064426022581756115,0,0.025770409032702446,0.038655612617731094,0,0,-0.06442601978778839,0,0.038655612617731094,0.0064426022581756115,0,-0.012885204516351223,-0.0064426022581756115,0,0,0.025770409032702446,0,-0.038655612617731094,-0.0064426022581756115,0,0.05154081806540489,0.012885204516351223,0,-0.025770409032702446,-0.025770409032702446,0,0,0.12240944057703018,0,-0.05154081806540489,-0.032213009893894196,0,0.025770409032702446,0.035434313118457794,0,-0.038655612617731094,-0.04509821534156799,0,0,0,0,-0.012885204516351223,-0.09663903713226318,0,0.012885204516351223,0.009663903154432774,0,-0.025770409032702446,-0.012885204516351223,0,0,0.06120472028851509,0,-0.038655612617731094,-0.009663903154432774,0,0.05154081806540489,0.009663903154432774,0,-0.038655612617731094,-0.04187691584229469,0,0,0.0032213011290878057,0,-0.39944133162498474,-0.04187691584229469,0,0.038655612617731094,0,0,-0.10308163613080978,-0.0032213011290878057,0],"text":"6. VIP REVERSI\nReversi is a game over 100 years old, which has become popular recently under the\nname Othello.  The game is played on a 8x8 square, using two kinds of markers.\nIn VIP Reversi one player has the open markers and the other player the solid\nmarkers.  The score for either player at any time is the total number of his markers\non the square.\n\nHow to play VIP Reversi\n\n1. Load the CHIP-8 interpretor at 0000-01FF\n   and the game starting at 0200.\n\n2. Turn RUN switch on.\n\n3. The 8x8 square will be formed and the starting marker configuration shown, having\n   two of each kind of marker in the center four locations of the square.  The starting\n   score for each player is shown as 02 above a line of his markers.\n\n4. Your VIP indicates the player's turn by blinking that player's score and also blinking\n   a cursor dot in the 8x8 square.  A player moves the blinking cursor dot in the 8x8\n   square by pressing the direction keys 1-4 and 6-9 as shown. (VIPG1-6.JPG)\n\n5. When the cursor-dot is properly located, the player presses key 5 to place his marker\n   on the square.  You will find that your VIP will not allow you to make a non-valid\n   play.  The only placements allowed are onces for which at least one of the other\n   player's markers is surrounded between an existing marker of your own and your new\n   marker being placed.  All these markers must be in consecutive positions on the\n   square and can be in any horizontal, vertical or diagonal direction.  Once a new\n   marker has been placed, your VIP will change all such surrounded markers of the\n   other player to your kind and change the scores.\n\n6. Sometimes it may not be possible for a player to make a valid move.  If this happens\n   he must forfeit his move by pressing the \"F\" key! The game ends when neither player\n   can play or when the 8x8 square is completely filled with markers.  The goal is to\n   end the game with the highest score.  Do not be discouraged if during the game you\n   seem to be losing because this is a game with dramatic reversals!  Develop a winning\n   strategem and become a champion!!\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/games/Reversi [Philip Baltzer].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Reversi%20%5BPhilip%20Baltzer%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/games/Rush Hour [Hap, 2006].txt","language":"basic","vector":[0.04900204762816429,0.008167007938027382,0,0,-0.012250511907041073,0,0.04900204762816429,0.004083503969013691,0,-0.03266803175210953,-0.024501023814082146,0,0.03266803175210953,0.016334015876054764,0,-0.08167007565498352,-0.016334015876054764,0,0.06533606350421906,0.024501023814082146,0,-0.08167007565498352,-0.008167007938027382,0,0.03266803175210953,0.004083503969013691,0,0,-0.012250511907041073,0,0.03266803175210953,0.04083503782749176,0,0,-0.03266803175210953,0,0,0.02041751891374588,0,-0.016334015876054764,0,0,0.03266803175210953,0.028584526851773262,0,-0.04900204762816429,-0.016334015876054764,0,0.03266803175210953,0,0,-0.04900204762816429,-0.004083503969013691,0,0.06533606350421906,0.012250511907041073,0,-0.016334015876054764,-0.04900204762816429,0,0.03266803175210953,0.028584526851773262,0,-0.04900204762816429,-0.02041751891374588,0,0.016334015876054764,0.024501023814082146,0,-0.03266803175210953,-0.024501023814082146,0,0.03266803175210953,0.008167007938027382,0,0,-0.008167007938027382,0,0.03266803175210953,0,0,-0.09800409525632858,-0.016334015876054764,0,0,0.004083503969013691,0,-0.08167007565498352,-0.1020875945687294,0,0.03266803175210953,0.004083503969013691,0,-0.03266803175210953,-0.012250511907041073,0,0,0.028584526851773262,0,0,-0.012250511907041073,0,0.555356502532959,0.024501023814082146,0,-0.03266803175210953,-0.024501023814082146,0,0.016334015876054764,0.016334015876054764,0,-0.03266803175210953,-0.04083503782749176,0,0,0.036751534789800644,0,-0.03266803175210953,-0.04083503782749176,0,0.03266803175210953,0.016334015876054764,0,-0.03266803175210953,-0.008167007938027382,0,0.2613442540168762,0.016334015876054764,0,-0.09800409525632858,0,0,0,0,0,-0.016334015876054764,-0.012250511907041073,0,0,0.016334015876054764,0,0,-0.028584526851773262,0,0,0.02041751891374588,0,-0.016334015876054764,-0.03266803175210953,0,0.3103463053703308,0.036751534789800644,0,0,-0.008167007938027382,0,0.06533606350421906,0.028584526851773262,0,-0.04900204762816429,-0.024501023814082146,0,0,0.008167007938027382,0,-0.06533606350421906,-0.016334015876054764,0,0,0.02041751891374588,0,-0.21234220266342163,-0.02041751891374588,0,0,0.02041751891374588,0,-0.04900204762816429,-0.05308555066585541,0,0.016334015876054764,0.004083503969013691,0,-0.03266803175210953,-0.04900204762816429,0,0.06533606350421906,0.02041751891374588,0,-0.06533606350421906,-0.016334015876054764,0,0.09800409525632858,0,0,0,-0.008167007938027382,0,0.016334015876054764,0.2776782512664795,0,-0.016334015876054764,-0.06533606350421906,0,0.1306721270084381,0.008167007938027382,0,-0.06533606350421906,-0.02041751891374588,0,0.04900204762816429,0.012250511907041073,0,0,-0.016334015876054764,0,0.016334015876054764,0.028584526851773262,0,-0.06533606350421906,-0.024501023814082146,0,0,0.13883912563323975,0,-0.016334015876054764,-0.06941956281661987,0,0.016334015876054764,0.016334015876054764,0,-0.03266803175210953,-0.028584526851773262,0,0.08167007565498352,0.008167007938027382,0,-0.04900204762816429,0,0,0.06533606350421906,0.008167007938027382,0,-0.03266803175210953,-0.008167007938027382,0,0,0.1551731526851654,0,-0.03266803175210953,-0.004083503969013691,0,0,0.04083503782749176,0,0,-0.036751534789800644,0,0.016334015876054764,0.008167007938027382,0,-0.016334015876054764,-0.044918544590473175,0,0.016334015876054764,0.016334015876054764,0,-0.016334015876054764,-0.11025460809469223,0,0.016334015876054764,0.008167007938027382,0,-0.04900204762816429,-0.036751534789800644,0,0,0.012250511907041073,0,-0.03266803175210953,-0.024501023814082146,0,0,0.04083503782749176,0,0,-0.03266803175210953,0,0.016334015876054764,0.057169053703546524,0,0,-0.024501023814082146,0,0,0.008167007938027382,0,-0.03266803175210953,-0.028584526851773262,0,0,0.07350306957960129,0,0,-0.04083503782749176,0,0,0.024501023814082146,0,-0.016334015876054764,0,0,0,0.14700613915920258,0,-0.016334015876054764,-0.04083503782749176,0,0.016334015876054764,0.004083503969013691,0,-0.03266803175210953,-0.016334015876054764,0,0.016334015876054764,0.008167007938027382,0,0,-0.024501023814082146,0,0.04900204762816429,0.04900204762816429,0,0,-0.03266803175210953,0,0,0.09800409525632858,0,0,-0.04083503782749176,0,0.016334015876054764,0,0,-0.08167007565498352,-0.02041751891374588,0,0.016334015876054764,0,0,-0.016334015876054764,0,0,0.016334015876054764,0.008167007938027382,0,-0.03266803175210953,-0.012250511907041073,0,0.016334015876054764,0.08575358241796494,0,0,-0.008167007938027382,0,0,0.024501023814082146,0,-0.03266803175210953,-0.036751534789800644,0,0,0,0,-0.19600819051265717,-0.03266803175210953,0,0,0,0,-0.016334015876054764,-0.05308555066585541,0],"text":"Rush Hour (v1.1) for CHIP-8 by hap 08-02-08, http://hap.samor.nl/\nOriginally released on 17-12-06. Version 1.1 improves a few things.\nBased on a boardgame by Nobuyuki Yoshigahara \"Nob\" and ThinkFun,\nhttp://www.thinkfun.com/\n\nThis game contains 170 puzzles. Most were taken from the original cardsets,\nsome were made by me, and some were generated with Michel's PyTraffic,\nhttp://alpha.uhasselt.be/Research/Algebra/Members/pytraffic . Refer to\nthe source code for detailed information on this.\n\nHOW TO PLAY\n===========\n\nThe goal of the game is to slide the arrow block(s) out of the 6*6 grid.\nCompleting 10 boards will be awarded with the inclusion of the next boardset(s)\nas seen from the connections on the boardset select screen, a password will be\ngiven so you don't have to complete the game in a single session.\n\n HEX key   PC key*   Use\n---------------------------\n 5         W         up\n 8         S         down\n 7         A         left\n 9         D         right\n A         Z         ok/hold to slide\n 1         1         option(in-game)/back\n\n* = for interpreters that have the 4*4 keypad at 1234/QWER/ASDF/ZXCV.\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/games/Rush Hour [Hap, 2006].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Rush%20Hour%20%5BHap%2C%202006%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/games/Sequence Shoot [Joyce Weisbecker].txt","language":"basic","vector":[0.021048258990049362,0.015786195173859596,0,-0.021048258990049362,-0.03683445230126381,0,0.021048258990049362,0.015786195173859596,0,0,-0.015786195173859596,0,0.042096517980098724,0.021048258990049362,0,-0.12628956139087677,-0.04735858365893364,0,0,0.010524129495024681,0,-0.021048258990049362,-0.010524129495024681,0,0.042096517980098724,0.026310324668884277,0,-0.021048258990049362,-0.021048258990049362,0,0.021048258990049362,0.068406842648983,0,0,-0.010524129495024681,0,0,0,0,0,-0.03157239034771919,0,0.10524129867553711,0.07366890460252762,0,0,-0.015786195173859596,0,0.08419303596019745,0,0,-0.021048258990049362,-0.010524129495024681,0,0.06314478069543839,0,0,-0.021048258990049362,-0.05788271129131317,0,0.14733780920505524,0.015786195173859596,0,0,-0.0052620647475123405,0,0.08419303596019745,0,0,0,-0.03683445230126381,0,0.08419303596019745,0.0052620647475123405,0,-0.021048258990049362,-0.03157239034771919,0,0,0,0,-0.12628956139087677,-0.021048258990049362,0,0,0,0,-0.10524129867553711,-0.22626878321170807,0,0,0.026310324668884277,0,0,-0.010524129495024681,0,0.021048258990049362,0.015786195173859596,0,-0.021048258990049362,-0.010524129495024681,0,0.08419303596019745,0.015786195173859596,0,-0.06314478069543839,-0.010524129495024681,0,0.14733780920505524,0.03157239034771919,0,-0.042096517980098724,-0.068406842648983,0,0.021048258990049362,0,0,0,-0.010524129495024681,0,0.021048258990049362,0.026310324668884277,0,-0.042096517980098724,-0.015786195173859596,0,0.46306169033050537,0.021048258990049362,0,-0.042096517980098724,-0.0052620647475123405,0,0,0.0052620647475123405,0,-0.08419303596019745,0,0,0,0.05788271129131317,0,0,-0.0052620647475123405,0,0.021048258990049362,0.05788271129131317,0,-0.021048258990049362,-0.015786195173859596,0,0.042096517980098724,0.03157239034771919,0,-0.042096517980098724,-0.021048258990049362,0,0,0.10524129867553711,0,0,0,0,0,0.042096517980098724,0,-0.06314478069543839,0,0,0,0.042096517980098724,0,-0.021048258990049362,-0.03683445230126381,0,0.06314478069543839,0.0052620647475123405,0,-0.14733780920505524,-0.06314478069543839,0,0.021048258990049362,0,0,-0.021048258990049362,-0.06314478069543839,0,0,0,0,-0.14733780920505524,-0.0052620647475123405,0,0,0.010524129495024681,0,-0.042096517980098724,-0.015786195173859596,0,0.06314478069543839,0.042096517980098724,0,-0.042096517980098724,-0.14207574725151062,0,0.14733780920505524,0.08419303596019745,0,0,-0.026310324668884277,0,0,0.015786195173859596,0,-0.042096517980098724,-0.0052620647475123405,0,0.042096517980098724,0.015786195173859596,0,-0.06314478069543839,-0.021048258990049362,0,0,0.2420549839735031,0,-0.042096517980098724,-0.052620649337768555,0,0,0,0,-0.021048258990049362,-0.04735858365893364,0,0.021048258990049362,0.010524129495024681,0,-0.021048258990049362,-0.0052620647475123405,0,0,0.015786195173859596,0,-0.06314478069543839,-0.010524129495024681,0,0.021048258990049362,0.021048258990049362,0,-0.08419303596019745,-0.021048258990049362,0,0,0.026310324668884277,0,-0.042096517980098724,0,0,0,0.021048258990049362,0,-0.021048258990049362,-0.03683445230126381,0,0.021048258990049362,0.015786195173859596,0,0,-0.015786195173859596,0,0.021048258990049362,0.068406842648983,0,0,-0.07366890460252762,0,0.021048258990049362,0.03157239034771919,0,-0.042096517980098724,-0.010524129495024681,0,0.042096517980098724,0.021048258990049362,0,-0.021048258990049362,-0.07893097400665283,0,0,0,0,0,-0.052620649337768555,0,0.021048258990049362,0.03157239034771919,0,-0.021048258990049362,-0.04735858365893364,0,0.042096517980098724,0.07366890460252762,0,-0.021048258990049362,0,0,0.021048258990049362,0.0052620647475123405,0,0,-0.026310324668884277,0,0.021048258990049362,0.042096517980098724,0,-0.021048258990049362,-0.04735858365893364,0,0.06314478069543839,0.03683445230126381,0,-0.021048258990049362,-0.03157239034771919,0,0,0.0052620647475123405,0,-0.042096517980098724,-0.010524129495024681,0,0.12628956139087677,0.015786195173859596,0,0,-0.021048258990049362,0,0,0.11576542258262634,0,0,-0.042096517980098724,0,0,0.010524129495024681,0,-0.10524129867553711,-0.06314478069543839,0,0.021048258990049362,0,0,0,-0.021048258990049362,0,0,0.0052620647475123405,0,-0.042096517980098724,-0.015786195173859596,0,0,0.021048258990049362,0,-0.021048258990049362,-0.010524129495024681,0,0,0.010524129495024681,0,-0.021048258990049362,0,0,0,0.010524129495024681,0,-0.4420134425163269,-0.03683445230126381,0,0.042096517980098724,0.021048258990049362,0,-0.021048258990049362,-0.015786195173859596,0],"text":"12. VIP Sequence Shoot\n\nYou score points by having the sharp-shooter hit the targets in the proper sequence.\n\nHow to Play VIP Sequence Shoot\n\n1. Load the CHIP-8 interpreter at 0000-01FF and\n   the game starting at 0200.\n\n2. Turn RUN switch on.\n\n3. Pressing the Key C causes the little man to shoot the top target, Key D shoots the\n   one below it, Key E the next lower and Key F the bottom target.\n\n4. One of the four targets flashes and the computer waits for you to shoot it.  When\n   you press teh correct key, you get one point.  Then two flash, on after the other.\n   Shoot the one that flashed first, then shoot the other.  This gives you two more\n   points.  Three targets (when hit in the same order as they flashed) add three\n   points to your score.\n\n5. Each time you shoot such a series of targets in proper sequence, your score\n   increases by the number of targets you hit.  An the next series you see is longer\n   by one target.  The maximum length of sequence is 22 targets, that is a score of 254.\n\n6. Improper sequencing of shots in any series ends the game.","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/games/Sequence Shoot [Joyce Weisbecker].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Sequence%20Shoot%20%5BJoyce%20Weisbecker%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/games/Slide [Joyce Weisbecker].txt","language":"basic","vector":[0.02347424253821373,0.04107992723584175,0,-0.04694848507642746,-0.029342804104089737,0,0.02347424253821373,0.0058685606345534325,0,-0.02347424253821373,0,0,0,0.06455416977405548,0,-0.09389697015285492,-0.011737121269106865,0,0,0.017605682834982872,0,-0.02347424253821373,0,0,0,0.011737121269106865,0,-0.02347424253821373,0,0,0,0.029342804104089737,0,0,-0.029342804104089737,0,0,0.02347424253821373,0,-0.04694848507642746,-0.011737121269106865,0,0.09389697015285492,0.04107992723584175,0,0,-0.011737121269106865,0,0.04694848507642746,0.011737121269106865,0,-0.11737121641635895,0,0,0.11737121641635895,0.011737121269106865,0,-0.02347424253821373,-0.02347424253821373,0,0,0.02347424253821373,0,0,-0.02347424253821373,0,0.02347424253821373,0.017605682834982872,0,-0.07042273133993149,-0.04107992723584175,0,0.14084546267986298,0.011737121269106865,0,0,-0.017605682834982872,0,0,0.011737121269106865,0,-0.14084546267986298,-0.017605682834982872,0,0.09389697015285492,0.0058685606345534325,0,-0.14084546267986298,-0.19953106343746185,0,0,0.06455416977405548,0,-0.02347424253821373,-0.011737121269106865,0,0,0.017605682834982872,0,0,-0.029342804104089737,0,0.14084546267986298,0.011737121269106865,0,-0.07042273133993149,-0.05281704664230347,0,0.11737121641635895,0.0058685606345534325,0,0,-0.04694848507642746,0,0,0.011737121269106865,0,0,-0.017605682834982872,0,0.02347424253821373,0,0,-0.04694848507642746,-0.011737121269106865,0,0.4694848656654358,0.029342804104089737,0,-0.14084546267986298,0,0,0,0.0058685606345534325,0,-0.02347424253821373,-0.02347424253821373,0,0,0.05281704664230347,0,-0.04694848507642746,0,0,0,0.02347424253821373,0,-0.02347424253821373,-0.06455416977405548,0,0.07042273133993149,0.06455416977405548,0,-0.07042273133993149,-0.017605682834982872,0,0,0.017605682834982872,0,0,0,0,0,0.017605682834982872,0,-0.07042273133993149,-0.035211365669965744,0,0,0.0762912929058075,0,-0.02347424253821373,-0.011737121269106865,0,0.07042273133993149,0,0,-0.07042273133993149,-0.07042273133993149,0,0.02347424253821373,0.05281704664230347,0,0,-0.08802840858697891,0,0.02347424253821373,0.0058685606345534325,0,-0.04694848507642746,-0.017605682834982872,0,0.02347424253821373,0.0058685606345534325,0,0,0,0,0,0.07042273133993149,0,0,-0.13497689366340637,0,0.11737121641635895,0.08802840858697891,0,-0.07042273133993149,-0.0058685606345534325,0,0.04694848507642746,0.0058685606345534325,0,0,-0.011737121269106865,0,0.02347424253821373,0.017605682834982872,0,-0.04694848507642746,-0.029342804104089737,0,0,0.2347424328327179,0,0,-0.09389697015285492,0,0,0,0,0,-0.017605682834982872,0,0.09389697015285492,0,0,-0.09389697015285492,-0.029342804104089737,0,0.02347424253821373,0,0,-0.02347424253821373,-0.011737121269106865,0,0,0.035211365669965744,0,-0.02347424253821373,-0.04694848507642746,0,0,0.02347424253821373,0,-0.07042273133993149,0,0,0.02347424253821373,0.011737121269106865,0,0,-0.06455416977405548,0,0.02347424253821373,0.029342804104089737,0,0,-0.017605682834982872,0,0.02347424253821373,0.035211365669965744,0,-0.02347424253821373,-0.035211365669965744,0,0,0.017605682834982872,0,-0.164319708943367,-0.017605682834982872,0,0.02347424253821373,0.04694848507642746,0,0,-0.02347424253821373,0,0.04694848507642746,0.011737121269106865,0,-0.02347424253821373,-0.035211365669965744,0,0,0.02347424253821373,0,0,-0.035211365669965744,0,0.11737121641635895,0.058685608208179474,0,0,-0.04107992723584175,0,0.02347424253821373,0.02347424253821373,0,0,0,0,0.02347424253821373,0.04694848507642746,0,0,-0.04107992723584175,0,0,0.029342804104089737,0,-0.02347424253821373,0,0,0.02347424253821373,0,0,-0.02347424253821373,0,0,0.07042273133993149,0.05281704664230347,0,0,-0.058685608208179474,0,0.02347424253821373,0.12910833954811096,0,0,-0.04694848507642746,0,0.02347424253821373,0,0,-0.04694848507642746,-0.017605682834982872,0,0,0,0,0,-0.04694848507642746,0,0.02347424253821373,0.011737121269106865,0,-0.07042273133993149,-0.0058685606345534325,0,0.02347424253821373,0.029342804104089737,0,-0.02347424253821373,-0.017605682834982872,0,0.02347424253821373,0.011737121269106865,0,0,-0.011737121269106865,0,0,0,0,-0.3990621268749237,-0.09976553171873093,0,0.11737121641635895,0.011737121269106865,0,-0.02347424253821373,-0.0058685606345534325,0],"text":"5. VIP SLIDE\n\nSlide is a two-person game.  Each player tries to slide a \"puck\" over the high-scoring\n\"spots\" without hitting the back wall.\n\nHow To Play VIP Slide\n\n1. Load the CHIP-8 interpretor at 0000-01FF\n   and the game starting at 0200.\n\n2. Turn RUN switch on.\n\n3. The puck moves up and down randomly.  Press \"0\" key to stop the puck.  The puck\n   will move towards the spots after you release the key.  The longer you hold the\n   key down, the further the puck travels (maximum time approximately 2.5 seconds).\n\n4. You get 2 points for hitting the first spot, 4 points for either of the next two\n   spots and 8 points for either of the last two.  The highest score possible is 216\n   (two spots can be hit on one slide).\n\n5. If you hit the back wall, though, you get zero points for that slide, even though\n   you've hit a spot.\n\n6. Each player gets 3 pucks per turn and 6 turns in a game.\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/games/Slide [Joyce Weisbecker].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Slide%20%5BJoyce%20Weisbecker%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/games/Sum Fun [Joyce Weisbecker].txt","language":"basic","vector":[0.02558588795363903,0.019189417362213135,0,-0.02558588795363903,-0.06396472454071045,0,0.05117177590727806,0.02558588795363903,0,-0.02558588795363903,-0.03837883472442627,0,0.02558588795363903,0,0,-0.07675766944885254,-0.02558588795363903,0,0.02558588795363903,0.006396471988409758,0,-0.02558588795363903,0,0,0,0.019189417362213135,0,-0.02558588795363903,-0.006396471988409758,0,0,0.02558588795363903,0,0,-0.057568248361349106,0,0,0.012792943976819515,0,-0.05117177590727806,-0.012792943976819515,0,0.1279294490814209,0.019189417362213135,0,0,-0.07675766944885254,0,0.07675766944885254,0.02558588795363903,0,-0.05117177590727806,0,0,0.05117177590727806,0.02558588795363903,0,-0.02558588795363903,-0.03837883472442627,0,0,0.031982362270355225,0,0,0,0,0.07675766944885254,0.006396471988409758,0,0,-0.031982362270355225,0,0.10234355181455612,0,0,0,-0.03837883472442627,0,0,0.012792943976819515,0,-0.20468710362911224,-0.006396471988409758,0,0,0.006396471988409758,0,-0.15351533889770508,-0.17910121381282806,0,0,0.006396471988409758,0,0,-0.02558588795363903,0,0,0.019189417362213135,0,0,-0.012792943976819515,0,0.07675766944885254,0.02558588795363903,0,-0.07675766944885254,-0.012792943976819515,0,0.17910121381282806,0.031982362270355225,0,0,-0.044775303453207016,0,0.02558588795363903,0.019189417362213135,0,-0.02558588795363903,-0.019189417362213135,0,0,0.012792943976819515,0,-0.02558588795363903,-0.02558588795363903,0,0.46054598689079285,0,0,-0.05117177590727806,0,0,0,0,0,-0.07675766944885254,-0.02558588795363903,0,0,0.0703611969947815,0,0,0,0,0.07675766944885254,0.03837883472442627,0,0,-0.05117177590727806,0,0.05117177590727806,0.031982362270355225,0,-0.02558588795363903,-0.019189417362213135,0,0,0.006396471988409758,0,0,-0.006396471988409758,0,0.02558588795363903,0.05117177590727806,0,-0.07675766944885254,0,0,0,0.06396472454071045,0,-0.02558588795363903,-0.019189417362213135,0,0.02558588795363903,0.006396471988409758,0,-0.20468710362911224,-0.10234355181455612,0,0,0,0,-0.05117177590727806,-0.08955060690641403,0,0,0,0,-0.10234355181455612,-0.012792943976819515,0,0.02558588795363903,0.006396471988409758,0,0,0,0,0.02558588795363903,0.03837883472442627,0,-0.02558588795363903,-0.1279294490814209,0,0.10234355181455612,0.08955060690641403,0,-0.02558588795363903,-0.012792943976819515,0,0,0.019189417362213135,0,0,-0.019189417362213135,0,0.02558588795363903,0.012792943976819515,0,-0.2558588981628418,-0.019189417362213135,0,0,0.23666946589946747,0,0,-0.044775303453207016,0,0,0.006396471988409758,0,0,-0.044775303453207016,0,0.07675766944885254,0,0,0,-0.006396471988409758,0,0.02558588795363903,0.03837883472442627,0,-0.02558588795363903,0,0,0,0.02558588795363903,0,-0.05117177590727806,-0.02558588795363903,0,0,0.031982362270355225,0,-0.02558588795363903,0,0,0.02558588795363903,0.031982362270355225,0,0,-0.05117177590727806,0,0.02558588795363903,0.012792943976819515,0,0,-0.019189417362213135,0,0.02558588795363903,0.012792943976819515,0,0,-0.10234355181455612,0,0,0.019189417362213135,0,0,-0.02558588795363903,0,0.07675766944885254,0.02558588795363903,0,-0.02558588795363903,-0.05117177590727806,0,0.02558588795363903,0.012792943976819515,0,-0.02558588795363903,-0.05117177590727806,0,0.05117177590727806,0.012792943976819515,0,-0.05117177590727806,-0.05117177590727806,0,0,0.05117177590727806,0,0,-0.012792943976819515,0,0,0,0,0,0,0,0.02558588795363903,0.031982362270355225,0,0,-0.14711886644363403,0,0,0.044775303453207016,0,-0.10234355181455612,0,0,0.02558588795363903,0.006396471988409758,0,-0.02558588795363903,-0.006396471988409758,0,0.02558588795363903,0.03837883472442627,0,-0.02558588795363903,-0.006396471988409758,0,0.05117177590727806,0.1279294490814209,0,0,-0.02558588795363903,0,0.05117177590727806,0,0,-0.07675766944885254,-0.044775303453207016,0,0.02558588795363903,0,0,0,-0.012792943976819515,0,0,0.031982362270355225,0,-0.05117177590727806,0,0,0,0.02558588795363903,0,-0.05117177590727806,-0.006396471988409758,0,0.02558588795363903,0.012792943976819515,0,0,0,0,0,0.006396471988409758,0,-0.35820242762565613,-0.019189417362213135,0,0,0.03837883472442627,0,-0.05117177590727806,-0.019189417362213135,0],"text":"11. VIP Sum Fun\n\nThe object of this game is to add up the three digits\nwhich appear in the middle of the screen and then hit\nthe key representing the total as fast as you can.\n\nHow to Play VIP Sum FUn\n\n1. Load the CHIP-8 interpreter at 0000-01FF and\n   the game starting at 0200.\n\n2. Turn RUN switch on.\n\n3. You get twenty sets of three digits per game and\n   between zero and ten points per set.  The faster you\n   enter the correct total, the more points you win.\n\n4. If you wait more that 3 seconds, you get zero points.\n   The correct sum is shown above the three digits after\n   you enter it,  and there is a pause before the next\n   set appears.\n\n5. The score is shown in the upper right-hand corner of\n   the screen.  The maximum number of points you can score\n   is 200.  Between 120 and 159 points is above average.\n   A score of 160 or higher is outstanding.\n\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/games/Sum Fun [Joyce Weisbecker].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Sum%20Fun%20%5BJoyce%20Weisbecker%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/games/Syzygy [Roy Trevino, 1990].txt","language":"basic","vector":[0.016512755304574966,0.014448661357164383,0,0,-0.0371537022292614,0,0.05779464542865753,0.026833228766918182,0,-0.0495382696390152,-0.03096141666173935,0,0.06605102121829987,0.010320472531020641,0,-0.09082015603780746,-0.041281890124082565,0,0.11558929085731506,0.016512755304574966,0,-0.016512755304574966,-0.002064094413071871,0,0.0247691348195076,0.0371537022292614,0,-0.008256377652287483,-0.002064094413071871,0,0.0247691348195076,0.06811511516571045,0,-0.0247691348195076,-0.008256377652287483,0,0.016512755304574966,0.010320472531020641,0,0,-0.0247691348195076,0,0.05779464542865753,0.028897322714328766,0,-0.03302551060914993,-0.016512755304574966,0,0.0247691348195076,0.014448661357164383,0,-0.0247691348195076,-0.026833228766918182,0,0.08256378024816513,0.020640945062041283,0,-0.041281890124082565,-0.0371537022292614,0,0.041281890124082565,0.022705039009451866,0,0,-0.020640945062041283,0,0.008256377652287483,0.0247691348195076,0,-0.041281890124082565,-0.03921779617667198,0,0.008256377652287483,0.0061922837048769,0,-0.008256377652287483,-0.0247691348195076,0,0.016512755304574966,0.016512755304574966,0,-0.10733291506767273,-0.010320472531020641,0,0.016512755304574966,0.0061922837048769,0,-0.09082015603780746,-0.047474171966314316,0,0.0247691348195076,0.002064094413071871,0,-0.016512755304574966,-0.0185768511146307,0,0,0.014448661357164383,0,-0.041281890124082565,-0.004128188826143742,0,0.6274847388267517,0.0371537022292614,0,-0.06605102121829987,-0.03921779617667198,0,0.0247691348195076,0.03921779617667198,0,-0.016512755304574966,-0.047474171966314316,0,0.008256377652287483,0.0619228333234787,0,-0.0247691348195076,-0.016512755304574966,0,0.016512755304574966,0.0185768511146307,0,-0.016512755304574966,-0.016512755304574966,0,0.2972296178340912,0.016512755304574966,0,-0.09082015603780746,-0.0185768511146307,0,0.016512755304574966,0.010320472531020641,0,-0.008256377652287483,0,0,0.0247691348195076,0.03921779617667198,0,-0.016512755304574966,-0.016512755304574966,0,0.016512755304574966,0.016512755304574966,0,-0.016512755304574966,-0.0123845674097538,0,0.041281890124082565,0.041281890124082565,0,0,-0.03096141666173935,0,0,0.03302551060914993,0,-0.0247691348195076,-0.002064094413071871,0,0.016512755304574966,0.010320472531020641,0,-0.0247691348195076,-0.03302551060914993,0,0,0.008256377652287483,0,0,-0.016512755304574966,0,0.0247691348195076,0.014448661357164383,0,-0.08256378024816513,-0.0619228333234787,0,0.05779464542865753,0.016512755304574966,0,-0.0247691348195076,-0.05160236358642578,0,0.008256377652287483,0.014448661357164383,0,-0.11558929085731506,-0.016512755304574966,0,0.0495382696390152,0.0061922837048769,0,-0.008256377652287483,-0.0247691348195076,0,0.06605102121829987,0.31374236941337585,0,-0.008256377652287483,-0.05573055148124695,0,0.23943495750427246,0.0123845674097538,0,-0.03302551060914993,-0.014448661357164383,0,0.041281890124082565,0.008256377652287483,0,-0.016512755304574966,-0.0123845674097538,0,0.016512755304574966,0.022705039009451866,0,-0.0495382696390152,-0.020640945062041283,0,0.008256377652287483,0.16512756049633026,0,-0.008256377652287483,-0.06811511516571045,0,0.0495382696390152,0.0371537022292614,0,-0.0495382696390152,-0.008256377652287483,0,0.041281890124082565,0.0185768511146307,0,-0.016512755304574966,-0.010320472531020641,0,0.03302551060914993,0.014448661357164383,0,-0.10733291506767273,-0.014448661357164383,0,0.008256377652287483,0.0247691348195076,0,-0.03302551060914993,0,0,0.016512755304574966,0.014448661357164383,0,-0.008256377652287483,-0.020640945062041283,0,0.0247691348195076,0.014448661357164383,0,-0.008256377652287483,-0.0185768511146307,0,0.008256377652287483,0.020640945062041283,0,-0.0247691348195076,-0.010320472531020641,0,0.0247691348195076,0.022705039009451866,0,-0.016512755304574966,-0.041281890124082565,0,0.03302551060914993,0.03096141666173935,0,-0.05779464542865753,-0.022705039009451866,0,0.0247691348195076,0.0061922837048769,0,-0.008256377652287483,-0.059858739376068115,0,0.016512755304574966,0.028897322714328766,0,-0.03302551060914993,-0.03096141666173935,0,0.0247691348195076,0.0371537022292614,0,-0.0495382696390152,-0.026833228766918182,0,0.016512755304574966,0.12590976059436798,0,-0.0247691348195076,-0.020640945062041283,0,0.008256377652287483,0.020640945062041283,0,0,-0.0185768511146307,0,0.041281890124082565,0.16512756049633026,0,0,-0.041281890124082565,0,0.016512755304574966,0.010320472531020641,0,0,-0.008256377652287483,0,0,0.026833228766918182,0,-0.041281890124082565,-0.03096141666173935,0,0.0495382696390152,0.0247691348195076,0,-0.008256377652287483,-0.0123845674097538,0,0.0247691348195076,0.09082015603780746,0,-0.0495382696390152,-0.07637149840593338,0,0.016512755304574966,0.008256377652287483,0,-0.0495382696390152,-0.0185768511146307,0,0.0247691348195076,0.014448661357164383,0,-0.03302551060914993,-0.008256377652287483,0,0.03302551060914993,0.016512755304574966,0,-0.0247691348195076,-0.008256377652287483,0,0.008256377652287483,0.014448661357164383,0,-0.03302551060914993,-0.0123845674097538,0,0.0247691348195076,0.0123845674097538,0,-0.016512755304574966,-0.014448661357164383,0,0,0.020640945062041283,0,-0.09082015603780746,-0.035089608281850815,0,0,0.0123845674097538,0,-0.0247691348195076,-0.004128188826143742,0],"text":"SYZYGY v0.1\n\nOne of the first games I remember playing on a computer was \ncalled \"syzygy\" on a now ancient TRS-80 Model 1.  It has since\nappeared on other computers under various names.  Why it was\ncalled syzygy, I have no idea (consult Websters).  However, since\nthe HP48SX has approximately the same memory, graphics and cpu\npower as my TRS-80 did (something like 16kB, 128x64, and a 1.2Mhz Z80),\nI thought it would be amusing to play it again.  Now, approximately\nto my recollection, and with many apologies to the original author,\nhere is a CHIP48 version of SYZYGY.  Enough drivel.\n\nThe object of the game is to seek out \"targets\".  You do this with\nyour syzygy.  Initially small, the syzygy will grow by some amount\neach time a target is hit.  Eventually, your syzygy will\nbe so long as to make tougher and tougher to get any points (and easier\nand easier to get killed).  Confused?  Just try it.\n\nAnyways, the syzygy is not allowed to run into anything except targets.\nIt cannot run into the screen border (if present), or itself (this \nincludes backing into itself).  Fast and immediate death will result.\nDon't worry if you die quickly a few times.  The keys take a few \nminutes to get used to.\n\nTo start:     +      start/restart game with border\n              -      start/restart borderless game\n       \nTo play:      9      up\n              6      down\n              1      left\n              2      right\n\n[Hint for frustrated beginners: hold left hand on 1 & 2, and right hand on\n 6 & 9 keys.  Alternate between left hand, right hand, left hand...  -jkh-]\n\n\nFine print (borrowed from Andreas Gustafsson, author of CHIP-48):\n\n  SYZYGY is (c) copyright 1990 by Roy Trevino (RTT)\n\n  Noncommercial distribution allowed, provided that this\n  copyright message is preserved, and any modified versions\n  are clearly marked as such.\n\n  SYZYGY, via CHIP-48, makes use of undocumented low-level features\n  of the HP48SX calculator, and may or may not cause loss of data,\n  excessive battery drainage, and/or damage to the calcultor\n  hardware.  The Author takes no responsibility whatsoever for\n  any damage caused by the use of this program.\n  \n  THIS SOFTWARE IS PROVIDED \"AS IS\" AND WITHOUT ANY EXPRESS OR\n  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n  PURPOSE.\n\nRoy\n\n  --------------------------------------------------------------\n  Roy Trevino                                        Intel Corp.\n  E-mail: rtrevino@sedona.intel.com          Tel: (602) 554 2816\n  UUCP:  decwrl!apple!oliveb!orc!inews!rtrevino@sedona.intel.com\n\u001a","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/games/Syzygy [Roy Trevino, 1990].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Syzygy%20%5BRoy%20Trevino%2C%201990%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/games/Tetris [Fran Dachille, 1991].txt","language":"basic","vector":[0.019794946536421776,0.01484621036797762,0,-0.05938484147191048,-0.03464115783572197,0,0.03958989307284355,0.01484621036797762,0,-0.09897473454475403,-0.02969242073595524,0,0.03958989307284355,0.019794946536421776,0,-0.09897473454475403,-0.04453863203525543,0,0.019794946536421776,0.02969242073595524,0,-0.05938484147191048,-0.019794946536421776,0,0.05938484147191048,0.024743683636188507,0,0,-0.019794946536421776,0,0.09897473454475403,0.1336158961057663,0,0,-0.004948736634105444,0,0,0.02969242073595524,0,0,-0.02969242073595524,0,0.019794946536421776,0.02969242073595524,0,0,-0.049487367272377014,0,0.03958989307284355,0.004948736634105444,0,-0.03958989307284355,-0.019794946536421776,0,0.09897473454475403,0.03464115783572197,0,-0.019794946536421776,-0.009897473268210888,0,0,0.06433358043432236,0,-0.019794946536421776,-0.03958989307284355,0,0.019794946536421776,0.019794946536421776,0,-0.019794946536421776,-0.03958989307284355,0,0,0.01484621036797762,0,-0.03958989307284355,-0.004948736634105444,0,0.019794946536421776,0.03464115783572197,0,-0.13856463134288788,-0.03958989307284355,0,0.019794946536421776,0.01484621036797762,0,-0.05938484147191048,-0.11876968294382095,0,0.03958989307284355,0.009897473268210888,0,-0.03958989307284355,-0.03958989307284355,0,0.019794946536421776,0.01484621036797762,0,0,-0.03464115783572197,0,0.17815452814102173,0.02969242073595524,0,-0.019794946536421776,-0.054436106234788895,0,0.03958989307284355,0.019794946536421776,0,0,-0.049487367272377014,0,0,0.01484621036797762,0,0,-0.03958989307284355,0,0,0.02969242073595524,0,-0.03958989307284355,-0.01484621036797762,0,0.27712926268577576,0.05938484147191048,0,-0.13856463134288788,-0.004948736634105444,0,0,0.004948736634105444,0,-0.019794946536421776,-0.004948736634105444,0,0.019794946536421776,0.01484621036797762,0,-0.03958989307284355,-0.009897473268210888,0,0.019794946536421776,0.024743683636188507,0,-0.11876968294382095,-0.019794946536421776,0,0,0.05938484147191048,0,-0.019794946536421776,-0.024743683636188507,0,0.019794946536421776,0.009897473268210888,0,-0.019794946536421776,-0.01484621036797762,0,0,0.009897473268210888,0,-0.0791797861456871,-0.019794946536421776,0,0,0.009897473268210888,0,-0.05938484147191048,-0.024743683636188507,0,0.019794946536421776,0.02969242073595524,0,-0.05938484147191048,-0.06928231567144394,0,0.05938484147191048,0.01484621036797762,0,0,-0.03958989307284355,0,0,0.019794946536421776,0,-0.13856463134288788,-0.019794946536421776,0,0.0791797861456871,0.019794946536421776,0,-0.03958989307284355,-0.004948736634105444,0,0.05938484147191048,0.09402599930763245,0,0,-0.06928231567144394,0,0.49487367272377014,0.024743683636188507,0,-0.019794946536421776,-0.01484621036797762,0,0.03958989307284355,0.004948736634105444,0,0,-0.01484621036797762,0,0.03958989307284355,0.009897473268210888,0,-0.1583595722913742,-0.04453863203525543,0,0.019794946536421776,0.14846210181713104,0,0,-0.09402599930763245,0,0.05938484147191048,0.004948736634105444,0,0,-0.024743683636188507,0,0.09897473454475403,0.024743683636188507,0,-0.1583595722913742,-0.019794946536421776,0,0.03958989307284355,0.03464115783572197,0,-0.0791797861456871,-0.05938484147191048,0,0.05938484147191048,0,0,-0.019794946536421776,-0.009897473268210888,0,0.05938484147191048,0.01484621036797762,0,-0.11876968294382095,-0.009897473268210888,0,0.019794946536421776,0.009897473268210888,0,0,-0.049487367272377014,0,0,0.024743683636188507,0,-0.03958989307284355,-0.03464115783572197,0,0.019794946536421776,0.009897473268210888,0,-0.019794946536421776,-0.03464115783572197,0,0.03958989307284355,0.03464115783572197,0,-0.019794946536421776,-0.004948736634105444,0,0,0,0,0,-0.0791797861456871,0,0.019794946536421776,0.04453863203525543,0,-0.03958989307284355,-0.054436106234788895,0,0,0.03464115783572197,0,-0.05938484147191048,-0.01484621036797762,0,0.03958989307284355,0.25733432173728943,0,-0.019794946536421776,-0.019794946536421776,0,0.019794946536421776,0.024743683636188507,0,-0.019794946536421776,0,0,0.019794946536421776,0.06433358043432236,0,-0.03958989307284355,-0.08412852883338928,0,0.019794946536421776,0.019794946536421776,0,0,0,0,0.03958989307284355,0.02969242073595524,0,-0.05938484147191048,0,0,0.03958989307284355,0.049487367272377014,0,-0.019794946536421776,-0.08907726407051086,0,0,0.08907726407051086,0,-0.03958989307284355,-0.07423105090856552,0,0.03958989307284355,0.02969242073595524,0,-0.019794946536421776,-0.01484621036797762,0,0.0791797861456871,0.03464115783572197,0,0,-0.06928231567144394,0,0.019794946536421776,0.01484621036797762,0,-0.03958989307284355,-0.02969242073595524,0,0,0,0,0,-0.024743683636188507,0,0.03958989307284355,0.01484621036797762,0,-0.019794946536421776,-0.01484621036797762,0,0.019794946536421776,0.019794946536421776,0,-0.2375393658876419,-0.02969242073595524,0,0.019794946536421776,0,0,-0.05938484147191048,-0.01484621036797762,0],"text":"                               TETRIS\n                          by Fran Dachille\n\nThis is my first release of the famous Tetris game on the HP48S. I was\ninspired by the lack enjoyable games for our favorite handheld.  [Not since the\nGoodies Disks have been available!  -jkh-]  This game, though it lacks some of\nthe whistles and bangs of fancy versions, performs on par with quality arcade\nversions (nota bene -> SPEED).  At my college, every person who picks up my\ncalculator is immediately hooked for hours.\n\nThis version is written for the CHIP48 game interpreter (c)\ncopyright 1990 Andreas Gustafsson.  \n\nThe 4 key is left rotate, 5 - left move, 6 - right move, 1\n- drop, ENTER - restart, DROP - end.  After every 5 lines, the speed\nincreases slightly and peaks at 45 lines.\n\nThere is room for improvement in this version.  Notably, background\npictures, a pause key (for now, hold ON), two rotate keys, various\nstarting skill levels, a B version which starts with randomn blocks,\nfinishing graphics, and high scores, just to name a few.\n\nIn order for improvements, I need to know if there is reasonable\ndemand.  If this game is worth playing for hours upon hours, please let\nme know.  If you wish to support the improvements, want future versions,\nand want to see other games ported to the HP48S, send $5.00 to:\n\n          FRAN DACHILLE\n          WEBB INSTITUTE\n          GLEN COVE, NY 11542\n\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/games/Tetris [Fran Dachille, 1991].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Tetris%20%5BFran%20Dachille%2C%201991%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/games/Worm V4 [RB-Revival Studios, 2007].txt","language":"basic","vector":[0,0,0,-0.002766515128314495,-0.00622465880587697,0,0.00553303025662899,0.0013832575641572475,0,-0.00553303025662899,-0.003458143910393119,0,0.002766515128314495,0.0020748863462358713,0,-0.008299545384943485,-0.004149772692471743,0,0.04149772599339485,0.0006916287820786238,0,-0.00553303025662899,-0.0006916287820786238,0,0.013832575641572475,0.0013832575641572475,0,-0.002766515128314495,-0.0020748863462358713,0,0.002766515128314495,0.006916287820786238,0,-0.002766515128314495,-0.002766515128314495,0,0.008299545384943485,0.008299545384943485,0,0,0,0,0.008299545384943485,0.006916287820786238,0,0,-0.0013832575641572475,0,0.00553303025662899,0,0,0,0,0,0.013832575641572475,0.00553303025662899,0,0,-0.0013832575641572475,0,0.002766515128314495,0.0020748863462358713,0,-0.008299545384943485,-0.0013832575641572475,0,0.002766515128314495,0.004149772692471743,0,-0.00553303025662899,-0.002766515128314495,0,0.01659909076988697,0,0,0,-0.004841401241719723,0,0,0.007607916370034218,0,-0.01106606051325798,-0.0013832575641572475,0,0,0,0,-0.01106606051325798,-0.017290718853473663,0,0.008299545384943485,0,0,-0.008299545384943485,0,0,0,0.0020748863462358713,0,-0.002766515128314495,-0.003458143910393119,0,0.7995228171348572,0.003458143910393119,0,-0.013832575641572475,-0.002766515128314495,0,0.002766515128314495,0.002766515128314495,0,0,-0.004149772692471743,0,0.002766515128314495,0.020748862996697426,0,0,-0.004149772692471743,0,0.00553303025662899,0.006916287820786238,0,-0.002766515128314495,-0.002766515128314495,0,0.03043166548013687,0.0013832575641572475,0,-0.02213212102651596,-0.0013832575641572475,0,0.002766515128314495,0.004149772692471743,0,-0.00553303025662899,0,0,0,0.004149772692471743,0,0,-0.0006916287820786238,0,0,0.004841401241719723,0,-0.002766515128314495,-0.0013832575641572475,0,0.3347483277320862,0.01106606051325798,0,0,0,0,0.002766515128314495,0.004149772692471743,0,0,-0.004149772692471743,0,0.008299545384943485,0.0013832575641572475,0,-0.02213212102651596,-0.002766515128314495,0,0,0.01106606051325798,0,0,-0.0006916287820786238,0,0,0.0006916287820786238,0,-0.013832575641572475,-0.00553303025662899,0,0.00553303025662899,0.0020748863462358713,0,-0.002766515128314495,-0.00622465880587697,0,0.008299545384943485,0.004149772692471743,0,-0.01659909076988697,-0.00553303025662899,0,0.002766515128314495,0.003458143910393119,0,-0.002766515128314495,-0.0020748863462358713,0,0.00553303025662899,0.3997614085674286,0,-0.002766515128314495,-0.014524203725159168,0,0.01106606051325798,0.0013832575641572475,0,0,0,0,0,0.0013832575641572475,0,0,-0.0006916287820786238,0,0.00553303025662899,0.004149772692471743,0,-0.00553303025662899,-0.002766515128314495,0,0,0.01590746082365513,0,0,-0.013140946626663208,0,0,0.011757688596844673,0,0,-0.004149772692471743,0,0.002766515128314495,0.003458143910393119,0,-0.00553303025662899,-0.0006916287820786238,0,0,0.0006916287820786238,0,-0.00553303025662899,-0.0020748863462358713,0,0,0.16944904625415802,0,-0.008299545384943485,0,0,0.002766515128314495,0.003458143910393119,0,0,0,0,0,0.00553303025662899,0,-0.008299545384943485,-0.01106606051325798,0,0,0.003458143910393119,0,0,0,0,0.008299545384943485,0.0006916287820786238,0,-0.008299545384943485,-0.008991173468530178,0,0.002766515128314495,0.003458143910393119,0,0,-0.002766515128314495,0,0.00553303025662899,0.008299545384943485,0,0,-0.008299545384943485,0,0,0.0013832575641572475,0,-0.00553303025662899,-0.004149772692471743,0,0,0.002766515128314495,0,-0.00553303025662899,-0.004149772692471743,0,0,0.007607916370034218,0,0,-0.0020748863462358713,0,0,0,0,0,-0.0006916287820786238,0,0,0.20264722406864166,0,-0.002766515128314495,-0.00622465880587697,0,0.008299545384943485,0.0006916287820786238,0,-0.00553303025662899,0,0,0.01659909076988697,0.0006916287820786238,0,0,0,0,0.01106606051325798,0.002766515128314495,0,0,-0.003458143910393119,0,0,0.007607916370034218,0,0,-0.008299545384943485,0,0.01106606051325798,0.0006916287820786238,0,-0.002766515128314495,-0.00553303025662899,0,0.002766515128314495,0.0013832575641572475,0,0,0,0,0.008299545384943485,0,0,-0.002766515128314495,-0.004841401241719723,0,0,0.08368708193302155,0,-0.00553303025662899,0,0,0.013832575641572475,0.004841401241719723,0,-0.002766515128314495,-0.004149772692471743,0,0,0.003458143910393119,0,-0.03043166548013687,-0.00553303025662899,0,0,0.002766515128314495,0,0,0,0],"text":"-----------------------------------------------------------------------------\n\t\t\t      /////////////////\n\t                      //////////////////\n        \t              ////          ////\n\t               \t      ////   ///////////\n\t                      ////  ///////////\n                              ////  ////\n                              ////  ///////////\n                              ////   //////////\n  \t     \t   \t\n  \t\t\t   www.revival-studios.com\n-----------------------------------------------------------------------------\nTitle\t\t:\tSuperWorm V4\nAuthor\t\t:\tRB (Original game)\n\t\t \tUpdates and fixes by: Martijn Wenting / Revival Studios\nGenre\t\t:\tGame\nSystem\t\t:\tChip-8 / SuperChip8\nDate\t\t:\t10/08/2007 \nProduct ID\t:\tRS-C8001\n-----------------------------------------------------------------------------\n\nAll the contents of this package are (c)Copyright 2007 Revival Studios.\nOriginal game: SuperWorm is (c)Copyright 1992 RB\n\nThe contents of the package may only be spread in its original form, and may not be\npublished or distributed otherwise without the written permission of the authors.\n\nDescription:\n------------\nSuperWorm V4 is an update of the SuperChip8 game: Worm3 by RB.\nThe original game was only for SuperChip, so i've created a Chip-8 port.\nIt also includes several speed fixes and a new control system.\n\nRunning the game:\n-----------------\nUse the Megachip emulator or any other Chip-8/SuperChip compatible emulator to run the game.\n\nCredits:\n--------\nChip-8 version, Updates and fixes by: Martijn Wenting\nOriginal game by: RB\n\nDistribution:\n-------------\nThis package can be freely distributed in its original form.\nIf you would like to include this game in your rom package, please let me know.\n\nWatch out for more releases soon!\n\n\n\tMartijn Wenting / Revival Studios\n\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/games/Worm V4 [RB-Revival Studios, 2007].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Worm%20V4%20%5BRB-Revival%20Studios%2C%202007%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/hires/!hires_information.txt","language":"basic","vector":[0.044632185250520706,0.011158046312630177,0,0,-0.033474139869213104,0,0.13389655947685242,0,0,0,-0.044632185250520706,0,0,0,0,-0.044632185250520706,-0.022316092625260353,0,0.044632185250520706,0,0,-0.044632185250520706,0,0,0.044632185250520706,0.022316092625260353,0,-0.044632185250520706,0,0,0,0.08926437050104141,0,-0.044632185250520706,-0.022316092625260353,0,0,0.022316092625260353,0,0,-0.022316092625260353,0,0,0.033474139869213104,0,0,-0.011158046312630177,0,0.044632185250520706,0,0,0,-0.022316092625260353,0,0.17852874100208282,0.10042241215705872,0,-0.044632185250520706,-0.022316092625260353,0,0,0.05579023063182831,0,0,-0.022316092625260353,0,0.08926437050104141,0,0,0,-0.011158046312630177,0,0,0.033474139869213104,0,-0.044632185250520706,-0.033474139869213104,0,0.13389655947685242,0.022316092625260353,0,-0.13389655947685242,0,0,0.044632185250520706,0.011158046312630177,0,-0.17852874100208282,-0.15621264278888702,0,0,0,0,0,-0.022316092625260353,0,0,0.033474139869213104,0,0,0,0,0.044632185250520706,0.07810632139444351,0,-0.044632185250520706,0,0,0.044632185250520706,0,0,-0.08926437050104141,-0.022316092625260353,0,0,0.022316092625260353,0,0,-0.033474139869213104,0,0.22316092252731323,0.022316092625260353,0,-0.08926437050104141,-0.044632185250520706,0,0.17852874100208282,0,0,-0.22316092252731323,-0.022316092625260353,0,0.08926437050104141,0,0,-0.044632185250520706,0,0,0,0.011158046312630177,0,0,0,0,0,0.05579023063182831,0,-0.08926437050104141,-0.011158046312630177,0,0.17852874100208282,0.08926437050104141,0,0,-0.033474139869213104,0,0,0.011158046312630177,0,0,0,0,0.044632185250520706,0.044632185250520706,0,-0.044632185250520706,0,0,0,0.044632185250520706,0,-0.35705748200416565,-0.033474139869213104,0,0.044632185250520706,0.08926437050104141,0,-0.044632185250520706,-0.06694827973842621,0,0,0.022316092625260353,0,0,-0.08926437050104141,0,0,0.011158046312630177,0,-0.08926437050104141,-0.011158046312630177,0,0,0,0,0,0,0,0,0.022316092625260353,0,0,-0.08926437050104141,0,0.08926437050104141,0.022316092625260353,0,0,-0.05579023063182831,0,0.08926437050104141,0.011158046312630177,0,0,0,0,0.044632185250520706,0.14505459368228912,0,-0.044632185250520706,-0.044632185250520706,0,0,0.08926437050104141,0,-0.08926437050104141,-0.12273851037025452,0,0.044632185250520706,0.05579023063182831,0,0,-0.033474139869213104,0,0.044632185250520706,0.011158046312630177,0,-0.08926437050104141,-0.011158046312630177,0,0,0,0,-0.044632185250520706,-0.05579023063182831,0,0.044632185250520706,0.08926437050104141,0,-0.044632185250520706,0,0,0.08926437050104141,0,0,0,0,0,0.044632185250520706,0.033474139869213104,0,-0.08926437050104141,-0.022316092625260353,0,0,0.044632185250520706,0,0,-0.18968679010868073,0,0.044632185250520706,0.022316092625260353,0,0,-0.022316092625260353,0,0.044632185250520706,0.022316092625260353,0,0,0,0,0,0,0,0,-0.05579023063182831,0,0,0.033474139869213104,0,-0.044632185250520706,-0.033474139869213104,0,0,0.011158046312630177,0,-0.08926437050104141,-0.044632185250520706,0,0,0.044632185250520706,0,0,0,0,0,0.044632185250520706,0,0,0,0,0.044632185250520706,0.033474139869213104,0,0,-0.033474139869213104,0,0.13389655947685242,0.011158046312630177,0,-0.044632185250520706,-0.06694827973842621,0,0,0.022316092625260353,0,-0.044632185250520706,0,0,0.044632185250520706,0.07810632139444351,0,0,-0.06694827973842621,0,0,0.044632185250520706,0,0,-0.07810632139444351,0,0.17852874100208282,0.044632185250520706,0,-0.044632185250520706,-0.033474139869213104,0,0.08926437050104141,0.044632185250520706,0,0,0,0,0,0.022316092625260353,0,0,-0.06694827973842621,0,0.044632185250520706,0.044632185250520706,0,-0.044632185250520706,0,0,0,0.022316092625260353,0,0,0,0,0,0.033474139869213104,0,-0.26779311895370483,-0.011158046312630177,0,0,0,0,-0.044632185250520706,-0.08926437050104141,0],"text":"Roms for the original VIP 2-page hires CHIP8 mode (64x64). \nThese roms will work on original machines such as Cosmac Vip and Telmac 1800 without hardware modification.\n\nEmulator programmers can easily support these roms by adding something like the following in front of the opcode handling routine:\n\n   if ((chip_programcounter==0x200) && (opcode==0x1260)) {\n      // Init 64x64 hires mode\n      chip_screenwidth=64;chip_screenheight=64;\n      opcode=0x12C0;  // Make the interperter jump to address 0x2c0\n   }\n\n   Additionally, you will need to catch opcode 0x0230 and handle the clearscreen event for 64x64 hires\n\nKind regards,\n\n   Revival Studios","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/hires/!hires_information.txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/hires/!hires_information.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/hires/Hires Worm V4 [RB-Revival Studios, 2007].txt","language":"basic","vector":[0,0,0,-0.002728246385231614,-0.006138554308563471,0,0.005456492770463228,0.001364123192615807,0,-0.005456492770463228,-0.0034103079233318567,0,0.002728246385231614,0.0020461848471313715,0,-0.010912985540926456,-0.004092369694262743,0,0.040923696011304855,0.0006820615963079035,0,-0.005456492770463228,-0.0006820615963079035,0,0.021825971081852913,0.001364123192615807,0,-0.002728246385231614,-0.0020461848471313715,0,0.002728246385231614,0.007502677384763956,0,-0.002728246385231614,-0.002728246385231614,0,0.008184739388525486,0.008184739388525486,0,0,0,0,0.008184739388525486,0.0068206158466637135,0,0,-0.001364123192615807,0,0.005456492770463228,0,0,0,0,0,0.013641231693327427,0.005456492770463228,0,0,-0.001364123192615807,0,0.002728246385231614,0.0020461848471313715,0,-0.008184739388525486,-0.001364123192615807,0,0.002728246385231614,0.004092369694262743,0,-0.005456492770463228,-0.002728246385231614,0,0.016369478777050972,0,0,0,-0.004774431232362986,0,0,0.007502677384763956,0,-0.013641231693327427,-0.001364123192615807,0,0,0,0,-0.010912985540926456,-0.017051540315151215,0,0.008184739388525486,0,0,-0.008184739388525486,0,0,0,0.0020461848471313715,0,-0.002728246385231614,-0.0034103079233318567,0,0.7966479659080505,0.0034103079233318567,0,-0.013641231693327427,-0.002728246385231614,0,0.010912985540926456,0.002728246385231614,0,0,-0.005456492770463228,0,0.002728246385231614,0.020461848005652428,0,0,-0.004092369694262743,0,0.005456492770463228,0.010912985540926456,0,-0.002728246385231614,-0.002728246385231614,0,0.030010709539055824,0.001364123192615807,0,-0.021825971081852913,-0.001364123192615807,0,0.002728246385231614,0.004092369694262743,0,-0.005456492770463228,0,0,0,0.004092369694262743,0,0,-0.0006820615963079035,0,0,0.004774431232362986,0,-0.002728246385231614,-0.001364123192615807,0,0.3410308063030243,0.010912985540926456,0,0,0,0,0.002728246385231614,0.004092369694262743,0,0,-0.004092369694262743,0,0.008184739388525486,0.001364123192615807,0,-0.021825971081852913,-0.002728246385231614,0,0,0.010912985540926456,0,0,-0.0006820615963079035,0,0,0.0006820615963079035,0,-0.013641231693327427,-0.0068206158466637135,0,0.005456492770463228,0.0020461848471313715,0,-0.002728246385231614,-0.006138554308563471,0,0.008184739388525486,0.004092369694262743,0,-0.016369478777050972,-0.005456492770463228,0,0.002728246385231614,0.0034103079233318567,0,-0.002728246385231614,-0.0020461848471313715,0,0.005456492770463228,0.39832398295402527,0,-0.002728246385231614,-0.01432329323142767,0,0.013641231693327427,0.005456492770463228,0,0,0,0,0,0.001364123192615807,0,0,-0.0006820615963079035,0,0.005456492770463228,0.004092369694262743,0,-0.005456492770463228,-0.002728246385231614,0,0,0.01568741723895073,0,0,-0.013641231693327427,0,0,0.011595047079026699,0,0,-0.004092369694262743,0,0.002728246385231614,0.005456492770463228,0,-0.005456492770463228,-0.0006820615963079035,0,0,0.0006820615963079035,0,-0.005456492770463228,-0.0020461848471313715,0,0,0.17256158590316772,0,-0.008184739388525486,0,0,0.002728246385231614,0.0034103079233318567,0,0,0,0,0,0.005456492770463228,0,-0.008184739388525486,-0.010912985540926456,0,0,0.0034103079233318567,0,0,0,0,0.008184739388525486,0.0006820615963079035,0,-0.008184739388525486,-0.008866800926625729,0,0.002728246385231614,0.0034103079233318567,0,0,-0.002728246385231614,0,0.005456492770463228,0.008184739388525486,0,0,-0.008184739388525486,0,0,0.001364123192615807,0,-0.005456492770463228,-0.004774431232362986,0,0,0.002728246385231614,0,-0.005456492770463228,-0.004092369694262743,0,0,0.008866800926625729,0,0,-0.0020461848471313715,0,0,0,0,0,-0.0006820615963079035,0,0,0.201890230178833,0,-0.002728246385231614,-0.006138554308563471,0,0.008184739388525486,0.002728246385231614,0,-0.005456492770463228,0,0,0.016369478777050972,0.0006820615963079035,0,0,0,0,0.010912985540926456,0.002728246385231614,0,0,-0.0034103079233318567,0,0,0.007502677384763956,0,0,-0.008184739388525486,0,0.010912985540926456,0.0006820615963079035,0,-0.002728246385231614,-0.005456492770463228,0,0.002728246385231614,0.001364123192615807,0,0,0,0,0.008184739388525486,0,0,-0.002728246385231614,-0.004774431232362986,0,0,0.08525770157575607,0,-0.005456492770463228,0,0,0.013641231693327427,0.004774431232362986,0,-0.002728246385231614,-0.004092369694262743,0,0,0.0034103079233318567,0,-0.030010709539055824,-0.005456492770463228,0,0,0.002728246385231614,0,0,0,0],"text":"-----------------------------------------------------------------------------\n\t\t\t      /////////////////\n\t                      //////////////////\n        \t              ////          ////\n\t               \t      ////   ///////////\n\t                      ////  ///////////\n                              ////  ////\n                              ////  ///////////\n                              ////   //////////\n  \t     \t   \t\n  \t\t\t   www.revival-studios.com\n-----------------------------------------------------------------------------\nTitle\t\t:\tSuperWorm V4\nAuthor\t\t:\tRB (Original game)\n\t\t \tUpdates and fixes by: Martijn Wenting / Revival Studios\nGenre\t\t:\tGame\nSystem\t\t:\tChip-8 / Chip-8 Hires / SuperChip8\nDate\t\t:\t10/08/2007 \nProduct ID\t:\tRS-C8001\n-----------------------------------------------------------------------------\n\nAll the contents of this package are (c)Copyright 2007 Revival Studios.\nOriginal game: SuperWorm is (c)Copyright 1992 RB\n\nThe contents of the package may only be spread in its original form, and may not be\npublished or distributed otherwise without the written permission of the authors.\n\nDescription:\n------------\nSuperWorm V4 is an update of the SuperChip8 game: Worm3 by RB.\nThe original game was only for SuperChip, so i've created a Chip-8 and Hires Chip-8 port.\nIt also includes several speed fixes and a new control system.\n\nRunning the game:\n-----------------\nUse the Megachip emulator or any other Chip-8/SuperChip compatible emulator to run the game.\n\nCredits:\n--------\nChip-8 version, Hires Chip-8 version, Updates and fixes by: Martijn Wenting\nOriginal game by: RB\n\nDistribution:\n-------------\nThis package can be freely distributed in its original form.\nIf you would like to include this game in your rom package, please let me know.\n\nWatch out for more releases soon!\n\n\n\tMartijn Wenting / Revival Studios\n\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/hires/Hires Worm V4 [RB-Revival Studios, 2007].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Hires%20Worm%20V4%20%5BRB-Revival%20Studios%2C%202007%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/hires/Trip8 Hires Demo (2008) [Revival Studios].txt","language":"basic","vector":[0.002687946893274784,0.002015960169956088,0,-0.002687946893274784,-0.007391853723675013,0,0.010751787573099136,0.002687946893274784,0,-0.002687946893274784,-0.0047039068304002285,0,0.002687946893274784,0.002015960169956088,0,-0.01343973446637392,-0.008063840679824352,0,0.03225536271929741,0.000671986723318696,0,-0.01343973446637392,-0.0060478802770376205,0,0.021503575146198273,0.002687946893274784,0,-0.002687946893274784,-0.002015960169956088,0,0,0.0060478802770376205,0,0,-0.001343973446637392,0,0.008063840679824352,0.016127681359648705,0,0,-0.0060478802770376205,0,0.010751787573099136,0.004031920339912176,0,0,0,0,0.005375893786549568,0,0,-0.002687946893274784,-0.001343973446637392,0,0.016127681359648705,0.009407813660800457,0,0,-0.004031920339912176,0,0.002687946893274784,0.002687946893274784,0,-0.005375893786549568,-0.0047039068304002285,0,0.002687946893274784,0.005375893786549568,0,-0.005375893786549568,-0.008735827170312405,0,0.016127681359648705,0.00335993361659348,0,0,-0.004031920339912176,0,0.005375893786549568,0.008063840679824352,0,-0.01343973446637392,-0.002687946893274784,0,0.002687946893274784,0.000671986723318696,0,-0.008063840679824352,-0.02351953461766243,0,0.008063840679824352,0.000671986723318696,0,-0.005375893786549568,0,0,0,0.002015960169956088,0,-0.002687946893274784,-0.0047039068304002285,0,0.7902563810348511,0.0060478802770376205,0,-0.002687946893274784,-0.001343973446637392,0,0.01343973446637392,0.002687946893274784,0,0,-0.00671986723318696,0,0,0.016799667850136757,0,0,-0.007391853723675013,0,0.018815627321600914,0.010751787573099136,0,-0.008063840679824352,-0.002687946893274784,0,0.03763125464320183,0.000671986723318696,0,-0.01343973446637392,0,0,0,0.004031920339912176,0,-0.002687946893274784,-0.002687946893274784,0,0,0.0060478802770376205,0,0,-0.000671986723318696,0,0,0.00335993361659348,0,0,-0.002015960169956088,0,0.3494330942630768,0.016127681359648705,0,-0.002687946893274784,-0.002687946893274784,0,0.005375893786549568,0.002687946893274784,0,0,-0.002687946893274784,0,0.008063840679824352,0.001343973446637392,0,-0.005375893786549568,-0.002687946893274784,0,0,0.012095760554075241,0,-0.002687946893274784,-0.001343973446637392,0,0.002687946893274784,0.00335993361659348,0,-0.024191521108150482,-0.00671986723318696,0,0.010751787573099136,0.004031920339912176,0,-0.008063840679824352,-0.007391853723675013,0,0.002687946893274784,0.005375893786549568,0,-0.03225536271929741,-0.00335993361659348,0,0.002687946893274784,0.00335993361659348,0,-0.002687946893274784,-0.002687946893274784,0,0.005375893786549568,0.39512819051742554,0,-0.002687946893274784,-0.012767747975885868,0,0.018815627321600914,0.00671986723318696,0,0,0,0,0,0.000671986723318696,0,-0.002687946893274784,-0.000671986723318696,0,0.005375893786549568,0.012095760554075241,0,0,-0.0047039068304002285,0,0,0.019487613812088966,0,-0.005375893786549568,-0.010079801082611084,0,0.005375893786549568,0.008063840679824352,0,-0.005375893786549568,-0.0047039068304002285,0,0.005375893786549568,0.005375893786549568,0,-0.018815627321600914,-0.000671986723318696,0,0,0,0,-0.008063840679824352,0,0,0.002687946893274784,0.17673251032829285,0,-0.010751787573099136,-0.001343973446637392,0,0.005375893786549568,0.005375893786549568,0,0,0,0,0.002687946893274784,0.005375893786549568,0,-0.002687946893274784,-0.00335993361659348,0,0.002687946893274784,0.004031920339912176,0,0,-0.001343973446637392,0,0.002687946893274784,0.002015960169956088,0,-0.01343973446637392,-0.01343973446637392,0,0.002687946893274784,0.0060478802770376205,0,0,-0.005375893786549568,0,0.005375893786549568,0.005375893786549568,0,0,-0.016127681359648705,0,0.002687946893274784,0.002687946893274784,0,-0.002687946893274784,-0.0047039068304002285,0,0,0.00335993361659348,0,-0.005375893786549568,-0.00335993361659348,0,0.002687946893274784,0.011423774063587189,0,0,-0.001343973446637392,0,0,0,0,-0.010751787573099136,-0.002015960169956088,0,0.002687946893274784,0.20025204122066498,0,-0.002687946893274784,-0.000671986723318696,0,0.002687946893274784,0.00335993361659348,0,-0.002687946893274784,-0.002687946893274784,0,0.03225536271929741,0.002687946893274784,0,-0.010751787573099136,-0.002687946893274784,0,0.005375893786549568,0.007391853723675013,0,0,-0.011423774063587189,0,0,0.009407813660800457,0,0,-0.007391853723675013,0,0.016127681359648705,0.001343973446637392,0,-0.005375893786549568,-0.0060478802770376205,0,0.002687946893274784,0.002687946893274784,0,0,0,0,0.010751787573099136,0.001343973446637392,0,-0.01343973446637392,-0.001343973446637392,0,0.005375893786549568,0.0887022465467453,0,-0.002687946893274784,-0.000671986723318696,0,0.01343973446637392,0.002687946893274784,0,-0.005375893786549568,-0.00671986723318696,0,0,0.00335993361659348,0,-0.045695096254348755,-0.001343973446637392,0,0,0.002687946893274784,0,0,-0.000671986723318696,0],"text":"-----------------------------------------------------------------------------\n\t\t\t      /////////////////\n\t                      //////////////////\n        \t              ////          ////\n\t               \t      ////   ///////////\n\t                      ////  ///////////\n                              ////  ////\n                              ////  ///////////\n                              ////   //////////\n  \t     \t   \t\n  \t\t\t   www.revival-studios.com\n-----------------------------------------------------------------------------\nTitle\t\t:\tTrip8 / SuperTrip8 demo\nAuthor\t\t:\tMartijn Wenting / Revival Studios\nGenre\t\t:\tDemo\nSystem\t\t:\tChip-8 / Chip-8 Hires / SuperChip8\nDate\t\t:\t14/10/2008\nProduct ID\t:\tRS-C8004\n-----------------------------------------------------------------------------\n\nAll the contents of this package are (c)Copyright 2008 Revival Studios.\n\nThe contents of the package may only be spread in its original form, and may not be\npublished or distributed otherwise without the written permission of the authors.\n\nDescription:\n------------\nThe Trip8/SuperTrip8 demo are demo's for the Chip-8, Chip-8 Hires and SuperChip8 systems. The demo consists of an intro, 3D vectorballs, and 4 randomized dot-effects.  \n\nWriting a demo for the original Chip-8 interpreter was a real pain, since your framerate basically drops in half for every sprite you need to draw. So even clearing and redrawing a few dots will cause the framerate to drop to near zero :) Originally the demo was going to be bigger and there were much more graphical effects programmed/prototyped, but a lot of these effects turned out to be too much for the original unoptimized Chip-8 interpreters to handle. \nThe 64x64 Hires version of the demo will also work on the original hardware without modification.\n\nRunning the Demo:\n-----------------\nUse the Megachip emulator or any other Chip-8/SuperChip compatible emulator to run the demo.\n\nCredits:\n--------\nProgramming/Graphics/Design by: Martijn Wenting\n\nDistribution:\n-------------\nThis package can be freely distributed in its original form.\nIf you would like to include this slideshow in your rom package, please let me know.\n\nWatch out for more releases soon!\n\n\n\tMartijn Wenting / Revival Studios\n\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/hires/Trip8 Hires Demo (2008) [Revival Studios].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Trip8%20Hires%20Demo%20(2008)%20%5BRevival%20Studios%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/programs/Keypad Test [Hap, 2006].txt","language":"basic","vector":[0,0.017185276374220848,0,0,-0.051555830985307693,0,0.13748221099376678,0,0,-0.06874110549688339,-0.017185276374220848,0,0,0,0,-0.06874110549688339,-0.06874110549688339,0,0.06874110549688339,0.06874110549688339,0,0,0,0,0,0,0,-0.06874110549688339,0,0,0,0.10311166197061539,0,-0.06874110549688339,-0.017185276374220848,0,0,0,0,0,0,0,0,0.10311166197061539,0,-0.06874110549688339,-0.034370552748441696,0,0.06874110549688339,0,0,-0.06874110549688339,-0.017185276374220848,0,0.13748221099376678,0,0,0,-0.06874110549688339,0,0,0,0,0,0,0,0.13748221099376678,0,0,0,-0.034370552748441696,0,0.06874110549688339,0.017185276374220848,0,0,0,0,0.06874110549688339,0,0,-0.34370553493499756,-0.051555830985307693,0,0,0,0,0,-0.13748221099376678,0,0,0.06874110549688339,0,0,0,0,0,0,0,0,-0.017185276374220848,0,0.27496442198753357,0.06874110549688339,0,0,-0.034370552748441696,0,0.06874110549688339,0.017185276374220848,0,0,-0.034370552748441696,0,0,0.034370552748441696,0,-0.06874110549688339,-0.017185276374220848,0,0,0,0,0,-0.034370552748441696,0,0,0,0,-0.06874110549688339,-0.051555830985307693,0,0,0.017185276374220848,0,0,0,0,0.06874110549688339,0,0,0,-0.034370552748441696,0,0,0.051555830985307693,0,-0.06874110549688339,-0.034370552748441696,0,0.13748221099376678,0.06874110549688339,0,-0.06874110549688339,0,0,0,0.017185276374220848,0,0,-0.017185276374220848,0,0,0.06874110549688339,0,0,0,0,0,0.034370552748441696,0,0,-0.034370552748441696,0,0.06874110549688339,0.034370552748441696,0,-0.06874110549688339,-0.17185276746749878,0,0,0,0,-0.06874110549688339,-0.017185276374220848,0,0,0,0,-0.13748221099376678,0,0,0.13748221099376678,0,0,0,-0.017185276374220848,0,0,0.13748221099376678,0,0,-0.06874110549688339,0,0.27496442198753357,0.06874110549688339,0,-0.06874110549688339,0,0,0,0,0,0,-0.034370552748441696,0,0.27496442198753357,0.034370552748441696,0,0,-0.017185276374220848,0,0,0,0,-0.06874110549688339,-0.051555830985307693,0,0,0.017185276374220848,0,0,0,0,0,0.034370552748441696,0,0,-0.017185276374220848,0,0,0,0,0,-0.051555830985307693,0,0.06874110549688339,0.06874110549688339,0,0,-0.034370552748441696,0,0,0,0,-0.06874110549688339,-0.017185276374220848,0,0,0.017185276374220848,0,0,-0.017185276374220848,0,0,0.034370552748441696,0,0,0,0,0,0.034370552748441696,0,-0.06874110549688339,-0.034370552748441696,0,0,0.034370552748441696,0,0,-0.034370552748441696,0,0.06874110549688339,0.017185276374220848,0,0,-0.06874110549688339,0,0,0.08592638373374939,0,-0.06874110549688339,-0.08592638373374939,0,0,0,0,0,0,0,0,0.13748221099376678,0,-0.06874110549688339,-0.034370552748441696,0,0.06874110549688339,0,0,0,0,0,0,0.20622332394123077,0,0,0,0,0.06874110549688339,0.017185276374220848,0,0,-0.034370552748441696,0,0,0,0,0,-0.017185276374220848,0,0.06874110549688339,0,0,-0.06874110549688339,0,0,0,0,0,0,-0.017185276374220848,0,0,0.034370552748441696,0,-0.13748221099376678,0,0,0,0.017185276374220848,0,0,-0.034370552748441696,0,0,0,0,-0.06874110549688339,-0.017185276374220848,0,0,0.034370552748441696,0,0,-0.017185276374220848,0,0,0,0,-0.06874110549688339,-0.034370552748441696,0,0,0,0,-0.27496442198753357,0,0,0.13748221099376678,0.034370552748441696,0,0,0,0],"text":"Keypad Test, by hap, 15-02-06\n\npress a chip8 key and the pressed char will light up\nif you want to do something funny, soft-reset the chip8/emulator over and over,\nand the sprite layout will become messed up ;p\n\nchip8 keypad:\n1 2 3 c\n4 5 6 d\n7 8 9 e\na 0 b f\n\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/programs/Keypad Test [Hap, 2006].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Keypad%20Test%20%5BHap%2C%202006%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/programs/Life [GV Samways, 1980].txt","language":"basic","vector":[0,0.017571598291397095,0,0,-0.017571598291397095,0,0.07028639316558838,0,0,0,-0.03514319658279419,0,0,0.017571598291397095,0,-0.10542959719896317,-0.043928999453783035,0,0.07028639316558838,0.07907219976186752,0,0,-0.008785799145698547,0,0.03514319658279419,0.05271479859948158,0,0,-0.043928999453783035,0,0.10542959719896317,0.08785799890756607,0,0,-0.017571598291397095,0,0,0.05271479859948158,0,0,0,0,0.03514319658279419,0.03514319658279419,0,0,-0.03514319658279419,0,0,0,0,-0.03514319658279419,0,0,0.17571599781513214,0,0,0,-0.043928999453783035,0,0,0.05271479859948158,0,-0.03514319658279419,0,0,0.03514319658279419,0.05271479859948158,0,-0.07028639316558838,0,0,0,0.017571598291397095,0,-0.03514319658279419,-0.02635739929974079,0,0.03514319658279419,0.03514319658279419,0,-0.17571599781513214,0,0,0.03514319658279419,0,0,-0.03514319658279419,-0.15814439952373505,0,0.03514319658279419,0.02635739929974079,0,-0.03514319658279419,0,0,0,0,0,-0.03514319658279419,0,0,0.10542959719896317,0.043928999453783035,0,-0.03514319658279419,-0.03514319658279419,0,0.07028639316558838,0.008785799145698547,0,0,-0.05271479859948158,0,0,0.03514319658279419,0,0,0,0,0,0.017571598291397095,0,0,-0.008785799145698547,0,0.38657519221305847,0.06150059774518013,0,0,-0.008785799145698547,0,0.03514319658279419,0.03514319658279419,0,-0.03514319658279419,0,0,0,0.017571598291397095,0,0,-0.017571598291397095,0,0,0,0,-0.07028639316558838,-0.017571598291397095,0,0,0.09664379805326462,0,0,0,0,0,0.017571598291397095,0,-0.03514319658279419,-0.017571598291397095,0,0.03514319658279419,0.017571598291397095,0,-0.10542959719896317,-0.03514319658279419,0,0.03514319658279419,0,0,-0.03514319658279419,-0.03514319658279419,0,0.07028639316558838,0.043928999453783035,0,-0.07028639316558838,-0.08785799890756607,0,0,0.03514319658279419,0,-0.07028639316558838,-0.017571598291397095,0,0,0.02635739929974079,0,-0.10542959719896317,-0.02635739929974079,0,0.03514319658279419,0.017571598291397095,0,-0.03514319658279419,-0.017571598291397095,0,0.21085919439792633,0.05271479859948158,0,-0.03514319658279419,-0.08785799890756607,0,0.3514319956302643,0.043928999453783035,0,-0.07028639316558838,0,0,0.14057278633117676,0,0,0,0,0,0,0.017571598291397095,0,-0.14057278633117676,0,0,0,0.19328759610652924,0,0,-0.02635739929974079,0,0,0.03514319658279419,0,-0.03514319658279419,-0.017571598291397095,0,0,0.008785799145698547,0,0,0,0,0.07028639316558838,0.02635739929974079,0,0,-0.03514319658279419,0,0,0,0,-0.03514319658279419,0,0,0,0.008785799145698547,0,0,-0.017571598291397095,0,0,0.017571598291397095,0,-0.07028639316558838,-0.06150059774518013,0,0.03514319658279419,0.06150059774518013,0,0,-0.017571598291397095,0,0,0.03514319658279419,0,0,-0.043928999453783035,0,0.03514319658279419,0.008785799145698547,0,-0.14057278633117676,-0.05271479859948158,0,0.03514319658279419,0,0,0,-0.06150059774518013,0,0,0.02635739929974079,0,0,-0.06150059774518013,0,0,0.11421539634466171,0,-0.03514319658279419,-0.02635739929974079,0,0.03514319658279419,0.1845017969608307,0,-0.03514319658279419,-0.043928999453783035,0,0.14057278633117676,0.07028639316558838,0,0,-0.008785799145698547,0,0,0.02635739929974079,0,-0.07028639316558838,-0.07907219976186752,0,0,0.017571598291397095,0,0,0,0,0.03514319658279419,0,0,0,-0.017571598291397095,0,0.07028639316558838,0,0,0,0,0,0,0.1317869871854782,0,0,0,0,0,0.008785799145698547,0,-0.07028639316558838,-0.02635739929974079,0,0.10542959719896317,0,0,0,0,0,0.07028639316558838,0,0,0,-0.05271479859948158,0,0.03514319658279419,0.017571598291397095,0,-0.03514319658279419,0,0,0.07028639316558838,0,0,0,-0.008785799145698547,0,0,0.02635739929974079,0,-0.2811455726623535,-0.09664379805326462,0,0.03514319658279419,0.02635739929974079,0,0,-0.008785799145698547,0],"text":"Life, by: G.V. Samways\n\nThis is a display of cell growth, in accordance with the following rules:\n 1. A cell is born if 3 cells are adjecent to an empty space.\n 2. A cell lives if 2 or 3 cells are adjacent, and dies otherwise.\n 3. All events take place simultaneously.\n \nTo start the game, you make a pattern by entering the cell coordinates, first\nthe \"Y\"from 0-7 downwards, then the \"X\" from 0-F across. \nF initialises the program, and the number of scans is entered plus one, so that 1 gives 0 scans\nto F giving 14, and 0 giving 255. The sit back and watch the colony live, or die.\n","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/programs/Life [GV Samways, 1980].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Life%20%5BGV%20Samways%2C%201980%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/kschuetz_c64-chip8/roms/programs/Random Number Test [Matthew Mikolay, 2010].txt","language":"basic","vector":[0,0,0,-0.06067749112844467,-0.04550812020897865,0,0.15169373154640198,0.022754060104489326,0,0,-0.015169372782111168,0,0.12135498225688934,0,0,-0.0910162404179573,-0.037923432886600494,0,0.030338745564222336,0.05309280380606651,0,-0.15169373154640198,-0.015169372782111168,0,0,0.030338745564222336,0,-0.030338745564222336,-0.015169372782111168,0,0,0.06826218217611313,0,-0.030338745564222336,-0.007584686391055584,0,0,0.022754060104489326,0,-0.06067749112844467,0,0,0,0.015169372782111168,0,0,-0.022754060104489326,0,0,0.015169372782111168,0,-0.06067749112844467,0,0,0.12135498225688934,0.022754060104489326,0,0,-0.022754060104489326,0,0.030338745564222336,0.07584686577320099,0,-0.030338745564222336,-0.015169372782111168,0,0.06067749112844467,0.007584686391055584,0,-0.030338745564222336,-0.022754060104489326,0,0,0.007584686391055584,0,0,-0.007584686391055584,0,0,0,0,-0.030338745564222336,0,0,0,0,0,-0.21237121522426605,-0.19720184803009033,0,0.030338745564222336,0.015169372782111168,0,0,-0.030338745564222336,0,0.06067749112844467,0.015169372782111168,0,-0.030338745564222336,-0.05309280380606651,0,0.15169373154640198,0.08343154937028885,0,-0.030338745564222336,0,0,0.15169373154640198,0.07584686577320099,0,0,-0.08343154937028885,0,0.030338745564222336,0.015169372782111168,0,0,-0.08343154937028885,0,0.030338745564222336,0,0,-0.0910162404179573,-0.022754060104489326,0,0.3337261974811554,0,0,-0.06067749112844467,-0.015169372782111168,0,0.0910162404179573,0.015169372782111168,0,0,-0.037923432886600494,0,0.030338745564222336,0.007584686391055584,0,-0.06067749112844467,-0.007584686391055584,0,0,0.007584686391055584,0,-0.06067749112844467,-0.030338745564222336,0,0.030338745564222336,0.06826218217611313,0,0,0,0,0,0.015169372782111168,0,0,-0.015169372782111168,0,0,0.037923432886600494,0,-0.06067749112844467,-0.015169372782111168,0,0,0,0,0,-0.007584686391055584,0,0,0.037923432886600494,0,-0.12135498225688934,-0.015169372782111168,0,0.0910162404179573,0,0,0,-0.10618560761213303,0,0,0.015169372782111168,0,-0.15169373154640198,0,0,0.0910162404179573,0.030338745564222336,0,0,-0.015169372782111168,0,0.06067749112844467,0.07584686577320099,0,0,-0.11377029865980148,0,0.21237121522426605,0.08343154937028885,0,-0.030338745564222336,-0.015169372782111168,0,0.030338745564222336,0.015169372782111168,0,0,-0.015169372782111168,0,0.06067749112844467,0.05309280380606651,0,-0.0910162404179573,-0.04550812020897865,0,0,0.19720184803009033,0,0,-0.05309280380606651,0,0.0910162404179573,0.05309280380606651,0,-0.030338745564222336,-0.037923432886600494,0,0,0.015169372782111168,0,-0.06067749112844467,-0.037923432886600494,0,0.030338745564222336,0,0,-0.0910162404179573,-0.037923432886600494,0,0.030338745564222336,0.015169372782111168,0,-0.030338745564222336,-0.015169372782111168,0,0,0,0,0,0,0,0,0,0,0,-0.04550812020897865,0,0,0.030338745564222336,0,0,0,0,0.06067749112844467,0.007584686391055584,0,-0.0910162404179573,-0.06826218217611313,0,0.030338745564222336,0.06067749112844467,0,0,-0.007584686391055584,0,0.06067749112844467,0,0,-0.15169373154640198,-0.07584686577320099,0,0,0.04550812020897865,0,-0.030338745564222336,-0.007584686391055584,0,0,0.030338745564222336,0,-0.030338745564222336,-0.05309280380606651,0,0,0.11377029865980148,0,0,-0.015169372782111168,0,0.06067749112844467,0.030338745564222336,0,-0.030338745564222336,-0.007584686391055584,0,0.030338745564222336,0.06826218217611313,0,-0.030338745564222336,-0.05309280380606651,0,0.030338745564222336,0.037923432886600494,0,0,0,0,0.030338745564222336,0.05309280380606651,0,0,-0.015169372782111168,0,0,0.007584686391055584,0,0,-0.05309280380606651,0,0.030338745564222336,0.09860092401504517,0,0,-0.06067749112844467,0,0,0.037923432886600494,0,-0.030338745564222336,-0.015169372782111168,0,0.15169373154640198,0.007584686391055584,0,0,-0.015169372782111168,0,0,0,0,0,-0.015169372782111168,0,0,0.007584686391055584,0,0,0,0,0,0.030338745564222336,0,0,-0.04550812020897865,0,0,0.015169372782111168,0,-0.39440369606018066,-0.015169372782111168,0,0.030338745564222336,0.030338745564222336,0,-0.06067749112844467,-0.07584686577320099,0],"text":"Hey guys!\n\nI don't know if any of you will be interested in this, but I wrote this small\nprogram while coding my game to test out the random number generator. I wanted\nto see if there is a chance that zero will show up as the random number, and it\nturns out it can.\n\nAnyway, when you run the program, it brings a random number up on the screen.\nWhen you press any of the keys, it brings another random number up on the\nscreen. This goes on until you quit the program.\n\nAddress 0x202 holds the C0FF instruction, which commands the CHIP-8 interpreter\nto set V0 to a random number with the mask 0xFF. This yields 256 different\npossible numbers (0-255). If C0FF is changed to something like C00A, then the\nmask will change. This would yield 11 different possible numbers (0-10).\n\n-Matt","sourcePath":"external/github.com/kschuetz_c64-chip8/roms/programs/Random Number Test [Matthew Mikolay, 2010].txt","sourceMtimeMs":1520057796000,"sourceUrl":"https://github.com/kschuetz/c64-chip8/blob/master/Random%20Number%20Test%20%5BMatthew%20Mikolay%2C%202010%5D.txt","sourceRepoUrl":"https://github.com/kschuetz/c64-chip8","license":"MIT","licenseSpdxId":"MIT","licenseName":"MIT License","licenseUrl":"https://github.com/kschuetz/c64-chip8/blob/master/LICENSE.md","attribution":"Source: kschuetz/c64-chip8 (MIT)"},{"name":"github.com/mist64_c64ref/src/6502/cpu_6502rorbug.txt","language":"basic","vector":[0,0.02019686996936798,0,0,-0.02019686996936798,0,0,0.015147651545703411,0,-0.04039373993873596,-0.025246085599064827,0,0.02019686996936798,0.030295303091406822,0,-0.060590606182813644,-0.030295303091406822,0,0.10098434239625931,0.15652573108673096,0,-0.060590606182813644,-0.02019686996936798,0,0,0.04039373993873596,0,-0.04039373993873596,-0.015147651545703411,0,0.04039373993873596,0.11613199859857559,0,0,-0.015147651545703411,0,0,0,0,-0.02019686996936798,-0.005049217492341995,0,0.04039373993873596,0.015147651545703411,0,-0.02019686996936798,-0.04544295370578766,0,0,0.07068904489278793,0,-0.02019686996936798,-0.04544295370578766,0,0.10098434239625931,0.030295303091406822,0,0,-0.030295303091406822,0,0,0.04039373993873596,0,-0.04039373993873596,-0.02019686996936798,0,0,0.015147651545703411,0,0,-0.02019686996936798,0,0.02019686996936798,0.015147651545703411,0,0,-0.02019686996936798,0,0.02019686996936798,0.08583669364452362,0,-0.04039373993873596,-0.025246085599064827,0,0.060590606182813644,0.01009843498468399,0,-0.04039373993873596,-0.17672260105609894,0,0.04039373993873596,0.015147651545703411,0,0,-0.015147651545703411,0,0.02019686996936798,0,0,-0.02019686996936798,-0.02019686996936798,0,0.24236242473125458,0,0,-0.08078747987747192,-0.02019686996936798,0,0.02019686996936798,0.01009843498468399,0,-0.02019686996936798,-0.03534452244639397,0,0,0.060590606182813644,0,-0.02019686996936798,-0.03534452244639397,0,0.02019686996936798,0.005049217492341995,0,-0.04039373993873596,-0.025246085599064827,0,0.26255929470062256,0.025246085599064827,0,-0.16157495975494385,0,0,0.02019686996936798,0.06563982367515564,0,-0.02019686996936798,-0.015147651545703411,0,0.12118121236562729,0.02019686996936798,0,-0.04039373993873596,-0.015147651545703411,0,0,0.030295303091406822,0,-0.02019686996936798,-0.015147651545703411,0,0.18177181482315063,0.050492171198129654,0,-0.060590606182813644,0,0,0.04039373993873596,0.005049217492341995,0,-0.02019686996936798,-0.02019686996936798,0,0.060590606182813644,0.030295303091406822,0,-0.02019686996936798,-0.02019686996936798,0,0.04039373993873596,0.02019686996936798,0,0,-0.015147651545703411,0,0,0.030295303091406822,0,-0.04039373993873596,-0.02019686996936798,0,0.02019686996936798,0.03534452244639397,0,-0.060590606182813644,-0.030295303091406822,0,0.08078747987747192,0.02019686996936798,0,-0.12118121236562729,-0.005049217492341995,0,0.10098434239625931,0.050492171198129654,0,-0.04039373993873596,-0.02019686996936798,0,0.16157495975494385,0.12623043358325958,0,-0.02019686996936798,-0.12623043358325958,0,0.2221655547618866,0.015147651545703411,0,-0.02019686996936798,-0.015147651545703411,0,0,0,0,-0.02019686996936798,-0.01009843498468399,0,0.02019686996936798,0.01009843498468399,0,-0.18177181482315063,-0.030295303091406822,0,0.04039373993873596,0.13632886111736298,0,-0.02019686996936798,-0.09593512862920761,0,0.04039373993873596,0.03534452244639397,0,0,-0.025246085599064827,0,0,0.060590606182813644,0,-0.08078747987747192,-0.030295303091406822,0,0.02019686996936798,0.01009843498468399,0,0,-0.01009843498468399,0,0.060590606182813644,0.09088590741157532,0,-0.04039373993873596,-0.03534452244639397,0,0.02019686996936798,0.030295303091406822,0,-0.02019686996936798,-0.015147651545703411,0,0,0.030295303091406822,0,-0.02019686996936798,-0.015147651545703411,0,0.02019686996936798,0.04544295370578766,0,-0.02019686996936798,0,0,0,0,0,-0.08078747987747192,-0.030295303091406822,0,0,0.01009843498468399,0,0,-0.030295303091406822,0,0,0.04544295370578766,0,-0.02019686996936798,-0.060590606182813644,0,0.04039373993873596,0.05554138869047165,0,-0.02019686996936798,-0.030295303091406822,0,0.02019686996936798,0.09593512862920761,0,-0.02019686996936798,-0.02019686996936798,0,0.02019686996936798,0.12118121236562729,0,0,-0.01009843498468399,0,0.26255929470062256,0.005049217492341995,0,-0.02019686996936798,-0.015147651545703411,0,0,0.07068904489278793,0,-0.02019686996936798,-0.1110827773809433,0,0.12118121236562729,0.025246085599064827,0,-0.02019686996936798,-0.015147651545703411,0,0,0.02019686996936798,0,0,-0.005049217492341995,0,0.02019686996936798,0.005049217492341995,0,0,-0.050492171198129654,0,0.12118121236562729,0.07573825865983963,0,-0.08078747987747192,-0.04039373993873596,0,0.04039373993873596,0.03534452244639397,0,-0.060590606182813644,-0.025246085599064827,0,0.08078747987747192,0.04039373993873596,0,0,-0.02019686996936798,0,0.02019686996936798,0,0,-0.04039373993873596,-0.015147651545703411,0,0,0.05554138869047165,0,-0.02019686996936798,-0.025246085599064827,0,0.16157495975494385,0.01009843498468399,0,-0.04039373993873596,-0.04544295370578766,0,0.02019686996936798,0.015147651545703411,0,-0.3433467745780945,-0.005049217492341995,0,0.02019686996936798,0.01009843498468399,0,-0.02019686996936798,-0.01009843498468399,0],"text":"## This is a description file for a 6502-like CPU.\n## See https://github.com/mist64/c64ref for details.\n\n[info]\nmanufacturer MOS\nname         6502\nrevision     without ROR\nyear         1975\nid           6502rorbug\nbasedon      6502\ndescription  This is the pre June 1976 version of the original implementation of the 6502 designed by MOS Technology, Inc. This version does not have the ROR instruction; the respective opcodes behave differently due to a bug in the mask.\n\n[operations]\nASL0 shift  N-----Z-  /M7...M0/ ← 0\n\n[opcodes]\n66  *ASL0  a8\n6A  *ASL0  A\n6E  *ASL0  a16\n76  *ASL0  a8,X\n7E  *ASL0  a16,X\n\n[documentation-mnemos]\nASL0 Arithmetic Shift Left Without Updating Carry\n     This instruction shifts either the accumulator or the address memory location 1 bit to the left, with the bit 0 always being set to 0. ASL0 either shifts the accumulator left 1 bit or is a read/modify/write instruction that affects only memory.\n     The instruction does not affect the overflow bit, sets N equal to the result bit 7 (bit 6 in the input), sets Z flag if the result is equal to 0, otherwise resets Z.\n\n[documentation-mnemos~private]\nASL0 These are the buggy opcodes that were supposed to do a ROR.\n\n## TODO should inherit from [documentation-mnemos~private] and [documentation-addmodes~private]\n","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_6502rorbug.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/cpu_6502rorbug.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)"},{"name":"github.com/mist64_c64ref/src/6502/cpu_65c02.txt","language":"basic","vector":[0.006624135188758373,0.019044388085603714,0,-0.01656033843755722,-0.05382109805941582,0,0.036432743072509766,0.01656033843755722,0,-0.04636894538998604,-0.029808606952428818,0,0.04636894538998604,0.02318447269499302,0,-0.07286548614501953,-0.025668522343039513,0,0.03974480926990509,0.07617755234241486,0,-0.026496540755033493,-0.009108185768127441,0,0.03974480926990509,0.029808606952428818,0,-0.006624135188758373,-0.0372607596218586,0,0.02318447269499302,0.05713316425681114,0,-0.036432743072509766,-0.01656033843755722,0,0.013248270377516747,0.02401248924434185,0,-0.009936202317476273,-0.03394869342446327,0,0.04968101158738136,0.05630514770746231,0,-0.036432743072509766,-0.052165064960718155,0,0.03974480926990509,0.04222886264324188,0,-0.043056879192590714,-0.014904303476214409,0,0.08611375838518143,0.006624135188758373,0,-0.019872404634952545,-0.17967966198921204,0,0.006624135188758373,0.02318447269499302,0,-0.03974480926990509,-0.01159223634749651,0,0.013248270377516747,0.021528439596295357,0,-0.013248270377516747,-0.05713316425681114,0,0.03974480926990509,0.019872404634952545,0,0,-0.019872404634952545,0,0.019872404634952545,0.018216371536254883,0,-0.08611375838518143,-0.010764219798147678,0,0.02318447269499302,0.07617755234241486,0,-0.08942582458257675,-0.18547578155994415,0,0,0.005796118173748255,0,-0.013248270377516747,-0.02484050579369068,0,0.019872404634952545,0.01738835498690605,0,-0.009936202317476273,-0.02401248924434185,0,0.2185964584350586,0.021528439596295357,0,-0.026496540755033493,-0.02484050579369068,0,0.006624135188758373,0.02401248924434185,0,-0.07948961853981018,-0.04636894538998604,0,0.009936202317476273,0.02318447269499302,0,-0.006624135188758373,-0.021528439596295357,0,0.006624135188758373,0.02484050579369068,0,-0.029808606952428818,-0.009936202317476273,0,0.165603369474411,0.01656033843755722,0,-0.11592236161231995,-0.019872404634952545,0,0.03312067687511444,0.009936202317476273,0,-0.019872404634952545,-0.005796118173748255,0,0.013248270377516747,0.02484050579369068,0,-0.019872404634952545,-0.028152573853731155,0,0.0033120675943791866,0.03312067687511444,0,-0.026496540755033493,-0.02401248924434185,0,0.09273789077997208,0.05382109805941582,0,-0.026496540755033493,-0.02401248924434185,0,0.019872404634952545,0.030636625364422798,0,-0.013248270377516747,-0.029808606952428818,0,0.019872404634952545,0.021528439596295357,0,-0.01656033843755722,-0.013248270377516747,0,0.07617755234241486,0.021528439596295357,0,-0.009936202317476273,-0.08031763881444931,0,0.04968101158738136,0.019872404634952545,0,-0.1490430384874344,-0.04554092884063721,0,0.026496540755033493,0.020700421184301376,0,-0.06624135375022888,-0.07038143277168274,0,0.052993081510066986,0.0016560337971895933,0,-0.08942582458257675,-0.01242025289684534,0,0.2782136797904968,0.019044388085603714,0,-0.029808606952428818,-0.0074521517381072044,0,0.11923442780971527,0.11343831568956375,0,-0.0695534199476242,-0.10350210964679718,0,0.12254650145769119,0.005796118173748255,0,-0.04636894538998604,-0.04885299503803253,0,0.009936202317476273,0.006624135188758373,0,-0.02318447269499302,-0.0074521517381072044,0,0.006624135188758373,0.01242025289684534,0,-0.12917062640190125,-0.026496540755033493,0,0.04968101158738136,0.09439392387866974,0,-0.006624135188758373,-0.07617755234241486,0,0.013248270377516747,0.026496540755033493,0,-0.07617755234241486,-0.01656033843755722,0,0.013248270377516747,0.01656033843755722,0,-0.026496540755033493,-0.01159223634749651,0,0.013248270377516747,0.0074521517381072044,0,-0.02318447269499302,-0.022356456145644188,0,0.06624135375022888,0.04968101158738136,0,-0.03312067687511444,-0.01573232002556324,0,0,0.022356456145644188,0,-0.02318447269499302,-0.01573232002556324,0,0.2715895473957062,0.019872404634952545,0,-0.019872404634952545,-0.019044388085603714,0,0.0033120675943791866,0.059617213904857635,0,-0.026496540755033493,-0.009936202317476273,0,0.05630514770746231,0.026496540755033493,0,-0.06292928010225296,-0.08445772528648376,0,0.013248270377516747,0.01656033843755722,0,-0.006624135188758373,-0.036432743072509766,0,0.0033120675943791866,0.036432743072509766,0,-0.03974480926990509,-0.044712912291288376,0,0.013248270377516747,0.1440749317407608,0,-0.03312067687511444,-0.036432743072509766,0,0.019872404634952545,0.06541333347558975,0,-0.026496540755033493,-0.05713316425681114,0,0.019872404634952545,0.061273250728845596,0,-0.006624135188758373,-0.026496540755033493,0,0.013248270377516747,0.009936202317476273,0,-0.0033120675943791866,-0.014076286926865578,0,0,0.05796118080615997,0,-0.03974480926990509,-0.07120945304632187,0,0.052993081510066986,0.026496540755033493,0,-0.009936202317476273,-0.02318447269499302,0,0.043056879192590714,0.009108185768127441,0,-0.05630514770746231,-0.03974480926990509,0,0.1092982292175293,0.00828016921877861,0,-0.03974480926990509,-0.020700421184301376,0,0.059617213904857635,0.0480249784886837,0,-0.026496540755033493,-0.04057282581925392,0,0.006624135188758373,0.04140084236860275,0,-0.32127055525779724,-0.021528439596295357,0,0.03974480926990509,0.0033120675943791866,0,-0.009936202317476273,-0.01656033843755722,0,0.036432743072509766,0.13662278652191162,0,-0.10267408937215805,-0.01656033843755722,0,0.006624135188758373,0.02484050579369068,0,-0.02318447269499302,-0.019872404634952545,0,0.036432743072509766,0.03312067687511444,0,-0.009936202317476273,-0.0347767099738121,0,0.01656033843755722,0.01159223634749651,0,-0.36101534962654114,-0.0074521517381072044,0,0.009936202317476273,0.020700421184301376,0,-0.036432743072509766,-0.022356456145644188,0],"text":"## This is a description file for a 6502-like CPU.\n## See https://github.com/mist64/c64ref for details.\n\n[info]\nmanufacturer WDC\nname         65C02\nyear         1983 ## https://en.wikipedia.org/wiki/WDC_65C02; or 1981? https://en.wikipedia.org/wiki/Talk%3AWDC_65C02\nid           65c02\nbasedon      6502\ndescription  This is the CMOS-based reimplementation of the 6502 designed by Western Design Center, Inc. It supports all documented features of the original 6502, fixes all known quirks, adds 27 new opcodes and two addressing modes, and guarantees all undocumented opcodes to be NOPs. To distinguish it from derived versions, it is also sometimes called the 65SC02.\n\n[mnemos]\nBRA   Branch Always\nPHX   Push X Register\nPHY   Push Y Register\nPLX   Pull X Register\nPLY   Pull Y Register\nSTZ   Store Zero\nTRB   Test and Reset Memory Bits\nTSB   Test and Set Memory Bits\n\n[operations]\nBRA  ctrl  --------  Branch Always\nPHX  stack --------  X↓\nPHY  stack --------  Y↑\nPLX  stack N-----Z-  X↑\nPLY  stack N-----Z-  Y↑\nSTZ  load  --------  0 → M\nTRB  logic ------Z-  ~A ∧ M → M\nTSB  logic ------Z-  A ∨ M → M\n\n[addmodes]\n(a8)     2  ($nn)      Zero Page Indirect\n(a16,X)  3  ($nnnn,X)  Absolute X-Indexed Indirect\n\n[opcodes]\n04  TSB   a8\n0C  TSB   a16\n12  ORA   (a8)\n14  TRB   a8\n1A  INC   A\n1C  TRB   a16\n32  AND   (a8)\n34  BIT   a8,X\n3A  DEC   A\n3C  BIT   a16,X\n52  EOR   (a8)\n5A  PHY\n64  STZ   a8\n72  ADC   (a8)\n74  STZ   a8,X\n7A  PLY\n7C  JMP   (a16,X)\n80  BRA   r8\n89  BIT   #d8\n92  STA   (a8)\n9C  STZ   a16\n9E  STZ   a16,X\nB2  LDA   (a8)\nD2  CMP   (a8)\nDA  PHX\nF2  SBC   (a8)\nFA  PLX\n\n02  *NOP #d8\n03  *NOP\n07  *NOP\n0B  *NOP\n0F  *NOP\n13  *NOP\n17  *NOP\n1B  *NOP\n1F  *NOP\n22  *NOP #d8\n23  *NOP\n27  *NOP\n2B  *NOP\n2F  *NOP\n33  *NOP\n37  *NOP\n3B  *NOP\n3F  *NOP\n42  *NOP #d8\n43  *NOP\n44  *NOP #d8\n47  *NOP\n4B  *NOP\n4F  *NOP\n53  *NOP\n54  *NOP #d8\n57  *NOP\n5B  *NOP\n5C  *NOP\n5F  *NOP\n62  *NOP #d8\n63  *NOP\n67  *NOP\n6B  *NOP\n6F  *NOP\n73  *NOP\n77  *NOP\n7B  *NOP\n7F  *NOP\n82  *NOP #d8\n83  *NOP\n87  *NOP\n8B  *NOP\n8F  *NOP\n93  *NOP\n97  *NOP\n9B  *NOP\n9F  *NOP\nA3  *NOP\nA7  *NOP\nAB  *NOP\nAF  *NOP\nB3  *NOP\nB7  *NOP\nBB  *NOP\nBF  *NOP\nC2  *NOP #d8\nC3  *NOP\nC7  *NOP\nCB  *NOP\nCF  *NOP\nD3  *NOP\nD4  *NOP #d8\nD7  *NOP\nDB  *NOP\nDC  *NOP\nDF  *NOP\nE2  *NOP #d8\nE3  *NOP\nE7  *NOP\nEB  *NOP\nEF  *NOP\nF3  *NOP\nF4  *NOP #d8\nF7  *NOP\nFB  *NOP\nFC  *NOP\nFF  *NOP\n\n[timing]\n## updated timing\n6c  6 ## JMP () fixed, one cycle extra\n\n## ADC instructions add 1 cycle in decimal mode\n61  6+d\n65  3+d\n69  2+d\n6D  4+d\n71  5+p+d\n75  4+d\n79  4+p+d\n7D  4+p+d\n\n## SBC instructions add 1 cycle in decimal mode\nE1  6+d\nE5  3+d\nE9  2+d\nED  4+d\nF1  5+p+d\nF5  4+d\nF9  4+p+d\nFD  4+p+d\n\n## new instructions\n04  5\n0C  6\n12  5\n14  5\n1A  2\n1C  6\n32  5\n34  3\n3A  2\n3C  4\n52  5\n5A  3\n64  3\n72  5+d\n74  4\n7A  4\n7C  6\n80  3+p\n89  3\n92  5\n9C  4\n9E  5\nB2  5\nD2  5\nDA  3\nF2  5+d\nFA  4\n\n## NOPs\n02  2\n03  1\n07  1\n0B  1\n0F  1\n13  1\n17  1\n1B  1\n1F  1\n22  2\n23  1\n27  1\n2B  1\n2F  1\n33  1\n37  1\n3B  1\n3F  1\n42  2\n43  1\n44  3\n47  1\n4B  1\n4F  1\n53  1\n54  4\n57  1\n5B  1\n5C  8\n5F  1\n62  2\n63  1\n67  1\n6B  1\n6F  1\n73  1\n77  1\n7B  1\n7F  1\n82  2\n83  1\n87  1\n8B  1\n8F  1\n93  1\n97  1\n9B  1\n9F  1\nA3  1\nA7  1\nAB  1\nAF  1\nB3  1\nB7  1\nBB  1\nBF  1\nC2  2\nC3  1\nC7  1\nCB  1\nCF  1\nD3  1\nD4  4\nD7  1\nDB  1\nDC  4\nDF  1\nE2  2\nE3  1\nE7  1\nEB  1\nEF  1\nF3  1\nF4  4\nF7  1\nFB  1\nFC  4\nFF  1\n\n[documentation-mnemos]\n## based on the 6502 docs\nBRA  Branch Always\n     This instruction takes an unconditional branch.\n     BRA does not affect any of the flags or any other part of the machine other than the program counter.\n\nPHX  Push Index Register X On Stack\n     This instruction transfers the current value of the index register X to the next location on the stack, automatically decrementing the stack to point to the next empty location.\n     The Push X instruction only affects the stack pointer register which is decremented by 1 as a result of the operation. It affects no flags.\n\nPHY  Push Index Register Y On Stack\n     This instruction transfers the current value of the index register Y to the next location on the stack, automatically decrementing the stack to point to the next empty location.\n     The Push Y instruction only affects the stack pointer register which is decremented by 1 as a result of the operation. It affects no flags.\n\nPLX  Pull Index Register X From Stack\n     This instruction adds 1 to the current value of the stack pointer and uses it to address the stack and loads the contents of the stack into the X register.\n     The PLX instruction does not affect the carry or overflow flags. It sets N if the bit 7 is on in index register X as a result of instructions, otherwise it is reset. If index register X is zero as a result of the PLA, then the Z flag is set, otherwise it is reset. The PLX instruction changes content of the index register X to the contents of the memory location at stack register plus 1 and also increments the stack register.\n\nPLY  Pull Index Register Y From Stack\n     This instruction adds 1 to the current value of the stack pointer and uses it to address the stack and loads the contents of the stack into the Y register.\n     The PLY instruction does not affect the carry or overflow flags. It sets N if the bit 7 is on in index register Y as a result of instructions, otherwise it is reset. If index register Y is zero as a result of the PLA, then the Z flag is set, otherwise it is reset. The PLY instruction changes content of the index register Y to the contents of the memory location at stack register plus 1 and also increments the stack register.\n\nSTZ  Store Zero In Memory\n     Transfers the value 0 to addressed memory location.\n     No flags or registers in the microprocessor are affected by the store operation.\n\n## https://github.com/MEGA65/c65-specifications/blob/master/c65manualupdated.txt\nTRB  Test And Reset Memory Bits With Accumulator\n     This instruction tests and resets bits in memory, using the accumulator for both a test mask, and a reset mask. It performs a logical AND between the inverted bits of the accumulator and the bits in memory, storing the result back into memory.\n     The zero flag is set if all bits of the result of the AND are zero, otherwise it is reset.\n\nTSB  Test And Set Memory Bits With Accumulator\n     This instruction tests and sets bits in memory, using the accumulator for both a test mask, and a set mask. It performs a logical OR between the bits of the accumulator and the bits in memory, storing the result back into memory.\n     The zero flag is set if all bits of the result of the OR are zero, otherwise it is reset.\n\n[documentation-addmodes]\n## http://datasheets.chipdb.org/Western%20Design/W65C02S.pdf\n\n(a8)     Zero Page Indirect\n         With Zero Page Indirect addressing mode, the second byte of the instruction is a zero page indirect address that points to the low byte of a two byte effective address.\n\n(a16,X)  Absolute X-Indexed Indirect\n         With the Absolute Indexed Indirect addressing mode, the X Index Register is added to the second and third byes of the instruction to form an address to a pointer. This address mode is only used with the JMP instruction and the program Counter is loaded with the first and second bytes at this pointer.\n","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_65c02.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/cpu_65c02.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)"},{"name":"github.com/mist64_c64ref/src/6502/cpu_65c02s.txt","language":"basic","vector":[0,0,0,0,-0.018830347806215286,0,0.0502142608165741,0,0,-0.0502142608165741,0,0,0,0.03138391301035881,0,-0.07532139122486115,-0.006276782602071762,0,0.07532139122486115,0.02510713040828705,0,-0.07532139122486115,0,0,0.02510713040828705,0.03766069561243057,0,0,-0.018830347806215286,0,0.02510713040828705,0.05649104341864586,0,0,-0.03138391301035881,0,0,0,0,0,-0.012553565204143524,0,0.07532139122486115,0.006276782602071762,0,-0.02510713040828705,-0.0502142608165741,0,0.02510713040828705,0.012553565204143524,0,-0.1004285216331482,-0.07532139122486115,0,0.07532139122486115,0,0,0,-0.06276782602071762,0,0.1506427824497223,0.06276782602071762,0,-0.02510713040828705,-0.03766069561243057,0,0,0.006276782602071762,0,-0.02510713040828705,0,0,0.07532139122486115,0.018830347806215286,0,0,0,0,0.02510713040828705,0.043937478214502335,0,-0.07532139122486115,-0.03766069561243057,0,0.02510713040828705,0.018830347806215286,0,-0.02510713040828705,-0.11925886571407318,0,0.02510713040828705,0.03138391301035881,0,-0.02510713040828705,-0.03138391301035881,0,0,0,0,0,0,0,0.502142608165741,0.03138391301035881,0,-0.0502142608165741,-0.02510713040828705,0,0,0.018830347806215286,0,-0.02510713040828705,-0.03766069561243057,0,0,0.03766069561243057,0,-0.02510713040828705,-0.03766069561243057,0,0,0.012553565204143524,0,-0.02510713040828705,0,0,0.3012855648994446,0.018830347806215286,0,-0.1506427824497223,0,0,0,0.012553565204143524,0,-0.07532139122486115,0,0,0,0.03766069561243057,0,-0.02510713040828705,-0.018830347806215286,0,0,0.03138391301035881,0,0,-0.05649104341864586,0,0.17574991285800934,0.03766069561243057,0,-0.0502142608165741,-0.006276782602071762,0,0,0.07532139122486115,0,0,-0.02510713040828705,0,0,0.006276782602071762,0,-0.02510713040828705,-0.0502142608165741,0,0.02510713040828705,0.03766069561243057,0,-0.07532139122486115,-0.03138391301035881,0,0,0.043937478214502335,0,-0.07532139122486115,-0.03766069561243057,0,0,0.012553565204143524,0,0,-0.012553565204143524,0,0.07532139122486115,0.012553565204143524,0,-0.02510713040828705,-0.012553565204143524,0,0,0.018830347806215286,0,0,-0.018830347806215286,0,0.1506427824497223,0.2510713040828705,0,-0.02510713040828705,-0.08159817010164261,0,0.07532139122486115,0.012553565204143524,0,-0.07532139122486115,-0.02510713040828705,0,0,0,0,0,-0.012553565204143524,0,0.02510713040828705,0.012553565204143524,0,-0.1004285216331482,-0.02510713040828705,0,0,0.1506427824497223,0,0,-0.09415173530578613,0,0,0.018830347806215286,0,0,-0.05649104341864586,0,0,0.006276782602071762,0,-0.1506427824497223,-0.012553565204143524,0,0.02510713040828705,0.006276782602071762,0,0,0,0,0.07532139122486115,0.08787495642900467,0,0,-0.02510713040828705,0,0.02510713040828705,0.018830347806215286,0,0,-0.006276782602071762,0,0.07532139122486115,0.006276782602071762,0,-0.02510713040828705,-0.03766069561243057,0,0.02510713040828705,0.03138391301035881,0,-0.02510713040828705,-0.03766069561243057,0,0,0.03766069561243057,0,0,-0.043937478214502335,0,0.02510713040828705,0,0,0,-0.006276782602071762,0,0.07532139122486115,0.05649104341864586,0,0,-0.012553565204143524,0,0,0.006276782602071762,0,0,-0.018830347806215286,0,0,0.08159817010164261,0,0,-0.018830347806215286,0,0.02510713040828705,0.043937478214502335,0,0,-0.043937478214502335,0,0.0502142608165741,0,0,0,0,0,0,0.13808920979499817,0,-0.02510713040828705,-0.06276782602071762,0,0.07532139122486115,0,0,-0.02510713040828705,-0.006276782602071762,0,0,0,0,-0.02510713040828705,-0.006276782602071762,0,0,0,0,-0.0502142608165741,-0.08159817010164261,0,0.02510713040828705,0.08787495642900467,0,-0.1506427824497223,-0.03766069561243057,0,0,0.03766069561243057,0,-0.12553565204143524,-0.018830347806215286,0,0.12553565204143524,0.012553565204143524,0,0,-0.006276782602071762,0,0,0.03766069561243057,0,0,-0.012553565204143524,0,0,0.05649104341864586,0,0,-0.02510713040828705,0,0.07532139122486115,0,0,-0.07532139122486115,0,0,0,0.012553565204143524,0,-0.22596417367458344,-0.006276782602071762,0,0.0502142608165741,0.043937478214502335,0,-0.0502142608165741,-0.018830347806215286,0],"text":"## This is a description file for a 6502-like CPU.\n## See https://github.com/mist64/c64ref for details.\n\n[info]\nmanufacturer WDC\nname         65C02S\nyear         1986 ## or earlier; http://forum.6502.org/viewtopic.php?p=38895\nid           65c02s\nbasedon      r65c02\ndescription  This is the later version of Western Design Center's 65C02, which supports the Rockwell extensions and adds two power saving opcodes borrowed from the 65c816.\n\n[mnemos]\nSTP   Stop the Clock\nWAI   Wait for Interrupt\n\n[operations]\nSTP  ctrl   --------  Stop the Clock\nWAI  ctrl   --------  Wait for Interrupt\n\n[opcodes]\nCB  WAI\nDB  STP\n\n[timing]\nCB  3\nDB  3\n\n[documentation-mnemos]\n\nSTP  Stop the Clock\n     The processor halts until a hardware reset is applied. Power-supply current drops to nearly zero.\n\nWAI  Wait for Interrupt\n     The processor pauses at the current location until the next interrupt occurs. This allows for zero latency interrupt response.\n\n\n\n","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_65c02s.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/cpu_65c02s.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)"},{"name":"github.com/mist64_c64ref/src/6502/cpu_65c816.txt","language":"basic","vector":[0.004542740527540445,0.03937041759490967,0,-0.0030284938402473927,-0.007571234367787838,0,0.006056987680494785,0.00908548105508089,0,-0.02422795072197914,-0.013249659910798073,0,0.0030284938402473927,0.07041247934103012,0,-0.04542740806937218,-0.010599727742373943,0,0.037856172770261765,0.04088466614484787,0,-0.01665671542286873,-0.003785617183893919,0,0.01817096211016178,0.09766892343759537,0,-0.004542740527540445,-0.021199455484747887,0,0.00908548105508089,0.05299863964319229,0,-0.004542740527540445,-0.019306648522615433,0,0.0030284938402473927,0.015521030873060226,0,-0.00908548105508089,-0.018928086385130882,0,0.004542740527540445,0.01438534539192915,0,-0.025742197409272194,-0.02271370403468609,0,0.0015142469201236963,0.007949796505272388,0,-0.09842604398727417,-0.006056987680494785,0,0.025742197409272194,0.006814111024141312,0,-0.019685208797454834,-0.02422795072197914,0,0.007571234367787838,0.010221166536211967,0,-0.04239891096949577,-0.0064355493523180485,0,0.004542740527540445,0.013249659910798073,0,-0.013628222048282623,-0.04239891096949577,0,0.01817096211016178,0.0064355493523180485,0,-0.0015142469201236963,-0.0022713702637702227,0,0.007571234367787838,0.12454680353403091,0,-0.08328358083963394,-0.011356852017343044,0,0.007571234367787838,0.008328357711434364,0,-0.03937041759490967,-0.049591585993766785,0,0.004542740527540445,0.0049213021993637085,0,-0.0030284938402473927,-0.005299863871186972,0,0.015142468735575676,0.010599727742373943,0,-0.01211397536098957,-0.018549524247646332,0,0.6117557287216187,0.003785617183893919,0,-0.006056987680494785,-0.012871098704636097,0,0.010599727742373943,0.002649931935593486,0,-0.010599727742373943,-0.02914925292134285,0,0.006056987680494785,0.020063770934939384,0,-0.013628222048282623,-0.010978289879858494,0,0.0030284938402473927,0.01211397536098957,0,-0.006056987680494785,-0.007949796505272388,0,0.0287706907838583,0.03672048822045326,0,-0.09691180288791656,-0.0049213021993637085,0,0.00908548105508089,0.0030284938402473927,0,-0.00908548105508089,-0.005678426008671522,0,0.01665671542286873,0.007192672695964575,0,-0.007571234367787838,-0.016278153285384178,0,0.00908548105508089,0.005299863871186972,0,-0.006056987680494785,-0.05262007936835289,0,0.09236905723810196,0.018928086385130882,0,-0.010599727742373943,-0.015521030873060226,0,0.007571234367787838,0.010599727742373943,0,-0.007571234367787838,-0.030284937471151352,0,0.0030284938402473927,0.004164178855717182,0,-0.00908548105508089,-0.009464043192565441,0,0.05148439481854439,0.01211397536098957,0,-0.004542740527540445,-0.0022713702637702227,0,0.14839619398117065,0.008328357711434364,0,-0.00908548105508089,-0.04277747496962547,0,0.01211397536098957,0.00908548105508089,0,-0.007571234367787838,-0.03672048822045326,0,0.02422795072197914,0.004164178855717182,0,-0.021199455484747887,-0.0018928085919469595,0,0.15142469108104706,0.06927679479122162,0,-0.006056987680494785,-0.007571234367787838,0,0.3513052761554718,0.30928492546081543,0,-0.0575413815677166,-0.025742197409272194,0,0.1756526380777359,0.007571234367787838,0,-0.049970146268606186,-0.006814111024141312,0,0.013628222048282623,0.004164178855717182,0,-0.030284937471151352,-0.007571234367787838,0,0.0030284938402473927,0.0030284938402473927,0,-0.01817096211016178,-0.00908548105508089,0,0.01665671542286873,0.015142468735575676,0,-0.0030284938402473927,-0.0598127506673336,0,0.0030284938402473927,0.0140067832544446,0,-0.08479782193899155,-0.008706919848918915,0,0.004542740527540445,0.012871098704636097,0,-0.01665671542286873,-0.0049213021993637085,0,0.010599727742373943,0.006814111024141312,0,-0.03331343084573746,-0.004164178855717182,0,0.010599727742373943,0.04694165289402008,0,-0.006056987680494785,-0.007571234367787838,0,0.004542740527540445,0.0049213021993637085,0,-0.03331343084573746,-0.010221166536211967,0,0.006056987680494785,0.0018928085919469595,0,-0.01665671542286873,-0.02914925292134285,0,0.0015142469201236963,0.032177746295928955,0,-0.00908548105508089,-0.007192672695964575,0,0.03331343084573746,0.07609090209007263,0,-0.06814111024141312,-0.015142468735575676,0,0.0030284938402473927,0.007192672695964575,0,-0.0030284938402473927,-0.007192672695964575,0,0.004542740527540445,0.01665671542286873,0,-0.025742197409272194,-0.010978289879858494,0,0.004542740527540445,0.07760515064001083,0,-0.010599727742373943,-0.02384938858449459,0,0.01211397536098957,0.1775454431772232,0,-0.02271370403468609,-0.038613297045230865,0,0.12871098518371582,0.08896200358867645,0,-0.010599727742373943,-0.025742197409272194,0,0.006056987680494785,0.010599727742373943,0,-0.004542740527540445,-0.01817096211016178,0,0.019685208797454834,0.15445318818092346,0,-0.013628222048282623,-0.010599727742373943,0,0.01817096211016178,0.010978289879858494,0,-0.013628222048282623,-0.004164178855717182,0,0.02422795072197914,0.0030284938402473927,0,-0.02271370403468609,-0.04580596834421158,0,0.027256444096565247,0.0030284938402473927,0,-0.03634192422032356,-0.009842604398727417,0,0.007571234367787838,0.012492536567151546,0,-0.010599727742373943,-0.04088466614484787,0,0.01211397536098957,0.007571234367787838,0,-0.006056987680494785,-0.005299863871186972,0,0.01817096211016178,0.0064355493523180485,0,-0.004542740527540445,-0.018549524247646332,0,0.021199455484747887,0.005299863871186972,0,-0.06814111024141312,-0.009842604398727417,0,0.007571234367787838,0.02384938858449459,0,-0.0015142469201236963,-0.007192672695964575,0,0.24682223796844482,0.018549524247646332,0,-0.006056987680494785,-0.03596336394548416,0,0.013628222048282623,0.0022713702637702227,0,-0.09085481613874435,-0.003785617183893919,0,0.00908548105508089,0.015142468735575676,0,-0.006056987680494785,-0.0140067832544446,0],"text":"## This is a description file for a 6502-like CPU.\n## See https://github.com/mist64/c64ref for details.\n\n[info]\nmanufacturer WDC\nname         65C816\nyear         1984\nid           65c816 ## https://en.wikipedia.org/wiki/WDC_65C816\nbasedon      65c02\ndescription  This is the original implementation of the 16 bit version of the 65C02 designed by Western Design Center, Inc. It supports all instructions of original WDC 65C02, and adds support support for 16 bit registers, 24 bit addresses, a relocatable zero page and stack-relative addressing, filling all 256 opcodes. (The timing information corresponds to native mode.)\n\n[registers]\n#   A,X,Y,P,S,DBR,D,K,PC\nA   16   Accumulator\nX   16   X Index Register\nY   16   Y Index Register\nP   8    Processor Status\nS   16   Stack Pointer\nDBR 8    Data Bank Register\nD   16   Direct Page Register\nK   8    Program Bank Register\nPC  16   Program Counter\n\n[flags]\n5  M  Accumulator/Memory Width\n4  X  Index Register Width\n10 E  Emulation Mode\n\n[mnemos]\nBRL  Branch Long\nCOP  Coprocessor\nJSL  Jump to Subroutine Long\nMVN  Move Memory Negative\nMVP  Move Memory Positive\nPEA  Push Effective Address\nPEI  Push Effective Indirect Address\nPER  Push Effective Relative Address\nPHB  Push Data Bank Register\nPHD  Push Direct Register\nPHK  Push K Register\nPLB  Pull Data Bank Register\nPLD  Pull Direct Register\nREP  Reset Processor Status Bits\nRTL  Return From Subroutine Long\nSEP  Set Processor Status Bits\nSTP  Stop the Clock\nTCD  Transfer C Accumulator to Direct Register\nTCS  Transfer C Accumulator to Stack Pointer\nTDC  Transfer Direct Register to C Accumulator\nTSC  Transfer Stack Pointer to C Accumulator\nTXY  Transfer X to Y\nTYX  Transfer Y to X\nWAI  Wait for Interrupt\nWDM  William D. Mensch, Jr.\nXBA  Exchange B and A Accumulator\nXCE  Exchange Carry and Emulation Flags\n\n[operations]\nBRL  ctrl   --------  Branch always long\nCOP  ctrl   ----01--  Co-processor empowerment\nJSL  ctrl   --------  Jump to subroutine long\nMVN  load   --------  Move memory negative\nMVP  load   --------  Move memory positive\nPEA  stack  --------  Mw↓\nPEI  stack  --------  Mw↓\nPER  stack  --------  Mw↓\nPHB  stack  --------  B↓\nPHD  stack  --------  D↓\nPHK  stack  --------  K↓\nPLB  stack  *-----*-  B↑\nPLD  stack  *-----*-  D↑\nREP  flags  ********  P ⊼ M → P\nRTL  ctrl   --------  Return from subroutine long\nSEP  flags  ********  P ∨ M → P\nSTP  ctrl   --------  Stop the clock\nTCD  trans  *-----*-  C → D\nTCS  trans  --------  C → S\nTDC  trans  *-----*-  D → C\nTSC  trans  *-----*-  S → C\nTXY  trans  *-----*-  T → Y\nTYX  trans  *-----*-  Y → X\nWAI  ctrl   --------  Wait for interrupt\nWDM  nop    --------  Reserved for future expansion\nXBA  trans  *-----*-  B ↔ A\nXCE  flags  -------** C ↔ E\n\n[addmodes]\n## new 8/16 bit immediates\n#m:d8/d16  3-m  #$nn/$nnnn  Immediate (M)\n#x:d8/d16  3-x  #$nn/$nnnn  Immediate (X)\n\n## new modes\n[a16]      3    [$nnnn]     Absolute Indirect Long\n(a16,X)    3    ($nnnn,X)   Absolute X-Indexed Indirect\n[a8]       2    [$nn]       Direct Page Indirect Long\n[a8],Y     2    [$nn],Y     Direct Page Indirect Y-Indexed Long\na24        4    $nnnnnn     Absolute Long\na24,X      4    $nnnnnn,X   Absolute X-Indexed Long\nr16        3    $nnnn       Relative (word)\nsrc,dest   3    $nn,$nn     Block Move\na8,S       2    $nn,S       Stack Relative\n(a8,S),Y   2    ($nn,S),Y   Stack Relative Indirect Y-Indexed\n\n## renamed modes (zero page -> direct page)\na8     2  $nn      Direct Page\na8,X   2  $nn,X    X-Indexed Direct Page\na8,Y   2  $nn,Y    Y-Indexed Direct Page\n(a8,X) 2  ($nn,X)  X-Indexed Direct Page Indirect\n(a8),Y 2  ($nn),Y  Direct Page Indirect Y-Indexed\n\n[opcodes]\n02  COP   #d8\n03  ORA   a8,S\n07  ORA   [a8]\n0B  PHD\n0F  ORA   a24\n13  ORA   (a8,S),Y\n17  ORA   [a8],Y\n1B  TCS\n1F  ORA   a24,X\n22  JSL   a24\n23  AND   a8,S\n27  AND   [a8]\n2B  PLD\n2F  AND   a24\n33  AND   (a8,S),Y\n37  AND   [a8],Y\n3B  TSC\n3F  AND   a24,X\n42  WDM   #d8\n43  EOR   a8,S\n44  MVP   src,dest\n47  EOR   [a8]\n4B  PHK\n4F  EOR   a24\n53  EOR   (a8,S),Y\n54  MVN   src,dest\n57  EOR   [a8],Y\n5B  TCD\n5C  JMP   a24\n5F  EOR   a24,X\n62  PER   #d8\n63  ADC   a8,S\n67  ADC   [a8]\n6B  RTL\n6F  ADC   a24\n73  ADC   (a8,S),Y\n77  ADC   [a8],Y\n7B  TDC\n7F  ADC   a24,X\n82  BRL   r16\n83  STA   a8,S\n87  STA   [a8]\n8B  PHB\n8F  STA   a24\n93  STA   (a8,S),Y\n97  STA   [a8],Y\n9B  TXY\n9F  STA   a24,X\nA3  LDA   a8,S\nA7  LDA   [a8]\nAB  PLB\nAF  LDA   a24\nB3  LDA   (a8,S),Y\nB7  LDA   [a8],Y\nBB  TYX\nBF  LDA   a24,X\nC2  REP   #d8\nC3  CMP   a8,S\nC7  CMP   [a8]\nCB  WAI\nCF  CMP   a24\nD3  CMP   (a8,S),Y\nD4  PEI   a8\nD7  CMP   [a8],Y\nDB  STP\nDC  JMP   [a16]\nDF  CMP   a24,X\nE2  SEP   #d8\nE3  SBC   a8,S\nE7  SBC   [a8]\nEB  XBA\nEF  SBC   a24\nF3  SBC   (a8,S),Y\nF4  PEA   #d8\nF7  SBC   [a8],Y\nFB  XCE\nFC  JSR   (a16,X)\nFF  SBC   a24,X\n\n09  ORA   #m:d8/d16\n29  AND   #m:d8/d16\n49  EOR   #m:d8/d16\n69  ADC   #m:d8/d16\n89  BIT   #m:d8/d16\nA0  LDY   #x:d8/d16\nA2  LDX   #x:d8/d16\nA9  LDA   #m:d8/d16\nC0  CPY   #x:d8/d16\nC9  CMP   #m:d8/d16\nE0  CPX   #x:d8/d16\nE9  SBC   #m:d8/d16\n\n[timing]\n00  8\n01  7-m+w\n02  8\n03  5-m\n04  7-2*m+w\n05  4-m+w\n06  7-2*m+w\n07  7-m+w\n08  3\n09  3-m\n0A  2\n0B  4\n0C  8-2*m\n0D  5-m\n0E  8-2*m\n0F  6-m\n10  2+t\n11  7-m+w-x+x*p\n12  6-m+w\n13  8-m\n14  7-2*m+w\n15  5-m+w\n16  8-2*m+w\n17  7-m+w\n18  2\n19  6-m-x+x*p\n1A  2\n1B  2\n1C  8-2*m\n1D  6-m-x+x*p\n1E  9-2*m\n1F  6-m\n20  6\n21  7-m+w\n22  8\n23  5-m\n24  4-m+w\n25  4-m+w\n26  7-2*m+w\n27  7-m+w\n28  4\n29  3-m\n2A  2\n2B  5\n2C  5-m\n2D  5-m\n2E  8-2*m\n2F  6-m\n30  2+t\n31  7-m+w-x+x*p\n32  6-m+w\n33  8-m\n34  5-m+w\n35  5-m+w\n36  8-2*m+w\n37  7-m+w\n38  2\n39  6-m-x+x*p\n3A  2\n3B  2\n3C  6-m-x+x*p\n3D  6-m-x+x*p\n3E  9-2*m\n3F  6-m\n40  7\n41  7-m+w\n42  2\n43  5-m\n44  7\n45  4-m+w\n46  7-2*m+w\n47  7-m+w\n48  4-m\n49  3-m\n4A  2\n4B  3\n4C  3\n4D  5-m\n4E  8-2*m\n4F  6-m\n50  2+t\n51  7-m+w-x+x*p\n52  6-m+w\n53  8-m\n54  7\n55  5-m+w\n56  8-2*m+w\n57  7-m+w\n58  2\n59  6-m-x+x*p\n5A  4-x\n5B  2\n5C  4\n5D  6-m-x+x*p\n5E  9-2*m\n5F  6-m\n60  6\n61  7-m+w\n62  6\n63  5-m\n64  4-m+w\n65  4-m+w\n66  7-2*m+w\n67  7-m+w\n68  5-m\n69  3-m\n6A  2\n6B  6\n6C  5\n6D  5-m\n6E  8-2*m\n6F  6-m\n70  2+t\n71  7-m+w-x+x*p\n72  6-m+w\n73  8-m\n74  5-m+w\n75  5-m+w\n76  8-2*m+w\n77  7-m+w\n78  2\n79  6-m-x+x*p\n7A  5-x\n7B  2\n7C  6\n7D  6-m-x+x*p\n7E  9-2*m\n7F  6-m\n80  3\n81  7-m+w\n82  4\n83  5-m\n84  4-x+w\n85  4-m+w\n86  4-x+w\n87  7-m+w\n88  2\n89  3-m\n8A  2\n8B  3\n8C  5-x\n8D  5-m\n8E  5-x\n8F  6-m\n90  2+t\n91  7-m+w\n92  6-m+w\n93  8-m\n94  5-x+w\n95  5-m+w\n96  5-x+w\n97  7-m+w\n98  2\n99  6-m\n9A  2\n9B  2\n9C  5-m\n9D  6-m\n9E  6-m\n9F  6-m\nA0  3-x\nA1  7-m+w\nA2  3-x\nA3  5-m\nA4  4-x+w\nA5  4-m+w\nA6  4-x+w\nA7  7-m+w\nA8  2\nA9  3-m\nAA  2\nAB  4\nAC  5-x\nAD  5-m\nAE  5-x\nAF  6-m\nB0  2+t\nB1  7-m+w-x+x*p\nB2  6-m+w\nB3  8-m\nB4  5-x+w\nB5  5-m+w\nB6  5-x+w\nB7  7-m+w\nB8  2\nB9  6-m-x+x*p\nBA  2\nBB  2\nBC  6-2*x+x*p\nBD  6-m-x+x*p\nBE  6-2*x+x*p\nBF  6-m\nC0  3-x\nC1  7-m+w\nC2  3\nC3  5-m\nC4  4-x+w\nC5  4-m+w\nC6  7-2*m+w\nC7  7-m+w\nC8  2\nC9  3-m\nCA  2\nCB  3\nCC  5-x\nCD  5-m\nCE  8-2*m\nCF  6-m\nD0  2+t\nD1  7-m+w-x+x*p\nD2  6-m+w\nD3  8-m\nD4  6+w\nD5  5-m+w\nD6  8-2*m+w\nD7  7-m+w\nD8  2\nD9  6-m-x+x*p\nDA  4-x\nDB  3\nDC  6\nDD  6-m-x+x*p\nDE  9-2*m\nDF  6-m\nE0  3-x\nE1  7-m+w\nE2  3\nE3  5-m\nE4  4-x+w\nE5  4-m+w\nE6  7-2*m+w\nE7  7-m+w\nE8  2\nE9  3-m\nEA  2\nEB  3\nEC  5-x\nED  5-m\nEE  8-2*m\nEF  6-m\nF0  2+t\nF1  7-m+w-x+x*p\nF2  6-m+w\nF3  8-m\nF4  5\nF5  5-m+w\nF6  8-2*m+w\nF7  7-m+w\nF8  2\nF9  6-m-x+x*p\nFA  5-x\nFB  2\nFC  8\nFD  6-m-x+x*p\nFE  9-2*m\nFF  6-m\n\n[vectors]\n00FFE4 COP\n00FFE6 BRK\n00FFE8 ABORT\n00FFEA NMI\n00FFEE IRQ\n00FFFC RESET\n\n[documentation-mnemos|noinherit]\n\n[documentation-addmodes|noinherit]\n","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_65c816.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/cpu_65c816.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)"},{"name":"github.com/mist64_c64ref/src/6502/cpu_65ce02.txt","language":"basic","vector":[0.008335762657225132,0.08492057770490646,0,-0.01250364352017641,-0.03542698919773102,0,0.02709122747182846,0.01979743503034115,0,-0.05209851264953613,-0.04428373649716377,0,0.02500728704035282,0.013024628162384033,0,-0.20839405059814453,-0.05053555965423584,0,0.03125910833477974,0.02552827261388302,0,-0.15004372596740723,-0.010419703088700771,0,0.018755465745925903,0.009377732872962952,0,-0.006251821760088205,-0.018755465745925903,0,0.01250364352017641,0.08231565356254578,0,-0.05001457408070564,-0.028133196756243706,0,0.010419703088700771,0.035947974771261215,0,-0.022923346608877182,-0.01979743503034115,0,0.045846693217754364,0.021881375461816788,0,-0.02709122747182846,-0.07033299654722214,0,0.008335762657225132,0.032301079481840134,0,-0.01458758395165205,-0.01354561373591423,0,0.06460215896368027,0.01562955416738987,0,-0.043762750923633575,-0.08856747299432755,0,0.004167881328612566,0.01927644945681095,0,-0.043762750923633575,-0.006772806867957115,0,0.047930631786584854,0.02136038988828659,0,-0.0291751679033041,-0.029696153476834297,0,0.041678812354803085,0.011982657946646214,0,-0.01250364352017641,-0.031780093908309937,0,0.041678812354803085,0.018234480172395706,0,-0.07502186298370361,-0.021881375461816788,0,0.020839406177401543,0.009898717515170574,0,-0.11461672931909561,-0.14327090978622437,0,0.01250364352017641,0.01771349459886551,0,-0.01458758395165205,-0.009898717515170574,0,0.016671525314450264,0.01354561373591423,0,-0.016671525314450264,-0.034385018050670624,0,0.464718759059906,0.014066598378121853,0,-0.018755465745925903,-0.03125910833477974,0,0.02709122747182846,0.016150539740920067,0,-0.041678812354803085,-0.11149082332849503,0,0.018755465745925903,0.022402361035346985,0,-0.0291751679033041,-0.08231565356254578,0,0.004167881328612566,0.01562955416738987,0,-0.016671525314450264,-0.018755465745925903,0,0.12712037563323975,0.007814777083694935,0,-0.11044885218143463,-0.034385018050670624,0,0.041678812354803085,0.014066598378121853,0,-0.01458758395165205,-0.015108568593859673,0,0.06668610125780106,0.02344433218240738,0,-0.022923346608877182,-0.020839406177401543,0,0.018755465745925903,0.018234480172395706,0,-0.03334305062890053,-0.018234480172395706,0,0.08752550184726715,0.04897260293364525,0,-0.020839406177401543,-0.026570241898298264,0,0.01250364352017641,0.01250364352017641,0,-0.01250364352017641,-0.04636767879128456,0,0.016671525314450264,0.03542698919773102,0,-0.018755465745925903,-0.020839406177401543,0,0.045846693217754364,0.023965315893292427,0,-0.008335762657225132,-0.0385528989136219,0,0.2854998707771301,0.026049256324768066,0,-0.08335762470960617,-0.0385528989136219,0,0.0291751679033041,0.017192509025335312,0,-0.05209851264953613,-0.06877003610134125,0,0.0395948700606823,0.006772806867957115,0,-0.12712037563323975,-0.018234480172395706,0,0.03125910833477974,0.015108568593859673,0,-0.01250364352017641,-0.016150539740920067,0,0.03334305062890053,0.2349642962217331,0,-0.016671525314450264,-0.0781477689743042,0,0.21672981977462769,0.02136038988828659,0,-0.02500728704035282,-0.022923346608877182,0,0.010419703088700771,0.011461673304438591,0,-0.041678812354803085,-0.01771349459886551,0,0.004167881328612566,0.008856747299432755,0,-0.08544155955314636,-0.02136038988828659,0,0.03751093149185181,0.06981200724840164,0,-0.004167881328612566,-0.10732293874025345,0,0.03751093149185181,0.028654182329773903,0,-0.09586126357316971,-0.04480472207069397,0,0.03542698919773102,0.038031917065382004,0,-0.018755465745925903,-0.013024628162384033,0,0.03125910833477974,0.01250364352017641,0,-0.02709122747182846,-0.0291751679033041,0,0.043762750923633575,0.04636767879128456,0,-0.0395948700606823,-0.016150539740920067,0,0.018755465745925903,0.01771349459886551,0,-0.02500728704035282,-0.013024628162384033,0,0.018755465745925903,0.010419703088700771,0,-0.022923346608877182,-0.013024628162384033,0,0.008335762657225132,0.0390738844871521,0,-0.022923346608877182,-0.015108568593859673,0,0.03751093149185181,0.14379189908504486,0,-0.11253278702497482,-0.05261949822306633,0,0.002083940664306283,0.026570241898298264,0,-0.020839406177401543,-0.03334305062890053,0,0.01458758395165205,0.030217137187719345,0,-0.0291751679033041,-0.06668610125780106,0,0.02709122747182846,0.026049256324768066,0,-0.0291751679033041,-0.02500728704035282,0,0.02500728704035282,0.021881375461816788,0,-0.06251821666955948,-0.03698994591832161,0,0.006251821760088205,0.11149082332849503,0,-0.03751093149185181,-0.016150539740920067,0,0.03542698919773102,0.009377732872962952,0,-0.01458758395165205,-0.02500728704035282,0,0.002083940664306283,0.1182636246085167,0,-0.0291751679033041,-0.04740964621305466,0,0.05626639351248741,0.02552827261388302,0,-0.043762750923633575,-0.01250364352017641,0,0.06668610125780106,0.02344433218240738,0,-0.018755465745925903,-0.055224426090717316,0,0.041678812354803085,0.018755465745925903,0,-0.0979452058672905,-0.01354561373591423,0,0.045846693217754364,0.04740964621305466,0,-0.02500728704035282,-0.04115782678127289,0,0.01250364352017641,0.032301079481840134,0,-0.12920431792736053,-0.02344433218240738,0,0.020839406177401543,0.026049256324768066,0,-0.004167881328612566,-0.018234480172395706,0,0.02709122747182846,0.014066598378121853,0,-0.045846693217754364,-0.01979743503034115,0,0.002083940664306283,0.026049256324768066,0,-0.043762750923633575,-0.016671525314450264,0,0.02709122747182846,0.021881375461816788,0,-0.03125910833477974,-0.059392306953668594,0,0.010419703088700771,0.005209851544350386,0,-0.275080144405365,-0.015108568593859673,0,0.03125910833477974,0.018755465745925903,0,-0.008335762657225132,-0.016671525314450264,0],"text":"## This is a description file for a 6502-like CPU.\n## See https://github.com/mist64/c64ref for details.\n\n[info]\nmanufacturer CSG\nname         65CE02\nyear         1988\nid           65ce02\nbasedon      r65c02\ndescription  This is the CMOS-based reimplementation of the 6502 designed by Bill Gardei at Commodore/CSG/MOS. It supports all instructions of the Rockwell 65C02, and adds index register Z as well as support for a relocatable zero page, a 16 bit stack pointer and stack-relative addressing, filling all 256 opcodes.\n\n[registers]\n#   A,X,Y,Z,S,P,B,PC\nZ   8   Z Index Register\nS   16  Stack Pointer\nB   8   Base Page Register\n\n[flags]\n5  E  Extended Stack Disable\n\n[mnemos]\nASR   Arithmetic Shift Right\nASW   Arithmetic Shift Left Word\nAUG   Augment\nBSR   Branch to Subroutine\nCLE   Clear Extend Disable Flag\nCPZ   Compare Z Register\nDEW   Decrement Word\nDEZ   Decrement Z Register\nINW   Increment Word\nINZ   Increment Z Register\nLDZ   Load Z Register\nNEG   Negate\nPHW   Push Word\nPHZ   Push Z Register\nPLZ   Pull Z Register\nROW   Rotate Word\nRTN   Return from Kernal\nSEE   Set Stack Extend Disable Flag\nSTZ   Store Z Register\nTAB   Transfer Accumulator to Base Page Register\nTAZ   Transfer Accumulator to Z\nTBA   Transfer Base Page Register to Accumulator\nTSY   Transfer Stack Pointer to Y\nTYS   Transfer Y to Stack Pointer\nTZA   Transfer Z to Accumulator\n\n[operations]\nASR  shift N-----ZC  M7 → /M7...M0/ → C\nASW  shift N-----ZC  C ← /M15...M0/ ← 0\nAUG  nop   --------  No Operation\nBSR  ctrl  --------  Branch to Subroutine\nCLE  flags --0-----  0 → E\nCPZ  arith N-----ZC  Z - M\nDEW  inc   N-----Z-  Mw - 1 → Mw\nDEZ  inc   N-----Z-  Z - 1 → Z\nINW  inc   N-----Z-  Mw + 1 → Mw\nINZ  inc   N-----Z-  Z + 1 → Z\nLDZ  load  N-----Z-  M → Z\nNEG  arith N-----Z-  0 - A → A\nPHW  stack --------  Mw↓\nPHZ  stack --------  Z↓\nPLZ  stack N-----Z-  Z↑\nROW  shift N-----ZC  C ← /15...0/ ← C\nRTN  ctrl  --------  Return from Kernal\nSEE  flags --1-----  1 → E\nSTZ  load  --------  Z → M\nTAB  trans --------  A → B\nTAZ  trans N-----Z-  A → Z\nTBA  trans N-----Z-  B → A\nTSY  trans N-----Z-  S → Y\nTYS  trans --------  Y → S\nTZA  stack N-----Z-  Z → A\n\n[addmodes]\n## new modes\n#d16      3  #$nnnn        Immediate (word)\n(a8),Z    2  ($nn),Z       Indirect Z-Indexed\nr16       3  $nnnn         Relative (word)\n(a8,S),Y  2  ($nnnn,SP),Y  Stack Relative Indirect Y-Indexed\n\n## renamed modes (zero page -> base page)\na8     2  $nn      Base Page\na8,X   2  $nn,X    X-Indexed Base Page\na8,Y   2  $nn,Y    Y-Indexed Base Page\n(a8,X) 2  ($nn,X)  X-Indexed Base Page Indirect\n(a8),Y 2  ($nn),Y  Base Page Indirect Y-Indexed\n\n[opcodes]\n02  CLE\n03  SEE\n0B  TSY\n12  ORA   (a8),Z\n13  BPL   r16\n1B  INZ\n22  JSR   (a16)\n23  JSR   (a16,X)\n2B  TYS\n32  AND   (a8),Z\n33  BMI   r16\n3B  DEZ\n42  NEG   A\n43  ASR   A\n44  ASR   a8\n4B  TAZ\n52  EOR   (a8),Z\n53  BVC   r16\n54  ASR   a8,X\n5B  TAB\n5C  AUG\n62  RTN   #d8\n63  BSR   r16\n64  STZ   a8\n6B  TZA\n72  ADC   (a8),Z\n73  BVS   r16\n7B  TBA\n82  STA   (a8,S),Y\n83  BRA   r16\n8B  STY   a16,X\n92  STA   (a8),Z\n93  BCC   r16\n9B  STX   a16,Y\nA3  LDZ   #d8\nAB  LDZ   a16\nB2  LDA   (a8),Z\nB3  BCS   r16\nBB  LDZ   a16,X\nC2  CPZ   #d8\nC3  DEW   a8\nCB  ASW   a16\nD2  CMP   (a8),Z\nD3  BNE   r16\nD4  CPZ   a8\nDB  PHZ\nDC  CPZ   a16\nE2  LDA   (a8,S),Y\nE3  INW   a8\nEB  ROW   a16\nF2  SBC   (a8),Z\nF3  BEQ   r16\nF4  PHW   #d16\nFB  PLZ\nFC  PHW   a16\n\n[timing] ## not derived, overrides all opcodes\n00  2\n01  2\n02  1\n03  1\n04  2\n05  2\n06  2\n07  2\n08  1\n09  2\n0A  1\n0B  1\n0C  3\n0D  3\n0E  3\n0F  3\n10  2\n11  2\n12  2\n13  3\n14  2\n15  2\n16  2\n17  2\n18  1\n19  3\n1A  1\n1B  1\n1C  3\n1D  3\n1E  3\n1F  3\n20  3\n21  2\n22  3\n23  3\n24  2\n25  2\n26  2\n27  2\n28  1\n29  2\n2A  1\n2B  1\n2C  3\n2D  3\n2E  3\n2F  3\n30  2\n31  2\n32  2\n33  3\n34  2\n35  2\n36  2\n37  2\n38  1\n39  3\n3A  1\n3B  1\n3C  3\n3D  3\n3E  3\n3F  3\n40  1\n41  2\n42  1\n43  1\n44  2\n45  2\n46  2\n47  2\n48  1\n49  2\n4A  1\n4B  1\n4C  3\n4D  3\n4E  3\n4F  3\n50  2\n51  2\n52  2\n53  3\n54  2\n55  2\n56  2\n57  2\n58  1\n59  3\n5A  1\n5B  1\n5C  4\n5D  3\n5E  3\n5F  3\n60  1\n61  2\n62  2\n63  3\n64  2\n65  2\n66  2\n67  2\n68  1\n69  2\n6A  1\n6B  1\n6C  3\n6D  3\n6E  3\n6F  3\n70  2\n71  2\n72  2\n73  3\n74  2\n75  2\n76  2\n77  2\n78  1\n79  3\n7A  1\n7B  1\n7C  3\n7D  3\n7E  3\n7F  3\n80  2\n81  2\n82  2\n83  3\n84  2\n85  2\n86  2\n87  2\n88  1\n89  2\n8A  1\n8B  3\n8C  3\n8D  3\n8E  3\n8F  3\n90  2\n91  2\n92  2\n93  3\n94  2\n95  2\n96  2\n97  2\n98  1\n99  3\n9A  1\n9B  3\n9C  3\n9D  3\n9E  3\n9F  3\nA0  2\nA1  2\nA2  2\nA3  2\nA4  2\nA5  2\nA6  2\nA7  2\nA8  1\nA9  2\nAA  1\nAB  3\nAC  3\nAD  3\nAE  3\nAF  3\nB0  2\nB1  2\nB2  2\nB3  3\nB4  2\nB5  2\nB6  2\nB7  2\nB8  1\nB9  3\nBA  1\nBB  3\nBC  3\nBD  3\nBE  3\nBF  3\nC0  2\nC1  2\nC2  2\nC3  2\nC4  2\nC5  2\nC6  2\nC7  2\nC8  1\nC9  2\nCA  1\nCB  3\nCC  3\nCD  3\nCE  3\nCF  3\nD0  2\nD1  2\nD2  2\nD3  3\nD4  2\nD5  2\nD6  2\nD7  2\nD8  1\nD9  3\nDA  1\nDB  1\nDC  3\nDD  3\nDE  3\nDF  3\nE0  2\nE1  2\nE2  2\nE3  2\nE4  2\nE5  2\nE6  2\nE7  2\nE8  1\nE9  2\nEA  1\nEB  3\nEC  3\nED  3\nEE  3\nEF  3\nF0  2\nF1  2\nF2  2\nF3  3\nF4  3\nF5  2\nF6  2\nF7  2\nF8  1\nF9  3\nFA  1\nFB  1\nFC  3\nFD  3\nFE  3\nFF  3\n\n[documentation-mnemos]\n## some worded after the 6502 reference, some taken from:\n## https://github.com/MEGA65/c65-specifications/blob/master/c65manualupdated.txt\n\nASR  Arithmetic Shift Right\n     This instruction shifts either the accumulator or a specified memory location 1 bit to the right, with the higher bit retaining its value, and the low bit which is shifted out of the field being stored in the carry flag.\n     ASR does not affect the overflow bit, sets N equal to the result bit 7 (bit 7 in the input), sets Z flag if the result is equal to 0, otherwise resets Z and stores the input bit 0 in the carry flag.\n\nASW  Arithmetic Shift Left Word\n     The ASW instruction shifts either the 16 bit value at the memory location 1 bit to the left, with the bit 0 always being set to 0 and the bit 15 output always being contained in the carry flag. It is a read/modify/write instruction that affects only memory.\n     The instruction does not affect the overflow bit, sets N equal to the result bit 15 (bit 14 in the input), sets Z flag if the result is equal to 0, otherwise resets Z and stores the input bit 7 in the carry flag.\n\nAUG  Augment\n     The AUG instruction is a 4-byte NOP, and reserved for future expansion.\n\nBSR  Branch to Subroutine\n     The BSR Branch to SubRoutine instruction pushes the two program counter  bytes PCH and PCL onto the stack. It then adds the word-relative signed offset to the program counter. The relative offset is referenced to the address of the BSR opcode + 2, hence, it is relative to the third byte of the three-byte BSR instruction. The return address, on the stack, also points to this address. This was done to make it compatible with the RTS functionality, and to be consistent will other word-relative operations.\n\nCLE  Clear Extend Disable Flag\n     This instruction initializes the extend disable to a 0. This sets the stack pointer to 16 bit mode.\n     It affects no registers in the microprocessor and no flags other than the extend disable which is cleared.\n\nCPZ  Compare Index Register Z To Memory\n     This instruction performs a two's complement subtraction between the index register Z and the specified memory location. The results of the subtraction are not stored anywhere. The instruction is strictly used to set the flags.\n     CPZ affects no registers in the microprocessor and also does not affect the overflow flag. If the value in the index register Z is equal to or greater than the value in the memory, the carry flag will be set, otherwise it will be cleared. If the results of the subtraction contain bit 7 on the N bit will be set, otherwise it will be cleared. If the value in the index register Z and the value in the memory are equal, the zero flag will be set, otherwise it will be cleared.\n\n## TODO\nDEW  Decrement Word\nDEZ  Decrement Z Register\nINW  Increment Word\nINZ  Increment Z Register\nLDZ  Load Z Register\nNEG  Negate\nPHW  Push Word\nPHZ  Push Z Register\nPLZ  Pull Z Register\nROW  Rotate Word\nRTN  Return from Kernal\nSEE  Set Stack Extend Disable Flag\nSTZ  Store Z Register\nTAB  Transfer Accumulator to Base Page Register\nTAZ  Transfer Accumulator to Z\nTBA  Transfer Base Page Register to Accumulator\nTSY  Transfer Stack Pointer to Y\nTYS  Transfer Y to Stack Pointer\nTZA  Transfer Z to Accumulator\n\n[documentation-addmodes]\n## https://github.com/MEGA65/c65-specifications/blob/master/c65manualupdated.txt\n\n## new modes\n#d16      Immediate (word)\n          The data used in the operation is taken from the bytes immediately following the opcode in the 3-byte instruction.\n\n(a8),Z    Indirect Z-Indexed\n          The second byte of the two-byte instruction contains the low-order byte, and the B register contains the high-order address byte of two memory locations whose contents are added to the unsigned Z index register to form the address of the memory location to be used by the operation.\n\nr16       Relative (word)\n          The second and third bytes of the three-byte branch instruction are added to the low-order and high-order program counter bytes, respectively. (The program counter now contains the opcode address plus two). If the condition of the branch is true, the sum is stored back into the program counter.\n\n(a8,S),Y  Stack Relative Indirect Y-Indexed\n          The second byte of the two-byte instruction contains an unsigned offset value, d, which is added to the stack pointer (word) to form the address of two memory locations whose contents are added to the unsigned Y register to form the address of the memory location to be used by the operation.\n\n## renamed modes\na8     Base Page\n       The second byte of the two-byte instruction contains the low-order address byte, and the B register contains the high-order address byte of the memory location to be used by the operation.\n\na8,X  X-Indexed Base Page\n      The second byte of the two-byte instruction is added to the X index register to form the low-order address byte, and the B register contains the high-order address byte of the memory location to be used by the operation.\n\n\na8,Y   Y-Indexed Base Page\n   The second byte of the two-byte instruction is added to the Y index register to form the low-order address byte, and the B register contains the high-order address byte of the memory location to be used by the operation.\n\n(a8,X) X-Indexed Base Page Indirect\n   The second byte of the two-byte instruction is added to the contents of the X register to form the low-order address byte, and the contents of the B register contains the high-order address byte, of two memory locations that contain the low-order and high-order address of the memory location to be used by the operation.\n\n(a8),Y Base Page Indirect Y-Indexed\n   The second and third bytes of the three-byte instruction are added to the unsigned contents of the X index register to form the low-order and high-order address bytes, respectively, of two memory locations containing the low-order and high-order JMP or JSR address bytes.\n\n## this is the 65C02 documentation with \"zero page\" replaced with \"base page\"\na8,r8  Base Page, Relative\n       This mode bit tests the base page location specified for bit set/reset per the mask and performs a conditional relative branch based on the results of the bit test.\n\n[documentation-mnemos~private]\n### TODO: PLP does not touch E flag\n","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_65ce02.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/cpu_65ce02.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)"},{"name":"github.com/mist64_c64ref/src/6502/cpu_65dtv02.txt","language":"basic","vector":[0.015439668670296669,0.0604720339179039,0,-0.015439668670296669,-0.01929958537220955,0,0.020586224272847176,0.015439668670296669,0,-0.020586224272847176,-0.015439668670296669,0,0.015439668670296669,0.016726307570934296,0,-0.22644847631454468,-0.015439668670296669,0,0.04631900414824486,0.03731253370642662,0,-0.04117244854569435,-0.015439668670296669,0,0.04631900414824486,0.014153029769659042,0,-0.005146556068211794,-0.016726307570934296,0,0.036025892943143845,0.0604720339179039,0,-0.015439668670296669,-0.010293112136423588,0,0.010293112136423588,0.0385991707444191,0,-0.020586224272847176,-0.011579751037061214,0,0.05146556347608566,0.014153029769659042,0,-0.036025892943143845,-0.04245908930897713,0,0.061758674681186676,0.016726307570934296,0,-0.14410357177257538,-0.027019420638680458,0,0.05661211907863617,0.018012946471571922,0,-0.036025892943143845,-0.09649793058633804,0,0.015439668670296669,0.012866390869021416,0,-0.04117244854569435,-0.024446140974760056,0,0.02573278173804283,0.02573278173804283,0,-0.036025892943143845,-0.20972216129302979,0,0.04631900414824486,0.03473925590515137,0,-0.005146556068211794,-0.006433195434510708,0,0.015439668670296669,0.024446140974760056,0,-0.10293112695217133,-0.009006473235785961,0,0.05661211907863617,0.009006473235785961,0,-0.061758674681186676,-0.1814161092042923,0,0.010293112136423588,0.005146556068211794,0,-0.005146556068211794,-0.02573278173804283,0,0.02573278173804283,0.01929958537220955,0,-0.020586224272847176,-0.014153029769659042,0,0.20586225390434265,0.014153029769659042,0,-0.05146556347608566,-0.018012946471571922,0,0.020586224272847176,0.009006473235785961,0,-0.0771983414888382,-0.1209440678358078,0,0.015439668670296669,0.02573278173804283,0,-0.015439668670296669,-0.02315950207412243,0,0.005146556068211794,0.02959269843995571,0,-0.015439668670296669,-0.0077198343351483345,0,0.1543966829776764,0.018012946471571922,0,-0.0823448970913887,-0.011579751037061214,0,0.010293112136423588,0.020586224272847176,0,-0.05146556347608566,-0.012866390869021416,0,0.036025892943143845,0.027019420638680458,0,-0.020586224272847176,-0.024446140974760056,0,0.020586224272847176,0.039885811507701874,0,-0.015439668670296669,-0.07205178588628769,0,0.21100880205631256,0.04631900414824486,0,-0.061758674681186676,-0.021872863173484802,0,0.015439668670296669,0.010293112136423588,0,-0.015439668670296669,-0.032165974378585815,0,0.04117244854569435,0.020586224272847176,0,-0.020586224272847176,-0.028306059539318085,0,0.0771983414888382,0.02959269843995571,0,-0.015439668670296669,-0.04245908930897713,0,0.22130191326141357,0.012866390869021416,0,-0.05661211907863617,-0.05789875611662865,0,0.010293112136423588,0.0385991707444191,0,-0.020586224272847176,-0.12995053827762604,0,0.06690523028373718,0.014153029769659042,0,-0.030879337340593338,-0.0038599171675741673,0,0.02573278173804283,0.021872863173484802,0,-0.04117244854569435,-0.012866390869021416,0,0.04631900414824486,0.10550440102815628,0,-0.015439668670296669,-0.11193759739398956,0,0.1698363572359085,0.012866390869021416,0,-0.04117244854569435,-0.047605644911527634,0,0.010293112136423588,0.011579751037061214,0,-0.015439668670296669,-0.011579751037061214,0,0.036025892943143845,0.0077198343351483345,0,-0.0771983414888382,-0.012866390869021416,0,0.005146556068211794,0.08105825632810593,0,-0.02573278173804283,-0.09778456389904022,0,0.020586224272847176,0.016726307570934296,0,-0.06690523028373718,-0.036025892943143845,0,0.010293112136423588,0.02959269843995571,0,-0.04631900414824486,-0.011579751037061214,0,0.020586224272847176,0.01929958537220955,0,-0.04631900414824486,-0.011579751037061214,0,0.06690523028373718,0.10807768255472183,0,-0.015439668670296669,-0.036025892943143845,0,0.02573278173804283,0.020586224272847176,0,-0.015439668670296669,-0.016726307570934296,0,0.015439668670296669,0.036025892943143845,0,-0.036025892943143845,-0.04631900414824486,0,0,0.05275220051407814,0,-0.030879337340593338,-0.016726307570934296,0,0.04631900414824486,0.11451087146997452,0,-0.02573278173804283,-0.0385991707444191,0,0.015439668670296669,0.011579751037061214,0,-0.030879337340593338,-0.01929958537220955,0,0.005146556068211794,0.04503236711025238,0,-0.030879337340593338,-0.016726307570934296,0,0.010293112136423588,0.016726307570934296,0,-0.010293112136423588,-0.04631900414824486,0,0.02573278173804283,0.03731253370642662,0,-0.020586224272847176,-0.02315950207412243,0,0,0.08749145269393921,0,-0.015439668670296669,-0.021872863173484802,0,0.061758674681186676,0.011579751037061214,0,-0.010293112136423588,-0.012866390869021416,0,0.005146556068211794,0.06947851181030273,0,-0.02573278173804283,-0.05146556347608566,0,0.036025892943143845,0.0077198343351483345,0,0,-0.032165974378585815,0,0.07205178588628769,0.014153029769659042,0,-0.015439668670296669,-0.03731253370642662,0,0.010293112136423588,0.006433195434510708,0,-0.04631900414824486,-0.027019420638680458,0,0.030879337340593338,0.04889228194952011,0,-0.04117244854569435,-0.043745726346969604,0,0.02573278173804283,0.036025892943143845,0,-0.1595432460308075,-0.020586224272847176,0,0.020586224272847176,0.021872863173484802,0,-0.02573278173804283,-0.012866390869021416,0,0.04117244854569435,0.012866390869021416,0,-0.396284818649292,-0.021872863173484802,0,0.036025892943143845,0.05275220051407814,0,-0.005146556068211794,-0.030879337340593338,0,0.036025892943143845,0.027019420638680458,0,-0.010293112136423588,-0.016726307570934296,0,0.010293112136423588,0.018012946471571922,0,-0.3448192775249481,-0.020586224272847176,0,0.010293112136423588,0.021872863173484802,0,-0.036025892943143845,-0.01929958537220955,0],"text":"## This is a description file for a 6502-like CPU.\n## See https://github.com/mist64/c64ref for details.\n\n[info]\nname         65DTV02\nyear         2005\nid           65dtv02\nbasedon      6502\ndescription  This is a modern reimplementation of the 6502 by Jeri Ellsworth as used in the C64DTV2. It reproduces all quirks of the original 6502 as well as most undocumented opcodes and adds three new instructions and an MMU. (The timing information corresponds to \"skip internal cycles\" mode.)\n\n[registers]\n#   A,X,Y,S,P,PC,R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13,R14,R15\nA    8   Accumulator (alias for R0-R15)\nX    8   X Index Register (alias for R0-R15)\nY    8   Y Index Register (alias for R0-R15)\nR0   8  Default Accumulator\nR1   8  Default Y Register\nR2   8  Default X Register\nR3   8  Reserved\nR4   8  Reserved\nR5   8  Reserved\nR6   8  Reserved\nR7   8  Reserved\nR8   8  Bank 0-3 Access Mode\nR9   8  CPU Control\nR10  8  Base Page Segment\nR11  8  Stack Segment\nR12  8  Bank 0 Segment\nR13  8  Bank 1 Segment\nR14  8  Bank 2 Segment\nR15  8  Bank 3 Segment\n\n[mnemos]\n# new instructions\nSAC  Set Accumulator Mapping\nSIR  Set Index Register Mapping\nBRA  Branch Always\n\n# bugs in undocumented instructions\n2B  *ANC  #d8    ## https://www.c64-wiki.com/wiki/C64DTV_Programming_Guide\n9B  *NOP  a16,Y  ## VICE source\n##C7  *DCP  a8   ## unclear -- https://www.c64-wiki.com/wiki/C64DTV_Programming_Guide\n\n[operations]\nSAC  flags  --------  Set Accumulator Mapping\nSIR  flags  --------  Set Index Register Mapping\nBRA  ctrl   --------  Branch Always\n\n[opcodes]\n12  BRA   r8\n32  SAC   #d8\n42  SIR   #d8\n\n[timing] ## \"skip internal cycles\" mode\n00  6\n01  6\n02  X\n03  7\n04  3\n05  3\n06  4\n07  4\n08  2\n09  2\n0A  1\n0B  2\n0C  4\n0D  4\n0E  5\n0F  5\n10  2\n11  5\n12  2\n13  6\n14  3\n15  3\n16  4\n17  4\n18  1\n19  4\n1A  1\n1B  5\n1C  4\n1D  4\n1E  5\n1F  5\n20  5\n21  6\n22  X\n23  7\n24  3\n25  3\n26  4\n27  4\n28  2\n29  2\n2A  1\n2B  2\n2C  4\n2D  4\n2E  5\n2F  5\n30  2\n31  5\n32  2\n33  6\n34  3\n35  3\n36  4\n37  4\n38  1\n39  4\n3A  1\n3B  5\n3C  4\n3D  4\n3E  5\n3F  5\n40  4\n41  6\n42  2\n43  7\n44  3\n45  3\n46  4\n47  4\n48  2\n49  2\n4A  1\n4B  2\n4C  3\n4D  4\n4E  5\n4F  5\n50  2\n51  5\n52  X\n53  6\n54  3\n55  3\n56  4\n57  4\n58  1\n59  4\n5A  1\n5B  5\n5C  4\n5D  4\n5E  5\n5F  5\n60  4\n61  6\n62  X\n63  7\n64  3\n65  3\n66  4\n67  4\n68  2\n69  2\n6A  1\n6B  2\n6C  5\n6D  4\n6E  5\n6F  5\n70  2\n71  5\n72  X\n73  6\n74  3\n75  3\n76  4\n77  4\n78  1\n79  4\n7A  1\n7B  5\n7C  4\n7D  4\n7E  5\n7F  5\n80  2\n81  6\n82  2\n83  6\n84  3\n85  3\n86  3\n87  3\n88  1\n89  2\n8A  1\n8B  2\n8C  4\n8D  4\n8E  4\n8F  4\n90  2\n91  5\n92  X\n93  5\n94  3\n95  3\n96  3\n97  3\n98  1\n99  4\n9A  1\n9B  4\n9C  4\n9D  4\n9E  4\n9F  4\nA0  2\nA1  6\nA2  2\nA3  6\nA4  3\nA5  3\nA6  3\nA7  3\nA8  1\nA9  2\nAA  1\nAB  2\nAC  4\nAD  4\nAE  4\nAF  4\nB0  2\nB1  5\nB2  X\nB3  5\nB4  3\nB5  3\nB6  3\nB7  3\nB8  1\nB9  4\nBA  1\nBB  4\nBC  4\nBD  4\nBE  4\nBF  4\nC0  2\nC1  6\nC2  2\nC3  7\nC4  3\nC5  3\nC6  4\nC7  4\nC8  1\nC9  2\nCA  1\nCB  2\nCC  4\nCD  4\nCE  5\nCF  5\nD0  2\nD1  5\nD2  X\nD3  6\nD4  3\nD5  3\nD6  4\nD7  4\nD8  1\nD9  4\nDA  1\nDB  5\nDC  4\nDD  4\nDE  5\nDF  5\nE0  2\nE1  6\nE2  2\nE3  7\nE4  3\nE5  3\nE6  4\nE7  4\nE8  1\nE9  2\nEA  1\nEB  2\nEC  4\nED  4\nEE  5\nEF  5\nF0  2\nF1  5\nF2  X\nF3  6\nF4  3\nF5  3\nF6  4\nF7  4\nF8  1\nF9  4\nFA  1\nFB  5\nFC  4\nFD  4\nFE  5\nFF  5\n\n[documentation-mnemos]\n## https://www.c64-wiki.com/wiki/C64DTV_Programming_Guide\n\nSAC  Set Accumulator Mapping\n     The 65DTV02 has a register file of 16 bytes, some of which double as control/MMU registers. The lower four bits of the SAC instruction's immediate operand assign the register that will be accessed through read operations to the accumulator, and the upper four bits assign the register that will be accessed through write operations to the accumulator. The default register for the accumulator is 0.\n\nSIR  Set Index Register Mapping\n     The 65DTV02 has a register file of 16 bytes, some of which double as control/MMU registers. The lower four bits of the SIR instruction's immediate operand assign the register that index register X is mapped to, and the upper four bits assign the register that index register Y is mapped to. The default register for the index register X is 2, and the default for the index register Y is 1.\n\nBRA  Branch Always\n     This instruction takes an unconditional branch.\n     BRA does not affect any of the flags or any other part of the machine other than the program counter.\n","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_65dtv02.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/cpu_65dtv02.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)"},{"name":"github.com/mist64_c64ref/src/6502/cpu_r65c02.txt","language":"basic","vector":[0.004794584587216377,0.007791200187057257,0,-0.11746732890605927,-0.0035959386732429266,0,0.014383754692971706,0.010787815786898136,0,-0.043151263147592545,-0.007191877346485853,0,0.03835667669773102,0.007191877346485853,0,-0.14623484015464783,-0.004195261746644974,0,0.09349440038204193,0.0347607396543026,0,-0.009589169174432755,-0.0005993230734020472,0,0.011986462399363518,0.025770893320441246,0,-0.007191877346485853,-0.022174954414367676,0,0.02637021616101265,0.022174954414367676,0,-0.03835667669773102,-0.01498307753354311,0,0,0.0023972922936081886,0,-0.009589169174432755,-0.050343140959739685,0,0.0695214793086052,0.007791200187057257,0,-0.007191877346485853,-0.03715803101658821,0,0,0.044949233531951904,0,-0.028767509385943413,-0.0035959386732429266,0,0.004794584587216377,0.0029966155998408794,0,-0.009589169174432755,-0.08929914236068726,0,0.009589169174432755,0.04195261746644974,0,-0.009589169174432755,-0.005993231199681759,0,0,0.0005993230734020472,0,-0.004794584587216377,-0.016781046986579895,0,0.12465920299291611,0.0035959386732429266,0,-0.009589169174432755,-0.023972924798727036,0,0.0023972922936081886,0.023373600095510483,0,-0.07671335339546204,-0.026969539001584053,0,0.09109710901975632,0.008989846333861351,0,-0.004794584587216377,-0.11507003754377365,0,0.009589169174432755,0.0017979693366214633,0,0,-0.009589169174432755,0,0.004794584587216377,0.023373600095510483,0,-0.009589169174432755,-0.08090861886739731,0,0.6352824568748474,0.008390523493289948,0,-0.004794584587216377,-0.023972924798727036,0,0.0023972922936081886,0.01917833834886551,0,-0.007191877346485853,-0.07911065220832825,0,0.16541317105293274,0.046747200191020966,0,-0.0023972922936081886,-0.004794584587216377,0,0,0.006592554040253162,0,-0.007191877346485853,-0.004794584587216377,0,0.17979693412780762,0.014383754692971706,0,-0.031164800748229027,-0.020376985892653465,0,0.011986462399363518,0.0173803698271513,0,-0.07911065220832825,-0.004794584587216377,0,0.09109710901975632,0.0347607396543026,0,-0.028767509385943413,-0.009589169174432755,0,0,0.0011986461468040943,0,-0.04794584959745407,-0.015582400374114513,0,0.03835667669773102,0.0035959386732429266,0,-0.004794584587216377,-0.028767509385943413,0,0.014383754692971706,0.008390523493289948,0,-0.009589169174432755,-0.009589169174432755,0,0.03835667669773102,0.022174954414367676,0,-0.01917833834886551,-0.004195261746644974,0,0,0.062329601496458054,0,-0.05993231013417244,-0.0437505878508091,0,0.031164800748229027,0.022174954414367676,0,-0.014383754692971706,-0.04075397178530693,0,0.03835667669773102,0.04554855450987816,0,-0.01917833834886551,-0.010188492946326733,0,0.01917833834886551,0.005993231199681759,0,-0.007191877346485853,-0.0023972922936081886,0,0,0.013784430921077728,0,-0.0023972922936081886,-0.016781046986579895,0,0.10308357328176498,0.321237176656723,0,-0.04075397178530693,-0.053939078003168106,0,0.07911065220832825,0.0017979693366214633,0,-0.050343140959739685,-0.007791200187057257,0,0,0.08390523493289948,0,-0.009589169174432755,-0.030565477907657623,0,0.0023972922936081886,0.0035959386732429266,0,-0.11027544736862183,-0.014383754692971706,0,0.0023972922936081886,0.09948763251304626,0,0,-0.052141111344099045,0,0.011986462399363518,0.029366832226514816,0,-0.04554855450987816,-0.04195261746644974,0,0,0.048545170575380325,0,-0.004794584587216377,-0.01618172414600849,0,0.0023972922936081886,0.006592554040253162,0,-0.004794584587216377,-0.03356209397315979,0,0.004794584587216377,0.01917833834886551,0,-0.07671335339546204,-0.004794584587216377,0,0.0023972922936081886,0.02457224763929844,0,-0.011986462399363518,-0.006592554040253162,0,0.007191877346485853,0.01917833834886551,0,-0.04794584959745407,-0.016781046986579895,0,0.0023972922936081886,0.0011986461468040943,0,-0.004794584587216377,-0.03236344829201698,0,0.08390523493289948,0.017979692667722702,0,-0.0886998176574707,-0.009589169174432755,0,0.004794584587216377,0.01917833834886551,0,-0.009589169174432755,-0.010787815786898136,0,0,0.04075397178530693,0,-0.023972924798727036,-0.005993231199681759,0,0,0.0005993230734020472,0,0,-0.020376985892653465,0,0.0023972922936081886,0.07431606203317642,0,-0.004794584587216377,-0.021575631573796272,0,0.004794584587216377,0.04195261746644974,0,-0.004794584587216377,-0.025171570479869843,0,0.0695214793086052,0.0011986461468040943,0,0,-0.007191877346485853,0,0,0.16001926362514496,0,-0.023972924798727036,-0.05633637309074402,0,0.004794584587216377,0.0017979693366214633,0,-0.004794584587216377,-0.0017979693366214633,0,0.004794584587216377,0.04734652489423752,0,-0.09589169919490814,-0.023373600095510483,0,0.014383754692971706,0,0,-0.01917833834886551,-0.004195261746644974,0,0.0886998176574707,0.04614787921309471,0,-0.007191877346485853,-0.010188492946326733,0,0,0.005393907893449068,0,-0.15582400560379028,-0.05813433974981308,0,0.08390523493289948,0.023972924798727036,0,-0.009589169174432755,-0.013185108080506325,0,0,0.0035959386732429266,0,-0.031164800748229027,-0.035959385335445404,0,0.004794584587216377,0.010787815786898136,0,-0.009589169174432755,-0.0035959386732429266,0,0.04554855450987816,0.04554855450987816,0,-0.04794584959745407,-0.046747200191020966,0,0.014383754692971706,0.011986462399363518,0,-0.20616714656352997,-0.009589169174432755,0,0.0023972922936081886,0,0,-0.016781046986579895,-0.026969539001584053,0],"text":"## This is a description file for a 6502-like CPU.\n## See https://github.com/mist64/c64ref for details.\n\n[info]\nmanufacturer Rockwell\nname         R65C02\nyear         1983 ## https://archive.org/details/micro-6502-journal-60/page/n71/mode/2up?q=65c02\nid           r65c02\nbasedon      65c02\ndescription  This is the Rockwell-variant of the WDC 65c02, which adds 32 new bit testing and manipulation opcodes.\n\n[mnemos]\nBBR0  Branch on Bit 0 Reset\nBBR1  Branch on Bit 1 Reset\nBBR2  Branch on Bit 2 Reset\nBBR3  Branch on Bit 3 Reset\nBBR4  Branch on Bit 4 Reset\nBBR5  Branch on Bit 5 Reset\nBBR6  Branch on Bit 6 Reset\nBBR7  Branch on Bit 7 Reset\nBBS0  Branch on Bit 0 Set\nBBS1  Branch on Bit 1 Set\nBBS2  Branch on Bit 2 Set\nBBS3  Branch on Bit 3 Set\nBBS4  Branch on Bit 4 Set\nBBS5  Branch on Bit 5 Set\nBBS6  Branch on Bit 6 Set\nBBS7  Branch on Bit 7 Set\nRMB0  Reset Memory Bit 0\nRMB1  Reset Memory Bit 1\nRMB2  Reset Memory Bit 2\nRMB3  Reset Memory Bit 3\nRMB4  Reset Memory Bit 4\nRMB5  Reset Memory Bit 5\nRMB6  Reset Memory Bit 6\nRMB7  Reset Memory Bit 7\nSMB0  Set Memory Bit 0\nSMB1  Set Memory Bit 1\nSMB2  Set Memory Bit 2\nSMB3  Set Memory Bit 3\nSMB4  Set Memory Bit 4\nSMB5  Set Memory Bit 5\nSMB6  Set Memory Bit 6\nSMB7  Set Memory Bit 7\n\n\n[operations]\nBBR0 ctrl  --------  Branch on M0 = 0\nBBR1 ctrl  --------  Branch on M1 = 0\nBBR2 ctrl  --------  Branch on M2 = 0\nBBR3 ctrl  --------  Branch on M3 = 0\nBBR4 ctrl  --------  Branch on M4 = 0\nBBR5 ctrl  --------  Branch on M5 = 0\nBBR6 ctrl  --------  Branch on M6 = 0\nBBR7 ctrl  --------  Branch on M7 = 0\nBBS0 ctrl  --------  Branch on M0 = 1\nBBS1 ctrl  --------  Branch on M1 = 1\nBBS2 ctrl  --------  Branch on M2 = 1\nBBS3 ctrl  --------  Branch on M3 = 1\nBBS4 ctrl  --------  Branch on M4 = 1\nBBS5 ctrl  --------  Branch on M5 = 1\nBBS6 ctrl  --------  Branch on M6 = 1\nBBS7 ctrl  --------  Branch on M7 = 1\nRMB0 logic --------  0 → M0\nRMB1 logic --------  0 → M1\nRMB2 logic --------  0 → M2\nRMB3 logic --------  0 → M3\nRMB4 logic --------  0 → M4\nRMB5 logic --------  0 → M5\nRMB6 logic --------  0 → M6\nRMB7 logic --------  0 → M7\nSMB0 logic --------  1 → M0\nSMB1 logic --------  1 → M1\nSMB2 logic --------  1 → M2\nSMB3 logic --------  1 → M3\nSMB4 logic --------  1 → M4\nSMB5 logic --------  1 → M5\nSMB6 logic --------  1 → M6\nSMB7 logic --------  1 → M7\n\n[addmodes]\na8,r8  3  $nn,$nnnn  Zero Page, Relative\n\n[opcodes]\n07  RMB0  a8\n0F  BBR0  a8,r8\n17  RMB1  a8\n1F  BBR1  a8,r8\n27  RMB2  a8\n2F  BBR2  a8,r8\n37  RMB3  a8\n3F  BBR3  a8,r8\n47  RMB4  a8\n4F  BBR4  a8,r8\n57  RMB5  a8\n5F  BBR5  a8,r8\n67  RMB6  a8\n6F  BBR6  a8,r8\n77  RMB7  a8\n7F  BBR7  a8,r8\n87  SMB0  a8\n8F  BBS0  a8,r8\n97  SMB1  a8\n9F  BBS1  a8,r8\nA7  SMB2  a8\nAF  BBS2  a8,r8\nB7  SMB3  a8\nBF  BBS3  a8,r8\nC7  SMB4  a8\nCF  BBS4  a8,r8\nD7  SMB5  a8\nDF  BBS5  a8,r8\nE7  SMB6  a8\nEF  BBS6  a8,r8\nF7  SMB7  a8\nFF  BBS7  a8,r8\n\n[timing]\n07  5\n0F  5+t+p\n17  5\n1F  5+t+p\n27  5\n2F  5+t+p\n37  5\n3F  5+t+p\n47  5\n4F  5+t+p\n57  5\n5F  5+t+p\n67  5\n6F  5+t+p\n77  5\n7F  5+t+p\n87  5\n8F  5+t+p\n97  5\n9F  5+t+p\nA7  5\nAF  5+t+p\nB7  5\nBF  5+t+p\nC7  5\nCF  5+t+p\nD7  5\nDF  5+t+p\nE7  5\nEF  5+t+p\nF7  5\nFF  5+t+p\n\n[documentation-mnemos]\n\nBBR0  Branch on Bit 0 Reset\n      This instruction tests the specified zero page location and branches if bit 0 is clear.\n\nBBR1  Branch on Bit 1 Reset\n      This instruction tests the specified zero page location and branches if bit 1 is clear.\n\nBBR2  Branch on Bit 2 Reset\n      This instruction tests the specified zero page location and branches if bit 2 is clear.\n\nBBR3  Branch on Bit 3 Reset\n      This instruction tests the specified zero page location and branches if bit 3 is clear.\n\nBBR4  Branch on Bit 4 Reset\n      This instruction tests the specified zero page location and branches if bit 4 is clear.\n\nBBR5  Branch on Bit 5 Reset\n      This instruction tests the specified zero page location and branches if bit 5 is clear.\n\nBBR6  Branch on Bit 6 Reset\n      This instruction tests the specified zero page location and branches if bit 6 is clear.\n\nBBR7  Branch on Bit 7 Reset\n      This instruction tests the specified zero page location and branches if bit 7 is clear.\n\nBBS0  Branch on Bit 0 Set\n      This instruction tests the specified zero page location and branches if bit 0 is set.\n\nBBS1  Branch on Bit 1 Set\n      This instruction tests the specified zero page location and branches if bit 1 is set.\n\nBBS2  Branch on Bit 2 Set\n      This instruction tests the specified zero page location and branches if bit 2 is set.\n\nBBS3  Branch on Bit 3 Set\n      This instruction tests the specified zero page location and branches if bit 3 is set.\n\nBBS4  Branch on Bit 4 Set\n      This instruction tests the specified zero page location and branches if bit 4 is set.\n\nBBS5  Branch on Bit 5 Set\n      This instruction tests the specified zero page location and branches if bit 5 is set.\n\nBBS6  Branch on Bit 6 Set\n      This instruction tests the specified zero page location and branches if bit 6 is set.\n\nBBS7  Branch on Bit 7 Set\n      This instruction tests the specified zero page location and branches if bit 7 is set.\n\nRMB0  Reset Memory Bit 0\n      This instruction clears bit 0 in the specified zero page location. It does not affect any flags or registers.\n\nRMB1  Reset Memory Bit 1\n      This instruction clears bit 1 in the specified zero page location. It does not affect any flags or registers.\n\nRMB2  Reset Memory Bit 2\n      This instruction clears bit 2 in the specified zero page location. It does not affect any flags or registers.\n\nRMB3  Reset Memory Bit 3\n      This instruction clears bit 3 in the specified zero page location. It does not affect any flags or registers.\n\nRMB4  Reset Memory Bit 4\n      This instruction clears bit 4 in the specified zero page location. It does not affect any flags or registers.\n\nRMB5  Reset Memory Bit 5\n      This instruction clears bit 5 in the specified zero page location. It does not affect any flags or registers.\n\nRMB6  Reset Memory Bit 6\n      This instruction clears bit 6 in the specified zero page location. It does not affect any flags or registers.\n\nRMB7  Reset Memory Bit 7\n      This instruction clears bit 7 in the specified zero page location. It does not affect any flags or registers.\n\nSMB0  Set Memory Bit 0\n      This instruction sets bit 0 in the specified zero page location. It does not affect any flags or registers.\n\nSMB1  Set Memory Bit 1\n      This instruction sets bit 1 in the specified zero page location. It does not affect any flags or registers.\n\nSMB2  Set Memory Bit 2\n      This instruction sets bit 2 in the specified zero page location. It does not affect any flags or registers.\n\nSMB3  Set Memory Bit 3\n      This instruction sets bit 3 in the specified zero page location. It does not affect any flags or registers.\n\nSMB4  Set Memory Bit 4\n      This instruction sets bit 4 in the specified zero page location. It does not affect any flags or registers.\n\nSMB5  Set Memory Bit 5\n      This instruction sets bit 5 in the specified zero page location. It does not affect any flags or registers.\n\nSMB6  Set Memory Bit 6\n      This instruction sets bit 6 in the specified zero page location. It does not affect any flags or registers.\n\nSMB7  Set Memory Bit 7\n      This instruction sets bit 7 in the specified zero page location. It does not affect any flags or registers.\n\n\n[documentation-addmodes]\n## http://archive.6502.org/datasheets/mos_65ce02_mpu.pdf\n\na8,r8  Zero Page, Relative\n       This mode is used only with the bit-test branch instructions (BBS and BCC). The second byte of the instruction specifies the zero page memory to be tested. The third byte of the instruction is the offset, whose range is -128 to 127 bytes, referenced to the location of the next instruction.\n","sourcePath":"external/github.com/mist64_c64ref/src/6502/cpu_r65c02.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/cpu_r65c02.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)"},{"name":"github.com/mist64_c64ref/src/charset/control_codes_c64.txt","language":"basic","vector":[0,0.04621404409408569,0,0,-0.06161872670054436,0,0,0.03080936335027218,0,-0.06161872670054436,-0.06161872670054436,0,0,0.03080936335027218,0,0,-0.10783277451992035,0,0,0.03080936335027218,0,-0.12323745340108871,-0.06161872670054436,0,0,0,0,-0.06161872670054436,-0.04621404409408569,0,0.06161872670054436,0.03080936335027218,0,-0.06161872670054436,-0.03080936335027218,0,0.06161872670054436,0.01540468167513609,0,-0.06161872670054436,-0.03080936335027218,0,0,0,0,-0.12323745340108871,-0.09242808818817139,0,0.18485617637634277,0.03080936335027218,0,-0.06161872670054436,-0.01540468167513609,0,0.12323745340108871,0,0,0,-0.01540468167513609,0,0.06161872670054436,0.06161872670054436,0,-0.12323745340108871,-0.01540468167513609,0,0.06161872670054436,0.06161872670054436,0,-0.12323745340108871,-0.04621404409408569,0,0.06161872670054436,0,0,-0.12323745340108871,-0.03080936335027218,0,0.18485617637634277,0.04621404409408569,0,-0.06161872670054436,-0.01540468167513609,0,0.12323745340108871,0.09242808818817139,0,0,0,0,0.12323745340108871,0.01540468167513609,0,-0.06161872670054436,-0.06161872670054436,0,0.12323745340108871,0.04621404409408569,0,0,0,0,0,0.01540468167513609,0,0,-0.03080936335027218,0,0.06161872670054436,0,0,0,-0.03080936335027218,0,0.06161872670054436,0.01540468167513609,0,-0.06161872670054436,-0.09242808818817139,0,0.06161872670054436,0.01540468167513609,0,0,-0.06161872670054436,0,0.06161872670054436,0.03080936335027218,0,-0.18485617637634277,-0.07702340930700302,0,0.06161872670054436,0.04621404409408569,0,0,-0.06161872670054436,0,0,0,0,-0.06161872670054436,-0.07702340930700302,0,0,0.10783277451992035,0,-0.06161872670054436,-0.04621404409408569,0,0.12323745340108871,0.06161872670054436,0,-0.06161872670054436,-0.01540468167513609,0,0,0.03080936335027218,0,0,-0.09242808818817139,0,0,0.04621404409408569,0,-0.06161872670054436,-0.06161872670054436,0,0,0.03080936335027218,0,0,-0.06161872670054436,0,0.06161872670054436,0.10783277451992035,0,0,-0.03080936335027218,0,0,0.09242808818817139,0,0,0,0,0.12323745340108871,0.06161872670054436,0,-0.06161872670054436,-0.04621404409408569,0,0,0.07702340930700302,0,0,0,0,0,0.03080936335027218,0,-0.06161872670054436,0,0,0,0.03080936335027218,0,0,-0.03080936335027218,0,0.06161872670054436,0.03080936335027218,0,0,-0.03080936335027218,0,0,0.03080936335027218,0,-0.12323745340108871,-0.01540468167513609,0,0,0.03080936335027218,0,-0.06161872670054436,-0.09242808818817139,0,0,0.03080936335027218,0,-0.06161872670054436,-0.03080936335027218,0,0.12323745340108871,0,0,-0.06161872670054436,-0.04621404409408569,0,0,0.01540468167513609,0,-0.18485617637634277,-0.04621404409408569,0,0,0.07702340930700302,0,0,-0.04621404409408569,0,0.06161872670054436,0,0,-0.06161872670054436,-0.03080936335027218,0,0.12323745340108871,0.04621404409408569,0,0,-0.04621404409408569,0,0.06161872670054436,0.03080936335027218,0,0,0,0,0.18485617637634277,0.04621404409408569,0,0,-0.03080936335027218,0,0.06161872670054436,0.01540468167513609,0,0,-0.03080936335027218,0,0,0.07702340930700302,0,-0.12323745340108871,-0.06161872670054436,0,0.06161872670054436,0.04621404409408569,0,-0.12323745340108871,-0.01540468167513609,0,0.06161872670054436,0.03080936335027218,0,-0.12323745340108871,-0.03080936335027218,0,0,0.03080936335027218,0,-0.18485617637634277,-0.01540468167513609,0,0.06161872670054436,0.06161872670054436,0,-0.12323745340108871,0,0,0,0,0,-0.06161872670054436,-0.06161872670054436,0,0.06161872670054436,0.01540468167513609,0,-0.06161872670054436,-0.03080936335027218,0,0,0.01540468167513609,0,-0.06161872670054436,-0.04621404409408569,0,0,0.07702340930700302,0,-0.12323745340108871,-0.03080936335027218,0,0.06161872670054436,0.01540468167513609,0,0,-0.13864213228225708,0,0,0.01540468167513609,0,0,0,0,0.06161872670054436,0.03080936335027218,0,0,-0.04621404409408569,0,0.12323745340108871,0.06161872670054436,0,0,-0.01540468167513609,0,0,0.06161872670054436,0,-0.06161872670054436,-0.01540468167513609,0,0.06161872670054436,0.09242808818817139,0,0,0,0,0.12323745340108871,0.03080936335027218,0,0,-0.01540468167513609,0,0,0,0,-0.12323745340108871,-0.06161872670054436,0],"text":"00\n01\n02\n03 STOP\n04\n05 COL_WHITE\n06\n07\n08 DIS_CASE_SWITCH\n09 ENA_CASE_SWITCH\n0A\n0B\n0C\n0D RETURN\n0E LOWER_CASE\n0F\n10\n11 CRSR_DOWN\n12 RVS_ON\n13 CRSR_HOME\n14 DEL\n15\n16\n17\n18\n19\n1A\n1B\n1C COL_RED\n1D CRSR_RIGHT\n1E COL_GREEN\n1F COL_BLUE\n\n80\n81 COL_ORANGE\n82\n83 RUN\n84\n85 KEY_F1\n86 KEY_F3\n87 KEY_F5\n88 KEY_F7\n89 KEY_F2\n8A KEY_F4\n8B KEY_F6\n8C KEY_F8\n8D SHIFT_RETURN\n8E UPPER_CASE\n8F\n90 COL_BLACK\n91 CRSR_UP\n92 RVS_OFF\n93 CLEAR\n94 INST\n95 COL_BROWN\n96 COL_LIGHT_RED\n97 COL_DARK_GRAY\n98 COL_MEDIUM_GRAY\n99 COL_LIGHT_GREEN\n9A COL_LIGHT_BLUE\n9B COL_LIGHT_GRAY\n9C COL_PURPLE\n9D CRSR_LEFT\n9E COL_YELLOW\n9F COL_CYAN\n","sourcePath":"external/github.com/mist64_c64ref/src/charset/control_codes_c64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/control_codes_c64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)"},{"name":"github.com/mist64_c64ref/src/charset/keyboard_c64.txt","language":"basic","vector":[0.00552342226728797,0.002761711133643985,0,0,-0.0020712832920253277,0,0,0.00552342226728797,0,-0.019331978633999825,-0.004142566584050655,0,0.002761711133643985,0.002761711133643985,0,-0.00828513316810131,-0.013808555901050568,0,0.013808555901050568,0.00552342226728797,0,-0.019331978633999825,-0.003452138975262642,0,0.00828513316810131,0.09942160546779633,0,-0.00828513316810131,-0.011737272143363953,0,0.00828513316810131,0.010356416925787926,0,-0.00552342226728797,-0.00552342226728797,0,0.002761711133643985,0.002761711133643985,0,-0.013808555901050568,-0.00621385034173727,0,0,0.002761711133643985,0,-0.01104684453457594,-0.023474544286727905,0,0.00552342226728797,0.004832994658499956,0,-0.013808555901050568,-0.0020712832920253277,0,0.02209368906915188,0.00621385034173727,0,-0.00552342226728797,-0.00828513316810131,0,0.00552342226728797,0.004142566584050655,0,-0.01104684453457594,-0.003452138975262642,0,0.019331978633999825,0.009665989316999912,0,-0.02209368906915188,-0.027617111802101135,0,0.04418737813830376,0.006904277950525284,0,-0.00552342226728797,-0.0013808555668219924,0,0.013808555901050568,0.00552342226728797,0,-0.01104684453457594,-0.002761711133643985,0,0.01104684453457594,0.006904277950525284,0,-0.00552342226728797,-0.01726069487631321,0,0.00552342226728797,0.002761711133643985,0,-0.00552342226728797,-0.004142566584050655,0,0.00552342226728797,0.008975561708211899,0,-0.00828513316810131,-0.008975561708211899,0,0.723568320274353,0.0013808555668219924,0,-0.01104684453457594,-0.010356416925787926,0,0,0.0020712832920253277,0,-0.002761711133643985,-0.061448074877262115,0,0.01104684453457594,0.007594706024974585,0,-0.00828513316810131,-0.010356416925787926,0,0.00552342226728797,0.00621385034173727,0,-0.002761711133643985,-0.004142566584050655,0,0.02209368906915188,0.004832994658499956,0,-0.01657026633620262,-0.008975561708211899,0,0,0.003452138975262642,0,-0.00552342226728797,-0.00828513316810131,0,0.002761711133643985,0.0013808555668219924,0,-0.002761711133643985,-0.007594706024974585,0,0.013808555901050568,0.006904277950525284,0,-0.01104684453457594,-0.00828513316810131,0,0.01657026633620262,0.01104684453457594,0,-0.013808555901050568,-0.004832994658499956,0,0.00552342226728797,0.002761711133643985,0,-0.027617111802101135,-0.01242770068347454,0,0,0.011737272143363953,0,-0.01657026633620262,-0.01104684453457594,0,0.002761711133643985,0.02485540136694908,0,-0.01657026633620262,-0.004832994658499956,0,0.00552342226728797,0.007594706024974585,0,-0.002761711133643985,-0.006904277950525284,0,0.00552342226728797,0.009665989316999912,0,-0.01657026633620262,-0.006904277950525284,0,0.00552342226728797,0.00621385034173727,0,-0.00552342226728797,-0.003452138975262642,0,0.00552342226728797,0.004142566584050655,0,-0.002761711133643985,-0.004142566584050655,0,0.3866395652294159,0.3638554513454437,0,-0.03037882409989834,-0.00621385034173727,0,0.00828513316810131,0.0006904277834109962,0,-0.01104684453457594,-0.002761711133643985,0,0.01104684453457594,0.006904277950525284,0,-0.00828513316810131,-0.004142566584050655,0,0.01104684453457594,0.002761711133643985,0,-0.03866395726799965,-0.00621385034173727,0,0.002761711133643985,0.011737272143363953,0,-0.00828513316810131,-0.010356416925787926,0,0.002761711133643985,0.003452138975262642,0,-0.01657026633620262,-0.007594706024974585,0,0.01104684453457594,0.003452138975262642,0,-0.002761711133643985,-0.003452138975262642,0,0.00552342226728797,0.008975561708211899,0,-0.0773279145359993,-0.006904277950525284,0,0,0.008975561708211899,0,0,-0.010356416925787926,0,0.01104684453457594,0.002761711133643985,0,-0.01104684453457594,-0.01657026633620262,0,0.01104684453457594,0.0013808555668219924,0,-0.06351935863494873,-0.011737272143363953,0,0.00552342226728797,0.006904277950525284,0,-0.00552342226728797,-0.009665989316999912,0,0.02485540136694908,0.004142566584050655,0,-0.035902246832847595,-0.004142566584050655,0,0.00552342226728797,0.007594706024974585,0,-0.002761711133643985,-0.013808555901050568,0,0.002761711133643985,0.013808555901050568,0,-0.22922202944755554,-0.004142566584050655,0,0.002761711133643985,0.00621385034173727,0,-0.002761711133643985,-0.004142566584050655,0,0.00828513316810131,0.1960814893245697,0,0,-0.01657026633620262,0,0.002761711133643985,0.00552342226728797,0,-0.02485540136694908,-0.006904277950525284,0,0.00828513316810131,0.006904277950525284,0,-0.00552342226728797,-0.00621385034173727,0,0.00552342226728797,0.18641550838947296,0,-0.00828513316810131,-0.02209368906915188,0,0.01657026633620262,0.0013808555668219924,0,-0.00552342226728797,-0.004832994658499956,0,0,0.004142566584050655,0,-0.00828513316810131,-0.010356416925787926,0,0,0.006904277950525284,0,-0.027617111802101135,-0.0020712832920253277,0,0.00828513316810131,0.00828513316810131,0,0,-0.04280652478337288,0,0.01104684453457594,0,0,-0.00828513316810131,-0.0013808555668219924,0,0.002761711133643985,0.00621385034173727,0,-0.00552342226728797,-0.00621385034173727,0,0.01657026633620262,0.008975561708211899,0,-0.01657026633620262,-0.03452138975262642,0,0.013808555901050568,0.006904277950525284,0,-0.002761711133643985,-0.00621385034173727,0,0.00552342226728797,0.013808555901050568,0,0,-0.02485540136694908,0,0.00828513316810131,0.002761711133643985,0,-0.002761711133643985,-0.00552342226728797,0,0.002761711133643985,0.0020712832920253277,0,-0.00552342226728797,-0.118753582239151,0],"text":"layout   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+    +-----+\nlayout   |39 |38 |3B |08 |0B |10 |13 |18 |1B |20 |23 |28 |2B |30 |33 |00 |    | 04  |\nlayout   +---+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---+    +-----+\nlayout   | 3A  |3E |09 |0E |11 |16 |19 |1E |21 |26 |29 |2E |31 |36 | 40  |    | 05  |\nlayout  ++--+--++--++--++--++--++--++--++--++--++--++--++--++--++--+----++    +-----+\nlayout  |3F |0F |0A |0D |12 |15 |1A |1D |22 |25 |2A |2D |32 |35 |  01   |     | 06  |\nlayout  +---+---+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---+---+---+     +-----+\nlayout  |3D | 0F  |0C |17 |14 |1F |1C |27 |24 |2F |2C |37 | 34  |07 |02 |     | 03  |\nlayout  +---+-----++--+---+---+---+---+---+---+---+---++--+-----+---+---+     +-----+\nlayout             |                3C                 |\nlayout             +-----------------------------------+\n\ncap     DEL      RETURN  ←CRSR→  f7      f1      f3      f5      ↑CRSR↓\ncap     3        W       A       4       Z       S       E       L.SHIFT\ncap     5        R       D       6       C       F       T       X\ncap     7        Y       G       8       B       H       U       V\ncap     9        I       J       0       M       K       O       N\ncap     +        P       L       -       .       :       @       ,\ncap     £        *       ;       HOME    R.SHIFT =       ↑       /\ncap     1        ←       CTRL    2       SPACE   C=      Q       STOP\n# keys that don't actually produce a scancode\ncapx    RESTORE\n\nmod     0F shift # left\nmod     34 shift # right\nmod     3A ctrl\nmod     3D cbm\n\nregular 14 0D 1D 88 85 86 87 11\nregular 33 57 41 34 5A 53 45 01\nregular 35 52 44 36 43 46 54 58\nregular 37 59 47 38 42 48 55 56\nregular 39 49 4A 30 4D 4B 4F 4E\nregular 2B 50 4C 2D 2E 3A 40 2C\nregular 5C 2A 3B 13 01 3D 5E 2F\nregular 31 5F 04 32 20 02 51 03\n\nshift   94 8D 9D 8C 89 8A 8B 91\nshift   23 D7 C1 24 DA D3 C5 01\nshift   25 D2 C4 26 C3 C6 D4 D8\nshift   27 D9 C7 28 C2 C8 D5 D6\nshift   29 C9 CA 30 CD CB CF CE\nshift   DB D0 CC DD 3E 5B BA 3C\nshift   A9 C0 5D 93 01 3D DE 3F\nshift   21 5F 04 22 A0 02 D1 83\n\ncbm     94 8D 9D 8C 89 8A 8B 91\ncbm     96 B3 B0 97 AD AE B1 01\ncbm     98 B2 AC 99 BC BB A3 BD\ncbm     9A B7 A5 9B BF B4 B8 BE\ncbm     29 A2 B5 30 A7 A1 B9 AA\ncbm     A6 AF B6 DC 3E 5B A4 3C\ncbm     A8 DF 5D 93 01 3D DE 3F\ncbm     81 5F 04 95 A0 02 AB 83\n\nctrl    FF FF FF FF FF FF FF FF\nctrl    1C 17 01 9F 1A 13 05 FF\nctrl    9C 12 04 1E 03 06 14 18\nctrl    1F 19 07 9E 02 08 15 16\nctrl    12 09 0A 92 0D 0B 0F 0E\nctrl    FF 10 0C FF FF 1B 00 FF\nctrl    1C FF 1D FF FF 1F 1E FF\nctrl    90 06 FF 05 FF FF 11 FF\n","sourcePath":"external/github.com/mist64_c64ref/src/charset/keyboard_c64.txt","sourceMtimeMs":1741819955000,"sourceUrl":"https://github.com/mist64/c64ref/blob/main/keyboard_c64.txt","sourceRepoUrl":"https://github.com/mist64/c64ref","license":"BSD-2-Clause","licenseSpdxId":"BSD-2-Clause","licenseName":"BSD 2-Clause \"Simplified\" License","licenseUrl":"https://github.com/mist64/c64ref/blob/main/LICENSE","attribution":"Source: mist64/c64ref (BSD-2-Clause)"},{"name":"github.com/robfromoz_C64-BASIC/1001.txt","language":"basic","vector":[0.024995295330882072,0.016663528978824615,0,-0.012497647665441036,-0.00520735327154398,0,0.05832235515117645,0.014580588787794113,0,0,-0.002082941122353077,0,0.029161177575588226,0.004165882244706154,0,-0.037492942065000534,-0.017705000936985016,0,0.18329882621765137,0.1103958860039711,0,-0.008331764489412308,-0.018746471032500267,0,0.004165882244706154,0.013539117760956287,0,0,-0.002082941122353077,0,0.004165882244706154,0.05311500281095505,0,0,-0.02187088318169117,0,0,0.01041470654308796,0,-0.004165882244706154,-0.002082941122353077,0,0.3124412000179291,0.012497647665441036,0,0,-0.01145617663860321,0,0.004165882244706154,0.006248823832720518,0,-0.06248823553323746,0,0,0.07082000374794006,0.012497647665441036,0,-0.008331764489412308,-0.04686617851257324,0,0.012497647665441036,0.007290294393897057,0,-0.012497647665441036,-0.01041470654308796,0,0.016663528978824615,0.01041470654308796,0,-0.024995295330882072,-0.013539117760956287,0,0.008331764489412308,0,0,-0.008331764489412308,-0.01041470654308796,0,0.004165882244706154,0.01145617663860321,0,-0.03332705795764923,-0.01041470654308796,0,0.004165882244706154,0.002082941122353077,0,-0.08748353272676468,-0.05728088319301605,0,0.004165882244706154,0.003124411916360259,0,-0.029161177575588226,-0.023953823372721672,0,0,0.013539117760956287,0,-0.004165882244706154,-0.012497647665441036,0,0.029161177575588226,0.03124411776661873,0,-0.04165882617235184,-0.14164000749588013,0,0.04582470655441284,0.015622058883309364,0,-0.012497647665441036,-0.030202647671103477,0,0,0.09685676544904709,0,-0.008331764489412308,-0.004165882244706154,0,0,0.003124411916360259,0,-0.037492942065000534,-0.0010414705611765385,0,0.07498588413000107,0.002082941122353077,0,-0.07082000374794006,0,0,0,0.00520735327154398,0,-0.02082941308617592,-0.01041470654308796,0,0.004165882244706154,0.15726205706596375,0,-0.004165882244706154,-0.0010414705611765385,0,0,0.02082941308617592,0,-0.07082000374794006,-0.037492942065000534,0,0.03332705795764923,0.04061735421419144,0,0,-0.00520735327154398,0,0.008331764489412308,0.01145617663860321,0,-0.016663528978824615,-0.009373235516250134,0,0.016663528978824615,0.01041470654308796,0,-0.004165882244706154,-0.012497647665441036,0,0.008331764489412308,0.01041470654308796,0,-0.17080117762088776,-0.019787941128015518,0,0.024995295330882072,0.004165882244706154,0,-0.02082941308617592,-0.018746471032500267,0,0.049990590661764145,0.006248823832720518,0,0,-0.049990590661764145,0,0.016663528978824615,0.002082941122353077,0,-0.07082000374794006,-0.017705000936985016,0,0.39992472529411316,0.004165882244706154,0,-0.008331764489412308,-0.003124411916360259,0,0.04582470655441284,0.014580588787794113,0,0,-0.047907646745443344,0,0.06248823553323746,0.023953823372721672,0,-0.037492942065000534,-0.016663528978824615,0,0,0.006248823832720518,0,0,-0.007290294393897057,0,0.008331764489412308,0.014580588787794113,0,-0.02082941308617592,-0.018746471032500267,0,0.008331764489412308,0.04478323832154274,0,0,-0.04478323832154274,0,0,0.04582470655441284,0,-0.06248823553323746,-0.012497647665441036,0,0.012497647665441036,0.003124411916360259,0,-0.024995295330882072,-0.002082941122353077,0,0.008331764489412308,0.0010414705611765385,0,-0.004165882244706154,-0.03541000187397003,0,0,0.016663528978824615,0,-0.016663528978824615,-0.0010414705611765385,0,0.012497647665441036,0.08227618038654327,0,-0.03332705795764923,-0.008331764489412308,0,0.008331764489412308,0.009373235516250134,0,-0.012497647665441036,-0.017705000936985016,0,0.004165882244706154,0.02187088318169117,0,-0.012497647665441036,-0.08748353272676468,0,0.004165882244706154,0.015622058883309364,0,-0.024995295330882072,-0.013539117760956287,0,0.008331764489412308,0.029161177575588226,0,-0.5665600299835205,-0.006248823832720518,0,0.004165882244706154,0.01041470654308796,0,-0.04582470655441284,-0.037492942065000534,0,0.02082941308617592,0.20100383460521698,0,0,-0.012497647665441036,0,0.004165882244706154,0.023953823372721672,0,-0.004165882244706154,-0.02187088318169117,0,0,0.03228558972477913,0,0,-0.026036765426397324,0,0.02082941308617592,0,0,-0.03332705795764923,-0.0010414705611765385,0,0.004165882244706154,0.01145617663860321,0,-0.004165882244706154,-0.02082941308617592,0,0.07498588413000107,0.015622058883309364,0,-0.024995295330882072,-0.003124411916360259,0,0.02082941308617592,0,0,-0.004165882244706154,-0.03332705795764923,0,0.02082941308617592,0.006248823832720518,0,-0.012497647665441036,-0.02187088318169117,0,0.008331764489412308,0.02291235327720642,0,0,-0.019787941128015518,0,0.024995295330882072,0,0,-0.06248823553323746,-0.013539117760956287,0,0.008331764489412308,0.007290294393897057,0,-0.008331764489412308,-0.017705000936985016,0,0.016663528978824615,0.004165882244706154,0,-0.024995295330882072,-0.023953823372721672,0,0,0.01041470654308796,0,-0.012497647665441036,-0.006248823832720518,0,0.016663528978824615,0.004165882244706154,0,-0.004165882244706154,-0.016663528978824615,0,0,0.008331764489412308,0,-0.1083129420876503,-0.28432148694992065,0,0.004165882244706154,0.004165882244706154,0,-0.04165882617235184,-0.06561265140771866,0],"text":"10 rem 1001\r\n20 poke 53280,5:poke 53281,0:poke 646,1\r\n30 z=rnd(-ti):print\"“\":print\"this game is called '1001'.\"\r\n40 print:print\"the object is to get to 1001 as fast as\"\r\n50 print\"possible.\"\r\n60 print:print\"two dice will be thrown. consult the\"\r\n70 print\"following chart:\"\r\n80 print:print\"                1 = +\"\r\n90 print\"                2 = -\"\r\n100 print\"                3 = *\"\r\n110 print\"                4 = /\"\r\n120 print\"                5 = *\"\r\n130 print\"                6 = +\"\r\n140 print:print\"one die will be used to determine the\"\r\n150 print\"number entry, the other will be used to\"\r\n160 print\"determine operation entry.\"\r\n170 print:print\"for example, if the roll is 3 and 5,\"\r\n180 print\"you could enter 3 as the number and\"\r\n190 print\"enter * as the function.\"\r\n200 print\"                              hit a key\"\r\n210 get i$:if i$=\"\" then 210\r\n220 print\"“\":print\"or, you could enter 5 as the number and\"\r\n230 print\"enter * as the function. you have to\"\r\n240 print\"get exactly to 1001 in the fewest\"\r\n250 print\"number of turns. each roll of the dice\"\r\n260 print\"means you enter one number and one\"\r\n270 print\"operation.\"\r\n280 print:print\"hint: if the dice allow it, build up\"\r\n290 print\"slowly so you will have some choice in\"\r\n300 print\"later rolls. take your time in deciding\"\r\n310 print\"which number will be played and which\"\r\n320 print\"number will determine the function. try\"\r\n330 print\"to plan for the best chances for the\"\r\n340 print\"next roll. if you get /, it can serve\"\r\n350 print\"your advantage as it will get you to a\"\r\n360 print\"number from which you will easily\"\r\n370 print\"achieve 1001.\"\r\n380 print:print:print:print:print:print\"                              hit a key\"\r\n390 get i$:if i$=\"\" then 390\r\n400 d$=\"+-*/*+\":g=0:t=0\r\n410 print\"“\":print\"your total is\";t;\"after\";g;\"turns.\"\r\n420 d1=int(rnd(1)*6+1):d2=int(rnd(1)*6+1)\r\n430 print:print\"your dice fell\";d1;\"and\";d2\r\n440 print:print\"operations: 1=+ 2=- 3=* 4=/ 5=* 6=+\"\r\n450 print\"which dice for the operation (1/2)\";\r\n460 input i:if i<1 or i>2 then print\"1 or 2 please.\":goto 460\r\n470 if i=1 then n=d2:o$=mid$(d$,d1,1):goto 490\r\n480 n=d1:o$=mid$(d$,d2,1)\r\n490 print:print\"ok, \";t;o$;n;\"equals\";\r\n500 if o$=\"+\" then t=t+n\r\n510 if o$=\"-\" then t=t-n\r\n520 if o$=\"*\" then t=t*n\r\n530 if o$=\"/\" then t=t/n\r\n540 print t:g=g+1:if t=1001 then 590\r\n550 print:print\"that's the end of the turn.\"\r\n560 print:print\"hit a key for your next turn.\"\r\n570 get i$:if i$=\"\" then 570\r\n580 goto 410\r\n590 print:print\"***************************************\"\r\n600 print\"well done! you made it to 1001!!!!!!!!!!!\"\r\n610 print\"***************************************\"\r\n620 print:print\"it took you\";g;\"turns to do it.\"\r\n630 print:print\"would you like to play again (y/n)\";\r\n640 input i$:if i$<>\"y\" and i$<>\"n\" then print:print\"(y) or (n) please.\":goto 640\r\n650 if i$=\"y\" then 400\r\n","sourcePath":"external/github.com/robfromoz_C64-BASIC/1001.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/1001.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/aldous-broder maze.txt","language":"basic","vector":[0.006344301160424948,0.0444101057946682,0,0,-0.003172150580212474,0,0.05075440928339958,0.020618978887796402,0,-0.16495183110237122,-0.009516451507806778,0,0,0.014274677261710167,0,-0.019032903015613556,-0.026963278651237488,0,0.2157062292098999,0.041237957775592804,0,-0.0444101057946682,-0.004758225753903389,0,0,0.0650290846824646,0,-0.006344301160424948,-0.007930376566946507,0,0,0.08088983595371246,0,0,-0.012688602320849895,0,0,0.007930376566946507,0,0,0,0,0.06978730857372284,0.014274677261710167,0,0,-0.01744682714343071,0,0,0.01110252644866705,0,-0.006344301160424948,-0.001586075290106237,0,0.0888202115893364,0.03489365428686142,0,0,-0.10468096286058426,0,0.03806580603122711,0.006344301160424948,0,-0.006344301160424948,-0.009516451507806778,0,0.05075440928339958,0.004758225753903389,0,-0.019032903015613556,-0.03806580603122711,0,0.031721506267786026,0.001586075290106237,0,-0.006344301160424948,-0.012688602320849895,0,0.019032903015613556,0.03489365428686142,0,-0.0888202115893364,0,0,0.031721506267786026,0.001586075290106237,0,-0.23473913967609406,-0.01744682714343071,0,0.006344301160424948,0,0,0,-0.014274677261710167,0,0.019032903015613556,0.006344301160424948,0,0,-0.001586075290106237,0,0.16495183110237122,0.02537720464169979,0,-0.012688602320849895,-0.11102526634931564,0,0,0.003172150580212474,0,-0.006344301160424948,-0.015860753133893013,0,0,0.11261133849620819,0,-0.02537720464169979,-0.0222050528973341,0,0,0.009516451507806778,0,-0.0444101057946682,-0.006344301160424948,0,0.019032903015613556,0.006344301160424948,0,-0.2601163387298584,-0.001586075290106237,0,0,0.015860753133893013,0,-0.20936192572116852,-0.001586075290106237,0,0,0.03806580603122711,0,0,-0.001586075290106237,0,0.006344301160424948,0.003172150580212474,0,-0.1268860250711441,-0.007930376566946507,0,0.06344301253557205,0.045996181666851044,0,0,0,0,0.03806580603122711,0.023791128769516945,0,-0.012688602320849895,-0.003172150580212474,0,0.1268860250711441,0.026963278651237488,0,-0.006344301160424948,-0.009516451507806778,0,0,0.033307578414678574,0,-0.3552808463573456,-0.053926557302474976,0,0.13957461714744568,0.01110252644866705,0,-0.012688602320849895,-0.0444101057946682,0,0.006344301160424948,0.01744682714343071,0,-0.012688602320849895,-0.12847208976745605,0,0.006344301160424948,0.003172150580212474,0,-0.09516451507806778,-0.006344301160424948,0,0.03806580603122711,0.026963278651237488,0,-0.006344301160424948,0,0,0.23473913967609406,0.08247591555118561,0,-0.019032903015613556,-0.009516451507806778,0,0.2981821596622467,0,0,-0.012688602320849895,-0.007930376566946507,0,0.019032903015613556,0.001586075290106237,0,0,-0.012688602320849895,0,0.019032903015613556,0.012688602320849895,0,-0.06978730857372284,-0.06344301253557205,0,0.031721506267786026,0.009516451507806778,0,-0.006344301160424948,-0.13481639325618744,0,0,0.053926557302474976,0,-0.012688602320849895,-0.11578349024057388,0,0.012688602320849895,0,0,-0.03806580603122711,-0.001586075290106237,0,0.006344301160424948,0.003172150580212474,0,-0.06344301253557205,-0.06344301253557205,0,0.006344301160424948,0.031721506267786026,0,0,0,0,0,0.036479730159044266,0,0,-0.006344301160424948,0,0.006344301160424948,0.06344301253557205,0,-0.0444101057946682,-0.004758225753903389,0,0,0.0222050528973341,0,-0.019032903015613556,-0.1776404231786728,0,0.012688602320849895,0.07930376380681992,0,-0.006344301160424948,-0.007930376566946507,0,0,0.015860753133893013,0,-0.11419741809368134,-0.01110252644866705,0,0.012688602320849895,0.01110252644866705,0,-0.02537720464169979,-0.049168333411216736,0,0.019032903015613556,0.023791128769516945,0,0,-0.02537720464169979,0,0.03806580603122711,0.12529994547367096,0,-0.012688602320849895,-0.06820123642683029,0,0.02537720464169979,0.1506771445274353,0,-0.006344301160424948,-0.006344301160424948,0,0.06344301253557205,0.014274677261710167,0,-0.006344301160424948,0,0,0.012688602320849895,0.05075440928339958,0,-0.006344301160424948,-0.03806580603122711,0,0.012688602320849895,0.015860753133893013,0,-0.019032903015613556,-0.004758225753903389,0,0.006344301160424948,0,0,0,-0.012688602320849895,0,0.019032903015613556,0.006344301160424948,0,0,-0.03013543039560318,0,0.006344301160424948,0.007930376566946507,0,0,-0.09675058722496033,0,0.06978730857372284,0.003172150580212474,0,-0.20301763713359833,-0.05234048143029213,0,0.006344301160424948,0,0,0,0,0,0.006344301160424948,0.004758225753903389,0,-0.0444101057946682,-0.053926557302474976,0,0,0.015860753133893013,0,-0.02537720464169979,-0.009516451507806778,0,0.06978730857372284,0.015860753133893013,0,0,-0.006344301160424948,0,0,0.031721506267786026,0,-0.012688602320849895,-0.058684784919023514,0,0,0.006344301160424948,0,-0.019032903015613556,-0.10150881856679916,0],"text":"10 rem aldous-broder maze algorithm by rob vonk 2023\r\n20 rem from \"mazes for programmers\" by jamis buck, 2015, pages 55-57\r\n30 rem randomise, set maximum dimensions of maze and set count of unvisited\r\n40 rem cells to zero. mx and my must both be odd or maze won't display properly\r\n50 rem works better with mx<=21 and my<=39\r\n60 rem warning: this algorithm is slow!\r\n70 z=rnd(-ti):c=0:mx=39:my=21:dim m$(my,mx),m(my,mx)\r\n80 rem create grid with cell spaces surrounded by # fences, and count each\r\n90 rem unvisited cell as we go\r\n100 for i=1 to my:if i/2=int(i/2) then 120\r\n110 for j=1 to mx:m$(i,j)=\"#\":next j:goto 160\r\n120 for j=1 to mx:if j/2=int(j/2) then m$(i,j)=\" \":m(i,j)=0:c=c+1:goto 140\r\n130 m$(i,j)=\"#\"\r\n140 next j\r\n150 rem start at random cell\r\n160 next i:x=int(rnd(1)*(((mx-1)-2)/2+1))*2+2:y=int(rnd(1)*(((my-1)-2)/2+1))*2+2\r\n170 rem if unvisited cell count is zero, display maze\r\n180 if c=0 then 460\r\n190 rem set random direction north = 1, south = 2, east = 3, west = 4\r\n200 on int(rnd(1)*4+1) goto 230,290,350,410\r\n210 rem north\r\n220 rem if at very top try new direction\r\n230 if y=2 then 200\r\n240 rem if moved into unvisited cell, remove wall to south and set to visited\r\n250 y=y-2:if m(y,x)=0 then m$(y+1,x)=\" \":m(y,x)=1:c=c-1\r\n260 goto 180\r\n270 rem south\r\n280 rem if at very bottom try new direction\r\n290 if y=my-1 then 200\r\n300 rem if moved into unvisited cell, remove wall to north and set to visited\r\n310 y=y+2:if m(y,x)=0 then m$(y-1,x)=\" \":m(y,x)=1:c=c-1\r\n320 goto 180\r\n330 rem east\r\n340 rem if at far right try new direction\r\n350 if x=mx-1 then 200\r\n360 rem if moved into unvisited cell, remove wall to west and set to visited\r\n370 x=x+2:if m(y,x)=0 then m$(y,x-1)=\" \":m(y,x)=1:c=c-1\r\n380 goto 180\r\n390 rem west\r\n400 rem if at far left try new direction\r\n410 if x=2 then 200\r\n420 rem if moved into unvisited cell, remove wall to east and set to visited\r\n430 x=x-2:if m(y,x)=0 then m$(y,x+1)=\" \":m(y,x)=1:c=c-1\r\n440 goto 180\r\n450 rem display maze\r\n460 print\"{clear}{white}\":poke 53280,0:poke 53281,0\r\n470 for i=1 to my:for j=1 to mx:print m$(i,j);:next j:print:next i","sourcePath":"external/github.com/robfromoz_C64-BASIC/aldous-broder maze.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/aldous-broder%20maze.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/ascii art chatgpt.txt","language":"basic","vector":[0.020100248977541924,0.03015037253499031,0,0,-0.010050124488770962,0,0.10050124675035477,0.015075186267495155,0,0,0,0,0.020100248977541924,0.045225560665130615,0,-0.020100248977541924,-0.02512531168758869,0,0.3819047212600708,0.07035087049007416,0,-0.06030074506998062,-0.005025062244385481,0,0,0.07035087049007416,0,0,0,0,0.020100248977541924,0.03015037253499031,0,0,-0.010050124488770962,0,0,0,0,0,-0.010050124488770962,0,0.04020049795508385,0.020100248977541924,0,0,-0.005025062244385481,0,0,0,0,-0.020100248977541924,-0.020100248977541924,0,0.10050124675035477,0,0,0,-0.07035087049007416,0,0.04020049795508385,0.005025062244385481,0,-0.04020049795508385,-0.010050124488770962,0,0.04020049795508385,0.010050124488770962,0,-0.020100248977541924,-0.045225560665130615,0,0.04020049795508385,0,0,-0.020100248977541924,-0.03015037253499031,0,0,0,0,-0.04020049795508385,0,0,0,0.005025062244385481,0,-0.20100249350070953,-0.07035087049007416,0,0,0,0,0,-0.06532581150531769,0,0,0.020100248977541924,0,-0.04020049795508385,0,0,0.1608019918203354,0.05527568235993385,0,-0.020100248977541924,-0.06532581150531769,0,0.020100248977541924,0.03517543524503708,0,0,-0.04020049795508385,0,0.10050124675035477,0.19597741961479187,0,-0.020100248977541924,-0.03517543524503708,0,0,0,0,-0.04020049795508385,0,0,0.12060149013996124,0.02512531168758869,0,-0.20100249350070953,0,0,0.020100248977541924,0.020100248977541924,0,-0.2211027294397354,0,0,0.020100248977541924,0.04020049795508385,0,0,0,0,0,0.010050124488770962,0,-0.0804009959101677,-0.010050124488770962,0,0.06030074506998062,0.05025062337517738,0,0,0,0,0,0.03015037253499031,0,0,-0.020100248977541924,0,0.06030074506998062,0.020100248977541924,0,0,-0.010050124488770962,0,0,0.020100248977541924,0,-0.28140348196029663,-0.045225560665130615,0,0.0804009959101677,0,0,0,-0.020100248977541924,0,0.06030074506998062,0.005025062244385481,0,0,-0.1105513647198677,0,0.06030074506998062,0,0,-0.10050124675035477,0,0,0.12060149013996124,0,0,-0.020100248977541924,-0.020100248977541924,0,0.12060149013996124,0.0804009959101677,0,0,-0.045225560665130615,0,0.04020049795508385,0.010050124488770962,0,-0.04020049795508385,-0.03015037253499031,0,0,0.05527568235993385,0,-0.04020049795508385,-0.010050124488770962,0,0,0.02512531168758869,0,-0.020100248977541924,-0.020100248977541924,0,0,0.06532581150531769,0,-0.0804009959101677,-0.10552630573511124,0,0,0.10552630573511124,0,0,-0.1256265491247177,0,0.020100248977541924,0.010050124488770962,0,-0.04020049795508385,0,0,0,0.005025062244385481,0,-0.10050124675035477,-0.04020049795508385,0,0,0.03015037253499031,0,-0.12060149013996124,0,0,0,0.010050124488770962,0,0,0,0,0.020100248977541924,0.03015037253499031,0,0,-0.005025062244385481,0,0,0.02512531168758869,0,-0.020100248977541924,-0.14070174098014832,0,0.04020049795508385,0.05025062337517738,0,0,-0.010050124488770962,0,0.020100248977541924,0.04020049795508385,0,-0.26130324602127075,-0.005025062244385481,0,0.10050124675035477,0.04020049795508385,0,-0.12060149013996124,-0.05527568235993385,0,0.020100248977541924,0.06030074506998062,0,-0.020100248977541924,-0.020100248977541924,0,0,0.06030074506998062,0,0,-0.05025062337517738,0,0.06030074506998062,0.020100248977541924,0,0,-0.020100248977541924,0,0.0804009959101677,0,0,0,-0.03015037253499031,0,0.0804009959101677,0.04020049795508385,0,0,-0.015075186267495155,0,0.04020049795508385,0.005025062244385481,0,0,-0.04020049795508385,0,0,0.02512531168758869,0,0,-0.005025062244385481,0,0.04020049795508385,0.010050124488770962,0,0,-0.03015037253499031,0,0,0.03015037253499031,0,0,-0.10050124675035477,0,0,0.005025062244385481,0,-0.14070174098014832,-0.11557643115520477,0,0,0.005025062244385481,0,0,0,0,0.020100248977541924,0.010050124488770962,0,-0.04020049795508385,-0.020100248977541924,0,0,0.015075186267495155,0,0,-0.010050124488770962,0,0,0.020100248977541924,0,0,0,0,0,0.02512531168758869,0,-0.14070174098014832,-0.13065162301063538,0,0,0.05025062337517738,0,-0.12060149013996124,-0.13065162301063538,0],"text":"10 rem procedural ascii art by rob vonk 2025\r\n20 rem based upon pseudocode written by chatgpt using the prompt \"can you do\r\n30 rem pseudocode that displays a procedurally-generated ascii pattern using\r\n40 rem formulas such as sin() cos() sqr() and tan()\"\r\n50 rem this program outputs to the printer using open, print# and cmd. change\r\n60 rem these to run on your particular system.\r\n70 w=80:h=40:s=.2:open 1,4:cmd 1:for y=0 to h-1:for x=0 to w-1:fx=(x-w/2)*s:\r\n80 fy=(y-h/2)*s:v=sin(sqr(fx*fx+fy*fy))+cos(fx*2+tan(fy))\r\n90 if v<-1 then c$=\".\":goto 140\r\n100 if v<-.5 then c$=\":\":goto 140\r\n110 if v<0 then c$=\"*\":goto 140\r\n120 if v<.5 then c$=\"o\":goto 140\r\n130 c$=\"#\"\r\n140 print c$;:next x:print:next y:print#1:close 1","sourcePath":"external/github.com/robfromoz_C64-BASIC/ascii art chatgpt.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/ascii%20art%20chatgpt.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/ascii lissajous quilt.txt","language":"basic","vector":[0.02055312879383564,0.030829692259430885,0,0,-0.00513828219845891,0,0.02055312879383564,0.01027656439691782,0,0,0,0,0.02055312879383564,0.030829692259430885,0,-0.06165938451886177,-0.01027656439691782,0,0.3699563145637512,0.06165938451886177,0,-0.08221251517534256,-0.00513828219845891,0,0.04110625758767128,0.0924890786409378,0,0,0,0,0.02055312879383564,0.02055312879383564,0,0,-0.00513828219845891,0,0,0,0,0,-0.01027656439691782,0,0.02055312879383564,0.030829692259430885,0,0,0,0,0,0,0,0,-0.00513828219845891,0,0.06165938451886177,0.06165938451886177,0,0,-0.1335953325033188,0,0.04110625758767128,0.025691410526633263,0,-0.04110625758767128,-0.025691410526633263,0,0.04110625758767128,0.02055312879383564,0,-0.02055312879383564,-0.03596797585487366,0,0.02055312879383564,0,0,-0.02055312879383564,-0.025691410526633263,0,0,0.02055312879383564,0,-0.04110625758767128,0,0,0.04110625758767128,0,0,-0.2055312842130661,-0.04110625758767128,0,0,0,0,-0.02055312879383564,-0.015414846129715443,0,0,0.025691410526633263,0,-0.02055312879383564,-0.00513828219845891,0,0.12331876903772354,0.015414846129715443,0,-0.04110625758767128,-0.0462445393204689,0,0.04110625758767128,0.02055312879383564,0,0,-0.051382821053266525,0,0.04110625758767128,0.19525471329689026,0,-0.04110625758767128,-0.04110625758767128,0,0,0.02055312879383564,0,-0.04110625758767128,0,0,0.2055312842130661,0.02055312879383564,0,-0.2260844111442566,0,0,0,0.015414846129715443,0,-0.12331876903772354,0,0,0,0.030829692259430885,0,0,0,0,0,0,0,-0.04110625758767128,0,0,0.02055312879383564,0.030829692259430885,0,0,0,0,0.02055312879383564,0.03596797585487366,0,0,-0.02055312879383564,0,0.08221251517534256,0.02055312879383564,0,-0.02055312879383564,-0.01027656439691782,0,0,0.04110625758767128,0,-0.32885006070137024,-0.07707422971725464,0,0.04110625758767128,0.00513828219845891,0,-0.02055312879383564,-0.02055312879383564,0,0.04110625758767128,0.025691410526633263,0,0,-0.11818049103021622,0,0.04110625758767128,0,0,-0.04110625758767128,-0.01027656439691782,0,0.12331876903772354,0.01027656439691782,0,-0.02055312879383564,-0.01027656439691782,0,0.2055312842130661,0.06165938451886177,0,0,-0.04110625758767128,0,0.08221251517534256,0.02055312879383564,0,-0.02055312879383564,-0.00513828219845891,0,0,0.025691410526633263,0,-0.04110625758767128,-0.02055312879383564,0,0,0.00513828219845891,0,0,-0.02055312879383564,0,0,0.10790392756462097,0,-0.02055312879383564,-0.12845705449581146,0,0,0.0924890786409378,0,0,-0.08221251517534256,0,0.06165938451886177,0.01027656439691782,0,-0.10276564210653305,0,0,0.04110625758767128,0.00513828219845891,0,-0.02055312879383564,-0.02055312879383564,0,0,0.01027656439691782,0,-0.10276564210653305,0,0,0,0.015414846129715443,0,0,0,0,0,0.04110625758767128,0,0,-0.01027656439691782,0,0,0.015414846129715443,0,-0.02055312879383564,-0.16442503035068512,0,0.06165938451886177,0.030829692259430885,0,-0.02055312879383564,-0.02055312879383564,0,0.02055312879383564,0.030829692259430885,0,-0.1849781572818756,-0.00513828219845891,0,0.04110625758767128,0.025691410526633263,0,-0.08221251517534256,-0.025691410526633263,0,0.04110625758767128,0.06165938451886177,0,0,-0.02055312879383564,0,0,0.1130422055721283,0,0,-0.051382821053266525,0,0.04110625758767128,0.04110625758767128,0,0,-0.015414846129715443,0,0.06165938451886177,0,0,0,-0.025691410526633263,0,0.08221251517534256,0.030829692259430885,0,0,-0.01027656439691782,0,0,0.01027656439691782,0,0,-0.01027656439691782,0,0,0.01027656439691782,0,0,-0.01027656439691782,0,0.06165938451886177,0.030829692259430885,0,0,-0.06165938451886177,0,0,0.07193595170974731,0,0,-0.0667976662516594,0,0.12331876903772354,0,0,-0.2671906650066376,-0.08221251517534256,0,0.02055312879383564,0,0,0,0,0,0.02055312879383564,0,0,-0.06165938451886177,-0.01027656439691782,0,0,0.00513828219845891,0,0,-0.01027656439691782,0,0.04110625758767128,0.03596797585487366,0,0,-0.01027656439691782,0,0,0.030829692259430885,0,-0.08221251517534256,-0.09762735664844513,0,0,0.02055312879383564,0,-0.02055312879383564,-0.12331876903772354,0],"text":"10 rem ascii lissajous weave quilt generator by rob vonk 2025\r\n20 rem based on pseudocode written by chatgpt using the prompt \"could you do\r\n30 rem some pseudocode for a random procedurally-generated ascii quilt pattern\r\n40 rem using trigonometric functions\" and \"can you do some different trig\r\n50 rem formulae so that different patterns can be displayed, or tweak the\r\n60 rem current formula?\"\r\n70 w=80:h=25:fx=.2:fy=.3:c$=\" .:*+#%@\":open 1,4:cmd 1:for y=0 to h-1:l$=\"\"\r\n80 for x=0 to w-1:v=sin(x*.1+sin(y*.05))+cos(y*.1+cos(x*.05)):n=(v+2)/4\r\n90 i=int(n*len(c$)):if i>=len(c$) then i=len(c$)-1\r\n100 if i<1 then i=1\r\n110 l$=l$+mid$(c$,i,1):next x:print l$:next y:print#1:close 1","sourcePath":"external/github.com/robfromoz_C64-BASIC/ascii lissajous quilt.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/ascii%20lissajous%20quilt.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/auto poetry.txt","language":"basic","vector":[0.01272583194077015,0.00524940574541688,0,-0.013998414389789104,-0.016861727461218834,0,0.03308716043829918,0.016384508460760117,0,-0.01908874697983265,-0.008430863730609417,0,0.01908874697983265,0.00890808179974556,0,-0.01654358021914959,-0.0159072894603014,0,0.02036133036017418,0.007794572040438652,0,-0.02290649712085724,-0.007635498885065317,0,0.01463470607995987,0.00397682236507535,0,-0.01018066518008709,-0.004931259900331497,0,0.00572662428021431,0.07842293381690979,0,-0.009544373489916325,-0.01049881149083376,0,0.007635498885065317,0.007635498885065317,0,-0.005090332590043545,-0.010657884180545807,0,0.01717987284064293,0.011930467560887337,0,-0.012089540250599384,-0.009862519800662994,0,0.013998414389789104,0.0033405309077352285,0,-0.010816956870257854,-0.006840134505182505,0,0.06681061536073685,0.03070106916129589,0,-0.00572662428021431,-0.010657884180545807,0,0.005090332590043545,0.00572662428021431,0,-0.015270997770130634,-0.005567551124840975,0,0.013362123630940914,0.012089540250599384,0,-0.02163391374051571,-0.009862519800662994,0,0.008271790109574795,0.005885696969926357,0,-0.012089540250599384,-0.0933757871389389,0,0.010816956870257854,0.008271790109574795,0,-0.05281220003962517,-0.007635498885065317,0,0.01845245622098446,0.004135895054787397,0,-0.01018066518008709,-0.08605843782424927,0,0.006362915970385075,0.01018066518008709,0,-0.013998414389789104,-0.009067155420780182,0,0.0159072894603014,0.008589936420321465,0,-0.012089540250599384,-0.010339737869799137,0,0.02036133036017418,0.020838549360632896,0,-0.04517670348286629,-0.19931833446025848,0,0.02799682877957821,0.012089540250599384,0,-0.006999207194894552,-0.01113510224968195,0,0.006362915970385075,0.01145324856042862,0,-0.008271790109574795,-0.01495285239070654,0,0.00445404089987278,0.01049881149083376,0,-0.02036133036017418,-0.008271790109574795,0,0.009544373489916325,0.005885696969926357,0,-0.015270997770130634,-0.008112717419862747,0,0.0038177494425326586,0.005090332590043545,0,-0.010816956870257854,-0.004931259900331497,0,0.006999207194894552,0.009544373489916325,0,-0.006999207194894552,-0.006840134505182505,0,0.006362915970385075,0.011294175870716572,0,-0.02099762298166752,-0.0079536447301507,0,0.006999207194894552,0.03642769157886505,0,-0.009544373489916325,-0.006999207194894552,0,0.00572662428021431,0.00524940574541688,0,-0.015270997770130634,-0.00890808179974556,0,0.00445404089987278,0.00747642619535327,0,-0.012089540250599384,-0.013362123630940914,0,0.013362123630940914,0.017657091841101646,0,-0.01272583194077015,-0.009703446179628372,0,0.010816956870257854,0.007158280350267887,0,-0.03945007920265198,-0.02751961164176464,0,0.04008636996150017,0.013521196320652962,0,-0.008271790109574795,-0.006362915970385075,0,0.01145324856042862,0.004613114055246115,0,-0.03690491244196892,-0.048835378140211105,0,0.02099762298166752,0.01113510224968195,0,-0.01145324856042862,-0.00890808179974556,0,0.008271790109574795,0.011612321250140667,0,-0.013362123630940914,-0.06331101059913635,0,0.2793320119380951,0.017657091841101646,0,-0.02163391374051571,-0.006362915970385075,0,0.006362915970385075,0.006362915970385075,0,-0.009544373489916325,-0.007635498885065317,0,0.02608795464038849,0.01049881149083376,0,-0.02926941215991974,-0.01495285239070654,0,0.006999207194894552,0.009544373489916325,0,-0.006999207194894552,-0.011771393939852715,0,0.01463470607995987,0.006999207194894552,0,-0.013362123630940914,-0.01113510224968195,0,0.00890808179974556,0.007158280350267887,0,-0.013362123630940914,-0.006044770125299692,0,0.013998414389789104,0.004613114055246115,0,-0.02926941215991974,-0.012884904630482197,0,0.012089540250599384,0.005408478435128927,0,-0.03881378471851349,-0.006044770125299692,0,0.007635498885065317,0.007158280350267887,0,-0.007635498885065317,-0.010657884180545807,0,0.005090332590043545,0.00572662428021431,0,-0.01845245622098446,-0.008749009110033512,0,0.01145324856042862,0.023383716121315956,0,-0.013362123630940914,-0.007794572040438652,0,0.00890808179974556,0.006681061815470457,0,-0.013362123630940914,-0.02354278787970543,0,0.01717987284064293,0.023383716121315956,0,-0.7590958476066589,-0.009544373489916325,0,0.01018066518008709,0.007794572040438652,0,-0.01145324856042862,-0.021474840119481087,0,0.005090332590043545,0.013203050009906292,0,-0.013998414389789104,-0.018929675221443176,0,0.01272583194077015,0.008749009110033512,0,-0.01272583194077015,-0.00922622811049223,0,0.012089540250599384,0.14125673472881317,0,-0.013362123630940914,-0.014316560700535774,0,0.005090332590043545,0.007158280350267887,0,-0.009544373489916325,-0.007794572040438652,0,0.0038177494425326586,0.018134310841560364,0,-0.0031814579851925373,-0.025928881019353867,0,0.01717987284064293,0.01049881149083376,0,-0.01018066518008709,-0.00524940574541688,0,0.012089540250599384,0.00890808179974556,0,-0.01654358021914959,-0.008749009110033512,0,0.010816956870257854,0.005567551124840975,0,-0.005090332590043545,-0.011771393939852715,0,0.0031814579851925373,0.009385300800204277,0,-0.01018066518008709,-0.01845245622098446,0,0.05408478528261185,0.006999207194894552,0,-0.01463470607995987,-0.022111132740974426,0,0.006999207194894552,0.005567551124840975,0,-0.00445404089987278,-0.005567551124840975,0,0.01717987284064293,0.004135895054787397,0,-0.005090332590043545,-0.014475633390247822,0,0.00572662428021431,0.00747642619535327,0,-0.16734468936920166,-0.009067155420780182,0,0.01272583194077015,0.005885696969926357,0,-0.01145324856042862,-0.01049881149083376,0,0.00572662428021431,0.009703446179628372,0,-0.16289064288139343,-0.3825703263282776,0,0.01463470607995987,0.008430863730609417,0,-0.01145324856042862,-0.00890808179974556,0],"text":"10 rem auto poetry generator\r\n20 rem original by c thompson\r\n30 rem converted to basic by r vonk, 2018\r\n40 print\"��\":poke 53280,1:poke 53281,1:ll=582:dim ll$(ll)\r\n50 data \"an ancient pond\",\"with a sound from the water\"\r\n60 data \"of the frog as it plunges in\",\"just enough to bend\"\r\n70 data \"the gladiolus leaves\",\"a cloud of flowers\",\"i come weary,\"\r\n80 data \"in search of an inn\",\"ah! these wisteria flowers!\"\r\n90 data \"the cry of the cicada\",\"it gives us no sign\",\"presently i will die\"\r\n100 data \"the gate i would knock at\",\"the moon of today\"\r\n110 data \"ah! the waving lespedeza\",\"it spills not a drop\",\"of the clear dew\"\r\n120 data \"it was the new moon\",\"since then i waited\",\"and lo! tonight!\"\r\n130 data \"i have my reward\",\"clouds will separate us\"\r\n140 data \"the time to part has come now\",\"wild goose flies away\"\r\n150 data \"the mysterious power of harmony\",\"freed from all my woes\"\r\n160 data \"night, the city has calmed down\",\"behind the large window\"\r\n170 data \"it is quiet and solemn\",\"as if a man dies\",\"distracted by failure,\"\r\n180 data \"we look at the stars\",\"and again look at the stars\",\"stars, stars\"\r\n190 data \"where does this melancholy come from?\",\"and stars speak\"\r\n200 data \"stars tell everything.\",\"time's river in its rushing current\"\r\n210 data \"nations, kingdoms and their kings,\",\"is there something remaining?\"\r\n220 data \"the sounds of lyre or the trumpet's air\",\"where have we come from?\"\r\n230 data \"where are we going?\",\"we can't comprehend.\",\"so many pure souls\"\r\n240 data \"under the blue circle of sky\",\"burn into ashes!\"\r\n250 data \"but where is the smoke?\",\"what do you mean to the world?\"\r\n260 data \"our existence is like smoke\",\"two abysses yawn from each sides\"\r\n270 data \"you are in between\",\"the rose said: oh, my most radiant beauty\"\r\n280 data \"one who has smiled for a moment\",\"the nightingale answered\"\r\n290 data \"it's so hard to hear your voice\",\"in the autumn wind.\"\r\n300 data \"soon i must to die,\",\"there is no sign of it\",\"the cicadas cry\"\r\n310 data \"on a withered branch\",\"a crow is sitting\",\"this autumn eve\"\r\n320 data \"listen well!\",\"lo!\",\"ho!\",\"the fallen flowers\"\r\n330 data \"they return to their branch\",\"we become butterflies\"\r\n340 data \"a worm digs silently\",\"a summer river being crossed\",\"how pleasing\"\r\n350 data \"worlds in my hands\",\"stars in the sky\",\"the rolling of thunder\"\r\n360 data \"daybreak's red knife in the sky\",\"creeping eastward\",\"moving west\"\r\n370 data \"it seems far away, that thunder\",\"the scent of the wisteria\"\r\n380 data \"i become nothing\",\"i leave as i entered\",\"o snail\"\r\n390 data \"climb mount fuji\",\"but slowly, slowly!\",\"i bed farewell\"\r\n400 data \"to the departing year\",\"trust the moth and the trail\"\r\n410 data \"everything i touch\",\"with tenderness, alas\",\"pricks like bramble\"\r\n420 data \"winds howl in rage\",\"no leaves to blow\",\"the winter creeps closer\"\r\n430 data \"the leave searches for the ground\",\"swaying in the evening sun\"\r\n440 data \"i pivot to face you\",\"a leafless tree\",\"a mind bare as a birch\"\r\n450 data \"the crown has flown away\",\"shall we return, you and i?\"\r\n460 data \"i walk alone\",\"you will never hear me leave\",\"a cool fall night\"\r\n470 data \"the light staggers out of the day\",\"we fall like leaves\"\r\n480 data \"not yet a butterfly\",\"a cicada shell\",\"a song that sings itself\"\r\n490 data \"away and away and away\",\"night in the cemetery\"\r\n500 data \"moonshadows from the tombs\",\"clouds hide the moon\"\r\n510 data \"dew on the melons\",\"slain by time\",\"time, the destroyer!\"\r\n520 data \"the trail breaks in two\",\"a monk sips his morning tea\",\"it's quiet\"\r\n530 data \"the flowering of the crocus\",\"salmon arch through the air\"\r\n540 data \"the woods are dark tonight\",\"trails in the morning snow\"\r\n550 data \"awake, awake, all night\",\"the drip of a water clock\"\r\n560 data \"can you understand?\",\"will you perceive this?\"\r\n570 data \"will this fit inside your mind?\",\"the cracking of the winter ice\"\r\n580 data \"the winter is over\",\"the winter has begun\"\r\n590 data \"you feel the winter begin\",\"bitter this flavor on your tongue\"\r\n600 data \"just enough to slake the thirst\",\"a rat scurries away\"\r\n610 data \"a light even the moths cannot see\",\"a stone rolls for centuries\"\r\n620 data \"the planets gaze silently\",\"your robe clings in the rain\"\r\n630 data \"creeks warble like the thrush\",\"a splash, a ripple, then gone\"\r\n640 data \"shall i say what i see?\",\"a trail that leads back here\"\r\n650 data \"cold night, the ducks fly south\",\"the sky is sick\"\r\n660 data \"it sleeps for a while\",\"waking in the night\"\r\n670 data \"i saw my death approach, and withdrew\",\"unsheathing my sword\"\r\n680 data \"i shook my fist at the clouds\",\"the stubble on the fields\"\r\n690 data \"and then?\",\"and how?\",\"and why?\",\"and where?\"\r\n700 data \"with who will you go?\",\"winter rain\",\"the cock crows\"\r\n710 data \"newly washed by the spring\",\"ill on a journey you will not complete\"\r\n720 data \"over a withered moor\",\"my dreams wander\",\"the horses fall silent\"\r\n730 data \"flecked with mud\",\"have i been here before?\"\r\n740 data \"i have been here before\",\"you have been here before\"\r\n750 data \"don't imitate me\",\"your mind slows to a halt\"\r\n760 data \"two halves of an orange\",\"cut precisely in half\"\r\n770 data \"cut rudely in half\",\"first day of spring\",\"i keep thinking\"\r\n780 data \"about autumn\",\"when will you come, death?\"\r\n790 data \"had i known, i could have been brave\"\r\n800 data \"the snail in its warrior shell\",\"first snow\",\"last rains\"\r\n810 data \"before the night comes\",\"crossing a half-finished bridge\"\r\n820 data \"even the chickens fall silent\",\"shall you take my coat?\"\r\n830 data \"i offer you my hand\",\"you offer a hand\",\"see, i have found you out\"\r\n840 data \"the fleas and lice\",\"a pillowful of dreams\",\"a hill without a name\"\r\n850 data \"veiled in the morning mist\",\"so the end has come like this\"\r\n860 data \"when i reach for it, my sword shatters\",\"my sword shatters on death\"\r\n870 data \"death has no use for my weapons\",\"this door i cannot open\"\r\n880 data \"this door i cannot shut\",\"the wind blows my last leaves away\"\r\n890 data \"the last leaf falls from my brow\",\"i will die like a tree\"\r\n900 data \"if i must die, die like a tree\"\r\n910 data \"the husk breaks open, and i am within\"\r\n920 data \"the first breath when i break the surface\"\r\n930 data \"the surface of the water is still again\"\r\n940 data \"a flash of lightning: what is it?\"\r\n950 data \"death will soon knock on that door\",\"the dark sea at night \"\r\n960 data \"i float like a leaf on the raging sea\"\r\n970 data \"i float until the end of the ocean\",\"the thunder prepares its voice\"\r\n980 data \"heat waves shimmer on the road\",\"can you see?\",\"can you feel it?\"\r\n990 data \"above the dying grass\",\"how admirable!\",\"to see lighting\"\r\n1000 data \"life is fleeting\",\"life is long\",\"in this world of ours\"\r\n1010 data \"we eat as if there is no tomorrow\",\"what comes next?\"\r\n1020 data \"the oceans rise to meet us\",\"at last, the last breath\",\"mid-field\"\r\n1030 data \"a stranger on the road: who are you?\",\"the skylark singing\"\r\n1040 data \"attached to nothing\",\"the door moves on its hinge\"\r\n1050 data \"clock stops, holds, starts\",\"these strange messengers\"\r\n1060 data \"the arrow arrives\",\"the final blow arrives\",\"at last, laughter\"\r\n1070 data \"ah!\",\"aha!\",\"nothing, and nothing\",\"a wandering path\"\r\n1080 data \"a wandering mind\",\"how shall i go?\",\"thunder splits the sky\"\r\n1090 data \"thunder splits my mind\",\"lightning splits the oak\"\r\n1100 data \"an oak split by time\",\"shhh. can you hear it?\"\r\n1110 data \"and shall we now dance?\",\"come, take my hand\"\r\n1120 data \"come, take death's hand\",\"the hooded figure arrives\"\r\n1130 data \"beckoning from across the stream\",\"step into the cold waters\"\r\n1140 data \"a first step into the snow\",\"the pond untroubled by time\"\r\n1150 data \"a final laugh, then silence\",\"and what should i regret?\"\r\n1160 data \"it was all an illusion\",\"the wind-shaken maples\"\r\n1170 data \"the cat watches, silent\",\"turning and turning\",\"oh, oh\"\r\n1180 data \"it cannot be\",\"i fall silent\",\"the moon hides in the forest\"\r\n1190 data \"the forest hides the moon\",\"long shadows on the snow\"\r\n1200 data \"your shadow grows long\",\"your shadow reaches the woods\"\r\n1210 data \"someone watches from the woods\",\"someone is watching\"\r\n1220 data \"waves of rain\",\"the rain washes it all away\",\"no!\"\r\n1230 data \"strike now, or never\",\"let the wind cry\"\r\n1240 data \"i remember your white gown\",\"the moon rises; i fall\"\r\n1250 data \"the key turns in the lock\",\"you will not remember me\"\r\n1260 data \"i will not be remembered\",\"i grow weary of foreign cities\"\r\n1270 data \"the murmuring cities\",\"what detains you?\",\"i seek and desire\"\r\n1280 data \"a sparrow returns from long travel\"\r\n1290 data \"soul of sorrow, why this weeping?\",\"it can never be mine\"\r\n1300 data \"master of knowledge\",\"i am of small understanding\"\r\n1310 data \"wisdom, you are fled\",\"my spirit, dried and broken\",\"listen!\"\r\n1320 data \"never!\",\"leave!\",\"harken to that voice\"\r\n1330 data \"death's chariot, yoked, arrives\",\"carried away by sparrows\"\r\n1340 data \"smiling and immortal\",\"suddenly near me\",\"over the dark earth\"\r\n1350 data \"soon shall i follow\",\"suddenly in your presence\"\r\n1360 data \"suddenly, a presence felt\",\"flush with fever\"\r\n1370 data \"shaking with my end days\",\"sailors make seaward\"\r\n1380 data \"seeking the skyline\",\"fabulous islands\"\r\n1390 data \"what undiscovered worlds!\",\"the sea's secret, still\"\r\n1400 data \"returning to the cradle, still old\"\r\n1410 data \"this glowing and craving soul\",\"the foaming seas\"\r\n1420 data \"my frail heart\",\"the bending yellow grain\"\r\n1430 data \"grain thrashing in a storm\",\"humpbacked with rain\"\r\n1440 data \"we will never know why\",\"why? we will never know\"\r\n1450 data \"quick water in a channel\",\"hang garlands on the tomb\"\r\n1460 data \"beneath the pale, pale moon\",\"mirth before death\"\r\n1470 data \"scrape the strings, and let them speak!\",\"become a speaking tomb\"\r\n1480 data \"all that morning scatters, night returns\"\r\n1490 data \"in the apple boughts, the coolness\"\r\n1500 data \"i await the fluttering footfall\",\"through the twilight\"\r\n1510 data \"sleep wanders\",\"sleep will not come\",\"the purple shadows\"\r\n1520 data \"tell me, tell me!\",\"i am all impatience\",\"wait and listen\"\r\n1530 data \"watch the stars\",\"appear in the quiet blue\"\r\n1540 data \"the night is half gone\",\"the watch is nearly unwound\"\r\n1550 data \"children are called from the games\",\"the game ends\"\r\n1560 data \"the quiet of dusk\",\"i lie alone\"\r\n1570 data \"who can stop death in his course?\",\"the piping of far-off music\"\r\n1580 data \"your head thrown backwards\",\"i am a torrent\",\"love shakes my soul\"\r\n1590 data \"death cries\",\"the crickets sing, and i am awake\"\r\n1600 data \"awake while the crickets sign\",\"a message! a messenger!\"\r\n1610 data \"i fall, to never rise\",\"i hear the summons\",\"the summons comes\"\r\n1620 data \"in the faint blue foothills\",\"never to be resisted\"\r\n1630 data \"it arrives at your door\",\"the breath among the grasses\"\r\n1640 data \"the canopy of night\",\"dawn with its golden sandals\"\r\n1650 data \"untying the knot\",\"an unopened present\"\r\n1660 data \"the eyes of strangers, suspicious\",\"what detains you?\"\r\n1670 data \"who detains you?\",\"i am detained\",\"i cannot leave, cannot arrive\"\r\n1680 data \"a fever burns\",\"but will you come?\",\"the wind comes walking\"\r\n1690 data \"coolness and darkness\",\"the moving grasses\",\"o heart\",\"o mind\"\r\n1700 data \"o life\",\"o end\",\"o sky\",\"o darkness\",\"o planets\",\"o stars\"\r\n1710 data \"o rose\",\"the sad and sea-going ships\",\"this infinite regret\"\r\n1720 data \"spent like an arrow, never to return\",\"the god of the green world\"\r\n1730 data \"soft, the hill-fog\",\"i wander through life\",\"at my lover's door\"\r\n1740 data \"like torn sea-kelp in the drift\",\"the great tides of the sea!\"\r\n1750 data \"far beyond return\",\"past the portals of night\"\r\n1760 data \"i will bring you pearls\",\"when i am home from travel\"\r\n1770 data \"the journey ends\",\"our journey ends\",\"the rose-marble entry\"\r\n1780 data \"the spray of the prow in the ocean\",\"the endless night\"\r\n1790 data \"wandering the corridors, alone\",\"hearing my own heart beat\"\r\n1800 data \"the heart stops\",\"death stops all clocks\",\"the broken universe\"\r\n1810 data \"in the distance, a dark blue ravine\",\"a sigh from the oceans\"\r\n1820 data \"the narrow roads of the town, at night\"\r\n1830 data \"let love be your sea-star!\",\"knock, and enter, and do not leave\"\r\n1840 data \"how soon will my lovely days be over\",\"the tall beech-trees\"\r\n1850 data \"the bright glance of dawn\",\"testament of tears\"\r\n1860 data \"destiny and disillusion\",\"the rainbow's end\"\r\n1870 data \"a rock thrown, a splash\",\"wise beyond all words\"\r\n1880 data \"when love leads to peril\",\"man and stars and sea\"\r\n1890 data \"the broken ocean\",\"it can never be mine\",\"it will never be yours\"\r\n1900 data \"to sit at the door and wait\",\"a pageant, and a dream\"\r\n1910 data \"will all things of the earth\",\"stop!\",\"halt!\",\"depart!\"\r\n1920 data \"begone!\",\"thou! and thou!\",\"the gods have given you nothing\"\r\n1930 data \"wise as you are\",\"foolish as you are\",\"strong as the spirit can be\"\r\n1940 data \"beyond the storm of tears\",\"doubt shakes like a wind\"\r\n1950 data \"shaken like a tree by wind\",\"in a strange land i wander\"\r\n1960 data \"there is nothing left to say\",\"on the threshold, a new planet\"\r\n1970 data \"softly the wind moves\",\"the wind-shaken leaves\"\r\n1980 data \"the west wind whips\",\"travel by the wind's road\"\r\n1990 data \"the grapes ungathered\",\"the lightning strikes\",\"the fire is kindled\"\r\n2000 data \"the last embers gone\",\"ask the wandering winds\",\"ha!\",\"no one knows\"\r\n2010 data \"the braying of brazen horns\",\"the crimson sinking sun\"\r\n2020 data \"a world born in a cradle\",\"this fragile heart\"\r\n2030 data \"i heard the gods reply\",\"blue smoke on the hill\",\"an empty room\"\r\n2040 data \"footsteps in the hall\",\"why do the gods not die?\"\r\n2050 data \"tell me what life means\",\"what should we do, but love?\"\r\n2060 data \"truth itself is heard\",\"the flawless player\",\"ashes cold and grey\"\r\n2070 data \"this fond imagining\",\"in the shadows of the gods\",\"solitude smiled\"\r\n2080 data \"so many hurrying home\",\"before it ends\",\"before it begins\"\r\n2090 data \"flutter, my timorous heart\",\"expectation and doubt\",\"dread mounts\"\r\n2100 data \"death mounts his steed\",\"my heart thrown like a stone\"\r\n2110 data \"how can i say this?\",\"spring returns\",\"filled with fire\"\r\n2120 data \"the spirit of fury\",\"o fury!\",\"o death!\",\"ah, sadness again\"\r\n2130 data \"the echo of birth\",\"a roof over the soul\"\r\n2140 data \"what treasures in its hold\",\"what secrets within\"\r\n2150 data \"loosening the tongue\",\"rose-petals strewn before you\"\r\n2160 data \"glad as a dream\",\"with its maddening smile\",\"the smile of madness\"\r\n2170 data \"the blue dome of dusk\",\"the burnt city\"\r\n2180 data \"soft was the wind in the beeches\",\"nothing but sea-sounds\"\r\n2190 data \"gone like the tide\",\"have you heard the news?\",\"have you heard?\"\r\n2200 data \"the herald arrives, like dawn\",\"sad and wayward beauty\"\r\n2210 data \"pure air that feeds a forge's hunger\",\"the hungering flames\"\r\n2220 data \"the bright stain of poppies\",\"love is so strong a thing\"\r\n2230 data \"a word, a look, can kill\",\"this desolation\"\r\n2240 data \"a last glance backwards\",\"hello, traveller\",\"goodbye, traveller\"\r\n2250 data \"now you are well and truly lost\",\"ah, the hyacinths!\"\r\n2260 data \"handfuls of rain\",\"over the hills, the thunder\",\"the armies approach\"\r\n2270 data \"sounding the summons\",\"the ache of a memory\",\"the moonpulled waves\"\r\n2280 data \"the air cut by arrows\",\"a three-army clash\"\r\n2290 data \"the fire burns and burns\",\"hope dried as a riverbed\",\"o my lost love\"\r\n2300 data \"where is all that wonder?\",\"glad am i of it\"\r\n2310 data \"i can almost hear your song\",\"why have the gods left?\"\r\n2320 data \"grabbed in anger's grip\",\"held fast by time's talons\"\r\n2330 data \"carried in time's beak\",\"like one enchanted\"\r\n2340 data \"a rock, a stone, a boulder\",\"an immovable stone\"\r\n2350 data \"a world hangs on a branch\",\"an unpicked hope, yet ripe\"\r\n2360 data \"then i knew you\",\"ah, then i knew you\",\"can you truly see?\"\r\n2370 data \"can you see it?\",\"there i saw you, again\",\"the passers-by look down\"\r\n2380 data \"unsullied, wild, and delicate\",\"unbroken as a dandelion in a storm\"\r\n2390 data \"no more foolish than children\",\"when the spring swallows return\"\r\n2400 data \"the swallows will never return\",\"the horses surge\",\"the armies surge\"\r\n2410 data \"cover the sun with your hand\",\"the racing billows plunge and bloom\"\r\n2420 data \"a snowflake melts on your shoulder\",\"the ice, unmelted\"\r\n2430 data \"this golden summer\",\"falling and surging\",\"ceaseless and eternal\"\r\n2440 data \"the quick and the dead\",\"older than zeus\",\"what daydream is this?\"\r\n2450 data \"and none remembers, none\",\"the mighty sea-sounds\"\r\n2460 data \"seafoam like horses\",\"poseidon pounds the sands\"\r\n2470 data \"the forge glows in the night\",\"the glass speaks\"\r\n2480 data \"trembling before me\",\"the hour at last\",\"at last it comes\"\r\n2490 data \"it comes! at last!\",\"a flurry in the heart\"\r\n2500 data \"hark!\",\"hark! on the threshold!\"\r\n2510 data \"folding like paper in skillful hands\",\"once more into the mountains\"\r\n2520 data \"once more into the rain\",\"what burden of sorrow\",\"a leaping frog\"\r\n2530 data \"nevermore to return\",\"nevermore to leave\"\r\n2540 data \"gone like all things mortal\",\"now the song is song\"\r\n2550 data \"now the song is over\",\"a purple-dark ravine\"\r\n2560 data \"a ravine deep as sorrow\",\"you are alone now\",\"i am alone now\"\r\n2570 data \"no!\",\"no!\",\"no!\",\"no!\",\"yes!\",\"yes!\",\"yes!\"\r\n2580 for i=1 to ll:read ll$(i):next i\r\n2590 for i=1 to 500:print mid$(str$(i),2);\".\":print:print\r\n2600 print ll$(rnd(1)*ll+1):print ll$(rnd(1)*ll+1):print ll$(rnd(1)*ll+1)\r\n2610 for j=1 to 4000:next j:print:print:next i","sourcePath":"external/github.com/robfromoz_C64-BASIC/auto poetry.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/auto%20poetry.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/binary tree maze.txt","language":"basic","vector":[0.011809227988123894,0.04133229702711105,0,0,-0.005904613994061947,0,0.05904613807797432,0,0,-0.1653291881084442,-0.011809227988123894,0,0,0.005904613994061947,0,-0.011809227988123894,-0.02952306903898716,0,0.3188491463661194,0.020666148513555527,0,-0.09447382390499115,-0.008856920525431633,0,0,0.05904613807797432,0,-0.011809227988123894,-0.01476153451949358,0,0,0.09152151644229889,0,0,-0.023618455976247787,0,0,0.008856920525431633,0,0,0,0,0.03542768210172653,0.023618455976247787,0,0,-0.008856920525431633,0,0,0.005904613994061947,0,-0.011809227988123894,0,0,0.1062830463051796,0.07675997912883759,0,0,-0.07675997912883759,0,0.011809227988123894,0.01476153451949358,0,-0.011809227988123894,-0.020666148513555527,0,0.05904613807797432,0.011809227988123894,0,-0.023618455976247787,-0.03837998956441879,0,0.03542768210172653,0.0029523069970309734,0,0,0,0,0.023618455976247787,0.011809227988123894,0,-0.047236911952495575,0,0,0.023618455976247787,0,0,-0.1653291881084442,-0.03542768210172653,0,0.011809227988123894,0,0,-0.011809227988123894,-0.03247537463903427,0,0,0.011809227988123894,0,-0.011809227988123894,-0.005904613994061947,0,0.20075686275959015,0.04133229702711105,0,-0.023618455976247787,-0.12990149855613708,0,0,0.005904613994061947,0,-0.011809227988123894,-0.005904613994061947,0,0,0.16237688064575195,0,-0.023618455976247787,-0.047236911952495575,0,0,0,0,-0.1062830463051796,-0.011809227988123894,0,0.03542768210172653,0,0,-0.14171072840690613,-0.0029523069970309734,0,0,0.005904613994061947,0,-0.1653291881084442,-0.0029523069970309734,0,0,0.0265707615762949,0,0,-0.0029523069970309734,0,0.011809227988123894,0.005904613994061947,0,-0.0826645940542221,-0.01476153451949358,0,0.05904613807797432,0.05609383061528206,0,0,0,0,0.03542768210172653,0.01476153451949358,0,-0.011809227988123894,-0.005904613994061947,0,0.09447382390499115,0.03247537463903427,0,-0.011809227988123894,-0.011809227988123894,0,0,0.05609383061528206,0,-0.36608606576919556,-0.03542768210172653,0,0.14171072840690613,0.01476153451949358,0,-0.023618455976247787,-0.023618455976247787,0,0,0.01476153451949358,0,0,-0.09152151644229889,0,0.023618455976247787,0.005904613994061947,0,-0.09447382390499115,-0.005904613994061947,0,0.03542768210172653,0.005904613994061947,0,-0.011809227988123894,-0.005904613994061947,0,0.1653291881084442,0.10037843137979507,0,-0.03542768210172653,-0.023618455976247787,0,0.3188491463661194,0,0,-0.023618455976247787,-0.017713841050863266,0,0.011809227988123894,0.0029523069970309734,0,0,-0.011809227988123894,0,0.023618455976247787,0.01476153451949358,0,-0.03542768210172653,-0.09447382390499115,0,0,0.017713841050863266,0,0,-0.07380767166614532,0,0,0.07971228659152985,0,-0.023618455976247787,-0.1062830463051796,0,0.03542768210172653,0,0,-0.0826645940542221,-0.0029523069970309734,0,0.023618455976247787,0.005904613994061947,0,-0.0826645940542221,-0.04133229702711105,0,0.011809227988123894,0.02952306903898716,0,0,0,0,0,0.0265707615762949,0,0,-0.005904613994061947,0,0,0.047236911952495575,0,-0.047236911952495575,-0.008856920525431633,0,0,0.0265707615762949,0,-0.03542768210172653,-0.18304303288459778,0,0.023618455976247787,0.07380767166614532,0,-0.023618455976247787,-0.01476153451949358,0,0.047236911952495575,0.01476153451949358,0,-0.1889476478099823,-0.005904613994061947,0,0.023618455976247787,0.020666148513555527,0,0,-0.047236911952495575,0,0.011809227988123894,0.023618455976247787,0,0,-0.017713841050863266,0,0,0.08856920897960663,0,-0.023618455976247787,-0.05904613807797432,0,0,0.16237688064575195,0,-0.011809227988123894,-0.01476153451949358,0,0.023618455976247787,0.005904613994061947,0,-0.011809227988123894,-0.0029523069970309734,0,0.03542768210172653,0.06199844554066658,0,-0.011809227988123894,-0.023618455976247787,0,0.023618455976247787,0,0,-0.03542768210172653,-0.0029523069970309734,0,0.011809227988123894,0,0,0,-0.017713841050863266,0,0.03542768210172653,0.017713841050863266,0,0,-0.0679030567407608,0,0.011809227988123894,0.020666148513555527,0,0,-0.07675997912883759,0,0.15351995825767517,0.005904613994061947,0,-0.14171072840690613,-0.04133229702711105,0,0.011809227988123894,0,0,0,0,0,0.011809227988123894,0.0029523069970309734,0,-0.03542768210172653,-0.044284604489803314,0,0,0.01476153451949358,0,0,-0.017713841050863266,0,0.023618455976247787,0.020666148513555527,0,0,-0.01476153451949358,0,0,0.047236911952495575,0,-0.047236911952495575,-0.09742613136768341,0,0,0.011809227988123894,0,-0.047236911952495575,-0.09152151644229889,0],"text":"10 rem binary tree maze algorithm by rob vonk 2023\r\n20 rem from \"mazes for programmers\" by jamis buck, 2015, pages 6-8\r\n30 rem randomise and set maximum dimensions of maze\r\n40 rem both numbers must be odd or maze won't display properly\r\n50 rem works better with mx<=21 and my<=39\r\n60 z=rnd(-ti):mx=39:my=21:dim m$(my,mx)\r\n70 rem create grid with cell spaces surrounded by # fences\r\n80 for i=1 to my:if i/2=int(i/2) then 100\r\n90 for j=1 to mx:m$(i,j)=\"#\":next j:goto 130\r\n100 for j=1 to mx:if j/2=int(j/2) then m$(i,j)=\" \":goto 120\r\n110 m$(i,j)=\"#\"\r\n120 next j\r\n130 next i:x=2:y=my-1:rem start at bottom left corner of grid\r\n140 rem carve tunnel right or up?\r\n150 if rnd(1)<.5 then 200\r\n160 if x=mx-1 then 200\r\n170 rem carve tunnel right\r\n180 m$(y,x+1)=\" \":x=x+2:goto 150\r\n190 rem carve tunnel up\r\n200 m$(y-1,x)=\" \":if x<mx-1 then x=x+2:goto 150\r\n210 rem if all the way to the right, make our way up to next row\r\n220 y=y-2:if y>2 then x=2:goto 150\r\n230 rem at top? carve horizontal tunnel\r\n240 for i=2 to mx-2:m$(y,i)=\" \":next i\r\n250 rem display maze\r\n260 print\"{clear}{white}\":poke 53280,0:poke 53281,0\r\n270 for i=1 to my:for j=1 to mx:print m$(i,j);:next j:print:next i","sourcePath":"external/github.com/robfromoz_C64-BASIC/binary tree maze.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/binary%20tree%20maze.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/birthday.txt","language":"basic","vector":[0.00857239868491888,0.019287897273898125,0,0,-0.01071549765765667,0,0.051434390246868134,0.013930147513747215,0,-0.00857239868491888,-0.006429298780858517,0,0.00857239868491888,0.012858597561717033,0,-0.01714479736983776,-0.02786029502749443,0,0.18002036213874817,0.01714479736983776,0,-0.00428619934245944,-0.00857239868491888,0,0.00857239868491888,0.01714479736983776,0,0,-0.00214309967122972,0,0.00428619934245944,0.0771515890955925,0,0,-0.01714479736983776,0,0.00857239868491888,0.00107154983561486,0,-0.012858597561717033,-0.0032146493904292583,0,0.25288575887680054,0.025717195123434067,0,-0.00428619934245944,-0.006429298780858517,0,0,0.00428619934245944,0,-0.11144118010997772,-0.00857239868491888,0,0.13287217915058136,0.019287897273898125,0,0,-0.030003394931554794,0,0.012858597561717033,0.009643948636949062,0,-0.012858597561717033,-0.01714479736983776,0,0.11572737991809845,0.011787047609686852,0,-0.025717195123434067,-0.00857239868491888,0,0.01714479736983776,0.00214309967122972,0,-0.025717195123434067,-0.005357748828828335,0,0,0.02143099531531334,0,-0.06429298967123032,-0.02786029502749443,0,0.02143099531531334,0.00428619934245944,0,-0.14144457876682281,-0.036432694643735886,0,0.01714479736983776,0.012858597561717033,0,-0.03857579454779625,-0.02678874507546425,0,0,0.006429298780858517,0,-0.03428959473967552,-0.006429298780858517,0,0.047148190438747406,0.02786029502749443,0,-0.02143099531531334,-0.1607324779033661,0,0.047148190438747406,0.00428619934245944,0,-0.02143099531531334,-0.031074944883584976,0,0.00428619934245944,0.095367930829525,0,-0.012858597561717033,-0.0032146493904292583,0,0,0.009643948636949062,0,-0.047148190438747406,-0.00214309967122972,0,0.15858937799930573,0.00857239868491888,0,-0.1242997795343399,-0.00214309967122972,0,0.025717195123434067,0.00857239868491888,0,-0.030003394931554794,-0.007500848732888699,0,0,0.13180062174797058,0,-0.00857239868491888,-0.00214309967122972,0,0.00857239868491888,0.018216347321867943,0,-0.107154980301857,-0.06214988976716995,0,0.04286199063062668,0.06643608957529068,0,0,-0.00107154983561486,0,0.01714479736983776,0.018216347321867943,0,-0.025717195123434067,-0.006429298780858517,0,0.01714479736983776,0.05893523991107941,0,-0.012858597561717033,-0.01714479736983776,0,0.00857239868491888,0.018216347321867943,0,-0.16716177761554718,-0.023574095219373703,0,0.03428959473967552,0.00214309967122972,0,-0.03428959473967552,-0.036432694643735886,0,0.012858597561717033,0.01607324741780758,0,-0.00857239868491888,-0.07393693923950195,0,0,0.009643948636949062,0,-0.09429638087749481,-0.019287897273898125,0,0.03428959473967552,0.00857239868491888,0,-0.025717195123434067,-0.024645645171403885,0,0.025717195123434067,0.024645645171403885,0,-0.00857239868491888,-0.02786029502749443,0,0.16287557780742645,0.025717195123434067,0,-0.01714479736983776,-0.02250254526734352,0,0.00428619934245944,0.00428619934245944,0,-0.00428619934245944,-0.006429298780858517,0,0.00857239868491888,0.012858597561717033,0,-0.025717195123434067,-0.025717195123434067,0,0.00857239868491888,0.08143778890371323,0,0,-0.06643608957529068,0,0,0.057863689959049225,0,-0.03428959473967552,-0.01607324741780758,0,0.02143099531531334,0.00214309967122972,0,-0.03428959473967552,-0.00428619934245944,0,0.00428619934245944,0.005357748828828335,0,-0.00857239868491888,-0.0535774901509285,0,0,0.023574095219373703,0,-0.02143099531531334,-0.0032146493904292583,0,0.01714479736983776,0.07179383933544159,0,-0.051434390246868134,-0.013930147513747215,0,0.00857239868491888,0.00857239868491888,0,-0.00857239868491888,-0.03428959473967552,0,0.03428959473967552,0.03750424459576607,0,-0.012858597561717033,-0.08358088880777359,0,0.00857239868491888,0.020359447225928307,0,-0.025717195123434067,-0.020359447225928307,0,0.00857239868491888,0.035361144691705704,0,-0.6257851123809814,-0.01071549765765667,0,0,0.00428619934245944,0,-0.09001018106937408,-0.0535774901509285,0,0.02143099531531334,0.01714479736983776,0,-0.00428619934245944,-0.028931844979524612,0,0.02143099531531334,0.018216347321867943,0,-0.00857239868491888,-0.03964734449982643,0,0.025717195123434067,0.08572398126125336,0,-0.00857239868491888,-0.018216347321867943,0,0.01714479736983776,0.00214309967122972,0,-0.00428619934245944,-0.01071549765765667,0,0.02143099531531334,0.01607324741780758,0,0,-0.018216347321867943,0,0.07286538928747177,0.01607324741780758,0,-0.025717195123434067,-0.005357748828828335,0,0,0.00107154983561486,0,-0.00428619934245944,-0.020359447225928307,0,0.047148190438747406,0.01071549765765667,0,0,-0.028931844979524612,0,0.00428619934245944,0.041790444403886795,0,-0.01714479736983776,-0.035361144691705704,0,0.03857579454779625,0.006429298780858517,0,-0.04286199063062668,-0.018216347321867943,0,0.00857239868491888,0.00857239868491888,0,-0.01714479736983776,-0.02786029502749443,0,0.02143099531531334,0.006429298780858517,0,-0.012858597561717033,-0.031074944883584976,0,0.00428619934245944,0.02786029502749443,0,0,-0.006429298780858517,0,0.03428959473967552,0.00857239868491888,0,-0.030003394931554794,-0.019287897273898125,0,0.00428619934245944,0.00857239868491888,0,-0.06857918947935104,-0.3161071836948395,0,0.00857239868491888,0.00214309967122972,0,-0.047148190438747406,-0.08679553121328354,0],"text":"10 rem birthday r vonk\r\n20 rem from \"the pocket computer game book #2\" by e schlossberg and j brockman\r\n30 rem 1977, p. 26\r\n35 poke 53280,6:poke 53281,6:poke 646,1\r\n40 print\"“\":print\"this game is called 'birthday'.\"\r\n50 print:print\"the objective of this game is to\"\r\n60 print\"reverse a multi-digit number in less\"\r\n70 print\"than ten steps.\"\r\n80 print:print\"enter your year, day, and month of your\"\r\n90 print\"birth in that order. if your birthday or\"\r\n100 print\"your birth month is a single digit,\"\r\n110 print\"i.e. 9, enter 09.\"\r\n120 print:print\"by adding, subtracting, multiplying, or\"\r\n130 print\"dividing using no larger than two-digit\"\r\n140 print\"numbers, see if you can reverse the\"\r\n150 print\"digits of the number. for example: if\"\r\n160 print\"your year of birth is 45 (i.e. 1945),\"\r\n170 print\"your day of birth 19, and your month of\"\r\n180 print\"birth 11, then your number would be\"\r\n190 print\"451911. you want to arrive at 119154\"\r\n200 print\"using addition, subtraction,\"\r\n210 print\"multiplication, and division with two-\"\r\n220 print\"digit numbers in less than ten steps.\"\r\n230 print\"                              hit a key\"\r\n240 get i$:if i$=\"\" then 240\r\n250 print\"“\":print\"you may use decimal numbers (i.e. 4.4).\"\r\n260 print\"if you succeed in less than five steps,\"\r\n270 print\"you are a champ.\"\r\n280 for i=1 to 19:print:next i:print\"                              hit a key\"\r\n290 get i$:if i$=\"\" then 290\r\n300 print\"“\":print\"ok, enter your date of birth as yymmdd\"\r\n310 input b$:b=val(b$)\r\n320 if b>99999 and b<100000 then 370\r\n330 if b=int(b) then 370\r\n340 if mid$(b$,3,2)>\"00\" and mid$(b$,3,2)<\"13\" then 370\r\n350 if mid$(b$,5,2)>\"00\" and mid$(b$,5,2)<\"32\" then 370\r\n360 print:print\"invalid date, please re-enter.\":goto 310\r\n370 r$=\"\":for i=6 to 1 step -1:r$=r$+mid$(b$,i,1):next i:r=val(r$)\r\n380 print\"“\":print\"your number is\";b;\"and you must get\"\r\n390 print\"to\";r;\"in ten moves or less.\":t=0\r\n400 print:print\"enter an operation and a number\"\r\n410 print\"(e.g. /5)\";\r\n420 input i$:n$=mid$(i$,2):n=val(n$):o$=left$(i$,1)\r\n430 if (left$(n$,1)=\".\" or mid$(n$,2,1)=\".\") and len(n$)=3 then 460\r\n440 if n>0 and n<100 then 460\r\n450 print:print\"invalid number. must have 1-2 digits.\":goto 420\r\n460 if o$=\"*\" or o$=\"+\" or o$=\"-\" or o$=\"/\" then 480\r\n470 print\"operation must be (*-=/).\":goto 420\r\n480 print:print\"ok,\";b;o$;n;\"makes\";\r\n490 if o$=\"*\" then b=b*n\r\n500 if o$=\"+\" then b=b+n\r\n510 if o$=\"-\" then b=b-n\r\n520 if o$=\"/\" then b=b/n\r\n530 if b<>int(b) then b=int(b*100)/100\r\n540 print b:t=t+1:if t=10 or b=r then 560\r\n550 print\"you have\";10-t;\"moves left.\":goto 400\r\n560 if b=r then 590\r\n570 print:print\"hard luck, you didn't manage to reverse\"\r\n580 print\"your number. better luck next time.\":print:goto 610\r\n590 print:print\"well done! you reversed your number!\"\r\n600 print:print\"it took you\";t;\"moves.\"\r\n610 input\"would you like to play again (y/n)\";i$:if i$<>\"y\" and i$<>\"n\" then 610\r\n620 if i$=\"n\" then end\r\n630 input\"use the same birth date (y/n)\";i$:if i$<>\"y\" and i$<>\"n\" then 630\r\n640 if i$=\"n\" then 300\r\n650 b=val(b$):goto 370","sourcePath":"external/github.com/robfromoz_C64-BASIC/birthday.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/birthday.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/bowl and score.txt","language":"basic","vector":[0.017634261399507523,0.018736403435468674,0,0,-0.01653211936354637,0,0.06171991676092148,0.006612848024815321,0,-0.004408565349876881,-0.012123554944992065,0,0.004408565349876881,0.004408565349876881,0,-0.03967708721756935,-0.013225696049630642,0,0.3218252658843994,0.0385749489068985,0,-0.17634262144565582,-0.020940685644745827,0,0.004408565349876881,0.028655674308538437,0,0,-0.004408565349876881,0,0,0.09037558734416962,0,-0.004408565349876881,-0.02314496785402298,0,0,0,0,-0.026451392099261284,-0.0022042826749384403,0,0.21601970493793488,0.03196210041642189,0,-0.008817130699753761,-0.007714989595115185,0,0.004408565349876881,0.011021413840353489,0,-0.07053704559803009,-0.0022042826749384403,0,0.14107409119606018,0.07274132966995239,0,-0.004408565349876881,-0.06502634286880493,0,0.03085995838046074,0.009919271804392338,0,-0.11021413654088974,-0.01542997919023037,0,0.0749456137418747,0.007714989595115185,0,-0.05290278419852257,-0.025349250063300133,0,0.035268522799015045,0,0,-0.004408565349876881,-0.02424710988998413,0,0.004408565349876881,0.013225696049630642,0,-0.0793541744351387,-0.006612848024815321,0,0.008817130699753761,0.0011021413374692202,0,-0.2512882351875305,-0.028655674308538437,0,0,0.004408565349876881,0,-0.022042827680706978,-0.022042827680706978,0,0,0.011021413840353489,0,-0.004408565349876881,-0.0011021413374692202,0,0.044085655361413956,0.03196210041642189,0,-0.026451392099261284,-0.09588629752397537,0,0,0.0033064240124076605,0,-0.013225696049630642,-0.03306423872709274,0,0.03967708721756935,0.163116917014122,0,-0.013225696049630642,-0.08817131072282791,0,0.004408565349876881,0.0033064240124076605,0,-0.0749456137418747,-0.004408565349876881,0,0.06171991676092148,0.0022042826749384403,0,-0.2556968033313751,-0.0022042826749384403,0,0.004408565349876881,0.01542997919023037,0,-0.0749456137418747,-0.022042827680706978,0,0,0.10911199450492859,0,0,-0.0055107069201767445,0,0.004408565349876881,0.04188137128949165,0,-0.11462269723415375,-0.0385749489068985,0,0.09698843955993652,0.07053704559803009,0,0,-0.0033064240124076605,0,0.004408565349876881,0.026451392099261284,0,-0.008817130699753761,-0.05510706827044487,0,0.026451392099261284,0.0407792292535305,0,-0.017634261399507523,-0.027553534135222435,0,0.008817130699753761,0.05290278419852257,0,-0.2556968033313751,-0.03306423872709274,0,0.057311348617076874,0.004408565349876881,0,-0.06612847745418549,-0.04188137128949165,0,0.017634261399507523,0.007714989595115185,0,-0.013225696049630642,-0.13776767253875732,0,0,0,0,-0.05290278419852257,-0.02314496785402298,0,0.03085995838046074,0.0055107069201767445,0,-0.013225696049630642,-0.004408565349876881,0,0.10580556839704514,0.022042827680706978,0,-0.008817130699753761,-0.026451392099261284,0,0.044085655361413956,0.0022042826749384403,0,-0.06612847745418549,-0.01542997919023037,0,0,0.02424710988998413,0,0,-0.006612848024815321,0,0.03967708721756935,0.017634261399507523,0,-0.03085995838046074,-0.0385749489068985,0,0.017634261399507523,0.03196210041642189,0,0,-0.13776767253875732,0,0.008817130699753761,0.08266060054302216,0,-0.013225696049630642,-0.081558458507061,0,0.022042827680706978,0.0011021413374692202,0,-0.044085655361413956,0,0,0.004408565349876881,0.0022042826749384403,0,-0.004408565349876881,-0.058413490653038025,0,0,0.04849421977996826,0,0,-0.006612848024815321,0,0.008817130699753761,0.05620921030640602,0,-0.008817130699753761,-0.006612848024815321,0,0.004408565349876881,0.014327837154269218,0,-0.008817130699753761,-0.026451392099261284,0,0,0.03967708721756935,0,-0.017634261399507523,-0.12895053625106812,0,0.008817130699753761,0.036370664834976196,0,-0.004408565349876881,-0.06061777472496033,0,0.004408565349876881,0.027553534135222435,0,-0.3747280538082123,-0.019838543608784676,0,0.004408565349876881,0.008817130699753761,0,-0.05290278419852257,-0.027553534135222435,0,0.008817130699753761,0.01653211936354637,0,0,-0.026451392099261284,0,0.004408565349876881,0.05510706827044487,0,-0.017634261399507523,-0.06723061949014664,0,0.008817130699753761,0.022042827680706978,0,0,-0.0385749489068985,0,0.06171991676092148,0,0,-0.035268522799015045,-0.0011021413374692202,0,0.004408565349876881,0.03085995838046074,0,-0.004408565349876881,-0.022042827680706978,0,0.1587083488702774,0.008817130699753761,0,-0.013225696049630642,-0.0033064240124076605,0,0,0.014327837154269218,0,-0.004408565349876881,-0.009919271804392338,0,0.044085655361413956,0.012123554944992065,0,0,-0.0407792292535305,0,0.013225696049630642,0.017634261399507523,0,-0.004408565349876881,-0.06612847745418549,0,0.14107409119606018,0.0011021413374692202,0,-0.12343983352184296,-0.018736403435468674,0,0.008817130699753761,0.004408565349876881,0,-0.008817130699753761,-0.004408565349876881,0,0.013225696049630642,0.0033064240124076605,0,-0.04849421977996826,-0.03306423872709274,0,0,0.02424710988998413,0,-0.04849421977996826,-0.008817130699753761,0,0.022042827680706978,0.0055107069201767445,0,-0.008817130699753761,-0.004408565349876881,0,0,0.008817130699753761,0,-0.05290278419852257,-0.19177259504795074,0,0.008817130699753761,0.004408565349876881,0,-0.035268522799015045,-0.09037558734416962,0],"text":"10 rem bowl and score by rob vonk 2020\r\n20 rem based on dice game of same name by e.s. lowe, 1962\r\n30 rem scoring routine by paul dunn\r\n40 print\"“\":poke 53280,0:poke 53281,0:poke 646,1\r\n50 print\"this game is called 'bowl and score'.\"\r\n60 print:print\"this game consists of ten regular dice\"\r\n70 print\"with a picture of a bowling pin on one\"\r\n80 print\"side (denoted by 'o') and blanks on the\"\r\n90 print\"other five (denoted by '-'). the player\"\r\n100 print\"rolls all the dice. any blanks are set\"\r\n110 print\"aside and represent the number of pins\"\r\n120 print\"knocked down with the first ball. the\"\r\n130 print\"remaining dice are rolled and scored\"\r\n140 print\"the same way. this represents one\"\r\n150 print\"frame. this continues for ten frames.\"\r\n160 print\"score is figured just like regular\"\r\n170 print\"bowling.\"\r\n180 print:print\"hit a key\"\r\n190 get i$:if i$<>\"\" then 190\r\n200 get i$:if i$=\"\" then 200\r\n210 print\"“\":dim p(10),s(21):poke 53280,0:poke 53281,0:poke 646,1:z=rnd(-ti)\r\n220 for i=1 to 21:s(i)=0:next i\r\n230 for f=1 to 10:b=1:s=0:gosub 460:gosub 490\r\n240 gosub 610:print:print tab(8);\"frame\";f;\"ball\";b;\"score\";sc\r\n250 print:print tab(11);\"hit a key to bowl\"\r\n260 get i$:if i$<>\"\" then 260\r\n270 get i$:if i$=\"\" then 270\r\n280 gosub 580:gosub 480:s=s+p:s(f*2-2+b)=p:if f=10 then 330\r\n290 if b=2 or (s=10 and b=1) then 410\r\n300 b=b+1:goto 240\r\n310 rem bonus ball routine for 10th frame\r\n320 rem if strike on first ball, two more balls\r\n330 if b=1 and s=10 then print tab(13);\"bowl two more!\"\r\n340 if b=1 and s=10 then s=0:gosub 460:gosub 480:goto 300\r\n350 rem if strike or spare on second ball, one more ball\r\n360 if b=2 and s(19)=10 and s(20)<10 then print tab(13);\"bowl one more!\":s=0\r\n370 if b=2 and s(19)=10 and s(20)<10 then 300\r\n380 if b=2 and (s(19)=10 or s(19)+s(20)=10) then print tab(13);\"bowl one more!\"\r\n390 if b=2 and (s(19)=10 or s(19)+s(20)=10) then s=0:gosub 460:gosub 480:goto 300\r\n400 if b=1 then 300\r\n410 next f:gosub 610:print:print tab(9);\"your final score is\";sc\r\n420 print:print\"another game (y/n)\";\r\n430 input i$:if i$<>\"y\" and i$<>\"n\" then print\"y or n please.\":goto 430\r\n440 if i$=\"y\" then 220\r\n450 end\r\n460 rem set up pins\r\n470 for i=1 to 10:p(i)=1:next i:return\r\n480 rem display pins\r\n490 print:print tab(17);:for i=7 to 10:if p(i)=1 then print\"o \";:goto 510\r\n500 print\"- \";\r\n510 next i:print:print tab(18);:for i=4 to 6:if p(i)=1 then print\"o \";:goto 530\r\n520 print\"- \";\r\n530 next i:print:print tab(19);:for i=2 to 3:if p(i)=1 then print\"o \";:goto 550\r\n540 print\"- \";\r\n550 next i:print:print tab(20);:if p(1)=1 then print\"o\":goto 570\r\n560 print\"-\"\r\n570 print:return\r\n580 rem bowl ball\r\n590 p=0:for i=1 to 10:if int(rnd(1)*6+1)<6 and p(i)=1 then p(i)=0:p=p+1\r\n600 next i:return\r\n610 rem scoring calculator\r\n620 sc=0:for i=1 to 17 step 2:sc=sc+s(i)+s(i+1)\r\n630 if s(i)=10 then sc=sc+s(i+2)+s(i+3)+(s(i+4)*-(s(i+3)=0)):goto 660\r\n640 rem remove '-' if true is 1 on your computer instead of -1\r\n650 if s(i)+s(i+1)=10 then sc=sc+s(i+2)\r\n660 next i:sc=sc+s(19)+s(20)+s(21):return","sourcePath":"external/github.com/robfromoz_C64-BASIC/bowl and score.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/bowl%20and%20score.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/card trick.txt","language":"basic","vector":[0,0.01541061606258154,0,0,-0.019813649356365204,0,0.03522426635026932,0,0,-0.00880606658756733,-0.013209099881350994,0,0.00880606658756733,0.011007582768797874,0,-0.00880606658756733,-0.01761213317513466,0,0.20253953337669373,0.04182881489396095,0,-0.07044853270053864,-0.006604549940675497,0,0.00880606658756733,0.004403033293783665,0,-0.00880606658756733,-0.013209099881350994,0,0,0.0836576297879219,0,0,-0.019813649356365204,0,0,0,0,-0.00880606658756733,0,0,0.2553759217262268,0.024216683581471443,0,0,-0.013209099881350994,0,0,0.019813649356365204,0,-0.07044853270053864,0,0,0.088060662150383,0.02201516553759575,0,0,-0.02201516553759575,0,0.00880606658756733,0.00880606658756733,0,-0.0440303310751915,-0.011007582768797874,0,0.01761213317513466,0.004403033293783665,0,-0.07925459742546082,-0.019813649356365204,0,0.00880606658756733,0.0022015166468918324,0,0,-0.013209099881350994,0,0,0.013209099881350994,0,-0.07925459742546082,-0.006604549940675497,0,0,0,0,-0.11447886377573013,-0.05063488334417343,0,0,0.006604549940675497,0,-0.01761213317513466,-0.024216683581471443,0,0.01761213317513466,0.0022015166468918324,0,-0.00880606658756733,-0.004403033293783665,0,0.01761213317513466,0.019813649356365204,0,-0.03522426635026932,-0.1717182993888855,0,0.03522426635026932,0.004403033293783665,0,-0.00880606658756733,-0.026418199762701988,0,0,0.10567279905080795,0,-0.0440303310751915,-0.04182881489396095,0,0.00880606658756733,0.004403033293783665,0,-0.0440303310751915,-0.011007582768797874,0,0.07925459742546082,0.004403033293783665,0,-0.088060662150383,0,0,0.0440303310751915,0.01541061606258154,0,-0.03522426635026932,-0.006604549940675497,0,0,0.12988947331905365,0,0,-0.004403033293783665,0,0,0.013209099881350994,0,-0.026418199762701988,-0.04182881489396095,0,0.03522426635026932,0.0440303310751915,0,-0.00880606658756733,0,0,0.01761213317513466,0.01541061606258154,0,0,-0.02201516553759575,0,0.03522426635026932,0.01541061606258154,0,-0.01761213317513466,-0.03962729871273041,0,0.00880606658756733,0.01541061606258154,0,-0.07044853270053864,-0.00880606658756733,0,0.026418199762701988,0.004403033293783665,0,-0.026418199762701988,-0.04182881489396095,0,0,0.0022015166468918324,0,0,-0.0638439804315567,0,0.00880606658756733,0,0,-0.07044853270053864,-0.011007582768797874,0,0.0440303310751915,0.011007582768797874,0,-0.00880606658756733,-0.006604549940675497,0,0,0.00880606658756733,0,-0.01761213317513466,-0.04182881489396095,0,0.22895772755146027,0.019813649356365204,0,-0.026418199762701988,-0.011007582768797874,0,0,0,0,0,-0.02201516553759575,0,0.00880606658756733,0.013209099881350994,0,-0.052836399525403976,-0.024216683581471443,0,0.026418199762701988,0.04182881489396095,0,0,-0.04623184725642204,0,0,0.07265004515647888,0,-0.01761213317513466,-0.03522426635026932,0,0,0.0022015166468918324,0,-0.026418199762701988,-0.0022015166468918324,0,0,0,0,-0.026418199762701988,-0.013209099881350994,0,0.00880606658756733,0.01761213317513466,0,-0.03522426635026932,-0.006604549940675497,0,0.03522426635026932,0.07265004515647888,0,-0.00880606658756733,0,0,0,0.01761213317513466,0,-0.00880606658756733,-0.026418199762701988,0,0.00880606658756733,0.026418199762701988,0,-0.0440303310751915,-0.03522426635026932,0,0.00880606658756733,0.01541061606258154,0,-0.01761213317513466,-0.024216683581471443,0,0.00880606658756733,0.004403033293783665,0,-0.6692610383033752,-0.019813649356365204,0,0,0.006604549940675497,0,-0.088060662150383,-0.03522426635026932,0,0.01761213317513466,0.02201516553759575,0,-0.026418199762701988,-0.024216683581471443,0,0,0,0,-0.026418199762701988,-0.03742578253149986,0,0.01761213317513466,0.11447886377573013,0,0,-0.01761213317513466,0,0.06164246425032616,0.004403033293783665,0,-0.00880606658756733,-0.0022015166468918324,0,0.00880606658756733,0.00880606658756733,0,-0.01761213317513466,-0.03522426635026932,0,0.052836399525403976,0.02201516553759575,0,-0.026418199762701988,-0.0022015166468918324,0,0,0,0,0,-0.019813649356365204,0,0.0440303310751915,0.0022015166468918324,0,0,-0.024216683581471443,0,0.026418199762701988,0.019813649356365204,0,0,-0.03522426635026932,0,0.0440303310751915,0.01541061606258154,0,-0.03522426635026932,-0.026418199762701988,0,0.01761213317513466,0.01761213317513466,0,-0.00880606658756733,-0.004403033293783665,0,0.00880606658756733,0,0,-0.026418199762701988,-0.011007582768797874,0,0,0.013209099881350994,0,-0.00880606658756733,-0.024216683581471443,0,0.00880606658756733,0.00880606658756733,0,-0.00880606658756733,-0.00880606658756733,0,0,0.013209099881350994,0,-0.09686673432588577,-0.3390335738658905,0,0.00880606658756733,0.0022015166468918324,0,-0.026418199762701988,-0.06164246425032616,0],"text":"10 rem card trick\r\n20 rem from \"how to entertain with your pocket calculator\" by o d jefimenko\r\n30 poke 53280,0:poke 53281,0:poke 646,1\r\n40 dim c$(9):for i=1 to 9:read c$(i):next i\r\n50 data \"n ace\",\" jack\",\" queen\",\" king\",\" five\",\" six\",\" seven\",\"n eight\",\" nine\"\r\n60 print\"“\":print\"this game is called 'card trick'.\":print\r\n70 print\"draw two cards from a deck that\"\r\n80 print\"contains only the aces, 5's, 6's, 7's,\"\r\n90 print\"8's, 9's, jacks, queens, and kings.\"\r\n100 print\"count the number cards by their numbers\"\r\n110 print\"and the face cards as 2, 3, and 4,\"\r\n120 print\"respectively.\"\r\n130 print:print\"multiply the number of your first card\"\r\n140 print\"by 5, add 7, multiply by 2, and add the\"\r\n150 print\"number of the second card.\"\r\n160 print:print\"once you've done all that, enter the\"\r\n170 print\"number you ended up with.\"\r\n180 print:print\"hit a key when ready.\"\r\n190 get i$:if i$=\"\" then 190\r\n200 print\"“\":input\"what's the number you ended up with\";n\r\n210 n=n-14:c1=int(n/10):c2=n-c1*10\r\n220 print\"“\":for i=1 to 8:print:next i\r\n230 print\"your first card is a\";c$(c1);\".\"\r\n240 print:print\"and your second one is a\";c$(c2);\".\"\r\n250 print:print\"would you like to play again (y/n)\";\r\n260 input i$:if i$<>\"y\" and i$<>\"n\" then print:print\"(y) or (n) please.\":goto 260\r\n270 if i$=\"y\" then print\"“\":goto 70\r\n","sourcePath":"external/github.com/robfromoz_C64-BASIC/card trick.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/card%20trick.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/caverns.txt","language":"basic","vector":[0.005406702868640423,0.012503000907599926,0,-0.010813405737280846,-0.01047548744827509,0,0.03379189223051071,0.015544271096587181,0,-0.018923459574580193,-0.014530514366924763,0,0.028385190293192863,0.014530514366924763,0,-0.025681838393211365,-0.031088542193174362,0,0.22302649915218353,0.03987443447113037,0,-0.022978488355875015,-0.012165081687271595,0,0.006758378818631172,0.016895946115255356,0,-0.009461729787290096,-0.006420459598302841,0,0.004055027384310961,0.0804247036576271,0,-0.0013516757171601057,-0.009799649007618427,0,0.010813405737280846,0.005068784113973379,0,-0.008110054768621922,-0.0077721355482935905,0,0.36360079050064087,0.014192595146596432,0,-0.008110054768621922,-0.02466808259487152,0,0.0027033514343202114,0.013854676857590675,0,-0.008110054768621922,-0.01047548744827509,0,0.11354076117277145,0.014192595146596432,0,-0.014868433587253094,-0.04528113827109337,0,0.006758378818631172,0.009799649007618427,0,-0.02703351527452469,-0.019261378794908524,0,0.04325362294912338,0.016558028757572174,0,-0.02703351527452469,-0.028385190293192863,0,0.02433016337454319,0.004730864893645048,0,-0.004055027384310961,-0.023654324933886528,0,0.0027033514343202114,0.01790970377624035,0,-0.047308649867773056,-0.005744622088968754,0,0.005406702868640423,0.0030412704218178988,0,-0.08650724589824677,-0.03953651711344719,0,0.005406702868640423,0.0077721355482935905,0,-0.028385190293192863,-0.015882190316915512,0,0.009461729787290096,0.005068784113973379,0,-0.020275136455893517,-0.013516757637262344,0,0.04190194979310036,0.021964730694890022,0,-0.028385190293192863,-0.1486843377351761,0,0.09461729973554611,0.01520635187625885,0,-0.008110054768621922,-0.01790970377624035,0,0.03379189223051071,0.11387868225574493,0,-0.009461729787290096,-0.013516757637262344,0,0.004055027384310961,0.0043929461389780045,0,-0.07569383829832077,-0.010137568227946758,0,0.1824762225151062,0.008447973057627678,0,-0.08380389958620071,-0.003379189409315586,0,0.008110054768621922,0.01790970377624035,0,-0.014868433587253094,-0.009461729787290096,0,0.012165081687271595,0.1861933320760727,0,-0.13651925325393677,-0.007096297573298216,0,0.006758378818631172,0.02770935371518135,0,-0.07569383829832077,-0.005406702868640423,0,0.013516757637262344,0.05845997482538223,0,-0.006758378818631172,-0.010813405737280846,0,0.017571784555912018,0.006420459598302841,0,-0.02162681147456169,-0.019937217235565186,0,0.009461729787290096,0.026357676833868027,0,-0.10272735357284546,-0.017571784555912018,0,0.0027033514343202114,0.017233865335583687,0,-0.16355276107788086,-0.022640569135546684,0,0.031088542193174362,0.005068784113973379,0,-0.025681838393211365,-0.026357676833868027,0,0.05406703054904938,0.009461729787290096,0,-0.014868433587253094,-0.05440494790673256,0,0.006758378818631172,0.004055027384310961,0,-0.10272735357284546,-0.01858554221689701,0,0.059473734349012375,0.012840919196605682,0,-0.005406702868640423,-0.011489244177937508,0,0.032440219074487686,0.021964730694890022,0,-0.0013516757171601057,-0.032440219074487686,0,0.1108374148607254,0.049674082547426224,0,-0.028385190293192863,-0.010813405737280846,0,0.006758378818631172,0.01824762299656868,0,-0.004055027384310961,-0.007434216793626547,0,0.032440219074487686,0.01047548744827509,0,-0.047308649867773056,-0.04257778450846672,0,0.017571784555912018,0.0983344092965126,0,-0.009461729787290096,-0.0483224093914032,0,0.016220109537243843,0.05981165170669556,0,-0.016220109537243843,-0.013178838416934013,0,0.009461729787290096,0.0077721355482935905,0,-0.0554187074303627,-0.07062505930662155,0,0.012165081687271595,0.0043929461389780045,0,-0.02433016337454319,-0.038184840232133865,0,0.008110054768621922,0.009461729787290096,0,-0.059473734349012375,-0.005406702868640423,0,0.006758378818631172,0.09968608617782593,0,-0.012165081687271595,-0.012840919196605682,0,0.004055027384310961,0.005406702868640423,0,-0.012165081687271595,-0.053391192108392715,0,0.012165081687271595,0.029736867174506187,0,-0.009461729787290096,-0.08549349009990692,0,0.009461729787290096,0.017233865335583687,0,-0.032440219074487686,-0.019599298015236855,0,0.020275136455893517,0.037846919149160385,0,-0.5568904280662537,-0.014192595146596432,0,0.004055027384310961,0.009461729787290096,0,-0.020275136455893517,-0.05237743631005287,0,0.009461729787290096,0.0304127037525177,0,-0.008110054768621922,-0.014530514366924763,0,0.004055027384310961,0.017571784555912018,0,-0.02162681147456169,-0.022302649915218353,0,0.025681838393211365,0.05677038058638573,0,-0.010813405737280846,-0.02128889225423336,0,0.050012003630399704,0.005744622088968754,0,-0.02162681147456169,-0.007096297573298216,0,0.017571784555912018,0.026695596054196358,0,-0.012165081687271595,-0.03075062297284603,0,0.1054307073354721,0.032440219074487686,0,-0.005406702868640423,-0.006758378818631172,0,0.006758378818631172,0.016558028757572174,0,-0.013516757637262344,-0.01047548744827509,0,0.012165081687271595,0.005744622088968754,0,-0.025681838393211365,-0.04663281515240669,0,0.018923459574580193,0.05170159786939621,0,-0.016220109537243843,-0.03311605751514435,0,0.020275136455893517,0.0060825408436357975,0,-0.08245222270488739,-0.03345397487282753,0,0.014868433587253094,0.006420459598302841,0,-0.010813405737280846,-0.04021235182881355,0,0.02703351527452469,0.0037171083968132734,0,-0.04460529983043671,-0.025006001815199852,0,0.005406702868640423,0.009461729787290096,0,-0.017571784555912018,-0.006420459598302841,0,0.032440219074487686,0.00912381149828434,0,-0.005406702868640423,-0.02162681147456169,0,0.004055027384310961,0.012503000907599926,0,-0.07299049198627472,-0.304127037525177,0,0.009461729787290096,0.0027033514343202114,0,-0.02703351527452469,-0.05102575942873955,0],"text":"0 rem caverns\r\n1 rem by r vonk (c) 2000\r\n2 rem\r\n5 goto 1550\r\n10 poke 53280,8:poke 53281,9\r\n20 cv=1:h=100:sc=0:l=1\r\n30 print\"{clear}{yellow}{142}\":print\"you are in cavern\";cv;\"-\";l\r\n40 print:print\"health:\";h;\"%\"\r\n50 print:print\"your score is\";sc\r\n60 print:print:print\r\n70 if rnd(0)>.7 then 200\r\n80 t=int(rnd(0)*4+2)\r\n81 d1=int(rnd(0)*t+1)\r\n90 print\"you see\";t;\"tunnels, all of them dark and\"\r\n100 print\"possibly dangerous. which one do you\"\r\n110 print\"want to take\";\r\n120 input c\r\n130 if c<1 or c>t then 120\r\n140 if c<>d1 then 170\r\n150 print:print\"you fall down a steep decline and injure\";\r\n160 print\"yourself.\":h=h-int(rnd(0)*3+2):l=l+1:goto 200\r\n161 if h<=0 then 1400\r\n170 print:print\"you make your way through the tunnel\"\r\n180 print\"safely.\"\r\n190 l=l+1\r\n200 if rnd(0)>.3 then 410\r\n210 print:print\"watch out!\"\r\n220 print\r\n230 m=int(rnd(0)*4+1)\r\n240 if m=1 then m$=\"gremlin\"\r\n250 if m=2 then m$=\"mutant bat\"\r\n260 if m=3 then m$=\"serpent\"\r\n270 if m=4 then m$=\"ghoul\"\r\n280 print:print\"a \";m$;\" guards this tunnel.\"\r\n290 print:print\"do you wish to fight or retreat\"\r\n300 input\"(f or r)\";c$\r\n310 if c$=\"f\" then 340\r\n320 if c$<>\"r\" then 300\r\n330 if rnd(0)<.2 then print:print\"the \";m$;\" stops you.\":goto 340\r\n331 print:print\"you manage to escape.\":goto 410\r\n340 if rnd(0)>.4 then 390\r\n350 print:print\"*ugh* you've been defeated, and the\"\r\n360 print m$;\" has left you with a severe\"\r\n370 print\"wound.\":h=h-int(rnd(0)*5+l)\r\n380 if h<=0 then 1400\r\n381 goto 410\r\n390 print:print\"you have slain the \";m$;\".\"\r\n400 sc=sc+(100*m)\r\n410 if rnd(0)>.4 then 590\r\n420 print:print\"you have found a chest.\"\r\n430 print:print\"who knows what it might contain. it\"\r\n440 print\"could have gold and treasures, or\"\r\n450 print\"perhaps a curse. it might even contain\"\r\n460 print\"some food to boost your energy...\"\r\n470 print:print\"do you want to open it\";\r\n480 c$=\"\":input c$\r\n490 if c$=\"y\" then 510\r\n500 if c$=\"n\" then 580\r\n501 goto 480\r\n510 f=0:ch=0:ch=int(rnd(0)*10+1)\r\n520 if ch=5 or ch=10 then f=1\r\n530 if ch=2 or ch=7 then f=2\r\n540 if ch=3 then f=3\r\n550 if f=1 then print:print\"you have found some food.\":h=h+10:if h>100 then h=100\r\n560 if f=2 then print:print\"you found treasure!\":sc=sc+500*int(rnd(0)*4+1)\r\n570 if f=3 then print:print\"you have disturbed a curse...aaaugh!\"\r\n571 if f=3 then h=h-int(rnd(0)*5+5)\r\n572 if h<=0 then 1400\r\n580 if c$=\"y\" and f=0 then print:print\"the chest is completely empty.\"\r\n590 if rnd(0)>.1 then 700\r\n600 print:print\"you hear a voice. you look around to\"\r\n610 print\"see who it is. you look down, to find a\"\r\n620 print\"gnome. the gnome, who barely is the\"\r\n630 print\"height of your leg up to the knee, says:\"\r\n640 print chr$(34);\"i can assist you on your adventure. i\"\r\n650 print\"can point out the correct tunnel through\";\r\n660 print\"which you can continue finding the exit.\"\r\n670 l=l+int(rnd(0)*2+2):if l>20 then l=20\r\n680 print chr$(34);\"may you have a safe journey.\";chr$(34)\r\n690 print:print\"and with that he disappears into the\"\r\n691 print\"darkness.\"\r\n700 print:print\"you have the choice of whether to\"\r\n710 print\"proceed cautiously or to run.\"\r\n711 print\"(p or r)\";\r\n720 c$=\"\":input c$\r\n730 if c$=\"p\" then 750\r\n740 if c$<>\"r\" then 720\r\n750 if c$=\"p\" then print:print\"you walk cautiously into the tunnel...\"\r\n760 if c$=\"r\" then print:print\"you dash through the tunnel...\"\r\n770 if c$=\"p\" or (c$=\"r\" and rnd(0)>.15) then 790\r\n780 print\"and cut yourself on the stalactites.\":h=h-2:if h<=0 then 1400\r\n790 if c$=\"p\" then l=l+1\r\n800 if c$=\"r\" then l=l+int(rnd(0)*2+2)\r\n810 if l>=20 then 830\r\n820 for tm=1 to 2000:next tm:goto 30\r\n830 print:print\"well done!\"\r\n840 print:print\"you have exited cavern\";cv;\"safely.\"\r\n841 print:print\"you have a score of\";sc\r\n850 if cv=10 then 900\r\n860 print:print\"you get 200 points for successfully\"\r\n870 print\"exiting the cavern. now onto cavern\";cv+1;\".\"\r\n880 cv=cv+1:sc=sc+200:l=1\r\n890 for tm=1 to 5000:next tm:goto 30\r\n900 for tm=1 to 5000:next tm:print\"“\"\r\n901 poke 53281,5:print:print:print\"žyou have made it out of the labyrinth\"\r\n910 print\"of tunnels and caverns. you look around\"\r\n920 print\"the open plain and quietly congratulate\"\r\n930 print\"yourself...\"\r\n940 for tm=1 to 4000:next tm\r\n950 print:print:print\"suddenly the sky turns as black as ink.\"\r\n960 poke 53281,0\r\n970 print\"what was nice pleasant weather, typical\"\r\n980 print\"of late spring, turned into a dry storm\"\r\n990 poke 53281,1\r\n991 for tm=1 to 10:next tm\r\n1000 poke 53281,0\r\n1010 for tm=1 to 1000:next tm\r\n1020 poke 53281,1\r\n1021 for tm=1 to 10:next tm\r\n1030 poke 53281,0\r\n1040 for tm=1 to 500:next tm\r\n1050 print:print\"a face appears in the sky. you rub your\"\r\n1060 print\"eyes and peer at it. it is kaeiri. he\"\r\n1070 print\"says in a booming tone:\"\r\n1080 for tm=1 to 500:next tm\r\n1090 print:print chr$(34);\"so, my labyrinth was not as impossible\"\r\n1100 print\"to escape from as i thought. i seem to\"\r\n1110 print\"have underestimated you. i give my\"\r\n1120 print\"congratulations...\";chr$(34)\r\n1130 print\r\n1140 for tm=1 to 4000:next tm\r\n1150 poke 53281,1\r\n1160 for tm=1 to 10:next tm\r\n1170 print\"you are struck by a lightning bolt!\"\r\n1180 poke 53281,0\r\n1190 print\"you black out and fall to the ground...\"\r\n1200 for tm=1 to 4000:next tm\r\n1210 print\"{clear}{gray}\":poke 53281,11\r\n1220 for tm=1 to 2000:next tm\r\n1230 print:print\"you come to. it is now overcast, and\"\r\n1240 print\"you still feel kaeiri's presence.\"\r\n1250 for tm=1 to 2000:next tm\r\n1260 print:print\"you look up and find that there is a\"\r\n1270 print\"huge, foreboding castle in the middle\"\r\n1280 print\"of the plain.\"\r\n1290 print:print\r\n1300 print\"kaeiri's voice booms: \";chr$(34);\"the castle will\"\r\n1310 print\"keep you occupied while i carry out my\"\r\n1320 print\"plans to dominate the world!!!!!\":for tm=1 to 1000:next tm:print\r\n1330 print\"{reverse on}ha ha ha ha ha ha ha ha ha ha ha ha!!{reverse off}\";chr$(34)\r\n1340 for tm=1 to 4000:next tm\r\n1350 print:print\"in an instant, you find yourself in a\"\r\n1360 print\"small, dark room...\"\r\n1370 for tm=1 to 2000:next tm\r\n1380 print:print:print\"to be continued...\"\r\n1390 goto 1390\r\n1400 for tm=1 to 2000:next tm\r\n1410 poke 53281,0:print:print\"everything turns black...\"\r\n1420 for tm=1 to 4000:next tm\r\n1430 print\"{clear}{red}\":print:print:print:print:print:print:print:print:print:print:print\r\n1440 print\"you have died.\"\r\n1450 print:print:print\r\n1460 for tm=1 to 4000:next tm\r\n1470 print\"kaeiri will now accomplish his mission.\"\r\n1480 print\r\n1490 for tm=1 to 4000:next tm\r\n1500 print\"do you wish to play again\";\r\n1510 c$=\"\":input c$\r\n1520 if c$=\"y\" then 10\r\n1530 if c$=\"n\" then end\r\n1540 goto 1510\r\n1550 print\"{clear}{black}{142}\":poke 53280,8:poke 53281,8\r\n1560 print tab(10);\"a r. vonk production\"\r\n1570 for tm=1 to 2000:next tm:print:print\r\n1580 print tab(2);\" ¦¦¦  ¦¦¦¦  ¦  ¦  ¦¦¦¦  ¦¦¦¦  ¦  ¦\"\r\n1590 print tab(2);\"¦     ¦  ¦  ¦  ¦  ¦     ¦  ¦  ¦¦ ¦\"\r\n1600 print tab(2);\"¦     ¦  ¦  ¦  ¦  ¦     ¦  ¦  ¦ ¦¦\"\r\n1610 print tab(2);\"¦     ¦¦¦¦  ¦  ¦  ¦¦¦¦  ¦¦¦   ¦ ¦¦\"\r\n1620 print tab(2);\"¦     ¦  ¦  ¦  ¦  ¦     ¦  ¦  ¦  ¦\"\r\n1630 print tab(2);\"¦     ¦  ¦  ¦  ¦  ¦     ¦  ¦  ¦  ¦\"\r\n1640 print tab(2);\" ¦¦¦  ¦  ¦   ¦¦   ¦¦¦¦  ¦  ¦  ¦  ¦\"\r\n1641 print:print tab(16);\"(c) 2000\"\r\n1650 print:print:print\r\n1660 for tm=1 to 4000:next tm\r\n1670 print:print\"do you want to read the story\";\r\n1680 input c$\r\n1690 if c$=\"n\" then 10\r\n1700 if c$<>\"y\" then 1680\r\n1710 poke 53281,9:print\"{clear}{yellow}{014}\"\r\n1720 print chr$(34);\"Don't be silly, Jimmy. You know there\"\r\n1730 print tab(5);\"are no such things as ghosts.\"\r\n1740 print:print\"No matter what Mum and Dad said, and no\"\r\n1750 print\"matter how much they tried to convince\"\r\n1760 print\"you that you were imagining things, you\"\r\n1770 print\"undeniably believed in ghosts, wizards\"\r\n1780 print\"and trolls.\"\r\n1790 print:print\r\n1810 print\"You, like any other rebellious teenager,\";\r\n1820 print\"normally stay up late, watching TV.\"\r\n1830 for tm=1 to 6000:next tm\r\n1840 print:print\"One night, you fell asleep while\"\r\n1850 print\"watching a show called 'The World's Best\";\r\n1860 print\"Magicians'. Before you nodded off, you\"\r\n1870 print\"noted one, by the name of Leo Kaeiri.\"\r\n1880 print\"Kaeiri was, you thought, the 'coolest'\"\r\n1890 print\"magician ever.\"\r\n1900 for tm=1 to 6000:next tm\r\n1910 print:print\"You suddenly wake up...to find that you\"\r\n1920 print\"left the TV on. The magicians' show was\"\r\n1930 print\"just concluding.\"\r\n1940 print:print\r\n1950 for tm=1 to 4000:next tm\r\n1960 print\"As you reached for the ON/OFF button on\"\r\n1970 print\"the TV, you felt this great surge of\"\r\n1980 print\"electricity, and then, a face appears\"\r\n1990 print\"on the screen. You recognise it\"\r\n2000 print\"immediately--Kaieri.\"\r\n2010 for tm=1 to 6000:next tm\r\n2020 print:print\"Kaeiri speaks: \";chr$(34);\"YOU HAVE AROUSED THE\"\r\n2030 print\"WRATH OF THE GREAT KAEIRI! NO MORTAL\"\r\n2040 print\"BEING WOULD DARE TO DISTURB ME!\"\r\n2050 print:print\"...and before you could say 'alakazam',\"\r\n2060 print\"you found yourself in a dank cavern.\"\r\n2070 for tm=1 to 6000:next tm\r\n2080 print:print\"Kaeiri appears out of nowhere.\"\r\n2090 for tm=1 to 2000:next tm\r\n2100 print:print chr$(34);\"This is my cavern labyrinth. No-one has\";\r\n2110 print\"escaped from it before. Which is why\"\r\n2120 print\"you are here. You are the only mortal\"\r\n2130 print\"being I know of who believes in the\"\r\n2140 print\"in the paranormal, and therefore the\"\r\n2150 print\"only mortal who can defeat me.\";chr$(34)\r\n2160 for tm=1 to 4000:next tm\r\n2170 print:print\"You ask: \";chr$(34);\"What are you gonna do?\";chr$(34)\r\n2180 for tm=1 to 2000:next tm\r\n2190 print:print chr$(34);\"I intend to rule the world with my\"\r\n2200 print\"immense power. So immense, that there\"\r\n2210 print\"will be no-one who can stop me.\";chr$(34)\r\n2220 for tm=1 to 3000:next tm\r\n2230 print:print\"HA HA HA HA HA HA HA!!!!!!\"\r\n2240 for tm=1 to 2000:next tm\r\n2250 print:print\"And with that, he disappeared.\"\r\n2260 for tm=1 to 3000:next tm\r\n2270 print\"{clear}\"\r\n2280 print:print\"The cavern labyrinth contains 10 caverns\";\r\n2290 print\"with 20 sections in each one. Throughout\";\r\n2300 print\"the journey, you will come across many\"\r\n2310 print\"things, such as monsters, treasure\"\r\n2320 print\"chests, and gnomes.\"\r\n2330 print:print\"There are monsters galore in the\"\r\n2340 print\"labyrinth. You can choose to fight\"\r\n2350 print\"them, or retreat. Sometimes, when you\"\r\n2360 print\"do try to run, the monsters will stop\"\r\n2370 print\"you.\"\r\n2380 print\r\n2390 print\"You may be lucky to find a treasure\"\r\n2400 print\"chest in a section of the cavern, and\"\r\n2410 print\"it may contain either a piece of food,\"\r\n2420 print\"treasure or a curse. You are given a\"\r\n2430 print\"choice of whether or not you want to\"\r\n2440 print\"open a chest.\"\r\n2450 get k$:if k$=\"\" then 2450\r\n2460 print\"{clear}\"\r\n2470 print:print\"Small gnomes inhabit the caves of the\"\r\n2480 print\"labyrinth. Luckily for you, they are\"\r\n2490 print\"very friendly and will help you on your\"\r\n2500 print\"journey.\"\r\n2510 print:print\"Your health begins at 100%, and goes\"\r\n2520 print\"down if you lose a fight, or if you\"\r\n2530 print\"fall down a tunnel, or if you run and\"\r\n2540 print\"cut yourself on a stalactite.\"\r\n2550 print:print\r\n2560 print\"Good luck on your quest.\"\r\n2570 get k$:if k$=\"\" then 2570\r\n2580 goto 10","sourcePath":"external/github.com/robfromoz_C64-BASIC/caverns.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/caverns.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/change change.txt","language":"basic","vector":[0.0041643176227808,0.0062464764341712,0,0,-0.0031232382170856,0,0.041643176227808,0.0072875558398664,0,-0.0499718114733696,0,0,0.0124929528683424,0.0020821588113904,0,-0.041643176227808,-0.020821588113904,0,0.2998308837413788,0.021862667053937912,0,-0.0249859057366848,-0.0031232382170856,0,0.0083286352455616,0.018739430233836174,0,0,0,0,0,0.11555981636047363,0,0,-0.0062464764341712,0,0,0.0031232382170856,0,-0.0124929528683424,-0.0031232382170856,0,0.1915586143732071,0.020821588113904,0,0,-0.0072875558398664,0,0.0041643176227808,0.009369715116918087,0,-0.0749577209353447,-0.0020821588113904,0,0.2415304183959961,0.0499718114733696,0,0,-0.083286352455616,0,0.0083286352455616,0.0083286352455616,0,-0.0124929528683424,-0.0166572704911232,0,0.12909384071826935,0.009369715116918087,0,-0.0249859057366848,-0.03227346017956734,0,0.0041643176227808,0,0,-0.0083286352455616,-0.04268425703048706,0,0.0041643176227808,0.0041643176227808,0,-0.020821588113904,-0.0020821588113904,0,0.0124929528683424,0.0010410794056952,0,-0.21238020062446594,-0.0249859057366848,0,0.0083286352455616,0,0,-0.0249859057366848,-0.017698349431157112,0,0,0.0072875558398664,0,0,-0.0020821588113904,0,0.041643176227808,0.021862667053937912,0,-0.0166572704911232,-0.13950464129447937,0,0.0249859057366848,0.0072875558398664,0,-0.0041643176227808,-0.026026984676718712,0,0.0249859057366848,0.15199759602546692,0,-0.0499718114733696,-0.0124929528683424,0,0,0.0062464764341712,0,-0.0666290819644928,0,0,0.0291502233594656,0.0010410794056952,0,-0.22070883214473724,-0.0020821588113904,0,0.0041643176227808,0.0072875558398664,0,-0.0249859057366848,-0.0072875558398664,0,0.0249859057366848,0.09682038426399231,0,0,0,0,0,0.0333145409822464,0,-0.08745066821575165,-0.03851993754506111,0,0.0124929528683424,0.12180629372596741,0,-0.0124929528683424,-0.0010410794056952,0,0.0083286352455616,0.0083286352455616,0,-0.0083286352455616,-0.0062464764341712,0,0.0166572704911232,0.06767015904188156,0,-0.0124929528683424,-0.0124929528683424,0,0,0.027068065479397774,0,-0.2248731553554535,-0.04268425703048706,0,0.0083286352455616,0.005205397028476,0,-0.0124929528683424,-0.013534032739698887,0,0.0124929528683424,0.010410794056952,0,0,-0.12180629372596741,0,0,0.0041643176227808,0,-0.0666290819644928,-0.0145751116797328,0,0.0291502233594656,0.0010410794056952,0,-0.0041643176227808,-0.0010410794056952,0,0.0666290819644928,0.020821588113904,0,0,-0.017698349431157112,0,0.21238020062446594,0.0124929528683424,0,-0.0166572704911232,-0.0083286352455616,0,0.0041643176227808,0.013534032739698887,0,-0.0041643176227808,-0.0249859057366848,0,0.0499718114733696,0.010410794056952,0,-0.0291502233594656,-0.04580749571323395,0,0.0124929528683424,0.017698349431157112,0,-0.0083286352455616,-0.12076520919799805,0,0,0.07703987509012222,0,-0.0249859057366848,-0.018739430233836174,0,0.0083286352455616,0.0145751116797328,0,-0.041643176227808,0,0,0.0041643176227808,0,0,-0.0041643176227808,-0.043725334107875824,0,0,0.0062464764341712,0,-0.15407975018024445,-0.009369715116918087,0,0.0083286352455616,0.052053969353437424,0,0,-0.0041643176227808,0,0.0041643176227808,0.009369715116918087,0,-0.0249859057366848,-0.0249859057366848,0,0,0.06038260459899902,0,-0.020821588113904,-0.11243657767772675,0,0.020821588113904,0.0062464764341712,0,-0.0083286352455616,-0.009369715116918087,0,0.0041643176227808,0.03851993754506111,0,-0.4580749571323395,-0.0062464764341712,0,0.0041643176227808,0.0010410794056952,0,-0.020821588113904,-0.035396698862314224,0,0.0083286352455616,0.015616191551089287,0,0,-0.0072875558398664,0,0.0083286352455616,0.036437779664993286,0,0,-0.053095050156116486,0,0.0041643176227808,0.1082722619175911,0,-0.0083286352455616,-0.0145751116797328,0,0.0291502233594656,0.0020821588113904,0,-0.0041643176227808,-0.0020821588113904,0,0.0041643176227808,0.035396698862314224,0,0,-0.018739430233836174,0,0.1249295324087143,0.0124929528683424,0,-0.0041643176227808,-0.005205397028476,0,0.0041643176227808,0.0062464764341712,0,-0.0041643176227808,-0.0249859057366848,0,0.0166572704911232,0.0041643176227808,0,0,-0.03747886046767235,0,0.0124929528683424,0.009369715116918087,0,0,-0.057259369641542435,0,0.0999436229467392,0.0010410794056952,0,-0.15407975018024445,-0.083286352455616,0,0.0124929528683424,0.010410794056952,0,-0.0124929528683424,0,0,0.0166572704911232,0.0020821588113904,0,-0.06246476620435715,-0.03435562178492546,0,0,0.0031232382170856,0,-0.0083286352455616,-0.013534032739698887,0,0.0041643176227808,0.0124929528683424,0,-0.0041643176227808,-0.0062464764341712,0,0,0.0062464764341712,0,-0.03747886046767235,-0.23216071724891663,0,0,0.0020821588113904,0,-0.0249859057366848,-0.0666290819644928,0],"text":"10 rem change change by r vonk 2020\r\n20 rem from \"a gamut of games\" by s sackson, 1969, p 185\r\n30 z=rnd(-ti):poke 53280,0:poke 53281,0:poke 646,15\r\n40 print\"“\":print\"this game is called 'change change'.\"\r\n50 print:print\"in this game you have eleven coins.\"\r\n60 print\"the object is to arrange them into a\"\r\n70 print\"symmetrical position by sliding them\"\r\n80 print\"one at a time into an empty space. a\"\r\n90 print\"symmetrical position is one which is\"\r\n100 print\"balanced around the middle row. in\"\r\n110 print\"other words, if there is a 1c in the\"\r\n120 print\"top row, there must be a 1c directly\"\r\n130 print\"below it in the bottom row. the 25c\"\r\n140 print\"coin and the empty space, since there\"\r\n150 print\"is only one of each, must always end\"\r\n160 print\"up in the middle row.\"\r\n170 for i=1 to 8:print:next i:print\"                              hit a key\"\r\n180 get i$:if i$=\"\" then 180\r\n190 data \" 1c\",\" 1c\",\" 1c\",\" 1c\",\" 5c\",\" 5c\",\"10c\",\"10c\",\"10c\",\"10c\",\"25c\",\" x \"\r\n200 dim c$(3,4):for i=1 to 3:for j=1 to 4:read c$(i,j):next j:next i\r\n210 t=0:for i=1 to 3:for j=1 to 4:a=int(rnd(1)*3+1):b=int(rnd(1)*4+1)\r\n220 t$=c$(i,j):c$(i,j)=c$(a,b):c$(a,b)=t$:next j:next i\r\n230 f=0:for i=1 to 4:if c$(1,i)=c$(3,i) then f=f+1\r\n240 next i:if f=4 then 210\r\n250 print\"“\":print tab(12);\"change change\":print:print\r\n260 for i=1 to 3:print tab(11);:for j=1 to 4:print c$(i,j);\" \";\r\n270 next j:print:print:next i:print:print tab(11);\" a   b   c   d\"\r\n280 print:print tab(11);\" e   f   g   h\":print:print tab(11);\" i   j   k   l\"\r\n290 f=0:for i=1 to 4:if c$(1,i)=c$(3,i) then f=f+1\r\n300 next i:if f=4 then 460\r\n310 print:print:print tab(14);\"turns:\";t\r\n320 get i$:if i$<>\"\" then 320\r\n330 get i$:if i$<\"a\" or i$>\"l\" then 330\r\n340 a=1:if i$>\"d\" and i$<\"i\" then a=2\r\n350 if i$>\"h\" then a=3\r\n360 b=asc(i$)-64-((a-1)*4):if a=1 then 380\r\n370 if c$(a-1,b)=\" x \" then t$=c$(a-1,b):c$(a-1,b)=c$(a,b):c$(a,b)=t$:goto 450\r\n380 if b=4 then 400\r\n390 if c$(a,b+1)=\" x \" then t$=c$(a,b+1):c$(a,b+1)=c$(a,b):c$(a,b)=t$:goto 450\r\n400 if a=3 then 420\r\n410 if c$(a+1,b)=\" x \" then t$=c$(a+1,b):c$(a+1,b)=c$(a,b):c$(a,b)=t$:goto 450\r\n420 if b=1 then 440\r\n430 if c$(a,b-1)=\" x \" then t$=c$(a,b-1):c$(a,b-1)=c$(a,b):c$(a,b)=t$:goto 450\r\n440 print:print:print tab(13);\"invalid move\":for i=1 to 1000:next i\r\n450 t=t+1:goto 250\r\n460 print:print:print tab(6);\"you solved it in\";t;\"turns!\"\r\n470 print:print tab(7);\"another game (y/n)\";\r\n480 input i$:if i$<>\"y\" and i$<>\"n\" then print:print\"(y/n) please.\":goto 480\r\n490 if i$=\"y\" then 210\r\n","sourcePath":"external/github.com/robfromoz_C64-BASIC/change change.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/change%20change.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/commander.txt","language":"basic","vector":[0.018632372841238976,0.009316186420619488,0,-0.0031053954735398293,-0.02639586105942726,0,0.034159351140260696,0.007763488683849573,0,0,-0.011645232327282429,0,0.0031053954735398293,0.0054344418458640575,0,-0.0062107909470796585,-0.027172209694981575,0,0.19874531030654907,0.08462202548980713,0,-0.02794855833053589,-0.0031053954735398293,0,0.0031053954735398293,0.012421581894159317,0,-0.018632372841238976,-0.002329046605154872,0,0.0062107909470796585,0.057449813932180405,0,0,-0.006987139582633972,0,0.018632372841238976,0.006987139582633972,0,-0.0031053954735398293,-0.012421581894159317,0,0.3384881019592285,0.020185070112347603,0,-0.009316186420619488,-0.015526977367699146,0,0.0031053954735398293,0.0062107909470796585,0,-0.06831870228052139,-0.0031053954735398293,0,0.09316185861825943,0.040370140224695206,0,-0.0031053954735398293,-0.042699187994003296,0,0.009316186420619488,0.006987139582633972,0,-0.009316186420619488,-0.015526977367699146,0,0.02173776738345623,0.006987139582633972,0,-0.018632372841238976,-0.01319793052971363,0,0.009316186420619488,0.006987139582633972,0,-0.04347553476691246,-0.009316186420619488,0,0.0031053954735398293,0.013974279165267944,0,-0.06521330028772354,-0.013974279165267944,0,0.0062107909470796585,0.0007763488683849573,0,-0.1086888387799263,-0.05900251120328903,0,0.012421581894159317,0.0038817443419247866,0,-0.034159351140260696,-0.016303325071930885,0,0.018632372841238976,0.010092535056173801,0,-0.012421581894159317,-0.0062107909470796585,0,0.031053954735398293,0.022514116019010544,0,-0.024843163788318634,-0.14595358073711395,0,0.12732121348381042,0.0031053954735398293,0,-0.04347553476691246,-0.007763488683849573,0,0.009316186420619488,0.10325440019369125,0,-0.012421581894159317,-0.020961418747901917,0,0,0.004658093210309744,0,-0.040370140224695206,-0.012421581894159317,0,0.13353200256824493,0.004658093210309744,0,-0.06521330028772354,0,0,0.0031053954735398293,0.017079675570130348,0,-0.02173776738345623,-0.002329046605154872,0,0,0.17234943807125092,0,-0.0031053954735398293,-0.0054344418458640575,0,0.012421581894159317,0.017856024205684662,0,-0.0745294913649559,-0.035712048411369324,0,0.0062107909470796585,0.04968632757663727,0,0,-0.007763488683849573,0,0.015526977367699146,0.012421581894159317,0,-0.0745294913649559,-0.0054344418458640575,0,0.024843163788318634,0.01319793052971363,0,-0.018632372841238976,-0.010868883691728115,0,0.0031053954735398293,0.02173776738345623,0,-0.09626726061105728,-0.04192283749580383,0,0.0062107909470796585,0.004658093210309744,0,-0.04968632757663727,-0.034159351140260696,0,0.0062107909470796585,0.0062107909470796585,0,-0.02173776738345623,-0.06055520847439766,0,0.009316186420619488,0.008539837785065174,0,-0.1086888387799263,-0.01940872147679329,0,0.27638018131256104,0.014750627800822258,0,-0.0062107909470796585,-0.009316186420619488,0,0.024843163788318634,0.015526977367699146,0,-0.0031053954735398293,-0.03881744295358658,0,0.09937265515327454,0.06521330028772354,0,-0.015526977367699146,-0.02794855833053589,0,0.0031053954735398293,0.009316186420619488,0,0,-0.006987139582633972,0,0.018632372841238976,0.008539837785065174,0,-0.05589711666107178,-0.020185070112347603,0,0.0062107909470796585,0.06754235178232193,0,0,-0.034159351140260696,0,0.024843163788318634,0.051239024847745895,0,-0.009316186420619488,-0.017856024205684662,0,0.0031053954735398293,0.0007763488683849573,0,-0.04968632757663727,-0.0062107909470796585,0,0.0031053954735398293,0.007763488683849573,0,-0.0031053954735398293,-0.03726474568247795,0,0.009316186420619488,0.007763488683849573,0,-0.018632372841238976,-0.0007763488683849573,0,0.012421581894159317,0.09238551557064056,0,-0.031053954735398293,-0.03959378972649574,0,0.0031053954735398293,0.01319793052971363,0,-0.024843163788318634,-0.02639586105942726,0,0.0031053954735398293,0.024843163788318634,0,-0.015526977367699146,-0.048909977078437805,0,0.0031053954735398293,0.0054344418458640575,0,-0.018632372841238976,-0.027172209694981575,0,0.02173776738345623,0.008539837785065174,0,-0.5838143229484558,-0.015526977367699146,0,0.0062107909470796585,0.006987139582633972,0,-0.018632372841238976,-0.06521330028772354,0,0.015526977367699146,0.13896644115447998,0,-0.02794855833053589,-0.01940872147679329,0,0.012421581894159317,0.013974279165267944,0,-0.012421581894159317,-0.028724906966090202,0,0.0062107909470796585,0.05279172211885452,0,0,-0.016303325071930885,0,0.031053954735398293,0.0062107909470796585,0,-0.0031053954735398293,-0.0031053954735398293,0,0.012421581894159317,0.017079675570130348,0,-0.0031053954735398293,-0.034159351140260696,0,0.06521330028772354,0.03493569791316986,0,-0.0062107909470796585,-0.010868883691728115,0,0.012421581894159317,0.014750627800822258,0,-0.024843163788318634,-0.007763488683849573,0,0.031053954735398293,0.0015526977367699146,0,-0.0031053954735398293,-0.03493569791316986,0,0.009316186420619488,0.03493569791316986,0,-0.0062107909470796585,-0.017856024205684662,0,0.06831870228052139,0.0054344418458640575,0,-0.08074028044939041,-0.014750627800822258,0,0.012421581894159317,0.0062107909470796585,0,-0.0062107909470796585,-0.016303325071930885,0,0.012421581894159317,0.004658093210309744,0,-0.024843163788318634,-0.031053954735398293,0,0.009316186420619488,0.0031053954735398293,0,-0.009316186420619488,-0.007763488683849573,0,0.02173776738345623,0.0054344418458640575,0,-0.012421581894159317,-0.02794855833053589,0,0,0.017079675570130348,0,-0.10558344423770905,-0.2965652644634247,0,0.0062107909470796585,0.0038817443419247866,0,-0.024843163788318634,-0.033383000642061234,0],"text":"﻿10 rem commander-in-chief\r\n20 poke 53280,9:poke 53281,7:poke 646,0\r\n30 z=rnd(-ti):print\"“\":print\"this game is called commander-in-chief.\"\r\n40 print:print\"the object is to decide how many\"\r\n50 print\"nuclear arms your country builds and\"\r\n60 print\"whether or not your country is at war\"\r\n70 print\"with another nation. you must try to\"\r\n80 print\"keep the country out of danger for the\"\r\n90 print\"next ten years.\"\r\n100 print:print\"the first year you may choose to have\"\r\n110 print\"from zero to one hundred nuclear\"\r\n120 print\"weapons. on each succeeding year, you\"\r\n130 print\"may increase this amount by a maximum\"\r\n140 print\"of one hundred weapons.\"\r\n150 print\"each year there is a possibility of war\"\r\n160 print\"with another nuclear power. your enemy\"\r\n170 print\"may also have between zero and one\"\r\n180 print\"hundred weapons. to determine whether\"\r\n190 print\"you are at war, roll a pair of dice. if\"\r\n200 print\"the dice show 5, 6, 7, or 8, you are at\"\r\n210 print\"war. if you roll any other number,\"\r\n220 print\"there is no war and you can adjust your\"\r\n230 print\"weapons number.               hit a key\"\r\n240 get i$:if i$=\"\" then 240\r\n250 print\"“\":print\"if you are at war, you must estimate\"\r\n260 print\"the number of weapons your enemy has.\"\r\n270 print\"you know the number of your weapons,\"\r\n280 print\"which is the sum of your yearly\"\r\n290 print\"increases and your initial amount.\"\r\n300 print\"knowing this, you enter a guess of the\"\r\n310 print\"enemy's arms.\"\r\n320 print:print\"the number of arms (generated by the\"\r\n330 print\"computer) will then be displayed. if\"\r\n340 print\"you have more weapons than the enemy\"\r\n350 print\"number, you win the war.\"\r\n360 print:print\"in either case, win or lose, a number\"\r\n370 print\"(the holocaust number) is calculated\"\r\n380 print\"to determine if there was a nuclear\"\r\n390 print\"holocaust. if the number is 1,000,000\"\r\n400 print\"or greater, you, the country, and the\"\r\n410 print\"world are wiped out.\"\r\n420 print:print\"otherwise, play continues to the next\"\r\n430 print\"year.\"\r\n440 print\"                              hit a key\"\r\n450 get i$:if i$=\"\" then 450\r\n460 print\"“\":print\"if you have lost the war and there is\"\r\n470 print\"no nuclear holocaust, you lose a\"\r\n480 print\"quarter of your weapons arsenal.\"\r\n490 print:print\"each year is played in turn from one to\"\r\n500 print\"ten, or until there is a holocaust. if\"\r\n510 print\"you can make it through ten years, you\"\r\n520 print\"win the nobel peace prize.\"\r\n530 for i=1 to 14:print:next i:print\"                              hit a key\"\r\n540 get i$:if i$=\"\" then 540\r\n550 y=0:yn=0\r\n560 y=y+1:print\"“\":print\"this is year\";y;\"of your presidency.\"\r\n570 if yn>0 then print:print\"you have\";yn;\"missiles.\"\r\n580 print:print\"how many missiles to build\";\r\n590 input i:if i<0 or i>100 then print\"0-100 please.\":goto 590\r\n600 yn=yn+i:print:print\"you now have\";yn;\"missiles.\"\r\n610 print:print\"now to roll the dice to determine\"\r\n620 print\"whether or not you are at war with the\"\r\n630 print\"enemy country. hit a key to roll.\"\r\n640 get i$:if i$=\"\" then 640\r\n650 d1=int(rnd(1)*6+1):d2=int(rnd(1)*6+1):d=d1+d2\r\n660 print:print\"you have rolled\";d1;\"and\";d2:if d>4 and d<9 then 680\r\n670 print:print\"you and the enemy country are at peace.\":goto 860\r\n680 print:print\"         ***war is declared***\"\r\n690 for i=1 to 2500:next i\r\n700 d=int(rnd(1)*6+1)+int(rnd(1)*6+1):if d>10 then 700\r\n710 en=d*y*10:print:print\"now you must estimate the number of\"\r\n720 print\"nuclear weapons the enemy country has.\"\r\n730 print\"what is your estimate\";\r\n740 input n:if n<0 then print\"estimate must be at least 1.\":goto 740\r\n750 for i=1 to 2500:next i\r\n760 print:print\"you have\";yn;\"weapons in your arsenal.\"\r\n770 print\"the enemy has\";en\r\n780 for i=1 to 2500:next i:if en>=yn then 800\r\n790 print:print\"you have defeated the enemy state.\":goto 810\r\n800 print:print\"the enemy state has defeated you.\"\r\n810 for i=1 to 2500:next i:h=abs(n-en)*yn*en\r\n820 print:print\"the holocaust number is\";h\r\n830 for i=1 to 2500:next i:if h>999999 then 870\r\n840 if yn<=en then yn=int(yn*.75)\r\n850 print:print\"the world is safe for another year.\"\r\n860 for i=1 to 2500:next i:goto 560\r\n870 print:print\"***************holocaust***************\"\r\n880 print:print\"    the world has been obliterated\"\r\n890 print:print\"***************************************\":goto 940\r\n900 print:print\"congratulations, you have successfully\"\r\n910 print\"served ten years as president. you fly\"\r\n920 print\"to oslo to be awarded the nobel peace\"\r\n930 print\"prize.\"\r\n940 print:print\"would you like to play again (y/n)\";\r\n950 input i$:if i$<>\"y\" and i$<>\"n\" then 950\r\n960 if i$=\"y\" then 550\r\n","sourcePath":"external/github.com/robfromoz_C64-BASIC/commander.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/commander.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/dice dodge.txt","language":"basic","vector":[0.03013165295124054,0.018832283094525337,0,0,-0.006591299083083868,0,0.037664566189050674,0.005649684928357601,0,-0.052730392664670944,-0.010357756167650223,0,0.01506582647562027,0.009416141547262669,0,-0.05649685114622116,-0.025423582643270493,0,0.2862507104873657,0.036722950637340546,0,-0.04143102467060089,-0.005649684928357601,0,0,0.010357756167650223,0,0,-0.0009416141547262669,0,0,0.050847165286540985,0,0,-0.004708070773631334,0,0.007532913237810135,0.017890669405460358,0,-0.0037664566189050674,-0.007532913237810135,0,0.3239152729511261,0.024481968954205513,0,0,-0.009416141547262669,0,0.007532913237810135,0.005649684928357601,0,-0.13559244573116302,-0.0009416141547262669,0,0.10546078532934189,0.04143102467060089,0,-0.01506582647562027,-0.07250428944826126,0,0.007532913237810135,0.0018832283094525337,0,-0.007532913237810135,-0.019773896783590317,0,0.048963937908411026,0.008474527858197689,0,-0.037664566189050674,-0.020715512335300446,0,0.018832283094525337,0.0037664566189050674,0,-0.0037664566189050674,-0.012240984477102757,0,0.011299369856715202,0.011299369856715202,0,-0.052730392664670944,-0.0018832283094525337,0,0.0037664566189050674,0.0018832283094525337,0,-0.11676015704870224,-0.06308814883232117,0,0,0.010357756167650223,0,-0.048963937908411026,-0.02919003926217556,0,0.026365196332335472,0.021657126024365425,0,-0.01506582647562027,-0.0028248424641788006,0,0.018832283094525337,0.020715512335300446,0,-0.037664566189050674,-0.16289925575256348,0,0.03013165295124054,0.008474527858197689,0,-0.007532913237810135,-0.03483972325921059,0,0,0.14689180254936218,0,-0.011299369856715202,-0.020715512335300446,0,0.007532913237810135,0.0018832283094525337,0,-0.052730392664670944,-0.0037664566189050674,0,0.22222094237804413,0.0018832283094525337,0,-0.10546078532934189,-0.0018832283094525337,0,0,0.01600744016468525,0,-0.03013165295124054,-0.0028248424641788006,0,0.0037664566189050674,0.16289925575256348,0,-0.007532913237810135,0,0,0.007532913237810135,0.018832283094525337,0,-0.08286204934120178,-0.06873783469200134,0,0.011299369856715202,0.06120492145419121,0,-0.011299369856715202,-0.011299369856715202,0,0.01506582647562027,0.010357756167650223,0,-0.01506582647562027,-0.0037664566189050674,0,0.026365196332335472,0.026365196332335472,0,-0.022598739713430405,-0.018832283094525337,0,0.0037664566189050674,0.02919003926217556,0,-0.16572409868240356,-0.03483972325921059,0,0.04519747942686081,0.006591299083083868,0,-0.026365196332335472,-0.02919003926217556,0,0.007532913237810135,0.005649684928357601,0,-0.011299369856715202,-0.06685460358858109,0,0.022598739713430405,0.0018832283094525337,0,-0.0866285040974617,-0.02919003926217556,0,0.048963937908411026,0.016949055716395378,0,-0.01506582647562027,-0.008474527858197689,0,0.033898111432790756,0.009416141547262669,0,-0.0037664566189050674,-0.048963937908411026,0,0.08286204934120178,0.018832283094525337,0,-0.011299369856715202,-0.01506582647562027,0,0.0037664566189050674,0.007532913237810135,0,0,-0.005649684928357601,0,0.04519747942686081,0.013182598166167736,0,-0.037664566189050674,-0.039547793567180634,0,0.007532913237810135,0.11487692594528198,0,-0.0037664566189050674,-0.06685460358858109,0,0.007532913237810135,0.07156267762184143,0,-0.026365196332335472,-0.025423582643270493,0,0,0.0018832283094525337,0,-0.05649685114622116,-0.0037664566189050674,0,0.0037664566189050674,0.0037664566189050674,0,-0.01506582647562027,-0.04143102467060089,0,0,0.007532913237810135,0,-0.011299369856715202,-0.006591299083083868,0,0.01506582647562027,0.08851172775030136,0,0,-0.007532913237810135,0,0.007532913237810135,0.01506582647562027,0,-0.011299369856715202,-0.04519747942686081,0,0.011299369856715202,0.02824842557311058,0,-0.026365196332335472,-0.0866285040974617,0,0.026365196332335472,0.024481968954205513,0,-0.011299369856715202,-0.01506582647562027,0,0.007532913237810135,0.01600744016468525,0,-0.546136200428009,-0.01506582647562027,0,0.0037664566189050674,0.01600744016468525,0,-0.026365196332335472,-0.04425586387515068,0,0.01506582647562027,0.02730681002140045,0,0,-0.020715512335300446,0,0.007532913237810135,0.017890669405460358,0,-0.01506582647562027,-0.03107326664030552,0,0.007532913237810135,0.04143102467060089,0,-0.007532913237810135,-0.017890669405460358,0,0.048963937908411026,0.008474527858197689,0,-0.0037664566189050674,-0.0037664566189050674,0,0.0037664566189050674,0.02730681002140045,0,0,-0.02824842557311058,0,0.06026330590248108,0.011299369856715202,0,-0.0037664566189050674,-0.0037664566189050674,0,0.033898111432790756,0.0037664566189050674,0,-0.01506582647562027,-0.01600744016468525,0,0.026365196332335472,0.0018832283094525337,0,0,-0.04143102467060089,0,0.007532913237810135,0.05743846297264099,0,0,-0.033898111432790756,0,0.07909558713436127,0,0,-0.1318259835243225,-0.013182598166167736,0,0.0037664566189050674,0.008474527858197689,0,-0.011299369856715202,-0.0018832283094525337,0,0.01506582647562027,0.005649684928357601,0,-0.033898111432790756,-0.026365196332335472,0,0.007532913237810135,0.008474527858197689,0,-0.018832283094525337,-0.01600744016468525,0,0.01506582647562027,0.016949055716395378,0,-0.0037664566189050674,-0.009416141547262669,0,0,0.010357756167650223,0,-0.12052661180496216,-0.2787177860736847,0,0.01506582647562027,0.0028248424641788006,0,-0.04519747942686081,-0.0546136200428009,0],"text":"10 rem dice dodge r vonk\r\n20 rem based on dice game of same name by n reymann 2012\r\n30 poke 53280,0:poke 53281,1:poke 646,0\r\n40 z=rnd(-ti):print\"“\":print\"this game is called 'dice dodge'.\"\r\n50 print:print\"the object is to the get as mamy points\"\r\n60 print\"as possible.\"\r\n70 print:print\"the game board looks like this:\"\r\n80 print:print\"               1 2 3 4 5 6\"\r\n90 print:print\"             1 . . . . . .\"\r\n100 print:print\"             2 . . . . . .\"\r\n110 print:print\"             3 . . . . . .\"\r\n120 print:print\"             4 . . . . . .\"\r\n130 print:print\"             5 . . . . . .\"\r\n140 print:print\"             6 . . . . . .\"\r\n150 print:print:print\"                              hit a key\"\r\n160 get i$:if i$=\"\" then 160\r\n170 print\"“\":print\"two dice are used, the first die for\"\r\n180 print\"the rows and the other for the columns.\"\r\n190 print:print\"each play is as follows:\"\r\n200 print\"1) roll both dice\"\r\n210 print\"2) place a marker on the intersection\"\r\n220 print\"of the row and column that is rolled.\"\r\n230 print\"for example, if you rolled a 3 on the\"\r\n240 print\"rows die and a 5 on the columns die,\"\r\n250 print\"you would place a marker on the space\"\r\n260 print\"corresponding to the fifth row from\"\r\n270 print\"the left and the third row from the\"\r\n280 print\"top.\"\r\n290 print\"3) re-roll both dice, or just the one,\"\r\n300 print\"and place another marker on the\"\r\n310 print\"corresponding intersection if it is\"\r\n320 print\"not already filled. if you re-roll one\"\r\n330 print\"die, the other keeps the same value it\"\r\n340 print\"had previously. if you roll a space\"\r\n350 print\"that has a marker on it, the game ends\"\r\n360 print\"and your score is tallied, otherwise\"\r\n370 print\"keep repeating this step.\"\r\n380 print\"                              hit a key\"\r\n390 get i$:if i$=\"\" then 390\r\n400 print\"“\":print\"your score is calculated by taking the\"\r\n410 print\"squares of the number of markers in\"\r\n420 print\"each column and row, and adding them\"\r\n430 print\"all together. each marker will be\"\r\n440 print\"scored twice: once as part of its\"\r\n450 print\"column, and once as part of its row.\"\r\n460 for i=1 to 16:print:next i:print\"                              hit a key\"\r\n470 get i$:if i$=\"\" then 470\r\n480 dim b(6,6)\r\n490 for i=1 to 6:for j=1 to 6:b(i,j)=0:next j,i:d1=0:d2=0:t=0\r\n500 print\"“\":print tab(15);\"1 2 3 4 5 6\"\r\n510 print:for i=1 to 6:print tab(12);i;:for j=1 to 6\r\n520 if b(i,j)=0 then print\". \";:goto 540\r\n530 print\"o \";\r\n540 next j:print:print:next i\r\n550 if t=36 then 710\r\n560 if d1>0 then 640\r\n570 print\"hit a key to roll the dice.\"\r\n580 get i$:if i$=\"\" then 580\r\n590 print:print\"rolling...\";:d1=int(rnd(1)*6+1):d2=int(rnd(1)*6+1)\r\n600 for i=1 to 1000:next i:print\"the roll is\";d1;d2\r\n610 if b(d1,d2)=1 then 720\r\n620 print:print\"you put a marker in that square.\":b(d1,d2)=1:t=t+1\r\n630 for i=1 to 1500:next i:goto 500\r\n640 print\"reroll (b)oth dice or die (1) or (2)\";\r\n650 input i$:if i$<>\"b\" and i$<>\"1\" and i$<>\"2\" then print\"b/1/2 please.\":goto 650\r\n660 print:print\"rolling...\";\r\n670 if i$=\"2\" then 690\r\n680 d1=int(rnd(1)*6+1):if i$=\"1\" then 700\r\n690 d2=int(rnd(1)*6+1)\r\n700 goto 600\r\n710 print:print\"well done, you covered the whole board!\":goto 730\r\n720 print:print\"there's a marker in that square.\"\r\n730 for i=1 to 6:f=0:for j=1 to 6:if b(i,j)=1 then f=f+1\r\n740 next j:s=s+f^2:next i\r\n750 for i=1 to 6:f=0:for j=1 to 6:if b(j,i)=1 then f=f+1\r\n760 next j:s=s+f^2:next i\r\n770 print:print\"game over. your score is\";s\r\n780 print:print\"would you like to play again (y/n)\";\r\n790 input i$:if i$<>\"y\" and i$<>\"n\" then print:print\"(y) or (n) please.\":goto 790\r\n800 if i$=\"y\" then 490","sourcePath":"external/github.com/robfromoz_C64-BASIC/dice dodge.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/dice%20dodge.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/either or.txt","language":"basic","vector":[0,0.02481372468173504,0,0,-0.007444117218255997,0,0.07444117218255997,0.016128920018672943,0,-0.10421764105558395,-0.008684803731739521,0,0,0.007444117218255997,0,-0.014888234436511993,-0.02233235165476799,0,0.34739214181900024,0.07568185776472092,0,-0.01985097862780094,-0.0037220586091279984,0,0.004962744656950235,0.00992548931390047,0,0,0,0,0,0.06079362332820892,0,0,-0.011166175827383995,0,0,0.0024813723284751177,0,-0.00992548931390047,0,0,0.30769017338752747,0.016128920018672943,0,0,-0.013647547923028469,0,0,0.008684803731739521,0,-0.054590191692113876,0,0,0.14888234436511993,0.059552937746047974,0,0,-0.04714607447385788,0,0.014888234436511993,0.0024813723284751177,0,-0.01985097862780094,-0.011166175827383995,0,0.02481372468173504,0.008684803731739521,0,-0.034739214926958084,-0.016128920018672943,0,0.02481372468173504,0,0,-0.004962744656950235,-0.01240686234086752,0,0.004962744656950235,0.02233235165476799,0,-0.04466470330953598,-0.004962744656950235,0,0.014888234436511993,0.004962744656950235,0,-0.2183607667684555,-0.01985097862780094,0,0.004962744656950235,0,0,-0.04962744936347008,-0.029776468873023987,0,0.01985097862780094,0.0024813723284751177,0,-0.00992548931390047,-0.004962744656950235,0,0.054590191692113876,0.04218333214521408,0,-0.034739214926958084,-0.17121469974517822,0,0.034739214926958084,0.0012406861642375588,0,-0.004962744656950235,-0.04218333214521408,0,0.004962744656950235,0.18610292673110962,0,-0.08436666429042816,-0.011166175827383995,0,0,0.00620343117043376,0,-0.054590191692113876,-0.0037220586091279984,0,0.07940391451120377,0.0037220586091279984,0,-0.15880782902240753,0,0,0.00992548931390047,0.034739214926958084,0,-0.014888234436511993,-0.00620343117043376,0,0,0.15508577227592468,0,0,0,0,0,0.027295095846056938,0,-0.08932940661907196,-0.029776468873023987,0,0.01985097862780094,0.07568185776472092,0,0,0,0,0.00992548931390047,0.00992548931390047,0,-0.02481372468173504,-0.011166175827383995,0,0.01985097862780094,0.014888234436511993,0,-0.01985097862780094,-0.017369607463479042,0,0,0.04094264283776283,0,-0.16377057135105133,-0.014888234436511993,0,0,0.0037220586091279984,0,-0.01985097862780094,-0.02357303723692894,0,0.034739214926958084,0.011166175827383995,0,-0.004962744656950235,-0.1153838187456131,0,0,0.0024813723284751177,0,-0.08932940661907196,-0.031017154455184937,0,0.02481372468173504,0.01985097862780094,0,-0.004962744656950235,-0.007444117218255997,0,0.029776468873023987,0.028535783290863037,0,0,-0.02605441026389599,0,0.02481372468173504,0.017369607463479042,0,-0.02481372468173504,-0.014888234436511993,0,0,0.0024813723284751177,0,0,-0.04218333214521408,0,0.04466470330953598,0.018610293045639992,0,-0.04466470330953598,-0.05334950610995293,0,0.014888234436511993,0.03970195725560188,0,0,-0.08312597870826721,0,0.00992548931390047,0.09181077778339386,0,-0.08932940661907196,-0.01240686234086752,0,0,0.0012406861642375588,0,-0.034739214926958084,0,0,0.004962744656950235,0,0,-0.014888234436511993,-0.04466470330953598,0,0,0.00992548931390047,0,0,-0.0024813723284751177,0,0.00992548931390047,0.08188528567552567,0,0,-0.01240686234086752,0,0.00992548931390047,0.00992548931390047,0,-0.00992548931390047,-0.02357303723692894,0,0,0.037220586091279984,0,-0.01985097862780094,-0.08188528567552567,0,0.00992548931390047,0.0037220586091279984,0,-0.01985097862780094,-0.014888234436511993,0,0.01985097862780094,0.02357303723692894,0,-0.4764235019683838,-0.011166175827383995,0,0.004962744656950235,0.00620343117043376,0,-0.13895685970783234,-0.04590538889169693,0,0.04962744936347008,0.013647547923028469,0,-0.004962744656950235,-0.013647547923028469,0,0.014888234436511993,0.018610293045639992,0,-0.014888234436511993,-0.054590191692113876,0,0.014888234436511993,0.013647547923028469,0,0,-0.02481372468173504,0,0.13895685970783234,0.004962744656950235,0,-0.004962744656950235,-0.0024813723284751177,0,0.004962744656950235,0.035979900509119034,0,0,-0.031017154455184937,0,0.10918038338422775,0.016128920018672943,0,-0.00992548931390047,-0.0012406861642375588,0,0.004962744656950235,0.00620343117043376,0,0,-0.06575636565685272,0,0.00992548931390047,0,0,-0.004962744656950235,-0.031017154455184937,0,0.00992548931390047,0.02233235165476799,0,0,-0.04714607447385788,0,0.11414313316345215,0.0024813723284751177,0,-0.04962744936347008,-0.0037220586091279984,0,0.004962744656950235,0.004962744656950235,0,-0.004962744656950235,0,0,0.014888234436511993,0.004962744656950235,0,-0.02481372468173504,-0.027295095846056938,0,0,0.004962744656950235,0,-0.02481372468173504,-0.00992548931390047,0,0.03970195725560188,0.007444117218255997,0,-0.00992548931390047,-0.016128920018672943,0,0.004962744656950235,0.014888234436511993,0,-0.034739214926958084,-0.2431744933128357,0,0,0.0024813723284751177,0,-0.04962744936347008,-0.1104210689663887,0],"text":"10 rem either/or\r\n20 rem from \"the pocket calculator game book\" by e schlossberg and j brockman\r\n30 poke 53280,11:poke 53281,0:poke 646,7\r\n40 z=rnd(-ti):print\"“\":print\"this game is called 'either/or'.\"\r\n50 print:print\"the object of this game is to have the\"\r\n60 print\"largest number after ten turns.\"\r\n70 print:print\"you have ten cards between 1 and 10,\"\r\n80 print\"each labelled 0 to 9. you have a choice\"\r\n90 print\"on each turn to either (a) choose a\"\r\n100 print\"card (0-9) or (b) choose a number (0-9)\"\r\n110 print\"you must choose; you cannot have both.\"\r\n120 print:print\"each chosen number is added to your\"\r\n130 print\"total. each chosen card has its value\"\r\n140 print\"added to your total.\"\r\n150 for i=1 to 8:print:next i:print\"                              hit a key\"\r\n160 get i$:if i$=\"\" then 160\r\n170 dim c(40),n(9)\r\n180 for i=1 to 4:for j=1 to 10:c((i-1)*10+j)=j:next j:next i:for i=0 to 9\r\n190 r=int(rnd(1)*40+1):if c(r)=0 then 190\r\n200 n(i)=c(r):next i:t=0\r\n210 print\"“\":print\"your total is\";t\r\n220 print:print\"cards:  \";:f=0:for i=0 to 9:if n(i)=0 then f=f+1:goto 240\r\n230 print i;\r\n240 next i\r\n250 print:print:print\"numbers:\";:for i=0 to 9:if n(i)=0 then f=f+1:goto 270\r\n260 print i;\r\n270 next i:if f=20 then 410\r\n280 print:print:print\"would you like a (c)ard or a (n)umber?\"\r\n290 input i$:if i$<>\"c\" and i$<>\"n\" then print\"(c) or (n) please.\":goto 290\r\n300 if i$=\"n\" then 350\r\n310 print:print\"which card (0-9)\";\r\n320 input c:if c<0 or c>9 then print:print\"0-9 please.\":goto 320\r\n330 if n(c)=0 then print:print\"card #\";c;\"is unavailable.\":goto 320\r\n340 print:print\"card #\";c;\"is\";n(c);\"--- \";:t=t+n(c):n(c)=0:goto 390\r\n350 print:print\"which number (0-9)\";\r\n360 input n:if n<0 or n>9 then print:print\"0-9 please.\":goto 360\r\n370 if n(n)=0 then print:print\"number\";n;\"is unavailable.\":goto 360\r\n380 t=t+n:n(n)=0:print\r\n390 print\"your total is now\";t\r\n400 for i=1 to 1500:next i:goto 210\r\n410 print:print:print\"that's the end of the game.\"\r\n420 print:print\"you ended up with a total of\";t:if t<50 then 470\r\n430 print:print\"that's a\";:if t>49 and t<70 then print\"n ok score.\":goto 470\r\n440 if t>69 and t<80 then print\" good score!\":goto 470\r\n450 if t>79 and t<90 then print\" very good score!!\":goto 470\r\n460 if t>89 then print\"n excellent score!!!\"\r\n470 print:print\"would you like to play again (y/n)\";\r\n480 input i$:if i$<>\"y\" and i$<>\"n\" then print:print\"(y) or (n) please.\":goto 480\r\n490 if i$=\"y\" then 180\r\n","sourcePath":"external/github.com/robfromoz_C64-BASIC/either or.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/either%20or.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/four out.txt","language":"basic","vector":[0,0.014683432877063751,0,0,-0.010278402827680111,0,0.07635384798049927,0.010278402827680111,0,-0.046986985951662064,-0.016151776537299156,0,0.005873373243957758,0,0,-0.03524024039506912,-0.01762012019753456,0,0.24080830812454224,0.03524024039506912,0,-0.011746746487915516,-0.005873373243957758,0,0.03524024039506912,0.011746746487915516,0,0,-0.0014683433109894395,0,0,0.055797044187784195,0,-0.005873373243957758,-0.023493492975831032,0,0.011746746487915516,0.005873373243957758,0,-0.005873373243957758,0,0,0.30541539192199707,0.023493492975831032,0,0,-0.00881006009876728,0,0,0.00881006009876728,0,-0.07635384798049927,0,0,0.16445444524288177,0.011746746487915516,0,0,-0.03670858219265938,0,0.03524024039506912,0.010278402827680111,0,-0.011746746487915516,-0.013215089216828346,0,0.01762012019753456,0.020556805655360222,0,-0.03524024039506912,-0.011746746487915516,0,0.005873373243957758,0,0,-0.005873373243957758,-0.007341716438531876,0,0,0.023493492975831032,0,-0.046986985951662064,-0.03230355307459831,0,0.01762012019753456,0.0014683433109894395,0,-0.16445444524288177,-0.04845532774925232,0,0.01762012019753456,0.00881006009876728,0,-0.041113611310720444,-0.023493492975831032,0,0.005873373243957758,0.005873373243957758,0,-0.03524024039506912,-0.00881006009876728,0,0.06460710614919662,0.042581956833601,0,-0.03524024039506912,-0.170327827334404,0,0.041113611310720444,0.002936686621978879,0,-0.011746746487915516,-0.046986985951662064,0,0,0.12627752125263214,0,-0.011746746487915516,-0.007341716438531876,0,0,0.019088461995124817,0,-0.041113611310720444,-0.007341716438531876,0,0.11746746301651001,0,0,-0.09984734654426575,-0.002936686621978879,0,0,0.01762012019753456,0,-0.046986985951662064,-0.00440503004938364,0,0,0.1541760414838791,0,0,0,0,0,0.016151776537299156,0,-0.08810059726238251,-0.04551864042878151,0,0.03524024039506912,0.08369556814432144,0,0,0,0,0.005873373243957758,0.024961836636066437,0,-0.01762012019753456,-0.005873373243957758,0,0.023493492975831032,0.011746746487915516,0,-0.029366865754127502,-0.01762012019753456,0,0.06460710614919662,0.00881006009876728,0,-0.17620119452476501,-0.019088461995124817,0,0.011746746487915516,0.0014683433109894395,0,-0.029366865754127502,-0.024961836636066437,0,0.029366865754127502,0.019088461995124817,0,-0.005873373243957758,-0.08663225173950195,0,0,0.00881006009876728,0,-0.07048048079013824,-0.022025149315595627,0,0.046986985951662064,0.011746746487915516,0,-0.011746746487915516,-0.026430178433656693,0,0.03524024039506912,0.03230355307459831,0,-0.005873373243957758,-0.03964526951313019,0,0.09397397190332413,0.024961836636066437,0,-0.03524024039506912,-0.016151776537299156,0,0.011746746487915516,0,0,0,-0.005873373243957758,0,0.03524024039506912,0.019088461995124817,0,-0.03524024039506912,-0.03230355307459831,0,0.011746746487915516,0.06020207703113556,0,0,-0.058733731508255005,0,0,0.06020207703113556,0,-0.01762012019753456,-0.026430178433656693,0,0.029366865754127502,0.00881006009876728,0,-0.041113611310720444,0,0,0,0,0,-0.011746746487915516,-0.04551864042878151,0,0,0.020556805655360222,0,-0.01762012019753456,-0.0014683433109894395,0,0.023493492975831032,0.07929053902626038,0,-0.058733731508255005,-0.00881006009876728,0,0.005873373243957758,0.011746746487915516,0,-0.01762012019753456,-0.03377189487218857,0,0,0.07341716438531876,0,-0.011746746487915516,-0.08810059726238251,0,0.023493492975831032,0.014683432877063751,0,-0.03524024039506912,-0.01762012019753456,0,0.01762012019753456,0.019088461995124817,0,-0.58733731508255,-0.011746746487915516,0,0,0.0014683433109894395,0,-0.11746746301651001,-0.03670858219265938,0,0.023493492975831032,0.023493492975831032,0,-0.005873373243957758,-0.01762012019753456,0,0.005873373243957758,0.022025149315595627,0,-0.029366865754127502,-0.044050298631191254,0,0,0.05139201506972313,0,0,-0.027898522093892097,0,0.046986985951662064,0.007341716438531876,0,-0.005873373243957758,-0.00881006009876728,0,0.005873373243957758,0.03377189487218857,0,0,-0.026430178433656693,0,0.06460710614919662,0.016151776537299156,0,-0.029366865754127502,-0.002936686621978879,0,0.005873373243957758,0,0,0,-0.011746746487915516,0,0.029366865754127502,0.014683432877063751,0,0,-0.030835209414362907,0,0.011746746487915516,0.029366865754127502,0,0,-0.030835209414362907,0,0.023493492975831032,0,0,-0.06460710614919662,-0.020556805655360222,0,0.005873373243957758,0.011746746487915516,0,-0.005873373243957758,-0.029366865754127502,0,0.041113611310720444,0.002936686621978879,0,-0.01762012019753456,-0.030835209414362907,0,0,0.00881006009876728,0,-0.005873373243957758,-0.005873373243957758,0,0.03524024039506912,0.013215089216828346,0,-0.03524024039506912,-0.022025149315595627,0,0,0.014683432877063751,0,-0.08810059726238251,-0.3010103702545166,0,0.01762012019753456,0.016151776537299156,0,-0.041113611310720444,-0.10278403013944626,0],"text":"﻿10 rem four out\r\n20 rem from \"the pocket calculator game book\" by e schlossberg and j brockman\r\n30 poke 53280,0:poke 53281,0:poke 646,1\r\n40 print\"“\":print\"this game is called 'four out'.\"\r\n50 print:print\"the object is to get rid of a six-digit\"\r\n60 print\"number in four moves.\"\r\n70 print:print\"select a six-digit number, with all\"\r\n80 print\"digits being different from one\"\r\n90 print\"another. you then have to get rid of\"\r\n100 print\"that number in four moves using two-\"\r\n110 print\"digit numbers and any operation (*+-/).\"\r\n120 print\"each move consists of using a two-digit\"\r\n130 print\"number and an operation, e.g. '-81'.\"\r\n140 print\"you may not enter zero as the number.\"\r\n150 print:print\"hint: using divide in the game early\"\r\n160 print\"may decrease the number rapidly, but\"\r\n170 print\"you run the risk of developing decimal\"\r\n180 print\"numbers which are difficult to\"\r\n190 print\"eliminate. the best strategy is to get\"\r\n200 print\"the number to a form which is evenly\"\r\n210 print\"divisable and then divide.   hit a key\"\r\n220 get i$:if i$=\"\" then 220\r\n230 print\"“\":print\"ok, choose a six digit number\";\r\n240 input n$:if len(n$)<>6 then print:print\"six digits please.\":goto 240\r\n250 f=0:for i=1 to 6:for j=1 to 6\r\n260 if i<>j and mid$(n$,i,1)=mid$(n$,j,1) then f=1\r\n270 next j:next i:if f=0 then 290\r\n280 print:print\"digits must all be different.\":goto 240\r\n290 n=val(n$):g=0:print\"“\":print\"ok, your number is\";n:print\r\n300 input\"enter an operation and a number\";i$\r\n310 n1=val(mid$(i$,2)):o$=left$(i$,1)\r\n320 if n1<10 or n1>99 then print:print\"two digits please.\":goto 300\r\n330 if n1<>int(n1) then print:print\"number must be an integer.\":goto 300\r\n340 if o$=\"*\" or o$=\"+\" or o$=\"-\" or o$=\"/\" then 360\r\n350 print:print\"operation must be (*+-/).\":goto 300\r\n360 print:print\"ok,\";n;o$;n1;\"makes\";\r\n370 if o$=\"*\" then n=n*n1\r\n380 if o$=\"+\" then n=n+n1\r\n390 if o$=\"-\" then n=n-n1\r\n400 if o$=\"/\" then n=n/n1\r\n410 print n:g=g+1:if g=4 or n=0 then 430\r\n420 print\"you have\";4-g;\"turn(s) left.\":print:goto 300\r\n430 if n=0 then 450\r\n440 print:print\"hard luck, you didn't reach zero.\":goto 460\r\n450 print:print\"well done! you reached zero!\"\r\n460 print:print\"would you like to play again (y/n)\";\r\n470 input i$:if i$<>\"y\" and i$<>\"n\" then print:print\"(y) or (n) please.\":goto 470\r\n480 if i$=\"y\" then 230\r\n","sourcePath":"external/github.com/robfromoz_C64-BASIC/four out.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/four%20out.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/get one.txt","language":"basic","vector":[0,0.031074220314621925,0,-0.005649858620017767,-0.007062322925776243,0,0.056498583406209946,0.008474787697196007,0,-0.03954900801181793,-0.005649858620017767,0,0.016949575394392014,0,0,-0.028249291703104973,-0.015537110157310963,0,0.2655433416366577,0.02542436309158802,0,-0.005649858620017767,-0.007062322925776243,0,0.011299717240035534,0.009887252002954483,0,0,-0.011299717240035534,0,0.005649858620017767,0.06356091052293777,0,0,-0.015537110157310963,0,0.005649858620017767,0.0014124646550044417,0,0,-0.0014124646550044417,0,0.2768430709838867,0.035311613231897354,0,0,-0.007062322925776243,0,0,0.014124645851552486,0,-0.09039773792028427,-0.0028249293100088835,0,0.16384589672088623,0.022599434480071068,0,0,-0.0593235120177269,0,0.011299717240035534,0.009887252002954483,0,-0.011299717240035534,-0.014124645851552486,0,0.022599434480071068,0.011299717240035534,0,-0.03954900801181793,-0.007062322925776243,0,0.005649858620017767,0.0028249293100088835,0,-0.005649858620017767,0,0,0,0.02966175600886345,0,-0.05084872618317604,-0.0324866846203804,0,0.011299717240035534,0.0014124646550044417,0,-0.15254618227481842,-0.03672407940030098,0,0.022599434480071068,0.014124645851552486,0,-0.03389915078878403,-0.016949575394392014,0,0,0.005649858620017767,0,-0.05084872618317604,-0.011299717240035534,0,0.056498583406209946,0.0324866846203804,0,-0.045198868960142136,-0.16102096438407898,0,0.028249291703104973,0.008474787697196007,0,-0.005649858620017767,-0.04378640279173851,0,0,0.1454838514328003,0,-0.011299717240035534,-0.004237393848598003,0,0.005649858620017767,0.008474787697196007,0,-0.056498583406209946,-0.0028249293100088835,0,0.1186470240354538,0.0028249293100088835,0,-0.10734730958938599,0,0,0.005649858620017767,0.011299717240035534,0,-0.07344815880060196,-0.0014124646550044417,0,0,0.13983400166034698,0,-0.005649858620017767,-0.0014124646550044417,0,0,0.015537110157310963,0,-0.09604759514331818,-0.05084872618317604,0,0.028249291703104973,0.08192294836044312,0,0,0,0,0,0.016949575394392014,0,-0.016949575394392014,-0.005649858620017767,0,0.022599434480071068,0.016949575394392014,0,-0.016949575394392014,-0.021186968311667442,0,0.045198868960142136,0.014124645851552486,0,-0.22034448385238647,-0.031074220314621925,0,0.022599434480071068,0.0028249293100088835,0,-0.016949575394392014,-0.026836827397346497,0,0.011299717240035534,0.011299717240035534,0,0,-0.07909801602363586,0,0,0.01271218154579401,0,-0.06214844062924385,-0.016949575394392014,0,0.03389915078878403,0.01271218154579401,0,-0.016949575394392014,-0.031074220314621925,0,0.028249291703104973,0.028249291703104973,0,-0.03389915078878403,-0.038136545568704605,0,0.1299467384815216,0.021186968311667442,0,-0.016949575394392014,-0.009887252002954483,0,0.005649858620017767,0,0,-0.005649858620017767,-0.007062322925776243,0,0.05084872618317604,0.016949575394392014,0,-0.028249291703104973,-0.038136545568704605,0,0.011299717240035534,0.06356091052293777,0,0,-0.060735978186130524,0,0,0.06921076774597168,0,-0.011299717240035534,-0.038136545568704605,0,0.016949575394392014,0.0028249293100088835,0,-0.045198868960142136,-0.0028249293100088835,0,0,0.0014124646550044417,0,-0.005649858620017767,-0.04802379757165909,0,0,0.015537110157310963,0,0,0,0,0.016949575394392014,0.06921076774597168,0,-0.08474787324666977,-0.008474787697196007,0,0.005649858620017767,0.011299717240035534,0,-0.022599434480071068,-0.031074220314621925,0,0,0.06356091052293777,0,-0.011299717240035534,-0.11017224192619324,0,0.022599434480071068,0.014124645851552486,0,-0.03389915078878403,-0.011299717240035534,0,0.016949575394392014,0.011299717240035534,0,-0.5649858117103577,-0.009887252002954483,0,0,0.0014124646550044417,0,-0.1186470240354538,-0.0324866846203804,0,0.05084872618317604,0.016949575394392014,0,-0.005649858620017767,-0.021186968311667442,0,0.011299717240035534,0.016949575394392014,0,-0.011299717240035534,-0.05508612096309662,0,0,0.07062322646379471,0,0,-0.016949575394392014,0,0.03389915078878403,0.0028249293100088835,0,-0.005649858620017767,-0.015537110157310963,0,0.005649858620017767,0.03954900801181793,0,-0.005649858620017767,-0.02542436309158802,0,0.06214844062924385,0.01271218154579401,0,-0.022599434480071068,-0.0014124646550044417,0,0,0,0,0,-0.008474787697196007,0,0.045198868960142136,0.009887252002954483,0,0,-0.03672407940030098,0,0.022599434480071068,0.02966175600886345,0,-0.005649858620017767,-0.02966175600886345,0,0.045198868960142136,0.0014124646550044417,0,-0.11299716681241989,-0.01836203970015049,0,0.011299717240035534,0.008474787697196007,0,-0.005649858620017767,-0.04378640279173851,0,0.022599434480071068,0.0028249293100088835,0,-0.011299717240035534,-0.035311613231897354,0,0.005649858620017767,0.007062322925776243,0,0,-0.005649858620017767,0,0.05084872618317604,0.011299717240035534,0,-0.022599434480071068,-0.021186968311667442,0,0,0.014124645851552486,0,-0.06214844062924385,-0.2867303192615509,0,0.028249291703104973,0.011299717240035534,0,-0.028249291703104973,-0.11440963298082352,0],"text":"10 rem get one\r\n20 rem from \"the pocket computer game book 2\" by e schlossberg and j brockman\r\n30 poke 53280,6:poke 53281,6:poke 646,1\r\n40 print\"“\":print\"this game is called 'get one'.\"\r\n50 print:print\"the object is to get a total of 1 after\"\r\n60 print\"five turns.\"\r\n70 print:print\"enter a decimal number less than 1,\"\r\n80 print\"containing five different digits (for\"\r\n90 print\"example: .46235). then by adding,\"\r\n100 print\"subtracting, multiplying, or dividing\"\r\n110 print\"with one- or two-digit numbers, try to\"\r\n120 print\"get a total of 1 after five turns. a\"\r\n130 print\"'turn' is using a one- or two-digit\"\r\n140 print\"number and an operation. you may use\"\r\n150 print\"decimal numbers but only two-digit\"\r\n160 print\"decimal numbers (for example: .44).\"\r\n170 for i=1 to 7:print:next i:print\"                              hit a key\"\r\n180 get i$:if i$=\"\" then 180\r\n190 print\"“\":print\"ok, choose a decimal number with five\"\r\n200 print\"different digits\";\r\n210 input n$:if left$(n$,1)<>\".\" then print:print\"number must be a decimal.\":goto 210\r\n220 if len(mid$(n$,2))=5 then 240\r\n230 print:print\"number must have five decimal places.\":goto 210\r\n240 f=0:for i=1 to 6:for j=1 to 6\r\n250 if i<>j and mid$(n$,i,1)=mid$(n$,j,1) then f=1\r\n260 next j:next i:if f=0 then 280\r\n270 print:print\"digits must all be different.\":goto 210\r\n280 n=val(n$):g=0:print\"“\":print\"ok, your number is\";n\r\n290 input\"enter an operation and a number\";i$\r\n300 f=0:n1=val(mid$(i$,2)):o$=left$(i$,1):if mid$(i$,2,1)=\".\" then f=1\r\n310 if f=0 and n1>99 then print:print\"one or two digits please.\":goto 290\r\n320 if f=1 and len(str$(n1))<>4 then print:print\"two digits please.\":goto 290\r\n330 if o$=\"*\" or o$=\"+\" or o$=\"-\" or o$=\"/\" then 350\r\n340 print:print\"operation must be (+-*/).\":goto 290\r\n350 print:print\"ok,\";n;o$;n1;\"makes\";\r\n360 if o$=\"+\" then n=n+n1\r\n370 if o$=\"-\" then n=n-n1\r\n380 if o$=\"*\" then n=n*n1\r\n390 if o$=\"/\" then n=n/n1\r\n400 print n:g=g+1:if g=5 or n=1 then 420\r\n410 print\"you now have\";5-g;\"turns left.\":print:goto 290\r\n420 if n=1 then 440\r\n430 print:print\"hard luck, you didn't make it to 1.\":goto 450\r\n440 print:print\"well done, you made it to 1!\"\r\n450 print:print\"would you like to play again (y/n)\";\r\n460 input i$:if i$<>\"y\" and i$<>\"n\" then print:print\"(y) or (n) please.\":goto 460\r\n470 if i$=\"y\" then 190\r\n","sourcePath":"external/github.com/robfromoz_C64-BASIC/get one.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/get%20one.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/glutton!.txt","language":"basic","vector":[0.0013023533392697573,0.002930294955149293,0,0,-0.0019535301253199577,0,0.04688471928238869,0.0039070602506399155,0,-0.024744713678956032,-0.004883825313299894,0,0.0013023533392697573,0.006186178419739008,0,-0.007814120501279831,-0.014325886964797974,0,0.26828479766845703,0.07749002426862717,0,-0.02734941989183426,-0.005535001866519451,0,0.0013023533392697573,0.10809532552957535,0,-0.0013023533392697573,-0.007814120501279831,0,0.0013023533392697573,0.037768248468637466,0,0,-0.007814120501279831,0,0.0013023533392697573,0.0013023533392697573,0,-0.0026047066785395145,-0.0013023533392697573,0,0.049489427357912064,0.0169305931776762,0,0,-0.0035814717411994934,0,0,0.0026047066785395145,0,-0.037768248468637466,-0.0009767650626599789,0,0.1354447454214096,0.0631641373038292,0,0,-0.14423564076423645,0,0.04297766089439392,0.006186178419739008,0,-0.0026047066785395145,-0.011721179820597172,0,0.0898623839020729,0.0026047066785395145,0,-0.014325886964797974,-0.019209712743759155,0,0.009116473607718945,0.0035814717411994934,0,-0.0039070602506399155,-0.0016279417322948575,0,0.00651176692917943,0.028651773929595947,0,-0.039070602506399155,-0.0019535301253199577,0,0.0039070602506399155,0.0009767650626599789,0,-0.1706082969903946,-0.007162943482398987,0,0,0.02897736243903637,0,-0.04688471928238869,-0.02734941989183426,0,0.0039070602506399155,0.0019535301253199577,0,-0.009116473607718945,-0.0003255883348174393,0,0.1015835627913475,0.023767948150634766,0,-0.024744713678956032,-0.07586207985877991,0,0.014325886964797974,0.0009767650626599789,0,-0.0039070602506399155,-0.014325886964797974,0,0.0026047066785395145,0.13511915504932404,0,-0.0039070602506399155,-0.01367470994591713,0,0.0013023533392697573,0.0019535301253199577,0,-0.04297766089439392,-0.0026047066785395145,0,0.011721179820597172,0.0035814717411994934,0,-0.17321299016475677,-0.0003255883348174393,0,0.0026047066785395145,0.008790885098278522,0,-0.028651773929595947,-0.0016279417322948575,0,0,0.03646589443087578,0,-0.0013023533392697573,-0.0003255883348174393,0,0.005209413357079029,0.0035814717411994934,0,-0.12111886590719223,-0.020837653428316116,0,0.009116473607718945,0.06837355345487595,0,-0.0013023533392697573,-0.0003255883348174393,0,0.0169305931776762,0.022140007466077805,0,-0.0026047066785395145,-0.0019535301253199577,0,0.1810271143913269,0.0455823689699173,0,-0.009116473607718945,-0.007488531991839409,0,0.0013023533392697573,0.035814717411994934,0,-0.3594495356082916,-0.07000149041414261,0,0.0039070602506399155,0.004558236803859472,0,-0.007814120501279831,-0.020512064918875694,0,0.005209413357079029,0.003255883464589715,0,-0.0039070602506399155,-0.09409502893686295,0,0.0013023533392697573,0.0013023533392697573,0,-0.05469883978366852,-0.023442359641194344,0,0.24484242498874664,0.015628241002559662,0,-0.019535301253199577,-0.005535001866519451,0,0.3386118710041046,0.05079178139567375,0,-0.028651773929595947,-0.015302651561796665,0,0.12242121249437332,0.007814120501279831,0,-0.015628241002559662,-0.014651475474238396,0,0,0.0016279417322948575,0,-0.0026047066785395145,-0.0019535301253199577,0,0.06251296401023865,0.012372356839478016,0,-0.009116473607718945,-0.02767500840127468,0,0.005209413357079029,0.006186178419739008,0,-0.0013023533392697573,-0.08856002986431122,0,0.0026047066785395145,0.06837355345487595,0,-0.032558832317590714,-0.02116324193775654,0,0.014325886964797974,0.0003255883348174393,0,-0.039070602506399155,-0.0009767650626599789,0,0,0.002930294955149293,0,-0.00651176692917943,-0.060559432953596115,0,0.0039070602506399155,0.004883825313299894,0,-0.00651176692917943,-0.0013023533392697573,0,0.005209413357079029,0.020837653428316116,0,0,-0.0013023533392697573,0,0.0039070602506399155,0.09051355719566345,0,-0.005209413357079029,-0.014000298455357552,0,0.11070003360509872,0.034512363374233246,0,-0.007814120501279831,-0.1797247678041458,0,0.005209413357079029,0.012697945348918438,0,-0.0013023533392697573,-0.004558236803859472,0,0.0013023533392697573,0.025070302188396454,0,-0.25395891070365906,-0.005535001866519451,0,0.0013023533392697573,0.002930294955149293,0,-0.04167530685663223,-0.028326185420155525,0,0.0039070602506399155,0.12404915690422058,0,0,-0.019535301253199577,0,0.005209413357079029,0.17028270661830902,0,-0.007814120501279831,-0.05697796121239662,0,0.011721179820597172,0.06121060624718666,0,-0.0013023533392697573,-0.019535301253199577,0,0.032558832317590714,0.0009767650626599789,0,-0.0013023533392697573,-0.0035814717411994934,0,0.04688471928238869,0.05665237084031105,0,-0.0013023533392697573,-0.01074441522359848,0,0.014325886964797974,0.006186178419739008,0,-0.007814120501279831,-0.0016279417322948575,0,0.0026047066785395145,0.0019535301253199577,0,-0.0013023533392697573,-0.017256181687116623,0,0.0026047066785395145,0.007488531991839409,0,-0.0026047066785395145,-0.030279716476798058,0,0.0026047066785395145,0.002930294955149293,0,-0.0013023533392697573,-0.046559132635593414,0,0.1250259280204773,0.0026047066785395145,0,-0.2721918523311615,-0.010418826714158058,0,0.005209413357079029,0.0026047066785395145,0,-0.0039070602506399155,-0.0003255883348174393,0,0.005209413357079029,0.003255883464589715,0,-0.03516354039311409,-0.032884422689676285,0,0.005209413357079029,0.05762913450598717,0,0,-0.00423264829441905,0,0.05469883978366852,0.006837354972958565,0,-0.0039070602506399155,-0.0013023533392697573,0,0,0.04590795561671257,0,-0.011721179820597172,-0.12925857305526733,0,0.0026047066785395145,0.0009767650626599789,0,-0.05079178139567375,-0.11070003360509872,0],"text":"10 rem glutton! r vonk 2020\r\n20 rem based on 'greed', a game by f smith and m day\r\n30 z=rnd(-ti):poke 53280,0:poke 53281,0:poke 646,1\r\n40 print\"“\":print\"this game is called 'glutton!'\"\r\n50 print:print\"in this game, you eat as much as you\"\r\n60 print\"can before munching yourself into a\"\r\n70 print\"corner.\"\r\n80 print:print\"when you move in a direction, you erase\"\r\n90 print\"n grid squares in that direction, n\"\r\n100 print\"being the first number in that\"\r\n110 print\"direction and your score for the move.\"\r\n120 print\"you cannot move onto a space you've\"\r\n130 print\"already eaten, and the game ends when\"\r\n140 print\"you cannot move.\"\r\n150 print:print\"use the following keys to move:\"\r\n160 print:print\"                q w e\"\r\n170 print:print\"                a   d\"\r\n180 print:print\"                z x c\"\r\n190 print:print\"                              hit a key\"\r\n200 get i$:if i$<>\"\" then 200\r\n210 get i$:if i$=\"\" then 210\r\n220 print\"“\":print\"please wait, setting up the board.\"\r\n230 dim b$(20,39)\r\n240 for i=1 to 20:for j=1 to 39:b$(i,j)=chr$(48+int(rnd(1)*9+1)):next j:next i\r\n250 p$=\"@\":x=19:y=10:b$(y,x)=p$:s=0:t=0:h=0:l=0\r\n260 print\"“\":for i=1 to 20:for j=1 to 39:print b$(i,j);:next j:print:next i\r\n270 if l=8 then 1510\r\n280 print:print\"score:\";s;int(t/780*10000+.5)/100;\"%\";tab(31);\"glutton!\"\r\n290 get i$:if i$<>\"\" then 290\r\n300 get i$:if i$=\"\" then 300\r\n310 if i$=\"w\" or i$=\"x\" or i$=\"a\" or i$=\"d\" then 350\r\n320 if i$=\"q\" or i$=\"c\" or i$=\"e\" or i$=\"z\" then 670\r\n330 goto 300\r\n340 rem *** up **\r\n350 if i$<>\"w\" then 430\r\n360 if y=1 or (y>1 and b$(y-1,x)=\" \") then 300\r\n370 b=val(b$(y-1,x)):if y-b<1 then 300\r\n380 f=0:for i=y to y-b step -1:if b$(i,x)=\" \" then f=1\r\n390 next i:if f=1 then 300\r\n400 b$(y,x)=\" \":for i=y to y-b step -1:s=s+val(b$(i,x)):t=t+1:b$(i,x)=\" \"\r\n410 next i:y=i+1:b$(y,x)=p$:goto 1030\r\n420 rem *** down ***\r\n430 if i$<>\"x\" then 510\r\n440 if y=20 or (y<20 and b$(y+1,x)=\" \") then 300\r\n450 b=val(b$(y+1,x)):if y+b>20 then 300\r\n460 f=0:for i=y to y+b:if b$(i,x)=\" \" then f=1\r\n470 next i:if f=1 then 300\r\n480 b$(y,x)=\" \":for i=y to y+b:s=s+val(b$(i,x)):t=t+1:b$(i,x)=\" \"\r\n490 next i:y=i-1:b$(y,x)=p$:goto 1030\r\n500 rem *** left ***\r\n510 if i$<>\"a\" then 590\r\n520 if x=1 or (x>1 and b$(y,x-1)=\" \") then 300\r\n530 b=val(b$(y,x-1)):if x-b<1 then 300\r\n540 f=0:for i=x to x-b step -1:if b$(y,i)=\" \" then f=1\r\n550 next i:if f=1 then 300\r\n560 b$(y,x)=\" \":for i=x to x-b step -1:s=s+val(b$(y,i)):t=t+1:b$(y,i)=\" \"\r\n570 next i:x=i+1:b$(y,x)=p$:goto 1030\r\n580 rem *** right ***\r\n590 if x=39 or (x<39 and b$(y,x+1)=\" \") then 300\r\n600 b=val(b$(y,x+1)):if x+b>39 then 300\r\n610 f=0:for i=x to x+b:if b$(y,i)=\" \" then f=1\r\n620 next i:if f=1 then 300\r\n630 b$(y,x)=\" \":for i=x to x+b:s=s+val(b$(y,i)):t=t+1:b$(y,i)=\" \"\r\n640 next i:x=i-1:b$(y,x)=p$:goto 1030\r\n650 rem *** diagonal directions ***\r\n660 rem *** up and left ***\r\n670 if i$<>\"q\" then 760\r\n680 if x=1 or y=1 then 300\r\n690 if (x>1 or y>1) and b$(y-1,x-1)=\" \" then 300\r\n700 b=val(b$(y-1,x-1)):if y-b<1 or x-b<1 then 300\r\n710 xx=x+1:f=0:for i=y to y-b step -1:xx=xx-1:if b$(i,xx)=\" \" then f=1\r\n720 next i:if f=1 then 300\r\n730 b$(y,x)=\" \":x=x+1:for i=y to y-b step -1:x=x-1:s=s+val(b$(i,x)):t=t+1\r\n740 b$(i,x)=\" \":next i:y=i+1:b$(y,x)=p$:goto 1030\r\n750 rem *** down and right ***\r\n760 if i$<>\"c\" then 850\r\n770 if x=39 or y=20 then 300\r\n780 if (x<39 or y<20) and b$(y+1,x+1)=\" \" then 300\r\n790 b=val(b$(y+1,x+1)):if y+b>20 or x+b>39 then 300\r\n800 xx=x-1:f=0:for i=y to y+b:xx=xx+1:if b$(i,xx)=\" \" then f=1\r\n810 next i:if f=1 then 300\r\n820 b$(y,x)=\" \":x=x-1:for i=y to y+b:x=x+1:s=s+val(b$(i,x)):t=t+1\r\n830 b$(i,x)=\" \":next i:y=i-1:b$(y,x)=p$:goto 1030\r\n840 rem *** up and right ***\r\n850 if i$<>\"e\" then 940\r\n860 if x=39 or y=1 then 300\r\n870 if (x<39 or y>1) and b$(y-1,x+1)=\" \" then 300\r\n880 b=val(b$(y-1,x+1)):if y-b<1 or x+b>39 then 300\r\n890 xx=x-1:f=0:for i=y to y-b step -1:xx=xx+1:if b$(i,xx)=\" \" then f=1\r\n900 next i:if f=1 then 300\r\n910 b$(y,x)=\" \":x=x-1:for i=y to y-b step -1:x=x+1:s=s+val(b$(i,x)):t=t+1\r\n920 b$(i,x)=\" \":next i:y=i+1:b$(y,x)=p$:goto 1030\r\n930 rem *** down and left ***\r\n940 if x=1 or y=20 then 300\r\n950 if (x>1 or y<20) and b$(y+1,x-1)=\" \" then 300\r\n960 b=val(b$(y+1,x-1)):if y+b>20 or x-b<1 then 300\r\n970 xx=x+1:for i=y to y+b:xx=xx-1:if b$(i,xx)=\" \" then f=1\r\n980 next i:if f=1 then 300\r\n990 b$(y,x)=\" \":x=x+1:for i=y to y+b:x=x-1:s=s+val(b$(i,x)):t=t+1\r\n1000 b$(i,x)=\" \":next i:y=i-1:b$(y,x)=p$:goto 1030\r\n1010 rem *** check for loss ***\r\n1020 rem *** can't go up? ***\r\n1030 l=0:if y=1 then l=l+1:goto 1090\r\n1040 if y>1 and b$(y-1,x)=\" \" then l=l+1:goto 1090\r\n1050 b=val(b$(y-1,x)):if y-b<1 then l=l+1:goto 1090\r\n1060 f=0:for i=y to y-b step -1:if b$(i,x)=\" \" then f=1\r\n1070 next i:if f=1 then l=l+1\r\n1080 rem *** or down? ***\r\n1090 if y=20 then l=l+1:goto 1150\r\n1100 if y<20 and b$(y+1,x)=\" \" then l=l+1:goto 1150\r\n1110 b=val(b$(y+1,x)):if y+b>20 then l=l+1:goto 1150\r\n1120 f=0:for i=y to y+b:if b$(i,x)=\" \" then f=1\r\n1130 next i:if f=1 then l=l+1\r\n1140 rem *** or left? ***\r\n1150 if x=1 then l=l+1:goto 1210\r\n1160 if x>1 and b$(y,x-1)=\" \" then l=l+1:goto 1210\r\n1170 b=val(b$(y,x-1)):if x-b<1 then l=l+1:goto 1210\r\n1180 f=0:for i=x to x-b step -1:if b$(y,i)=\" \" then f=1\r\n1190 next i:if f=1 then l=l+1\r\n1200 rem *** or right? ***\r\n1210 if x=39 then l=l+1:goto 1270\r\n1220 if x<39 and b$(y,x+1)=\" \" then l=l+1:goto 1270\r\n1230 b=val(b$(y,x+1)):if x+b>39 then l=l+1:goto 1270\r\n1240 f=0:for i=x to x+b:if b$(y,i)=\" \" then f=1\r\n1250 next i:if f=1 then l=l+1\r\n1260 rem *** or up and left? ***\r\n1270 if x=1 or y=1 then l=l+1:goto 1330\r\n1280 if (x>1 or y>1) and b$(y-1,x-1)=\" \" then l=l+1:goto 1330\r\n1290 b=val(b$(y-1,x-1)):if y-b<1 or x-b<1 then l=l+1:goto 1330\r\n1300 xx=x+1:f=0:for i=y to y-b step -1:xx=xx-1:if b$(i,xx)=\" \" then f=1\r\n1310 next i:if f=1 then l=l+1\r\n1320 rem *** or down and right? ***\r\n1330 if x=39 or y=20 then l=l+1:goto 1390\r\n1340 if (x<39 or y<20) and b$(y+1,x+1)=\" \" then l=l+1:goto 1390\r\n1350 b=val(b$(y+1,x+1)):if y+b>20 or x+b>39 then l=l+1:goto 1390\r\n1360 xx=x-1:f=0:for i=y to y+b:xx=xx+1:if b$(i,xx)=\" \" then f=1\r\n1370 next i:if f=1 then l=l+1\r\n1380 rem *** or up and right? ***\r\n1390 if x=39 or y=1 then l=l+1:goto 1450\r\n1400 if (x<39 or y>1) and b$(y-1,x+1)=\" \" then l=l+1:goto 1450\r\n1410 b=val(b$(y-1,x+1)):if y-b<1 or x+b>39 then l=l+1:goto 1450\r\n1420 xx=x-1:f=0:for i=y to y-b step -1:xx=xx+1:if b$(i,xx)=\" \" then f=1\r\n1430 next i:if f=1 then l=l+1\r\n1440 rem *** or down and left? ***\r\n1450 if x=1 or y=20 then l=l+1:goto 1500\r\n1460 if (x>1 or y<20) and b$(y+1,x-1)=\" \" then l=l+1:goto 1500\r\n1470 b=val(b$(y+1,x-1)):if y+b>20 or x-b<1 then l=l+1:goto 1500\r\n1480 xx=x+1:for i=y to y+b:xx=xx-1:if b$(i,xx)=\" \" then f=1\r\n1490 next i:if f=1 then l=l+1\r\n1500 goto 260\r\n1510 print:print\"game over. your score is\";s\r\n1520 print\"you cleared\";int(t/780*10000+.5)/100;\"%. play again? (y/n)\"\r\n1530 get i$:if i$<>\"\" then 1530\r\n1540 get i$:if i$<>\"y\" and i$<>\"n\" then 1540\r\n1550 if i$=\"y\" then 240\r\n","sourcePath":"external/github.com/robfromoz_C64-BASIC/glutton!.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/glutton!.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/goth lyrics.txt","language":"basic","vector":[0.006583006586879492,0.011520261876285076,0,-0.006583006586879492,-0.004937254823744297,0,0.019749019294977188,0.0074058822356164455,0,-0.016457516700029373,-0.020571894943714142,0,0.013166013173758984,0.016457516700029373,0,-0.013166013173758984,-0.030446406453847885,0,0.14811764657497406,0.018926143646240234,0,-0.019749019294977188,-0.008228758350014687,0,0.006583006586879492,0.013988888822495937,0,-0.006583006586879492,-0.005760130938142538,0,0.026332026347517967,0.2164163440465927,0,-0.009874509647488594,-0.008228758350014687,0,0.009874509647488594,0.006583006586879492,0,-0.032915033400058746,-0.005760130938142538,0,0.026332026347517967,0.008228758350014687,0,-0.006583006586879492,-0.004114379175007343,0,0,0.021394772455096245,0,-0.016457516700029373,-0.003291503293439746,0,0.023040523752570152,0.048549674451351166,0,-0.003291503293439746,-0.059247057884931564,0,0.009874509647488594,0.005760130938142538,0,-0.009874509647488594,-0.026332026347517967,0,0.016457516700029373,0.021394772455096245,0,-0.013166013173758984,-0.04032091423869133,0,0.013166013173758984,0.009874509647488594,0,-0.006583006586879492,-0.06583006680011749,0,0.019749019294977188,0.009874509647488594,0,-0.006583006586879492,-0.003291503293439746,0,0.023040523752570152,0.004114379175007343,0,-0.16128365695476532,-0.030446406453847885,0,0.009874509647488594,0.01234313752502203,0,-0.016457516700029373,-0.005760130938142538,0,0,0.006583006586879492,0,0,-0.005760130938142538,0,0.013166013173758984,0.013988888822495937,0,-0.013166013173758984,-0.02715490199625492,0,0.003291503293439746,0.008228758350014687,0,-0.009874509647488594,-0.009874509647488594,0,0.003291503293439746,0.07735032588243484,0,-0.009874509647488594,-0.010697386227548122,0,0.003291503293439746,0.004937254823744297,0,-0.06583006680011749,-0.009874509647488594,0,0.003291503293439746,0.018926143646240234,0,-0.1579921543598175,-0.013166013173758984,0,0.003291503293439746,0.008228758350014687,0,-0.016457516700029373,-0.018926143646240234,0,0.013166013173758984,0.01563464105129242,0,-0.003291503293439746,-0.004114379175007343,0,0.009874509647488594,0.014811764471232891,0,-0.016457516700029373,-0.010697386227548122,0,0.009874509647488594,0.013166013173758984,0,-0.006583006586879492,-0.003291503293439746,0,0.046081047505140305,0.0074058822356164455,0,-0.006583006586879492,-0.005760130938142538,0,0.009874509647488594,0.016457516700029373,0,-0.003291503293439746,-0.008228758350014687,0,0.016457516700029373,0.027977777644991875,0,-0.12507712841033936,-0.030446406453847885,0,0.019749019294977188,0.01234313752502203,0,-0.013166013173758984,-0.009874509647488594,0,0.016457516700029373,0.021394772455096245,0,-0.029623528942465782,-0.09627646952867508,0,0.019749019294977188,0.00905163399875164,0,-0.05595555528998375,-0.04032091423869133,0,0.04937255010008812,0.0024686274118721485,0,-0.013166013173758984,-0.001645751646719873,0,0.03620653599500656,0.0074058822356164455,0,-0.016457516700029373,-0.018926143646240234,0,0.7471712827682495,0.004937254823744297,0,-0.013166013173758984,-0.005760130938142538,0,0.013166013173758984,0.003291503293439746,0,-0.009874509647488594,-0.006583006586879492,0,0.013166013173758984,0.006583006586879492,0,-0.009874509647488594,-0.037029411643743515,0,0.019749019294977188,0.004937254823744297,0,0,-0.08228757977485657,0,0.023040523752570152,0.03867516294121742,0,-0.019749019294977188,-0.013166013173758984,0,0.003291503293439746,0.008228758350014687,0,-0.052664052695035934,-0.003291503293439746,0,0.006583006586879492,0.011520261876285076,0,-0.03620653599500656,-0.010697386227548122,0,0.006583006586879492,0.0074058822356164455,0,-0.006583006586879492,-0.011520261876285076,0,0.019749019294977188,0.029623528942465782,0,0,-0.004937254823744297,0,0.009874509647488594,0.004937254823744297,0,-0.023040523752570152,-0.005760130938142538,0,0.023040523752570152,0.013988888822495937,0,-0.016457516700029373,-0.06336143612861633,0,0.013166013173758984,0.01234313752502203,0,-0.009874509647488594,-0.00905163399875164,0,0.016457516700029373,0.01234313752502203,0,-0.07570457458496094,-0.01810326799750328,0,0.006583006586879492,0.013166013173758984,0,-0.013166013173758984,-0.029623528942465782,0,0.013166013173758984,0.029623528942465782,0,-0.003291503293439746,-0.008228758350014687,0,0.006583006586879492,0.023863399401307106,0,-0.026332026347517967,-0.048549674451351166,0,0.023040523752570152,0.3760542571544647,0,-0.032915033400058746,-0.010697386227548122,0,0.013166013173758984,0.006583006586879492,0,-0.009874509647488594,-0.004937254823744297,0,0.009874509647488594,0.009874509647488594,0,-0.003291503293439746,-0.008228758350014687,0,0.059247057884931564,0.010697386227548122,0,-0.009874509647488594,-0.0024686274118721485,0,0.006583006586879492,0.01234313752502203,0,-0.006583006586879492,-0.01234313752502203,0,0.009874509647488594,0.0024686274118721485,0,-0.003291503293439746,-0.04278954491019249,0,0.032915033400058746,0.004114379175007343,0,-0.006583006586879492,-0.05760130658745766,0,0.08557908982038498,0.004114379175007343,0,-0.10861960798501968,-0.0074058822356164455,0,0.009874509647488594,0.013166013173758984,0,-0.026332026347517967,-0.0008228758233599365,0,0.039498038589954376,0.0074058822356164455,0,-0.06253856420516968,-0.01563464105129242,0,0.016457516700029373,0.013988888822495937,0,-0.12836863100528717,-0.009874509647488594,0,0.009874509647488594,0.01810326799750328,0,-0.006583006586879492,-0.006583006586879492,0,0.003291503293439746,0.010697386227548122,0,-0.04937255010008812,-0.03867516294121742,0,0.013166013173758984,0.0074058822356164455,0,-0.003291503293439746,-0.03785228729248047,0],"text":"10 rem random goth lyric generator\r\n20 rem javascript by c herdt and m tarrow, 1998\r\n30 rem converted to basic by r vonk, 2020\r\n40 z=rnd(-ti):na=22:sa=35:sb=27:va=31:vb=33:ad=57:ob=47\r\n50 data abyss,noir,eldritch,cave,cthulu,ivy,hypo,fiend,kabbal,mortis,alien\r\n60 data newbaten,mordant,rasputin,osiris,suspiria,belladonna,malaisia\r\n70 data dehydrette,dropsy,fantazius,corvus\r\n80 data the devil,a black cat,the spider,a dull knife,evil,fire,she,everything\r\n90 data loneliness,the mask,jesus,the slave,my slave,my master,terror\r\n100 data my solitude,sorrow,my anguish,icarus,persephone,the moon,death,faith\r\n110 data the muse,oblivion,my lust,a vavenous she-wolf,your touch,my prey\r\n120 data the asylum,this torrential rain,agony,the stench,hunger,darkness\r\n130 data devils,black cats,spiders,daggers,spirits,pyres,i,banshees,thine eyes\r\n140 data sinners,prayers,souls,wolves,rats,bats,seraphim,thorns,harpies\r\n150 data blazing pinions,ravens,vermin,you,foolish mortals,serpents,nosferatu\r\n160 data worms,vengeful cripples\r\n170 data secretes,destroys,spins,slices,engulfs,eviscerates,whispers,clings to\r\n180 data hides under,kisses,writhes,howls,sobs,cries,mourns,consumes\r\n190 data lies weeping,ascends,desires,entangles,grovels before,spirals,summons\r\n200 data plucks,curses,quivers,unleashes,dances on,permeates,scoffs at\r\n210 data spews forth\r\n220 data secrete,destroy,spin,slice,engulf,eviscerate,whisper,cling to\r\n230 data hide under,kiss,writhe,lock up,murder,conspire,languish,suffer,regret\r\n240 data suck,devour,desire,shroud,taunt,swell with,implore,stalk,unleash\r\n250 data call forth,drink,collapse from,shudder with,recoil from\r\n260 data run amuck through,feign\r\n270 data bloody,nocturnal,delicate,helpless,virginal,clandestine,unclean,dark\r\n280 data lonely,lethargic,desperate,sanguine,luscious,sweet,midnight,inner\r\n290 data blackened,feral,whirling,velvet,trembling,dying,leathery,silver,red\r\n300 data yearning,precious,mocking,infernal,labyrinthine,beloved,severed\r\n310 data enraptured,incessant,celestial,unfathomable,blasphemous,tainted\r\n320 data embittered,vile,hollow,cringing,gloomy,melancholy,crucified\r\n330 data excruciating,malodorous,spectral,diseased,serpentine,fleeting,barren\r\n340 data perfidious,darkened,elysian,lugubrious,baleful\r\n350 data poison,innocents,webs,beauty,graves,manacles,despair,night,needles\r\n360 data fangs,passion,divide,marrow,tombs,abattoir,terror,prayers,splendor\r\n370 data soul,tears,void,nothingness,concubine,brilliance,torment,deception\r\n380 data glossolalia,sepulchre,clutches,caresses,effervescence,rapture,decay\r\n390 data twilight,fragments,carrion,addiction,psychosis,disillusionment\r\n400 data arterial spray,eclipse,treachery,requiem,decrepitude,minions,penance\r\n410 data impudence\r\n420 dim na$(na),sa$(sa),sb$(sb),va$(va),vb$(vb),ad$(ad),ob$(ob)\r\n430 for i=1 to na:read na$(i):next i:for i=1 to sa:read sa$(i):next i\r\n440 for i=1 to sb:read sb$(i):next i:for i=1 to va:read va$(i):next i\r\n450 for i=1 to vb:read vb$(i):next i:for i=1 to ad:read ad$(i):next i\r\n460 for i=1 to ob:read ob$(i):next i\r\n470 print\"“\";:poke 53280,0:poke 53281,0:poke 646,1\r\n480 f$=na$(int(rnd(1)*na+1)):l$=na$(int(rnd(1)*na+1)):print\"by \";f$;\" \";l$:print\r\n490 for i=1 to 4:for j=1 to 4:r=rnd(1):if r>.5 then 530\r\n500 gs$=sa$(int(rnd(1)*sa+1)):gv$=va$(int(rnd(1)*va+1))\r\n510 ga$=ad$(int(rnd(1)*ad+1)):og$=ob$(int(rnd(1)*ob+1))\r\n520 print gs$;\" \";gv$;\" \";ga$;\" \";og$:goto 560\r\n530 gs$=sb$(int(rnd(1)*sb+1)):gv$=vb$(int(rnd(1)*vb+1))\r\n540 ga$=ad$(int(rnd(1)*ad+1)):og$=ob$(int(rnd(1)*ob+1))\r\n550 print gs$;\" \";gv$;\" \";ga$;\" \";og$\r\n560 next j:print:next i\r\n570 get i$:if i$=\"\" then 570\r\n580 goto 470\r\n","sourcePath":"external/github.com/robfromoz_C64-BASIC/goth lyrics.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/goth%20lyrics.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/hamback.txt","language":"basic","vector":[0.01169793214648962,0.01169793214648962,0,0,-0.002924483036622405,0,0.06433862447738647,0.01169793214648962,0,-0.13452622294425964,-0.02339586429297924,0,0.01169793214648962,0,0,-0.02339586429297924,-0.027782587334513664,0,0.33339107036590576,0.027782587334513664,0,-0.02339586429297924,-0.01608465611934662,0,0.00584896607324481,0.030707070603966713,0,0,0,0,0,0.05848965793848038,0,0,-0.013160173781216145,0,0,0.021933622658252716,0,-0.02339586429297924,-0.004386724438518286,0,0.298297256231308,0.021933622658252716,0,-0.01169793214648962,-0.010235690511763096,0,0,0.00584896607324481,0,-0.08773449063301086,0,0,0.20471380650997162,0.038018278777599335,0,-0.00584896607324481,-0.09650793671607971,0,0.017546897754073143,0.01608465611934662,0,-0.017546897754073143,-0.013160173781216145,0,0.04679172858595848,0.00584896607324481,0,-0.08188552409410477,-0.01608465611934662,0,0.01169793214648962,0.002924483036622405,0,-0.01169793214648962,-0.002924483036622405,0,0.00584896607324481,0.002924483036622405,0,-0.08773449063301086,0,0,0.00584896607324481,0.00584896607324481,0,-0.15207311511039734,-0.048253968358039856,0,0.00584896607324481,0.007311207242310047,0,-0.035093795508146286,-0.021933622658252716,0,0.01169793214648962,0.007311207242310047,0,0,-0.0014622415183112025,0,0.13452622294425964,0.03363155573606491,0,-0.04679172858595848,-0.1827801913022995,0,0.05264069512486458,0.007311207242310047,0,-0.00584896607324481,-0.01608465611934662,0,0.00584896607324481,0.1710822582244873,0,-0.01169793214648962,-0.01169793214648962,0,0,0.00584896607324481,0,-0.04094276204705238,-0.007311207242310047,0,0.12282828241586685,0,0,-0.16377104818820953,-0.002924483036622405,0,0,0.010235690511763096,0,-0.02339586429297924,-0.019009139388799667,0,0,0.15061087906360626,0,0,-0.00584896607324481,0,0,0.021933622658252716,0,-0.09943242371082306,-0.048253968358039856,0,0.035093795508146286,0.1082058697938919,0,-0.01169793214648962,-0.002924483036622405,0,0.00584896607324481,0.01608465611934662,0,-0.01169793214648962,-0.008773448877036572,0,0.017546897754073143,0.024858105927705765,0,-0.035093795508146286,-0.04094276204705238,0,0,0.024858105927705765,0,-0.14622414112091064,-0.04971621185541153,0,0.01169793214648962,0.00584896607324481,0,-0.01169793214648962,-0.04679172858595848,0,0.02339586429297924,0.004386724438518286,0,-0.035093795508146286,-0.08334776759147644,0,0,0.002924483036622405,0,-0.08773449063301086,-0.017546897754073143,0,0.02924482896924019,0.007311207242310047,0,-0.00584896607324481,0,0,0.11113034933805466,0.06726311147212982,0,0,-0.04679172858595848,0,0.05848965793848038,0.02924482896924019,0,-0.017546897754073143,-0.01169793214648962,0,0.04094276204705238,0.00584896607324481,0,-0.017546897754073143,-0.00584896607324481,0,0.02924482896924019,0.01608465611934662,0,-0.04094276204705238,-0.05410293489694595,0,0.01169793214648962,0.06433862447738647,0,0,-0.08773449063301086,0,0,0.08334776759147644,0,-0.035093795508146286,-0.017546897754073143,0,0.04094276204705238,0.0014622415183112025,0,-0.02924482896924019,0,0,0.01169793214648962,0,0,-0.00584896607324481,-0.04971621185541153,0,0.01169793214648962,0.017546897754073143,0,-0.01169793214648962,-0.01169793214648962,0,0,0.07749880105257034,0,0,-0.008773448877036572,0,0.02339586429297924,0.008773448877036572,0,-0.00584896607324481,-0.03948051854968071,0,0.00584896607324481,0.051178451627492905,0,-0.017546897754073143,-0.074574314057827,0,0.00584896607324481,0.010235690511763096,0,-0.00584896607324481,-0.010235690511763096,0,0.00584896607324481,0.02339586429297924,0,-0.4620683193206787,-0.038018278777599335,0,0.00584896607324481,0.002924483036622405,0,-0.017546897754073143,-0.04679172858595848,0,0.017546897754073143,0.01608465611934662,0,0,-0.024858105927705765,0,0.01169793214648962,0.057027418166399,0,-0.02924482896924019,-0.038018278777599335,0,0,0.030707070603966713,0,-0.01169793214648962,-0.017546897754073143,0,0.04094276204705238,0.02339586429297924,0,-0.02924482896924019,-0.008773448877036572,0,0.00584896607324481,0.048253968358039856,0,0,-0.03216931223869324,0,0.08773449063301086,0.019009139388799667,0,-0.017546897754073143,-0.0014622415183112025,0,0.02339586429297924,0.0014622415183112025,0,0,-0.02047138102352619,0,0.02924482896924019,0.02047138102352619,0,0,-0.024858105927705765,0,0.00584896607324481,0.03655603528022766,0,0,-0.04386724531650543,0,0.07603655755519867,0.00584896607324481,0,-0.17546898126602173,-0.01169793214648962,0,0.01169793214648962,0,0,-0.01169793214648962,0,0,0.00584896607324481,0.01169793214648962,0,-0.02924482896924019,-0.027782587334513664,0,0,0.01169793214648962,0,0,-0.01169793214648962,0,0.00584896607324481,0.004386724438518286,0,0,-0.00584896607324481,0,0,0.007311207242310047,0,-0.09358345717191696,-0.2398076057434082,0,0.01169793214648962,0.002924483036622405,0,-0.035093795508146286,-0.04532948508858681,0],"text":"10 rem hamback rob vonk 2025\r\n20 rem based on board game of same name by ian and sarah walker 2007\r\n30 rem https://boardgamegeek.com/boardgame/152975/hamback\r\n40 z=rnd(-ti):poke 53280,15:poke 53281,15\r\n50 print\"{147}{144}\":print\"this game is called 'hamback'.\"\r\n60 print:print\"this game is a backgammon variant that\"\r\n70 print\"uses six counters, a six-sided die and\"\r\n80 print\"a board of seven lines. all the pieces\"\r\n90 print\"start on the rightmost line.\"\r\n100 print:print\"roll the die and move a counter to the\"\r\n110 print\"left exactly the number showing on the\"\r\n120 print\"die. if you can't move, you must move a\"\r\n130 print\"counter from the leftmost line back to\"\r\n140 print\"the start. if you have no counters in\"\r\n150 print\"the 'finish' column, the game is over.\"\r\n160 print:print\"you win when you move all the pieces to\"\r\n170 print\"'finish' column.\":for i=1 to 6:print:next i\r\n180 print\"                              hit a key\"\r\n190 get i$:if i$<>\"\" then 190\r\n200 get i$:if i$=\"\" then 200\r\n210 dim c(7):s$=\"start \":f$=\"finish\":print\"{147}\":c(7)=6\r\n220 print tab(13);\"1 2 3 4 5 6 7\":print tab(12);\"+-+-+-+-+-+-+-+\"\r\n230 for i=1 to 6:print tab(11);mid$(f$,i,1);\"!\";:for j=1 to 7\r\n240 if c(j)>0 and i<=c(j) then print\"o!\";:goto 260\r\n250 print\" !\";\r\n260 next j:print mid$(s$,i,1):next i:print tab(12);\"+-+-+-+-+-+-+-+\"\r\n270 if c(1)=6 then print:print\"you've won the game!\":end\r\n280 print:print\"hit a key to roll the die.\"\r\n290 get i$:if i$<>\"\" then 290\r\n300 get i$:if i$=\"\" then 300\r\n310 print:print\"rolling...\";:d=int(rnd(1)*6+1):for i=1 to 1000:next i\r\n320 print\"your roll is\";d:f=0:for i=2 to 7:if c(i)>0 and i-d>0 then f=1\r\n330 next i:if f=1 then 380\r\n340 print:print\"you can't move.\":if c(1)=0 then 370\r\n350 print:print\"a counter goes from the finish line     back to the start.\"\r\n360 c(1)=c(1)-1:c(7)=c(7)+1:print:goto 220\r\n370 print:print\"and your finish line is empty, so it's  game over.\":end\r\n380 print:print\"your move\";\r\n390 input a:if a<1 or a>7 then print:print\"1-7 please.\":goto 390\r\n400 if c(a)=0 then print:print\"there are no counters in that column.\":goto 390\r\n410 if a-d<1 then print:print\"you can't move there.\":goto 390\r\n420 c(a)=c(a)-1:c(a-d)=c(a-d)+1:print:print:goto 220","sourcePath":"external/github.com/robfromoz_C64-BASIC/hamback.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/hamback.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/house of dust.txt","language":"basic","vector":[0.05169304832816124,0.010338610038161278,0,-0.05169304832816124,-0.038769785314798355,0,0.020677220076322556,0.007753957528620958,0,-0.06203166022896767,-0.010338610038161278,0,0.010338610038161278,0.023261873051524162,0,-0.06203166022896767,-0.01809256710112095,0,0.2584652602672577,0.015507915057241917,0,-0.04135444015264511,-0.0025846525095403194,0,0.020677220076322556,0.01809256710112095,0,0,-0.005169305019080639,0,0.04135444015264511,0.1499098390340805,0,-0.010338610038161278,-0.015507915057241917,0,0.031015830114483833,0.01292326208204031,0,-0.04135444015264511,-0.005169305019080639,0,0.0723702684044838,0.04135444015264511,0,-0.020677220076322556,-0.01292326208204031,0,0.010338610038161278,0.010338610038161278,0,-0.020677220076322556,-0.015507915057241917,0,0.13440193235874176,0.08270888030529022,0,-0.031015830114483833,-0.06978561729192734,0,0.04135444015264511,0.007753957528620958,0,-0.04135444015264511,-0.01292326208204031,0,0.020677220076322556,0.023261873051524162,0,-0.010338610038161278,-0.04135444015264511,0,0.06203166022896767,0.0025846525095403194,0,-0.031015830114483833,-0.11889401078224182,0,0.020677220076322556,0.0025846525095403194,0,-0.08270888030529022,0,0,0.020677220076322556,0.005169305019080639,0,-0.21711081266403198,-0.046523746103048325,0,0,0.020677220076322556,0,-0.010338610038161278,-0.007753957528620958,0,0.020677220076322556,0.038769785314798355,0,0,-0.02584652416408062,0,0.020677220076322556,0.020677220076322556,0,-0.010338610038161278,-0.06203166022896767,0,0.031015830114483833,0.01809256710112095,0,-0.05169304832816124,-0.0361851342022419,0,0.04135444015264511,0.13440193235874176,0,-0.031015830114483833,-0.03360048308968544,0,0,0.01292326208204031,0,-0.06203166022896767,-0.0025846525095403194,0,0,0.031015830114483833,0,-0.21711081266403198,-0.005169305019080639,0,0,0.01809256710112095,0,-0.1137247085571289,-0.020677220076322556,0,0,0.038769785314798355,0,0,-0.01292326208204031,0,0,0.015507915057241917,0,-0.010338610038161278,-0.015507915057241917,0,0.010338610038161278,0.0723702684044838,0,0,-0.015507915057241917,0,0.05169304832816124,0.038769785314798355,0,-0.031015830114483833,-0.023261873051524162,0,0.020677220076322556,0.01292326208204031,0,-0.010338610038161278,-0.01292326208204031,0,0.06203166022896767,0.0723702684044838,0,-0.16541776061058044,-0.04910839721560478,0,0,0.01292326208204031,0,-0.05169304832816124,-0.04135444015264511,0,0.010338610038161278,0.020677220076322556,0,-0.020677220076322556,-0.1266479641199112,0,0.010338610038161278,0,0,-0.0723702684044838,-0.04393909126520157,0,0.04135444015264511,0.010338610038161278,0,-0.010338610038161278,0,0,0.05169304832816124,0.01292326208204031,0,0,-0.023261873051524162,0,0.5169305205345154,0.023261873051524162,0,-0.020677220076322556,-0.02584652416408062,0,0.010338610038161278,0.03360048308968544,0,-0.020677220076322556,-0.028431177139282227,0,0.020677220076322556,0.005169305019080639,0,-0.031015830114483833,-0.046523746103048325,0,0.020677220076322556,0.0025846525095403194,0,0,-0.12406332045793533,0,0,0.06461631506681442,0,-0.010338610038161278,-0.06720096617937088,0,0.010338610038161278,0.005169305019080639,0,-0.05169304832816124,0,0,0.010338610038161278,0.010338610038161278,0,-0.020677220076322556,-0.007753957528620958,0,0.010338610038161278,0.01292326208204031,0,-0.16541776061058044,-0.010338610038161278,0,0.010338610038161278,0.04393909126520157,0,0,-0.020677220076322556,0,0,0.01292326208204031,0,-0.04135444015264511,-0.010338610038161278,0,0.020677220076322556,0.06461631506681442,0,-0.031015830114483833,-0.0904628336429596,0,0.05169304832816124,0.010338610038161278,0,0,-0.0361851342022419,0,0.04135444015264511,0.010338610038161278,0,-0.12406332045793533,-0.01292326208204031,0,0.05169304832816124,0.020677220076322556,0,-0.020677220076322556,-0.04393909126520157,0,0.020677220076322556,0.02584652416408062,0,-0.05169304832816124,-0.02584652416408062,0,0.010338610038161278,0.031015830114483833,0,-0.010338610038161278,-0.054277703166007996,0,0.04135444015264511,0.2584652602672577,0,0,-0.01292326208204031,0,0.010338610038161278,0.010338610038161278,0,0,-0.010338610038161278,0,0.010338610038161278,0.015507915057241917,0,-0.010338610038161278,-0.01809256710112095,0,0.04135444015264511,0.01809256710112095,0,-0.020677220076322556,-0.01292326208204031,0,0.020677220076322556,0.010338610038161278,0,0,-0.01292326208204031,0,0.0723702684044838,0.005169305019080639,0,-0.010338610038161278,-0.04135444015264511,0,0.010338610038161278,0.005169305019080639,0,-0.031015830114483833,-0.06461631506681442,0,0.16541776061058044,0.005169305019080639,0,-0.13440193235874176,-0.11114005744457245,0,0.010338610038161278,0.005169305019080639,0,0,0,0,0.04135444015264511,0,0,-0.0723702684044838,-0.023261873051524162,0,0,0.01292326208204031,0,-0.15507914125919342,-0.015507915057241917,0,0,0.038769785314798355,0,0,-0.007753957528620958,0,0.010338610038161278,0.02584652416408062,0,-0.0723702684044838,-0.06461631506681442,0,0.031015830114483833,0.04135444015264511,0,0,-0.05169304832816124,0],"text":"10 rem house of dust\r\n20 rem originally by a knowles and j tunney, 1967\r\n30 rem javascript code by z whalen, 2014\r\n40 rem converted to basic by r vonk, 2017\r\n50 print\"“\":z=rnd(-ti):ma=17:lo=21:li=4:in=13:dim ma$(ma),lo$(lo),li$(li),in$(in)\r\n60 for i=1 to ma:read ma$(i):next i:for i=1 to lo:read lo$(i):next i\r\n70 for i=1 to li:read li$(i):next i:for i=1 to in:read in$(i):next i\r\n80 rem materials\r\n90 data dust,brick,paper,leaves,roots,discarded clothing,weeds,wood,tin,sand\r\n100 data glass,stone,straw,plastic,mud,broken dishes,plastic\r\n110 rem places\r\n120 data on open ground,by a river,among high mountains,in a deserted airport\r\n130 data in dense woods,on an island,in a hot climate,in a desert,on the sea\r\n140 data in a deserted factory,underwater,in southern france\r\n150 data inside a mountain,in an overpopulated area,in japan\r\n160 data in a place with both heavy rain and bright sun,by an abandoned lake\r\n170 data in michigan,by the sea,\"in a cold, windy climate\",among small hills\r\n180 rem lights\r\n190 data natural light,candles,all available lighting,electricity\r\n200 rem inhabitants\r\n210 data people who eat a great deal,lovers,friends and enemies\r\n220 data collectors of all types,women wearing all colors\r\n230 data all races of men wearing predominantly red clothing,little boys\r\n240 data children and old people,horses and birds,various birds and fishes\r\n250 data american indians,french and german speaking people\r\n260 data people who sleep almost all the time\r\n270 n1=int(rnd(1)*ma+1):n2=int(rnd(1)*lo+1)\r\n280 n3=int(rnd(1)*li+1):n4=int(rnd(1)*in+1)\r\n290 print\"a house of \";ma$(n1):print\"      \";lo$(n2):print\"            using \";li$(n3)\r\n300 print\"                  inhabited by \";in$(n4)\r\n310 for i=1 to 2000:next i:print:goto 270\r\n","sourcePath":"external/github.com/robfromoz_C64-BASIC/house of dust.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/house%20of%20dust.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/hunt-and-kill maze.txt","language":"basic","vector":[0.0036265209782868624,0.038078468292951584,0,0,-0.006346411537379026,0,0.0580243356525898,0.0290121678262949,0,-0.14506083726882935,-0.005439781583845615,0,0.007253041956573725,0.008159671910107136,0,-0.018132604658603668,-0.0290121678262949,0,0.2284708172082901,0.03263868764042854,0,-0.06527737528085709,-0.004533151164650917,0,0,0.06709063798189163,0,-0.0036265209782868624,-0.018132604658603668,0,0.025385646149516106,0.0716237872838974,0,0,-0.01450608391314745,0,0.007253041956573725,0.007253041956573725,0,-0.0036265209782868624,-0.0036265209782868624,0,0.0290121678262949,0.01450608391314745,0,-0.0036265209782868624,-0.009972932748496532,0,0.0036265209782868624,0.022665755823254585,0,-0.0036265209782868624,0,0,0.09066302329301834,0.04714477062225342,0,0,-0.11786193400621414,0,0.03263868764042854,0.005439781583845615,0,-0.0036265209782868624,-0.009066302329301834,0,0.02175912633538246,0.008159671910107136,0,-0.054397813975811005,-0.038078468292951584,0,0.007253041956573725,0.006346411537379026,0,-0.007253041956573725,-0.009972932748496532,0,0.02175912633538246,0.0290121678262949,0,-0.06527737528085709,0,0,0.01087956316769123,0.0009066302445717156,0,-0.24660342931747437,-0.019039234146475792,0,0,0.0036265209782868624,0,-0.0036265209782868624,-0.01450608391314745,0,0.018132604658603668,0.0036265209782868624,0,-0.007253041956573725,0,0,0.15594039857387543,0.03989173099398613,0,-0.01087956316769123,-0.09972932934761047,0,0,0.005439781583845615,0,-0.007253041956573725,-0.015412714332342148,0,0,0.1160486713051796,0,-0.007253041956573725,-0.03263868764042854,0,0.01087956316769123,0.01450608391314745,0,-0.06890390068292618,-0.004533151164650917,0,0.01087956316769123,0.01631934382021427,0,-0.25022995471954346,-0.0036265209782868624,0,0.01450608391314745,0.015412714332342148,0,-0.1631934493780136,-0.0027198907919228077,0,0,0.01631934382021427,0,-0.007253041956573725,-0.0036265209782868624,0,0.0036265209782868624,0.005439781583845615,0,-0.14143431186676025,-0.007253041956573725,0,0.02175912633538246,0.046238142997026443,0,0,-0.0018132604891434312,0,0.0290121678262949,0.019945865496993065,0,-0.01450608391314745,-0.0018132604891434312,0,0.14143431186676025,0.015412714332342148,0,-0.01087956316769123,-0.027198906987905502,0,0.0036265209782868624,0.025385646149516106,0,-0.37715816497802734,-0.06074422597885132,0,0.13780780136585236,0.011786192655563354,0,-0.025385646149516106,-0.03263868764042854,0,0,0.009066302329301834,0,0,-0.13690117001533508,0,0.0036265209782868624,0.0018132604891434312,0,-0.08703650534152985,-0.005439781583845615,0,0.036265209317207336,0.02357238531112671,0,-0.01087956316769123,-0.0036265209782868624,0,0.25385648012161255,0.07797019928693771,0,-0.0580243356525898,-0.007253041956573725,0,0.25748297572135925,0.0018132604891434312,0,-0.01450608391314745,-0.008159671910107136,0,0.02175912633538246,0.0009066302445717156,0,0,-0.0036265209782868624,0,0.0290121678262949,0.019945865496993065,0,-0.03989173099398613,-0.07071715593338013,0,0.054397813975811005,0.007253041956573725,0,0,-0.1296481192111969,0,0.01450608391314745,0.06437074393033981,0,-0.01450608391314745,-0.09791606664657593,0,0.01450608391314745,0,0,-0.036265209317207336,-0.004533151164650917,0,0.0036265209782868624,0.008159671910107136,0,-0.04351825267076492,-0.07071715593338013,0,0.01087956316769123,0.012692823074758053,0,-0.01087956316769123,-0.0009066302445717156,0,0,0.02175912633538246,0,0,-0.008159671910107136,0,0.0036265209782868624,0.0716237872838974,0,-0.06165085732936859,-0.006346411537379026,0,0,0.024479016661643982,0,-0.02175912633538246,-0.18857908248901367,0,0.007253041956573725,0.07706356793642044,0,0,-0.013599453493952751,0,0.04351825267076492,0.005439781583845615,0,-0.10879562795162201,-0.013599453493952751,0,0.007253041956573725,0.0036265209782868624,0,-0.025385646149516106,-0.04533151164650917,0,0.007253041956573725,0.02357238531112671,0,0,-0.02175912633538246,0,0.0580243356525898,0.1296481192111969,0,-0.01087956316769123,-0.09066302329301834,0,0.01450608391314745,0.12874148786067963,0,-0.01450608391314745,-0.008159671910107136,0,0.04714477062225342,0.015412714332342148,0,-0.0036265209782868624,-0.0018132604891434312,0,0.007253041956573725,0.05349118262529373,0,-0.007253041956573725,-0.022665755823254585,0,0.01450608391314745,0.027198906987905502,0,-0.02175912633538246,-0.0018132604891434312,0,0.0036265209782868624,0.007253041956573725,0,-0.007253041956573725,-0.009066302329301834,0,0.01450608391314745,0.009972932748496532,0,0,-0.035358577966690063,0,0.018132604658603668,0.004533151164650917,0,0,-0.08431661128997803,0,0.08703650534152985,0.009066302329301834,0,-0.2284708172082901,-0.046238142997026443,0,0.0036265209782868624,0,0,0,-0.0018132604891434312,0,0.01450608391314745,0.0027198907919228077,0,-0.054397813975811005,-0.06618400663137436,0,0.007253041956573725,0.005439781583845615,0,-0.01450608391314745,-0.01087956316769123,0,0.0580243356525898,0.01087956316769123,0,0,-0.0036265209782868624,0,0,0.057117704302072525,0,-0.007253041956573725,-0.057117704302072525,0,0.007253041956573725,0.004533151164650917,0,-0.018132604658603668,-0.10698236525058746,0],"text":"10 rem hunt-and-kill maze algorithm by rob vonk 2024\r\n20 rem from \"mazes for programmers\" by jamis buck, 2015, pages 67-69\r\n30 rem shuffled direction random walk routine idea by jamis buck\r\n40 rem randomise, set maximum dimensions of maze, and set arrays for hunt\r\n50 rem routine directions and random walk directions\r\n60 rem works better with mx<=21 and my<=39\r\n70 z=rnd(-ti):mx=39:my=21:dim m$(my,mx),m(my,mx),c(4),s(4)\r\n80 rem create grid with cell spaces surrounded by # fences\r\n90 for i=1 to my:if i/2=int(i/2) then 110\r\n100 for j=1 to mx:m$(i,j)=\"#\":next j:goto 150\r\n110 for j=1 to mx:if j/2=int(j/2) then m$(i,j)=\" \":m(i,j)=0:goto 130\r\n120 m$(i,j)=\"#\"\r\n130 next j\r\n140 rem start at random cell\r\n150 next i:x=int(rnd(1)*(((mx-1)-2)/2+1))*2+2:y=int(rnd(1)*(((my-1)-2)/2+1))*2+2\r\n160 rem set random walk directions north = 1, east = 2, south = 3, west = 4\r\n170 for i=1 to 4:s(i)=i:next i\r\n180 rem set current cell to visited\r\n190 m(y,x)=1\r\n200 rem shuffle random walk directions\r\n210 for i=4 to 1 step -1:r=int(rnd(1)*4+1):t=s(r):s(r)=s(i):s(i)=t:next i\r\n220 rem cycle through list of directions\r\n230 for i=1 to 4:on s(i) goto 250,310,370,430\r\n240 rem if at very top try next direction\r\n250 if y=2 then 490\r\n260 rem if cell to north is visited try new direction\r\n270 if m(y-2,x)=1 then 490\r\n280 rem otherwise carve tunnel north\r\n290 y=y-2:m$(y+1,x)=\" \":m(y,x)=1:goto 210\r\n300 rem if at far right try next direction\r\n310 if x=mx-1 then 490\r\n320 rem if cell to east is visited try new direction\r\n330 if m(y,x+2)=1 then 490\r\n340 rem otherwise carve tunnel east\r\n350 x=x+2:m$(y,x-1)=\" \":m(y,x)=1:goto 210\r\n360 rem if at very bottom try next direction\r\n370 if y=my-1 then 490\r\n380 rem if cell to south is visited try new direction\r\n390 if m(y+2,x)=1 then 490\r\n400 rem otherwise carve tunnel south\r\n410 y=y+2:m$(y-1,x)=\" \":m(y,x)=1:goto 210\r\n420 rem if at far left try next direction\r\n430 if x=2 then 490\r\n440 rem if cell to west is visited try new direction\r\n450 if m(y,x-2)=1 then 490\r\n460 rem otherwise carve tunnel west\r\n470 x=x-2:m$(y,x+1)=\" \":m(y,x)=1:goto 210\r\n480 rem if there's nowhere to go, begin hunt routine\r\n490 next i\r\n500 rem start scan from top left hand corner of maze, set available direction\r\n510 rem flags to zero\r\n520 c=0:c(1)=0:c(2)=0:c(3)=0:c(4)=0:f=0:x=2:y=2\r\n530 rem scan cell\r\n540 if m(y,x)=1 then 810\r\n550 rem if at very top try next direction\r\n560 if y=2 then 600\r\n570 rem otherwise add north to list of available directions\r\n580 if m(y-2,x)=1 then c=c+1:f=1:c(c)=1\r\n590 rem if at far right try next direction\r\n600 if x=mx-1 then 640\r\n610 rem otherwise add east to list of available directions\r\n620 if m(y,x+2)=1 then c=c+1:f=1:c(c)=2\r\n630 rem if at very bottom try next direction\r\n640 if y=my-1 then 680\r\n650 rem otherwise add south to list of available directions\r\n660 if m(y+2,x)=1 then c=c+1:f=1:c(c)=3\r\n670 rem if at far left, see if we have anywhere to go\r\n680 if x=2 then 720\r\n690 rem otherwise add west to list of available directions\r\n700 if m(y,x-2)=1 then c=c+1:f=1:c(c)=4\r\n710 rem nowhere to go? see if we can move to the next cell\r\n720 if f=0 then 810\r\n730 rem choose random direction from those available and link current cell\r\n740 rem to visited cell in that direction\r\n750 on c(int(rnd(1)*c+1)) goto 760,770,780,790\r\n760 m$(y-1,x)=\" \":goto 190\r\n770 m$(y,x+1)=\" \":goto 190\r\n780 m$(y+1,x)=\" \":goto 190\r\n790 m$(y,x-1)=\" \":goto 190\r\n800 rem if no more unvisited cells, display maze\r\n810 if x=mx-1 and y=my-1 then 850\r\n820 if x=mx-1 then x=2:y=y+2:goto 540\r\n830 x=x+2:goto 540\r\n840 rem make entrance and exit\r\n850 m$(1,2)=\" \":m$(my,mx-1)=\" \"\r\n860 rem display maze\r\n870 print\"{clear}{white}\":poke 53280,0:poke 53281,0:for i=1 to my:for j=1 to mx\r\n880 print m$(i,j);:next j:print:next i","sourcePath":"external/github.com/robfromoz_C64-BASIC/hunt-and-kill maze.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/hunt-and-kill%20maze.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/intuition.txt","language":"basic","vector":[0,0.014565713703632355,0,0,-0.013351904228329659,0,0.08739428222179413,0.006069047376513481,0,-0.02913142740726471,-0.004855237901210785,0,0.00971047580242157,0,0,0,-0.02306238003075123,0,0.23305141925811768,0.02306238003075123,0,-0.014565713703632355,-0.004855237901210785,0,0.02913142740726471,0.010924285277724266,0,0,-0.0036414284259080887,0,0.004855237901210785,0.05462142452597618,0,0,-0.01577952317893505,0,0,0.008496666327118874,0,-0.004855237901210785,-0.0012138094753026962,0,0.31073522567749023,0.03520047292113304,0,0,-0.007282856851816177,0,0,0.007282856851816177,0,-0.08253904432058334,-0.0012138094753026962,0,0.15536761283874512,0.01942095160484314,0,-0.00971047580242157,-0.049766186624765396,0,0.00971047580242157,0.012138094753026962,0,-0.014565713703632355,-0.01942095160484314,0,0.014565713703632355,0.01942095160484314,0,-0.043697141110897064,-0.0036414284259080887,0,0.00971047580242157,0.0012138094753026962,0,-0.004855237901210785,-0.0036414284259080887,0,0,0.02548999898135662,0,-0.03884190320968628,-0.01577952317893505,0,0.00971047580242157,0.0036414284259080887,0,-0.16993331909179688,-0.03277285397052765,0,0.014565713703632355,0.012138094753026962,0,-0.02913142740726471,-0.026703808456659317,0,0.00971047580242157,0.004855237901210785,0,-0.02913142740726471,-0.00971047580242157,0,0.0631180927157402,0.04855237901210785,0,-0.04855237901210785,-0.16629189252853394,0,0.053407616913318634,0.004855237901210785,0,-0.004855237901210785,-0.020634761080145836,0,0,0.12138094753026962,0,-0.00971047580242157,-0.010924285277724266,0,0.00971047580242157,0.016993332654237747,0,-0.03884190320968628,-0.0024276189506053925,0,0.10195999592542648,0.0024276189506053925,0,-0.08739428222179413,0,0,0,0.007282856851816177,0,-0.03884190320968628,-0.0036414284259080887,0,0,0.1577952355146408,0,-0.004855237901210785,-0.0012138094753026962,0,0.004855237901210785,0.013351904228329659,0,-0.10195999592542648,-0.047338567674160004,0,0.03884190320968628,0.0813252329826355,0,0,-0.004855237901210785,0,0.004855237901210785,0.018207142129540443,0,-0.01942095160484314,-0.007282856851816177,0,0.01942095160484314,0.008496666327118874,0,-0.02913142740726471,-0.021848570555448532,0,0.053407616913318634,0.014565713703632355,0,-0.1602228432893753,-0.02306238003075123,0,0.01942095160484314,0.0024276189506053925,0,-0.024276189506053925,-0.020634761080145836,0,0.004855237901210785,0.013351904228329659,0,0,-0.08618047088384628,0,0,0.007282856851816177,0,-0.09224952012300491,-0.01577952317893505,0,0.033986665308475494,0.014565713703632355,0,-0.00971047580242157,-0.016993332654237747,0,0.024276189506053925,0.0315590463578701,0,-0.004855237901210785,-0.03884190320968628,0,0.11167047172784805,0.03277285397052765,0,-0.014565713703632355,-0.013351904228329659,0,0.004855237901210785,0,0,-0.004855237901210785,-0.004855237901210785,0,0.033986665308475494,0.026703808456659317,0,-0.02913142740726471,-0.026703808456659317,0,0.01942095160484314,0.053407616913318634,0,-0.004855237901210785,-0.043697141110897064,0,0,0.05826285481452942,0,-0.033986665308475494,-0.02306238003075123,0,0.02913142740726471,0.007282856851816177,0,-0.06797333061695099,-0.0024276189506053925,0,0.00971047580242157,0.0036414284259080887,0,-0.004855237901210785,-0.05097999796271324,0,0.004855237901210785,0.01942095160484314,0,-0.004855237901210785,-0.0012138094753026962,0,0.024276189506053925,0.08011142164468765,0,-0.043697141110897064,-0.00971047580242157,0,0.014565713703632355,0.00971047580242157,0,-0.014565713703632355,-0.03520047292113304,0,0,0.0655457079410553,0,-0.01942095160484314,-0.08253904432058334,0,0.01942095160484314,0.012138094753026962,0,-0.03884190320968628,-0.01577952317893505,0,0.01942095160484314,0.006069047376513481,0,-0.6069047451019287,-0.010924285277724266,0,0,0.0024276189506053925,0,-0.08253904432058334,-0.047338567674160004,0,0.01942095160484314,0.016993332654237747,0,-0.014565713703632355,-0.014565713703632355,0,0.00971047580242157,0.014565713703632355,0,-0.00971047580242157,-0.04491094872355461,0,0,0.059476662427186966,0,0,-0.014565713703632355,0,0.02913142740726471,0.004855237901210785,0,-0.004855237901210785,-0.00971047580242157,0,0.00971047580242157,0.03277285397052765,0,-0.004855237901210785,-0.026703808456659317,0,0.053407616913318634,0.02306238003075123,0,-0.024276189506053925,-0.0036414284259080887,0,0.014565713703632355,0,0,0,-0.01942095160484314,0,0.053407616913318634,0.016993332654237747,0,0,-0.043697141110897064,0,0.004855237901210785,0.030345236882567406,0,0,-0.024276189506053925,0,0.03884190320968628,0.0024276189506053925,0,-0.08253904432058334,-0.012138094753026962,0,0.00971047580242157,0.012138094753026962,0,-0.004855237901210785,-0.02306238003075123,0,0.033986665308475494,0.008496666327118874,0,-0.004855237901210785,-0.03277285397052765,0,0,0.00971047580242157,0,-0.004855237901210785,-0.00971047580242157,0,0.03884190320968628,0.010924285277724266,0,-0.00971047580242157,-0.024276189506053925,0,0,0.014565713703632355,0,-0.05826285481452942,-0.31073522567749023,0,0.024276189506053925,0.013351904228329659,0,-0.043697141110897064,-0.0813252329826355,0],"text":"﻿10 rem intuition\r\n20 rem from \"the pocket calculator game book 2\" by e schlossberg and j brockman\r\n30 poke 53280,1:poke 53281,0:poke 646,1\r\n40 print\"“\":print\"this game is called 'intuition'.\"\r\n50 print:print\"the object of the game is to reduce a\"\r\n60 print\"six-digit number to zero in as few\"\r\n70 print\"moves as possible. the catch is that\"\r\n80 print\"the number will be hidden from view as\"\r\n90 print\"you do so.\"\r\n100 print:print\"enter a six-digit number, each digit\"\r\n110 print\"being different. using only one or two\"\r\n120 print\"digit numbers and any operation (+, -,\"\r\n130 print\"*, /), try to reduce the number to\"\r\n140 print\"exactly zero. you cannot multiply or\"\r\n150 print\"divide by zero. if you think you have\"\r\n160 print\"reached zero, enter 'reveal', and the\"\r\n170 print\"game will end.\"\r\n180 for i=1 to 6:print:next i:print\"                              hit a key\"\r\n190 get i$:if i$=\"\" then 190\r\n200 print\"“\":print\"hint: by playing this game, you will\"\r\n210 print\"begin to get a sense of the effects of\"\r\n220 print\"multiplication and division, that is,\"\r\n230 print\"how fast they change a number. dividing\"\r\n240 print\"by a two-digit number often reduces a\"\r\n250 print\"six-digit number to a four-digit\"\r\n260 print\"number. multiplying a two-digit number\"\r\n270 print\"increases a number by 2 digits. be\"\r\n280 print\"careful if you divide more than three\"\r\n290 print\"times by a two-digit number.\"\r\n300 for i=1 to 12:print:next i:print\"                              hit a key\"\r\n310 get i$:if i$=\"\" then 310\r\n320 print\"“\":print\"ok, choose a six digit number\";\r\n330 input n$:if len(n$)<>6 then print:print\"six digits please\":goto 330\r\n340 f=0:for i=1 to 6:for j=1 to 6\r\n350 if i<>j and mid$(n$,i,1)=mid$(n$,j,1) then f=1\r\n360 next j:next i:if f=0 then 380\r\n370 print:print\"digits must all be different.\":goto 330\r\n380 n=val(n$):t=0:print\"“\"\r\n390 print\"enter an operation and a number,\"\r\n400 print\"or 'reveal' to show the number\";\r\n410 input i$:if i$=\"reveal\" then 520\r\n420 n1=val(mid$(i$,2)):o$=left$(i$,1)\r\n430 if n1<10 or n1>99 then print:print\"two digits please.\":goto 410\r\n440 if n1<>int(n1) then print:print\"number must be an integer.\":goto 410\r\n450 if o$=\"*\" or o$=\"+\" or o$=\"-\" or o$=\"/\" then 470\r\n460 print\"operation must be (*-=/).\":goto 410\r\n470 if o$=\"*\" then n=n*n1\r\n480 if o$=\"+\" then n=n+n1\r\n490 if o$=\"-\" then n=n-n1\r\n500 if o$=\"/\" then n=n/n1\r\n510 t=t+1:print:print\"you have now used\";t;\"move(s).\":print:goto 390\r\n520 print:print\"your number is\";n:if n=0 then 540\r\n530 print:print\"hard luck, you didn't reach zero.\":goto 550\r\n540 print:print\"well done, you made it to zero!\"\r\n550 print:print\"you used\";t;\"move(s).\"\r\n560 print:print\"would you like to play again (y/n)\";\r\n570 input i$:if i$<>\"y\" and i$<>\"n\" then print:print\"(y) or (n) please.\":goto 570\r\n580 if i$=\"y\" then 320\r\n","sourcePath":"external/github.com/robfromoz_C64-BASIC/intuition.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/intuition.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/love tester.txt","language":"basic","vector":[0.004630985204130411,0.026628166437149048,0,-0.018523940816521645,-0.01389295607805252,0,0.04167886823415756,0.009261970408260822,0,-0.018523940816521645,-0.00694647803902626,0,0.004630985204130411,0.005788731854408979,0,-0.04167886823415756,-0.012735209427773952,0,0.28712108731269836,0.011577463708817959,0,-0.03704788163304329,-0.00694647803902626,0,0,0.01389295607805252,0,0,-0.008104224689304829,0,0,0.10767041146755219,0,0,-0.008104224689304829,0,0,0.0011577463010326028,0,-0.004630985204130411,-0.0023154926020652056,0,0.4028957188129425,0.019681688398122787,0,-0.009261970408260822,-0.01041971705853939,0,0,0.004630985204130411,0,-0.0694647803902626,-0.004630985204130411,0,0.08335773646831512,0.026628166437149048,0,0,-0.05557182431221008,0,0.009261970408260822,0.004630985204130411,0,-0.03704788163304329,-0.009261970408260822,0,0.01389295607805252,0.012735209427773952,0,-0.023154927417635918,-0.01389295607805252,0,0.01389295607805252,0.0011577463010326028,0,-0.004630985204130411,-0.016208449378609657,0,0,0.012735209427773952,0,-0.032416898757219315,-0.018523940816521645,0,0.018523940816521645,0.01389295607805252,0,-0.22228729724884033,-0.03125914931297302,0,0,0.004630985204130411,0,-0.018523940816521645,-0.016208449378609657,0,0,0.00347323901951313,0,-0.01389295607805252,-0.01389295607805252,0,0.05557182431221008,0.021997179836034775,0,-0.03704788163304329,-0.1389295607805252,0,0.018523940816521645,0.00347323901951313,0,-0.01389295607805252,-0.026628166437149048,0,0.004630985204130411,0.14703378081321716,0,-0.023154927417635918,-0.019681688398122787,0,0.009261970408260822,0.004630985204130411,0,-0.04167886823415756,-0.0011577463010326028,0,0.09261970967054367,0.0023154926020652056,0,-0.18987040221691132,-0.0011577463010326028,0,0.032416898757219315,0.00347323901951313,0,-0.02778591215610504,-0.004630985204130411,0,0.004630985204130411,0.20376335084438324,0,-0.004630985204130411,-0.00694647803902626,0,0,0.04052112251520157,0,-0.09261970967054367,-0.03704788163304329,0,0.018523940816521645,0.04167886823415756,0,0,-0.0011577463010326028,0,0.009261970408260822,0.012735209427773952,0,-0.004630985204130411,-0.018523940816521645,0,0.01389295607805252,0.008104224689304829,0,0,-0.011577463708817959,0,0.009261970408260822,0.019681688398122787,0,-0.10651266574859619,-0.028943657875061035,0,0.07872675359249115,0.0023154926020652056,0,-0.046309854835271835,-0.01736619509756565,0,0,0.01389295607805252,0,-0.018523940816521645,-0.11693237721920013,0,0.004630985204130411,0,0,-0.04167886823415756,-0.01041971705853939,0,0.018523940816521645,0.00347323901951313,0,-0.009261970408260822,-0.01041971705853939,0,0.03704788163304329,0.032416898757219315,0,-0.01389295607805252,-0.032416898757219315,0,0.10651266574859619,0.011577463708817959,0,-0.01389295607805252,-0.012735209427773952,0,0.004630985204130411,0.00347323901951313,0,0,-0.016208449378609657,0,0.01389295607805252,0.015050702728331089,0,-0.04167886823415756,-0.025470418855547905,0,0.009261970408260822,0.04746760055422783,0,-0.018523940816521645,-0.1053549125790596,0,0.004630985204130411,0.0879887193441391,0,-0.009261970408260822,-0.023154927417635918,0,0,0.0023154926020652056,0,-0.02778591215610504,-0.0023154926020652056,0,0.01389295607805252,0,0,-0.009261970408260822,-0.046309854835271835,0,0.004630985204130411,0.009261970408260822,0,-0.05557182431221008,-0.0011577463010326028,0,0.023154927417635918,0.1053549125790596,0,-0.046309854835271835,-0.004630985204130411,0,0.018523940816521645,0.00694647803902626,0,-0.01389295607805252,-0.01736619509756565,0,0,0.025470418855547905,0,-0.018523940816521645,-0.053256332874298096,0,0.004630985204130411,0.04167886823415756,0,-0.018523940816521645,-0.032416898757219315,0,0.004630985204130411,0.00347323901951313,0,-0.518670380115509,-0.015050702728331089,0,0.004630985204130411,0.005788731854408979,0,-0.023154927417635918,-0.021997179836034775,0,0.01389295607805252,0.009261970408260822,0,-0.004630985204130411,-0.012735209427773952,0,0.018523940816521645,0.023154927417635918,0,-0.004630985204130411,-0.06251829862594604,0,0.009261970408260822,0.053256332874298096,0,-0.004630985204130411,-0.011577463708817959,0,0.01389295607805252,0.0023154926020652056,0,-0.009261970408260822,-0.00347323901951313,0,0.009261970408260822,0.02083943411707878,0,-0.009261970408260822,-0.030101405456662178,0,0.16208449006080627,0.009261970408260822,0,-0.009261970408260822,-0.012735209427773952,0,0,0.00347323901951313,0,-0.004630985204130411,-0.01041971705853939,0,0.032416898757219315,0.0023154926020652056,0,0,-0.02431267313659191,0,0.004630985204130411,0.030101405456662178,0,0,-0.052098583430051804,0,0.05094083771109581,0.01041971705853939,0,-0.10651266574859619,-0.0347323901951313,0,0.009261970408260822,0.012735209427773952,0,-0.004630985204130411,-0.02431267313659191,0,0.018523940816521645,0.009261970408260822,0,-0.023154927417635918,-0.030101405456662178,0,0,0.004630985204130411,0,-0.004630985204130411,-0.009261970408260822,0,0.01389295607805252,0.004630985204130411,0,-0.01389295607805252,-0.01041971705853939,0,0.018523940816521645,0.005788731854408979,0,-0.05557182431221008,-0.2593351900577545,0,0.009261970408260822,0.004630985204130411,0,-0.023154927417635918,-0.03820562735199928,0],"text":"10 rem love tester r vonk\r\n20 poke 53280,2:poke 53281,1:poke 646,2\r\n30 print\"“\":print\"this program is called 'love tester'.\"\r\n40 print:print\"this is a computerised version of the\"\r\n50 print\"little compatibility test you probably\"\r\n60 print\"did (or probably do) at school during\"\r\n70 print\"a class for fun.\"\r\n80 print:print\"here is how you do the test:\"\r\n90 print:print\"1) write the names of both people you\"\r\n100 print\"   wish to test.\"\r\n110 print:print\"2) count the number of occurrences of\"\r\n120 print\"   the letters l, o, v, e and s in both\"\r\n130 print\"   names, and write it down.\"\r\n140 print:print\"3) add each pair of consecutive digits\"\r\n150 print\"   to get another number. if the number\"\r\n160 print\"   has two digits, stop here.\"\r\n170 print:print\"4) otherwise, repeat step 3.\"\r\n180 print:print\"                              hit a key\"\r\n190 get i$:if i$=\"\" then 190\r\n200 print\"“\":print\"the two-digit number is a percentage.\"\r\n210 print:print\"here is an example:\"\r\n220 print:print tab(14);\"bill clinton\"\r\n230 print:print tab(17);\"loves\"\r\n240 print:print tab(12);\"monica lewinsky\"\r\n250 print:print tab(12);\"4  2  0  1  1\"\r\n260 print:print tab(12);\"  6  2  1  2\"\r\n270 print:print tab(12);\"    8  3  3\"\r\n280 print:print tab(12);\"     11  6\"\r\n290 print:print tab(12);\"      2 7\"\r\n300 print:print\"this couple is 27% compatible.\"\r\n310 print:print\"                              hit a key\"\r\n320 get i$:if i$=\"\" then 320\r\n330 print\"“\":print\"if you find the compatibility number\"\r\n340 print\"too low, try shortening or lengthening\"\r\n350 print\"one or both of the names.\"\r\n360 print:print\"note: this is not a serious program\"\r\n370 print\"to determine the compatibility of a\"\r\n380 print\"couple, and should not be treated as\"\r\n390 print\"such.\"\r\n400 for i=1 to 14:print:next i:print\"                              hit a key\"\r\n410 get i$:if i$=\"\" then 410\r\n420 l$=\"loves\"\r\n430 print\"“\":print\"name of first person to test?\":input m$\r\n440 print:print\"name of the second person?\":input f$\r\n450 print\"“\":print tab(20-len(m$)/2);m$\r\n460 print:print tab(17);l$\r\n470 print:print tab(20-len(f$)/2);f$\r\n480 o$=\"\":print:print tab(12);:n$=m$+f$:for i=1 to len(l$):o=0:for j=1 to len(n$)\r\n490 if mid$(l$,i,1)=mid$(n$,j,1) then o=o+1\r\n500 next j:print o;:if c>9 then o$=o$+right$(str$(o),2):goto 520\r\n510 o$=o$+right$(str$(o),1)\r\n520 next i\r\n530 print:print:print tab(19-len(o$));:c$=\"\":for i=1 to len(o$)-1\r\n540 d=val(mid$(o$,i,1))+val(mid$(o$,i+1,1))\r\n550 print d;:if d>9 then c$=c$+right$(str$(d),2):goto 570\r\n560 c$=c$+right$(str$(d),1)\r\n570 next i:if len(c$)=2 then 590\r\n580 o$=c$:goto 530\r\n590 print:print:print\"this couple is \";c$;\"% compatible.\"\r\n600 print:print\"another couple\";\r\n610 input i$:if i$<>\"y\" and i$<>\"n\" then print\"(y) on (n) please.\":goto 610\r\n620 if i$=\"y\" then 430\r\n","sourcePath":"external/github.com/robfromoz_C64-BASIC/love tester.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/love%20tester.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/mimica.txt","language":"basic","vector":[0.0037192441523075104,0.008368299342691898,0,0,-0.0037192441523075104,0,0.044630929827690125,0.0055788662284612656,0,-0.16736598312854767,-0.015806788578629494,0,0.011157732456922531,0.0027894331142306328,0,-0.018596220761537552,-0.024175086989998817,0,0.18596221506595612,0.0353328213095665,0,-0.18596221506595612,-0.012087543494999409,0,0.0037192441523075104,0.024175086989998817,0,0,-0.0018596220761537552,0,0.0037192441523075104,0.06694639474153519,0,0,-0.013947165571153164,0,0.011157732456922531,0.0037192441523075104,0,-0.014876976609230042,-0.004649055190384388,0,0.17108523845672607,0.02510489895939827,0,-0.007438488304615021,-0.013947165571153164,0,0,0.0037192441523075104,0,-0.10413883626461029,-0.0009298110380768776,0,0.22315464913845062,0.1087878942489624,0,0,-0.09484072774648666,0,0.018596220761537552,0.023245276883244514,0,-0.011157732456922531,-0.013017354533076286,0,0.19340069591999054,0.008368299342691898,0,-0.07810413092374802,-0.007438488304615021,0,0.055788662284612656,0.004649055190384388,0,-0.011157732456922531,-0.0037192441523075104,0,0.007438488304615021,0.024175086989998817,0,-0.06694639474153519,0,0,0.0037192441523075104,0.004649055190384388,0,-0.2566278576850891,-0.03161357715725899,0,0,0.004649055190384388,0,-0.055788662284612656,-0.0362626314163208,0,0.0037192441523075104,0.006508677266538143,0,-0.007438488304615021,-0.004649055190384388,0,0.10413883626461029,0.027894331142306328,0,-0.037192441523075104,-0.15527844429016113,0,0.014876976609230042,0.0055788662284612656,0,-0.007438488304615021,-0.014876976609230042,0,0,0.09577053785324097,0,-0.007438488304615021,-0.09391091763973236,0,0.007438488304615021,0.0037192441523075104,0,-0.052069418132305145,-0.0037192441523075104,0,0.08182337135076523,0.0027894331142306328,0,-0.2491893619298935,0,0,0.018596220761537552,0.018596220761537552,0,-0.08554261922836304,-0.010227921418845654,0,0,0.08647242933511734,0,0,-0.004649055190384388,0,0.007438488304615021,0.015806788578629494,0,-0.15248900651931763,-0.05485885217785835,0,0.022315464913845062,0.11343694478273392,0,-0.007438488304615021,-0.0018596220761537552,0,0.0037192441523075104,0.012087543494999409,0,-0.007438488304615021,-0.008368299342691898,0,0.029753953218460083,0.09763015806674957,0,-0.026034709066152573,-0.03905206546187401,0,0.011157732456922531,0.08089356124401093,0,-0.2529086172580719,-0.052069418132305145,0,0.011157732456922531,0.010227921418845654,0,-0.007438488304615021,-0.0353328213095665,0,0.007438488304615021,0.004649055190384388,0,-0.03347319737076759,-0.13110335171222687,0,0.0037192441523075104,0.0009298110380768776,0,-0.09670034795999527,-0.02882414311170578,0,0.037192441523075104,0.013947165571153164,0,-0.026034709066152573,-0.0037192441523075104,0,0.08926185965538025,0.05392904207110405,0,0,-0.03161357715725899,0,0.141331285238266,0.009298110380768776,0,-0.03347319737076759,-0.019526032730937004,0,0,0.0009298110380768776,0,-0.0037192441523075104,-0.0037192441523075104,0,0.07810413092374802,0.014876976609230042,0,-0.03347319737076759,-0.06787620484828949,0,0.007438488304615021,0.04370111972093582,0,-0.0037192441523075104,-0.12924373149871826,0,0.011157732456922531,0.055788662284612656,0,-0.007438488304615021,-0.08926185965538025,0,0.040911685675382614,0.0009298110380768776,0,-0.037192441523075104,0,0,0.011157732456922531,0.004649055190384388,0,-0.007438488304615021,-0.07624450325965881,0,0.011157732456922531,0.013947165571153164,0,-0.007438488304615021,-0.007438488304615021,0,0,0.044630929827690125,0,0,-0.0055788662284612656,0,0.0037192441523075104,0.014876976609230042,0,-0.022315464913845062,-0.03905206546187401,0,0.0037192441523075104,0.06136753037571907,0,-0.018596220761537552,-0.12645430862903595,0,0.018596220761537552,0.010227921418845654,0,-0.018596220761537552,-0.006508677266538143,0,0.022315464913845062,0.052069418132305145,0,-0.2863818109035492,-0.0362626314163208,0,0,0.015806788578629494,0,-0.022315464913845062,-0.05113960802555084,0,0.011157732456922531,0.020455842837691307,0,-0.0037192441523075104,-0.029753953218460083,0,0.007438488304615021,0.04556073993444443,0,-0.014876976609230042,-0.06415696442127228,0,0.0037192441523075104,0.070665642619133,0,0,-0.030683765187859535,0,0.052069418132305145,0.0009298110380768776,0,-0.011157732456922531,-0.0037192441523075104,0,0.0037192441523075104,0.06508677452802658,0,-0.0037192441523075104,-0.026034709066152573,0,0.06322715431451797,0.007438488304615021,0,-0.011157732456922531,-0.0037192441523075104,0,0.007438488304615021,0.0055788662284612656,0,-0.007438488304615021,-0.0055788662284612656,0,0.011157732456922531,0.022315464913845062,0,-0.011157732456922531,-0.03161357715725899,0,0.0037192441523075104,0.026034709066152573,0,0,-0.06601658463478088,0,0.2119969129562378,0.010227921418845654,0,-0.18596221506595612,-0.02510489895939827,0,0.026034709066152573,0,0,-0.007438488304615021,0,0,0.011157732456922531,0.0037192441523075104,0,-0.011157732456922531,-0.04927998408675194,0,0.0037192441523075104,0.007438488304615021,0,-0.0037192441523075104,-0.011157732456922531,0,0.048350173979997635,0.010227921418845654,0,0,-0.011157732456922531,0,0.007438488304615021,0.018596220761537552,0,-0.052069418132305145,-0.14969958364963531,0,0.007438488304615021,0.0027894331142306328,0,-0.06322715431451797,-0.07438488304615021,0],"text":"10 rem mimica rob vonk 2025\r\n20 rem based on board game 'mimikry' by heinz meister 1989\r\n30 rem https://boardgamegeek.com/boardgame/145920\r\n40 poke 53280,6:poke 53281,6:dim b(6,6),s(6):data 1,4,2,1,3,2\r\n50 print\"{clear}{white}\":print\"this game is called 'mimica'.\"\r\n60 print:print\"the game is played on a six by six\"\r\n70 print\"grid. you choose which three squares\"\r\n80 print\"are to be left blank, while the rest\"\r\n90 print\"of them are filled with 'o' pieces.\"\r\n100 print\"next to every row is a number\"\r\n110 print\"indicating how many spaces the\"\r\n120 print\"pieces in that row can move,\"\r\n130 print\"horizontally, vertically and\"\r\n140 print\"diagonally to end their movement on\"\r\n150 print\"a blank space. every piece that has\"\r\n160 print\"moved to a blank space is changed\"\r\n170 print\"to a 'x' piece. the game ends when\"\r\n180 print\"all the pieces are changed to 'x'.\"\r\n190 print\"if there are still pieces that\"\r\n200 print\"cannot be moved to a blank space,\"\r\n210 print\"you lose.\"\r\n220 print:print:print:print\"                              hit a key\"\r\n230 get i$:if i$<>\"\" then 230\r\n240 get i$:if i$=\"\" then 240\r\n250 print\"{clear}\":for i=1 to 6:read s(i):next i:for i=1 to 6:for j=1 to 6\r\n260 b(i,j)=79:next j:next i:n=0:for i=1 to 3\r\n270 print\"enter x,y for blank space #\";i;\r\n280 input x,y:if x<1 or x>6 or y<1 or y>6 then print\"1-6 please.\":goto 280\r\n290 if b(y,x)=32 then print\"that space is already blank.\":goto 280\r\n300 b(y,x)=32:next i\r\n310 rem check to see if there are any valid moves left\r\n320 f=0:for i=1 to 6:for j=1 to 6:if b(i,j)<>79 then 570\r\n330 rem up\r\n340 if i-s(i)<0 then 370\r\n350 if b(i-s(i),j)=32 then f=1\r\n360 rem up and right\r\n370 if i-s(i)<0 or j+s(i)>5 then 400\r\n380 if b(i-s(i),j+s(i))=32 then f=1\r\n390 rem right\r\n400 if j+s(i)>5 then 430\r\n410 if b(i,j+s(i))=32 then f=1\r\n420 rem right and down\r\n430 if i+s(i)>5 or j+s(i)>5 then 460\r\n440 if b(i+s(i),j+s(i))=32 then f=1\r\n450 rem down\r\n460 if i+s(i)>5 then 490\r\n470 if b(i+s(i),j)=32 then f=1\r\n480 rem down and left\r\n490 if i+s(i)>5 or j-s(i)<0 then 520\r\n500 if b(i+s(i),j-s(i))=32 then f=1\r\n510 rem left\r\n520 if j-s(i)<0 then 550\r\n530 if b(i,j-s(i))=32 then f=1\r\n540 rem up and left\r\n550 if i-s(i)<0 or j-s(i)<0 then 570\r\n560 if b(i-s(i),j-s(i))=32 then f=1\r\n570 next j:next i\r\n580 print:print tab(16);\"123456\":print:for i=1 to 6\r\n590 print tab(10);\"(\";chr$(48+s(i));\")\";i;:for j=1 to 6:print chr$(b(i,j));\r\n600 next j:print:next i\r\n610 if f=0 and n<33 then print\"you can't move, so it's game over.\":end\r\n620 if n=33 then print\"you win the game!\":end\r\n630 print:print\"enter your move from (x,y)\";\r\n640 input a,b:if a<1 or a>6 or b<1 or b>6 then print\"1-6 please.\":goto 640\r\n650 if b(b,a)=88 then print\"that piece is already flipped.\":goto 630\r\n660 if b(b,a)=32 then print\"there's no piece there.\":goto 630\r\n670 print\"                  to (x,y)\";\r\n680 input c,d:if c<1 or c>6 or d<1 or d>6 then print\"1-6 please.\":goto 680\r\n690 if b(d,c)<>32 then print\"there's no space there.\":goto 680\r\n700 rem check to see if move is correct number of spaces\r\n710 rem up\r\n720 f=0:if a=c and b-d=s(b) then f=1\r\n730 rem up and right\r\n740 if c-a=s(b) and b-d=s(b) then f=1\r\n750 rem right\r\n760 if c-a=s(b) and b=d then f=1\r\n770 rem right and down\r\n780 if c-a=s(b) and d-b=s(b) then f=1\r\n790 rem down\r\n800 if a=c and d-b=s(b) then f=1\r\n810 rem down and left\r\n820 if a-c=s(b) and d-b=s(b) then f=1\r\n830 rem left\r\n840 if a-c=s(b) and b=d then f=1\r\n850 rem left and up\r\n860 if a-c=s(b) and b-d=s(b) then f=1\r\n870 if f=0 then print\"that move is invalid.\":goto 630\r\n880 b(b,a)=32:b(d,c)=88:n=n+1:goto 320","sourcePath":"external/github.com/robfromoz_C64-BASIC/mimica.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/mimica.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/random name.txt","language":"basic","vector":[0,0.017580591142177582,0,0,-0.0043951477855443954,0,0.017580591142177582,0,0,-0.052741777151823044,0,0,0,0.017580591142177582,0,-0.035161182284355164,-0.021975740790367126,0,0.2988700568675995,0.026370888575911522,0,-0.017580591142177582,-0.008790295571088791,0,0.017580591142177582,0.04395148158073425,0,0,0,0,0,0.1362495869398117,0,0,-0.013185444287955761,0,0,0.0043951477855443954,0,-0.035161182284355164,-0.0043951477855443954,0,0.10548355430364609,0.021975740790367126,0,0,0,0,0,0,0,-0.035161182284355164,-0.026370888575911522,0,0.07032236456871033,0.07911266386508942,0,0,-0.09229810535907745,0,0.017580591142177582,0,0,-0.052741777151823044,-0.013185444287955761,0,0.017580591142177582,0.030766036361455917,0,-0.017580591142177582,-0.05713692307472229,0,0,0,0,0,-0.008790295571088791,0,0.035161182284355164,0.013185444287955761,0,-0.052741777151823044,-0.008790295571088791,0,0,0,0,-0.2637088894844055,0,0,0.017580591142177582,0.008790295571088791,0,0,-0.017580591142177582,0,0,0,0,0,0,0,0.035161182284355164,0.008790295571088791,0,-0.017580591142177582,-0.061532072722911835,0,0,0.013185444287955761,0,0,-0.026370888575911522,0,0.017580591142177582,0.15383018553256989,0,-0.017580591142177582,-0.008790295571088791,0,0,0.008790295571088791,0,-0.175805926322937,0,0,0.017580591142177582,0.008790295571088791,0,-0.2812894582748413,0,0,0,0.0043951477855443954,0,-0.052741777151823044,-0.017580591142177582,0,0,0.061532072722911835,0,0,0,0,0,0.008790295571088791,0,-0.017580591142177582,-0.017580591142177582,0,0.10548355430364609,0.035161182284355164,0,0,0,0,0.052741777151823044,0.017580591142177582,0,0,-0.026370888575911522,0,0.017580591142177582,0.008790295571088791,0,0,-0.008790295571088791,0,0,0.03955633193254471,0,-0.193386510014534,-0.04395148158073425,0,0.035161182284355164,0.017580591142177582,0,-0.017580591142177582,-0.026370888575911522,0,0,0.0043951477855443954,0,0,-0.15822532773017883,0,0,0.008790295571088791,0,-0.0879029631614685,-0.0043951477855443954,0,0.07032236456871033,0.0043951477855443954,0,-0.035161182284355164,-0.0043951477855443954,0,0.10548355430364609,0.017580591142177582,0,0,-0.008790295571088791,0,0.4746759831905365,0.0043951477855443954,0,-0.052741777151823044,-0.0043951477855443954,0,0.017580591142177582,0.008790295571088791,0,-0.017580591142177582,-0.008790295571088791,0,0.017580591142177582,0.0043951477855443954,0,0,-0.10108840465545654,0,0,0.008790295571088791,0,-0.10548355430364609,-0.14943502843379974,0,0,0.07471751421689987,0,-0.017580591142177582,-0.030766036361455917,0,0,0.0043951477855443954,0,-0.052741777151823044,0,0,0.0879029631614685,0,0,-0.017580591142177582,-0.008790295571088791,0,0,0.052741777151823044,0,0,-0.008790295571088791,0,0.017580591142177582,0.052741777151823044,0,0,0,0,0,0.008790295571088791,0,0,-0.008790295571088791,0,0,0.017580591142177582,0,-0.035161182284355164,-0.096693255007267,0,0,0.021975740790367126,0,0,-0.021975740790367126,0,0,0.0043951477855443954,0,-0.14064472913742065,-0.0043951477855443954,0,0.052741777151823044,0,0,-0.035161182284355164,-0.04395148158073425,0,0.017580591142177582,0.04395148158073425,0,0,-0.030766036361455917,0,0,0.052741777151823044,0,0,-0.06592722237110138,0,0.035161182284355164,0.2417331337928772,0,0,-0.026370888575911522,0,0.017580591142177582,0.008790295571088791,0,0,-0.008790295571088791,0,0.035161182284355164,0.017580591142177582,0,0,-0.0043951477855443954,0,0.035161182284355164,0,0,0,-0.052741777151823044,0,0,0.0043951477855443954,0,0,-0.013185444287955761,0,0.035161182284355164,0,0,0,-0.07032236456871033,0,0,0.0483466275036335,0,0,-0.07911266386508942,0,0.15822532773017883,0,0,-0.175805926322937,-0.013185444287955761,0,0,0.008790295571088791,0,0,0,0,0.017580591142177582,0,0,-0.10548355430364609,-0.0043951477855443954,0,0,0.026370888575911522,0,-0.017580591142177582,-0.017580591142177582,0,0.017580591142177582,0.013185444287955761,0,-0.017580591142177582,0,0,0,0.0043951477855443954,0,0,-0.07032236456871033,0,0.017580591142177582,0.026370888575911522,0,-0.017580591142177582,-0.06592722237110138,0],"text":"10 rem random name generator\r\n20 rem converted from javascript by r vonk 2020\r\n30 data b,c,d,f,g,h,j,k,l,m,n,p,r,s,t,th,v,x,z,a,au,e,i,o,ou,u,y\r\n40 z=rnd(-ti):co=19:vo=8:dim co$(co),vo$(vo)\r\n50 for i=1 to co:read co$(i):next i:fori=1 to vo:read vo$(i):next\r\n60 na$=\"\":le=int(rnd(1)*3+2):for i=1 to le\r\n70 na$=na$+co$(int(rnd(1)*co+1))+vo$(int(rnd(1)*vo+1)):next i\r\n80 print\"“\":for i=1 to 10:print:next i:print tab(20-len(na$)/2);na$\r\n90 print:print\"    hit a key to generate a new one\"\r\n100 get i$:if i$=\"\" then 100\r\n110 goto 60\r\n","sourcePath":"external/github.com/robfromoz_C64-BASIC/random name.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/random%20name.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/sidewinder maze.txt","language":"basic","vector":[0.010509045794606209,0.052545227110385895,0,0,-0.005254522897303104,0,0.052545227110385895,0,0,-0.14712662994861603,-0.010509045794606209,0,0.010509045794606209,0.005254522897303104,0,-0.010509045794606209,-0.03152713552117348,0,0.3152713477611542,0.026272613555192947,0,-0.13661758601665497,-0.00788178388029337,0,0,0.06042701005935669,0,-0.010509045794606209,-0.013136306777596474,0,0,0.08407236635684967,0,0,-0.023645352572202682,0,0,0.013136306777596474,0,0,0,0,0.03152713552117348,0.021018091589212418,0,-0.010509045794606209,-0.010509045794606209,0,0,0.005254522897303104,0,-0.010509045794606209,0,0,0.10509045422077179,0.06830879300832748,0,0,-0.08407236635684967,0,0.010509045794606209,0.018390828743577003,0,-0.010509045794606209,-0.018390828743577003,0,0.052545227110385895,0.010509045794606209,0,-0.021018091589212418,-0.03940891847014427,0,0.03152713552117348,0.002627261448651552,0,0,-0.002627261448651552,0,0.021018091589212418,0.010509045794606209,0,-0.06305427104234695,-0.005254522897303104,0,0.021018091589212418,0,0,-0.18916282057762146,-0.03152713552117348,0,0.010509045794606209,0,0,-0.010509045794606209,-0.028899874538183212,0,0,0.010509045794606209,0,-0.010509045794606209,-0.002627261448651552,0,0.19967186450958252,0.03940891847014427,0,-0.021018091589212418,-0.11559949815273285,0,0,0.010509045794606209,0,-0.010509045794606209,-0.005254522897303104,0,0,0.16289019584655762,0,-0.021018091589212418,-0.06830879300832748,0,0,0,0,-0.09458141028881073,-0.010509045794606209,0,0.03152713552117348,0,0,-0.16814473271369934,-0.005254522897303104,0,0,0.005254522897303104,0,-0.1576356738805771,-0.002627261448651552,0,0,0.023645352572202682,0,-0.010509045794606209,-0.00788178388029337,0,0.010509045794606209,0.005254522897303104,0,-0.09458141028881073,-0.013136306777596474,0,0.052545227110385895,0.057799749076366425,0,0,0,0,0.042036183178424835,0.013136306777596474,0,-0.010509045794606209,-0.005254522897303104,0,0.08407236635684967,0.028899874538183212,0,-0.010509045794606209,-0.010509045794606209,0,0,0.04991796612739563,0,-0.36781659722328186,-0.03678165748715401,0,0.16814473271369934,0.013136306777596474,0,-0.021018091589212418,-0.03152713552117348,0,0,0.013136306777596474,0,0,-0.10509045422077179,0,0.021018091589212418,0.005254522897303104,0,-0.08407236635684967,-0.005254522897303104,0,0.06305427104234695,0.005254522897303104,0,-0.010509045794606209,-0.00788178388029337,0,0.1786537766456604,0.09983593225479126,0,-0.03152713552117348,-0.021018091589212418,0,0.29425325989723206,0,0,-0.03152713552117348,-0.01576356776058674,0,0.010509045794606209,0.002627261448651552,0,0,-0.010509045794606209,0,0.021018091589212418,0.013136306777596474,0,-0.042036183178424835,-0.08407236635684967,0,0,0.018390828743577003,0,0,-0.08669962733983994,0,0,0.07881783694028854,0,-0.042036183178424835,-0.11297223716974258,0,0.052545227110385895,0,0,-0.07356331497430801,-0.00788178388029337,0,0.021018091589212418,0.005254522897303104,0,-0.07356331497430801,-0.047290705144405365,0,0.010509045794606209,0.026272613555192947,0,-0.010509045794606209,0,0,0,0.028899874538183212,0,0,-0.00788178388029337,0,0,0.042036183178424835,0,-0.042036183178424835,-0.00788178388029337,0,0,0.026272613555192947,0,-0.03152713552117348,-0.18390829861164093,0,0.021018091589212418,0.08669962733983994,0,-0.010509045794606209,-0.013136306777596474,0,0.052545227110385895,0.013136306777596474,0,-0.16814473271369934,-0.005254522897303104,0,0.021018091589212418,0.018390828743577003,0,0,-0.042036183178424835,0,0.021018091589212418,0.03678165748715401,0,0,-0.021018091589212418,0,0,0.09458141028881073,0,-0.021018091589212418,-0.06305427104234695,0,0,0.1497538983821869,0,-0.021018091589212418,-0.018390828743577003,0,0.021018091589212418,0.005254522897303104,0,-0.010509045794606209,-0.002627261448651552,0,0.03152713552117348,0.06042701005935669,0,-0.010509045794606209,-0.026272613555192947,0,0.021018091589212418,0,0,-0.03152713552117348,-0.002627261448651552,0,0.021018091589212418,0,0,0,-0.026272613555192947,0,0.03152713552117348,0.026272613555192947,0,0,-0.06042701005935669,0,0.010509045794606209,0.018390828743577003,0,0,-0.07881783694028854,0,0.13661758601665497,0.005254522897303104,0,-0.14712662994861603,-0.0446634441614151,0,0.010509045794606209,0,0,0,-0.002627261448651552,0,0.010509045794606209,0.002627261448651552,0,-0.042036183178424835,-0.0446634441614151,0,0,0.013136306777596474,0,0,-0.01576356776058674,0,0.021018091589212418,0.021018091589212418,0,-0.010509045794606209,-0.00788178388029337,0,0,0.047290705144405365,0,-0.042036183178424835,-0.08669962733983994,0,0,0.010509045794606209,0,-0.042036183178424835,-0.09195414930582047,0],"text":"10 rem sidewinder maze algorithm by rob vonk 2023\r\n20 rem from \"mazes for programmers\" by jamis buck, 2015, pages 12-15\r\n30 rem randomise and set maximum dimensions of maze\r\n40 rem both numbers must be odd or maze won't display properly\r\n50 rem works better with mx<=21 and my<=39\r\n60 z=rnd(-ti):mx=39:my=21:dim m$(my,mx)\r\n70 rem create grid with cell spaces surrounded by # fences\r\n80 for i=1 to my:if i/2=int(i/2) then 100\r\n90 for j=1 to mx:m$(i,j)=\"#\":next j:goto 130\r\n100 for j=1 to mx:if j/2=int(j/2) then m$(i,j)=\" \":goto 120\r\n110 m$(i,j)=\"#\"\r\n120 next j\r\n130 next i:x=2:y=my-1:s=2:rem start at bottom left corner of grid\r\n140 rem carve tunnel right or up?\r\n150 if rnd(1)<.5 then 200\r\n160 if x=mx-1 then 200\r\n170 rem carve tunnel right\r\n180 x=x+2:m$(y,x-1)=\" \":goto 150\r\n190 rem pick a tunnel cell in set and carve tunnel up from it\r\n200 t=int(rnd(1)*((x-s)/2+1))*2+s\r\n210 rem if not at right end, keep moving right\r\n220 m$(y-1,t)=\" \":if x<mx-1 then x=x+2:s=x:goto 150\r\n230 rem if all the way to the right, make our way up to next row\r\n240 y=y-2:if y>2 then x=2:s=2:goto 150\r\n250 rem at top? carve horizontal tunnel\r\n260 for i=2 to mx-2:m$(y,i)=\" \":next i\r\n270 rem display maze\r\n280 print\"{clear}{white}\":poke 53280,0:poke 53281,0\r\n290 for i=1 to my:for j=1 to mx:print m$(i,j);:next j:print:next i","sourcePath":"external/github.com/robfromoz_C64-BASIC/sidewinder maze.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/sidewinder%20maze.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/solitaire dice.txt","language":"basic","vector":[0.030755508691072464,0.017186902463436127,0,0,-0.008593451231718063,0,0.03980124741792679,0.0049751559272408485,0,-0.02170977182686329,-0.006784303579479456,0,0.00904573779553175,0.0049751559272408485,0,-0.03980124741792679,-0.023971205577254295,0,0.22071601450443268,0.028494074940681458,0,-0.03437380492687225,-0.005879729520529509,0,0.01447318121790886,0.016734614968299866,0,-0.0018091476522386074,-0.0022614344488829374,0,0.02170977182686329,0.05201299488544464,0,0,-0.00904573779553175,0,0.0018091476522386074,0.014925467781722546,0,-0.023518918082118034,-0.0022614344488829374,0,0.30393680930137634,0.011759459041059017,0,0,-0.009950311854481697,0,0,0.0040705823339521885,0,-0.06332016736268997,-0.0018091476522386074,0,0.09588482230901718,0.07146132737398148,0,-0.00723659060895443,-0.06919989734888077,0,0.01447318121790886,0.003166008275002241,0,-0.016282329335808754,-0.016282329335808754,0,0.05065613240003586,0.004522868897765875,0,-0.01447318121790886,-0.020805196836590767,0,0.04703783616423607,0.003618295304477215,0,-0.00723659060895443,-0.009950311854481697,0,0.003618295304477215,0.005427442956715822,0,-0.041610393673181534,-0.010854885913431644,0,0.0018091476522386074,0.0009045738261193037,0,-0.19538794457912445,-0.06965218484401703,0,0.0018091476522386074,0.012211746536195278,0,-0.036182951182127,-0.01899605058133602,0,0.01447318121790886,0.016282329335808754,0,-0.012664033100008965,-0.002713721478357911,0,0.128449484705925,0.021257484331727028,0,-0.041610393673181534,-0.15920498967170715,0,0.05427442863583565,0.006332016550004482,0,-0.003618295304477215,-0.023518918082118034,0,0.016282329335808754,0.11578544974327087,0,-0.012664033100008965,-0.017186902463436127,0,0.0018091476522386074,0.008593451231718063,0,-0.05789272487163544,-0.003618295304477215,0,0.0886482298374176,0.013116320595145226,0,-0.18815134465694427,0,0,0.005427442956715822,0.010854885913431644,0,-0.016282329335808754,-0.012664033100008965,0,0,0.15694355964660645,0,-0.010854885913431644,-0.00045228691305965185,0,0.016282329335808754,0.01854376308619976,0,-0.06512931734323502,-0.03301694244146347,0,0.02532806620001793,0.05472671613097191,0,-0.00904573779553175,-0.0040705823339521885,0,0.0018091476522386074,0.011759459041059017,0,-0.00723659060895443,-0.008593451231718063,0,0.010854885913431644,0.026684926822781563,0,-0.012664033100008965,-0.007688877172768116,0,0.003618295304477215,0.0583450086414814,0,-0.13025863468647003,-0.03301694244146347,0,0.02532806620001793,0.002713721478357911,0,-0.03437380492687225,-0.02261434495449066,0,0.00904573779553175,0.002713721478357911,0,-0.005427442956715822,-0.10628741979598999,0,0.0018091476522386074,0.0018091476522386074,0,-0.09588482230901718,-0.020352911204099655,0,0.03437380492687225,0.008141164667904377,0,-0.016282329335808754,-0.009950311854481697,0,0.027137214317917824,0.0642247423529625,0,-0.005427442956715822,-0.05427442863583565,0,0.05970187112689018,0.030303223058581352,0,-0.02532806620001793,-0.008593451231718063,0,0.005427442956715822,0.015830041840672493,0,-0.005427442956715822,-0.006332016550004482,0,0.010854885913431644,0.010854885913431644,0,-0.036182951182127,-0.03437380492687225,0,0.005427442956715822,0.046585552394390106,0,-0.003618295304477215,-0.10402598977088928,0,0.00723659060895443,0.05789272487163544,0,-0.041610393673181534,-0.016734614968299866,0,0.005427442956715822,0.003618295304477215,0,-0.05065613240003586,-0.005879729520529509,0,0.003618295304477215,0.013568607158958912,0,-0.01447318121790886,-0.03256465867161751,0,0.00723659060895443,0.013116320595145226,0,-0.02170977182686329,-0.010402598418295383,0,0.01447318121790886,0.07688876986503601,0,-0.01447318121790886,-0.003618295304477215,0,0.003618295304477215,0.005427442956715822,0,-0.010854885913431644,-0.0221620574593544,0,0.023518918082118034,0.02578035369515419,0,-0.02170977182686329,-0.06693845987319946,0,0.003618295304477215,0.016282329335808754,0,-0.010854885913431644,-0.021257484331727028,0,0.005427442956715822,0.017186902463436127,0,-0.5934004187583923,-0.006332016550004482,0,0.00723659060895443,0.012664033100008965,0,-0.01447318121790886,-0.049751561135053635,0,0.02170977182686329,0.0180914755910635,0,0,-0.01854376308619976,0,0.005427442956715822,0.014020893722772598,0,-0.010854885913431644,-0.05156070739030838,0,0.00904573779553175,0.030303223058581352,0,0,-0.02170977182686329,0,0.03980124741792679,0.006332016550004482,0,-0.003618295304477215,-0.005879729520529509,0,0.019900623708963394,0.03753981366753578,0,-0.0018091476522386074,-0.028494074940681458,0,0.07417505234479904,0.016282329335808754,0,-0.005427442956715822,-0.002713721478357911,0,0.027137214317917824,0.007688877172768116,0,-0.0018091476522386074,-0.023971205577254295,0,0.0180914755910635,0.003166008275002241,0,-0.0018091476522386074,-0.03980124741792679,0,0.005427442956715822,0.023971205577254295,0,-0.0018091476522386074,-0.05427442863583565,0,0.13930436968803406,0.0049751559272408485,0,-0.11759459227323532,-0.014925467781722546,0,0.003618295304477215,0.00723659060895443,0,-0.00723659060895443,-0.009950311854481697,0,0.00723659060895443,0.005879729520529509,0,-0.03437380492687225,-0.02170977182686329,0,0.003618295304477215,0.0180914755910635,0,-0.00904573779553175,-0.013116320595145226,0,0.003618295304477215,0.0022614344488829374,0,-0.01447318121790886,-0.00723659060895443,0,0,0.005427442956715822,0,-0.13387691974639893,-0.2998662292957306,0,0.012664033100008965,0.004522868897765875,0,-0.027137214317917824,-0.03980124741792679,0],"text":"10 rem solitaire dice r vonk 2020\r\n20 rem from \"a gamut of games\" by s sackson, 1969, p 169\r\n30 z=rnd(-ti):print\"“\":poke 53280,3:poke 53281,1:poke 646,0\r\n40 print:print\"the object is to score the most points\"\r\n50 print\"possible. 500 points is considered a\"\r\n60 print\"winning score.\"\r\n70 print:print\"your scoresheet is as follows:\"\r\n80 print:print\"scoring                   rejects\"\r\n90 print:print\" 2  (100) -\"\r\n100 print\" 3  ( 70) -\"\r\n110 print\" 4  ( 60) -\"\r\n120 print\" 5  ( 50) -                1 -\"\r\n130 print\" 6  ( 40) -                2 -\"\r\n140 print\" 7  ( 30) -                3 -\"\r\n150 print\" 8  ( 40) -                4 -\"\r\n160 print\" 9  ( 50) -                5 -\"\r\n170 print\" 10 ( 60) -                6 -\"\r\n180 print\" 11 ( 70) -\"\r\n190 print\" 12 (100) -\"\r\n200 print:print\"                              hit a key\"\r\n210 get i$:if i$=\"\" then 210\r\n220 print\"“\":print\"the numbers 2-12 on the left are your\"\r\n230 print\"scoring numbers that you roll with\"\r\n240 print\"two dice. the numbers in parentheses is\"\r\n250 print\"the amount you score each time you roll\"\r\n260 print\"that number. e.g. each time you roll a\"\r\n270 print\"2, you score 100 points; each time you\"\r\n280 print\"roll a 7, you score 30 points.\"\r\n290 print:print\"the numbers 1-6 on the right are your\"\r\n300 print\"reject dice. you can choose up to three\"\r\n310 print\"reject dice in a game. the game ends\"\r\n320 print\"when you roll one reject die eight\"\r\n330 print\"times.\"\r\n340 print:print\"the play:\"\r\n350 print\"roll all five dice. group four of them\"\r\n360 print\"in two pairs. these are your two\"\r\n370 print\"scores. the remaining die is your\"\r\n380 print\"reject die.\"\r\n390 print:print\"for example, you roll 1 1 3 5 6.\"\r\n400 print:print\"                              hit a key\"\r\n410 get i$:if i$=\"\" then 410\r\n420 print\"“\":print\"you decide to group the dice as\"\r\n430 print\"follows:\"\r\n440 print:print\"1 5 -- place a mark next to 6 in the\"\r\n450 print\"         scoring section.\"\r\n460 print\"1 6 -- place a mark next to 7 in the\"\r\n470 print\"       scoring section.\"\r\n480 print\"3   -- place a mark next to 3 in the\"\r\n490 print\"       reject section.\"\r\n500 print:print\"keep rolling until one of your three\"\r\n510 print\"reject dice has eight marks, then your\"\r\n520 print\"score will be calculated.\"\r\n530 print:print\"you must divide up your dice so that\"\r\n540 print\"you use one of them as a reject die.\"\r\n550 print\"the only exception is when you have\"\r\n560 print\"selected three reject dice and your\"\r\n570 print\"roll does not include any of them. for\"\r\n580 print\"example, you roll 1 1 2 2 3 and you\"\r\n590 print\"have already marked the reject dice 4,\"\r\n600 print\"5 and 6.\"\r\n610 print\"                              hit a key\"\r\n620 get i$:if i$=\"\" then 620\r\n630 print\"“\":print\"in this case, you score as usual and\"\r\n640 print\"throw away the die of your choice for\"\r\n650 print\"free.\"\r\n660 print:print\"the scoring catch:\"\r\n670 print\"the first four marks you make for any\"\r\n680 print\"scoring die count as -200 to your\"\r\n690 print\"score. the fifth time you roll it, your\"\r\n700 print\"score for that die goes to 0. it is not\"\r\n710 print\"until the sixth time you roll a number\"\r\n720 print\"that you score the value in the\"\r\n730 print\"parentheses. marks 6-10 score that\"\r\n740 print\"value. marks after 10 do not add to\"\r\n750 print\"your score.\"\r\n760 for i=1 to 8:print:next i:print\"                              hit a key\"\r\n770 get i$:if i$=\"\" then 770\r\n780 print\"“\":print\"for example, your scoresheet looks like\"\r\n790 print\"this:\"\r\n800 print:print\" 2  (100) -\"\r\n810 print\" 3  ( 70) - ii\"\r\n820 print\" 4  ( 60) -\"\r\n830 print\" 5  ( 50) - iiiiiii        1 - iiiiii\"\r\n840 print\" 6  ( 40) -                2 - iiii\"\r\n850 print\" 7  ( 30) - iiiiiiii       3 -\"\r\n860 print\" 8  ( 40) - iiii           4 -\"\r\n870 print\" 9  ( 50) - iiiii          5 - iii\"\r\n880 print\" 10 ( 60) -                6 -\"\r\n890 print\" 11 ( 70) -\"\r\n900 print\" 12 (100) -\"\r\n910 print:print\"in this example, the player has a score\"\r\n920 print\"of -200.\"\r\n930 for i=1 to 5:print:next i:print\"                              hit a key\"\r\n940 get i$:if i$=\"\" then 940\r\n950 print\"“\":print\"the player's score is calculated as\"\r\n960 print\"follows:\"\r\n970 print:print\"two rolls of 3               = -200\"\r\n980 print\"seven rolls of 5  50 * (7-5) = +100\"\r\n990 print\"eight rolls of 7  30 * (8-5) = + 90\"\r\n1000 print\"four rolls of 8              = -200\"\r\n1010 print\"five rolls of 9              =    0\"\r\n1020 print\"                                 --\"\r\n1030 print\"                               -210\"\r\n1040 print:print\"the player would be advised to try to\"\r\n1050 print\"use combinations that will result in 5\"\r\n1060 print\"and 2 being used as the reject die. if\"\r\n1070 print\"the player uses the number 1 two more\"\r\n1080 print\"times, the game will end. the player\"\r\n1090 print\"can use 5 and 2 three and four times\"\r\n1100 print\"respectively without ending the game.\"\r\n1110 print\"the player should also try to score at\"\r\n1120 print\"least one more 8. (scoring three 3's\"\r\n1130 print\"would also be nice but perhaps not\"\r\n1140 print\"possible). the next 8 will remove the\"\r\n1150 print\"-200 penalty.                hit a key.\"\r\n1160 get i$:if i$=\"\" then 1160\r\n1170 data \"100\",\" 70\",\" 60\",\" 50\",\" 40\",\" 30\",\" 40\",\" 50\",\" 60\",\" 70\",\"100\"\r\n1180 dim b(11),b$(11),d(5),d1(5),t(6)\r\n1190 for i=1 to 11:read b$(i):next i\r\n1200 for i=1 to 11:b(i)=0:next i:for i=1 to 6:t(i)=0:next i:s=0:e=0\r\n1210 print\"“\":print\"scoring\";tab(26);\"rejects\":print\r\n1220 for i=1 to 11:print i+1;tab(4);\"(\";b$(i);\") - \";:if b(i)=0 then 1240\r\n1230 for j=1 to b(i):print\"i\";:next j\r\n1240 if i<4 or i>9 then print:goto 1270\r\n1250 print tab(26);i-3;\"- \";:if t(i-3)=0 then print:goto 1270\r\n1260 for j=1 to t(i-3):print\"i\";:next j:print\r\n1270 next i:if e=1 then 1550\r\n1280 print:print\"your score is:\";s\r\n1290 print:print\"hit a key to roll the dice.\"\r\n1300 get i$:if i$<>\"\" then 1300\r\n1310 get i$:if i$=\"\" then 1310\r\n1320 print:print\"rolling...\";:for i=1 to 5:d(i)=int(rnd(1)*6+1):next i\r\n1330 for i=1 to 1000:next i:print\"you rolled\";d(1);d(2);d(3);d(4);d(5):print\r\n1340 for i=1 to 5:d1(i)=0:next i\r\n1350 input\"your numbers for pair #1\";a,b\r\n1360 for i=1 to 5:if a=d(i) then d1(i)=1:goto 1380\r\n1370 next i:print\"number\";a;\"is unavailable.\":goto 1340\r\n1380 for i=1 to 5:if b=d(i) and d1(i)=0 then d1(i)=1:goto 1400\r\n1390 next i:print\"number\";b;\"is unavailable.\":goto 1340\r\n1400 input\"your numbers for pair #2\";c,d\r\n1410 for i=1 to 5:if c=d(i) and d1(i)=0 then d1(i)=1:goto 1430\r\n1420 next i:print\"number\";c;\"is unavailable.\":goto 1340\r\n1430 for i=1 to 5:if d=d(i) and d1(i)=0 then d1(i)=1:goto 1450\r\n1440 next i:print\"number\";d;\"is unavailable.\":goto 1340\r\n1450 for i=1 to 5:if d1(i)=0 then t=d(i)\r\n1460 next i:print\"the reject is\";t\r\n1470 b((a+b)-1)=b((a+b)-1)+1:b((c+d)-1)=b((c+d)-1)+1\r\n1480 s=0:for i=1 to 11:if b(i)>0 and b(i)<5 then s=s-200:goto 1510\r\n1490 if b(i)>10 then s=s+((b(i)-5-(b(i)-10)))*val(b$(i)):goto 1510\r\n1500 if b(i)>4 then s=s+(b(i)-5)*val(b$(i))\r\n1510 next i:f=0:for i=1 to 6:if t(i)>0 then f=f+1\r\n1520 next i:if f=3 and t(t)=0 then 1540\r\n1530 t(t)=t(t)+1:if t(t)=8 then e=1\r\n1540 for i=1 to 1000:next i:goto 1210\r\n1550 print:print\"that's the end of the game.\"\r\n1560 print:print\"you finished with a score of\";s\r\n1570 if s>=500 then print:print\"well done!!!\"\r\n1580 print:print\"play again? (y/n)\";\r\n1590 input i$:if i$<>\"y\" and i$<>\"n\" then print:print\"y/n please.\":goto 1590\r\n1600 if i$=\"y\" then 1200\r\n","sourcePath":"external/github.com/robfromoz_C64-BASIC/solitaire dice.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/solitaire%20dice.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/star wars name.txt","language":"basic","vector":[0,0.01796014793217182,0,0,-0.02245018444955349,0,0.011973432265222073,0.005986716132611036,0,0,-0.002993358066305518,0,0,0.02993357926607132,0,-0.02993357926607132,-0.05238376557826996,0,0.2813756465911865,0.010476753115653992,0,-0.05986715853214264,-0.013470111414790154,0,0.005986716132611036,0.02245018444955349,0,0,-0.004490036983042955,0,0,0.05537712201476097,0,0,-0.010476753115653992,0,0.005986716132611036,0,0,0,-0.001496679033152759,0,0.4011099636554718,0.016463469713926315,0,0,-0.013470111414790154,0,0,0.011973432265222073,0,-0.11973431706428528,0,0,0.06585387885570526,0.00898007396608591,0,-0.005986716132611036,-0.02544354274868965,0,0.01796014793217182,0.004490036983042955,0,-0.005986716132611036,-0.01496678963303566,0,0.011973432265222073,0.005986716132611036,0,-0.07184059172868729,-0.00898007396608591,0,0.005986716132611036,0,0,-0.005986716132611036,-0.011973432265222073,0,0,0.00898007396608591,0,-0.005986716132611036,0,0,0.005986716132611036,0.001496679033152759,0,-0.10776089131832123,-0.04490036889910698,0,0.005986716132611036,0.00898007396608591,0,-0.01796014793217182,-0.06884723156690598,0,0,0.002993358066305518,0,-0.02993357926607132,-0.010476753115653992,0,0.01796014793217182,0.00748339481651783,0,-0.03592029586434364,-0.14667454361915588,0,0.04190701246261597,0,0,-0.005986716132611036,-0.019456826150417328,0,0,0.14517785608768463,0,-0.01796014793217182,-0.02993357926607132,0,0,0.005986716132611036,0,-0.023946864530444145,0,0,0.13170775771141052,0.01496678963303566,0,-0.08980073779821396,-0.00898007396608591,0,0.005986716132611036,0.00748339481651783,0,-0.011973432265222073,-0.001496679033152759,0,0,0.2035483419895172,0,0,0,0,0.01796014793217182,0.016463469713926315,0,-0.023946864530444145,-0.0643571987748146,0,0.005986716132611036,0.03292693942785263,0,0,-0.002993358066305518,0,0.01796014793217182,0.01496678963303566,0,-0.01796014793217182,-0.005986716132611036,0,0.01796014793217182,0.00898007396608591,0,-0.005986716132611036,-0.03592029586434364,0,0,0.00748339481651783,0,-0.04789372906088829,-0.01496678963303566,0,0.03592029586434364,0.001496679033152759,0,-0.08980073779821396,-0.00748339481651783,0,0,0.005986716132611036,0,-0.011973432265222073,-0.05687380209565163,0,0,0.002993358066305518,0,-0.13769446313381195,-0.013470111414790154,0,0.005986716132611036,0.001496679033152759,0,-0.04190701246261597,-0.01496678963303566,0,0.06585387885570526,0.00898007396608591,0,-0.01796014793217182,-0.038913652300834656,0,0.08980073779821396,0.023946864530444145,0,-0.005986716132611036,-0.03592029586434364,0,0,0,0,-0.005986716132611036,-0.00898007396608591,0,0.01796014793217182,0.002993358066305518,0,-0.02993357926607132,-0.011973432265222073,0,0.023946864530444145,0.06585387885570526,0,0,-0.05238376557826996,0,0,0.07333727180957794,0,-0.005986716132611036,-0.020953506231307983,0,0.005986716132611036,0.001496679033152759,0,-0.023946864530444145,0,0,0,0.00898007396608591,0,-0.011973432265222073,-0.011973432265222073,0,0,0.004490036983042955,0,-0.011973432265222073,0,0,0.023946864530444145,0.10925756394863129,0,0,-0.00898007396608591,0,0.005986716132611036,0.00898007396608591,0,-0.011973432265222073,-0.03292693942785263,0,0.011973432265222073,0.016463469713926315,0,-0.011973432265222073,-0.02544354274868965,0,0.011973432265222073,0.02245018444955349,0,-0.04190701246261597,-0.046397048979997635,0,0.005986716132611036,0.002993358066305518,0,-0.5866981744766235,-0.023946864530444145,0,0,0.001496679033152759,0,-0.01796014793217182,-0.07034391164779663,0,0.01796014793217182,0.002993358066305518,0,0,-0.02245018444955349,0,0.011973432265222073,0.03442361578345299,0,0,-0.03592029586434364,0,0.05986715853214264,0.046397048979997635,0,-0.03592029586434364,-0.00748339481651783,0,0.01796014793217182,0,0,-0.005986716132611036,-0.010476753115653992,0,0.011973432265222073,0.013470111414790154,0,0,-0.023946864530444145,0,0.06585387885570526,0.02245018444955349,0,-0.01796014793217182,-0.001496679033152759,0,0,0,0,0,-0.00748339481651783,0,0.023946864530444145,0.002993358066305518,0,-0.011973432265222073,-0.01796014793217182,0,0.011973432265222073,0.03292693942785263,0,0,-0.028436901047825813,0,0.01796014793217182,0.001496679033152759,0,-0.04789372906088829,-0.00898007396608591,0,0.005986716132611036,0.011973432265222073,0,-0.01796014793217182,0,0,0.011973432265222073,0.00748339481651783,0,-0.011973432265222073,-0.011973432265222073,0,0,0.00748339481651783,0,-0.01796014793217182,-0.005986716132611036,0,0.005986716132611036,0.010476753115653992,0,0,-0.02544354274868965,0,0,0.00748339481651783,0,-0.08381402492523193,-0.2948457598686218,0,0.011973432265222073,0,0,-0.13170775771141052,-0.020953506231307983,0],"text":"10 rem star wars name generator r vonk\r\n20 poke 53280,0:poke 53281,0:poke 646,1\r\n30 print\"“\":print\"this program is called 'the star wars\"\r\n40 print\"name generator'.\"\r\n50 print:print\"have you always wanted to have your\"\r\n60 print\"very own star wars name? below is a\"\r\n70 print\"simple formula used to achieve such a\"\r\n80 print\"task. for example, the author's name is\"\r\n90 print\"'robvo sutra, ovastra of nurofen'.\"\r\n100 print:print\"for your first name:\"\r\n110 print:print\"1. take the first three letters of your\"\r\n120 print\"   first name.\"\r\n130 print:print\"2. then add the first two letters of\"\r\n140 print\"   your last name.\"\r\n150 print:print\"for your last name:\"\r\n160 print:print\"1. take the first two letters of your\"\r\n170 print\"   mother's maiden name.\"\r\n180 print:print\"                              hit a key\"\r\n190 get i$:if i$=\"\" then 190\r\n200 print\"“\":print\"last name (cont.):\"\r\n210 print:print\"2. then add the first three letters of\"\r\n220 print\"the city you were born.\"\r\n230 print:print\"star wars honourific name:\"\r\n240 print:print\"1. take the last three letters of your\"\r\n250 print\"   last name.\"\r\n260 print:print\"2. add the name of the first car you\"\r\n270 print\"   drove.\"\r\n280 print:print\"3. insert the word 'of'.\"\r\n290 print:print\"4. tack on the name of the last\"\r\n300 print\"   medication you took.\"\r\n310 print:print:print:print:print:print\"                              hit a key\"\r\n320 get i$:if i$=\"\" then 320\r\n330 print\"“\":input\"your first name\";f$\r\n340 print:input\"your last name\";l$\r\n350 print:input\"your mother's maiden name\";m$\r\n360 print:input\"your city of birth\";b$\r\n370 print:input\"model of your first car\";c$\r\n380 print:input\"the last medication you took\";p$\r\n390 n$=left$(f$,3)+left$(l$,2)+\" \"+left$(m$,2)+left$(b$,3)+\", \"\r\n400 n$=n$+mid$(l$,3,1)+mid$(l$,2,1)+left$(l$,1)+c$+\" of \"+p$\r\n410 print\"“\":for i=1 to 9:print:next i:print tab(8);\"your star wars name is:\"\r\n420 print:print tab(35-len(n$));n$\r\n430 print:print:print:print:print\"another name\";\r\n440 input i$:if i$<>\"y\" and i$<>\"n\" then print\"(y) or (n) please.\":goto 440\r\n450 if i$=\"y\" then 330","sourcePath":"external/github.com/robfromoz_C64-BASIC/star wars name.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/star%20wars%20name.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/stochastic.txt","language":"basic","vector":[0,0.014559141360223293,0,0,0,0,0.02329462580382824,0,0,0,0,0,0,0.01164731290191412,0,0,-0.026206454262137413,0,0.2329462617635727,0.00291182822547853,0,-0.01164731290191412,-0.014559141360223293,0,0.01164731290191412,0.034941937774419785,0,-0.01164731290191412,-0.00582365645095706,0,0.01164731290191412,0.13976775109767914,0,0,-0.008735484443604946,0,0,0.00582365645095706,0,-0.04658925160765648,-0.00582365645095706,0,0.06988387554883957,0.020382797345519066,0,-0.01164731290191412,-0.020382797345519066,0,0,0.05823656544089317,0,0,0,0,0.04658925160765648,0.08153118938207626,0,0,-0.04658925160765648,0,0.01164731290191412,0,0,-0.01164731290191412,-0.014559141360223293,0,0.05823656544089317,0.017470968887209892,0,-0.01164731290191412,-0.06406021863222122,0,0.02329462580382824,0,0,-0.04658925160765648,-0.034941937774419785,0,0.01164731290191412,0.020382797345519066,0,-0.04658925160765648,-0.00582365645095706,0,0,0,0,-0.2678881883621216,-0.01164731290191412,0,0,0,0,0,-0.008735484443604946,0,0.01164731290191412,0,0,-0.01164731290191412,0,0,0.01164731290191412,0.014559141360223293,0,-0.01164731290191412,-0.08153118938207626,0,0,0.00291182822547853,0,0,-0.00291182822547853,0,0.01164731290191412,0.1222967877984047,0,-0.034941937774419785,-0.00582365645095706,0,0.01164731290191412,0.00582365645095706,0,-0.08153118938207626,-0.00582365645095706,0,0.06988387554883957,0.01164731290191412,0,-0.2678881883621216,-0.00291182822547853,0,0.01164731290191412,0,0,-0.05823656544089317,-0.029118282720446587,0,0,0.03785376623272896,0,-0.06988387554883957,-0.008735484443604946,0,0,0.00582365645095706,0,-0.02329462580382824,-0.00291182822547853,0,0.05823656544089317,0.02329462580382824,0,0,0,0,0.01164731290191412,0.014559141360223293,0,-0.034941937774419785,-0.00582365645095706,0,0.01164731290191412,0.05823656544089317,0,0,-0.00582365645095706,0,0,0.052412908524274826,0,-0.12812043726444244,-0.043677423149347305,0,0.01164731290191412,0.00582365645095706,0,0,-0.02329462580382824,0,0,0.008735484443604946,0,0,-0.1543269008398056,0,0,0,0,-0.08153118938207626,-0.017470968887209892,0,0.01164731290191412,0.014559141360223293,0,-0.01164731290191412,-0.008735484443604946,0,0.11647313088178635,0.00582365645095706,0,0,-0.00582365645095706,0,0.5124817490577698,0,0,-0.01164731290191412,0,0,0.02329462580382824,0.00582365645095706,0,-0.02329462580382824,-0.017470968887209892,0,0.01164731290191412,0.01164731290191412,0,-0.08153118938207626,-0.04076559469103813,0,0,0.034941937774419785,0,0,-0.1339440941810608,0,0,0.06406021863222122,0,-0.02329462580382824,-0.03203010931611061,0,0,0.00291182822547853,0,-0.05823656544089317,-0.03785376623272896,0,0,0.00291182822547853,0,-0.09317850321531296,-0.01164731290191412,0,0,0.029118282720446587,0,0,-0.01164731290191412,0,0.01164731290191412,0.02329462580382824,0,0,-0.020382797345519066,0,0,0.00582365645095706,0,-0.04658925160765648,0,0,0,0.01164731290191412,0,-0.034941937774419785,-0.06406021863222122,0,0,0.008735484443604946,0,0,-0.00291182822547853,0,0.01164731290191412,0.014559141360223293,0,-0.32612475752830505,-0.00291182822547853,0,0.01164731290191412,0.00582365645095706,0,-0.01164731290191412,-0.052412908524274826,0,0.02329462580382824,0.008735484443604946,0,0,-0.017470968887209892,0,0,0.05823656544089317,0,0,-0.0669720470905304,0,0.02329462580382824,0.2562408745288849,0,-0.01164731290191412,-0.00582365645095706,0,0,0.014559141360223293,0,-0.02329462580382824,-0.014559141360223293,0,0.01164731290191412,0.008735484443604946,0,-0.01164731290191412,-0.043677423149347305,0,0.02329462580382824,0,0,-0.01164731290191412,0,0,0,0.00291182822547853,0,0,-0.020382797345519066,0,0.034941937774419785,0.00291182822547853,0,0,-0.04950108006596565,0,0.11647313088178635,0.017470968887209892,0,0,-0.11356130242347717,0,0.16306237876415253,0.00291182822547853,0,-0.08153118938207626,-0.014559141360223293,0,0,0.00582365645095706,0,0,-0.017470968887209892,0,0.034941937774419785,0,0,-0.08153118938207626,-0.029118282720446587,0,0,0.014559141360223293,0,-0.06988387554883957,-0.017470968887209892,0,0.034941937774419785,0.00291182822547853,0,-0.01164731290191412,-0.008735484443604946,0,0,0.008735484443604946,0,0,-0.16306237876415253,0,0,0.00582365645095706,0,0,-0.03785376623272896,0],"text":"10 rem stochastic texts\r\n20 rem originally by t lutz, 1959\r\n30 rem javascript code by n montfort, 2014\r\n40 rem converted to basic by r vonk, 2020\r\n50 z=rnd(-ti):def fnr(x)=int(rnd(1)*x+1)\r\n60 data count,stranger,look,church,castle,picture,eye,village,tower,farmer,way\r\n70 data guest,day,house,table,labourer\r\n80 data open,silent,strong,good,narrow,near,new,quiet,far,deep,late,dark,free\r\n90 data large,old,angry\r\n100 data \" and \",\" or \",\" therefore \",\". \",\". \",\". \",\". \",\". \"\r\n110 data a,every,no,not every\r\n120 dim su$(16),pr$(16),co$(8),op$(4)\r\n130 for i=1 to 16:read su$(i):next i:for i=1 to 16:read pr$(i):next i\r\n140 for i=1 to 8:read co$(i):next i:for i=1 to 4:read op$(i):next i:print\"“\"\r\n150 gosub 180:print te$+pr$(fnr(16))+co$(fnr(8));\r\n160 gosub 180:print te$+pr$(fnr(16))+\".\"\r\n170 print:for i=1 to 500:next i:goto 150\r\n180 te$=op$(fnr(4))+\" \"+su$(fnr(16)):if te$=\"a eye\" then te$=\"an eye\"\r\n190 te$=te$+\" is \":return\r\n","sourcePath":"external/github.com/robfromoz_C64-BASIC/stochastic.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/stochastic.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/stretch for 330.txt","language":"basic","vector":[0.006300955079495907,0.011026671156287193,0,0,-0.014177149161696434,0,0.050407640635967255,0.006300955079495907,0,-0.12601910531520844,0,0,0.006300955079495907,0.015752388164401054,0,0,-0.025203820317983627,0,0.33395063877105713,0.03938097134232521,0,-0.018902866169810295,-0.006300955079495907,0,0,0.009451433084905148,0,0,0,0,0.012601910158991814,0.0693105086684227,0,-0.018902866169810295,-0.018902866169810295,0,0,0.009451433084905148,0,0,0,0,0.33395063877105713,0.022053342312574387,0,0,-0.03308001533150673,0,0,0.020478105172514915,0,-0.07561146467924118,0,0,0.12601910531520844,0.07876194268465042,0,-0.006300955079495907,-0.06300955265760422,0,0.012601910158991814,0.006300955079495907,0,-0.012601910158991814,-0.018902866169810295,0,0.018902866169810295,0.007876194082200527,0,-0.03780573233962059,-0.012601910158991814,0,0.006300955079495907,0,0,-0.012601910158991814,-0.0031504775397479534,0,0.006300955079495907,0.03150477632880211,0,-0.04410668462514877,-0.0031504775397479534,0,0.012601910158991814,0.0031504775397479534,0,-0.18902865052223206,-0.02992953732609749,0,0,0.004725716542452574,0,-0.018902866169810295,-0.025203820317983627,0,0,0.006300955079495907,0,-0.006300955079495907,-0.0031504775397479534,0,0.025203820317983627,0.028354298323392868,0,-0.056708596646785736,-0.18272769451141357,0,0.03780573233962059,0.006300955079495907,0,-0.006300955079495907,-0.018902866169810295,0,0.006300955079495907,0.17170102894306183,0,-0.11341719329357147,-0.011026671156287193,0,0,0.0015752387698739767,0,-0.050407640635967255,0,0,0.08191242069005966,0.014177149161696434,0,-0.18272769451141357,-0.009451433084905148,0,0.012601910158991814,0.015752388164401054,0,-0.025203820317983627,-0.0015752387698739767,0,0,0.1685505509376526,0,-0.006300955079495907,0,0,0,0.028354298323392868,0,-0.056708596646785736,-0.04095621034502983,0,0.006300955079495907,0.06773526966571808,0,0,-0.0031504775397479534,0,0.006300955079495907,0.015752388164401054,0,-0.025203820317983627,-0.015752388164401054,0,0.025203820317983627,0.014177149161696434,0,-0.03150477632880211,-0.018902866169810295,0,0.006300955079495907,0.04253144934773445,0,-0.15752388536930084,-0.03308001533150673,0,0.006300955079495907,0.004725716542452574,0,-0.04410668462514877,-0.025203820317983627,0,0.012601910158991814,0.009451433084905148,0,0,-0.09924004226922989,0,0,0,0,-0.10081528127193451,-0.011026671156287193,0,0.03150477632880211,0.014177149161696434,0,-0.012601910158991814,-0.004725716542452574,0,0.025203820317983627,0.012601910158991814,0,0,-0.04253144934773445,0,0.050407640635967255,0.020478105172514915,0,-0.050407640635967255,-0.012601910158991814,0,0,0.004725716542452574,0,0,-0.056708596646785736,0,0.012601910158991814,0.012601910158991814,0,-0.056708596646785736,-0.056708596646785736,0,0.04410668462514877,0.04253144934773445,0,0,-0.09136384725570679,0,0,0.08978860825300217,0,-0.03780573233962059,-0.017327627167105675,0,0.012601910158991814,0,0,-0.050407640635967255,-0.0031504775397479534,0,0.006300955079495907,0.0031504775397479534,0,-0.012601910158991814,-0.03308001533150673,0,0,0.0031504775397479534,0,0,0,0,0.012601910158991814,0.08663813024759293,0,0,-0.012601910158991814,0,0.012601910158991814,0.012601910158991814,0,-0.006300955079495907,-0.03465525433421135,0,0.006300955079495907,0.03465525433421135,0,-0.025203820317983627,-0.08033718168735504,0,0.012601910158991814,0.006300955079495907,0,-0.012601910158991814,-0.025203820317983627,0,0.012601910158991814,0.011026671156287193,0,-0.4788725972175598,-0.009451433084905148,0,0.012601910158991814,0.0015752387698739767,0,-0.07561146467924118,-0.053558118641376495,0,0.018902866169810295,0.017327627167105675,0,-0.006300955079495907,-0.017327627167105675,0,0.006300955079495907,0.015752388164401054,0,0,-0.047257162630558014,0,0.03150477632880211,0.025203820317983627,0,0,-0.02992953732609749,0,0.06300955265760422,0,0,-0.006300955079495907,-0.0015752387698739767,0,0.006300955079495907,0.012601910158991814,0,0,-0.04253144934773445,0,0.11341719329357147,0.03150477632880211,0,-0.012601910158991814,-0.0015752387698739767,0,0.018902866169810295,0.0015752387698739767,0,0,-0.047257162630558014,0,0.03780573233962059,0.006300955079495907,0,-0.03780573233962059,-0.03780573233962059,0,0.018902866169810295,0.023628581315279007,0,0,-0.051982879638671875,0,0.15752388536930084,0.0031504775397479534,0,-0.10711623728275299,-0.006300955079495907,0,0.006300955079495907,0.006300955079495907,0,-0.012601910158991814,-0.0015752387698739767,0,0.012601910158991814,0.006300955079495907,0,-0.018902866169810295,-0.017327627167105675,0,0,0.004725716542452574,0,-0.006300955079495907,-0.012601910158991814,0,0.056708596646785736,0.007876194082200527,0,-0.006300955079495907,-0.012601910158991814,0,0,0.012601910158991814,0,-0.056708596646785736,-0.2473124861717224,0,0.006300955079495907,0.007876194082200527,0,-0.03780573233962059,-0.0771867036819458,0],"text":"10 rem stretch for 330 r vonk\r\n20 rem from \"the calculator game book for kids of all ages\" by a hartman, 1977\r\n30 rem p.129\r\n40 poke 53280,11:poke 53281,0:poke 646,1\r\n50 z=rnd(-ti):print\"“\":print\"this game is called 'stretch for 330'.\"\r\n60 print:print\"the object of the game is to get a\"\r\n70 print\"final sum as close to 330 as possible.\"\r\n80 print:print\"you have a deck of 9 cards numbered 2\"\r\n90 print\"to 10, and nine multipliers numbered 1\"\r\n100 print\"to 9.\"\r\n110 print:print\"turn over a card from the stack and\"\r\n120 print\"decide by which number 1-9 you will\"\r\n130 print\"multiply that face value. that number\"\r\n140 print\"is then crossed out. continue this way\"\r\n150 print\"until you've used all 9 cards and each\"\r\n160 print\"of the multipliers 1-9. your final sum\"\r\n170 print\"is the sum of those 9 products.\"\r\n180 for i=1 to 6:print:next i:print\"                              hit a key\"\r\n190 get i$:if i$=\"\" then 190\r\n200 dim c(9),m(9)\r\n210 for i=1 to 9:c(i)=i+1:m(i)=1:next i\r\n220 for i=1 to 9:r=int(rnd(1)*9+1):t=c(r):c(r)=c(i):c(i)=t:next i:n=0:c=0\r\n230 print\"“\":print tab(13);\"your sum is\";n\r\n240 print:print tab(9);\"multipliers available:\"\r\n250 print:print tab(6);:for i=1 to 9:if m(i)=1 then print i;\r\n260 next i\r\n270 print:print:print\"hit a key to draw a card.\"\r\n280 get i$:if i$=\"\" then 280\r\n290 c=c+1:print:print\"the card is\";c(c)\r\n300 print:print\"which multiplier do you choose\";\r\n310 input i:if i<1 or i>9 then print:print\"(1) to (9) please.\":goto 310\r\n320 if m(i)=0 then print:print\"that multiplier isn't available.\":goto 310\r\n330 print:print\"ok,\";c(c);\"*\";i;\"equals\";c(c)*i\r\n340 n=n+c(c)*i:m(i)=0:print:print\"your sum is now\";n:if c=9 then 360\r\n350 for i=1 to 1000:next i:goto 230\r\n360 print:print\"that's the end of the game.\"\r\n370 if n=330 then print:print\"well done, you got 330!\":goto 390\r\n380 print:print\"your final sum is\";n\r\n390 print:print\"would you like to play again (y/n)\";\r\n400 input i$:if i$<>\"y\" and i$<>\"n\" then print:print\"(y) or (n) please.\":goto 400\r\n410 if i$=\"y\" then 210","sourcePath":"external/github.com/robfromoz_C64-BASIC/stretch for 330.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/stretch%20for%20330.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/terror town.txt","language":"basic","vector":[0.00840811152011156,0.01135095115751028,0,-0.01177135668694973,-0.0075673009268939495,0,0.05381191521883011,0.02438352443277836,0,-0.02354271337389946,-0.006726489402353764,0,0.013452978804707527,0.0037836504634469748,0,-0.03363244608044624,-0.019338658079504967,0,0.32623475790023804,0.032791636884212494,0,-0.021861091256141663,-0.00420405576005578,0,0.018497847020626068,0.02354271337389946,0,-0.050448670983314514,-0.002522433642297983,0,0.001681622350588441,0.06810570508241653,0,0,-0.0029428391717374325,0,0.050448670983314514,0.006726489402353764,0,-0.006726489402353764,-0.018918251618742943,0,0.24719849228858948,0.009669329039752483,0,0,-0.0037836504634469748,0,0.00840811152011156,0.02059987373650074,0,-0.13116654753684998,-0.00210202788002789,0,0.16648061573505402,0.01471419632434845,0,-0.001681622350588441,-0.044562991708517075,0,0.018497847020626068,0.0037836504634469748,0,-0.010089734569191933,-0.015555007383227348,0,0.010089734569191933,0.005885678343474865,0,-0.018497847020626068,-0.019338658079504967,0,0.003363244701176882,0.005465272814035416,0,-0.003363244701176882,-0.023122308775782585,0,0.006726489402353764,0.010089734569191933,0,-0.07062814384698868,-0.0029428391717374325,0,0.006726489402353764,0.0012612168211489916,0,-0.10426058620214462,-0.03615488111972809,0,0.00840811152011156,0.0037836504634469748,0,-0.07735463231801987,-0.027746768668293953,0,0.003363244701176882,0.007146894931793213,0,-0.010089734569191933,-0.007146894931793213,0,0.025224335491657257,0.029007986187934875,0,-0.03363244608044624,-0.14461952447891235,0,0.06390164792537689,0.007987705990672112,0,-0.055493537336587906,-0.031110014766454697,0,0.010089734569191933,0.1643785834312439,0,-0.013452978804707527,-0.012612167745828629,0,0.001681622350588441,0.014293789863586426,0,-0.03531407192349434,-0.027746768668293953,0,0.07062814384698868,0.002522433642297983,0,-0.10594221204519272,-0.0029428391717374325,0,0.00840811152011156,0.03153042122721672,0,-0.01177135668694973,-0.004624461755156517,0,0.036995694041252136,0.12738288938999176,0,-0.07735463231801987,-0.0008408111752942204,0,0.003363244701176882,0.034893665462732315,0,-0.14293789863586426,-0.06642408668994904,0,0.018497847020626068,0.0849219337105751,0,-0.005044867284595966,-0.009669329039752483,0,0.001681622350588441,0.012612167745828629,0,-0.015134601853787899,-0.005465272814035416,0,0.001681622350588441,0.013452978804707527,0,-0.04540380463004112,-0.010089734569191933,0,0.006726489402353764,0.007987705990672112,0,-0.2976471483707428,-0.019338658079504967,0,0.03531407192349434,0.005044867284595966,0,-0.01681622304022312,-0.04035893827676773,0,0.0571751594543457,0.005044867284595966,0,-0.006726489402353764,-0.06095881015062332,0,0.001681622350588441,0.005885678343474865,0,-0.05381191521883011,-0.04624461755156517,0,0.08071787655353546,0.004624461755156517,0,-0.006726489402353764,-0.005465272814035416,0,0.06390164792537689,0.012612167745828629,0,-0.003363244701176882,-0.03321204334497452,0,0.026905957609415054,0.03363244608044624,0,-0.005044867284595966,-0.040779344737529755,0,0.013452978804707527,0.007146894931793213,0,-0.005044867284595966,-0.009669329039752483,0,0.01177135668694973,0.014293789863586426,0,-0.01177135668694973,-0.02354271337389946,0,0.015134601853787899,0.038677316159009933,0,-0.001681622350588441,-0.061379216611385345,0,0.00840811152011156,0.08576273918151855,0,-0.036995694041252136,-0.01135095115751028,0,0.001681622350588441,0.023122308775782585,0,-0.021861091256141663,-0.05128948390483856,0,0.010089734569191933,0.00210202788002789,0,-0.006726489402353764,-0.07146894931793213,0,0.00840811152011156,0.021861091256141663,0,-0.031950823962688446,-0.00420405576005578,0,0.01681622304022312,0.06264043599367142,0,-0.00840811152011156,-0.0075673009268939495,0,0.005044867284595966,0.0029428391717374325,0,-0.013452978804707527,-0.055493537336587906,0,0.001681622350588441,0.0449833981692791,0,-0.006726489402353764,-0.14924398064613342,0,0.01177135668694973,0.022281495854258537,0,-0.005044867284595966,-0.010930545628070831,0,0.00840811152011156,0.031110014766454697,0,-0.5313926935195923,-0.007987705990672112,0,0.005044867284595966,0.001681622350588441,0,-0.0571751594543457,-0.027746768668293953,0,0.005044867284595966,0.04204056039452553,0,-0.006726489402353764,-0.021020280197262764,0,0.020179469138383865,0.03363244608044624,0,-0.010089734569191933,-0.027746768668293953,0,0.006726489402353764,0.015555007383227348,0,-0.01177135668694973,-0.021861091256141663,0,0.025224335491657257,0.0075673009268939495,0,-0.005044867284595966,-0.005044867284595966,0,0.015134601853787899,0.01219176221638918,0,-0.003363244701176882,-0.014293789863586426,0,0.12275843322277069,0.02354271337389946,0,-0.003363244701176882,-0.01471419632434845,0,0.006726489402353764,0.006726489402353764,0,-0.03531407192349434,-0.021861091256141663,0,0.013452978804707527,0.0012612168211489916,0,-0.001681622350588441,-0.01975906267762184,0,0.03363244608044624,0.02270190231502056,0,-0.003363244701176882,-0.029848797246813774,0,0.025224335491657257,0.006306083872914314,0,-0.07062814384698868,-0.018918251618742943,0,0.006726489402353764,0.01765703596174717,0,-0.020179469138383865,-0.02354271337389946,0,0.006726489402353764,0.003363244701176882,0,-0.03531407192349434,-0.04246096685528755,0,0.006726489402353764,0.005465272814035416,0,-0.030269203707575798,-0.004624461755156517,0,0.01177135668694973,0.006306083872914314,0,-0.001681622350588441,-0.006306083872914314,0,0,0.004624461755156517,0,-0.06558327376842499,-0.2770472764968872,0,0.006726489402353764,0.00420405576005578,0,-0.05213029310107231,-0.10299937427043915,0],"text":"10 rem terror town rob vonk 2022\r\n20 rem based on a rpg written by errin famiglia and ronald pehr 2006\r\n30 rem https://boardgamegeek.com/boardgame/320921/terror-town-rpg\r\n40 poke 53280,0:poke 53281,0:poke 646,1\r\n50 print\"“\":print\"you take the role of a person trapped\"\r\n60 print\"in the evil terror town, a ghost town\"\r\n70 print\"whose legend claims a corrupt mayor\"\r\n80 print\"sacrificed the souls of his entire town\"\r\n90 print\"in order to gain power and eternal life\"\r\n100 print\"in a dark dimension of pure evil.\"\r\n110 print:print\"the town exists in three different\"\r\n120 print\"worlds at once: our world, grey world,\"\r\n130 print\"and dark world. in our world, you will\"\r\n140 print\"find weapons and other useful items.\"\r\n150 print\"in dark world, you will find twisted\"\r\n160 print\"monsters out to kill you. in grey\"\r\n170 print\"world, you will find both.\"\r\n180 print:print\"can you survive the survival horror\"\r\n190 print\"challenge of terror town? will you\"\r\n200 print\"escape the doomed town, defeat its\"\r\n210 print\"diabolical mayor, or just end up\"\r\n220 print\"falling victim to its many monsters?\"\r\n230 print\"the answer awaits you...in terror town.\"\r\n240 print:print\"hit a key.\"\r\n250 get i$:if i$=\"\" then 250\r\n260 z=rnd(-ti):def fnr(x)=int(rnd(1)*x+1)\r\n270 wo=1:we$=\" knife\":sh=1:da=3:ke=0\r\n280 es=fnr(6)+6:li=fnr(6)+fnr(6)+12:sl=li\r\n290 print\"“\":print\"you start this adventure in our world.\"\r\n300 print:print\"***************************************\"\r\n310 print:print\"escape points\";es\r\n320 print\"life points\";li\r\n330 if ke>0 then print\"city keys\";ke\r\n340 print\"you are armed with a\";we$;\".\"\r\n350 print:print\"you are in \";\r\n360 if wo=1 then print\"our world.\":goto 390\r\n370 if wo=2 then print\"grey world.\":goto 730\r\n380 print\"dark world.\":goto 780\r\n390 print:print\"hit a key to search the town for items.\"\r\n400 get i$:if i$<>\"\" then 400\r\n410 get i$:if i$=\"\" then 410\r\n420 print:print\"you find a\";\r\n430 ro=fnr(6)+fnr(6)\r\n440 if ro=2 then print\" city key!\":ke=ke+1\r\n450 if ro=3 then print\" crossbow!\":we$=\" crossbow\":sh=3:da=fnr(6)+6\r\n460 if ro=4 then print\" magnum!\":we$=\" magnum\":sh=6:da=fnr(6)+2\r\n470 if ro=5 then print\" shotgun!\":we$=\" shotgun\":sh=4:da=fnr(6)+4\r\n480 if ro=6 then print\" revolver!\":we$=\" revolver\":sh=6:da=fnr(6)+1\r\n490 if ro=7 then print\" med kit!\":li=li+fnr(6)+fnr(6):if li>sl then li=sl\r\n500 if ro=8 then print\" pistol!\":we$=\" pistol\":sh=8:da=fnr(6)\r\n510 if ro=9 then print\" rifle!\":we$=\" rifle\":sh=4:da=fnr(6)+3\r\n520 if ro=10 then print\"n uzi!\":we$=\"n uzi\":sh=12:da=fnr(6)+1\r\n530 if ro=11 then print\" grenade!\":we$=\" grenade\":sh=1:da=fnr(6)+fnr(6)+6\r\n540 if ro=12 and wo=2 then 430\r\n550 if ro<>12 then 600\r\n560 print\" power portal!\":if fnr(6)>ke then 580\r\n570 print:print\"you use the portal to escape the city!\":end\r\n580 print:print\"however, you don't have enough keys to\"\r\n590 print\"activate it.\":goto 610\r\n600 if ro<>2 and ro<>7 then print\"it can deal\";da;\"damage.\"\r\n610 print:print\"hit a key to continue your quest.\"\r\n620 get i$:if i$<>\"\" then 620\r\n630 get i$:if i$=\"\" then 630\r\n640 ro=fnr(6)+fnr(6):if ro<>2 and ro<>7 and ro<>12 then 300\r\n650 ro=fnr(6):if wo<>1 then 680\r\n660 if ro<5 then wo=2:goto 300\r\n670 wo=3:goto 300\r\n680 if wo<>2 then 710\r\n690 if ro<4 then wo=1:goto 300\r\n700 wo=3:goto 300\r\n710 if ro<5 then wo=2:goto 300\r\n720 wo=1:goto 300\r\n730 print:print\"what will you find here?\"\r\n740 print\"hit a key to find out.\"\r\n750 get i$:if i$<>\"\" then 750\r\n760 get i$:if i$=\"\" then 760\r\n770 ro=fnr(6):if ro<4 then 420\r\n780 mo=fnr(6)+fnr(6):print:print\"look out!\":print\r\n790 if mo=2 then print\"a giant tentacle\";:mo$=\"the giant tentacle\"\r\n800 if mo=2 then ec=12:ea=0:el=36:ed=fnr(6)+fnr(6)+3\r\n810 if mo=3 then print\"a leech cloud\";:mo$=\"the leech cloud\"\r\n820 if mo=3 then ec=10:ea=5:el=9:ed=fnr(6)+fnr(6)+1\r\n830 if mo=4 then print\"a vampleweed\";:mo$=\"the vampleweed\"\r\n840 if mo=4 then ec=9:ea=3:el=15:ed=fnr(6)+5\r\n850 if mo=5 then print\"a chompbox\";:mo$=\"the chompbox\"\r\n860 if mo=5 then ec=6:ea=4:el=13:ed=fnr(6)+4\r\n870 if mo=6 then print\"a beekeeper\";:mo$=\"the beekeeper\"\r\n880 if mo=6 then ec=8:ea=2:el=16:ed=fnr(6)+1\r\n890 if mo=7 then print\"a drooler\";:mo$=\"the drooler\"\r\n900 if mo=7 then ec=7:ea=1:el=12:ed=fnr(6)\r\n910 if mo=8 then print\"tall sally\";:mo$=\"tall sally\"\r\n920 if mo=8 then ec=9:ea=2:el=14:ed=fnr(6)+2\r\n930 if mo=9 then print\"a killboard\";:mo$=\"the killboard\"\r\n940 if mo=9 then ec=6:ea=1:el=27:ed=fnr(6)+3\r\n950 if mo=10 then print\"a threettin\";:mo$=\"the threettin\"\r\n960 if mo=10 then ec=8:ea=3:el=18:ed=fnr(6)+6\r\n970 if mo=11 then print\"a wormface\";:mo$=\"the wormface\"\r\n980 if mo=11 then ec=7:ea=4:el=21:ed=fnr(6)+fnr(6)\r\n990 if mo=12 then print\"the dark mayor\";:mo$=\"the dark mayor\"\r\n1000 if mo=12 then ec=11:ea=6:el=24:ed=fnr(6)+fnr(6)+2\r\n1010 print\" is here!\":print:print mo$;\"'s stats:\"\r\n1020 print\"chase\";ec;\"armour\";ea;\"life\";el;\"damage\";ed\r\n1030 print:print\"do you wish to (1) flee or (2) fight\";\r\n1040 input in:if in<>1 and in<>2 then print:print\"(1) or (2) please.\":goto 1040\r\n1050 if in=2 then 1180\r\n1060 print:print\"you attempt to flee \";mo$;\"...\"\r\n1070 for i=1 to 1000:next i:r1=fnr(6)+fnr(6):if r1>=es then 1090\r\n1080 print\"you succeed!\":for i=1 to 1000:next i:goto 1100\r\n1090 print\"you fail though.\":for i=1 to 1000:next i\r\n1100 print:print mo$;\" gives chase...\":for i=1 to 1000:next i\r\n1110 r2=fnr(6)+fnr(6):if r2<ec then 1130\r\n1120 print mo$;\" fails to catch you!\":goto 1140\r\n1130 print mo$;\" catches you!\"\r\n1140 if r1>=es and r2<ec then 1170\r\n1150 if (r1>=es and r2>=ec) or (r1<es and r2<ec) then 1030\r\n1160 print\"you escape \";mo$;\"'s clutches!\":goto 610\r\n1170 print\"you must fight \";mo$;\"!\"\r\n1180 print:print\"you have\";sh;\"shot\";:if sh>1 then print\"s \";:goto 1200\r\n1190 print\" \";\r\n1200 print\"left of your\";\r\n1210 if right$(we$,3)=\"uzi\" then print\" uzi.\":goto 1230\r\n1220 print we$;\".\"\r\n1230 print:print mo$;\" has\";el;\"life point\";:if el<>1 then print\"s\";:goto 1240\r\n1240 print\".\":print\"you have\";li\r\n1250 print:print\"how many shots do you wish to take\";\r\n1260 input in\r\n1270 if in<1 then print:print\"you must take at least one shot!\":goto 1260\r\n1280 if in>sh then print:print\"you don't have that many shots!\":goto 1260\r\n1290 for i=1 to in:if right$(we$,3)<>\"ife\" then sh=sh-1\r\n1300 print:print\"you attack \";mo$;\"...\":for j=1 to 1000:next j\r\n1310 ro=fnr(6):if ro<ea then 1360\r\n1320 print\"you hit \";mo$;\" for\";da;\"damage!\":el=el-da\r\n1330 print mo$;\" now has\";el;\"life point\";:if el<>1 then print\"s\";:goto 1340\r\n1340 print\".\":if el<=0 then 1470\r\n1350 goto 1380\r\n1360 if rnd(1)>.5 then print\"you miss!\":goto 1380\r\n1370 print\"your shot is ineffective!\"\r\n1380 for j=1 to 1000:next j:print:print mo$;\" attacks!\":for j=1 to 1000:next j\r\n1390 li=li-ed:print\"you now have\";li;\"life point\";\r\n1400 if ll<>1 then print\"s\";:goto 1420\r\n1410 print\" \";\r\n1420 print\".\":for j=1 to 1000:next j:if li<=0 then 1530\r\n1430 if sh>0 then 1460\r\n1440 print:print\"you're out of shots, so you must fight\"\r\n1450 print mo$;\" with a knife!\":we$=\" knife\":sh=1:da=3:for j=1 to 1000:next j\r\n1460 next i:goto 1030\r\n1470 if mo=12 then 1490\r\n1480 print:print\"you have slain \";mo$;\"!\":goto 610\r\n1490 print:print\"the dark mayor lies dead at your feet,\"\r\n1500 print\"his power over the town shattered.\"\r\n1510 print\"never again will the townspeople suffer\"\r\n1520 print\"at the hands of such evil. well done!\":end\r\n1530 print:print\"you are dead. the dark mayor reigns\"\r\n1540 print\"supreme over the town!\"","sourcePath":"external/github.com/robfromoz_C64-BASIC/terror town.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/terror%20town.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/test match.txt","language":"basic","vector":[0.02019653469324112,0.03029480390250683,0,-0.006732178386300802,-0.006171163637191057,0,0.04936930909752846,0.008415223099291325,0,-0.013464356772601604,-0.01009826734662056,0,0.00897623784840107,0.061711635440588,0,-0.03814901039004326,-0.01402537152171135,0,0.2917277216911316,0.02636769972741604,0,-0.013464356772601604,-0.006732178386300802,0,0,0.01402537152171135,0,-0.0022440594621002674,-0.006171163637191057,0,0.004488118924200535,0.12230124324560165,0,-0.004488118924200535,-0.00392710417509079,0,0.0022440594621002674,0.003366089193150401,0,-0.02244059555232525,-0.003366089193150401,0,0.2580668330192566,0.01851349137723446,0,-0.02917277254164219,-0.01065928302705288,0,0.0022440594621002674,0.006732178386300802,0,-0.09425050020217896,-0.00392710417509079,0,0.16381634771823883,0.02748972922563553,0,-0.013464356772601604,-0.1138860210776329,0,0.00897623784840107,0.00392710417509079,0,-0.00897623784840107,-0.014586386270821095,0,0.04936930909752846,0.01065928302705288,0,-0.0561014860868454,-0.02075755037367344,0,0.02244059555232525,0.00785420835018158,0,-0.004488118924200535,-0.01065928302705288,0,0.004488118924200535,0.011220297776162624,0,-0.04263713210821152,-0.011220297776162624,0,0.004488118924200535,0.0005610148655250669,0,-0.18176881968975067,-0.03309987857937813,0,0,0.015147401951253414,0,-0.06283366680145264,-0.02356262505054474,0,0.006732178386300802,0.011220297776162624,0,-0.013464356772601604,-0.01178131252527237,0,0.04712525010108948,0.02580668404698372,0,-0.03141683340072632,-0.12454529851675034,0,0.013464356772601604,0.005610148888081312,0,-0.004488118924200535,-0.030855817720294,0,0.07180990278720856,0.14922995865345,0,-0.04263713210821152,-0.006732178386300802,0,0,0.0022440594621002674,0,-0.02692871354520321,-0.00504913367331028,0,0.10322673618793488,0.03309987857937813,0,-0.19298911094665527,-0.002805074444040656,0,0.011220297776162624,0.01290334202349186,0,-0.02917277254164219,-0.01178131252527237,0,0.0022440594621002674,0.13015544414520264,0,-0.0022440594621002674,-0.01739146187901497,0,0.0022440594621002674,0.04375915974378586,0,-0.13015544414520264,-0.04880829527974129,0,0.02244059555232525,0.08359121531248093,0,-0.011220297776162624,-0.00785420835018158,0,0.004488118924200535,0.01065928302705288,0,-0.011220297776162624,-0.006732178386300802,0,0.006732178386300802,0.02636769972741604,0,-0.006732178386300802,-0.02973378822207451,0,0.006732178386300802,0.02412363886833191,0,-0.2244059443473816,-0.04712525010108948,0,0.09425050020217896,0.00392710417509079,0,-0.02468465454876423,-0.0252456683665514,0,0.01570841670036316,0.005610148888081312,0,-0.00897623784840107,-0.09873861819505692,0,0,0.0016830445965752006,0,-0.05161336809396744,-0.03309987857937813,0,0.011220297776162624,0.008415223099291325,0,-0.02244059555232525,-0.011220297776162624,0,0.04712525010108948,0.02356262505054474,0,-0.0022440594621002674,-0.030855817720294,0,0.14810793101787567,0.009537252597510815,0,-0.0022440594621002674,-0.012342327274382114,0,0,0.04095408692955971,0,-0.004488118924200535,-0.02300160937011242,0,0.02468465454876423,0.012342327274382114,0,-0.02468465454876423,-0.01683044619858265,0,0.013464356772601604,0.05385742709040642,0,-0.0022440594621002674,-0.10603181272745132,0,0.006732178386300802,0.0785420835018158,0,-0.09649455547332764,-0.01795247569680214,0,0.0022440594621002674,0.0011220297310501337,0,-0.02692871354520321,-0.0016830445965752006,0,0.01570841670036316,0.0022440594621002674,0,-0.02019653469324112,-0.06619975715875626,0,0.01795247569680214,0.01178131252527237,0,-0.02917277254164219,-0.011220297776162624,0,0.004488118924200535,0.06676077097654343,0,-0.00897623784840107,-0.01290334202349186,0,0.0022440594621002674,0.00392710417509079,0,-0.011220297776162624,-0.02692871354520321,0,0.03814901039004326,0.04432017356157303,0,-0.013464356772601604,-0.11556906253099442,0,0.004488118924200535,0.04936930909752846,0,-0.0336608923971653,-0.014586386270821095,0,0.004488118924200535,0.02019653469324112,0,-0.4712525010108948,-0.01851349137723446,0,0.004488118924200535,0.005610148888081312,0,-0.04712525010108948,-0.02692871354520321,0,0.013464356772601604,0.006732178386300802,0,0,-0.02187957987189293,0,0.00897623784840107,0.02468465454876423,0,-0.01570841670036316,-0.04656423255801201,0,0.123423270881176,0.07405396550893784,0,-0.0022440594621002674,-0.01683044619858265,0,0.04712525010108948,0.0016830445965752006,0,-0.0022440594621002674,-0.005610148888081312,0,0.004488118924200535,0.02412363886833191,0,-0.011220297776162624,-0.02019653469324112,0,0.17054852843284607,0.01009826734662056,0,-0.006732178386300802,-0.0022440594621002674,0,0.006732178386300802,0.02131856605410576,0,-0.004488118924200535,-0.05890656262636185,0,0.02468465454876423,0.0011220297310501337,0,-0.00897623784840107,-0.02019653469324112,0,0.006732178386300802,0.0336608923971653,0,-0.006732178386300802,-0.05834554508328438,0,0.05161336809396744,0.01178131252527237,0,-0.179524764418602,-0.02187957987189293,0,0.006732178386300802,0.002805074444040656,0,-0.01570841670036316,-0.00504913367331028,0,0.013464356772601604,0.0016830445965752006,0,-0.03141683340072632,-0.03814901039004326,0,0.006732178386300802,0.02468465454876423,0,-0.006732178386300802,-0.009537252597510815,0,0.02019653469324112,0.003366089193150401,0,-0.01795247569680214,-0.01963552087545395,0,0,0.00392710417509079,0,-0.06058960780501366,-0.2373092919588089,0,0.011220297776162624,0.00392710417509079,0,-0.04039306938648224,-0.07966411113739014,0],"text":"10 rem test match by rob vonk 2022\r\n20 rem based on board game of same name by john sands 1955\r\n30 rem https://boardgamegeek.com/boardgame/18657/\r\n40 rem six ball overs used instead of original eight\r\n50 rem bowler spinner\r\n60 data full toss,googly,leg break,googly,short length,off break,full toss\r\n70 rem batter spinner\r\n80 data no ball,bumper,short length,leg break,1,2,lbw,3,5,4,bowled,4,caught,6,3\r\n90 dim d$(11),b$(11),t$(2),r(2,2):poke 53280,5:poke 53281,5:poke 646,1\r\n100 z=rnd(-ti):for i=1 to 11:read d$(i):next i:for i=1 to 11:read b$(i):next i\r\n110 print\"{clear}\":print\"this game is called 'test match'.\"\r\n120 print:print\"the bowler will reveal the type of\"\r\n130 print\"ball being bowled. the batter's score\"\r\n140 print\"will then appear, unless 'caught',\"\r\n150 print\"'bowled' or 'lbw' are given.\"\r\n160 print:print\"the batter continues to bat until out,\"\r\n170 print\"when the second batter goes in. when\"\r\n180 print\"the 10th wicket has fallen the first\"\r\n190 print\"innings is finished, then the players\"\r\n200 print\"change over.\"\r\n210 print:print\"after two innings each a match is\"\r\n220 print\"finished.\"\r\n230 print:print\"when a batter plays a 'no ball' the\"\r\n240 print\"batter is entitled to any score made\"\r\n250 print\"and cannot be dismissed by 'caught',\"\r\n260 print\"'bowled' or 'lbw'.\"\r\n270 print:print\"hit a key.\"\r\n280 get i$:if i$<>\"\" then 280\r\n290 get i$:if i$=\"\" then 290\r\n300 print\"{clear}\":input\"enter your team\";t$(2)\r\n310 t$(1)=\"computer xi\":print:print\"you will be playing against my team,\"\r\n320 print t$(1);\".\":print:print\"now for the toss of the coin. you have\"\r\n330 print\"the call. (h)eads or (t)ails\";\r\n340 input i$:if i$<>\"h\" and i$<>\"t\" then print:print\"h/t please.\":goto 340\r\n350 if i$=\"h\" then i$=\"heads\":goto 370\r\n360 i$=\"tails\"\r\n370 print:print i$;\" is the call...\";:c=rnd(1):c$=\"heads\":if c>.5 then c$=\"tails\"\r\n380 for i=1 to 1000:next i:print\"and \";c$;\" it is.\":t=1:if i$=c$ then t=2\r\n390 if i$=c$ then 440\r\n400 rem captains have statistically been 64% likely to bat first in test\r\n410 rem matches played since 1980, hence the .64\r\n420 print:print\"i win the toss.\":r=rnd(1):b$=\"bat\":t=1:if r>.64 then b$=\"bowl\":t=2\r\n430 print:print\"my team will \";b$;\" first.\":goto 490\r\n440 print:print\"you win the toss. do you want to bat\"\r\n450 print\"first (y/n)\";\r\n460 input i$:if i$<>\"y\" and i$<>\"n\" then print:print\"y/n please.\":goto 460\r\n470 b$=\"bat\":t=2:if i$=\"n\" then b$=\"bowl\":t=1\r\n480 print:print\"your team will \";b$;\" first.\"\r\n490 print:print\"hit a key to begin the match.\"\r\n500 get i$:if i$<>\"\" then 500\r\n510 get i$:if i$=\"\" then 510\r\n520 rem randomise bowler and batter spinners\r\n530 d=int(rnd(1)*11+1):b=int(rnd(1)*11+1)\r\n540 r(1,1)=0:r(1,2)=0:r(2,1)=0:r(2,2)=0:in=1\r\n550 r=0:w=0:n=0\r\n560 print\"{clear}\":print t$(t);\" are\";r;\"for\";w:if tg>0 then print:print\"target\";tg\r\n570 print:print tab(13);\"1st inns\";tab(23);\"2nd inns\"\r\n580 print t$(1);:if r(1,1)>0 then print tab(13);r(1,1);\r\n590 if r(1,2)>0 then print tab(23);r(1,2);\r\n600 print:print t$(2);:if r(2,1)>0 then print tab(13);r(2,1);\r\n610 if r(2,2)>0 then print tab(23);r(2,2);\r\n620 if t=2 then 670\r\n630 print:print:print\"hit a key to bowl.\"\r\n640 get i$:if i$<>\"\" then 640\r\n650 get i$:if i$=\"\" then 650\r\n660 print:print\"you bowl \";:goto 690\r\n670 print:print:print\"my bowler comes in to bowl...\":for i=1 to 1000:next i\r\n680 print:print\"it is \";\r\n690 n=n+1:d=d+n:if d>11 then d=d-11\r\n700 if d=6 then print\"an \";:goto 720\r\n710 print\"a \";\r\n720 print d$(d);\".\":if t=1 then 770\r\n730 print:print\"hit a key to play a shot.\"\r\n740 get i$:if i$<>\"\" then 740\r\n750 get i$:if i$=\"\" then 750\r\n760 goto 780\r\n770 print:print\"my batter plays a shot...\":for i=1 to 1000:next i\r\n780 if d=1 or d=7 then e=7\r\n790 if d=2 or d=4 then e=4\r\n800 if d=3 or d=11 then e=1\r\n810 if d=5 or d=10 then e=6\r\n820 if d=6 then e=3\r\n830 if d=8 then e=5\r\n840 if d=9 then e=2\r\n850 b=b+e:if b>11 then b=b-11\r\n860 if val(b$(b))>0 and t=1 then print:print\"my batter scores \";:goto 890\r\n870 if val(b$(b))>0 and t=2 then print:print\"your batter scores \";\r\n880 if val(b$(b))=0 then print\r\n890 print b$(b);:if val(b$(b))=1 then print\" run.\":goto 920\r\n900 if val(b$(b))>1 then print\" runs.\":goto 920\r\n910 print\".\"\r\n920 if (b=3 or b=7 or b=9) and d<>8 then 950\r\n930 r=r+val(b$(b))\r\n940 goto 960\r\n950 print:print t$(t);\" lose a wicket!\":w=w+1:if w=10 then 990\r\n960 print:print t$(t);\" are now\";r;\"for\";w:if n=6 then n=0\r\n970 if tg>0 and r>tg then 1000\r\n980 for i=1 to 2000:next i:goto 560\r\n990 print:print t$(t);\" are all out for\";r;\"runs.\"\r\n1000 r(t,in)=r:f=0:for i=1 to 2:for j=1 to 2:if r(i,j)>0 then f=f+1\r\n1010 next j:next i:if f=4 then 1100:rem match over\r\n1020 if f=3 and r(t,1)+r(t,2)<r(3-t,1) then f=5:goto 1100:rem innings defeat\r\n1030 if f<3 then 1050\r\n1040 tg=r(t,1)+r(t,2)-r(3-t,1)+1:print:print t$(3-t);\" need\";tg;\"to win.\"\r\n1050 t=3-t:if f=2 then in=in+1\r\n1060 print:print\"hit a key to continue.\"\r\n1070 get i$:if i$<>\"\" then 1070\r\n1080 get i$:if i$=\"\" then 1080\r\n1090 goto 550\r\n1100 if f<5 then 1150\r\n1110 print:print t$(3-t);\" win by an innings\"\r\n1120 print\"and\";r(3-t,1)-r(t,1)-r(t,2);\"run\";\r\n1130 if r(3-t,1)-r(t,1)-r(t,2)>1 then print\"s\";\r\n1140 print\"!\":end\r\n1150 if r(t,2)=tg then print:print\"it's a tie!\":end\r\n1160 if r(t,2)<tg then 1190\r\n1170 print:print t$(t);\" win by\";10-w;\"wicket\";:if w>1 then print\"s\";\r\n1180 print\"!\":end\r\n1190 print:print t$(3-t);\" win by\";tg+1-r(t,2);\"run\";:if tg+1-r(t,2)>1 then print\"s\";\r\n1200 print\"!\"","sourcePath":"external/github.com/robfromoz_C64-BASIC/test match.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/test%20match.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/robfromoz_C64-BASIC/wilson's maze.txt","language":"basic","vector":[0.003633672371506691,0.04178723320364952,0,0,-0.008175763301551342,0,0.07267344743013382,0.011809435673058033,0,-0.0799407958984375,-0.023618871346116066,0,0.003633672371506691,0.0027252542786300182,0,-0.021802034229040146,-0.023618871346116066,0,0.21438667178153992,0.02452728897333145,0,-0.061772432178258896,-0.006358926650136709,0,0,0.07630711793899536,0,-0.003633672371506691,-0.008175763301551342,0,0.007267344743013382,0.07449028640985489,0,0,-0.010901017114520073,0,0.014534689486026764,0.006358926650136709,0,-0.003633672371506691,-0.0018168361857533455,0,0.03270305320620537,0.009992599487304688,0,0,-0.007267344743013382,0,0,0.007267344743013382,0,-0.007267344743013382,-0.0009084180928766727,0,0.10537649691104889,0.026344124227762222,0,0,-0.11264384537935257,0,0.010901017114520073,0.026344124227762222,0,-0.018168361857533455,-0.0054505085572600365,0,0.014534689486026764,0.006358926650136709,0,-0.03997039794921875,-0.03815355896949768,0,0.007267344743013382,0.0027252542786300182,0,-0.003633672371506691,-0.003633672371506691,0,0.04723774269223213,0.03633672371506691,0,-0.050871413201093674,0,0,0.021802034229040146,0.0009084180928766727,0,-0.24708972871303558,-0.014534689486026764,0,0.003633672371506691,0.013626271858811378,0,-0.003633672371506691,-0.014534689486026764,0,0.003633672371506691,0.0027252542786300182,0,-0.003633672371506691,-0.0009084180928766727,0,0.21438667178153992,0.03997039794921875,0,-0.003633672371506691,-0.056321922689676285,0,0,0.008175763301551342,0,-0.018168361857533455,-0.015443108044564724,0,0,0.10901017487049103,0,-0.010901017114520073,-0.03270305320620537,0,0,0.0054505085572600365,0,-0.04360406845808029,-0.012717853300273418,0,0.010901017114520073,0.004542090464383364,0,-0.2398223727941513,-0.0018168361857533455,0,0.03633672371506691,0.014534689486026764,0,-0.159881591796875,-0.0027252542786300182,0,0.014534689486026764,0.018168361857533455,0,0,-0.0009084180928766727,0,0.003633672371506691,0.003633672371506691,0,-0.13807955384254456,-0.007267344743013382,0,0.029069378972053528,0.05359666794538498,0,0,-0.0009084180928766727,0,0.029069378972053528,0.008175763301551342,0,-0.010901017114520073,-0.009084180928766727,0,0.22528769075870514,0.009084180928766727,0,-0.007267344743013382,-0.019985198974609375,0,0.003633672371506691,0.015443108044564724,0,-0.34883254766464233,-0.05723034217953682,0,0.15261423587799072,0.03633672371506691,0,-0.018168361857533455,-0.025435706600546837,0,0.003633672371506691,0.013626271858811378,0,-0.007267344743013382,-0.13717113435268402,0,0.003633672371506691,0.0027252542786300182,0,-0.0799407958984375,-0.003633672371506691,0,0.03997039794921875,0.019985198974609375,0,-0.018168361857533455,-0.0018168361857533455,0,0.2906937897205353,0.10719333589076996,0,-0.025435706600546837,-0.004542090464383364,0,0.26889175176620483,0.004542090464383364,0,-0.014534689486026764,-0.014534689486026764,0,0.018168361857533455,0.0009084180928766727,0,0,-0.0054505085572600365,0,0.018168361857533455,0.018168361857533455,0,-0.029069378972053528,-0.04178723320364952,0,0.014534689486026764,0.006358926650136709,0,-0.003633672371506691,-0.12536169588565826,0,0.010901017114520073,0.07176502794027328,0,-0.007267344743013382,-0.0953838974237442,0,0.003633672371506691,0.007267344743013382,0,-0.021802034229040146,-0.0009084180928766727,0,0.003633672371506691,0.003633672371506691,0,-0.04360406845808029,-0.06903977692127228,0,0.003633672371506691,0.018168361857533455,0,0,-0.0009084180928766727,0,0,0.02271045185625553,0,0,-0.0054505085572600365,0,0.003633672371506691,0.11264384537935257,0,-0.03633672371506691,-0.0054505085572600365,0,0.018168361857533455,0.028160961344838142,0,-0.014534689486026764,-0.17441627383232117,0,0.003633672371506691,0.07903237640857697,0,-0.003633672371506691,-0.013626271858811378,0,0.014534689486026764,0.0054505085572600365,0,-0.06540610641241074,-0.013626271858811378,0,0.025435706600546837,0.003633672371506691,0,-0.018168361857533455,-0.040878813713788986,0,0.007267344743013382,0.03179463371634483,0,-0.007267344743013382,-0.021802034229040146,0,0.021802034229040146,0.15079741179943085,0,-0.04360406845808029,-0.07449028640985489,0,0.003633672371506691,0.13535429537296295,0,-0.007267344743013382,-0.008175763301551342,0,0.029069378972053528,0.009992599487304688,0,-0.003633672371506691,-0.0009084180928766727,0,0.007267344743013382,0.06268084794282913,0,-0.003633672371506691,-0.015443108044564724,0,0.014534689486026764,0.007267344743013382,0,-0.014534689486026764,-0.006358926650136709,0,0.003633672371506691,0.0054505085572600365,0,-0.003633672371506691,-0.006358926650136709,0,0.010901017114520073,0.0018168361857533455,0,0,-0.021802034229040146,0,0.007267344743013382,0.004542090464383364,0,0,-0.08175762742757797,0,0.04723774269223213,0.010901017114520073,0,-0.221654012799263,-0.03997039794921875,0,0.050871413201093674,0.003633672371506691,0,0,0,0,0.010901017114520073,0.0027252542786300182,0,-0.054505087435245514,-0.052688248455524445,0,0.003633672371506691,0.016351526603102684,0,-0.007267344743013382,-0.007267344743013382,0,0.07267344743013382,0.009084180928766727,0,0,-0.004542090464383364,0,0,0.06358926743268967,0,-0.010901017114520073,-0.03451988846063614,0,0.018168361857533455,0.013626271858811378,0,-0.021802034229040146,-0.09629231691360474,0],"text":"10 rem wilson's maze algorithm by rob vonk 2023\r\n20 rem from \"mazes for programmers\" by jamis buck, 2015, pages 60-63\r\n30 rem randomise, set maximum dimensions of maze and set count of unvisited\r\n40 rem cells to zero. mx and my must both be odd or maze won't display properly\r\n50 rem works better with mx<=21 and my<=39\r\n60 rem warning: this algorithm is slow!\r\n70 z=rnd(-ti):c=0:mx=39:my=21:dim m$(my,mx),m(my,mx),d(my,mx)\r\n80 rem create grid with cell spaces surrounded by # fences, and count each\r\n90 rem unvisited cell as we go\r\n100 for i=1 to my:if i/2=int(i/2) then 120\r\n110 for j=1 to mx:m$(i,j)=\"#\":next j:goto 160\r\n120 for j=1 to mx:if j/2=int(j/2) then m$(i,j)=\" \":m(i,j)=0:c=c+1:goto 140\r\n130 m$(i,j)=\"#\"\r\n140 next j\r\n150 rem select a random cell and set it to visited\r\n160 next i:x=int(rnd(1)*(((mx-1)-2)/2+1))*2+2:y=int(rnd(1)*(((my-1)-2)/2+1))*2+2\r\n170 m(y,x)=1:c=c-1\r\n180 rem if unvisited cell count is zero, display maze\r\n190 if c=0 then 820\r\n200 rem select another random cell to start our random walk from\r\n210 sx=int(rnd(1)*(((mx-1)-2)/2+1))*2+2:sy=int(rnd(1)*(((my-1)-2)/2+1))*2+2\r\n220 if m(sy,sx)<>0 then 210\r\n230 x=sx:y=sy\r\n240 m(y,x)=-1\r\n250 rem set random direction north = 1, east = 2, south = 3, west = 4\r\n260 on int(rnd(1)*4+1) goto 280,360,440,520\r\n270 rem if at very top try new direction\r\n280 if y=2 then 260\r\n290 rem if intersected with path, go to loop-erase routine\r\n300 d(y,x)=1:y=y-2:if m(y,x)=-1 then 610\r\n310 rem if intersected with maze, go to maze-carving routine\r\n320 if m(y,x)=1 then 720\r\n330 rem add current cell to walk\r\n340 m(y,x)=-1:goto 260\r\n350 rem if at far right try new direction\r\n360 if x=mx-1 then 260\r\n370 rem if intersected with path, go to loop-erase routine\r\n380 d(y,x)=2:x=x+2:if m(y,x)=-1 then 610\r\n390 rem if intersected with maze, go to maze-carving routine\r\n400 if m(y,x)=1 then 720\r\n410 rem add current cell to walk\r\n420 m(y,x)=-1:goto 260\r\n430 rem if at very bottom try new direction\r\n440 if y=my-1 then 260\r\n450 rem if intersected with path, go to loop-erase routine\r\n460 d(y,x)=3:y=y+2:if m(y,x)=-1 then 610\r\n470 rem if intersected with maze, go to maze-carving routine\r\n480 if m(y,x)=1 then 720\r\n490 rem add current cell to walk\r\n500 m(y,x)=-1:goto 260\r\n510 rem if at far left try new direction\r\n520 if x=2 then 260\r\n530 rem if intersected with path, go to loop-erase routine\r\n540 d(y,x)=4:x=x-2:if m(y,x)=-1 then 610\r\n550 rem if intersected with maze, go to maze-carving routine\r\n560 if m(y,x)=1 then 720\r\n570 rem add current cell to walk\r\n580 m(y,x)=-1:goto 260\r\n590 rem loop-erase routine\r\n600 rem start at where the walk intersects with itself\r\n610 cx=x:cy=y\r\n620 rem follow directions of walk\r\n630 if d(y,x)=1 then y=y-2:goto 680\r\n640 if d(y,x)=2 then x=x+2:goto 680\r\n650 if d(y,x)=3 then y=y+2:goto 680\r\n660 x=x-2\r\n670 rem remove cell from walk\r\n680 m(y,x)=0:if x=cx and y=cy then 240\r\n690 goto 630\r\n700 rem maze-carving routine\r\n710 rem go back to beginning of walk\r\n720 cx=x:cy=y:x=sx:y=sy\r\n730 m(y,x)=1:if x=cx and y=cy then 190\r\n740 rem follow the path removing walls between cells as we go\r\n750 if d(y,x)=1 then m$(y-1,x)=\" \":y=y-2:goto 800\r\n760 if d(y,x)=2 then m$(y,x+1)=\" \":x=x+2:goto 800\r\n770 if d(y,x)=3 then m$(y+1,x)=\" \":y=y+2:goto 800\r\n780 m$(y,x-1)=\" \":x=x-2\r\n790 rem decrement number of unvisited cells\r\n800 c=c-1:goto 730\r\n810 rem display maze\r\n820 print\"{clear}{white}\":poke 53280,0:poke 53281,0\r\n830 for i=1 to my:for j=1 to mx:print m$(i,j);:next j:print:next i","sourcePath":"external/github.com/robfromoz_C64-BASIC/wilson's maze.txt","sourceMtimeMs":1751169963000,"sourceUrl":"https://github.com/robfromoz/C64-BASIC/blob/master/wilson's%20maze.txt","sourceRepoUrl":"https://github.com/robfromoz/C64-BASIC","license":"UNKNOWN","attribution":"Source: robfromoz/C64-BASIC (License unknown)"},{"name":"github.com/spiroharvey_c64/MadMagazine/mad.txt","language":"basic","vector":[0.0007115484913811088,0.007204428315162659,0,-0.0003557742456905544,-0.0003557742456905544,0,0.0021346453577280045,0.0032019682694226503,0,-0.0014230969827622175,-0.00569238793104887,0,0.0024904196616262197,0.001689927652478218,0,-0.011029001325368881,-0.007293371949344873,0,0.024904197081923485,0.008093863725662231,0,-0.016721390187740326,-0.0032909116707742214,0,0.0014230969827622175,0.0058702751994132996,0,-0.0010673226788640022,-0.010940058156847954,0,0.0010673226788640022,0.19202914834022522,0,-0.0007115484913811088,-0.0037356296088546515,0,0.010317453183233738,0.0009783791610971093,0,-0.012452098540961742,-0.007382315583527088,0,0.00569238793104887,0.0000889435614226386,0,-0.02241377718746662,-0.011651606298983097,0,0.002846193965524435,0.012363155372440815,0,-0.035933200269937515,-0.0006226049154065549,0,0.021702228114008904,0.008716468699276447,0,-0.016009841114282608,-0.009072243236005306,0,0.0049808393232524395,0.0008894355851225555,0,-0.012096324004232883,-0.005959218367934227,0,0.0032019682694226503,0.0008894355851225555,0,-0.0032019682694226503,-0.020457018166780472,0,0.01565406657755375,0.0021346453577280045,0,-0.0003557742456905544,-0.025526801124215126,0,0.0014230969827622175,0.0010673226788640022,0,-0.016721390187740326,-0.0006226049154065549,0,0.012096324004232883,0.005959218367934227,0,-0.010317453183233738,-0.010851114057004452,0,0,0.005069782957434654,0,-0.012452098540961742,-0.011117945425212383,0,0.006403936538845301,0.0061371056362986565,0,-0.001778871170245111,-0.0015120405005291104,0,0.4208809435367584,0.0010673226788640022,0,-0.006403936538845301,-0.0015120405005291104,0,0.001778871170245111,0.001778871170245111,0,-0.002846193965524435,-0.009516960941255093,0,0.017077162861824036,0.013875195756554604,0,-0.019923357293009758,-0.00844963826239109,0,0,0.002223588991910219,0,-0.008538581430912018,-0.0015120405005291104,0,0.017788711935281754,0.0007115484913811088,0,-0.013519421219825745,-0.002846193965524435,0,0.009961678646504879,0.008983300067484379,0,-0.011029001325368881,-0.006670766975730658,0,0.0010673226788640022,0.004714008886367083,0,-0.002846193965524435,-0.015120405703783035,0,0.009250130504369736,0.004002460278570652,0,-0.017788711935281754,-0.018411317840218544,0,0.047317974269390106,0.011295832693576813,0,-0.003557742340490222,-0.010139565914869308,0,0.01885603554546833,0.0024904196616262197,0,-0.0024904196616262197,-0.010228509083390236,0,0.0010673226788640022,0.0049808393232524395,0,-0.014586743898689747,-0.001689927652478218,0,0.002846193965524435,0.011918436735868454,0,-0.01885603554546833,-0.0038245730102062225,0,0.017432937398552895,0.001156266313046217,0,-0.0007115484913811088,-0.010940058156847954,0,0.0007115484913811088,0.006403936538845301,0,-0.014942518435418606,-0.010584283620119095,0,0.0053366138599812984,0.0006226049154065549,0,-0.009250130504369736,-0.018678147345781326,0,0.001778871170245111,0.0036466859746724367,0,-0.009605905041098595,-0.0010673226788640022,0,0.008538581430912018,0.21221934258937836,0,-0.012452098540961742,-0.007115484680980444,0,0.7474817037582397,0.003379855304956436,0,-0.01138477586209774,-0.0016009841347113252,0,0.0003557742456905544,0.008716468699276447,0,-0.012452098540961742,-0.010050622746348381,0,0.0003557742456905544,0.0005336613394320011,0,-0.013163646683096886,-0.004625065252184868,0,0.02241377718746662,0.009516960941255093,0,-0.001778871170245111,-0.009516960941255093,0,0.0021346453577280045,0.01120688859373331,0,-0.007115484680980444,-0.009694848209619522,0,0,0.0008894355851225555,0,-0.0032019682694226503,-0.001689927652478218,0,0.0007115484913811088,0.004891895689070225,0,-0.03842362016439438,-0.009072243236005306,0,0.003557742340490222,0.026238350197672844,0,-0.0024904196616262197,-0.004891895689070225,0,0.0007115484913811088,0.010851114057004452,0,-0.0010673226788640022,-0.006848654244095087,0,0.009605905041098595,0.0012452098308131099,0,-0.012096324004232883,-0.01627667248249054,0,0.0003557742456905544,0.006848654244095087,0,-0.0430486835539341,-0.013430478051304817,0,0.02312532626092434,0.009961678646504879,0,-0.0053366138599812984,-0.003379855304956436,0,0,0.001156266313046217,0,-0.0032019682694226503,-0.008271750994026661,0,0.0021346453577280045,0.006581823341548443,0,-0.016009841114282608,-0.004714008886367083,0,0.00569238793104887,0.0012452098308131099,0,-0.0003557742456905544,-0.008983300067484379,0,0.006048162002116442,0.007293371949344873,0,-0.003913516644388437,-0.00880541279911995,0,0.0007115484913811088,0.3737408518791199,0,-0.009961678646504879,-0.00880541279911995,0,0.01529829204082489,0.001778871170245111,0,-0.001778871170245111,-0.006670766975730658,0,0.007471259217709303,0.10539811849594116,0,-0.01565406657755375,-0.008182807825505733,0,0.010317453183233738,0.011651606298983097,0,-0.001778871170245111,-0.0016009841347113252,0,0.001778871170245111,0.0053366138599812984,0,-0.008538581430912018,-0.008538581430912018,0,0,0,0,-0.016721390187740326,-0.0037356296088546515,0,0.013519421219825745,0.004802952520549297,0,-0.0003557742456905544,-0.022591665387153625,0,0.016365615651011467,0.004269290715456009,0,-0.014586743898689747,-0.004002460278570652,0,0.001778871170245111,0.0006226049154065549,0,-0.010317453183233738,-0.0012452098308131099,0,0.0014230969827622175,0.007115484680980444,0,-0.021702228114008904,-0.010495340451598167,0,0.0024904196616262197,0.012007380835711956,0,-0.04980839416384697,-0.02241377718746662,0,0.001778871170245111,0.01627667248249054,0,-0.0007115484913811088,-0.0032909116707742214,0,0.007115484680980444,0.00026683066971600056,0,-0.01565406657755375,-0.005247670225799084,0,0.009961678646504879,0.001778871170245111,0,-0.0007115484913811088,-0.0127189289778471,0],"text":"; Coding with Culp tweeted images of Oct 1985 Mad Magazine,\n; which had a type-in program for 8bit Apple, Atari, and\n; Commodore micros.\n;\n; Lines 500-1790 are common across all platforms, so you can\n; copy and paste them into your own.\n;\n; If you find errors, let me know and I'll update the text.\n;\n; Coding with Culp's tweet: https://twitter.com/dwculp/status/1480531197335945221\n;\n; My Twitter: https://twitter.com/spiroharvey\n;\n; The code below is for the C64.\n; I entered it into VICE emulator and then used VICE's\n; 'petcat' command to export the code into detokenised ASCII\n;\n; mad-01.png and mad-02.png are my output images.\n; It took a loooooooong time to run, even in VICE's Warp mode.\n; So either the image is a joke from Mad Magazine, or I've goto\n; some mistakes in the data. :)\n;\n\n;mad--- ==0801==\n   10 v=53248 :sa=24576 :poke 53280,15\n   15 si=1.2 :xc=160 :yc=110\n   20 poke 56576,(peek(56576) and 252)+2\n   30 poke v+17,59 :poke v+24,24\n   40 for i=17408 to 18407 :poke i,47 :next\n   50 for i=24576 to 32767 :poke i,0 :next\n   60 read x1,y1,x2,y2\n   70 if x1=999 then 120\n   80 fx=x1*si+xc :lx=x2*si+xc\n   85 fy=199-(y1+yc) :ly=199-(y2-yc)\n   90 fx=int(fx+0.5) : lx=int(lx+0.5) :gosub 250\n  100 fx=fx+1 :lx=lx+1 :gosub 250\n  110 goto 60\n  120 for i=0 to 119 :read b :poke 32040+i,b :next\n  130 poke 198,0 :poke 197,64 :if peek(197)=64 then 130\n  140 poke 56576,peek(56576) or 255\n  160 poke v+17,27 :poke v+24,21\n  170 print\"{clr}\" :poke 214,9 :print :poke 211,3\n  180 print\"copyright 1985 e.c. publications\"\n  190 poke 198,0 :poke 197,64 :if peek(197)=64 then 190\n  195 print\"{clr}\"\n  200 end\n  210 yo=320*int(yp/8)+(yp and 7) :xo=8*int(xp/8)\n  220 bv=2^((7-xp) and 7) :sm=sa+yo+xo\n  230 poke sm,(peek(sm) or bv)\n  240 return\n  250 dx=lx-fx :dy=ly-fy\n  260 xp=fx :rx=fx :yp=fy :ry=fy :gosub 210\n  270 if abs(dy) > abs(dx) then 330\n  280 if dx=0 then return\n  290 xi=dx/abs(dx) :yi=dy/abs(dx)\n  300 xp=xp+xi :ry=ry+yi :yp=int(ry+0.5) :gosub 210\n  310 if xp=lx then return\n  320 goto 300\n  330 xi=dx/abs(dy) :yi=dy/abs(dy)\n  340 rx=rx+xi :xp=int(rx+0.5) :yp=yp+yi :gosub 210\n  350 if yp=ly then return\n  360 goto 340\n  500 data -27,-11,-23,-6,-28,-13,-22,-6,-20,-5,-12,-5,-27,-14,-26,-13\n  510 data -38,-29,-42,-28,-40,-28,-50,-16,-8,13,0,13,-29,4,-29,9\n  520 data -50,-17,-41,-28,-49,-17,-50,-8,-8,12,0,12,-28,5,-28,13\n  530 data -50,-15,-49,-10,40,-26,42,-17,-4,9,-21,14,5,48,2,44\n  540 data -53,-39,-45,-48,-55,-23,-55,-28,-61,-23,-58,-22,-42,-39,-43,-39\n  550 data 36,-52,36,-55,-37,-48,-32,-56,-32,-56,-26,-60,9,-74,33,-55\n  560 data 6,-12,12,-11,14,-8,24,-11,6,-13,10,-11,20,-9,10,-8\n  570 data -23,-15,-24,-19,-26,-18,-22,-15,-25,-18,-22,-19,-23,-18,-21,-16\n  580 data -49,2,-43,10,38,-11,43,-15,7,14,7,9,-9,13,-6,8\n  590 data -5,-33,-4,-33,-6,-36,-6,-36,-5,-32,-5,-32,-7,-29,-7,-29\n  600 data -39,-32,-38,-41,-62,-25,-54,-39,-50,-29,-50,-35,-54,-33,-57,-24\n  610 data -38,-34,-39,-39,-51,-19,-60,-22,-57,-25,-50,-24,-48,-25,-46,-38\n  620 data -42,-24,-42,-19,41,-26,43,-14,-3,7,-19,14,8,48,4,42\n  630 data 27,-38,31,-47,-29,-42,-16,-37,-11,-51,10,-48,26,-38,24,-47\n  640 data -4,-73,14,-71,-3,-74,5,-74,5,-73,12,-72,8,-72,35,-57\n  650 data -2,-48,5,-54,-15,-36,-20,-42,17,-34,32,-45,-6,-53,6,-48\n  660 data 40,-51,38,-43,39,-45,38,-50,38,-46,37,-53,37,-47,37,-46\n  670 data 15,-25,18,-24,23,-18,23,-20,12,-19,19,-18\n  680 data 8,-50,20,-49,-12,-53,-3,-62,-5,-49,14,-49,4,-62,16,-53\n  690 data -41,-19,-41,-27,44,-14,43,-20,-22,13,-22,14,8,46,2,42\n  700 data -40,-23,-39,-28,42,-26,50,-19,-23,14,-24,5,3,41,2,48\n  710 data -51,-42,-39,-49,-47,-26,-49,-36,-53,-18,-59,-21,-45,-28,-53,-23\n  720 data -40,-19,-37,-7,50,-18,50,-13,-25,5,-26,14,1,41,9,40\n  730 data -22,-9,-19,-6,-21,-9,-18,-6,-21,-6,-11,-9,-19,-8,-16,-8\n  740 data -57,-26,-57,-28,-37,-41,-37,-37,-59,-31,-50,-40,-39,-36,-36,-40\n  750 data -5,-28,-6,-30,-6,-28,-7,-30,6,-28,5,-30,6,-29,6,-31\n  760 data 6,-37,9,-36,-12,-38,-2,-39,-6,-33,-2,-35,-13,-35,-8,-39\n  770 data -20,-18,-17,-17,-14,-18,-15,-17,-17,-18,-16,-18,-20,-17,-14,-17\n  780 data -39,-17,-35,-6,51,-14,48,-12,-24,8,-23,13,1,40,12,39\n  790 data -36,-6,-36,-1,41,-14,40,-9,-23,8,-24,11,14,39,19,40\n  800 data -26,34,-32,37,-32,37,-29,32,-29,32,-30,36,-29,32,-39,34\n  810 data -35,-5,-35,-1,40,-13,41,-12,-26,7,-27,14,21,39,11,38\n  820 data -61,-29,-56,-37,-47,-35,-42,-36,-49,-39,-45,-42,-61,-24,-59,-35\n  830 data 60,-24,55,-20,60,-23,61,-32,61,-29,61,-24,60,-29,59,-33\n  840 data 17,-53,5,-62,6,-48,17,-50,8,-48,2,-54,-28,-41,-18,-48\n  850 data -14,-52,-4,-62,-5,-51,9,-51,-27,-43,-28,-47,-5,-62,8,-59\n  860 data -46,14,-42,18,-45,25,-45,15,-42,18,-42,11,-43,11,-51,0\n  870 data 15,-19,18,-16,14,-16,18,-19,7,-18,8,-16,8,-17,11,-16\n  880 data 39,-42,38,-37,39,-40,40,-32,41,-33,40,-39,39,-34,39,-36\n  890 data 42,-40,43,-42,44,-42,45,-32,46,-36,45,-41,42,-38,43,-41\n  900 data 48,-11,47,7,41,-14,40,-9,15,37,15,36,17,36,19,36\n  910 data -49,-28,-48,-37,-61,-32,-62,-27,-55,-35,-43,-49,-46,-34,-42,-35\n  920 data -14,-65,-6,-71,14,-68,32,-57,18,-65,20,-63,14,-70,23,-65\n  930 data 31,-41,32,-43,3,-42,4,-43,-22,-43,-23,-42,-9,-52,-9,-52\n  940 data 30,-40,29,-45,14,-50,21,-48,-27,-46,-25,-46,-26,-47,-27,-47\n  950 data -10,-10,-11,-15,-9,-11,-10,-15,-10,-13,-8,-13,-11,-11,-8,-12\n  960 data 21,-38,29,-44,-7,-48,-3,-48,-27,-45,-21,-47,-12,-55,-6,-61\n  970 data 48,6,49,-11,39,-10,41,-5,18,35,22,35,19,34,23,34\n  980 data 51,-3,45,8,40,-5,38,-11,23,35,43,17,45,17,27,33\n  990 data 46,-40,46,-36,43,-38,43,-39,46,-30,52,-33,47,-30,52,-32\n 1000 data 57,-32,57,-27,44,-25,49,-21\n 1010 data 7,-13,9,-8,10,-8,8,-12,23,-9,12,-7,11,-9,24,-10\n 1020 data 57,-25,53,-24,52,-25,56,-24,56,-32,55,-26,56,-27,56,-29,52,-24,57,-26\n 1030 data -13,-13,-26,-17,-12,-16,-10,-18,-15,-14,-11,-18,-21,-14,-17,-14\n 1040 data 18,-20,21,-17,12,-16,16,-19,8,-20,10,-19,13,-23,19,-23\n 1050 data -22,-22,-13,-21,-16,-22,-21,-23,-21,-21,-19,-23,-20,-21,-18,-21\n 1060 data 47,4,49,-3,41,-4,37,2,46,16,41,16,41,16,47,9\n 1070 data 37,4,41,-2,-49,-9,-48,-4,43,11,45,9,-2,11,1,11\n 1080 data -47,-4,-48,-9,-48,-3,-49,-1,2,11,8,8,4,11,9,9\n 1090 data 46,-32,48,-28,49,-38,49,-35,50,-37,51,-25,51,-37,52,-30\n 1100 data -56,-23,-57,-29,-60,-24,-60,-33,-54,-23,-46,-29,-46,-40,-44,-42\n 1110 data -44,-34,-45,-38,-44,-37,-42,-37,-44,-38,-42,-38,-48,-46,-42,-49\n 1120 data 21,-16,10,-18,22,-17,19,-25,20,-24,22,-19,10,-23,18,-25\n 1130 data -41,33,-35,34,-41,32,-38,32,-38,31,-42,31,-42,32,-45,30\n 1140 data -3,-36,-12,-37,7,-35,7,-35,-3,-37,-8,-36,-8,-38,-4,-38\n 1150 data 8,-18,9,-16\n 1160 data -35,-45,-29,-58,-36,-46,-35,-53,-38,-48,-26,-57,-35,-48,-30,-58\n 1170 data -34,-52,-25,-59,-32,-55,-25,-60,-34,-49,-14,-68,-36,-51,-22,-61\n 1180 data -49,-3,-46,5,10,9,4,15,3,15,6,10,6,11,6,14\n 1190 data 47,-22,52,-21,48,-21,56,-20,55,-21,48,-21,56,-20,59,-22\n 1200 data 24,-64,32,-60,30,-59,34,-57,33,-59,35,-52,35,-56,36,-49\n 1210 data 61,-32,42,-51,43,-51,51,-41,50,-41,45,-46,58,-37,54,-41\n 1220 data -39,30,-45,23,-38,30,-46,21,-46,24,-47,11,-46,12,-42,27\n 1230 data 7,-29,6,-31,13,-35,13,-35,4,-37,8,-35,5,-36,8,-37\n 1240 data -16,-49,-8,-50,9,-53,9,-49,20,-37,29,-39,-17,-39,-24,-41\n 1250 data 21,-36,32,-44,-2,-62,5,-61,9,-58,16,-53,-26,-44,-22,-46\n 1260 data -51,1,-43,12,7,14,15,13,13,11,17,8,20,10,27,4\n 1270 data -42,11,-49,2,8,13,19,12,19,11,10,12,22,9,27,5\n 1280 data -24,-56,-22,-59,-23,-58,-4,-74,-23,-56,-15,-67,-21,-57,-8,-72\n 1290 data -7,-73,-12,-69,-12,-68,-4,-71,-21,-58,-13,-68,-10,-71,8,-74\n 1300 data 12,-32,14,-35,13,-32,12,-37,14,-34,13,-37,11,-37,14,-36\n 1310 data -17,-6,-10,-8,-13,-9,-10,-6,-10,-7,-11,-6,-12,-6,-15,-6\n 1320 data 17,-35,21,-39,7,-62,14,-56,14,-51,-17,-48,4,-43,4,-47\n 1330 data -11,-12,-12,-14,-12,-13,-9,-15,-20,-16,-15,-16,-17,-16,-15,-16\n 1340 data -11,-22,-12,-24,-9,-22,-12,-23,-9,-20,-11,-24,-8,-20,-9,-23\n 1350 data -34,-2,-33,6,25,7,29,7,30,8,30,6,31,8,35,9\n 1360 data -33,3,-33,-1,33,8,36,8,36,7,36,2,35,4,35,7\n 1370 data -32,6,-31,11,-30,11,-29,4,3,48,-3,41,-5,41,2,48\n 1380 data -5,-59,-6,-62,12,-52,21,-47,-2,-54,-2,-53,-4,-60,3,-62\n 1390 data -44,-47,-41,-49,-54,-24,-56,-30,-36,-43,-37,-48,-47,-37,-49,-32\n 1400 data -40,-48,-45,-46,-38,-47,-35,-44,-58,-36,-51,-40,-58,-35,-48,-45\n 1410 data 24,-42,32,-42,-3,-61,-3,-61,-54,-19,-50,-18,-5,-72,9,-72\n 1420 data 10,-22,10,-22,19,-22,19,-22,13,-16,13,-16,9,-19,10,-20\n 1430 data -25,-42,-21,-41,2,-53,4,-54,29,-40,31,-46,26,-43,22,-48\n 1440 data 6,-10,18,-6,14,-6,21,-7,22,-8,6,-11\n 1450 data 1,-38,-14,-36,-13,-37,-11,-32,-14,-35,-12,-33\n 1460 data 55,-37,41,-51,46,-48,61,-33,41,-49,37,-48\n 1470 data -10,-21,-10,-24,-28,-14,-22,-7\n 1480 data -3,43,-26,35,-26,35,-5,41,-9,39,-20,36,-26,34,-26,37\n 1490 data -6,-58,1,-60,-24,-43,-21,-42,3,-45,3,-46,4,-52,4,-53\n 1500 data 72,73,72,63,71,74,70,78,71,62,70,58,69,57,65,53,70,78,65,83\n 1510 data 64,83,58,86,64,53,55,48,56,49,43,49,47,48,55,48,58,86,46,86\n 1520 data 42,84,46,85,44,50,39,52,42,50,39,51,41,85,40,85,39,86,33,86\n 1530 data 38,51,33,48,35,79,35,58,34,79,34,58,34,57,32,56,34,80,32,79\n 1540 data 32,85,30,83,31,83,31,80,30,82,30,79,31,55,29,55,33,49,23,49\n 1550 data 32,48,25,48,24,50,22,50,28,55,17,78,18,79,20,79,20,80,20,84\n 1560 data 21,51,18,48,19,50,17,48,16,48,14,48,17,49,14,49,19,85,11,86\n 1570 data 13,48,12,53,12,48,11,53,11,54,15,57,15,58,14,59,14,59,-1,59\n 1580 data 14,58,-2,58,10,85,7,83,6,84,1,86,0,86,-5,85,-6,84,-6,80,-7,83,-7,79\n 1590 data -5,79,-3,79,-2,78,-13,56,-14,56,-3,78,-2,59,-4,57,-4,56,-1,54\n 1600 data 0,55,1,55,1,54,1,50,0,50,-1,48,-2,48,-7,48,-2,49,-6,49,-6,48,-9,51\n 1610 data -7,48,-10,50,-11,49,-17,49,-12,48,-16,48,-17,48,-21,51,-18,48,-22,50\n 1620 data -15,55,-16,55,-17,56,-22,78,-21,79,-19,79,-19,80,-19,84,-23,49,-30,49\n 1630 data -24,48,-30,48,-31,48,-31,55,-32,54,-32,49,-30,55,-28,55\n 1640 data -20,85,-25,86,-26,85,-29,83,-28,55,-32,70,-28,55,-31,71\n 1650 data -28,83,-33,86,-34,86,-37,86,-32,70,-41,49,-38,85,-40,84\n 1660 data -40,83,-40,81,-41,83,-41,79,-40,80,-37,78,-37,78,-41,65\n 1670 data -42,65,-38,78,-43,64,-48,78,-47,79,-45,79,-45,80,-45,84\n 1680 data -46,85,-51,86,-42,49,-47,49,-42,48,-48,48,-48,48,-56,70\n 1690 data -48,49,-56,71,-56,71,-60,56,-52,85,-54,84,-55,83,-59,85\n 1700 data -60,86,-64,86,-59,55,-58,54,-57,54,-55,55,-55,54,-55,50\n 1710 data -56,50,-57,48,-57,49,-61,49,-58,48,-60,48,-61,48,-64,51\n 1720 data -62,48,-65,50,-65,85,-67,84,-67,83,-67,79,-68,83,-68,79,-66,79,-64,79\n 1730 data -63,78,-68,56,-69,55,-64,78,-66,49,-72,49,-68,48,-73,48\n 1740 data -69,55,-73,55,-73,55,-73,48,-74,49,-74,54\n 1750 data 61,71,61,65,60,73,60,63,59,73,59,72,60,65,58,60\n 1760 data 59,61,54,56,59,74,55,78,59,75,54,80,54,80,48,80\n 1770 data 46,79,55,79,54,56,48,56,47,57,46,57,47,78,46,78\n 1780 data 45,78,45,58,7,76,11,66,10,66,6,76,9,66,1,66,0,66,6,75\n 1790 data 999,0,0,0\n 1800 data 66,66,66,90,90,90,126,36,66,66,66,126,66,66,66,66\n 1810 data 24,36,66,126,66,66,66,66,254,16,16,16,16,16,16,16\n 1820 data 0,0,0,0,0,96,96,192,0,0,0,0,0,0,0,0\n 1830 data 36,126,90,90,90,66,66,66,126,64,64,124,64,64,64,126\n 1840 data 0,0,0,0,0,0,0,0,66,66,66,90,90,90,126,36\n 1850 data 24,36,102,66,66,102,36,24,124,70,66,70,124,72,68,66\n 1860 data 124,70,66,70,124,72,68,66,66,66,102,36,24,24,24,24\n 1870 data 60,102,66,6,28,0,24,24\n\n","sourcePath":"external/github.com/spiroharvey_c64/MadMagazine/mad.txt","sourceMtimeMs":1674155094000,"sourceUrl":"https://github.com/spiroharvey/c64/blob/main/MadMagazine/mad.txt","sourceRepoUrl":"https://github.com/spiroharvey/c64","license":"UNKNOWN","attribution":"Source: spiroharvey/c64 (License unknown)"},{"name":"github.com/spiroharvey_c64/TypeIn/ICEBERG/iceberg.bas","language":"basic","vector":[0,0.016989391297101974,0,0,0,0,0.0388328917324543,0.01456233486533165,0,0,-0.0024270557332783937,0,0,0.009708222933113575,0,-0.1359151303768158,-0.01456233486533165,0,0,0.046114061027765274,0,-0.0388328917324543,-0.036405835300683975,0,0,0.041259948164224625,0,0,0,0,0,0.06553050875663757,0,0,-0.007281167432665825,0,0,0,0,0,-0.009708222933113575,0,0.0970822349190712,0.0121352793648839,0,0,-0.031551726162433624,0,0,0.01456233486533165,0,-0.009708222933113575,0,0,0.0970822349190712,0.009708222933113575,0,0,-0.09222812205553055,0,0.0291246697306633,0.05339522659778595,0,-0.009708222933113575,-0.007281167432665825,0,0.1844562441110611,0.01456233486533165,0,-0.0679575651884079,-0.0485411174595356,0,0.01941644586622715,0,0,-0.009708222933113575,0,0,0,0,0,-0.0582493394613266,-0.04368700459599495,0,0.009708222933113575,0.0024270557332783937,0,-0.3689124882221222,-0.01456233486533165,0,0,0,0,-0.0582493394613266,-0.036405835300683975,0,0.0291246697306633,0.0024270557332783937,0,0,-0.0024270557332783937,0,0.0679575651884079,0.04368700459599495,0,-0.009708222933113575,-0.0582493394613266,0,0.0291246697306633,0,0,0,-0.08009283989667892,0,0,0.007281167432665825,0,-0.0485411174595356,-0.01941644586622715,0,0,0.007281167432665825,0,-0.0388328917324543,0,0,0.01941644586622715,0.0048541114665567875,0,-0.3689124882221222,-0.0024270557332783937,0,0,0.01456233486533165,0,-0.01941644586622715,0,0,0,0.050968170166015625,0,-0.009708222933113575,0,0,0,0.009708222933113575,0,-0.1067904531955719,-0.007281167432665825,0,0,0.0485411174595356,0,0,-0.0048541114665567875,0,0.0970822349190712,0.01941644586622715,0,-0.009708222933113575,-0.01941644586622715,0,0.0388328917324543,0.0970822349190712,0,0,-0.03397878259420395,0,0,0.01456233486533165,0,-0.3106631338596344,-0.0485411174595356,0,0.009708222933113575,0.026697613298892975,0,0,-0.0291246697306633,0,0,0.0121352793648839,0,-0.009708222933113575,-0.20629973709583282,0,0,0,0,-0.0388328917324543,-0.0291246697306633,0,0.0679575651884079,0.01456233486533165,0,-0.1456233412027359,-0.0048541114665567875,0,0.1456233412027359,0.03397878259420395,0,0,-0.009708222933113575,0,0.1844562441110611,0.01456233486533165,0,-0.009708222933113575,-0.01456233486533165,0,0,0,0,0,-0.0242705587297678,0,0.009708222933113575,0.009708222933113575,0,-0.009708222933113575,-0.01941644586622715,0,0.01941644586622715,0.009708222933113575,0,0,-0.21843501925468445,0,0,0,0,-0.01941644586622715,-0.01941644586622715,0,0,0,0,-0.0291246697306633,-0.0048541114665567875,0,0,0,0,-0.01941644586622715,-0.05339522659778595,0,0,0,0,0,0,0,0,0.07281167060136795,0,-0.1359151303768158,-0.0048541114665567875,0,0.009708222933113575,0.01941644586622715,0,-0.01941644586622715,-0.0024270557332783937,0,0,0.0242705587297678,0,-0.0291246697306633,-0.1553315669298172,0,0.009708222933113575,0.0121352793648839,0,-0.009708222933113575,-0.0024270557332783937,0,0.0970822349190712,0.046114061027765274,0,-0.2329973578453064,-0.021843502297997475,0,0,0.0048541114665567875,0,-0.0485411174595356,-0.021843502297997475,0,0.0291246697306633,0.03397878259420395,0,0,-0.0873740091919899,0,0.0291246697306633,0.07523872703313828,0,0,-0.09222812205553055,0,0.01941644586622715,0.09222812205553055,0,-0.009708222933113575,-0.01941644586622715,0,0.0582493394613266,0.007281167432665825,0,0,0,0,0.009708222933113575,0.021843502297997475,0,0,-0.007281167432665825,0,0.0388328917324543,0.016989391297101974,0,-0.009708222933113575,0,0,0,0,0,-0.01941644586622715,-0.021843502297997475,0,0.01941644586622715,0,0,-0.0582493394613266,-0.0242705587297678,0,0.01941644586622715,0.0048541114665567875,0,0,-0.10193634033203125,0,0.01941644586622715,0,0,-0.1747480183839798,-0.0048541114665567875,0,0.1067904531955719,0,0,0,-0.07038461416959763,0,0.0291246697306633,0.0048541114665567875,0,-0.0873740091919899,-0.036405835300683975,0,0,0,0,0,-0.01456233486533165,0,0,0.0291246697306633,0,-0.01941644586622715,-0.007281167432665825,0,0,0.0582493394613266,0,-0.01941644586622715,-0.1164986789226532,0,0,0,0,-0.0582493394613266,-0.10193634033203125,0],"text":"   10 print\"iceberg\"\n   15 g=16\n   20 dim b(g,g)\n   30 n=int(rnd(1)*g+4)\n   40 for i=1 to n\n   50 b(int(rnd(1)*g+1),int(rnd(1)*g+1))=42\n   60 next\n   70 sx=int(rnd(1)*g+1)\n   80 sy=int(rnd(1)*g+1)\n   90 if b(sx,sy)<>0 then 70\n  100 b(sx,sy)=90\n  110 yx=int(rnd(1)*g+1)\n  120 yy=int(rnd(1)*g+1)\n  130 if b(yx,yy)<>0 then 110\n  140 b(yx,yy)=89\n  150 print\"{clr}\"\n  160 for y=1 to g\n  170 for x=1 to g\n  180 if b(x,y)=0 then 210\n  190 print chr$(b(x,y));\n  200 goto 220\n  210 print\".\";\n  220 print\" \";\n  230 next x\n  240 print\n  250 next y\n  260 b(yx,yy)=0\n  270 print\"direction (n,s,e,w) \";\n  280 input d$\n  290 yy=yy-(d$=\"s\" and yy<>g)\n  300 yy=yy+(d$=\"n\" and yy<>1)\n  310 yx=yx-(d$=\"e\" and yx<>g)\n  320 yx=yx+(d$=\"w\" and yx<>1)\n  330 if b(yx,yy)=90 then 500\n  340 if b(yx,yy)=42 then 600\n  350 b(yx,yy)=89\n  360 b(sx,sy)=0\n  370 sx=sx+sgn(yx-sx)\n  380 sy=sy+sgn(yy-sy)\n  390 if b(sx,sy)=89 then 500\n  400 if b(sx,sy)=42 then 700\n  410 b(sx,sy)=90\n  420 goto 150\n  500 print\"you've been caught\"\n  510 goto 800\n  600 print\"you've hit an iceberg\"\n  610 goto 800\n  700 print\"you're safe - he's hit one\"\n  800 stop\n","sourcePath":"external/github.com/spiroharvey_c64/TypeIn/ICEBERG/iceberg.bas","sourceMtimeMs":1674155094000,"sourceUrl":"https://github.com/spiroharvey/c64/blob/main/TypeIn/ICEBERG/iceberg.bas","sourceRepoUrl":"https://github.com/spiroharvey/c64","license":"UNKNOWN","attribution":"Source: spiroharvey/c64 (License unknown)"},{"name":"github.com/spiroharvey_c64/TypeIn/ICEBERG/iceberg2.bas","language":"basic","vector":[0,0.010705413296818733,0,0,0,0,0.01427388470619917,0.01189490407705307,0,0,-0.0035684711765497923,0,0.0047579617239534855,0.0047579617239534855,0,-0.09991719573736191,-0.015463375486433506,0,0.15225477516651154,0.04520063474774361,0,-0.01427388470619917,-0.03211624175310135,0,0.009515923447906971,0.03568471223115921,0,0,-0.0023789808619767427,0,0.009515923447906971,0.07731688022613525,0,-0.0047579617239534855,-0.01189490407705307,0,0,0.009515923447906971,0,0,-0.0047579617239534855,0,0.12370700389146805,0.007136942353099585,0,-0.0047579617239534855,-0.04876910522580147,0,0,0.0047579617239534855,0,0,0,0,0.07612738758325577,0.01427388470619917,0,0,-0.05828503146767616,0,0.01427388470619917,0.038063693791627884,0,-0.009515923447906971,-0.009515923447906971,0,0.2759617865085602,0.007136942353099585,0,-0.04757961630821228,-0.033305730670690536,0,0.02378980815410614,0.0047579617239534855,0,-0.0047579617239534855,-0.0023789808619767427,0,0.019031846895813942,0.009515923447906971,0,-0.038063693791627884,-0.030926750972867012,0,0.01427388470619917,0.0023789808619767427,0,-0.28071972727775574,-0.04044267535209656,0,0,0.008326432667672634,0,-0.02854776941239834,-0.024979298934340477,0,0.02378980815410614,0.0011894904309883714,0,-0.0047579617239534855,-0.0023789808619767427,0,0.04282165318727493,0.024979298934340477,0,-0.019031846895813942,-0.08326432853937149,0,0.019031846895813942,0.0047579617239534855,0,-0.009515923447906971,-0.05709553882479668,0,0,0.07969585806131363,0,-0.02854776941239834,-0.007136942353099585,0,0.009515923447906971,0.008326432667672634,0,-0.04757961630821228,0,0,0.17604458332061768,0.007136942353099585,0,-0.3187834322452545,-0.0035684711765497923,0,0.0047579617239534855,0.01189490407705307,0,-0.05709553882479668,-0.0047579617239534855,0,0,0.0642324835062027,0,-0.0047579617239534855,-0.0035684711765497923,0,0,0.021410826593637466,0,-0.08088535070419312,-0.0023789808619767427,0,0.05709553882479668,0.038063693791627884,0,-0.009515923447906971,-0.0023789808619767427,0,0.05233757942914963,0.009515923447906971,0,-0.009515923447906971,-0.024979298934340477,0,0.08088535070419312,0.13917037844657898,0,0,-0.02378980815410614,0,0,0.017842356115579605,0,-0.3473311960697174,-0.030926750972867012,0,0.01427388470619917,0.02854776941239834,0,0,-0.019031846895813942,0,0.019031846895813942,0.010705413296818733,0,-0.01427388470619917,-0.15344426035881042,0,0,0.0023789808619767427,0,-0.05233757942914963,-0.015463375486433506,0,0.08564330637454987,0.016652865335345268,0,-0.09040126949548721,-0.0047579617239534855,0,0.12370700389146805,0.021410826593637466,0,0,-0.024979298934340477,0,0.1379808932542801,0.010705413296818733,0,-0.02854776941239834,-0.015463375486433506,0,0.038063693791627884,0,0,0,-0.01427388470619917,0,0.009515923447906971,0.008326432667672634,0,-0.033305730670690536,-0.02378980815410614,0,0.009515923447906971,0.08921178430318832,0,0,-0.1843710094690323,0,0.009515923447906971,0.04044267535209656,0,-0.0047579617239534855,-0.03211624175310135,0,0,0.0023789808619767427,0,-0.038063693791627884,-0.0023789808619767427,0,0,0.0023789808619767427,0,-0.02854776941239834,-0.041632164269685745,0,0,0.02854776941239834,0,0,-0.0047579617239534855,0,0,0.05709553882479668,0,-0.10467515885829926,-0.005947452038526535,0,0.009515923447906971,0.04044267535209656,0,-0.038063693791627884,0,0,0.02378980815410614,0.019031846895813942,0,-0.01427388470619917,-0.1736655980348587,0,0.0047579617239534855,0.010705413296818733,0,-0.009515923447906971,-0.0023789808619767427,0,0.07136942446231842,0.07850636541843414,0,-0.33305731415748596,-0.019031846895813942,0,0.009515923447906971,0.005947452038526535,0,-0.02854776941239834,-0.027358278632164,0,0.01427388470619917,0.04757961630821228,0,0,-0.054716557264328,0,0.01427388470619917,0.06542197614908218,0,0,-0.07017993181943893,0,0.009515923447906971,0.06899044662714005,0,-0.0047579617239534855,-0.021410826593637466,0,0.04757961630821228,0.024979298934340477,0,-0.019031846895813942,-0.0011894904309883714,0,0.009515923447906971,0.015463375486433506,0,-0.0047579617239534855,-0.021410826593637466,0,0.08564330637454987,0.009515923447906971,0,-0.009515923447906971,-0.0023789808619767427,0,0,0.0047579617239534855,0,-0.009515923447906971,-0.009515923447906971,0,0.009515923447906971,0.0023789808619767427,0,-0.08088535070419312,-0.030926750972867012,0,0.0047579617239534855,0.04401114583015442,0,0,-0.09396973997354507,0,0.02378980815410614,0.0011894904309883714,0,-0.11419107764959335,-0.01427388470619917,0,0.07612738758325577,0,0,0,-0.053527068346738815,0,0.01427388470619917,0.0047579617239534855,0,-0.05233757942914963,-0.03925318270921707,0,0.009515923447906971,0.026168789714574814,0,-0.0047579617239534855,-0.009515923447906971,0,0.019031846895813942,0.015463375486433506,0,-0.009515923447906971,-0.007136942353099585,0,0,0.05590604990720749,0,-0.061853501945734024,-0.16652865707874298,0,0.0047579617239534855,0.0047579617239534855,0,-0.04282165318727493,-0.1011066883802414,0],"text":"    5 poke 53280,0:poke53281,0\n10 x=rnd(-ti)\n   15 g=16\n   20 dim b(g,g)\n\n24 rem set up board\n25 print\"{clr}{white}                iceberg\":print\n\n29 rem icebergs\n   30 n=int(rnd(1)*g+4)\n   40 for i=1 to n\n   50 b(int(rnd(1)*g+1),int(rnd(1)*g+1))=42\n   60 next\n\n69 rem enemy\n   70 sx=int(rnd(1)*g+1)\n   80 sy=int(rnd(1)*g+1)\n   90 if b(sx,sy)<>0 then 70\n  100 b(sx,sy)=90\n\n109 rem player\n  110 yx=int(rnd(1)*g+1)\n  120 yy=int(rnd(1)*g+1)\n  130 if b(yx,yy)<>0 then 110\n  140 b(yx,yy)=89\n\n\n\n159 rem print out board\n  160 for y=1 to g\n  170 for x=1 to g\n  \n180 if b(x,y)=0 then print \"{blue}.\";\n182 if b(x,y)=42 then print \"{cyn}\"chr$(b(x,y));\n184 if b(x,y)=89 then print \"{yel}\"chr$(b(x,y));\n186 if b(x,y)=90 then print \"{lred}\"chr$(b(x,y));\n190 print \" \";\n\n  200 next x\n  210 print\n  220 next y\n  230 b(yx,yy)=0\n  240 print\"{white}direction (n,s,e,w) \";\n\n249 rem ** main loop\n250 get d$:if d$=\"\" then 250\n\n252 zc$=\"{blue}.\"\n254 b(yx,yy)=0\n256 zy=yy:zx=yx:gosub 450\n257 rem b(sx,sy)=0\n258 zy=sy:zx=sx:gosub 450\n\n\n  290 yy=yy-((d$=\"s\" or d$=chr$(17)) and yy<>g)\n  300 yy=yy+((d$=\"n\" or d$=chr$(145)) and yy<>1)\n  310 yx=yx-((d$=\"e\" or d$=chr$(29)) and yx<>g)\n  320 yx=yx+((d$=\"w\" or d$=chr$(157)) and yx<>1)\n\n  330 if b(yx,yy)=90 then 500\n  340 if b(yx,yy)=42 then 600\n  350 b(yx,yy)=89\n  360 b(sx,sy)=0\n  370 sx=sx+sgn(yx-sx)\n  380 sy=sy+sgn(yy-sy)\n  390 if b(sx,sy)=89 then 500\n  400 if b(sx,sy)=42 then 700\n  410 b(sx,sy)=90\n\n412 gosub 430\n414 gosub 440\n\n\n  420 goto 250\n\n\n430 rem display player\n431 zc$=\"{yellow}y\"\n432 zy=yy:zx=yx:gosub 450\n435 return\n\n440 rem display enemy\n441 zc$=\"{lred}z\"\n442 zy=sy:zx=sx:gosub 450\n445 return\n\n450 print \"{home}\"\n451 for y=1 to zy : print \"{down}\"; :next\n452 print tab((zx*2)-2)zc$;\n453 return\n\n500 print\"{home}\":for y=1 to g+3:print \"{down}\";:next\n505 print\"{yellow}you've been caught\"\n510 zc$=\"{RVSON}{red}z{RVSOFF}\"\n520 zy=sy:zx=sx:gosub 450\n  550 goto 800\n\n600 print\"{home}\":for y=1 to g+3:print \"{down}\";:next\n605 print\"{yellow}you've hit an iceberg\"\n610 zc$=\"{RVSON}{red}*{RVSOFF}\"\n620 zy=yy:zx=yx:gosub 450\n625 gosub 440\n  650 goto 800\n\n  700 print\"{home}\":for y=1 to g+3:print \"{down}\";:next\n705 print\"{yellow}you're safe - he's hit one\"\n710 zc$=\"{RVSON}{red}*{RVSOFF}\"\n720 zy=sy:zx=sx:gosub 450\n725 gosub 430\n\n800 print\"{home}\":for y=1 to g+5:print \"{down}\";:next\n805 print \"{yellow}would you like to play again? (y/n)\";\n810 get k$:if k$=\"\" then 810\n820 if k$=\"y\" then run\n\n","sourcePath":"external/github.com/spiroharvey_c64/TypeIn/ICEBERG/iceberg2.bas","sourceMtimeMs":1674155094000,"sourceUrl":"https://github.com/spiroharvey/c64/blob/main/iceberg2.bas","sourceRepoUrl":"https://github.com/spiroharvey/c64","license":"UNKNOWN","attribution":"Source: spiroharvey/c64 (License unknown)"},{"name":"github.com/spiroharvey_c64/TypeIn/ROGUISH-PACMAN/roguish-pacman.bas","language":"basic","vector":[0.00395150575786829,0.00042337560444138944,0,-0.0005645008059218526,-0.0009878764394670725,0,0.015241521410644054,0.0016935024177655578,0,0,-0.0016935024177655578,0,0.0005645008059218526,0.0002822504029609263,0,-0.010161014273762703,-0.0014112519565969706,0,0.03048304282128811,0.24372322857379913,0,0,-0.0021168780513107777,0,0.002822503913193941,0.004516006447374821,0,-0.0016935024177655578,-0.0002822504029609263,0,0.0011290016118437052,0.17386624217033386,0,0,-0.0008467512088827789,0,0,0.0038103803526610136,0,-0.0005645008059218526,-0.0018346275901421905,0,0.009032012894749641,0.002822503913193941,0,-0.0005645008059218526,-0.0070562600158154964,0,0.011290015652775764,0.0002822504029609263,0,-0.0005645008059218526,0,0,0.009032012894749641,0.0008467512088827789,0,-0.0005645008059218526,-0.12150879949331284,0,0.0005645008059218526,0,0,0,-0.002822503913193941,0,0.03330554813146591,0.0005645008059218526,0,-0.0011290016118437052,-0.0033870048355311155,0,0.0050805071368813515,0.0002822504029609263,0,0,-0.0016935024177655578,0,0,0.0005645008059218526,0,-0.012983518652617931,-0.0018346275901421905,0,0.0005645008059218526,0,0,-0.034999050199985504,-0.007197385188192129,0,0,0.0009878764394670725,0,-0.0124190179631114,-0.0038103803526610136,0,0,0.0021168780513107777,0,-0.0005645008059218526,-0.004939381964504719,0,0.007338510360568762,0.007620760705322027,0,-0.0022580032236874104,-0.007620760705322027,0,0.0016935024177655578,0.0009878764394670725,0,-0.0005645008059218526,-0.005221632309257984,0,0,0.015241521410644054,0,-0.002822503913193941,-0.00042337560444138944,0,0,0.0016935024177655578,0,-0.004516006447374821,-0.0014112519565969706,0,0.01580602303147316,0.0007056259782984853,0,-0.03951505571603775,0,0,0.0005645008059218526,0.11544041335582733,0,-0.027096038684248924,-0.0012701267842203379,0,0.0005645008059218526,0.004657131619751453,0,-0.007338510360568762,-0.00042337560444138944,0,0,0.006915134843438864,0,-0.00790301151573658,-0.0005645008059218526,0,0.01693502441048622,0.0055038826540112495,0,-0.0062095089815557,-0.0008467512088827789,0,0.0011290016118437052,0.001552377245388925,0,0,-0.0029636293184012175,0,0.006774009671062231,0.016652774065732956,0,-0.0022580032236874104,-0.0005645008059218526,0,0,0.0029636293184012175,0,-0.04685356840491295,-0.06068383529782295,0,0.0016935024177655578,0,0,-0.0005645008059218526,-0.007338510360568762,0,0.004516006447374821,0.00042337560444138944,0,-0.0022580032236874104,-0.01891077682375908,0,0,0,0,-0.005645007826387882,-0.0070562600158154964,0,0.051369573920965195,0.0002822504029609263,0,-0.0005645008059218526,-0.00042337560444138944,0,0.01693502441048622,0.003669255180284381,0,0,-0.004516006447374821,0,0.6853039860725403,0.0008467512088827789,0,-0.0011290016118437052,-0.0021168780513107777,0,0.007338510360568762,0.0009878764394670725,0,-0.002822503913193941,-0.001552377245388925,0,0.0011290016118437052,0.0038103803526610136,0,-0.004516006447374821,-0.0022580032236874104,0,0.0011290016118437052,0.008044136688113213,0,0,-0.022297780960798264,0,0,0.00790301151573658,0,-0.0005645008059218526,-0.013548019342124462,0,0,0.0009878764394670725,0,-0.004516006447374821,-0.004092630930244923,0,0.0011290016118437052,0.0002822504029609263,0,-0.0022580032236874104,-0.00395150575786829,0,0.0011290016118437052,0.00846751220524311,0,0,-0.003245879663154483,0,0,0.002822503913193941,0,-0.0062095089815557,-0.00014112520148046315,0,0,0.0062095089815557,0,-0.0016935024177655578,-0.0012701267842203379,0,0.00395150575786829,0.0022580032236874104,0,-0.0005645008059218526,-0.023567909374833107,0,0.0005645008059218526,0.0009878764394670725,0,-0.018628526479005814,-0.0002822504029609263,0,0,0.010584389790892601,0,-0.03048304282128811,-0.0014112519565969706,0,0.002822503913193941,0.0012701267842203379,0,-0.0005645008059218526,-0.002822503913193941,0,0,0.025684786960482597,0,-0.0016935024177655578,-0.0035281300079077482,0,0.0011290016118437052,0.008608637377619743,0,-0.0022580032236874104,-0.008749762549996376,0,0.0005645008059218526,0.34265199303627014,0,0,-0.003669255180284381,0,0.4617616534233093,0.003669255180284381,0,-0.00395150575786829,-0.001552377245388925,0,0.0005645008059218526,0.002399128396064043,0,-0.0005645008059218526,-0.002822503913193941,0,0.0050805071368813515,0.0009878764394670725,0,-0.0011290016118437052,-0.00014112520148046315,0,0.00395150575786829,0,0,-0.0022580032236874104,-0.0009878764394670725,0,0.0050805071368813515,0,0,-0.01185451727360487,-0.0033870048355311155,0,0,0.004516006447374821,0,0,-0.011007765308022499,0,0.0016935024177655578,0.0007056259782984853,0,-0.2427353411912918,-0.006774009671062231,0,0,0.00014112520148046315,0,-0.0033870048355311155,-0.004939381964504719,0,0.0005645008059218526,0,0,-0.005645007826387882,-0.002822503913193941,0,0,0.0062095089815557,0,-0.0033870048355311155,-0.0018346275901421905,0,0.0011290016118437052,0.0005645008059218526,0,-0.0005645008059218526,-0.009314263239502907,0,0,0.0016935024177655578,0,-0.013548019342124462,-0.01580602303147316,0,0,0.0014112519565969706,0,-0.007338510360568762,-0.011995642445981503,0],"text":"rem roguish v0.2 (pacman edition) - apr 2022\nrem by spiro \nrem for the not a wizard game challenge\n\npoke 53280,0:poke53281,0\nx=rnd(-ti)\npl=64:en=38:wl=35:dr=122\nbx=38:by=16: rem board x,y size\ndim b(bx,by)\n\n\nrem set up board\n\tprint\"{clr}{white}                roguish\":print\n\n\tfor y=1 to by:for x=1 to bx\n\tread d\n\tif d=0 then b(x,y)=0\n\tif d=1 then b(x,y)=wl\n\tnext:next\n\n\trem plot door\n\tgosub 1000\n\tb(zx,zy)=dr\n\n\trem enemy1 start loc\n\tgosub 1000\n\tx1=zx:y1=zy : b(x1,y1)=en\n\n\trem enemy 2 start loc\n\tgosub 1000\n\tx2=zx:y2=zy : b(x2,y2)=en\n\n\trem player start location\n\tgosub 1000\n\tpx=zx:py=zy : b(px,py)=en\n\n\n\n100 rem print out board\n\tfor y=1 to by\n\tprint \" \";\n\tfor x=1 to bx  \n\tif b(x,y)<>0 then print \"{brown}\"chr$(b(x,y));:goto 150\n\tprint \"{blue}.\";\n150\tnext x\n\tprint\n\tnext y\n\tb(px,py)=0\n\tm$=\"{white}reach the exit (\"+chr$(dr)+\") for freedom\":gosub 1420\n\n\trem place objects on board\n\tgosub 1200:gosub 1210:gosub 1220:gosub 1230\n\n200 rem ************************  main loop  ****************\n\tget d$:if d$=\"\" then 200\n\n\tzc$=\"{blue}.\"\n\tb(px,py)=0\n\tzx=px:zy=py:gosub 1400\n\tzx=x1:zy=y1:gosub 1400\n\n\trem update player coords\n\tpy=py-(d$=chr$(17) and py<>by and b(px,py+1)<>wl)\n\tpy=py+(d$=chr$(145) and py<>1 and b(px,py-1)<>wl)\n\tpx=px-(d$=chr$(29) and px<>bx and b(px+1,py)<>wl)\n\tpx=px+(d$=chr$(157) and px<>1 and b(px-1,py)<>wl)\n\n\tif b(px,py)=dr then 1520 : rem player safe, reached door\n\tif b(px,py)=en then 1500 : rem player walked into enemy\n\n\tb(px,py)=pl\n\tb(x1,y1)=0\n\n\trem update enemy coords\n\tnx=x1+sgn(px-x1)\n\tny=y1+sgn(py-y1)\n\n\tif b(nx,ny)<>wl then x1=nx:y1=ny:goto 600\n\tif b(x1,ny)<>wl then y1=ny:goto 600\n\tif b(nx,y1)<>wl then x1=nx:goto 600\n\n600 rem got new enemy coords\n\tif b(x1,y1)=pl then 1500\n\tb(x1,y1)=en\n\tgosub 1210\n\tgosub 1220\n\tgosub 1230\n\n\tgoto 200\n\nrem ***************** function section ********\n\n\n1000 rem coord generator\n\tzx=int(rnd(1)*bx+1):zy=int(rnd(1)*by+1)\n\tif b(zx,zy)<>0 then 1000\n\treturn\n\n1200 rem place door on board\n\tzc$=\"{RVSON}{yellow}\"+chr$(dr)+\"{RVSOFF}\"\n\tzy=dy:zx=dx:gosub 1400\n\treturn\n\n1210 rem place player on board\n\tzc$=\"{yellow}\"+chr$(pl)\n\tzy=py:zx=px:gosub 1400\n\treturn\n\n1220 rem place enemy 1 on board\n\tzc$=\"{green}\"+chr$(en)\n\tzy=y1:zx=x1:gosub 1400\n\treturn\n\n\n1230 rem place enemy 2 on board\n\tzc$=\"{green}\"+chr$(en)\n\tzx=x2:zy=y2:gosub 1400\n\treturn\n\n\n1400 rem update board\n\tprint \"{home}\"\n\tfor y=1 to zy : print \"{down}\"; :next\n\tprint tab(zx)zc$;\n\treturn\n\n1420 rem print message\n\tprint\"{home}\":for y=1 to by+3+zs:print \"{down}\";:next\n\tprint \"{yellow}\"m$\n\treturn\n\nrem ************ end game scenarios **********\n1500 rem caught!\n\tzc$=\"{RVSON}{red}\"+chr$(en)+\"{RVSOFF}\"\n\tzx=x1:zy=y1:gosub 1400\n\tm$=\"you've been caught by the goblin!\":gosub 1420\n\tgoto 1800\n\n\n1520 rem escaped!\n\tzc$=\"{RVSON}{yellow}\"+chr$(pl)+\"{RVSOFF}\"\n\tzx=dx:zy=dy:gosub 1400\n\tgosub 1210\n\tm$=\"you've reached the exit and escaped!\":gosub 1420\n\n1800 zs=1:m$=\"{yellow}would you like to play again? (y/n)\":gosub 1420\n1810 get k$:if k$=\"\" then 1810\nif k$=\"y\" then run\nend\n\n\nrem level one map\nrem dA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\nrem dA 1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1\nrem dA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\nrem dA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\n\nrem pacman map\ndA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\ndA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\ndA 1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1\ndA 1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1\ndA 1,0,1,1,0,1,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,1,1,1,0,1,1,0,1\ndA 1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,1,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,1\ndA 1,1,1,1,0,0,1,0,0,1,0,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,0,1,0,0,1,0,0,1,1,1,1\ndA 0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,1,1,1,1,1,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0\ndA 1,1,1,1,0,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,0,1,1,1,1\ndA 1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1\ndA 1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1\ndA 1,1,0,1,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1\ndA 1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1\ndA 1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,1,1,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1\ndA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\ndA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\n\nrem east exit=b(1,8)\n","sourcePath":"external/github.com/spiroharvey_c64/TypeIn/ROGUISH-PACMAN/roguish-pacman.bas","sourceMtimeMs":1674155094000,"sourceUrl":"https://github.com/spiroharvey/c64/blob/main/ROGUISH-PACMAN/roguish-pacman.bas","sourceRepoUrl":"https://github.com/spiroharvey/c64","license":"UNKNOWN","attribution":"Source: spiroharvey/c64 (License unknown)"},{"name":"github.com/spiroharvey_c64/TypeIn/ROGUISH-PACMAN/roguishpac3.bas","language":"basic","vector":[0.009998256340622902,0.0002777293266262859,0,-0.0005554586532525718,-0.0009720526868477464,0,0.021662889048457146,0.0016663760179653764,0,-0.0016663760179653764,-0.0031938874162733555,0,0.0005554586532525718,0.0002777293266262859,0,-0.010553714819252491,-0.0016663760179653764,0,0.039437565952539444,0.24231885373592377,0,0,-0.00208296999335289,0,0.00833187997341156,0.004721398930996656,0,-0.0016663760179653764,-0.0002777293266262859,0,0.00277729332447052,0.1744140237569809,0,0,-0.0008331880089826882,0,0,0.0037493461277335882,0,-0.00277729332447052,-0.0009720526868477464,0,0.00888733845204115,0.002916158176958561,0,-0.0005554586532525718,-0.00888733845204115,0,0.0138864666223526,0.0002777293266262859,0,-0.0005554586532525718,0,0,0.012220091186463833,0.0008331880089826882,0,-0.0005554586532525718,-0.11984021216630936,0,0.0005554586532525718,0,0,0,-0.00277729332447052,0,0.04054848477244377,0.0005554586532525718,0,-0.0011109173065051436,-0.003610481508076191,0,0.004999128170311451,0.0002777293266262859,0,0,-0.0016663760179653764,0,0,0.0024995640851557255,0,-0.014997384510934353,-0.0018052407540380955,0,0.0022218346130102873,0,0,-0.04443669319152832,-0.008470744825899601,0,0,0.0009720526868477464,0,-0.014441926032304764,-0.003610481508076191,0,0,0.005137993022799492,0,-0.0005554586532525718,-0.004999128170311451,0,0.00888733845204115,0.010970309376716614,0,-0.0022218346130102873,-0.00833187997341156,0,0.0016663760179653764,0.0009720526868477464,0,-0.0005554586532525718,-0.00555458664894104,0,0,0.019718782976269722,0,-0.00888733845204115,-0.0004165940044913441,0,0,0.004443669226020575,0,-0.004443669226020575,-0.00138864666223526,0,0.016108302399516106,0.001527511398307979,0,-0.049435824155807495,0,0,0.0005554586532525718,0.11484108120203018,0,-0.028328392654657364,-0.002360699465498328,0,0.0005554586532525718,0.0045825340785086155,0,-0.007220963016152382,-0.0004165940044913441,0,0,0.008748474530875683,0,-0.011664632707834244,-0.0005554586532525718,0,0.020551972091197968,0.007082098163664341,0,-0.007220963016152382,-0.0004165940044913441,0,0.0011109173065051436,0.001527511398307979,0,0,-0.0037493461277335882,0,0.0066655040718615055,0.020274242386221886,0,-0.0022218346130102873,-0.0005554586532525718,0,0,0.002916158176958561,0,-0.06721050292253494,-0.059850674122571945,0,0.0011109173065051436,0,0,-0.0005554586532525718,-0.00833187997341156,0,0.004443669226020575,0.0012497820425778627,0,-0.00833187997341156,-0.023745859041810036,0,0,0,0,-0.0066655040718615055,-0.008054151199758053,0,0.050546739250421524,0.0012497820425778627,0,-0.0005554586532525718,-0.0004165940044913441,0,0.0177746769040823,0.004443669226020575,0,0,-0.005137993022799492,0,0.6832141876220703,0.0008331880089826882,0,-0.0011109173065051436,-0.001527511398307979,0,0.007220963016152382,0.0024995640851557255,0,-0.00277729332447052,-0.0045825340785086155,0,0.0016663760179653764,0.005415722262114286,0,-0.00555458664894104,-0.0026384287048131227,0,0.0011109173065051436,0.00819301512092352,0,0,-0.027356339618563652,0,0,0.010137121193110943,0,-0.0005554586532525718,-0.014164196327328682,0,0,0.002360699465498328,0,-0.004443669226020575,-0.004027075599879026,0,0.0011109173065051436,0.00069432333111763,0,-0.0022218346130102873,-0.005832316353917122,0,0.0011109173065051436,0.010275986045598984,0,0,-0.004304804839193821,0,0,0.00277729332447052,0,-0.006110045593231916,-0.00013886466331314296,0,0,0.006804368924349546,0,-0.0016663760179653764,-0.0012497820425778627,0,0.0038882107473909855,0.003055022796615958,0,-0.004443669226020575,-0.03374411538243294,0,0.0005554586532525718,0.00069432333111763,0,-0.018885595723986626,-0.0002777293266262859,0,0.0005554586532525718,0.012358956038951874,0,-0.029994769021868706,-0.004443669226020575,0,0.00277729332447052,0.0012497820425778627,0,-0.0011109173065051436,-0.0033327520359307528,0,0,0.025273369625210762,0,-0.0016663760179653764,-0.004027075599879026,0,0.0011109173065051436,0.009442797861993313,0,-0.0022218346130102873,-0.01110917329788208,0,0.0005554586532525718,0.34160709381103516,0,0,-0.00416593998670578,0,0.4593643248081207,0.003610481508076191,0,-0.0038882107473909855,-0.001527511398307979,0,0.0005554586532525718,0.003055022796615958,0,-0.0005554586532525718,-0.0033327520359307528,0,0.007220963016152382,0.0009720526868477464,0,-0.0011109173065051436,-0.00013886466331314296,0,0.0038882107473909855,0,0,-0.0005554586532525718,-0.0024995640851557255,0,0.004999128170311451,0,0,-0.014997384510934353,-0.0033327520359307528,0,0,0.0045825340785086155,0,0,-0.013469872996211052,0,0.0016663760179653764,0.00069432333111763,0,-0.23940269649028778,-0.007082098163664341,0,0,0.00013886466331314296,0,-0.0033327520359307528,-0.00486026331782341,0,0.0005554586532525718,0,0,-0.006110045593231916,-0.0037493461277335882,0,0,0.007082098163664341,0,-0.0033327520359307528,-0.004027075599879026,0,0.004999128170311451,0.0005554586532525718,0,-0.0005554586532525718,-0.009442797861993313,0,0,0.0019441053736954927,0,-0.016108302399516106,-0.015552842989563942,0,0,0.00138864666223526,0,-0.004999128170311451,-0.01735808327794075,0],"text":"rem roguish v0.3 (pacman edition) - apr 2022\nrem by spiro \nrem for the not a wizard game challenge\n\npoke 53280,0:poke53281,0\nx=rnd(-ti)\npl=64:en=38:wl=35:dr=122\nbx=38:by=16: rem board x,y size\ndim b(bx,by)\nread t1:read t2\nread t3:read t4\n\nrem set up board\n\tprint\"{clr}{white}                roguish\":print\n\n\tfor y=1 to by:for x=1 to bx\n\tread d\n\tif d=0 then b(x,y)=0\n\tif d=1 then b(x,y)=wl\n\tnext:next\n\n\trem plot door\n\tgosub 1000\n\tdx=zx:dy=zy:b(dx,dy)=dr\n\n\trem enemy1 start loc\n\tgosub 1000\n\tx1=zx:y1=zy : b(x1,y1)=en\n\trem e1\n\n\trem enemy 2 start loc\n\tgosub 1000\n\tx2=zx:y2=zy : b(x2,y2)=en\n\n\trem player start location\n\tgosub 1000\n\tpx=zx:py=zy : b(px,py)=en\n\n\n\n100 rem print out board\n\tfor y=1 to by\n\tprint \" \";\n\tfor x=1 to bx  \n\tif b(x,y)=wl then print \"{brown}\"chr$(b(x,y));:goto 150\n\tprint \"{blue}.\";\n150\tnext x\n\tprint\n\tnext y\n\tb(px,py)=0\n\tm$=\"{white}reach the exit (\"+chr$(dr)+\") for freedom\":gosub 1420\n\n\trem place objects on board\n\tgosub 1200:gosub 1210:gosub 1220:gosub 1230\n\n200 rem ************************  main loop  ****************\n\tget d$:if d$=\"\" then 200\n\n\tzc$=\"{blue}.\"\n\tb(px,py)=0\n\tzx=px:zy=py:gosub 1400\n\tzx=x1:zy=y1:gosub 1400\n\tzx=x2:zy=y2:gosub 1400\n\n\n\trem update player coords\n\tif d$=chr$(157) and px=t1 and py=t2 then px=t3:py=t4:goto 400\n\tif d$=chr$(29) and px=t3 and py=t4 then px=t1:py=t2:goto 400\n\n\tpy=py-(d$=chr$(17) and py<>by and b(px,py+1)<>wl)\n\tpy=py+(d$=chr$(145) and py<>1 and b(px,py-1)<>wl)\n\tpx=px-(d$=chr$(29) and px<>bx and b(px+1,py)<>wl)\n\tpx=px+(d$=chr$(157) and px<>1 and b(px-1,py)<>wl)\n\n\n400\tif b(px,py)=dr then 1520 : rem player safe, reached door\n\tif b(px,py)=en then 1500 : rem player walked into enemy\n\n\tb(px,py)=pl\n\tb(x1,y1)=0\n\tb(x2,y2)=0\n\n500\trem update enemy1 coords\n\tnx=x1+sgn(px-x1)\n\tny=y1+sgn(py-y1)\n\n\tif b(nx,ny)=0 or b(nx,ny)=pl then x1=nx:y1=ny:goto 520\n\tif b(x1,ny)=0 or b(nx,ny)=pl then y1=ny:goto 520\n\tif b(nx,y1)=0 or b(nx,ny)=pl then x1=nx:goto 520\n\n520\trem update enemy2 coords\n\tif b(x1,y1)=pl then zx=x1:zy=y1:goto 1500\n\tb(x1,y1)=en\n\n\tnx=x2+sgn(px-x2)\n\tny=y2+sgn(py-y2)\n\n\tif b(nx,ny)=0 or b(nx,ny)=pl then x2=nx:y2=ny:goto 540\n\tif b(x2,ny)=0 or b(nx,ny)=pl then y2=ny:goto 540\n\tif b(nx,y2)=0 or b(nx,ny)=pl then x2=nx:goto 540\n\n540 rem update enemy 3 coords\n\tif b(x2,y2)=pl then zx=x2:zy=y2:goto 1500\n\tb(x2,y2)=en\n\n600 rem got new enemy coords\n\tgosub 1210\n\tgosub 1220\n\tgosub 1230\n\n\tgoto 200\n\nrem ***************** function section ********\n\n\n1000 rem coord generator\n\tzx=int(rnd(1)*bx+1):zy=int(rnd(1)*by+1)\n\tif b(zx,zy)<>0 then 1000\n\treturn\n\n1200 rem place door on board\n\tzc$=\"{RVSON}{yellow}\"+chr$(dr)+\"{RVSOFF}\"\n\tzy=dy:zx=dx:gosub 1400\n\treturn\n\n1210 rem place player on board\n\tzc$=\"{yellow}\"+chr$(pl)\n\tzy=py:zx=px:gosub 1400\n\treturn\n\n1220 rem place enemy 1 on board\n\tzc$=\"{green}\"+chr$(en)\n\tzy=y1:zx=x1:gosub 1400\n\treturn\n\n\n1230 rem place enemy 2 on board\n\tzc$=\"{cyan}\"+chr$(en)\n\tzx=x2:zy=y2:gosub 1400\n\treturn\n\n\n1400 rem update board\n\tprint \"{home}\"\n\tfor y=1 to zy : print \"{down}\"; :next\n\tprint tab(zx)zc$;\n\treturn\n\n1420 rem print message\n\tprint\"{home}\":for y=1 to by+3+zs:print \"{down}\";:next\n\tprint \"{yellow}\"m$\n\treturn\n\nrem ************ end game scenarios **********\n1500 rem caught!\n\tgosub 1220:gosub 1230\n\tzc$=\"{RVSON}{red}\"+chr$(en)+\"{RVSOFF}\"\n\tgosub 1400\n\tm$=\"you've been caught by the goblin!\":gosub 1420\n\tgoto 1800\n\n\n1520 rem escaped!\n\tzc$=\"{RVSON}{yellow}\"+chr$(pl)+\"{RVSOFF}\"\n\tzx=dx:zy=dy:gosub 1400\n\tgosub 1210\n\tm$=\"you've reached the exit and escaped!\":gosub 1420\n\n1800 zs=1:m$=\"{yellow}would you like to play again? (y/n)\":gosub 1420\n1810 get k$:if k$=\"\" then 1810\nif k$=\"y\" then run\nend\n\n\nrem level one map\nrem dA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\nrem dA 1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1\nrem dA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\nrem dA 1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\nrem dA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\n\nrem pacman map\ndA 1,8,38,8\ndA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\ndA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\ndA 1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1\ndA 1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1\ndA 1,0,1,1,0,1,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,1,1,1,0,1,1,0,1\ndA 1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,1,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,1\ndA 1,1,1,1,0,0,1,0,0,1,0,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,0,1,0,0,1,0,0,1,1,1,1\ndA 0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,1,1,1,1,1,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0\ndA 1,1,1,1,0,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,0,1,1,1,1\ndA 1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1\ndA 1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1\ndA 1,1,0,1,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1\ndA 1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1\ndA 1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,1,1,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1\ndA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\ndA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\n\nrem east exit=b(1,8) -> b(38,8)\n","sourcePath":"external/github.com/spiroharvey_c64/TypeIn/ROGUISH-PACMAN/roguishpac3.bas","sourceMtimeMs":1674155094000,"sourceUrl":"https://github.com/spiroharvey/c64/blob/main/roguishpac3.bas","sourceRepoUrl":"https://github.com/spiroharvey/c64","license":"UNKNOWN","attribution":"Source: spiroharvey/c64 (License unknown)"},{"name":"github.com/spiroharvey_c64/TypeIn/ROGUISH/roguish.bas","language":"basic","vector":[0.005300919059664011,0.0007951378938741982,0,0,-0.0005300919292494655,0,0.006361103150993586,0.0026504595298320055,0,0,-0.00026504596462473273,0,0.001060183858498931,0.0005300919292494655,0,-0.014842573553323746,-0.0026504595298320055,0,0.04770827293395996,0.2523237466812134,0,-0.001060183858498931,-0.008746516890823841,0,0.002120367716997862,0.010601838119328022,0,-0.001060183858498931,-0.0005300919292494655,0,0.002120367716997862,0.17042455077171326,0,0,-0.0015902757877483964,0,0,0.007156240753829479,0,-0.001060183858498931,0,0,0.016962941735982895,0.006096057128161192,0,-0.001060183858498931,-0.015637710690498352,0,0,0.0026504595298320055,0,-0.001060183858498931,0,0,0.02014349214732647,0.002120367716997862,0,-0.001060183858498931,-0.09462140500545502,0,0.001060183858498931,0.009541654959321022,0,0,-0.002120367716997862,0,0.055129557847976685,0.0007951378938741982,0,-0.004240735433995724,-0.006361103150993586,0,0.011662022210657597,0,0,0,-0.003180551575496793,0,0,0.002120367716997862,0,-0.010601838119328022,-0.009541654959321022,0,0.001060183858498931,0,0,-0.07103231549263,-0.0076863327994942665,0,0,0.002120367716997862,0,-0.023324044421315193,-0.008216424845159054,0,0,0.002915505552664399,0,-0.001060183858498931,-0.004505781456828117,0,0.013782389461994171,0.006626149173825979,0,-0.003180551575496793,-0.01590275764465332,0,0.003180551575496793,0.002120367716997862,0,-0.001060183858498931,-0.00795137882232666,0,0,0.0241191815584898,0,-0.005300919059664011,-0.0007951378938741982,0,0,0.0013252297649160028,0,-0.007421286776661873,-0.0005300919292494655,0,0.028624963015317917,0.0013252297649160028,0,-0.07421287149190903,0,0,0.001060183858498931,0.12483664602041245,0,-0.028624963015317917,-0.0018553216941654682,0,0.001060183858498931,0.009276608936488628,0,0,-0.0007951378938741982,0,0,0.002915505552664399,0,-0.021203676238656044,-0.001060183858498931,0,0.02226386032998562,0.012457160279154778,0,-0.012722206301987171,-0.0005300919292494655,0,0.006361103150993586,0.003445597365498543,0,0,-0.006361103150993586,0,0.013782389461994171,0.028624963015317917,0,-0.003180551575496793,-0.002120367716997862,0,0,0.006626149173825979,0,-0.09329617768526077,-0.046913135796785355,0,0.001060183858498931,0.004770827479660511,0,0,-0.005300919059664011,0,0.008481470867991447,0.0007951378938741982,0,-0.001060183858498931,-0.03790157288312912,0,0,0,0,-0.010601838119328022,-0.013252298347651958,0,0.010601838119328022,0.001060183858498931,0,-0.024384228512644768,-0.001060183858498931,0,0.03604625165462494,0.006891194730997086,0,0,-0.005300919059664011,0,0.6583741903305054,0.0015902757877483964,0,-0.002120367716997862,-0.004240735433995724,0,0.009541654959321022,0.0013252297649160028,0,0,-0.0026504595298320055,0,0.001060183858498931,0.0015902757877483964,0,-0.011662022210657597,-0.0037106433883309364,0,0.002120367716997862,0.014577527530491352,0,0,-0.040817078202962875,0,0.002120367716997862,0.012457160279154778,0,-0.003180551575496793,-0.014577527530491352,0,0,0.001060183858498931,0,-0.008481470867991447,-0.00026504596462473273,0,0.001060183858498931,0.0005300919292494655,0,-0.006361103150993586,-0.010601838119328022,0,0,0.01113193016499281,0,0,-0.006626149173825979,0,0,0.007421286776661873,0,-0.03392588347196579,-0.00026504596462473273,0,0,0.006891194730997086,0,-0.001060183858498931,-0.0018553216941654682,0,0.008481470867991447,0.005035873036831617,0,-0.003180551575496793,-0.046913135796785355,0,0.001060183858498931,0.0007951378938741982,0,-0.01802312582731247,0,0,0.013782389461994171,0.01802312582731247,0,-0.06361103057861328,-0.0015902757877483964,0,0.006361103150993586,0.002915505552664399,0,-0.002120367716997862,-0.005300919059664011,0,0.001060183858498931,0.005300919059664011,0,-0.001060183858498931,-0.014842573553323746,0,0.001060183858498931,0.01828817091882229,0,0,-0.0177580788731575,0,0.001060183858498931,0.3291870951652527,0,0,-0.006891194730997086,0,0.4993465840816498,0.004770827479660511,0,-0.005300919059664011,-0.00026504596462473273,0,0.003180551575496793,0.00397568941116333,0,-0.001060183858498931,-0.006626149173825979,0,0.011662022210657597,0.0018553216941654682,0,-0.002120367716997862,-0.00026504596462473273,0,0.009541654959321022,0.001060183858498931,0,0,-0.002915505552664399,0,0.011662022210657597,0,0,-0.025444412603974342,-0.006096057128161192,0,0.004240735433995724,0.0076863327994942665,0,0,-0.02173376828432083,0,0.003180551575496793,0.00026504596462473273,0,-0.18765254318714142,-0.007156240753829479,0,0.019083309918642044,0.00026504596462473273,0,0,-0.016962941735982895,0,0.001060183858498931,0,0,-0.009541654959321022,-0.005831011105328798,0,0,0.009806700050830841,0,-0.006361103150993586,-0.004770827479660511,0,0.004240735433995724,0.002120367716997862,0,-0.002120367716997862,-0.009011562913656235,0,0,0.010336792096495628,0,-0.014842573553323746,-0.03260065242648125,0,0,0.003180551575496793,0,-0.014842573553323746,-0.024384228512644768,0],"text":"rem roguish v0.1 - apr 2022\nrem by spiro \nrem for the not a wizard game challenge\n\npoke 53280,0:poke53281,0\nx=rnd(-ti)\npl=64:en=38:wl=35:dr=122\nbx=38:by=16: rem board x,y size\ndim b(bx,by)\n\nrem set up board\n\tprint\"{clr}{white}                roguish\":print\n\n\tfor y=1 to by:for x=1 to bx\n\tread d\n\tif d=0 then b(x,y)=0\n\tif d=1 then b(x,y)=wl\n\tnext:next\n\n40 rem escape door location\n\tdx=int(rnd(1)*bx+1)\n\tdy=int(rnd(1)*by+1)\n\tif b(dx,dy)<>0 then 40\n\n\n50 rem enemy start location\n\tsx=int(rnd(1)*bx+1)\n\tsy=int(rnd(1)*by+1)\n\tif b(sx,sy)<>0 then 50\n\n60 rem player start location\n\tyx=int(rnd(1)*bx+1)\n\tyy=int(rnd(1)*by+1)\n\tif b(yx,yy)<>0 then 60\n\n70 rem print out board\n\tfor y=1 to by\n\tprint \" \";\n\tfor x=1 to bx  \n\tif b(x,y)=0 then print \"{blue}.\";\n\tif b(x,y)=wl then print \"{brown}\"chr$(b(x,y));\n\tnext x\n\tprint\n\tnext y\n\tb(yx,yy)=0\n\tm$=\"{white}reach the exit (\"+chr$(dr)+\") for freedom\":gosub 260\n\n\tgosub 200 : rem place player\n\tgosub 210 : rem place enemy\n\tgosub 220 : rem place door\n\n100 rem ** main loop\n\tget d$:if d$=\"\" then 100\n\n\tzc$=\"{blue}.\"\n\tb(yx,yy)=0\n\tzy=yy:zx=yx:gosub 250\n\tzy=sy:zx=sx:gosub 250\n\n\trem update player coords\n\tyy=yy-((d$=\"s\" or d$=chr$(17)) and yy<>by and b(yx,yy+1)<>wl)\n\tyy=yy+((d$=\"n\" or d$=chr$(145)) and yy<>1 and b(yx,yy-1)<>wl)\n\tyx=yx-((d$=\"e\" or d$=chr$(29)) and yx<>bx and b(yx+1,yy)<>wl)\n\tyx=yx+((d$=\"w\" or d$=chr$(157)) and yx<>1 and b(yx-1,yy)<>wl)\n\n\tif b(yx,yy)=dr then 520 : rem player safe, reached door\n\tif b(yx,yy)=en then 500 : rem player walked into enemy\n\n\tb(yx,yy)=pl\n\tb(sx,sy)=0\n\n\trem update enemy coords\n\tnx=sx+sgn(yx-sx)\n\tny=sy+sgn(yy-sy)\n\n\tif b(nx,ny)<>wl then sx=nx:sy=ny:goto 180\n\tif b(sx,ny)<>wl then sy=ny:goto 180\n\tif b(nx,sy)<>wl then sx=nx:goto 180\n\n180 rem got new enemy coords\n\tif b(sx,sy)=pl then 500\n\tb(sx,sy)=en\n\tgosub 200\n\tgosub 210\n\n\tgoto 100\n\n\n200 rem place player on board\n\tzc$=\"{yellow}\"+chr$(pl)\n\tzy=yy:zx=yx:gosub 250\n\treturn\n\n210 rem place enemy on board\n\tzc$=\"{green}\"+chr$(en)\n\tzy=sy:zx=sx:gosub 250\n\treturn\n\n220 rem place door on board\n\tzc$=\"{RVSON}{yellow}\"+chr$(dr)+\"{RVSOFF}\"\n\tzy=dy:zx=dx:gosub 250\n\tb(dx,dy)=dr\n\treturn\n\n\n250 rem update board\n\tprint \"{home}\"\n\tfor y=1 to zy : print \"{down}\"; :next\n\tprint tab(zx)zc$;\n\treturn\n\n260 rem print message\n\tprint\"{home}\":for y=1 to by+3+zs:print \"{down}\";:next\n\tprint \"{yellow}\"m$\n\treturn\n\n500 rem caught!\n\tzc$=\"{RVSON}{red}\"+chr$(en)+\"{RVSOFF}\"\n\tzx=sx:zy=sy:gosub 250\n\tm$=\"you've been caught by the goblin!\":gosub 260\n\tgoto 800\n\n\n520 rem escaped!\n\tzc$=\"{RVSON}{yellow}\"+chr$(pl)+\"{RVSOFF}\"\n\tzx=dx:zy=dy:gosub 250\n\tgosub 210\n\tm$=\"you've reached the exit and escaped!\":gosub 260\n\n800 zs=2:m$=\"{yellow}would you like to play again? (y/n)\":gosub 260\n810 get k$:if k$=\"\" then 810\nif k$=\"y\" then run\nend\n\nrem level one map\n\ndA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\ndA 1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\ndA 1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\ndA 1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\ndA 1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\ndA 1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\ndA 1,0,0,0,0,0,0,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\ndA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1\ndA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\ndA 1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\ndA 1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1\ndA 1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\ndA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\ndA 1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\ndA 1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\ndA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\n\n","sourcePath":"external/github.com/spiroharvey_c64/TypeIn/ROGUISH/roguish.bas","sourceMtimeMs":1674155094000,"sourceUrl":"https://github.com/spiroharvey/c64/blob/main/ROGUISH/roguish.bas","sourceRepoUrl":"https://github.com/spiroharvey/c64","license":"UNKNOWN","attribution":"Source: spiroharvey/c64 (License unknown)"},{"name":"github.com/spiroharvey_c64/Wordle/wordle_v12.bas","language":"basic","vector":[0.01149726938456297,0.005597354844212532,0,-0.009681911207735538,-0.007563993334770203,0,0.02480989694595337,0.008320392109453678,0,-0.045383960008621216,-0.008320392109453678,0,0.01149726938456297,0.01210238877683878,0,-0.014522867277264595,-0.017245903611183167,0,0.02844061329960823,0.015581825748085976,0,-0.007866553030908108,-0.013010067865252495,0,0.008471672423183918,0.019817661494016647,0,-0.0072614336386322975,-0.009076791815459728,0,0.016338225454092026,0.2228352427482605,0,-0.009681911207735538,-0.017851023003458977,0,0.010892149992287159,0.006202474236488342,0,-0.015127986669540405,-0.0072614336386322975,0,0.03388668969273567,0.00741271348670125,0,-0.009076791815459728,-0.009681911207735538,0,0.0072614336386322975,0.010287030600011349,0,-0.010892149992287159,-0.005748634692281485,0,0.02783549390733242,0.013010067865252495,0,-0.021784299984574318,-0.017699744552373886,0,0.008471672423183918,0.011345990002155304,0,-0.016338225454092026,-0.009984470903873444,0,0.12646996974945068,0.015581825748085976,0,-0.010892149992287159,-0.01270750816911459,0,0.02602013573050499,0.00741271348670125,0,-0.007866553030908108,-0.10771126300096512,0,0.015733106061816216,0.007563993334770203,0,-0.019363822415471077,-0.009379351511597633,0,0.015733106061816216,0.0066563137806952,0,-0.05204027146100998,-0.015733106061816216,0,0.0066563137806952,0.01210238877683878,0,-0.01210238877683878,-0.01270750816911459,0,0.009076791815459728,0.008169112727046013,0,-0.015733106061816216,-0.007866553030908108,0,0.15491057932376862,0.01391774695366621,0,-0.008471672423183918,-0.05067875236272812,0,0.01149726938456297,0.009379351511597633,0,-0.01391774695366621,-0.01210238877683878,0,0.0133126275613904,0.01527926605194807,0,-0.0133126275613904,-0.006505033932626247,0,0.007866553030908108,0.0066563137806952,0,-0.03207132965326309,-0.005597354844212532,0,0.13917747139930725,0.012404948472976685,0,-0.05264539271593094,-0.009076791815459728,0,0.0133126275613904,0.008925511501729488,0,-0.02844061329960823,-0.012556228786706924,0,0.010287030600011349,0.022540699690580368,0,-0.009681911207735538,-0.007563993334770203,0,0.01270750816911459,0.019968941807746887,0,-0.029650853946805,-0.008017832413315773,0,0.019363822415471077,0.015581825748085976,0,-0.008471672423183918,-0.01346390787512064,0,0.014522867277264595,0.006958873476833105,0,-0.01149726938456297,-0.011799829080700874,0,0.00605119438841939,0.06626057624816895,0,-0.01270750816911459,-0.007110153324902058,0,0.01210238877683878,0.017699744552373886,0,-0.07079897820949554,-0.011194709688425064,0,0.01391774695366621,0.011194709688425064,0,-0.009681911207735538,-0.01210238877683878,0,0.01391774695366621,0.01391774695366621,0,-0.017548464238643646,-0.03116365149617195,0,0.014522867277264595,0.005748634692281485,0,-0.03509692847728729,-0.0562761090695858,0,0.03449180722236633,0.007563993334770203,0,-0.01210238877683878,-0.01149726938456297,0,0.03449180722236633,0.07942193001508713,0,-0.01210238877683878,-0.009984470903873444,0,0.7606351375579834,0.008320392109453678,0,-0.05083003267645836,-0.01149726938456297,0,0.01149726938456297,0.009530630894005299,0,-0.008471672423183918,-0.009076791815459728,0,0.007866553030908108,0.010135751217603683,0,-0.009681911207735538,-0.02738165482878685,0,0.016943344846367836,0.07246305793523788,0,-0.009681911207735538,-0.02995341271162033,0,0.014522867277264595,0.013766467571258545,0,-0.01270750816911459,-0.016186945140361786,0,0.018758703023195267,0.0072614336386322975,0,-0.020574061200022697,-0.0066563137806952,0,0.01391774695366621,0.010438310913741589,0,-0.009681911207735538,-0.017245903611183167,0,0.010287030600011349,0.012404948472976685,0,-0.02904573455452919,-0.008017832413315773,0,0.00605119438841939,0.015733106061816216,0,-0.008471672423183918,-0.008017832413315773,0,0.010892149992287159,0.004840955603867769,0,-0.016943344846367836,-0.009076791815459728,0,0.02783549390733242,0.013010067865252495,0,-0.014522867277264595,-0.040845561772584915,0,0.009681911207735538,0.009076791815459728,0,-0.01210238877683878,-0.008925511501729488,0,0.00605119438841939,0.038576364517211914,0,-0.11194709688425064,-0.01149726938456297,0,0.014522867277264595,0.013766467571258545,0,-0.019363822415471077,-0.019515102729201317,0,0.004235836211591959,0.021179180592298508,0,-0.010287030600011349,-0.010892149992287159,0,0.009681911207735538,0.021179180592298508,0,-0.007866553030908108,-0.019061261788010597,0,0.016943344846367836,0.38198164105415344,0,-0.016943344846367836,-0.02844061329960823,0,0.01391774695366621,0.008017832413315773,0,-0.019968941807746887,-0.008169112727046013,0,0.022389419376850128,0.042660921812057495,0,-0.01210238877683878,-0.006958873476833105,0,0.0653529018163681,0.011345990002155304,0,-0.010287030600011349,-0.008320392109453678,0,0.0066563137806952,0.010589590296149254,0,-0.010287030600011349,-0.009681911207735538,0,0.010892149992287159,0.011345990002155304,0,-0.014522867277264595,-0.018304863944649696,0,0.01210238877683878,0.041753243654966354,0,-0.0066563137806952,-0.018002303317189217,0,0.018758703023195267,0.008471672423183918,0,-0.02904573455452919,-0.021633019670844078,0,0.0133126275613904,0.005597354844212532,0,-0.009681911207735538,-0.0066563137806952,0,0.02420477755367756,0.008622951805591583,0,-0.020574061200022697,-0.015884386375546455,0,0.009681911207735538,0.018758703023195267,0,-0.2008996605873108,-0.009379351511597633,0,0.01210238877683878,0.008471672423183918,0,-0.014522867277264595,-0.008925511501729488,0,0.007866553030908108,0.004538395907729864,0,-0.02299453876912594,-0.05915042757987976,0,0.010287030600011349,0.010287030600011349,0,-0.018153583630919456,-0.02738165482878685,0],"text":"\n\n;wordle_v12.prg ==0801==\n   10 print\"{clr}\"\n   20 poke 53280,0 :poke 53281,0\n   30 a$=\"UCI\"\n   31 b$=\"B B\"\n   32 c$=\"JCK\"\n   33 p$=\"{red}Z\" : at=0\n   35 dim ga$(5)\n   40 read nw:dim wd$(nw)\n   45 ds=peek(66)*256+peek(65)+6\n   50 printtab(15)\"{yel}w o r d l e         {cyn}v1.2\"\n   51 print\"{gry3}DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\"\n   55 print\" {pur}c=64 conversion by spiro harvey, 2022\"\n   56 print\"         {gry1}original by josh wardle\"\n   57 print\"    {lgrn}special thanks to dan sanderson\"\n   59 print\"{gry3}DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\"\n   60 gosub 2000 : rem load data\n   62 print\"{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}                                {up}{up}{up}\"\n   65 printtab(15);\"{down}{wht}how to play\"\n   70 print\" {down}{gry3}guess the {yel}wordle{gry3} in 6 tries.\"\n   80 print\" {down}after each guess, the colour of the\"\n   90 print\" tiles will change to show how close\"\n  100 print\" your guess was to the word.\"\n  110 print\"{down}DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\"\n  111 print\" {cyn}press {rvon}return{rvof} to start; {rvon}space{rvof} for help\"\n  112 get k$:if k$=\"\" then 112\n  113 if k$=chr$(13) then goto 300\n  114 if k$=\" \" then print\"{up}                                       {up}\":goto 120\n  115 goto 112\n  120 print\"    {lgrn}\";a$;\"{wht}\";a$;a$;a$;a$\n  125 print\"    {lgrn}BwB{wht}BeBBaBBrBByB\"\n  130 print\"    {lgrn}\";c$;\"{wht}\";c$;c$;c$;c$\n  140 print\" {gry3}the letter {lgrn}w{gry3} is in the word and in\"\n  145 print\" the correct spot.\"\n  150 print\"    {wht}\";a$;a$;\"{brn}\";a$;\"{wht}\";a$;a$\n  155 print\"    {wht}BpBBiB{brn}BlB{wht}BoBBtB\"\n  160 print\"    {wht}\";c$;c$;\"{brn}\";c$;\"{wht}\";c$;c$\n  165 print\" {gry3}the letter {brn}l{gry3} is in the word, but at\"\n  170 print\" wrong spot.\"\n  180 gosub 250\n  200 print\"{wht}    \";a$;a$;a$;\"{gry1}\";a$;\"{wht}\";a$\n  205 print\"    {wht}BvBBaBBgB{gry1}BuB{wht}BeB          \"\n  210 print\"    {wht}\";c$;c$;c$;\"{gry1}\";c$;\"{wht}\";c$\n  215 print\" {gry3}the letter {gry1}u{gry3} is not in the word.\"\n  220 gosub 250\n  230 goto 300\n  250 rem ------------- screen pause ---\n  255 print\"        {down}{lred}press {rvon}enter{rvof} to continue...{gry3}\"\n  260 get k$:if k$=\"\" then 9010\n  265 if k$<>chr$(13) then 9010\n  270 print\"{up}                                      {up}{up}\"\n  275 return\n  300 rem -------------- game screen ---\n  305 r=int(rnd(1)*nw)\n  310 pw$=wd$(r)\n  315 print\"{clr}\"\n  320 printtab(15)\"{yel}w o r d l e\"\n  325 print\"{wht}\"\n  330 for c=1 to 6\n  335 printtab(13);a$;a$;a$;a$;a$\n  340 printtab(13);b$;b$;b$;b$;b$\n  345 printtab(13);c$;c$;c$;c$;c$\n  350 next\n  400 rem ---------------- main loop ---\n  405 for at=1 to 6 : rem attempt num\n  410 for i=1 to 5:ga$(i)=\"\":next\n  415 gs$=\"\"\n  420 gosub 680 : rem update line\n  430 gosub 660 : rem hilight line\n  440 gosub 600 : rem read guess\n  450 next\n  460 rem ----------------- end game ---\n  470 printtab(7);\"{yel}sorry, the word was {lred}\"pw$\"{yel}.\"\n  480 goto 530\n  500 rem --- you win!\n  510 print\"{home}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}\";\n  520 printtab(12);\"{cyn}huzzah!! you win!{gry3}\"\n  530 print\"would you like to play again? (y/n)\";\n  540 get k$\n  550 if k$=\"n\" then end\n  560 if k$=\"y\" then goto 300\n  570 goto 540\n  600 rem --------------- read guess ---\n  605 c=0 : rem char count\n  610 get k$ : if k$=\"\" then 610\n  620 if k$=chr$(20) and c>0 then goto 700\n  630 if k$=chr$(13) and c>=4 then goto 800: return\n  640 if k$>=\"a\" and k$<=\"z\" then goto 750\n  650 goto 610\n  655 return\n  660 rem -------- hilight curr line ---\n  665 poke 1024+(ln*40)+11,90\n  670 poke 55296+(ln*40)+11,10\n  675 return\n  680 rem -------------- update line ---\n  685 poke 1024+(ln*40)+11,32\n  690 ln=(at*3)+1\n  695 return\n  700 rem ---------------- del char ---\n  705 x=c-1\n  710 gs$=left$(gs$,x)\n  715 poke 1024+(ln*40)+(x*3)+14,32\n  720 c=x\n  725 goto 610 : rem next guess\n  750 rem ------------- accept char ---\n  755 if c>=5 then goto 610\n  760 gs$=gs$+k$\n  765 poke 1024+(ln*40)+(c*3)+14,asc(k$)-64\n  770 c=c+1\n  775 goto 610\n  800 rem ---------------- find word ---\n  801 rem find gs$ in data quickly\n  802 rem r = result:-1 if found, 0 if not\n  803 rem expects nw=# of words, ds=addr of first word\n  804 if gs$=pw$ then goto 950\n  805 sc$=\"DMBN\" : sc=1\n  808 lo=0:hi=nw\n  810 i=int((hi-lo)/2)+lo\n  815 gosub 850\n  817 gosub 880\n  818 if sc=5 then sc=1\n  820 if gs$=w$ then r=-1:goto 950\n  825 if gs$<w$ then 840\n  830 if lo=i then r=0:goto 900\n  835 lo=i:goto 810\n  840 if hi=i then r=0:goto 900\n  845 hi=i:goto 810\n  850 rem --- set w$ to the i-th word ---\n  855 ia=ds+36*int(i/5)+(i-int(i/5)*5)*6\n  860 if i=int(i/5)*5 then ia=ia-6\n  865 poke 66,int(ia/256):poke 65,ia-(int(ia/256)*256)\n  870 read w$\n  875 return\n  880 rem --- spinner\n  882 print\"{home}\";\n  885 zm=-1\n  890 printtab(39);\"{yel}\";mid$(sc$,sc,1);\n  895 sc=sc+1\n  897 return\n  900 rem --- word not in dict\n  901 print\"{home}\";tab(39)\" \"\n  905 print\"{home}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}\";\n  910 printtab(10)\"word not in dictionary!\"\n  915 printtab(10)\"press a key to continue\"\n  920 get k$ : if k$=\"\" then goto 920\n  925 print\"{home}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}\";\n  930 printtab(10)\"                       \"\n  935 printtab(10)\"                       \"\n  940 goto 610\n  950 rem --- solve\n  951 print\"{home}\";tab(39)\" \"\n  955 for z=1 to 5\n  960 for zb=1 to 5\n  965 if mid$(gs$,z,1)=mid$(pw$,zb,1) then ga$(z)=\"-\"\n  970 next zb\n  975 if mid$(gs$,z,1)=mid$(pw$,z,1) then ga$(z)=\"+\"\n  980 next z\n 1000 rem --- solve colours\n 1005 for z=1 to 5\n 1010 if ga$(z)=\"+\" then cl=13:gosub 1100\n 1020 if ga$(z)=\"-\" then cl=9:gosub 1100\n 1030 if ga$(z)=\"\"  then cl=11:gosub 1100\n 1040 next\n 1050 if gs$=pw$ then goto 500\n 1060 goto 655\n 1100 rem ----------- hilight boxes ---\n 1105 for c=1 to 3\n 1110 poke 55296+((ln-1)*40)+(z*3)+9+c,cl\n 1115 next\n 1120 for c=1 to 3\n 1125 poke 55296+(ln*40)+(z*3)+9+c,cl\n 1130 next\n 1135 for c=1 to 3\n 1140 poke 55296+((ln+1)*40)+(z*3)+9+c,cl\n 1145 next\n 1150 return\n 2000 rem ------------- data loader ---\n 2010 printtab(12)\"{down}{down}{cyn}loading data...\";\n 2020 c=1\n 2030 for w=0 to nw\n 2040 read wd$(w)\n 2045 if c=1 then print\"{left}{left}{left}{brn}.{cyn}..\";\n 2050 if c=2 then print\"{left}{left}{left}{cyn}.{brn}.{cyn}.\";\n 2055 if c=3 then print\"{left}{left}{left}{cyn}..{brn}.\";\n 2060 if c=4 then c=0\n 2065 c=c+1\n 2070 next\n 2099 return\n 9999 data 1510\n10000 data abbey,abbot,abhor,abide,abode\n10005 data abort,about,above,abyss,acorn\n10010 data actor,adept,admin,adopt,adore\n10015 data adorn,adult,afire,afoot,afoul\n10020 data after,again,agony,agree,ahead\n10025 data aided,aisle,alarm,album,alien\n10030 data align,allow,aloft,aloha,amaze\n10035 data amuse,angel,anvil,apple,argon\n10040 data arson,audio,audit,avoid,awake\n10045 data bacon,badge,bagel,baggy,baker\n10050 data balls,banjo,barge,basic,basin\n10055 data basis,batch,bawdy,beach,beast\n10060 data beats,began,begat,belch,belly\n10065 data below,beret,berry,bevvy,bigot\n10070 data biker,bimbo,binge,black,blade\n10075 data blame,bland,blank,blast,blaze\n10080 data blood,bloom,blown,bluff,blunt\n10085 data blurb,blurt,blush,board,bogus\n10090 data boner,boobs,booth,bored,bossy\n10095 data bound,brace,braid,brain,brake\n10100 data brand,brash,brass,brave,brawl\n10105 data bread,break,brick,bride,brief\n10110 data brook,brute,buggy,bulge,bunch\n10115 data bunny,burly,butch,buxom,bylaw\n10120 data cabal,cabin,cable,cache,cadet\n10125 data camel,canal,candy,canoe,canon\n10130 data caper,carat,carry,carve,catch\n10135 data cater,caulk,cause,cease,cedar\n10140 data cello,chair,chalk,champ,chant\n10145 data chaos,charm,chase,chasm,cheap\n10150 data cheat,check,cheek,cheer,chick\n10155 data chief,child,chime,chirp,choke\n10160 data chord,chore,chunk,chute,civic\n10165 data civil,clamp,clash,clasp,class\n10170 data claws,clean,clear,click,cliff\n10175 data climb,cloak,clock,clone,cloth\n10180 data cloud,clown,clump,coach,coast\n10185 data cobra,codex,colon,comic,copse\n10190 data coral,couch,cough,could,count\n10195 data crack,craft,cramp,crane,crank\n10200 data crash,crass,crate,crave,crawl\n10205 data cream,creek,creep,crime,crisp\n10210 data croak,croft,cross,crowd,crown\n10215 data crude,cruel,crumb,crush,crust\n10220 data crypt,curio,cycle,cynic,daily\n10225 data dairy,daisy,dance,dandy,datum\n10230 data daunt,death,debit,debug,debut\n10235 data decal,decay,decor,decoy,delay\n10240 data delta,denim,dense,depot,depth\n10245 data devil,diary,digit,dildo,diner\n10250 data dirge,dirty,disco,ditch,ditto\n10255 data dodge,dogma,donor,doubt,dough\n10260 data douse,dozen,draft,drain,drama\n10265 data drank,drape,drawl,drawn,dread\n10270 data drift,drill,drink,drive,drone\n10275 data drool,droop,drove,druid,dwarf\n10280 data dwell,eager,eagle,early,earth\n10285 data easel,ebony,edict,edify,eerie\n10290 data eight,eject,elbow,elder,elect\n10295 data elite,email,embed,ember,empty\n10300 data enact,enema,enemy,enjoy,enter\n10305 data entry,envoy,epoch,epoxy,equal\n10310 data equip,erase,erect,error,erupt\n10315 data essay,evade,event,evict,evoke\n10320 data exact,exile,exist,fable,facet\n10325 data faint,fairy,false,fancy,fanny\n10330 data fatal,feast,feign,felon,fence\n10335 data feral,ferry,fetch,fever,fewer\n10340 data fight,filth,final,flail,flair\n10345 data flake,flame,flank,flare,flash\n10350 data flask,fleet,flesh,flint,flirt\n10355 data float,flock,flood,floor,flour\n10360 data fluff,fluid,fluke,flush,flute\n10365 data focus,folio,foray,force,forge\n10370 data forgo,forth,found,frail,frame\n10375 data fraud,freak,fresh,frill,frisk\n10380 data frock,frost,froth,frown,froze\n10385 data fruit,fudge,fungi,fussy,futon\n10390 data gable,gamma,gamut,gaudy,gauge\n10395 data gaunt,gavel,geese,genie,genre\n10400 data ghost,ghoul,giant,gizmo,glade\n10405 data gland,glass,glaze,gleam,glean\n10410 data glint,gloat,globe,gloom,gloss\n10415 data glove,glyph,gnash,gnome,goose\n10420 data graft,grail,grain,grand,graph\n10425 data grasp,grass,grate,grave,gravy\n10430 data graze,great,greed,green,greet\n10435 data grief,grill,grime,grind,groan\n10440 data groom,grunt,guard,guess,guest\n10445 data guide,guild,guile,guilt,guise\n10450 data gypsy,habit,haiku,hairy,happy\n10455 data hardy,harem,harpy,harsh,haste\n10460 data hasty,haunt,haven,havoc,heady\n10465 data heard,heart,heave,heavy,hedge\n10470 data hefty,heist,hiker,hinge,hippo\n10475 data hippy,hitch,hoard,hobby,hoist\n10480 data honey,horde,horns,horny,horse\n10485 data hotel,hound,house,hovel,hover\n10490 data howdy,human,humid,hunch,hurry\n10495 data hydro,hyena,ideal,idiom,idiot\n10500 data igloo,image,imbue,impel,imply\n10505 data inane,incur,index,indie,inept\n10510 data inert,infer,ingot,inked,inlay\n10515 data inlet,inner,inset,irate,irony\n10520 data issue,ivory,jaded,jaunt,jeans\n10525 data jelly,jetty,jewel,jiffy,joint\n10530 data joist,joker,jolly,joule,joust\n10535 data jowls,judge,juice,jumbo,juror\n10540 data kanji,karat,karma,kayak,kebab\n10545 data khaki,kinky,kiosk,klutz,knack\n10550 data knave,knead,kneed,kneel,knell\n10555 data knife,knock,knoll,known,koala\n10560 data krone,kudos,label,labia,laces\n10565 data laden,ladle,lager,laird,lamer\n10570 data lance,lanky,lapel,lapse,large\n10575 data larva,laser,latch,later,latex\n10580 data lathe,latte,laugh,layer,leaky\n10585 data learn,lease,leash,least,leave\n10590 data ledge,leech,leery,legal,legit\n10595 data lemon,lemur,leper,levee,level\n10600 data lever,libel,liege,light,lilac\n10605 data limbo,limit,linen,lingo,lithe\n10610 data liven,liver,livid,llama,loamy\n10615 data loath,lobby,local,locus,lodge\n10620 data logic,lolly,loner,loose,lorry\n10625 data loser,lotus,louse,lover,lower\n10630 data lowly,loyal,lucid,lucky,lumen\n10635 data lunar,lunch,lunge,lupus,lurch\n10640 data lurid,lynch,lyric,macho,macro\n10645 data madam,mafia,magic,magma,magus\n10650 data maize,major,manga,mange,mango\n10655 data mania,manic,manor,manse,manta\n10660 data marry,marsh,mason,match,matte\n10665 data maven,maxim,maybe,mayor,meant\n10670 data mecca,medal,media,medic,melee\n10675 data melon,mercy,merge,merit,merry\n10680 data messy,metal,metro,micro,might\n10685 data mimic,mince,minor,minus,mirth\n10690 data modal,model,modem,moggy,mogul\n10695 data moist,money,mooch,moody,moose\n10700 data moron,morph,motel,motif,motor\n10705 data motto,mound,mount,mourn,mouse\n10710 data mouth,movie,mucus,muddy,mulch\n10715 data mural,music,nacho,naive,naked\n10720 data nanny,nappy,nasal,nasty,navel\n10725 data nerve,never,niche,niece,night\n10730 data ninja,nitro,nodal,noise,noisy\n10735 data nomad,noose,north,notch,nurse\n10740 data nutty,nylon,nymph,oaken,oasis\n10745 data occur,ocean,octal,octet,offal\n10750 data offer,often,omega,oozed,opera\n10755 data opium,optic,orate,orbit,order\n10760 data organ,other,otter,ought,ounce\n10765 data ovary,overt,owner,oxide,ozone\n10770 data pagan,pager,paint,paleo,panda\n10775 data panel,panic,pansy,pants,paper\n10780 data party,pasta,paste,patch,patio\n10785 data pause,peace,peach,pearl,pedal\n10790 data penal,pence,penis,perch,peril\n10795 data petal,petty,phase,phial,phone\n10800 data phony,photo,piano,piece,pilot\n10805 data pinch,pinup,pique,pitch,pithy\n10810 data pixel,pizza,place,plaid,plain\n10815 data plait,plane,plank,plant,plate\n10820 data plaza,plead,pleas,plonk,plumb\n10825 data plume,plump,plush,poach,point\n10830 data poise,poker,pokes,polar,polio\n10835 data polka,polyp,pooch,porch,pores\n10840 data posse,potty,pouch,pound,power\n10845 data prank,prawn,preen,press,price\n10850 data prick,pride,prime,print,prior\n10855 data prism,privy,prize,probe,prone\n10860 data prong,proof,proud,prove,prowl\n10865 data proxy,prude,pulse,punch,pupil\n10870 data puree,purge,purse,pushy,pussy\n10875 data putty,pygmy,pylon,quake,qualm\n10880 data quark,quart,quash,quasi,queer\n10885 data query,quest,queue,quick,quiet\n10890 data quire,quirk,quirt,quite,quota\n10895 data quote,radar,radio,rainy,ranch\n10900 data randy,range,rapid,ratio,raven\n10905 data razor,reach,react,realm,rebel\n10910 data refer,regal,rehab,reign,reins\n10915 data relax,relay,relic,remit,remix\n10920 data reply,resin,retro,retry,reuse\n10925 data revel,revue,rhino,rhyme,rider\n10930 data ridge,right,rigid,rigor,rinse\n10935 data risky,rival,roach,roast,robed\n10940 data robin,robot,rocks,rocky,rodeo\n10945 data roger,rogue,roman,rotor,rouge\n10950 data rough,round,rouse,roust,route\n10955 data royal,ruble,ruddy,rugby,ruins\n10960 data ruler,runic,runny,rural,rusty\n10965 data sable,saint,salad,salon,salsa\n10970 data salty,salve,salvo,samba,sandy\n10975 data sarge,satay,sated,satin,satyr\n10980 data sauce,saucy,sauna,saute,savvy\n10985 data scale,scalp,scaly,scamp,scant\n10990 data scare,scarf,scary,scene,scent\n10995 data scoff,scold,scone,scoop,scoot\n11000 data scope,score,scorn,scour,scout\n11005 data scowl,scram,scrap,screw,scrum\n11010 data scuba,sedan,semen,sense,sepia\n11015 data serif,serum,serve,servo,setup\n11020 data seven,sever,sewer,shack,shade\n11025 data shady,shaft,shake,shaky,shale\n11030 data shall,shalt,shame,shank,shape\n11035 data shard,share,shark,sharp,shave\n11040 data shawl,sheaf,shear,sheen,sheep\n11045 data sheer,sheet,shelf,shell,shine\n11050 data shiny,shire,shirt,shoal,shock\n11055 data shoes,shoot,shore,short,shout\n11060 data shove,shred,shrew,shrub,shrug\n11065 data shunt,siege,sieve,sight,sigma\n11070 data silky,silly,since,sinew,singe\n11075 data sinus,siren,sixty,skate,skein\n11080 data skint,skirt,skulk,skull,skunk\n11085 data slack,slain,slang,slant,slash\n11090 data slate,sleek,sleep,sleet,slept\n11095 data slice,slick,slide,slime,sling\n11100 data sloop,slope,slosh,sloth,slump\n11105 data slung,slush,sluts,smack,small\n11110 data smart,smash,smear,smell,smile\n11115 data smirk,smite,smith,smock,smoke\n11120 data snack,snail,snake,snare,sneak\n11125 data sneer,snipe,snoop,snore,snort\n11130 data snout,solar,solid,solve,sonar\n11135 data sonic,sooth,sorry,sound,space\n11140 data spade,spank,spare,spark,spasm\n11145 data spawn,speak,spear,speck,speed\n11150 data spell,spend,spent,sperm,spice\n11155 data spicy,spiel,spill,spine,spire\n11160 data spite,spoil,spoke,spoof,spook\n11165 data spool,spoon,spore,sport,spout\n11170 data spray,spree,sprig,spunk,spurn\n11175 data spurt,squad,squat,squid,stack\n11180 data staff,stage,stain,stair,stake\n11185 data stale,stalk,stall,stamp,stand\n11190 data stare,stark,start,stash,state\n11195 data steak,steal,steam,steed,steel\n11200 data steep,steer,stent,stern,stick\n11205 data stiff,still,stilt,sting,stink\n11210 data stint,stoat,stock,stoic,stoke\n11215 data stole,stomp,stone,stony,stood\n11220 data stool,stoop,store,stork,storm\n11225 data story,stout,stove,strap,straw\n11230 data stray,strum,strut,stuck,study\n11235 data stuff,stump,stung,stunt,style\n11240 data suave,suede,sugar,suite,sunny\n11245 data super,surge,surly,sushi,swamp\n11250 data swarm,swear,sweat,swede,sweep\n11255 data sweet,swell,swept,swift,swill\n11260 data swine,swing,swipe,swirl,swish\n11265 data swoon,swoop,sword,swore,sworn\n11270 data synth,syrup,taboo,taffy,taint\n11275 data taken,talon,tango,tangy,tapas\n11280 data tardy,taste,tasty,taunt,teach\n11285 data tease,teddy,tempo,tempt,tenet\n11290 data tenor,tense,tenth,tepid,terse\n11295 data theft,their,theme,there,these\n11300 data theta,thick,thief,thigh,thing\n11305 data think,third,thong,thorn,those\n11310 data three,threw,throb,throe,throw\n11315 data thumb,thyme,tiara,tibia,tidal\n11320 data tiger,tight,timid,titan,tithe\n11325 data title,titty,toast,today,toner\n11330 data tongs,tonic,tonne,tools,tooth\n11335 data topaz,topic,torch,torso,total\n11340 data touch,tough,towel,tower,toxic\n11345 data toxin,trace,track,tract,trade\n11350 data trail,train,trait,tramp,trawl\n11355 data tread,treat,trend,tress,triad\n11360 data trial,tribe,troll,trout,trove\n11365 data truce,truck,trunk,truss,trust\n11370 data truth,tryst,tulip,tuner,tunic\n11375 data turbo,turds,tutor,tweak,tweed\n11380 data twice,twine,twist,udder,ulcer\n11385 data ultra,uncap,uncle,uncut,under\n11390 data undue,unify,union,unite,unlit\n11395 data untie,until,unzip,upper,upset\n11400 data urban,usage,usual,usurp,usury\n11405 data utter,vague,valet,valid,value\n11410 data valve,vapid,vault,vaunt,venom\n11415 data venue,verge,verse,verve,vicar\n11420 data video,vigil,vigor,villa,vinyl\n11425 data viola,viper,viral,virus,visit\n11430 data visor,vista,vital,vivid,vixen\n11435 data vocal,vodka,vogue,vomit,vouch\n11440 data vowel,vulva,wafer,wager,wages\n11445 data wagon,waist,waive,waltz,waste\n11450 data watch,water,waxen,weary,weave\n11455 data wedge,weigh,weird,welsh,wench\n11460 data whack,whale,wharf,wheat,wheel\n11465 data whelm,where,which,whiff,while\n11470 data whine,whirl,white,whole,whore\n11475 data whose,widow,width,wield,wince\n11480 data winch,witch,witty,woman,women\n11485 data woods,woody,world,worry,worse\n11490 data worst,worth,would,wound,woven\n11495 data wrath,wreak,wreck,wrest,wring\n11500 data wrist,write,wrong,wurst,xenon\n11505 data yacht,yodel,young,youth,yummy\n11510 data zebra\n\n","sourcePath":"external/github.com/spiroharvey_c64/Wordle/wordle_v12.bas","sourceMtimeMs":1674155094000,"sourceUrl":"https://github.com/spiroharvey/c64/blob/main/wordle_v12.bas","sourceRepoUrl":"https://github.com/spiroharvey/c64","license":"UNKNOWN","attribution":"Source: spiroharvey/c64 (License unknown)"},{"name":"github.com/spiroharvey_c64/Wordle/wordle.bas","language":"basic","vector":[0.011295181699097157,0.005490713287144899,0,-0.00941265095025301,-0.007686998695135117,0,0.01568775251507759,0.007530121132731438,0,-0.045180726796388626,-0.008157631382346153,0,0.013177711516618729,0.009569528512656689,0,-0.01568775251507759,-0.018197791650891304,0,0.0320030152797699,0.012236446142196655,0,-0.007530121132731438,-0.013334589079022408,0,0.007530121132731438,0.019295934587717056,0,-0.00941265095025301,-0.00862826406955719,0,0.010040161199867725,0.22668801248073578,0,-0.010040161199867725,-0.008785140700638294,0,0.008157631382346153,0.006745733320713043,0,-0.012550201267004013,-0.007686998695135117,0,0.028237953782081604,0.007373243570327759,0,-0.008785140700638294,-0.010353916324675083,0,0.007530121132731438,0.010040161199867725,0,-0.010040161199867725,-0.0062751006335020065,0,0.021962853148579597,0.007530121132731438,0,-0.022590363398194313,-0.016942773014307022,0,0.005647590849548578,0.010510793887078762,0,-0.013805221766233444,-0.009883283637464046,0,0.08471386134624481,0.014118976891040802,0,-0.010040161199867725,-0.011765814386308193,0,0.021962853148579597,0.00862826406955719,0,-0.007530121132731438,-0.10855924338102341,0,0.016942773014307022,0.007843876257538795,0,-0.021962853148579597,-0.008942018263041973,0,0.01568775251507759,0.006902610883116722,0,-0.04455321654677391,-0.013491466641426086,0,0.006902610883116722,0.010510793887078762,0,-0.012550201267004013,-0.011608936823904514,0,0.008785140700638294,0.008314508944749832,0,-0.01443273201584816,-0.007530121132731438,0,0.14307229220867157,0.009726406075060368,0,-0.0062751006335020065,-0.04596511274576187,0,0.007530121132731438,0.010197038762271404,0,-0.01443273201584816,-0.012236446142196655,0,0.01443273201584816,0.01725652813911438,0,-0.01443273201584816,-0.006431978195905685,0,0.005647590849548578,0.005961345974355936,0,-0.028237953782081604,-0.006588855758309364,0,0.09600904583930969,0.008314508944749832,0,-0.04329819604754448,-0.009883283637464046,0,0.013177711516618729,0.006431978195905685,0,-0.026355423033237457,-0.011452059261500835,0,0.011922691948711872,0.019766567274928093,0,-0.013177711516618729,-0.007373243570327759,0,0.013177711516618729,0.0189821794629097,0,-0.021962853148579597,-0.007843876257538795,0,0.015060242265462875,0.013177711516618729,0,-0.00941265095025301,-0.014118976891040802,0,0.010667671449482441,0.005490713287144899,0,-0.011295181699097157,-0.010667671449482441,0,0.005020080599933863,0.04580823704600334,0,-0.012550201267004013,-0.006588855758309364,0,0.010667671449482441,0.013334589079022408,0,-0.057103417813777924,-0.010510793887078762,0,0.011922691948711872,0.011608936823904514,0,-0.00941265095025301,-0.013177711516618729,0,0.012550201267004013,0.01286395639181137,0,-0.01757028140127659,-0.026982933282852173,0,0.011922691948711872,0.006588855758309364,0,-0.033885546028614044,-0.057103417813777924,0,0.03012048453092575,0.007530121132731438,0,-0.011922691948711872,-0.010510793887078762,0,0.0320030152797699,0.07357555627822876,0,-0.010667671449482441,-0.007843876257538795,0,0.7850151062011719,0.005804468411952257,0,-0.012550201267004013,-0.011295181699097157,0,0.00941265095025301,0.010040161199867725,0,-0.008157631382346153,-0.009569528512656689,0,0.008157631382346153,0.006745733320713043,0,-0.011295181699097157,-0.025414157658815384,0,0.012550201267004013,0.051298949867486954,0,-0.012550201267004013,-0.025571035221219063,0,0.011295181699097157,0.014589609578251839,0,-0.013805221766233444,-0.015060242265462875,0,0.016942773014307022,0.007843876257538795,0,-0.021962853148579597,-0.008942018263041973,0,0.016315262764692307,0.009098895825445652,0,-0.00941265095025301,-0.013491466641426086,0,0.00941265095025301,0.009569528512656689,0,-0.02761044353246689,-0.007843876257538795,0,0.0062751006335020065,0.012393323704600334,0,-0.00941265095025301,-0.007843876257538795,0,0.011295181699097157,0.004392570350319147,0,-0.016315262764692307,-0.008785140700638294,0,0.02572791278362274,0.01082454901188612,0,-0.013805221766233444,-0.0341993011534214,0,0.010667671449482441,0.007373243570327759,0,-0.011295181699097157,-0.008157631382346153,0,0.007530121132731438,0.02745356597006321,0,-0.09349900484085083,-0.011295181699097157,0,0.01443273201584816,0.011452059261500835,0,-0.01757028140127659,-0.01882530190050602,0,0.005020080599933863,0.019295934587717056,0,-0.010667671449482441,-0.011452059261500835,0,0.008785140700638294,0.019923444837331772,0,-0.007530121132731438,-0.016472140327095985,0,0.013177711516618729,0.39423319697380066,0,-0.019452812150120735,-0.00941265095025301,0,0.00941265095025301,0.006902610883116722,0,-0.020707832649350166,-0.007686998695135117,0,0.022590363398194313,0.039846889674663544,0,-0.011922691948711872,-0.00721636600792408,0,0.06086847931146622,0.008157631382346153,0,-0.011295181699097157,-0.009883283637464046,0,0.008785140700638294,0.009255773387849331,0,-0.011295181699097157,-0.010510793887078762,0,0.010667671449482441,0.009883283637464046,0,-0.015060242265462875,-0.018040914088487625,0,0.013805221766233444,0.03215989097952843,0,-0.0062751006335020065,-0.015530874952673912,0,0.00941265095025301,0.008000753819942474,0,-0.026982933282852173,-0.02039407752454281,0,0.012550201267004013,0.006118223071098328,0,-0.008785140700638294,-0.008000753819942474,0,0.02008032239973545,0.008942018263041973,0,-0.01882530190050602,-0.013648344203829765,0,0.012550201267004013,0.016629017889499664,0,-0.20331326127052307,-0.009255773387849331,0,0.012550201267004013,0.008000753819942474,0,-0.013177711516618729,-0.008471386507153511,0,0.008157631382346153,0.005020080599933863,0,-0.01882530190050602,-0.049887049943208694,0,0.008157631382346153,0.009883283637464046,0,-0.016315262764692307,-0.02306099608540535,0],"text":"\n\n;wordle ==0801==\n   10 print\"{clr}\"\n   20 poke 53280,0 :poke 53281,0\n   30 a$=\"UCI\"\n   31 b$=\"B B\"\n   32 c$=\"JCK\"\n   33 p$=\"{red}Z\" : at=0\n   35 dim ga$(5)\n   40 nw=1510:dim wd$(nw)\n   50 printtab(15)\"{yel}w o r d l e\"\n   51 print\"{gry3}DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\"\n   55 print\" {pur}c=64 conversion by spiro harvey, 2022\"\n   56 print\"         {gry1}original by josh wardle\"\n   59 print\"{gry3}DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\"\n   60 gosub 2000 : rem load data\n   62 print\"{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}                                {up}{up}{up}\"\n   65 printtab(15);\"{down}{wht}how to play\"\n   70 print\" {down}{gry3}guess the {yel}wordle{gry3} in 6 tries.\"\n   80 print\" {down}after each guess, the colour of the\"\n   90 print\" tiles will change to show how close\"\n  100 print\" your guess was to the word.\"\n  110 print\"{down}DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\"\n  111 print\" {cyn}press {rvon}return{rvof} to start; {rvon}space{rvof} for help\"\n  112 get k$:if k$=\"\" then 112\n  113 if k$=chr$(13) then goto 1000\n  114 if k$=\" \" then print\"{up}                                       {up}\":goto 120\n  115 goto 112\n  120 print\"    {lgrn}\";a$;\"{wht}\";a$;a$;a$;a$\n  125 print\"    {lgrn}BwB{wht}BeBBaBBrBByB\"\n  130 print\"    {lgrn}\";c$;\"{wht}\";c$;c$;c$;c$\n  140 print\" {gry3}the letter {lgrn}w{gry3} is in the word and in\"\n  145 print\" the correct spot.\"\n  150 print\"    {wht}\";a$;a$;\"{brn}\";a$;\"{wht}\";a$;a$\n  155 print\"    {wht}BpBBiB{brn}BlB{wht}BoBBtB\"\n  160 print\"    {wht}\";c$;c$;\"{brn}\";c$;\"{wht}\";c$;c$\n  165 print\" {gry3}the letter {brn}l{gry3} is in the word, but at\"\n  170 print\" wrong spot.\"\n  180 gosub 9000\n  200 print\"{wht}    \";a$;a$;a$;\"{gry1}\";a$;\"{wht}\";a$\n  205 print\"    {wht}BvBBaBBgB{gry1}BuB{wht}BeB          \"\n  210 print\"    {wht}\";c$;c$;c$;\"{gry1}\";c$;\"{wht}\";c$\n  215 print\" {gry3}the letter {gry1}u{gry3} is not in the word.\"\n  220 gosub 9000\n 1000 :\n 1001 rem -------------- game screen ---\n 1002 :\n 1003 r=int(rnd(1)*nw)\n 1004 pw$=wd$(r)\n 1005 print\"{clr}\"\n 1010 printtab(15)\"{yel}w o r d l e\"\n 1020 print\"{wht}\"\n 1030 for c=1 to 6\n 1040 printtab(13);a$;a$;a$;a$;a$\n 1050 printtab(13);b$;b$;b$;b$;b$\n 1060 printtab(13);c$;c$;c$;c$;c$\n 1070 next\n 1500 rem ---------------- main loop ---\n 1505 for at=1 to 6 : rem attempt num\n 1506 for i=1 to 5:ga$(i)=\"\":next\n 1507 gs$=\"\"\n 1510 gosub 8100 : rem update line\n 1520 gosub 8000 : rem hilight line\n 1530 gosub 7000 : rem read guess\n 1550 next\n 1600 rem ----------------- end game ---\n 1610 printtab(7);\"{yel}sorry, the word was {lred}\"pw$\"{yel}.\"\n 1620 printtab(9);\"{gry3}try again another day.\"\n 1630 end\n 2000 rem ------------- data loader ---\n 2010 printtab(12)\"{down}{down}{cyn}loading data...\";\n 2020 c=1\n 2030 for w=0 to nw\n 2040 read wd$(w)\n 2045 if c=1 then print\"{left}{left}{left}{brn}.{cyn}..\";\n 2050 if c=2 then print\"{left}{left}{left}{cyn}.{brn}.{cyn}.\";\n 2055 if c=3 then print\"{left}{left}{left}{cyn}..{brn}.\";\n 2060 if c=4 then c=0\n 2065 c=c+1\n 2070 next\n 2099 return\n 7000 :\n 7001 rem --------------- read guess ---\n 7002 :\n 7005 c=0 : rem char count\n 7010 get k$ : if k$=\"\" then 7010\n 7020 if k$=chr$(20) and c>0 then goto  20100\n 7030 if k$=chr$(13) and c>=4 then gosub 30000 :return\n 7040 if k$>=\"a\" and k$<=\"z\" then goto 20300\n 7050 goto 7010\n 7099 return\n 8000 :\n 8001 rem -------- hilight curr line ---\n 8002 :\n 8010 poke 1024+(ln*40)+11,90\n 8015 poke 55296+(ln*40)+11,10\n 8020 return\n 8100 :\n 8101 rem -------------- update line ---\n 8102 :\n 8105 poke 1024+(ln*40)+11,32\n 8120 ln=(at*3)+1\n 8130 return\n 8999 end\n 9000 :\n 9001 rem ------------- screen pause ---\n 9002 :\n 9005 print\"        {down}{lred}press {rvon}enter{rvof} to continue...{gry3}\"\n 9010 get k$:if k$=\"\" then 9010\n 9015 if k$<>chr$(13) then 9010\n 9020 print\"{up}                                      {up}{up}\"\n 9030 return\n 9999 end\n10000 data abbey,abbot,abhor,abide,abode\n10001 rem --------------- word list ---\n10002 :\n10005 data abort,about,above,abyss,acorn\n10010 data actor,adept,admin,adopt,adore\n10015 data adorn,adult,afire,afoot,afoul\n10020 data after,again,agony,agree,ahead\n10025 data aided,aisle,alarm,album,alien\n10030 data align,allow,aloft,aloha,amaze\n10035 data amuse,angel,anvil,apple,argon\n10040 data arson,audio,audit,avoid,awake\n10045 data bacon,badge,bagel,baggy,baker\n10050 data balls,banjo,barge,basic,basin\n10055 data basis,batch,bawdy,beach,beast\n10060 data beats,began,begat,belch,belly\n10065 data below,beret,berry,bevvy,bigot\n10070 data biker,bimbo,binge,black,blade\n10075 data blame,bland,blank,blast,blaze\n10080 data blood,bloom,blown,bluff,blunt\n10085 data blurb,blurt,blush,board,bogus\n10090 data boner,boobs,booth,bored,bossy\n10095 data bound,brace,braid,brain,brake\n10100 data brand,brash,brass,brave,brawl\n10105 data bread,break,brick,bride,brief\n10110 data brook,brute,buggy,bulge,bunch\n10115 data bunny,burly,butch,buxom,bylaw\n10120 data cabal,cabin,cable,cache,cadet\n10125 data camel,canal,candy,canoe,canon\n10130 data caper,carat,carry,carve,catch\n10135 data cater,caulk,cause,cease,cedar\n10140 data cello,chair,chalk,champ,chant\n10145 data chaos,charm,chase,chasm,cheap\n10150 data cheat,check,cheek,cheer,chick\n10155 data chief,child,chime,chirp,choke\n10160 data chord,chore,chunk,chute,civic\n10165 data civil,clamp,clash,clasp,class\n10170 data claws,clean,clear,click,cliff\n10175 data climb,cloak,clock,clone,cloth\n10180 data cloud,clown,clump,coach,coast\n10185 data cobra,codex,colon,comic,copse\n10190 data coral,couch,cough,could,count\n10195 data crack,craft,cramp,crane,crank\n10200 data crash,crass,crate,crave,crawl\n10205 data cream,creek,creep,crime,crisp\n10210 data croak,croft,cross,crowd,crown\n10215 data crude,cruel,crumb,crush,crust\n10220 data crypt,curio,cycle,cynic,daily\n10225 data dairy,daisy,dance,dandy,datum\n10230 data daunt,death,debit,debug,debut\n10235 data decal,decay,decor,decoy,delay\n10240 data delta,denim,dense,depot,depth\n10245 data devil,diary,digit,dildo,diner\n10250 data dirge,dirty,disco,ditch,ditto\n10255 data dodge,dogma,donor,doubt,dough\n10260 data douse,dozen,draft,drain,drama\n10265 data drank,drape,drawl,drawn,dread\n10270 data drift,drill,drink,drive,drone\n10275 data drool,droop,drove,druid,dwarf\n10280 data dwell,eager,eagle,early,earth\n10285 data easel,ebony,edict,edify,eerie\n10290 data eight,eject,elbow,elder,elect\n10295 data elite,email,embed,ember,empty\n10300 data enact,enema,enemy,enjoy,enter\n10305 data entry,envoy,epoch,epoxy,equal\n10310 data equip,erase,erect,error,erupt\n10315 data essay,evade,event,evict,evoke\n10320 data exact,exile,exist,fable,facet\n10325 data faint,fairy,false,fancy,fanny\n10330 data fatal,feast,feign,felon,fence\n10335 data feral,ferry,fetch,fever,fewer\n10340 data fight,filth,final,flail,flair\n10345 data flake,flame,flank,flare,flash\n10350 data flask,fleet,flesh,flint,flirt\n10355 data float,flock,flood,floor,flour\n10360 data fluff,fluid,fluke,flush,flute\n10365 data focus,folio,foray,force,forge\n10370 data forgo,forth,found,frail,frame\n10375 data fraud,freak,fresh,frill,frisk\n10380 data frock,frost,froth,frown,froze\n10385 data fruit,fudge,fungi,fussy,futon\n10390 data gable,gamma,gamut,gaudy,gauge\n10395 data gaunt,gavel,geese,genie,genre\n10400 data ghost,ghoul,giant,gizmo,glade\n10405 data gland,glass,glaze,gleam,glean\n10410 data glint,gloat,globe,gloom,gloss\n10415 data glove,glyph,gnash,gnome,goose\n10420 data graft,grail,grain,grand,graph\n10425 data grasp,grass,grate,grave,gravy\n10430 data graze,great,greed,green,greet\n10435 data grief,grill,grime,grind,groan\n10440 data groom,grunt,guard,guess,guest\n10445 data guide,guild,guile,guilt,guise\n10450 data gypsy,habit,haiku,hairy,happy\n10455 data hardy,harem,harpy,harsh,haste\n10460 data hasty,haunt,haven,havoc,heady\n10465 data heard,heart,heave,heavy,hedge\n10470 data hefty,heist,hiker,hinge,hippo\n10475 data hippy,hitch,hoard,hobby,hoist\n10480 data honey,horde,horns,horny,horse\n10485 data hotel,hound,house,hovel,hover\n10490 data howdy,human,humid,hunch,hurry\n10495 data hydro,hyena,ideal,idiom,idiot\n10500 data igloo,image,imbue,impel,imply\n10505 data inane,incur,index,indie,inept\n10510 data inert,infer,ingot,inked,inlay\n10515 data inlet,inner,inset,irate,irony\n10520 data issue,ivory,jaded,jaunt,jeans\n10525 data jelly,jetty,jewel,jiffy,joint\n10530 data joist,joker,jolly,joule,joust\n10535 data jowls,judge,juice,jumbo,juror\n10540 data kanji,karat,karma,kayak,kebab\n10545 data khaki,kinky,kiosk,klutz,knack\n10550 data knave,knead,kneed,kneel,knell\n10555 data knife,knock,knoll,known,koala\n10560 data krone,kudos,label,labia,laces\n10565 data laden,ladle,lager,laird,lamer\n10570 data lance,lanky,lapel,lapse,large\n10575 data larva,laser,latch,later,latex\n10580 data lathe,latte,laugh,layer,leaky\n10585 data learn,lease,leash,least,leave\n10590 data ledge,leech,leery,legal,legit\n10595 data lemon,lemur,leper,levee,level\n10600 data lever,libel,liege,light,lilac\n10605 data limbo,limit,linen,lingo,lithe\n10610 data liven,liver,livid,llama,loamy\n10615 data loath,lobby,local,locus,lodge\n10620 data logic,lolly,loner,loose,lorry\n10625 data loser,lotus,louse,lover,lower\n10630 data lowly,loyal,lucid,lucky,lumen\n10635 data lunar,lunch,lunge,lupus,lurch\n10640 data lurid,lynch,lyric,macho,macro\n10645 data madam,mafia,magic,magma,magus\n10650 data maize,major,manga,mange,mango\n10655 data mania,manic,manor,manse,manta\n10660 data marry,marsh,mason,match,matte\n10665 data maven,maxim,maybe,mayor,meant\n10670 data mecca,medal,media,medic,melee\n10675 data melon,mercy,merge,merit,merry\n10680 data messy,metal,metro,micro,might\n10685 data mimic,mince,minor,minus,mirth\n10690 data modal,model,modem,moggy,mogul\n10695 data moist,money,mooch,moody,moose\n10700 data moron,morph,motel,motif,motor\n10705 data motto,mound,mount,mourn,mouse\n10710 data mouth,movie,mucus,muddy,mulch\n10715 data mural,music,nacho,naive,naked\n10720 data nanny,nappy,nasal,nasty,navel\n10725 data nerve,never,niche,niece,night\n10730 data ninja,nitro,nodal,noise,noisy\n10735 data nomad,noose,north,notch,nurse\n10740 data nutty,nylon,nymph,oaken,oasis\n10745 data occur,ocean,octal,octet,offal\n10750 data offer,often,omega,oozed,opera\n10755 data opium,optic,orate,orbit,order\n10760 data organ,other,otter,ought,ounce\n10765 data ovary,overt,owner,oxide,ozone\n10770 data pagan,pager,paint,paleo,panda\n10775 data panel,panic,pansy,pants,paper\n10780 data party,pasta,paste,patch,patio\n10785 data pause,peace,peach,pearl,pedal\n10790 data penal,pence,penis,perch,peril\n10795 data petal,petty,phase,phial,phone\n10800 data phony,photo,piano,piece,pilot\n10805 data pinch,pinup,pique,pitch,pithy\n10810 data pixel,pizza,place,plaid,plain\n10815 data plait,plane,plank,plant,plate\n10820 data plaza,plead,pleas,plonk,plumb\n10825 data plume,plump,plush,poach,point\n10830 data poise,poker,pokes,polar,polio\n10835 data polka,polyp,pooch,porch,pores\n10840 data posse,potty,pouch,pound,power\n10845 data prank,prawn,preen,press,price\n10850 data prick,pride,prime,print,prior\n10855 data prism,privy,prize,probe,prone\n10860 data prong,proof,proud,prove,prowl\n10865 data proxy,prude,pulse,punch,pupil\n10870 data puree,purge,purse,pushy,pussy\n10875 data putty,pygmy,pylon,quake,qualm\n10880 data quark,quart,quash,quasi,queer\n10885 data query,quest,queue,quick,quiet\n10890 data quire,quirk,quirt,quite,quota\n10895 data quote,radar,radio,rainy,ranch\n10900 data randy,range,rapid,ratio,raven\n10905 data razor,reach,react,realm,rebel\n10910 data refer,regal,rehab,reign,reins\n10915 data relax,relay,relic,remit,remix\n10920 data reply,resin,retro,retry,reuse\n10925 data revel,revue,rhino,rhyme,rider\n10930 data ridge,right,rigid,rigor,rinse\n10935 data risky,rival,roach,roast,robed\n10940 data robin,robot,rocks,rocky,rodeo\n10945 data roger,rogue,roman,rotor,rouge\n10950 data rough,round,rouse,roust,route\n10955 data royal,ruble,ruddy,rugby,ruins\n10960 data ruler,runic,runny,rural,rusty\n10965 data sable,saint,salad,salon,salsa\n10970 data salty,salve,salvo,samba,sandy\n10975 data sarge,satay,sated,satin,satyr\n10980 data sauce,saucy,sauna,saute,savvy\n10985 data scale,scalp,scaly,scamp,scant\n10990 data scare,scarf,scary,scene,scent\n10995 data scoff,scold,scone,scoop,scoot\n11000 data scope,score,scorn,scour,scout\n11005 data scowl,scram,scrap,screw,scrum\n11010 data scuba,sedan,semen,sense,sepia\n11015 data serif,serum,serve,servo,setup\n11020 data seven,sever,sewer,shack,shade\n11025 data shady,shaft,shake,shaky,shale\n11030 data shall,shalt,shame,shank,shape\n11035 data shard,share,shark,sharp,shave\n11040 data shawl,sheaf,shear,sheen,sheep\n11045 data sheer,sheet,shelf,shell,shine\n11050 data shiny,shire,shirt,shoal,shock\n11055 data shoes,shoot,shore,short,shout\n11060 data shove,shred,shrew,shrub,shrug\n11065 data shunt,siege,sieve,sight,sigma\n11070 data silky,silly,since,sinew,singe\n11075 data sinus,siren,sixty,skate,skein\n11080 data skint,skirt,skulk,skull,skunk\n11085 data slack,slain,slang,slant,slash\n11090 data slate,sleek,sleep,sleet,slept\n11095 data slice,slick,slide,slime,sling\n11100 data sloop,slope,slosh,sloth,slump\n11105 data slung,slush,sluts,smack,small\n11110 data smart,smash,smear,smell,smile\n11115 data smirk,smite,smith,smock,smoke\n11120 data snack,snail,snake,snare,sneak\n11125 data sneer,snipe,snoop,snore,snort\n11130 data snout,solar,solid,solve,sonar\n11135 data sonic,sooth,sorry,sound,space\n11140 data spade,spank,spare,spark,spasm\n11145 data spawn,speak,spear,speck,speed\n11150 data spell,spend,spent,sperm,spice\n11155 data spicy,spiel,spill,spine,spire\n11160 data spite,spoil,spoke,spoof,spook\n11165 data spool,spoon,spore,sport,spout\n11170 data spray,spree,sprig,spunk,spurn\n11175 data spurt,squad,squat,squid,stack\n11180 data staff,stage,stain,stair,stake\n11185 data stale,stalk,stall,stamp,stand\n11190 data stare,stark,start,stash,state\n11195 data steak,steal,steam,steed,steel\n11200 data steep,steer,stent,stern,stick\n11205 data stiff,still,stilt,sting,stink\n11210 data stint,stoat,stock,stoic,stoke\n11215 data stole,stomp,stone,stony,stood\n11220 data stool,stoop,store,stork,storm\n11225 data story,stout,stove,strap,straw\n11230 data stray,strum,strut,stuck,study\n11235 data stuff,stump,stung,stunt,style\n11240 data suave,suede,sugar,suite,sunny\n11245 data super,surge,surly,sushi,swamp\n11250 data swarm,swear,sweat,swede,sweep\n11255 data sweet,swell,swept,swift,swill\n11260 data swine,swing,swipe,swirl,swish\n11265 data swoon,swoop,sword,swore,sworn\n11270 data synth,syrup,taboo,taffy,taint\n11275 data taken,talon,tango,tangy,tapas\n11280 data tardy,taste,tasty,taunt,teach\n11285 data tease,teddy,tempo,tempt,tenet\n11290 data tenor,tense,tenth,tepid,terse\n11295 data theft,their,theme,there,these\n11300 data theta,thick,thief,thigh,thing\n11305 data think,third,thong,thorn,those\n11310 data three,threw,throb,throe,throw\n11315 data thumb,thyme,tiara,tibia,tidal\n11320 data tiger,tight,timid,titan,tithe\n11325 data title,titty,toast,today,toner\n11330 data tongs,tonic,tonne,tools,tooth\n11335 data topaz,topic,torch,torso,total\n11340 data touch,tough,towel,tower,toxic\n11345 data toxin,trace,track,tract,trade\n11350 data trail,train,trait,tramp,trawl\n11355 data tread,treat,trend,tress,triad\n11360 data trial,tribe,troll,trout,trove\n11365 data truce,truck,trunk,truss,trust\n11370 data truth,tryst,tulip,tuner,tunic\n11375 data turbo,turds,tutor,tweak,tweed\n11380 data twice,twine,twist,udder,ulcer\n11385 data ultra,uncap,uncle,uncut,under\n11390 data undue,unify,union,unite,unlit\n11395 data untie,until,unzip,upper,upset\n11400 data urban,usage,usual,usurp,usury\n11405 data utter,vague,valet,valid,value\n11410 data valve,vapid,vault,vaunt,venom\n11415 data venue,verge,verse,verve,vicar\n11420 data video,vigil,vigor,villa,vinyl\n11425 data viola,viper,viral,virus,visit\n11430 data visor,vista,vital,vivid,vixen\n11435 data vocal,vodka,vogue,vomit,vouch\n11440 data vowel,vulva,wafer,wager,wages\n11445 data wagon,waist,waive,waltz,waste\n11450 data watch,water,waxen,weary,weave\n11455 data wedge,weigh,weird,welsh,wench\n11460 data whack,whale,wharf,wheat,wheel\n11465 data whelm,where,which,whiff,while\n11470 data whine,whirl,white,whole,whore\n11475 data whose,widow,width,wield,wince\n11480 data winch,witch,witty,woman,women\n11485 data woods,woody,world,worry,worse\n11490 data worst,worth,would,wound,woven\n11495 data wrath,wreak,wreck,wrest,wring\n11500 data wrist,write,wrong,wurst,xenon\n11505 data yacht,yodel,young,youth,yummy\n11510 data zebra\n20100 rem ---------------- del char ---\n20105 x=c-1\n20110 gs$=left$(gs$,x)\n20120 poke 1024+(ln*40)+(x*3)+14,32\n20130 c=x\n20140 goto 7010 : rem next guess\n20300 rem ------------- accept char ---\n20301 :\n20310 if c>=5 then goto 7010\n20320 gs$=gs$+k$\n20330 poke 1024+(ln*40)+(c*3)+14,asc(k$)-64\n20340 c=c+1\n20350 goto 7010\n20999 :\n30000 rem ---\n30300 for z=1 to 5\n30310 for zb=1 to 5\n30320 if mid$(gs$,z,1)=mid$(pw$,zb,1) then ga$(z)=\"-\"\n30330 next zb\n30340 if mid$(gs$,z,1)=mid$(pw$,z,1) then ga$(z)=\"+\"\n30350 next z\n30370 rem for z=1 to 5\n30380 rem printz\"=\"ga$(z),chr$(ga$(z))\n30390 rem next\n31000 for z=1 to 5\n31010 if ga$(z)=\"+\" then cl=13:gosub 32000\n31020 if ga$(z)=\"-\" then cl=9:gosub 32000\n31030 if ga$(z)=\"\"  then cl=11:gosub 32000\n31040 next\n31050 if gs$=pw$ then printtab(12);\"{cyn}huzzah!! you win!{gry3}\":end\n31999 return\n32000 rem ----------- hilight boxes ---\n32015 for c=1 to 3\n32020 poke 55296+((ln-1)*40)+(z*3)+9+c,cl\n32022 next\n32025 for c=1 to 3\n32030 poke 55296+(ln*40)+(z*3)+9+c,cl\n32032 next\n32035 for c=1 to 3\n32040 poke 55296+((ln+1)*40)+(z*3)+9+c,cl\n32042 next\n32060 return\n\n","sourcePath":"external/github.com/spiroharvey_c64/Wordle/wordle.bas","sourceMtimeMs":1674155094000,"sourceUrl":"https://github.com/spiroharvey/c64/blob/main/Wordle/wordle.bas","sourceRepoUrl":"https://github.com/spiroharvey/c64","license":"UNKNOWN","attribution":"Source: spiroharvey/c64 (License unknown)"},{"name":"github.com/spiroharvey_c64/Wordle/wordle13.bas","language":"basic","vector":[0.011318676173686981,0.005361477844417095,0,-0.009531516581773758,-0.0074464972130954266,0,0.025615951046347618,0.00819114688783884,0,-0.04646614193916321,-0.008489007130265236,0,0.011318676173686981,0.012063325382769108,0,-0.01608443446457386,-0.017871594056487083,0,0.028594549745321274,0.01653122343122959,0,-0.008340076543390751,-0.012807975523173809,0,0.008340076543390751,0.02055233158171177,0,-0.0071486374363303185,-0.008935797028243542,0,0.019658751785755157,0.22071418166160583,0,-0.009531516581773758,-0.02085019275546074,0,0.010127236135303974,0.006255057640373707,0,-0.01548871397972107,-0.0074464972130954266,0,0.03514746576547623,0.007893286645412445,0,-0.008935797028243542,-0.009531516581773758,0,0.0071486374363303185,0.010276165790855885,0,-0.012510115280747414,-0.005808267742395401,0,0.029785988852381706,0.01295690517872572,0,-0.02144591137766838,-0.017722662538290024,0,0.008340076543390751,0.011467605829238892,0,-0.01608443446457386,-0.010276165790855885,0,0.13939842581748962,0.015339784324169159,0,-0.01072295568883419,-0.013850484974682331,0,0.02621166966855526,0.0074464972130954266,0,-0.007744356989860535,-0.10603812336921692,0,0.01548871397972107,0.0074464972130954266,0,-0.019063033163547516,-0.009233656339347363,0,0.01608443446457386,0.006552917417138815,0,-0.05718909949064255,-0.017871594056487083,0,0.006552917417138815,0.012510115280747414,0,-0.011914395727217197,-0.012510115280747414,0,0.008935797028243542,0.00804221723228693,0,-0.01608443446457386,-0.007893286645412445,0,0.16561010479927063,0.014446204528212547,0,-0.009531516581773758,-0.05167869105935097,0,0.011318676173686981,0.009382586926221848,0,-0.01370155531913042,-0.012659044936299324,0,0.01370155531913042,0.015339784324169159,0,-0.01370155531913042,-0.006701847538352013,0,0.009531516581773758,0.006552917417138815,0,-0.034551747143268585,-0.005659338086843491,0,0.15190854668617249,0.013999414630234241,0,-0.05778481811285019,-0.009084726683795452,0,0.01370155531913042,0.008489007130265236,0,-0.030381709337234497,-0.012659044936299324,0,0.010127236135303974,0.023084141314029694,0,-0.009531516581773758,-0.0074464972130954266,0,0.011914395727217197,0.020105542615056038,0,-0.030381709337234497,-0.008786866441369057,0,0.024424510076642036,0.01653122343122959,0,-0.008340076543390751,-0.013403695076704025,0,0.016680153086781502,0.00685077765956521,0,-0.011914395727217197,-0.011616535484790802,0,0.005957197863608599,0.07282674312591553,0,-0.012510115280747414,-0.006999707315117121,0,0.011914395727217197,0.017871594056487083,0,-0.07148637622594833,-0.011169745586812496,0,0.01310583483427763,0.011169745586812496,0,-0.009531516581773758,-0.011914395727217197,0,0.01370155531913042,0.013999414630234241,0,-0.017275873571634293,-0.034104958176612854,0,0.014892994426190853,0.005659338086843491,0,-0.03693462535738945,-0.055401939898729324,0,0.03872178494930267,0.0074464972130954266,0,-0.011914395727217197,-0.011616535484790802,0,0.03812606632709503,0.08474113792181015,0,-0.011914395727217197,-0.011467605829238892,0,0.750606894493103,0.008489007130265236,0,-0.06314629316329956,-0.011318676173686981,0,0.011914395727217197,0.009680446237325668,0,-0.008340076543390751,-0.009233656339347363,0,0.010127236135303974,0.011169745586812496,0,-0.009531516581773758,-0.028892409056425095,0,0.01608443446457386,0.07878393679857254,0,-0.010127236135303974,-0.03291351720690727,0,0.01370155531913042,0.013999414630234241,0,-0.012510115280747414,-0.017275873571634293,0,0.018467312678694725,0.0071486374363303185,0,-0.02204163186252117,-0.006552917417138815,0,0.01370155531913042,0.010871886275708675,0,-0.011318676173686981,-0.017573732882738113,0,0.01072295568883419,0.014744064770638943,0,-0.028594549745321274,-0.00804221723228693,0,0.005957197863608599,0.017126943916082382,0,-0.008340076543390751,-0.00819114688783884,0,0.01072295568883419,0.004765758290886879,0,-0.017871594056487083,-0.009382586926221848,0,0.02740311063826084,0.013403695076704025,0,-0.014297274872660637,-0.04110466316342354,0,0.009531516581773758,0.008637936785817146,0,-0.012510115280747414,-0.008786866441369057,0,0.006552917417138815,0.04170038551092148,0,-0.11378248035907745,-0.011318676173686981,0,0.014892994426190853,0.013999414630234241,0,-0.018467312678694725,-0.02040340192615986,0,0.0041700382716953754,0.023233070969581604,0,-0.010127236135303974,-0.01072295568883419,0,0.009531516581773758,0.023084141314029694,0,-0.008340076543390751,-0.02025447227060795,0,0.016680153086781502,0.3769416809082031,0,-0.017275873571634293,-0.034551747143268585,0,0.01370155531913042,0.00819114688783884,0,-0.019658751785755157,-0.00819114688783884,0,0.02204163186252117,0.04646614193916321,0,-0.011914395727217197,-0.0071486374363303185,0,0.06612489372491837,0.010871886275708675,0,-0.010127236135303974,-0.008489007130265236,0,0.006552917417138815,0.010276165790855885,0,-0.01072295568883419,-0.009680446237325668,0,0.01072295568883419,0.011616535484790802,0,-0.014297274872660637,-0.019658751785755157,0,0.012510115280747414,0.044827912002801895,0,-0.006552917417138815,-0.020105542615056038,0,0.019063033163547516,0.008786866441369057,0,-0.029190268367528915,-0.02189270220696926,0,0.01370155531913042,0.005510407965630293,0,-0.009531516581773758,-0.006552917417138815,0,0.023828791454434395,0.008340076543390751,0,-0.02204163186252117,-0.01653122343122959,0,0.009531516581773758,0.019807683303952217,0,-0.19777897000312805,-0.009233656339347363,0,0.011914395727217197,0.008935797028243542,0,-0.014297274872660637,-0.009233656339347363,0,0.007744356989860535,0.004765758290886879,0,-0.02680739015340805,-0.060018766671419144,0,0.011318676173686981,0.01042509637773037,0,-0.017871594056487083,-0.02710524946451187,0],"text":"   10 print\"{clr}\";\n   15 x=rnd(-ti)\n   20 poke 53280,0 :poke 53281,0\n   30 a$=\"UCI\"\n   31 b$=\"B B\"\n   32 c$=\"JCK\"\n   33 p$=\"{red}Z\" : at=0\n   35 dim ga$(5)\n   40 read nw:dim wd$(nw)\n   45 ds=peek(66)*256+peek(65)+6\n   50 printtab(15)\"{yel}w o r d l e         {cyn}v1.3\"\n   51 print\"{gry3}DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\"\n   52 print\" {pur}c=64 conversion by spiro harvey, 2022\"\n   53 print\" {cyn}  (https://youtube.com/c/notawizard)\"\n   54 print\n   56 print\"         {gry1}original by josh wardle\"\n   57 print\"    {lgrn}special thanks to dan sanderson\"\n   59 print\"{gry3}DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\"\n   60 rem gosub 2000 : rem load data\n   62 rem print\"{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}                                {up}{up}{up}\"\n   65 printtab(15);\"{down}{wht}how to play\"\n   70 print\" {down}{gry3}guess the {yel}wordle{gry3} in 6 tries.\"\n   80 print\" {down}after each guess, the colour of the\"\n   90 print\" tiles will change to show how close\"\n  100 print\" your guess was to the word.\"\n  110 print\"{down}DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\"\n  111 print\" {cyn}press {rvon}return{rvof} to start; {rvon}space{rvof} for help\"\n  112 get k$:if k$=\"\" then 112\n  113 if k$=chr$(13) then goto 300\n  114 if k$=\" \" then print\"{up}                                       {up}\":goto 120\n  115 goto 112\n  120 print\"    {lgrn}\";a$;\"{wht}\";a$;a$;a$;a$\n  125 print\"    {lgrn}BwB{wht}BeBBaBBrBByB\"\n  130 print\"    {lgrn}\";c$;\"{wht}\";c$;c$;c$;c$\n  140 print\" {gry3}the letter {lgrn}w{gry3} is in the word and in\"\n  145 print\" the correct spot.\"\n  150 print\"    {wht}\";a$;a$;\"{brn}\";a$;\"{wht}\";a$;a$\n  155 print\"    {wht}BpBBiB{brn}BlB{wht}BoBBtB\"\n  160 print\"    {wht}\";c$;c$;\"{brn}\";c$;\"{wht}\";c$;c$\n  165 print\" {gry3}the letter {brn}l{gry3} is in the word, but at\"\n  170 print\" wrong spot.\"\n  180 gosub 250\n  200 print\"{wht}    \";a$;a$;a$;\"{gry1}\";a$;\"{wht}\";a$\n  205 print\"    {wht}BvBBaBBgB{gry1}BuB{wht}BeB          \"\n  210 print\"    {wht}\";c$;c$;c$;\"{gry1}\";c$;\"{wht}\";c$\n  215 print\" {gry3}the letter {gry1}u{gry3} is not in the word.\"\n  220 gosub 250\n  230 goto 300\n  250 rem ------------- screen pause ---\n  255 print\"        {down}{lred}press {rvon}enter{rvof} to continue...{gry3}\"\n  260 get k$:if k$=\"\" then 260\n  265 if k$<>chr$(13) then 9010\n  270 print\"{up}                                      {up}{up}\"\n  275 return\n  300 rem -------------- game screen ---\n  305 r=int(rnd(1)*nw)\n  310 ia=ds+36*int(r/5)+(r-int(r/5)*5)*6\n  312 if r=int(r/5)*5 then ia=ia-6\n  314 poke 66,int(ia/256):poke 65,ia-(int(ia/256)*256)\n  316 read pw$\n  320 print\"{clr}\";tab(15)\"{yel}w o r d l e\"\n  325 print\"{wht}\"\n  330 for c=1 to 6\n  335 printtab(13);a$;a$;a$;a$;a$\n  340 printtab(13);b$;b$;b$;b$;b$\n  345 printtab(13);c$;c$;c$;c$;c$\n  350 next\n  400 rem ---------------- main loop ---\n  405 for at=1 to 6 : rem attempt num\n  410 for i=1 to 5:ga$(i)=\"\":next\n  415 gs$=\"\"\n  420 gosub 680 : rem update line\n  430 gosub 660 : rem hilight line\n  440 goto 600 : rem read guess\n  450 next\n  460 rem ----------------- end game ---\n  465 print\"{home}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}\";\n  470 printtab(7);\"{yel}sorry, the word was {lred}\"pw$\"{yel}.\"\n  480 goto 530\n  500 rem --- you win!\n  510 print\"{home}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}\";\n  520 printtab(12);\"{cyn}huzzah!! you win!{gry3}\"\n  530 print\"would you like to play again? (y/n)\";\n  540 get k$\n  545 if k$=\"{f1}\" then gosub 1200\n  550 if k$=\"n\" then end\n  560 if k$=\"y\" then goto 300\n  570 goto 540\n  600 rem --------------- read guess ---\n  605 c=0 : rem char count\n  610 get k$ : if k$=\"\" then 610\n  620 if k$=chr$(20) and c>0 then goto 700\n  630 if k$=chr$(13) and c>=4 then goto 800\n  640 if k$>=\"a\" and k$<=\"z\" then goto 750\n  650 goto 610\n  655 rem return\n  660 rem -------- hilight curr line ---\n  665 poke 1024+(ln*40)+11,90\n  670 poke 55296+(ln*40)+11,10\n  675 return\n  680 rem -------------- update line ---\n  685 poke 1024+(ln*40)+11,32\n  690 ln=(at*3)\n  695 return\n  700 rem ---------------- del char ---\n  705 x=c-1\n  710 gs$=left$(gs$,x)\n  715 poke 1024+(ln*40)+(x*3)+14,32\n  720 c=x\n  725 goto 610\n  750 rem ------------- accept char ---\n  755 if c>=5 then goto 610\n  760 gs$=gs$+k$\n  765 poke 1024+(ln*40)+(c*3)+14,asc(k$)-64\n  770 c=c+1\n  775 goto 610\n  800 rem ---------------- find word ---\n  801 rem find gs$ in data quickly\n  802 rem f = found:-1 if found, 0 if not\n  803 rem expects nw=# of words, ds=addr of first word\n  804 if gs$=pw$ then goto 950\n  805 sc$=\"DMBN\" : sc=1\n  808 lo=0:hi=nw\n  810 i=int((hi-lo)/2)+lo\n  815 gosub 850\n  817 gosub 880\n  818 if sc=5 then sc=1\n  820 if gs$=w$ then f=-1:goto 950\n  825 if gs$<w$ then 840\n  830 if lo=i then f=0:goto 900\n  835 lo=i:goto 810\n  840 if hi=i then f=0:goto 900\n  845 hi=i:goto 810\n  850 rem --- set w$ to the i-th word ---\n  855 ia=ds+36*int(i/5)+(i-int(i/5)*5)*6\n  860 if i=int(i/5)*5 then ia=ia-6\n  865 poke 66,int(ia/256):poke 65,ia-(int(ia/256)*256)\n  870 read w$\n  875 return\n  880 rem --- spinner\n  882 print\"{home}\";\n  885 zm=-1\n  890 printtab(39);\"{yel}\";mid$(sc$,sc,1);\n  895 sc=sc+1\n  897 return\n  900 rem --- word not in dict\n  901 print\"{home}\";tab(39)\" \"\n  905 print\"{home}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}\";\n  910 printtab(10)\"word not in dictionary!\"\n  915 printtab(10)\"press a key to continue\"\n  920 get k$ : if k$=\"\" then goto 920\n  925 print\"{home}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}\";\n  930 printtab(10)\"                       \"\n  935 printtab(10)\"                       \"\n  940 goto 610\n  950 rem --- solve\n  951 print\"{home}\";tab(39)\" \"\n  955 for z=1 to 5\n  960 for zb=1 to 5\n  965 if mid$(gs$,z,1)=mid$(pw$,zb,1) then ga$(z)=\"-\"\n  970 next zb\n  975 if mid$(gs$,z,1)=mid$(pw$,z,1) then ga$(z)=\"+\"\n  980 next z\n 1000 rem --- solve colours\n 1005 for z=1 to 5\n 1010 if ga$(z)=\"+\" then cl=13:gosub 1100\n 1020 if ga$(z)=\"-\" then cl=9:gosub 1100\n 1030 if ga$(z)=\"\"  then cl=11:gosub 1100\n 1040 next\n 1050 if gs$=pw$ then goto 500\n1060  goto 450 : rem back to loop\n 1100 rem ----------- hilight boxes ---\n 1105 for c=1 to 3\n 1110 poke 55296+((ln-1)*40)+(z*3)+9+c,cl\n 1115 next\n 1120 for c=1 to 3\n 1125 poke 55296+(ln*40)+(z*3)+9+c,cl\n 1130 next\n 1135 for c=1 to 3\n 1140 poke 55296+((ln+1)*40)+(z*3)+9+c,cl\n 1145 next\n 1150 return\n 1200 rem --------------- share mode ---\n 1205 for a=1 to 6\n 1207 ln=a*3\n 1210 for c=1 to 5\n 1215 poke 1024+(ln*40)+(c*3)+11,160\n 1220 next\n 1225 next\n 1230 return\n 2000 rem ------------- data loader ---\n 2010 printtab(12)\"{down}{down}{cyn}loading data...\";\n 2020 c=1\n 2030 for w=0 to nw\n 2040 read wd$(w)\n 2045 if c=1 then print\"{left}{left}{left}{brn}.{cyn}..\";\n 2050 if c=2 then print\"{left}{left}{left}{cyn}.{brn}.{cyn}.\";\n 2055 if c=3 then print\"{left}{left}{left}{cyn}..{brn}.\";\n 2060 if c=4 then c=0\n 2065 c=c+1\n 2070 next\n 2099 return\n 9999 data 1510\n10000 data abbey,abbot,abhor,abide,abode\n10005 data abort,about,above,abyss,acorn\n10010 data actor,adept,admin,adopt,adore\n10015 data adorn,adult,afire,afoot,afoul\n10020 data after,again,agony,agree,ahead\n10025 data aided,aisle,alarm,album,alien\n10030 data align,allow,aloft,aloha,amaze\n10035 data amuse,angel,anvil,apple,argon\n10040 data arson,audio,audit,avoid,awake\n10045 data bacon,badge,bagel,baggy,baker\n10050 data balls,banjo,barge,basic,basin\n10055 data basis,batch,bawdy,beach,beast\n10060 data beats,began,begat,belch,belly\n10065 data below,beret,berry,bevvy,bigot\n10070 data biker,bimbo,binge,black,blade\n10075 data blame,bland,blank,blast,blaze\n10080 data blood,bloom,blown,bluff,blunt\n10085 data blurb,blurt,blush,board,bogus\n10090 data boner,boobs,booth,bored,bossy\n10095 data bound,brace,braid,brain,brake\n10100 data brand,brash,brass,brave,brawl\n10105 data bread,break,brick,bride,brief\n10110 data brook,brute,buggy,bulge,bunch\n10115 data bunny,burly,butch,buxom,bylaw\n10120 data cabal,cabin,cable,cache,cadet\n10125 data camel,canal,candy,canoe,canon\n10130 data caper,carat,carry,carve,catch\n10135 data cater,caulk,cause,cease,cedar\n10140 data cello,chair,chalk,champ,chant\n10145 data chaos,charm,chase,chasm,cheap\n10150 data cheat,check,cheek,cheer,chick\n10155 data chief,child,chime,chirp,choke\n10160 data chord,chore,chunk,chute,civic\n10165 data civil,clamp,clash,clasp,class\n10170 data claws,clean,clear,click,cliff\n10175 data climb,cloak,clock,clone,cloth\n10180 data cloud,clown,clump,coach,coast\n10185 data cobra,codex,colon,comic,copse\n10190 data coral,couch,cough,could,count\n10195 data crack,craft,cramp,crane,crank\n10200 data crash,crass,crate,crave,crawl\n10205 data cream,creek,creep,crime,crisp\n10210 data croak,croft,cross,crowd,crown\n10215 data crude,cruel,crumb,crush,crust\n10220 data crypt,curio,cycle,cynic,daily\n10225 data dairy,daisy,dance,dandy,datum\n10230 data daunt,death,debit,debug,debut\n10235 data decal,decay,decor,decoy,delay\n10240 data delta,denim,dense,depot,depth\n10245 data devil,diary,digit,dildo,diner\n10250 data dirge,dirty,disco,ditch,ditto\n10255 data dodge,dogma,donor,doubt,dough\n10260 data douse,dozen,draft,drain,drama\n10265 data drank,drape,drawl,drawn,dread\n10270 data drift,drill,drink,drive,drone\n10275 data drool,droop,drove,druid,dwarf\n10280 data dwell,eager,eagle,early,earth\n10285 data easel,ebony,edict,edify,eerie\n10290 data eight,eject,elbow,elder,elect\n10295 data elite,email,embed,ember,empty\n10300 data enact,enema,enemy,enjoy,enter\n10305 data entry,envoy,epoch,epoxy,equal\n10310 data equip,erase,erect,error,erupt\n10315 data essay,evade,event,evict,evoke\n10320 data exact,exile,exist,fable,facet\n10325 data faint,fairy,false,fancy,fanny\n10330 data fatal,feast,feign,felon,fence\n10335 data feral,ferry,fetch,fever,fewer\n10340 data fight,filth,final,flail,flair\n10345 data flake,flame,flank,flare,flash\n10350 data flask,fleet,flesh,flint,flirt\n10355 data float,flock,flood,floor,flour\n10360 data fluff,fluid,fluke,flush,flute\n10365 data focus,folio,foray,force,forge\n10370 data forgo,forth,found,frail,frame\n10375 data fraud,freak,fresh,frill,frisk\n10380 data frock,frost,froth,frown,froze\n10385 data fruit,fudge,fungi,fussy,futon\n10390 data gable,gamma,gamut,gaudy,gauge\n10395 data gaunt,gavel,geese,genie,genre\n10400 data ghost,ghoul,giant,gizmo,glade\n10405 data gland,glass,glaze,gleam,glean\n10410 data glint,gloat,globe,gloom,gloss\n10415 data glove,glyph,gnash,gnome,goose\n10420 data graft,grail,grain,grand,graph\n10425 data grasp,grass,grate,grave,gravy\n10430 data graze,great,greed,green,greet\n10435 data grief,grill,grime,grind,groan\n10440 data groom,grunt,guard,guess,guest\n10445 data guide,guild,guile,guilt,guise\n10450 data gypsy,habit,haiku,hairy,happy\n10455 data hardy,harem,harpy,harsh,haste\n10460 data hasty,haunt,haven,havoc,heady\n10465 data heard,heart,heave,heavy,hedge\n10470 data hefty,heist,hiker,hinge,hippo\n10475 data hippy,hitch,hoard,hobby,hoist\n10480 data honey,horde,horns,horny,horse\n10485 data hotel,hound,house,hovel,hover\n10490 data howdy,human,humid,hunch,hurry\n10495 data hydro,hyena,ideal,idiom,idiot\n10500 data igloo,image,imbue,impel,imply\n10505 data inane,incur,index,indie,inept\n10510 data inert,infer,ingot,inked,inlay\n10515 data inlet,inner,inset,irate,irony\n10520 data issue,ivory,jaded,jaunt,jeans\n10525 data jelly,jetty,jewel,jiffy,joint\n10530 data joist,joker,jolly,joule,joust\n10535 data jowls,judge,juice,jumbo,juror\n10540 data kanji,karat,karma,kayak,kebab\n10545 data khaki,kinky,kiosk,klutz,knack\n10550 data knave,knead,kneed,kneel,knell\n10555 data knife,knock,knoll,known,koala\n10560 data krone,kudos,label,labia,laces\n10565 data laden,ladle,lager,laird,lamer\n10570 data lance,lanky,lapel,lapse,large\n10575 data larva,laser,latch,later,latex\n10580 data lathe,latte,laugh,layer,leaky\n10585 data learn,lease,leash,least,leave\n10590 data ledge,leech,leery,legal,legit\n10595 data lemon,lemur,leper,levee,level\n10600 data lever,libel,liege,light,lilac\n10605 data limbo,limit,linen,lingo,lithe\n10610 data liven,liver,livid,llama,loamy\n10615 data loath,lobby,local,locus,lodge\n10620 data logic,lolly,loner,loose,lorry\n10625 data loser,lotus,louse,lover,lower\n10630 data lowly,loyal,lucid,lucky,lumen\n10635 data lunar,lunch,lunge,lupus,lurch\n10640 data lurid,lynch,lyric,macho,macro\n10645 data madam,mafia,magic,magma,magus\n10650 data maize,major,manga,mange,mango\n10655 data mania,manic,manor,manse,manta\n10660 data marry,marsh,mason,match,matte\n10665 data maven,maxim,maybe,mayor,meant\n10670 data mecca,medal,media,medic,melee\n10675 data melon,mercy,merge,merit,merry\n10680 data messy,metal,metro,micro,might\n10685 data mimic,mince,minor,minus,mirth\n10690 data modal,model,modem,moggy,mogul\n10695 data moist,money,mooch,moody,moose\n10700 data moron,morph,motel,motif,motor\n10705 data motto,mound,mount,mourn,mouse\n10710 data mouth,movie,mucus,muddy,mulch\n10715 data mural,music,nacho,naive,naked\n10720 data nanny,nappy,nasal,nasty,navel\n10725 data nerve,never,niche,niece,night\n10730 data ninja,nitro,nodal,noise,noisy\n10735 data nomad,noose,north,notch,nurse\n10740 data nutty,nylon,nymph,oaken,oasis\n10745 data occur,ocean,octal,octet,offal\n10750 data offer,often,omega,oozed,opera\n10755 data opium,optic,orate,orbit,order\n10760 data organ,other,otter,ought,ounce\n10765 data ovary,overt,owner,oxide,ozone\n10770 data pagan,pager,paint,paleo,panda\n10775 data panel,panic,pansy,pants,paper\n10780 data party,pasta,paste,patch,patio\n10785 data pause,peace,peach,pearl,pedal\n10790 data penal,pence,penis,perch,peril\n10795 data petal,petty,phase,phial,phone\n10800 data phony,photo,piano,piece,pilot\n10805 data pinch,pinup,pique,pitch,pithy\n10810 data pixel,pizza,place,plaid,plain\n10815 data plait,plane,plank,plant,plate\n10820 data plaza,plead,pleas,plonk,plumb\n10825 data plume,plump,plush,poach,point\n10830 data poise,poker,pokes,polar,polio\n10835 data polka,polyp,pooch,porch,pores\n10840 data posse,potty,pouch,pound,power\n10845 data prank,prawn,preen,press,price\n10850 data prick,pride,prime,print,prior\n10855 data prism,privy,prize,probe,prone\n10860 data prong,proof,proud,prove,prowl\n10865 data proxy,prude,pulse,punch,pupil\n10870 data puree,purge,purse,pushy,pussy\n10875 data putty,pygmy,pylon,quake,qualm\n10880 data quark,quart,quash,quasi,queer\n10885 data query,quest,queue,quick,quiet\n10890 data quire,quirk,quirt,quite,quota\n10895 data quote,radar,radio,rainy,ranch\n10900 data randy,range,rapid,ratio,raven\n10905 data razor,reach,react,realm,rebel\n10910 data refer,regal,rehab,reign,reins\n10915 data relax,relay,relic,remit,remix\n10920 data reply,resin,retro,retry,reuse\n10925 data revel,revue,rhino,rhyme,rider\n10930 data ridge,right,rigid,rigor,rinse\n10935 data risky,rival,roach,roast,robed\n10940 data robin,robot,rocks,rocky,rodeo\n10945 data roger,rogue,roman,rotor,rouge\n10950 data rough,round,rouse,roust,route\n10955 data royal,ruble,ruddy,rugby,ruins\n10960 data ruler,runic,runny,rural,rusty\n10965 data sable,saint,salad,salon,salsa\n10970 data salty,salve,salvo,samba,sandy\n10975 data sarge,satay,sated,satin,satyr\n10980 data sauce,saucy,sauna,saute,savvy\n10985 data scale,scalp,scaly,scamp,scant\n10990 data scare,scarf,scary,scene,scent\n10995 data scoff,scold,scone,scoop,scoot\n11000 data scope,score,scorn,scour,scout\n11005 data scowl,scram,scrap,screw,scrum\n11010 data scuba,sedan,semen,sense,sepia\n11015 data serif,serum,serve,servo,setup\n11020 data seven,sever,sewer,shack,shade\n11025 data shady,shaft,shake,shaky,shale\n11030 data shall,shalt,shame,shank,shape\n11035 data shard,share,shark,sharp,shave\n11040 data shawl,sheaf,shear,sheen,sheep\n11045 data sheer,sheet,shelf,shell,shine\n11050 data shiny,shire,shirt,shoal,shock\n11055 data shoes,shoot,shore,short,shout\n11060 data shove,shred,shrew,shrub,shrug\n11065 data shunt,siege,sieve,sight,sigma\n11070 data silky,silly,since,sinew,singe\n11075 data sinus,siren,sixty,skate,skein\n11080 data skint,skirt,skulk,skull,skunk\n11085 data slack,slain,slang,slant,slash\n11090 data slate,sleek,sleep,sleet,slept\n11095 data slice,slick,slide,slime,sling\n11100 data sloop,slope,slosh,sloth,slump\n11105 data slung,slush,sluts,smack,small\n11110 data smart,smash,smear,smell,smile\n11115 data smirk,smite,smith,smock,smoke\n11120 data snack,snail,snake,snare,sneak\n11125 data sneer,snipe,snoop,snore,snort\n11130 data snout,solar,solid,solve,sonar\n11135 data sonic,sooth,sorry,sound,space\n11140 data spade,spank,spare,spark,spasm\n11145 data spawn,speak,spear,speck,speed\n11150 data spell,spend,spent,sperm,spice\n11155 data spicy,spiel,spill,spine,spire\n11160 data spite,spoil,spoke,spoof,spook\n11165 data spool,spoon,spore,sport,spout\n11170 data spray,spree,sprig,spunk,spurn\n11175 data spurt,squad,squat,squid,stack\n11180 data staff,stage,stain,stair,stake\n11185 data stale,stalk,stall,stamp,stand\n11190 data stare,stark,start,stash,state\n11195 data steak,steal,steam,steed,steel\n11200 data steep,steer,stent,stern,stick\n11205 data stiff,still,stilt,sting,stink\n11210 data stint,stoat,stock,stoic,stoke\n11215 data stole,stomp,stone,stony,stood\n11220 data stool,stoop,store,stork,storm\n11225 data story,stout,stove,strap,straw\n11230 data stray,strum,strut,stuck,study\n11235 data stuff,stump,stung,stunt,style\n11240 data suave,suede,sugar,suite,sunny\n11245 data super,surge,surly,sushi,swamp\n11250 data swarm,swear,sweat,swede,sweep\n11255 data sweet,swell,swept,swift,swill\n11260 data swine,swing,swipe,swirl,swish\n11265 data swoon,swoop,sword,swore,sworn\n11270 data synth,syrup,taboo,taffy,taint\n11275 data taken,talon,tango,tangy,tapas\n11280 data tardy,taste,tasty,taunt,teach\n11285 data tease,teddy,tempo,tempt,tenet\n11290 data tenor,tense,tenth,tepid,terse\n11295 data theft,their,theme,there,these\n11300 data theta,thick,thief,thigh,thing\n11305 data think,third,thong,thorn,those\n11310 data three,threw,throb,throe,throw\n11315 data thumb,thyme,tiara,tibia,tidal\n11320 data tiger,tight,timid,titan,tithe\n11325 data title,titty,toast,today,toner\n11330 data tongs,tonic,tonne,tools,tooth\n11335 data topaz,topic,torch,torso,total\n11340 data touch,tough,towel,tower,toxic\n11345 data toxin,trace,track,tract,trade\n11350 data trail,train,trait,tramp,trawl\n11355 data tread,treat,trend,tress,triad\n11360 data trial,tribe,troll,trout,trove\n11365 data truce,truck,trunk,truss,trust\n11370 data truth,tryst,tulip,tuner,tunic\n11375 data turbo,turds,tutor,tweak,tweed\n11380 data twice,twine,twist,udder,ulcer\n11385 data ultra,uncap,uncle,uncut,under\n11390 data undue,unify,union,unite,unlit\n11395 data untie,until,unzip,upper,upset\n11400 data urban,usage,usual,usurp,usury\n11405 data utter,vague,valet,valid,value\n11410 data valve,vapid,vault,vaunt,venom\n11415 data venue,verge,verse,verve,vicar\n11420 data video,vigil,vigor,villa,vinyl\n11425 data viola,viper,viral,virus,visit\n11430 data visor,vista,vital,vivid,vixen\n11435 data vocal,vodka,vogue,vomit,vouch\n11440 data vowel,vulva,wafer,wager,wages\n11445 data wagon,waist,waive,waltz,waste\n11450 data watch,water,waxen,weary,weave\n11455 data wedge,weigh,weird,welsh,wench\n11460 data whack,whale,wharf,wheat,wheel\n11465 data whelm,where,which,whiff,while\n11470 data whine,whirl,white,whole,whore\n11475 data whose,widow,width,wield,wince\n11480 data winch,witch,witty,woman,women\n11485 data woods,woody,world,worry,worse\n11490 data worst,worth,would,wound,woven\n11495 data wrath,wreak,wreck,wrest,wring\n11500 data wrist,write,wrong,wurst,xenon\n11505 data yacht,yodel,young,youth,yummy\n11510 data zebra\n","sourcePath":"external/github.com/spiroharvey_c64/Wordle/wordle13.bas","sourceMtimeMs":1674155094000,"sourceUrl":"https://github.com/spiroharvey/c64/blob/main/wordle13.bas","sourceRepoUrl":"https://github.com/spiroharvey/c64","license":"UNKNOWN","attribution":"Source: spiroharvey/c64 (License unknown)"},{"name":"github.com/StefanHolmes_C64-Snake/snake.bas","language":"basic","vector":[0.004342146683484316,0.0065132202580571175,0,-0.002171073341742158,-0.02605288103222847,0,0.002171073341742158,0.023881807923316956,0,-0.05861898139119148,-0.007598757278174162,0,0.0065132202580571175,0.0065132202580571175,0,-0.019539661705493927,-0.0227962713688612,0,0.16500158607959747,0.03365163877606392,0,-0.008684293366968632,-0.004884915426373482,0,0.02171073481440544,0.022253502160310745,0,-0.05210576206445694,-0.00271384185180068,0,0.030395029112696648,0.053191300481557846,0,-0.0065132202580571175,-0.008141525089740753,0,0,0.0032566101290285587,0,-0.015197514556348324,-0.010312599129974842,0,0.01085536740720272,0.017368586733937263,0,0,-0.01465474534779787,0,0.01085536740720272,0.00271384185180068,0,-0.03473717346787453,-0.002171073341742158,0,0.01085536740720272,0.004342146683484316,0,-0.002171073341742158,-0.03527994453907013,0,0.004342146683484316,0.04450700432062149,0,-0.0065132202580571175,-0.00271384185180068,0,0.4428989887237549,0.010312599129974842,0,-0.002171073341742158,-0.017911355942487717,0,0.004342146683484316,0.0016283050645142794,0,-0.004342146683484316,-0.0065132202580571175,0,0.002171073341742158,0.0032566101290285587,0,-0.02171073481440544,-0.009769830852746964,0,0.008684293366968632,0.0005427683354355395,0,-0.08467186242341995,-0.011940903961658478,0,0.023881807923316956,0.008141525089740753,0,-0.054276835173368454,-0.015740282833576202,0,0.0065132202580571175,0.00271384185180068,0,-0.002171073341742158,-0.002171073341742158,0,0.0911850854754448,0.007055988535284996,0,-0.05644790828227997,-0.07164542376995087,0,0.004342146683484316,0.004342146683484316,0,-0.004342146683484316,-0.011940903961658478,0,0.015197514556348324,0.08358632773160934,0,-0.002171073341742158,-0.015197514556348324,0,0.004342146683484316,0.013569208793342113,0,0,-0.028766723349690437,0,0.5666501522064209,0.01845412515103817,0,-0.07381650060415268,-0.0113981356844306,0,0.004342146683484316,0.014111977070569992,0,-0.0065132202580571175,-0.008684293366968632,0,0,0.008684293366968632,0,-0.008684293366968632,0,0,0.017368586733937263,0.014111977070569992,0,-0.017368586733937263,-0.017368586733937263,0,0.039079323410987854,0.00542768370360136,0,-0.03256610035896301,-0.004884915426373482,0,0.004342146683484316,0.007598757278174162,0,-0.019539661705493927,-0.004884915426373482,0,0,0.22253502905368805,0,-0.017368586733937263,-0.0016283050645142794,0,0.04125039651989937,0.0032566101290285587,0,-0.19539661705493927,-0.013026440516114235,0,0.017368586733937263,0.0016283050645142794,0,-0.017368586733937263,-0.01085536740720272,0,0.07381650060415268,0.007598757278174162,0,-0.008684293366968632,-0.046678077429533005,0,0,0.012483672238886356,0,-0.02605288103222847,-0.02930949069559574,0,0.02171073481440544,0.003799378639087081,0,-0.01085536740720272,-0.00271384185180068,0,0.06296113133430481,0.0455925427377224,0,-0.01085536740720272,-0.03419440612196922,0,0.14329084753990173,0.0032566101290285587,0,-0.03256610035896301,-0.007598757278174162,0,0.013026440516114235,0.008684293366968632,0,-0.01085536740720272,-0.0016283050645142794,0,0.02605288103222847,0.00271384185180068,0,-0.0455925427377224,-0.01465474534779787,0,0.002171073341742158,0.28495338559150696,0,-0.004342146683484316,-0.04179316386580467,0,0.008684293366968632,0.04342146962881088,0,-0.054276835173368454,-0.00542768370360136,0,0.17368587851524353,0.00542768370360136,0,-0.01085536740720272,-0.017368586733937263,0,0.015197514556348324,0.016283050179481506,0,-0.03690825030207634,-0.010312599129974842,0,0.002171073341742158,0.019539661705493927,0,-0.008684293366968632,-0.02008242905139923,0,0.008684293366968632,0.004884915426373482,0,-0.02605288103222847,-0.009769830852746964,0,0.002171073341742158,0.00271384185180068,0,0,-0.017368586733937263,0,0.023881807923316956,0.023339038714766502,0,-0.019539661705493927,-0.09824107587337494,0,0.002171073341742158,0.009769830852746964,0,-0.004342146683484316,-0.010312599129974842,0,0.023881807923316956,0.14763300120830536,0,-0.1693437248468399,-0.004884915426373482,0,0.004342146683484316,0.001085536670871079,0,-0.008684293366968632,-0.014111977070569992,0,0.004342146683484316,0.0113981356844306,0,-0.04342146962881088,-0.01085536740720272,0,0.01085536740720272,0.03365163877606392,0,-0.01085536740720272,-0.026595650240778923,0,0.013026440516114235,0.07761587202548981,0,-0.03256610035896301,-0.029852259904146194,0,0.05644790828227997,0.008141525089740753,0,-0.004342146683484316,-0.005970451980829239,0,0.013026440516114235,0.03582271188497543,0,0,-0.03690825030207634,0,0.03473717346787453,0.002171073341742158,0,0,-0.0032566101290285587,0,0,0.008141525089740753,0,-0.015197514556348324,-0.02768118679523468,0,0.02171073481440544,0.08792847394943237,0,-0.0065132202580571175,-0.00542768370360136,0,0.004342146683484316,0.14926129579544067,0,-0.002171073341742158,-0.03690825030207634,0,0.004342146683484316,0.002171073341742158,0,-0.04342146962881088,-0.005970451980829239,0,0.002171073341742158,0.004342146683484316,0,0,-0.015197514556348324,0,0.013026440516114235,0.00542768370360136,0,-0.017368586733937263,-0.004342146683484316,0,0.002171073341742158,0.02171073481440544,0,-0.008684293366968632,-0.017911355942487717,0,0.002171073341742158,0.002171073341742158,0,-0.0065132202580571175,-0.007055988535284996,0,0,0.011940903961658478,0,-0.023881807923316956,-0.08901400864124298,0,0.004342146683484316,0.012483672238886356,0,-0.02171073481440544,-0.053191300481557846,0],"text":"!- Open this in CMB prg Studio!\n\n0 POKE53265,PEEK(53265)AND239:POKE53281,.:POKE53280,.\n1 DIMX(255):DIMY(255):S=54276\n2 GOSUB980\n\n!- C  = Address of top left corner of playfield in colour RAM\n!- W  = Player snake body colour\n!- H  = Player snake head colour\n!- T  = Player snake end of tail colour\n!- F  = Food colour\n!- L  = Initial snake length -1\n!- N  = (1 = Need to place a random food. 0 = Do not need)\n!- G  = Game state: 1 = Playing, 2 = Game over\n!- S  = SID base address + 4\n!- P  = Points (score)\n!- A  = 600 (Y limit) - just for a minor speedup\n3 C=55548:W=13:H=7:T=9:F=4:L=4:N=1:G=1:P=.:A=600\n\n!- DX = X direction\n!- DY = Y direction (*40)\n!- X, Y = Snake head position (0,0 = top left)\n!- HP = Index into X/Y array for previous snake head position\n!- TP = Index into X/Y array for snake tail position\n!- E = Has eaten (needs to grow)?\n!- (Reenable screen after)\n4 DX=1:DY=.:X=3:Y=.:HP=L:TP=.:FORI=.TOL:X(I)=I:NEXT:E=.:POKE53265,PEEK(53265)OR16\n\n!- Input handling. Prevent doubling back, because that is an unfair way to lose\n!- THENIF is faster than AND\n5 GETk$:IFk$=\"w\"THENIFDX<>.THENDY=-40:DX=.\n6 IFk$=\"s\"THENIFDX<>.THENDY=40:DX=.\n7 IFk$=\"a\"THENIFDY<>.THENDY=.:DX=-1\n8 IFk$=\"d\"THENIFDY<>.THENDY=.:DX=1\n\n!- Try to find unoccupied space to place food. Careful of random upper bits being set in colour RAM.\n10 IFNTHENFP=C+INT(RND(.)*16)+(INT(RND(.)*16)*40):IF(PEEK(FP)AND15)=.THENN=.:POKEFP,F\n\n!- Update snake head position pointer, wrap around at snake length.\n20 X(HP)=X:Y(HP)=Y:HP=HP+1:IFHP>LTHENHP=.\n\n!- Blank the character where the end of the tail is.\n25 POKEC+X(TP)+Y(TP),.:TP=TP+1\n\n!- If tail end pointer is greater than the length, wrap around.\n!- If has eaten, decrement Eat and extend length.\n!- Update the position history array to account for growth.\n27 IFTP>LTHENTP=.:IFE>.THENL=L+1:E=E-1:X(L)=X(TP):Y(L)=Y(TP):TP=L\n\n!- Replace head with body segment. Update new head position. Wrap at border. \n30 POKEC+X+Y,W:POKEC+X(TP)+Y(TP),T:X=X+DX:IFX>15THENX=.\n35 IFX<.THENX=15\n40 Y=Y+DY:IFY>ATHENY=.\n45 IFY<.THENY=A\n\n!- Did we hit something? Was it our own body? Whoopsie.\n50 Z=PEEK(C+X+Y)AND15:IFZ<>.THENIFZ<>FTHENG=2\n\n!- Draw the head at the new position. Did we land on food? Update our score.\n55 POKEC+X+Y,H:IFINT(FP)=INT(C+X+Y)THENN=1:E=E+1:P=P+1:?\"{home}{down}{down}{down}{down}{down}{down}{down}{right}{right}{right}\";P\n65 POKES,48:POKES,49\n99 ONGGOTO5,100\n\n!- Game over. Turn the snake red starting from the tail end.\n100 FORI=1TOL:POKEC+X(TP)+Y(TP),2:TP=TP+1:IFTP>LTHENTP=0\n101 FORD=0TO9:NEXT:NEXT\n199 STOP\n\n!- Blank screen, draw, set up sound, return.\n980 ?\"{clear}{down}\",\"{right}{right}{right}{reverse on}{pink}{169}{reverse off}{yellow}{169}{right}{reverse on}{127}{right}{right}{cyan}{169}{light gray}{127}{right}{pink} {reverse off}{169}{right}{reverse on}{yellow} F\":?,\"{right}{right}{right}{reverse on}{cyan}{169}{reverse off}{purple}{169}{right}{reverse on}{yellow} {light green}{127}{right}{cyan} {light gray} {right}{purple} {127}{right}{light green} {cyan}E\"\n981 ?\"{right}{white}UC{light green}F{yellow}F{cyan}R{green}FF{light blue}CI\":?\"{right}{light green}B{right}{right}{right}{right}{right}{right}{right}{light blue}B\"\n982 ?\"{right}{yellow}H {light green}s{yellow}c{cyan}W{yellow}r{light green}e {blue}G {white}U{light green}C{yellow}F{cyan}F{pink}F{orange}R{red}RRRRRRRFF{orange}F{pink}C{yellow}I\"\n983 ?\"{right}{cyan}H{right}{right}{right}{right}{right}{right}{right}{blue}G{right}{light green}B\",,\"{left}{left}{yellow}B\":?\"{right}{green}H{right}{right}{right}{right}{right}{right}{right}{blue}G{right}{yellow}H\",,\"{left}{left}{pink}G\"\n984 ?\"{right}{green}B{right}{right}{right}{right}{right}{right}{right}{light blue}B{right}{cyan}H\",,\"{left}{left}{orange}G\":?\"{right}{light blue}JCD{blue}DED{light blue}DC{green}K{right}{pink}H\",,\"{left}{left}{red}G\"\n985 ?,\"{right}{orange}Y\",,\"{left}{left}{red}T\":FORI=.TO5:?,\"{right}Y\",,\"{left}{left}T\":NEXT\n986 ?,\"{right}Y\",,\"{left}{left}{orange}T\":?,\"{right}{red}H\",,\"{left}{left}{pink}G\":?,\"{right}{orange}H\",,\"{left}{left}{cyan}G\"\n987 ?,\"{right}{pink}H\",,\"{left}{left}{yellow}G\":?,\"{right}B\",,\"{left}{left}{light green}B\":?,\"{right}{yellow}J{pink}C{orange}D{red}DDEEEEEEE{orange}E{pink}D{cyan}D{yellow}D{light green}C{white}K\"\n988 ?\"{home}{down}{down}{down}{down}{down}{black}\":FORI=.TO15:?,\"{right}{right}QQQQQQQQQQQQQQQQ\":NEXT:?\"{white}\"\n989 POKES+20,15:POKES-4,.:POKES-3,2:POKES+1,18:POKES+2,.\n999 RETURN\n","sourcePath":"external/github.com/StefanHolmes_C64-Snake/snake.bas","sourceMtimeMs":1591221455000,"sourceUrl":"https://github.com/StefanHolmes/C64-Snake/blob/master/snake.bas","sourceRepoUrl":"https://github.com/StefanHolmes/C64-Snake","license":"LGPL-3.0","licenseSpdxId":"LGPL-3.0","licenseName":"GNU Lesser General Public License v3.0","licenseUrl":"https://github.com/StefanHolmes/C64-Snake/blob/master/LICENSE","attribution":"Source: StefanHolmes/C64-Snake (LGPL-3.0)"},{"name":"github.com/xopowoparvo_C64-type-in-programs/Games/Switchbox/Switchbox - BASIC code.txt","language":"basic","vector":[0.003092058701440692,0.016233308240771294,0,-0.001546029350720346,-0.0057976096868515015,0,0.001546029350720346,0.009662683121860027,0,-0.009276175871491432,-0.001546029350720346,0,0,0.011981727555394173,0,-0.026282498612999916,-0.010822204872965813,0,0.42206600308418274,0.05217848718166351,0,-0.004638087935745716,-0.009662683121860027,0,0.009276175871491432,0.03439915180206299,0,-0.004638087935745716,-0.009276175871491432,0,0.004638087935745716,0.09198874235153198,0,-0.03246661648154259,-0.002705551218241453,0,0.004638087935745716,0.007730146404355764,0,-0.030920585617423058,-0.020098380744457245,0,0.007730146404355764,0.007343639153987169,0,-0.029374556615948677,-0.009662683121860027,0,0,0.016619814559817314,0,-0.018552351742982864,-0.001546029350720346,0,0.004638087935745716,0.014300771057605743,0,-0.012368234805762768,-0.05024595186114311,0,0.1020379364490509,0.003478565951809287,0,-0.007730146404355764,-0.003092058701440692,0,0.23808851838111877,0.006570624653249979,0,-0.018552351742982864,-0.027055513113737106,0,0.020098380744457245,0.004251580685377121,0,-0.003092058701440692,-0.003092058701440692,0,0.012368234805762768,0.0057976096868515015,0,-0.021644409745931625,-0.03169360011816025,0,0.012368234805762768,0.010049190372228622,0,-0.19479969143867493,-0.014687278307974339,0,0.04638087749481201,0.008116654120385647,0,-0.027828527614474297,-0.006570624653249979,0,0.004638087935745716,0.003478565951809287,0,-0.06802529096603394,-0.001159521983936429,0,0.06957131624221802,0.001546029350720346,0,-0.004638087935745716,-0.03787771612405777,0,0.018552351742982864,0.000773014675360173,0,-0.04328881949186325,-0.026669004932045937,0,0.015460292808711529,0.2118060141801834,0,-0.017006322741508484,-0.003478565951809287,0,0.029374556615948677,0.006570624653249979,0,-0.05101896822452545,-0.003092058701440692,0,0.2365424782037735,0.004638087935745716,0,-0.19479969143867493,-0.017779337242245674,0,0.03555867448449135,0.021257903426885605,0,-0.006184117402881384,-0.016619814559817314,0,0.017006322741508484,0.006184117402881384,0,-0.004638087935745716,-0.018938858062028885,0,0.010822204872965813,0.007343639153987169,0,-0.006184117402881384,-0.010435697622597218,0,0.029374556615948677,0.002319043967872858,0,-0.003092058701440692,-0.013527756556868553,0,0.004638087935745716,0.05411102622747421,0,-0.004638087935745716,-0.006570624653249979,0,0.007730146404355764,0.12174981087446213,0,-0.012368234805762768,-0.009662683121860027,0,0.010822204872965813,0.013527756556868553,0,-0.3834152817726135,-0.025509484112262726,0,0.058749113231897354,0.007730146404355764,0,-0.013914263807237148,-0.011981727555394173,0,0.023190438747406006,0.008116654120385647,0,0,-0.10744903981685638,0,0.029374556615948677,0.025122975930571556,0,-0.030920585617423058,-0.014687278307974339,0,0.057203084230422974,0.004638087935745716,0,-0.029374556615948677,-0.03401264548301697,0,0.11904425919055939,0.03633168712258339,0,-0.003092058701440692,-0.006957131903618574,0,0.3092058598995209,0.009662683121860027,0,-0.001546029350720346,-0.023963455110788345,0,0.030920585617423058,0.008503161370754242,0,-0.021644409745931625,-0.008889668621122837,0,0.004638087935745716,0.015073785558342934,0,-0.017006322741508484,-0.027828527614474297,0,0.04483484849333763,0.11827123910188675,0,-0.003092058701440692,-0.103970468044281,0,0.029374556615948677,0.12329583615064621,0,-0.009276175871491432,-0.004251580685377121,0,0.001546029350720346,0.010822204872965813,0,-0.003092058701440692,-0.003478565951809287,0,0.010822204872965813,0.006570624653249979,0,-0.027828527614474297,-0.011208712123334408,0,0.001546029350720346,0.015846800059080124,0,-0.006184117402881384,-0.009276175871491432,0,0.004638087935745716,0.004251580685377121,0,-0.126774400472641,-0.009662683121860027,0,0.027828527614474297,0.003865073202177882,0,-0.021644409745931625,-0.010822204872965813,0,0.029374556615948677,0.006570624653249979,0,-0.007730146404355764,-0.19479969143867493,0,0.007730146404355764,0.054884038865566254,0,-0.001546029350720346,-0.008889668621122837,0,0.003092058701440692,0.0711173489689827,0,-0.1329585164785385,-0.004638087935745716,0,0.003092058701440692,0.019711874425411224,0,-0.05411102622747421,-0.016233308240771294,0,0.003092058701440692,0.03169360011816025,0,-0.004638087935745716,-0.020098380744457245,0,0.007730146404355764,0.06261418759822845,0,-0.003092058701440692,-0.05024595186114311,0,0.009276175871491432,0.16619814932346344,0,-0.006184117402881384,-0.007730146404355764,0,0.07575543224811554,0.016619814559817314,0,-0.004638087935745716,-0.027828527614474297,0,0.009276175871491432,0.019711874425411224,0,-0.017006322741508484,-0.009662683121860027,0,0.029374556615948677,0.027055513113737106,0,-0.004638087935745716,-0.012368234805762768,0,0,0.018552351742982864,0,-0.029374556615948677,-0.008889668621122837,0,0.012368234805762768,0.008116654120385647,0,-0.010822204872965813,-0.014300771057605743,0,0.010822204872965813,0.06454672664403915,0,-0.001546029350720346,-0.06261418759822845,0,0.013914263807237148,0.009662683121860027,0,-0.09585382044315338,-0.004638087935745716,0,0.006184117402881384,0.006570624653249979,0,-0.004638087935745716,-0.06454672664403915,0,0.007730146404355764,0.016619814559817314,0,-0.04019676148891449,-0.012368234805762768,0,0.007730146404355764,0.022030917927622795,0,-0.003092058701440692,-0.004638087935745716,0,0.009276175871491432,0.005024595186114311,0,0,-0.001932536601088941,0,0.006184117402881384,0.003478565951809287,0,-0.018552351742982864,-0.06957131624221802,0,0.001546029350720346,0.004251580685377121,0,-0.009276175871491432,-0.12290932983160019,0],"text":"100 FORA=54272TO54295:POKEA,0:NEXT:POKE54296,15:POKE54277,24:POKE54284,26\n110 V=54276:LB=54272:HB=LB+1\n120 DIMSW(4,7,1),SP$(1),LB(32,4),AR$(1),PT(4,16),SC(1,8)\n130 SP$(0)=\"{OFF}{C= *}{RVS}{C= *}{OFF}{C= @}\":SP$(1)=\"{C= @}{RVS}{SHIFT £}{OFF}{SHIFT £}\":AR$(0)=\"<{SHIFT I} {DOWN}{LEFT}{LEFT}{SHIFT J}{C= W}\":AR$(1)=\"{C= Q}{SHIFT K}{UP}{LEFT}{LEFT} {SHIFT U}>\":QR=1\n140 POKE53281,15:POKE53280,15:POKE646,6:TX=RND(-TI/137)\n150 FORJ=1TO4:READPT(J,0):REM NAME AND GOAL\n160 FORK=1TO8:READL:PT(J,K+8)=L:PT(J,9-K)=L:NEXTK,J:REM POINTS\n170 DATA 10:REM ROUND 1 (EQUAL)\n180 DATA 2,2,2,2,2,2,2,2\n190 DATA 40:REM ROUND 2 (FIBONACCI)\n200 DATA 1,2,3,5,8,13,21,34\n210 DATA 20:REM ROUND 3 (ARITHMETIC)\n220 DATA 2,3,4,5,6,7,8,9\n230 DATA 80:REM ROUND 4 (SQUARES)\n240 DATA 1,4,9,16,25,36,49,64\n250 PRINT\"{CLR}\":INPUT\"PLAYER 1\";P1$\n260 INPUT\"PLAYER 2\";P2$:P1$=LEFT$(P1$,5):P2$=LEFT$(P2$,5):PRINTP1$;\" VS \";P2$\n270 PRINT\"IS THIS CORRECT?\":POKE198,0:WAIT198,1:GETA$:IFASC(A$)<>89THEN250\n280 GOSUB450:GOSUB610:REM SETUP\n290 FORRR=1TO4:TX=1072+40*RR:POKETX,90:POKETX+22,90\n300 GOSUB560:REM PUT SCORES AT BOTTOM\n310 QR=1-QR:POKE646,6:TY=QR*20:TX=28-TY:CX=TX:CY=0\n320 M$=RIGHT$(STR$(PT(RR,0)),3)+\"{DOWN}{LEFT}{LEFT}{LEFT}   \":GOSUB1180\n330 TX=8+TY:CX=TX:CY=QR:M$=AR$(QR):GOSUB1180\n340 GOSUB770:IFSC(1-QR,RR)=>PT(RR,0)THEN360:REM END OF ROUND\n350 GOTO310\n360 FORJ=0TO1:FORK=5TO8:SC(J,K)=0:NEXTK,J\n370 FORJ=0TO1:FORK=1TO4:GL=PT(K,0):AC=SC(J,K):SC(J,5)=SC(J,5)+AC\n380 SC(J,6)=SC(J,6)-(AC=>GL)*GL:SC(J,7)=SC(J,7)+(SC(J,K)-SC(1-J,K)):NEXTK,J\n390 FORJ=0TO1:FORK=6TO7:SC(J,K)=SC(J,K)+SC(J,5):NEXTK,J\n400 FORJ=0TO1:FORK=5TO7:SC(J,8)=SC(J,8)+SC(J,K):NEXTK,J\n410 POKE646,11:FORJ=0TO1:FORK=5TO8:Y$=STR$(SC(J,K)):L=LEN(Y$):TX=6+J*31-L\n420 TY=3+K:CX=TX+(TX<20):CY=TY:M$=Y$:GOSUB1180:NEXTK,J\n430 NEXTRR:REM END OF MAIN LOOP 60-499\n440 POKE198,0:WAIT198,1:RUN\n450 PRINT\"{CLR}\";:PRINTSPC(11);\"{C= A}{RVS}{C= O}{OFF}\";:FORJ=1TO7:PRINT\"{OFF}{C= R}{RVS}{C= O}\";:NEXT:PRINT\"{OFF}{C= S}\":LL=7\n460 FORJ=0TO4:TX=9-2*J:TY=1+J*4:R$=\"{SHIFT -} \"\n470 FORK=1TO2:CX=TX:CY=TY+K-1:M$=\"\":GOSUB1180\n480 PRINT\"  {RVS} {OFF} \";:GOSUB550:PRINT\"{RVS} \":NEXT\n490 CX=TX:CY=TY+K-1:M$=\"\":GOSUB1180\n500 PRINT\" {RVS}{SHIFT £} {OFF} \";:GOSUB550:PRINT\"{RVS} {C= *}\":CX=TX:CY=TY+K:M$=\"\":GOSUB1180\n510 LL=LL+2:PRINT\"{RVS}{SHIFT £}{OFF}{SHIFT £}\";:GOSUB550:PRINT\"{LEFT}{C= *}{RVS}{C= *}{OFF}\";:NEXTJ\n520 PRINT:PRINT\"{RIGHT}{C= R} \";:GOSUB550:PRINT\"{C= R}\"\n530 R$=\"{RVS}{C= U}{OFF}{C= E}\":LL=LL+1:PRINT\" {C= Z}\";:GOSUB550:PRINT\"{LEFT}{C= X}\"\n540 RETURN\n550 FORL=1TOLL:PRINTR$;:NEXT:RETURN\n560 POKE646,11:FORJ=1TO16:K=PT(RR,J):JJ=2+J*2\n570 IFK>9THENL=INT(K/10):L$=MID$(STR$(L),2,1):GOTO590\n580 L$=CHR$(32)\n590 CX=JJ:CY=23:M$=L$:GOSUB1180:CX=JJ:CY=24:M$=RIGHT$(STR$(K),1):GOSUB1180\n600 NEXTJ:RETURN\n610 FORJ=0TO4:SY=4+J*4:FORK=0TOJ+3:SX=12-J*2+K*4\n620 CX=SX+1:CY=SY-1:M$=\" \":GOSUB1180\n630 M$=\" \":CX=SX+1:CY=SY-1:GOSUB1180:WP=INT(RND(1)*2)\n640 SW(J,K,0)=WP:SW(J,K,1)=0:GOSUB760\n650 NEXTK,J\n660 FORJ=1TO8:POKE1074+J*2,48+J:NEXT\n670 FORJ=0TO1:BX=J*31:CX=BX:CY=0:M$=\"\":GOSUB1180\n680 PRINT\"{OFF}{BLK}{C= D}{RVS}{PUR}       {DOWN}{LEFT}{LEFT}{LEFT}{LEFT}{LEFT}{LEFT}{LEFT}{LEFT}{RVS}{BLK}{C= K}{PUR}{C= D}{C= I}{C= I}{C= I}{C= I}{C= I}{C= F}\";\n690 FORK=1TO5:CX=BX:CY=K:M$=\"\":GOSUB1180:PRINT\"{RVS}{BLK}{C= K}{OFF}{PUR}{C= K}     {RVS}{C= K}\":NEXT\n700 CX=BX:CY=K:M$=\"\":GOSUB1180\n710 PRINT\"{RVS}{BLK}{C= K}{PUR}{C= C}{OFF}{C= I}{C= I}{C= I}{C= I}{C= I}{RVS}{C= V}{DOWN}{LEFT}{LEFT}{LEFT}{LEFT}{LEFT}{LEFT}{LEFT}{LEFT}{OFF}{BLK}{C= C}{RVS}{C= I}{C= I}{C= I}{C= I}{C= I}{C= I}{OFF}{C= V}\"\n720 NEXT:POKE646,4\n730 CX=3+(LEN(P1$)=5):CY=0:M$=\"{RVS}\"+P1$+\"{OFF}\":GOSUB1180\n740 CX=34+(LEN(P2$)=5):CY=0:M$=\"{RVS}\"+P2$+\"{OFF}\":GOSUB1180\n750 RETURN\n760 POKE646,1:CX=SX:CY=SY:M$=SP$(WP):GOSUB1180:RETURN \n770 FORJ=0TO32:LB(J,0)=0:NEXT:NB=1\n780 POKE198,0:WAIT198,1:GETA$\n790 IFA$=\"-\"THENRETURN\n800 IFA$=\"+\"THENA$=STR$(INT(RND(1)*8+1))\n810 A=VAL(A$):IF(A<1)OR(A>8)THEN780\n820 LB(0,0)=1:FORJ=1TO3:LB(0,J)=0:NEXT:LB(0,4)=10+A*2\n830 EX=1\n840 FORJ=0TO32:IFLB(J,0)THENEX=0:GOSUB870\n850 NEXT:IFEXTHENRETURN\n860 GOTO830\n870 DY=LB(J,0):DX=LB(J,1):LY=LB(J,2):NY=LB(J,3):NX=LB(J,4)\n880 SM=1064+NX+LY*160+NY*40:IF(LY+NY)THENPOKESM,32\n890 LB(J,3)=(NY+1)AND3:ONNY+1GOTO900,920,960,970\n900 IFLY>4THENLB(J,0)=0:GOTO1030:REM SCORING ROUTINE\n910 POKESM+40,81:ONINT(RND(1)*3+1)GOTO1080,1090,1100\n920 VX=0:GOSUB1020:IF SW(WY,WX,1)=0OR(SW(WY,WX,0)=SD)=0THEN940\n930 VX=1-2*SD:LB(J,1)=VX:LB(J,3)=NY+1:LB(J,4)=NX+VX:POKESM+40+VX,81:GOTO1120\n940 IF SW(WY,WX,0)=SDTHENLB(J,0)=0:SW(WY,WX,1)=1:POKESM+40,81:GOTO1110\n950 LB(J,3)=NY+1:POKESM+40,81:ONINT(RND(1)*3+1)GOTO1080,1090,1100\n960 LB(J,1)=0:LB(J,4)=NX+DX:POKESM+40+DX,81:GOTO1130\n970 LB(J,2)=LY+1:POKESM+40,81:GOSUB1020:SW(WY,WX,0)=1-SW(WY,WX,0)\n980 IF SW(WY,WX,1)=0THEN1010\n990 LB(NB,0)=1:LB(NB,1)=0:LB(NB,2)=LY:LB(NB,3)=0:LB(NB,4)=NX+2-SD*4:NB=NB+1\n1000 SW(WY,WX,1)=0:POKESM-40+2-SD*4,32:GOSUB1140\n1010 SX=12-WY*2+WX*4:SY=4+WY*4:WP=SW(WY,WX,0):GOSUB760:GOTO1120\n1020 WY=LY:JX=(NX/2)+LY-6:WX=INT(JX/2):SD=JXAND1:RETURN\n1030 SF=PT(RR,NX/2-1)\n1040 SG=SC(QR,RR)+SF:POKE646,11\n1050 TX=5+31*QR+(SG>9)+(SG>99)+(SG>999)\n1060 TY=1+RR:A$=MID$(STR$(SG),2)\n1070 CX=TX:CY=TY:M$=A$:GOSUB1180:SC(QR,RR)=SG:GOTO1150\n1080 POKELB,48:POKEHB,4:POKEV,32:POKEV,33:RETURN\n1090 POKELB,97:POKEHB,8:POKEV,32:POKEV,33:RETURN\n1100 POKELB,152:POKEHB,5:POKEV,32:POKEV,33:RETURN\n1110 POKEV,32:POKEV,33:FORA=50TO10STEP-1:POKEHB,A:NEXT:RETURN\n1120 RETURN\n1130 POKELB,152:POKEHB,10:POKEV,128:POKEV,129:RETURN\n1140 POKELB+7,0:POKEHB+7,2:POKEV+7,128:POKEV+7,129:RETURN\n1150 POKELB,195:POKEHB,16:POKELB+7,135:POKEHB+7,33:POKEV,32:POKEV,33:POKEV+7,32\n1160 POKEV+7,33:RETURN\n1170 REM CHAR COMMAND\n1180 POKE783,0:POKE781,CY:POKE782,CX:SYS65520:PRINTM$;:RETURN\n","sourcePath":"external/github.com/xopowoparvo_C64-type-in-programs/Games/Switchbox/Switchbox - BASIC code.txt","sourceMtimeMs":1629437922000,"sourceUrl":"https://github.com/xopowoparvo/C64-type-in-programs/blob/main/Switchbox/Switchbox%20-%20BASIC%20code.txt","sourceRepoUrl":"https://github.com/xopowoparvo/C64-type-in-programs","license":"UNKNOWN","attribution":"Source: xopowoparvo/C64-type-in-programs (License unknown)"},{"name":"github.com/xopowoparvo_C64-type-in-programs/Programs/ML Saver/ML Saver - BASIC code.txt","language":"basic","vector":[0.018871493637561798,0.009435746818780899,0,0,-0.0047178734093904495,0,0,0.014153620228171349,0,-0.09435746818780899,-0.023589367046952248,0,0,0.014153620228171349,0,0,-0.009435746818780899,0,0.39630135893821716,0.023589367046952248,0,0,-0.0047178734093904495,0,0.018871493637561798,0.018871493637561798,0,-0.037742987275123596,-0.047178734093904495,0,0.018871493637561798,0.11794683337211609,0,0,-0.009435746818780899,0,0.018871493637561798,0,0,0,-0.014153620228171349,0,0,0.033025115728378296,0,0,-0.0047178734093904495,0,0,0.0047178734093904495,0,-0.018871493637561798,-0.051896609365940094,0,0,0,0,-0.037742987275123596,-0.033025115728378296,0,0.056614480912685394,0,0,-0.018871493637561798,0,0,0.22645792365074158,0.009435746818780899,0,0,-0.014153620228171349,0,0,0.0047178734093904495,0,0,0,0,0,0.033025115728378296,0,-0.018871493637561798,-0.018871493637561798,0,0,0,0,-0.18871493637561798,-0.0047178734093904495,0,0.018871493637561798,0.009435746818780899,0,-0.037742987275123596,-0.014153620228171349,0,0,0.009435746818780899,0,0,0,0,0.09435746818780899,0,0,-0.018871493637561798,-0.13681833446025848,0,0.018871493637561798,0,0,-0.018871493637561798,-0.0047178734093904495,0,0.056614480912685394,0.20286856591701508,0,-0.09435746818780899,0,0,0.09435746818780899,0.014153620228171349,0,-0.037742987275123596,-0.028307240456342697,0,0.18871493637561798,0.009435746818780899,0,-0.18871493637561798,-0.0047178734093904495,0,0.037742987275123596,0.009435746818780899,0,-0.07548597455024719,0,0,0,0.0047178734093904495,0,-0.018871493637561798,-0.018871493637561798,0,0,0.023589367046952248,0,0,-0.014153620228171349,0,0.09435746818780899,0,0,0,-0.018871493637561798,0,0.018871493637561798,0.037742987275123596,0,0,-0.009435746818780899,0,0,0.11322896182537079,0,-0.037742987275123596,-0.009435746818780899,0,0,0,0,-0.20758643746376038,-0.014153620228171349,0,0,0,0,-0.018871493637561798,-0.009435746818780899,0,0.018871493637561798,0.0047178734093904495,0,-0.018871493637561798,-0.09435746818780899,0,0.056614480912685394,0.009435746818780899,0,0,-0.018871493637561798,0,0.09435746818780899,0,0,-0.018871493637561798,-0.009435746818780899,0,0.037742987275123596,0.047178734093904495,0,-0.037742987275123596,-0.009435746818780899,0,0.28307241201400757,0.014153620228171349,0,0,-0.009435746818780899,0,0,0.033025115728378296,0,-0.056614480912685394,-0.047178734093904495,0,0.056614480912685394,0.047178734093904495,0,-0.018871493637561798,-0.042460862547159195,0,0.018871493637561798,0.09435746818780899,0,-0.13210046291351318,-0.09435746818780899,0,0,0.11794683337211609,0,-0.018871493637561798,-0.037742987275123596,0,0,0.0047178734093904495,0,0,-0.018871493637561798,0,0,0.0047178734093904495,0,-0.056614480912685394,0,0,0.018871493637561798,0.051896609365940094,0,0,0,0,0.13210046291351318,0.009435746818780899,0,0,0,0,0,0,0,-0.018871493637561798,-0.023589367046952248,0,0,0,0,-0.056614480912685394,-0.11322896182537079,0,0,0.014153620228171349,0,0,-0.014153620228171349,0,0,0.06605023145675659,0,-0.35855838656425476,-0.009435746818780899,0,0,0.028307240456342697,0,-0.018871493637561798,0,0,0.018871493637561798,0.047178734093904495,0,0,-0.014153620228171349,0,0.018871493637561798,0.018871493637561798,0,-0.037742987275123596,-0.06605023145675659,0,0,0.14625407755374908,0,-0.018871493637561798,-0.009435746818780899,0,0,0,0,0,-0.028307240456342697,0,0.018871493637561798,0.051896609365940094,0,-0.07548597455024719,-0.014153620228171349,0,0.09435746818780899,0.014153620228171349,0,-0.018871493637561798,-0.07076810300350189,0,0,0.014153620228171349,0,0,-0.033025115728378296,0,0.037742987275123596,0.023589367046952248,0,0,-0.009435746818780899,0,0,0.047178734093904495,0,-0.037742987275123596,-0.07548597455024719,0,0,0.018871493637561798,0,-0.056614480912685394,-0.018871493637561798,0,0,0.06605023145675659,0,0,-0.0047178734093904495,0,0.018871493637561798,0,0,0,-0.009435746818780899,0,0,0.023589367046952248,0,0,-0.028307240456342697,0,0,0.0047178734093904495,0,-0.037742987275123596,0,0,0,0,0,0,-0.18871493637561798,0,0.018871493637561798,0,0,0,-0.06133235618472099,0],"text":"10 INPUT\"{CLR}{DOWN}PROGRAM NAME\";PN$:IFLEN(PN$)>8THENPN$=LEFT$(PN$,8)\n40 FORJ=1TOLEN(PN$):POKE2039+J,ASC(MID$(PN$,J,1)):NEXTJ\n50 PRINT\"{DOWN}{RVS}D{OFF}ISK OR {RVS}T{OFF}APE? \";\n60 GETA$:IFA$=\"\"THEN60\n70 IFA$=\"D\"THENDEVICE=8:GOTO100\n80 IFA$=\"T\"THENDEVICE=1:GOTO100\n90 GOTO60\n100 PRINTA$:POKE780,15:POKE781,DEVICE:POKE782,255:SYS65466\n110 POKE780,LEN(PN$):POKE781,248:POKE782,7:SYS65469\n120 INPUT\"{DOWN}BEGINNING ADDRESS\";BA\n130 HI=INT(BA/256):LO=BA-(HI*256)\n140 POKE251,LO:POKE252,HI\n150 INPUT\"{DOWN}ENDING ADDRESS\";EA\n160 HI=INT(EA/256):LO=EA-(HI*256)+1\n170 POKE780,251:POKE781,LO:POKE782,HI\n180 PRINT\"{DOWN}SAVING ML VERSION OF \";PN$\n190 SYS65496:END\n","sourcePath":"external/github.com/xopowoparvo_C64-type-in-programs/Programs/ML Saver/ML Saver - BASIC code.txt","sourceMtimeMs":1629437922000,"sourceUrl":"https://github.com/xopowoparvo/C64-type-in-programs/blob/main/Programs/ML%20Saver/ML%20Saver%20-%20BASIC%20code.txt","sourceRepoUrl":"https://github.com/xopowoparvo/C64-type-in-programs","license":"UNKNOWN","attribution":"Source: xopowoparvo/C64-type-in-programs (License unknown)"},{"name":"github.com/xopowoparvo_C64-type-in-programs/Programs/MultiMemory/MultiMemory - BASIC code.txt","language":"basic","vector":[0.004640236962586641,0.003480177838355303,0,0,-0.004640236962586641,0,0,0.008120414800941944,0,-0.013920711353421211,-0.003480177838355303,0,0,0.01160059217363596,0,-0.041762132197618484,-0.012760651297867298,0,0.055682845413684845,0.05452278256416321,0,-0.004640236962586641,0,0,0,0.003480177838355303,0,-0.009280473925173283,-0.008120414800941944,0,0.004640236962586641,0.2204112559556961,0,0,-0.025521302595734596,0,0.009280473925173283,0.0023201184812933207,0,-0.009280473925173283,-0.03132160007953644,0,0,0.0023201184812933207,0,-0.009280473925173283,-0.004640236962586641,0,0.032481659203767776,0.03828195482492447,0,-0.027841422706842422,0,0,0.013920711353421211,0.0023201184812933207,0,-0.004640236962586641,-0.019721006974577904,0,0.004640236962586641,0.0023201184812933207,0,-0.004640236962586641,0,0,0.013920711353421211,0.004640236962586641,0,-0.004640236962586641,-0.013920711353421211,0,0.04640236869454384,0,0,-0.004640236962586641,0,0,0,0,0,0,0,0,0.004640236962586641,0,0,0,-0.00580029608681798,0,0.004640236962586641,0.0011600592406466603,0,-0.018560947850346565,-0.008120414800941944,0,0,0.00580029608681798,0,0,-0.003480177838355303,0,0.004640236962586641,0.0011600592406466603,0,0,-0.009280473925173283,0,0.018560947850346565,0.0011600592406466603,0,0,-0.02204112522304058,0,0,0.02900148183107376,0,-0.02320118434727192,-0.004640236962586641,0,0.004640236962586641,0.003480177838355303,0,0,-0.00580029608681798,0,0.009280473925173283,0.008120414800941944,0,0,-0.00580029608681798,0,0.03712189570069313,0.03132160007953644,0,-0.009280473925173283,-0.004640236962586641,0,0,0.0011600592406466603,0,0,-0.008120414800941944,0,0.013920711353421211,0.02204112522304058,0,-0.04640236869454384,-0.026681361719965935,0,0.018560947850346565,0.008120414800941944,0,-0.009280473925173283,-0.0023201184812933207,0,0.004640236962586641,0.003480177838355303,0,-0.004640236962586641,-0.003480177838355303,0,0,0.025521302595734596,0,-0.004640236962586641,-0.0023201184812933207,0,0.009280473925173283,0.024361243471503258,0,-0.02320118434727192,-0.01160059217363596,0,0.004640236962586641,0.0011600592406466603,0,0,0,0,0.004640236962586641,0.003480177838355303,0,-0.004640236962586641,-0.006960355676710606,0,0,0.0023201184812933207,0,-0.004640236962586641,-0.009280473925173283,0,0.004640236962586641,0,0,0,0,0,0.004640236962586641,0.0023201184812933207,0,-0.004640236962586641,-0.0011600592406466603,0,0.8352426290512085,0.009280473925173283,0,0,-0.0011600592406466603,0,0,0.0011600592406466603,0,-0.12528640031814575,-0.01160059217363596,0,0,0.0023201184812933207,0,-0.009280473925173283,-0.003480177838355303,0,0.004640236962586641,0.004640236962586641,0,0,-0.010440533049404621,0,0,0.032481659203767776,0,-0.004640236962586641,-0.00580029608681798,0,0,0,0,0,-0.0023201184812933207,0,0.009280473925173283,0.008120414800941944,0,0,-0.02320118434727192,0,0,0.01160059217363596,0,0,-0.006960355676710606,0,0,0.0023201184812933207,0,0,-0.004640236962586641,0,0,0.008120414800941944,0,-0.013920711353421211,-0.009280473925173283,0,0.004640236962586641,0.008120414800941944,0,-0.02320118434727192,-0.012760651297867298,0,0.013920711353421211,0.003480177838355303,0,-0.013920711353421211,-0.0011600592406466603,0,0.004640236962586641,0.00580029608681798,0,-0.009280473925173283,-0.003480177838355303,0,0.004640236962586641,0.01160059217363596,0,-0.004640236962586641,-0.003480177838355303,0,0.004640236962586641,0.0023201184812933207,0,-0.009280473925173283,0,0,0.013920711353421211,0.003480177838355303,0,-0.004640236962586641,-0.0023201184812933207,0,0.02320118434727192,0.4187813997268677,0,-0.02320118434727192,-0.004640236962586641,0,0.10672544687986374,0,0,0,-0.06264320015907288,0,0.004640236962586641,0.0011600592406466603,0,-0.013920711353421211,-0.004640236962586641,0,0.02320118434727192,0.006960355676710606,0,-0.05104260519146919,0,0,0.004640236962586641,0,0,0,-0.008120414800941944,0,0.004640236962586641,0.0011600592406466603,0,-0.004640236962586641,0,0,0.07424379140138626,0.006960355676710606,0,0,0,0,0.004640236962586641,0.009280473925173283,0,-0.03712189570069313,-0.0023201184812933207,0,0.004640236962586641,0,0,0,0,0,0.004640236962586641,0.003480177838355303,0,-0.027841422706842422,-0.018560947850346565,0,0,0.006960355676710606,0,0,-0.013920711353421211,0,0,0.008120414800941944,0,0,-0.008120414800941944,0,0,0.0023201184812933207,0,-0.004640236962586641,-0.00580029608681798,0,0,0.004640236962586641,0,-0.004640236962586641,-0.008120414800941944,0],"text":"100 POKE56,64:CLR\n110 FORI=40769TO40959:READA:POKEI,A:X=X+A:NEXT\n120 IFX<>22456THENPRINT\"ERROR IN DATA STATEMENTS.\":STOP\n130 POKE16384,0:POKE16385,0:POKE16386,0\n140 POKE32768,0:POKE32769,0:POKE32770,0:NEW\n150 DATA 174,210,159,189,210,159,170,160,0,185\n160 DATA 43,0,157,214,159,232,200,192,14,208\n170 DATA 244,32,228,255,41,15,240,249,201,4\n180 DATA 176,245,72,72,169,35,32,210,255,104\n190 DATA 24,105,48,32,210,255,169,13,32,210\n200 DATA 255,32,143,159,104,170,142,210,159,189\n210 DATA 210,159,170,160,0,189,214,159,153,43\n220 DATA 0,232,200,192,14,208,244,96,169,0\n230 DATA 168,153,0,212,200,192,25,144,248,169\n240 DATA 15,141,24,212,169,10,141,5,212,169\n250 DATA 84,141,15,212,169,39,141,1,212,169\n260 DATA 20,141,4,212,169,21,141,4,212,162\n270 DATA 0,134,251,160,0,200,208,253,232,208\n280 DATA 250,230,251,165,251,201,4,208,242,169\n290 DATA 0,141,4,212,96,1,0,14,28,1\n300 DATA 8,3,8,3,8,3,8,0,64,0\n310 DATA 64,0,64,1,64,3,64,3,64,3\n320 DATA 64,0,128,0,128,0,128,1,128,3\n330 DATA 128,3,128,3,128,65,159,65,159,65,159\n","sourcePath":"external/github.com/xopowoparvo_C64-type-in-programs/Programs/MultiMemory/MultiMemory - BASIC code.txt","sourceMtimeMs":1629437922000,"sourceUrl":"https://github.com/xopowoparvo/C64-type-in-programs/blob/main/MultiMemory/MultiMemory%20-%20BASIC%20code.txt","sourceRepoUrl":"https://github.com/xopowoparvo/C64-type-in-programs","license":"UNKNOWN","attribution":"Source: xopowoparvo/C64-type-in-programs (License unknown)"},{"name":"github.com/xopowoparvo_C64-type-in-programs/Programs/Sound Experimenter/Sound Experimenter - BASIC code.txt","language":"basic","vector":[0.003712337464094162,0.005568506196141243,0,-0.003712337464094162,-0.006960632745176554,0,0.009280843660235405,0.004176379647105932,0,-0.1967538744211197,-0.02041785605251789,0,0.003712337464094162,0.027842530980706215,0,-0.022274024784564972,-0.02923465706408024,0,0.18747302889823914,0.04501209035515785,0,-0.012993181124329567,-0.005104464013129473,0,0.011137012392282486,0.0269144456833601,0,-0.01856168732047081,-0.02923465706408024,0,0.029698699712753296,0.15127775073051453,0,-0.012993181124329567,-0.005104464013129473,0,0.007424674928188324,0.004176379647105932,0,-0.005568506196141243,-0.008352759294211864,0,0.005568506196141243,0.015777433291077614,0,-0.001856168732047081,-0.023202108219265938,0,0.001856168732047081,0.007888716645538807,0,-0.02041785605251789,-0.0046404218301177025,0,0.011137012392282486,0.005568506196141243,0,-0.001856168732047081,-0.038051456212997437,0,0.007424674928188324,0.014849349856376648,0,-0.009280843660235405,-0.0064965905621647835,0,0.31554868817329407,0.011601054109632969,0,-0.027842530980706215,-0.03944358602166176,0,0.029698699712753296,0.007888716645538807,0,-0.007424674928188324,-0.02273806557059288,0,0.02041785605251789,0.02877061441540718,0,-0.009280843660235405,-0.01438530720770359,0,0.05939739942550659,0.003712337464094162,0,-0.05568506196141243,-0.007888716645538807,0,0.03341103717684746,0.022274024784564972,0,-0.003712337464094162,-0.017169559374451637,0,0.005568506196141243,0.0027842530980706215,0,-0.009280843660235405,-0.0032482952810823917,0,0.03155486658215523,0.0046404218301177025,0,-0.012993181124329567,-0.20696280896663666,0,0.02041785605251789,0.0046404218301177025,0,-0.005568506196141243,-0.019025728106498718,0,0.009280843660235405,0.09420055896043777,0,-0.022274024784564972,-0.009744885377585888,0,0.03712337464094162,0.007424674928188324,0,-0.131787970662117,-0.019489770755171776,0,0.29698699712753296,0.0208818968385458,0,-0.05754122883081436,-0.019025728106498718,0,0.03526720404624939,0.021345939487218857,0,-0.01670551858842373,-0.0032482952810823917,0,0.02041785605251789,0.0046404218301177025,0,-0.009280843660235405,-0.014849349856376648,0,0.01670551858842373,0.04129975289106369,0,-0.005568506196141243,-0.011137012392282486,0,0.10023310780525208,0.0064965905621647835,0,-0.014849349856376648,-0.0023202109150588512,0,0.027842530980706215,0.005104464013129473,0,-0.007424674928188324,-0.01252913847565651,0,0.014849349856376648,0.16055859625339508,0,-0.009280843660235405,-0.015777433291077614,0,0.001856168732047081,0.01624147593975067,0,-0.2153155654668808,-0.017169559374451637,0,0.01856168732047081,0.011601054109632969,0,-0.001856168732047081,-0.007888716645538807,0,0.001856168732047081,0.033875077962875366,0,0,-0.04129975289106369,0,0.06310973316431046,0.018097644671797752,0,-0.01670551858842373,-0.012065096758306026,0,0.03897954151034355,0.01252913847565651,0,-0.01670551858842373,-0.010208928026258945,0,0.09280843287706375,0.015777433291077614,0,-0.005568506196141243,-0.008352759294211864,0,0.2821376323699951,0.01438530720770359,0,-0.012993181124329567,-0.005568506196141243,0,0.009280843660235405,0.005568506196141243,0,-0.022274024784564972,-0.012065096758306026,0,0.05197272449731827,0.0208818968385458,0,-0.029698699712753296,-0.11508245766162872,0,0.009280843660235405,0.1494215726852417,0,-0.003712337464094162,-0.034339118748903275,0,0.011137012392282486,0.06450185924768448,0,-0.044548049569129944,-0.011601054109632969,0,0.048260387033224106,0.012993181124329567,0,0,-0.009280843660235405,0,0.012993181124329567,0.015777433291077614,0,-0.05011655390262604,-0.006032548379153013,0,0.02041785605251789,0.05197272449731827,0,-0.009280843660235405,-0.008816801011562347,0,0.03712337464094162,0.015313391573727131,0,-0.012993181124329567,-0.004176379647105932,0,0.014849349856376648,0.007888716645538807,0,-0.01670551858842373,-0.009744885377585888,0,0.05568506196141243,0.003712337464094162,0,-0.046404216438531876,-0.1081218272447586,0,0.003712337464094162,0.011137012392282486,0,-0.005568506196141243,-0.0032482952810823917,0,0,0.07981525361537933,0,-0.43434345722198486,-0.006960632745176554,0,0.011137012392282486,0.03897954151034355,0,-0.03155486658215523,-0.010208928026258945,0,0.001856168732047081,0.02459423430263996,0,-0.012993181124329567,-0.010672969743609428,0,0.007424674928188324,0.061253566294908524,0,-0.04083571210503578,-0.01670551858842373,0,0.024130193516612053,0.1494215726852417,0,-0.05011655390262604,-0.007424674928188324,0,0.07053440809249878,0.006032548379153013,0,-0.001856168732047081,-0.01345722284168005,0,0.007424674928188324,0.033875077962875366,0,-0.05568506196141243,-0.018097644671797752,0,0.1614866703748703,0.009744885377585888,0,-0.003712337464094162,-0.0032482952810823917,0,0.003712337464094162,0.007888716645538807,0,-0.005568506196141243,-0.027842530980706215,0,0.005568506196141243,0.03341103717684746,0,-0.03155486658215523,-0.03294699266552925,0,0.011137012392282486,0.08074333518743515,0,-0.007424674928188324,-0.03944358602166176,0,0.005568506196141243,0.019025728106498718,0,-0.0538288913667202,-0.008816801011562347,0,0.005568506196141243,0.023666150867938995,0,-0.012993181124329567,-0.008816801011562347,0,0.01670551858842373,0.011601054109632969,0,-0.0538288913667202,-0.009744885377585888,0,0.005568506196141243,0.052900806069374084,0,-0.04083571210503578,-0.0269144456833601,0,0.03897954151034355,0.008816801011562347,0,-0.022274024784564972,-0.0046404218301177025,0,0,0.003712337464094162,0,-0.007424674928188324,-0.21949194371700287,0,0.01670551858842373,0.006032548379153013,0,-0.011137012392282486,-0.06960632652044296,0],"text":"100 POKE53280,6:PRINT\"{CLR}{DOWN}{DOWN}{DOWN}{DOWN}{DOWN}{DOWN}{DOWN}\"SPC(9)\"C64 SOUND EXPERIMENTS\":FORT=1TO1300:NEXT\n110 L1=15:W1=65:A1=25:D1=9:S1=0:W2$=\"PULSE\":P1=2048:L2=15:F1$=\"NO\":P2%=8\n120 PRINT\"{CLR}{DOWN}     {RVS}     SOUND EFFECT MENU     {OFF}{DOWN}{DOWN}{DOWN}{DOWN}\"\n130 PRINT\" {RVS}1{OFF} WAVEFORM         {RVS}2{OFF} PULSE WIDTH {DOWN}\n140 PRINT\" {RVS}3{OFF} ATTACK/DECAY     {RVS}4{OFF} SUSTAIN/RELEASE {DOWN}\n150 PRINT\" {RVS}5{OFF} LOUDNESS         {RVS}6{OFF} SYNCHRONIZE V1TOV3\n160 PRINT\" {RVS}7{OFF} RING MODULATION  {RVS}8{OFF} FILTER/RESONANCE{DOWN}\n170 PRINT\" {RVS}9{OFF} MUSIC PLAYER     {RVS}10{OFF} ZERO VARIABLES {DOWN}\n180 PRINT\" {RVS}11{OFF} QUIT            {RVS}12{OFF} LIST OF EFFECTS{DOWN}\"\n190 INPUT\"{DOWN}{DOWN}ENTER NUMBER OF YOUR SELECTION\";A\n200 ON A GOTO520,340,220,280,790,370,630,820,1370,1030,1670,1040\n210 GOTO120\n220 PRINT\"{CLR}{DOWN}{DOWN}SET ATTACK VALUE BETWEEN 0 & 15\"\n230 PRINT\"{DOWN}CURRENT VALUE OF ATTACK IS\";(A1-D1)/16\n240 INPUT\"{DOWN}\";A3:A2=A3*16\n250 PRINT\"{DOWN}{DOWN}SET DECAY VALUE BETWEEN 0 & 15\"\n260 PRINT\"{DOWN}CURRENT VALUE OF DECAY IS\";D1\n270 INPUT\"{DOWN}\";D1:A1=A2+D1:GOTO120\n280 PRINT\"{CLR}{DOWN}{DOWN}SET SUSTAIN VALUE BETWEEN 0 & 15\"\n290 PRINT\"{DOWN}CURRENT VALUE OF SUSTAIN IS\";(S1-R1)/16\n300 INPUT\"{DOWN}\";S3:S2=S3*16\n310 PRINT\"{DOWN}{DOWN}SET RELEASE VALUE BETWEEN 0 & 15\"\n320 PRINT\"{DOWN}CURRENT VALUE OF RELEASE IS\";R1\n330 INPUT\"{DOWN}\";R1:S1=S2+R1:GOTO120\n340 PRINT\"{CLR}{DOWN}{DOWN}{DOWN}SELECT A PULSE WIDTH BETWEEN 0 & 4095\"\n350 PRINT\"{DOWN}{DOWN}CURRENT PULSE WIDTH IS\";P1\n360 INPUT\"{DOWN}\";P1:P2%=P1/256:p3%=P1-256*P2%:GOTO120\n370 PRINT\"{CLR}{DOWN}{DOWN}{DOWN}DO YOU WANT SYNCHRONIZING?\"\n380 INPUT\"TYPE Y OR N \";B$\n390 IFB$=\"N\"THENW1=W1AND253:S2=0:GOTO120\n400 IFB$=\"Y\"THENW1=(W1AND251)OR2:GOTO420\n410 GOTO380\n420 PRINT\"{DOWN}{DOWN}PRESENT FREQUENCY OF V3(VOICE3)IS\";V4\n430 INPUT\"{DOWN}{DOWN}ENTER FREQUENCY FOR V3\";V4:V3=INT(V4*16.4)\n440 V4%=V3/256:V5%=V3-(256*V4%)\n450 PRINT\"{DOWN}{DOWN} DO YOU WANT V3 TO BE OFFSET\n460 PRINT\"FROM FREQUENCY OF V1 BY\"\n470 PRINT\"AMOUNT YOU JUST ENTERED?\"\n480 INPUT\"{DOWN}TYPE Y OR N \";C$\n490 IFC$=\"N\"THENS2=0:GOTO120\n500 IFC$=\"Y\"THENS2=1\n510 GOTO120\n520 REM SET UP WAVEFORM TYPE\n530 PRINT\"{CLR}{DOWN}{DOWN}ENTER THE FIRST LETTER OF THE\":PRINT\"TYPE OF WAVEFORM YOU WANT:\n540 PRINT\"{DOWN}TRIANGLE, SAWTOOTH, PULSE, NOISE.\"\n550 PRINT\"{DOWN}WAVEFORM IS NOW SET TO \";W2$\n560 INPUT\"{DOWN}\";W$\n570 IFW$=\"T\"THENW1=17:W2$=\"TRIANGLE\"\n580 IFW$=\"S\"THENW1=33:W2$=\"SAWTOOTH\"\n590 IFW$=\"P\"THENW1=65:W2$=\"PULSE\"\n600 IFW$=\"N\"THENW1=129:W2$=\"NOISE\"\n610 IFW1=65GOTO340\n620 GOTO120\n630 PRINT\"{CLR}{DOWN}{DOWN}IF YOU SELECT RING MODULATION THEN\"\n640 PRINT\"WAVEFORM WILL BE SET TO TRIANGLE\n650 INPUT\"{DOWN}{DOWN}DO YOU WANT RING MOD? TYPE Y OR N\";R$\n660 IFR$=\"N\"THENW1=W1AND113:S2=0:GOTO120\n670 IFR$=\"Y\"THENW1=21:W2$=\"TRIANGLE\":GOTO690\n680 GOTO630\n690 PRINT\"{DOWN}FREQUENCY OF V3(VOICE 3) IS NOW SET AT \";V4\n700 INPUT\"{DOWN}SET FREQUENCY OF V3 \";V4:V3=INT(V4*16.4)\n710 V4%=V3/256:V5%=V3-(256*V4%)\n720 PRINT\"{DOWN}{DOWN}DO YOU WANT FREQ. OF V3 TO\"\n730 PRINT\"TO BE OFFSET FROM V1 BY\"\n740 PRINT\"AMOUNT YOU JUST ENTERED\"\n750 INPUT\"{DOWN}{DOWN}TYPE Y OR N \";O$\n760 IF O$=\"N\"THEN S2=0:GOTO120\n770 IF O$=\"Y\"THEN S2=1\n780 GOTO120\n790 PRINT\"{CLR}{DOWN}{DOWN}LOUDNESS IS NOW SET AT\";L1AND15\n800 INPUT\"{DOWN}{DOWN}SET LOUDNESS BETWEEN 0 & 15\";L2\n810 L1=L1AND240:L1=L2+L1:GOTO120\n820 PRINT\"{CLR}{DOWN}{DOWN}ENTER FIRST LETTER OF TYPE\":PRINT\"OF FILTERING YOU WANT:\n830 PRINT\"{DOWN}LOWPASS, BANDPASS, HIGHPASS,\n840 PRINT\"OR NOTCH FILTER {DOWN}\"\n850 PRINTF1$;\" FILTERING IS BEING USED NOW.\n860 INPUT\"{DOWN}TO TURN FILTERING OFF ENTER 0\";F$\n870 IFF$=\"0\"THENL1=L1AND15:R2=0:F1$=\"NO\":R6=0\n880 IFF$=\"N\"THENL1=L2+80:R2=1:F1$=\"NOTCH\"\n890 IFF$=\"L\"THENL1=L2+16:R2=1:F1$=\"LOWPASS\"\n900 IFF$=\"B\"THEN L1=L2+32:R2=1:F1$=\"BANDPASS\"\n910 IFF$=\"H\"THEN L1=L2+64:R2=1:F1$=\"HIGHPASS\"\n920 PRINT\"{CLR}{DOWN}{DOWN}CUTOFF FREQUENCY IS NOW SET AT\";F\n930 PRINT\"{DOWN}{DOWN}INPUT CUTOFF FREQUENCY\n940 INPUT\"BETWEEN 0 & 2047 CYCLES\";F\n950 F1%=F/8:F2%=F-(8*F1%):F$=\"\"\n960 PRINT\"{DOWN}{DOWN}DO YOU WANT TO SET RESONANCE\n970 INPUT\"TYPE Y OR N\";R$\n980 IFR$=\"Y\"GOTO1000\n990 R6=1:R5=0:GOTO120\n1000 PRINT\"{DOWN}RESONANCE IS NOW SET AT\";R5\n1010 PRINT\"{DOWN}{DOWN}SET RESONANCE BETWEEN 0 & 15\n1020 INPUTR5:R6=R5*16+1:GOTO120\n1030 CLR:F1$=\"NO\":GOTO120\n1040 REM PRINT LIST OF SOUND EFFECTS\n1050 PRINT\"{CLR}{DOWN}WAVEFORM TYPE IS \";W2$\n1060 IF W2$=\"PULSE\"THEN PRINT\"PULSEWIDTH IS \";P1\n1070 PRINT\"{DOWN}ATTACK IS \";(A1-D1)/16;\"  DECAY IS \";D1\n1080 PRINT\"{DOWN}SUSTAIN IS \";(S1-R1)/16;\" RELEASE IS \";R1\n1090 PRINT\"{DOWN}LOUDNESS IS SET TO \";L1AND15\n1100 IFR2=0GOTO1140\n1110 PRINT\"{DOWN}\"F1$\" FILTER BEING USED WITH\n1120 PRINT\"CUTOFF FREQUENCY OF \";F\n1130 PRINT\"{DOWN}RESONANCE IS \";R5\n1140 IFW1AND2THENPRINT\"{DOWN}SYNCHRONIZING IS ON\":GOTO1170\n1150 IFW1AND4THENPRINT\"{DOWN}RING MODULATION IS ON\":GOTO1170\n1160 GOTO1190\n1170 PRINT\"POKE54286 WITH\";V5%;\"& POKE54287 WITH\";V4%;\n1180 PRINT\"    TO SET V3 FREQ TO\";V4;\"HZ\n1190 IFS2=1THENPRINT\"FREQUENCY OFFSET IS BEING USED.\n1200 IFS2=1THENPRINT\"SEE PROGRAM LINES 1640-1660\n1210 INPUT\"{DOWN}PRESS RETURN TO CONTINUE\";R8\n1220 PRINT\"{CLR}{DOWN}VOICE 1{RIGHT}{RIGHT}{RIGHT}VOICE 2{RIGHT}{RIGHT}{RIGHT}VOICE 3{RIGHT}{RIGHT}{RIGHT}VALUE TO {DOWN}\"\n1230 PRINT\"REGISTER{RIGHT}{RIGHT}REGISTER{RIGHT}{RIGHT}REGISTER{RIGHT}{RIGHT}BE POKED{DOWN}\"\n1240 S(0)=P3%:S(1)=P2%:S(2)=W1:S(3)=A1:S(4)=S1\n1250 FORS=0TO4\n1260 PRINT 54274+S,54281+S,54288+S,S(S):NEXT\n1270 PRINT\"{DOWN}{DOWN}FILTERING & LOUDNESS\"\n1280 PRINT 54293;TAB(30);F2%\n1290 PRINT 54294;TAB(30);F1%\n1300 PRINT 54296;TAB(30);L1\n1310 PRINT\"{DOWN}RESONANCE & VOICE TO BE FILTERED\n1320 PRINT\"54295\";TAB(30);R6AND240\n1330 PRINT\"ADD 1 TO 54295 FOR FILTERING VOICE 1\n1340 PRINT\"ADD 2 TO 54295 FOR FILTERING VOICE 2\n1350 PRINT\"ADD 4 TO 54295 FOR FILTERING VOICE 3\n1360 INPUT\"PRESS RETURN TO CONTINUE \";R8:GOTO120\n1370 RE=54272:RESTORE\n1380 FORR=54272 TO 54296:POKER,0:NEXT\n1390 REM ENTER SOUND EFFECTS INTO SID\n1400 POKERE+2,P3%:POKERE+3,P2%\n1410 POKERE+5,A1:POKERE+6,S1:POKERE+14,V5%\n1420 POKERE+15,V4%:POKERE+21,F2%:POKERE+22,F1%\n1430 POKERE+23,R2:POKERE+24,L1\n1440 READN,D:IFN=0THENPOKERE+24,0:GOTO120:REM PLAY MUSIC\n1450 H=INT(N/256):L=N-(256*H):DUR=1600/D\n1460 POKERE+1,H:POKERE,L:POKERE+4,W1\n1470 IF S2=1 GOTO1630\n1480 FOR T=1TODUR:NEXT\n1490 IFW1<1GOTO1510\n1500 POKERE+4,W1-1\n1510 FORT=1TO20:NEXT:GOTO1440\n1520 DATA10814,8,11457,8\n1530 DATA12860,4,12860,16,14435,8,17167,8,10814,4,11457,8,10814,8\n1540 DATA9634,4,9634,16,11457,8,8101,8,8583,4\n1550 DATA10814,8,11457,8\n1560 DATA12860,4,12860,16,14435,8,17167,8,10814,4,11457,8,10814,8\n1570 DATA9634,4,9634,16,11457,8,8101,8,8583,4\n1580 DATA12860,4,17167,16\n1590 DATA21269,4,21269,16,21269,8,19269,8,17167,4,12860,8,12860,8\n1600 DATA14435,4,17167,16,17167,8,14435,8,12860,4,10814,4\n1610 DATA10814,4,10814,16,10814,8,9634,8,10814,4,12860,8,10814,8\n1620 DATA9634,4,9634,16,11457,8,8101,8,8583,4,0,0\n1630 REM DEVELOP OFFSET FREQUENCY\n1640 F1=H*256+L:F1=F1-V3:IFF1<0THENF1=0\n1650 V4%=F1/256:V5%=F1-(256*V4%)\n1660 POKERE+14,V5%:POKERE+15,V4%:GOTO1480\n1670 END\n","sourcePath":"external/github.com/xopowoparvo_C64-type-in-programs/Programs/Sound Experimenter/Sound Experimenter - BASIC code.txt","sourceMtimeMs":1629437922000,"sourceUrl":"https://github.com/xopowoparvo/C64-type-in-programs/blob/main/Sound%20Experimenter/Sound%20Experimenter%20-%20BASIC%20code.txt","sourceRepoUrl":"https://github.com/xopowoparvo/C64-type-in-programs","license":"UNKNOWN","attribution":"Source: xopowoparvo/C64-type-in-programs (License unknown)"},{"name":"github.com/xopowoparvo_C64-type-in-programs/Programs/Sprint | 64 Doodler Demo/64 Doodler Demo - BASIC code.txt","language":"basic","vector":[0,0.022023696452379227,0,0,0,0,0,0.013764810748398304,0,-0.1211303323507309,0,0,0,0.013764810748398304,0,-0.011011848226189613,-0.024776659905910492,0,0.3523791432380676,0.07708293944597244,0,-0.011011848226189613,-0.0027529620565474033,0,0.03303554654121399,0.024776659905910492,0,0,-0.005505924113094807,0,0,0.1046125590801239,0,-0.022023696452379227,-0.008258886635303497,0,0,0,0,-0.022023696452379227,-0.01927073486149311,0,0,0.011011848226189613,0,0,-0.008258886635303497,0,0,0.005505924113094807,0,-0.0880947858095169,-0.0027529620565474033,0,0.011011848226189613,0.008258886635303497,0,-0.011011848226189613,-0.07983589917421341,0,0.07708293944597244,0.027529621496796608,0,-0.011011848226189613,-0.024776659905910492,0,0.19821327924728394,0.008258886635303497,0,0,-0.030282583087682724,0,0.03303554654121399,0.005505924113094807,0,0,-0.0027529620565474033,0,0.011011848226189613,0.005505924113094807,0,-0.03303554654121399,-0.008258886635303497,0,0.04404739290475845,0,0,-0.18720142543315887,-0.0027529620565474033,0,0.011011848226189613,0.005505924113094807,0,-0.03303554654121399,-0.030282583087682724,0,0,0.005505924113094807,0,0,0,0,0.11011848598718643,0,0,-0.011011848226189613,-0.129389226436615,0,0,0.013764810748398304,0,0,-0.011011848226189613,0,0.011011848226189613,0.17894254624843597,0,-0.03303554654121399,-0.005505924113094807,0,0.022023696452379227,0.022023696452379227,0,-0.06607109308242798,0,0,0.18720142543315887,0.005505924113094807,0,-0.16517773270606995,-0.016517773270606995,0,0.03303554654121399,0.035788506269454956,0,-0.011011848226189613,-0.011011848226189613,0,0,0.005505924113094807,0,-0.011011848226189613,-0.0027529620565474033,0,0.011011848226189613,0.0027529620565474033,0,-0.011011848226189613,-0.04680035635828972,0,0.07708293944597244,0.005505924113094807,0,0,-0.013764810748398304,0,0.04404739290475845,0.04404739290475845,0,-0.022023696452379227,-0.008258886635303497,0,0,0.10185959935188293,0,-0.04404739290475845,0,0,0.04404739290475845,0.016517773270606995,0,-0.30833175778388977,-0.03303554654121399,0,0.06607109308242798,0.013764810748398304,0,0,-0.027529621496796608,0,0.011011848226189613,0.024776659905910492,0,0,-0.1046125590801239,0,0.011011848226189613,0.008258886635303497,0,-0.055059242993593216,-0.016517773270606995,0,0.022023696452379227,0.0027529620565474033,0,-0.011011848226189613,-0.0027529620565474033,0,0.055059242993593216,0.055059242993593216,0,0,-0.005505924113094807,0,0.39642655849456787,0.0027529620565474033,0,-0.011011848226189613,-0.011011848226189613,0,0,0.005505924113094807,0,-0.011011848226189613,-0.016517773270606995,0,0,0.011011848226189613,0,-0.011011848226189613,-0.06331812590360641,0,0,0.09360071271657944,0,-0.011011848226189613,-0.08534182608127594,0,0.03303554654121399,0.1046125590801239,0,-0.055059242993593216,-0.008258886635303497,0,0.04404739290475845,0.008258886635303497,0,-0.011011848226189613,-0.005505924113094807,0,0.011011848226189613,0.005505924113094807,0,-0.03303554654121399,-0.011011848226189613,0,0,0.03854146972298622,0,-0.011011848226189613,-0.005505924113094807,0,0,0.022023696452379227,0,-0.011011848226189613,-0.011011848226189613,0,0,0,0,-0.011011848226189613,-0.04404739290475845,0,0,0.024776659905910492,0,-0.03303554654121399,-0.15691883862018585,0,0.022023696452379227,0.05230627954006195,0,0,-0.0027529620565474033,0,0,0.055059242993593216,0,-0.2752962112426758,0,0,0.055059242993593216,0.013764810748398304,0,-0.022023696452379227,-0.027529621496796608,0,0.011011848226189613,0.013764810748398304,0,0,-0.013764810748398304,0,0.022023696452379227,0.03854146972298622,0,0,-0.04680035635828972,0,0.022023696452379227,0.2009662389755249,0,-0.022023696452379227,-0.013764810748398304,0,0.14315402507781982,0,0,0,-0.005505924113094807,0,0.022023696452379227,0.027529621496796608,0,-0.011011848226189613,-0.008258886635303497,0,0.011011848226189613,0,0,-0.011011848226189613,-0.005505924113094807,0,0,0.01927073486149311,0,-0.03303554654121399,-0.035788506269454956,0,0.022023696452379227,0.027529621496796608,0,-0.011011848226189613,-0.022023696452379227,0,0.011011848226189613,0.05230627954006195,0,0,-0.05781220644712448,0,0,0.008258886635303497,0,-0.13214218616485596,-0.008258886635303497,0,0.03303554654121399,0,0,-0.04404739290475845,-0.008258886635303497,0,0.011011848226189613,0.0027529620565474033,0,-0.04404739290475845,-0.008258886635303497,0,0.011011848226189613,0.01927073486149311,0,0,-0.016517773270606995,0,0.011011848226189613,0.022023696452379227,0,-0.011011848226189613,-0.005505924113094807,0,0,0,0,0,-0.14865995943546295,0,0.011011848226189613,0.03854146972298622,0,-0.04404739290475845,-0.0880947858095169,0],"text":"100 POKE53280,0:POKE53281,2:PRINT\"{CLR}{DOWN}{DOWN}{DOWN}{WHT}\"TAB(15)\"64 DOODLER\"\n110 PRINT\"{DOWN}{DOWN}{BLK}\"TAB(8)\"PLUG JOYSTICK INTO PORT 2\"\n120 PRINT\"{DOWN}\"TAB(9)\"USE IT TO DRAW PICTURES\"\n130 PRINT\"{DOWN}\"TAB(10)\"TRIGGER CLEARS SCREEN\":PRINT\"{DOWN}{DOWN}{DOWN}{DOWN}{WHT}\"TAB(14)\"PRESS ANY KEY\"\n140 GETA$:IFA$=\"\"THEN140\n150 PRINT\"{CLR}\":FORI=0TO7:READP(I):NEXT:DATA1,2,4,8,16,32,64,128\n160 FORI=0TO10:READDX(I),DY(I):NEXT\n170 DATA0,0,0,-1,0,1,0,0,-1,0,-1,-1,-1,1,0,0,1,0,1,-1,1,1\n180 POKE53272,PEEK(53272)OR8:POKE53265,PEEK(53265)OR32\n190 GOSUB300:FORI=1024TO2023:POKEI,2:NEXT\n200 X=160:Y=100\n210 GOSUB280:J=PEEK(56320):K=JAND16:IFK=0THENGOSUB300\n220 J=JAND15:J=15-J:X=X+DX(J):Y=Y+DY(J)\n230 IFX>319THENX=0\n240 IFX<0THENX=319\n250 IFY>199THENY=0\n260 IFY<0THENY=199\n270 GOTO210\n280 RO%=Y/8:CH%=X/8:LI=YAND7:BI=XAND7:BI=7-BI:B1=RO%*320:B2=CH%*8\n290 BY=8192+B1+B2+LI:POKEBY,PEEK(BY)ORP(BI):RETURN\n300 FORI=8192TO16383:POKEI,0:NEXT:RETURN\n","sourcePath":"external/github.com/xopowoparvo_C64-type-in-programs/Programs/Sprint | 64 Doodler Demo/64 Doodler Demo - BASIC code.txt","sourceMtimeMs":1629437922000,"sourceUrl":"https://github.com/xopowoparvo/C64-type-in-programs/blob/main/Sprint%20%7C%2064%20Doodler%20Demo/64%20Doodler%20Demo%20-%20BASIC%20code.txt","sourceRepoUrl":"https://github.com/xopowoparvo/C64-type-in-programs","license":"UNKNOWN","attribution":"Source: xopowoparvo/C64-type-in-programs (License unknown)"},{"name":"github.com/xopowoparvo_C64-type-in-programs/Type-in utilities/Automatic Proofreader 2/Automatic Proofreader 2 - BASIC code.txt","language":"basic","vector":[0,0.019863121211528778,0,0,0,0,0.008828054182231426,0.035312216728925705,0,-0.008828054182231426,-0.02758766897022724,0,0,0.017656108364462852,0,-0.044140271842479706,-0.009931560605764389,0,0.12800678610801697,0.03641572222113609,0,-0.004414027091115713,-0.01875961571931839,0,0,0.03200169652700424,0,-0.026484161615371704,-0.017656108364462852,0,0.030898189172148705,0.21187329292297363,0,0,-0.003310520201921463,0,0.004414027091115713,0.0022070135455578566,0,-0.004414027091115713,-0.026484161615371704,0,0.004414027091115713,0.015449094586074352,0,-0.013242080807685852,-0.01213857438415289,0,0.013242080807685852,0.017656108364462852,0,-0.013242080807685852,-0.0022070135455578566,0,0.026484161615371704,0.005517533980309963,0,-0.004414027091115713,-0.01875961571931839,0,0.022070135921239853,0.01213857438415289,0,-0.004414027091115713,-0.006621040403842926,0,0.022070135921239853,0.006621040403842926,0,-0.022070135921239853,-0.02317364141345024,0,0.04855429753661156,0,0,0,-0.015449094586074352,0,0,0.02427714876830578,0,-0.008828054182231426,-0.0011035067727789283,0,0.022070135921239853,0.004414027091115713,0,-0.06621040403842926,-0.009931560605764389,0,0.017656108364462852,0.0011035067727789283,0,-0.017656108364462852,-0.009931560605764389,0,0.004414027091115713,0.004414027091115713,0,0,-0.0022070135455578566,0,0.026484161615371704,0.004414027091115713,0,-0.013242080807685852,-0.02427714876830578,0,0.030898189172148705,0,0,0,-0.02427714876830578,0,0.004414027091115713,0.06731390953063965,0,-0.013242080807685852,-0.0022070135455578566,0,0.06621040403842926,0.016552601009607315,0,-0.044140271842479706,-0.026484161615371704,0,0.008828054182231426,0.020966628566384315,0,-0.07503846287727356,-0.003310520201921463,0,0.004414027091115713,0.011035067960619926,0,-0.008828054182231426,-0.009931560605764389,0,0.026484161615371704,0.007724547293037176,0,0,-0.01213857438415289,0,0.017656108364462852,0.013242080807685852,0,-0.026484161615371704,-0.007724547293037176,0,0.026484161615371704,0.01434558816254139,0,0,-0.003310520201921463,0,0.008828054182231426,0.01875961571931839,0,-0.008828054182231426,-0.003310520201921463,0,0,0.019863121211528778,0,-0.008828054182231426,-0.011035067960619926,0,0,0.026484161615371704,0,-0.09269456565380096,-0.008828054182231426,0,0.05296832323074341,0.0011035067727789283,0,0,-0.007724547293037176,0,0.008828054182231426,0.01434558816254139,0,-0.004414027091115713,-0.039726242423057556,0,0.026484161615371704,0.008828054182231426,0,-0.013242080807685852,-0.016552601009607315,0,0.07503846287727356,0.011035067960619926,0,-0.013242080807685852,0,0,0.08386651426553726,0.01434558816254139,0,-0.026484161615371704,-0.008828054182231426,0,0.7945248484611511,0.015449094586074352,0,-0.004414027091115713,-0.0022070135455578566,0,0,0.0022070135455578566,0,-0.09710859507322311,-0.006621040403842926,0,0,0.035312216728925705,0,-0.039726242423057556,-0.02427714876830578,0,0,0.004414027091115713,0,-0.008828054182231426,-0.04855429753661156,0,0.004414027091115713,0.03420871123671532,0,-0.004414027091115713,-0.005517533980309963,0,0.039726242423057556,0.013242080807685852,0,0,-0.006621040403842926,0,0,0.016552601009607315,0,-0.039726242423057556,-0.013242080807685852,0,0,0.01434558816254139,0,0,-0.0011035067727789283,0,0.026484161615371704,0.005517533980309963,0,-0.004414027091115713,-0.007724547293037176,0,0.008828054182231426,0.003310520201921463,0,-0.022070135921239853,-0.007724547293037176,0,0.004414027091115713,0.006621040403842926,0,-0.022070135921239853,-0.04745079204440117,0,0.017656108364462852,0.03200169652700424,0,-0.008828054182231426,-0.0011035067727789283,0,0,0.009931560605764389,0,-0.07945248484611511,-0.007724547293037176,0,0,0.025380656123161316,0,-0.008828054182231426,-0.006621040403842926,0,0.013242080807685852,0.03751923143863678,0,0,-0.008828054182231426,0,0.06621040403842926,0.04745079204440117,0,-0.05296832323074341,-0.029794681817293167,0,0.022070135921239853,0.4016764760017395,0,-0.013242080807685852,-0.006621040403842926,0,0.035312216728925705,0.0011035067727789283,0,-0.030898189172148705,-0.04855429753661156,0,0.022070135921239853,0.006621040403842926,0,-0.022070135921239853,-0.02317364141345024,0,0.026484161615371704,0.007724547293037176,0,-0.004414027091115713,-0.004414027091115713,0,0.004414027091115713,0.003310520201921463,0,-0.004414027091115713,-0.005517533980309963,0,0.030898189172148705,0.03641572222113609,0,-0.004414027091115713,-0.011035067960619926,0,0.035312216728925705,0.0022070135455578566,0,0,-0.03862273693084717,0,0.008828054182231426,0.0011035067727789283,0,-0.035312216728925705,-0.0022070135455578566,0,0.004414027091115713,0.019863121211528778,0,-0.013242080807685852,-0.0022070135455578566,0,0.013242080807685852,0.008828054182231426,0,-0.026484161615371704,-0.017656108364462852,0,0,0.008828054182231426,0,-0.030898189172148705,-0.011035067960619926,0,0.035312216728925705,0.011035067960619926,0,0,-0.006621040403842926,0,0.004414027091115713,0,0,-0.008828054182231426,-0.04193325713276863,0,0,0,0,-0.008828054182231426,-0.02758766897022724,0],"text":"10 VEC=PEEK(772)+256*PEEK(773):LO=43:HI=44\n20 PRINT \"AUTOMATIC PROOFREADER FOR \";:IF VEC=42364 THEN PRINT \"C-64\"\n30 IF VEC=50556 THEN PRINT \"VIC-20\"\n40 IF VEC=35158 THEN GRAPHIC CLR:PRINT \"PLUS/4 & 16\"\n50 IF VEC=17165 THEN LO=45:HI=46:GRAPHIC CLR:PRINT\"128\"\n60 SA=(PEEK(LO)+256*PEEK(HI))+6:ADR=SA\n70 FOR J=0 TO 166:READ BYT:POKE ADR,BYT:ADR=ADR+1:CHK=CHK+BYT:NEXT\n80 IF CHK<>20570 THEN PRINT \"*ERROR* CHECK TYPING IN DATA STATEMENTS\":END\n90 FOR J=1 TO 5:READ RF,LF,HF:RS=SA+RF:HB=INT(RS/256):LB=RS-(256*HB)\n100 CHK=CHK+RF+LF+HF:POKE SA+LF,LB:POKE SA+HF,HB:NEXT\n110 IF CHK<>22054 THEN PRINT \"*ERROR* RELOAD PROGRAM AND CHECK FINAL LINE\":END\n120 POKE SA+149,PEEK(772):POKE SA+150,PEEK(773)\n130 IF VEC=17165 THEN POKE SA+14,22:POKE SA+18,23:POKESA+29,224:POKESA+139,224\n140 PRINT CHR$(147);CHR$(17);\"PROOFREADER ACTIVE\":SYS SA\n150 POKE HI,PEEK(HI)+1:POKE (PEEK(LO)+256*PEEK(HI))-1,0:NEW\n160 DATA 120,169,73,141,4,3,169,3,141,5,3\n170 DATA 88,96,165,20,133,167,165,21,133,168,169\n180 DATA 0,141,0,255,162,31,181,199,157,227,3\n190 DATA 202,16,248,169,19,32,210,255,169,18,32\n200 DATA 210,255,160,0,132,180,132,176,136,230,180\n210 DATA 200,185,0,2,240,46,201,34,208,8,72\n220 DATA 165,176,73,255,133,176,104,72,201,32,208\n230 DATA 7,165,176,208,3,104,208,226,104,166,180\n240 DATA 24,165,167,121,0,2,133,167,165,168,105\n250 DATA 0,133,168,202,208,239,240,202,165,167,69\n260 DATA 168,72,41,15,168,185,211,3,32,210,255\n270 DATA 104,74,74,74,74,168,185,211,3,32,210\n280 DATA 255,162,31,189,227,3,149,199,202,16,248\n290 DATA 169,146,32,210,255,76,86,137,65,66,67\n300 DATA 68,69,70,71,72,74,75,77,80,81,82,83,88\n310 DATA 13,2,7,167,31,32,151,116,117,151,128,129,167,136,137\n","sourcePath":"external/github.com/xopowoparvo_C64-type-in-programs/Type-in utilities/Automatic Proofreader 2/Automatic Proofreader 2 - BASIC code.txt","sourceMtimeMs":1629437922000,"sourceUrl":"https://github.com/xopowoparvo/C64-type-in-programs/blob/main/Type-in%20utilities/Automatic%20Proofreader%202/Automatic%20Proofreader%202%20-%20BASIC%20code.txt","sourceRepoUrl":"https://github.com/xopowoparvo/C64-type-in-programs","license":"UNKNOWN","attribution":"Source: xopowoparvo/C64-type-in-programs (License unknown)"},{"name":"github.com/xopowoparvo_C64-type-in-programs/Type-in utilities/MLX 2/MLX 2 - BASIC code.txt","language":"basic","vector":[0.020395465195178986,0.008073205128312111,0,0,-0.006373582873493433,0,0.001699622138403356,0.03186791390180588,0,-0.05948677659034729,-0.01742112636566162,0,0.001699622138403356,0.007223394233733416,0,-0.035692065954208374,-0.03994112089276314,0,0.4520995020866394,0.062461115419864655,0,-0.01869584433734417,-0.003399244276806712,0,0.039091311395168304,0.030593199655413628,0,-0.006798488553613424,-0.011472449637949467,0,0.04588979855179787,0.08625582605600357,0,-0.023794710636138916,-0.0038241499569267035,0,0.015296599827706814,0.009347922168672085,0,-0.006798488553613424,-0.004673961084336042,0,0.008498110808432102,0.005098866298794746,0,-0.003399244276806712,-0.007223394233733416,0,0.005098866298794746,0.020395465195178986,0,-0.020395465195178986,-0.003399244276806712,0,0.006798488553613424,0.024219615384936333,0,-0.001699622138403356,-0.04758942127227783,0,0.027193954214453697,0.008073205128312111,0,-0.010197732597589493,-0.005948677659034729,0,0.24304597079753876,0.02676904946565628,0,-0.027193954214453697,-0.022944899275898933,0,0.006798488553613424,0.002549433149397373,0,-0.003399244276806712,-0.022944899275898933,0,0.013596977107226849,0.06161130219697952,0,-0.013596977107226849,-0.011047543957829475,0,0.011897355318069458,0.001699622138403356,0,-0.1478671282529831,-0.007648299913853407,0,0.030593199655413628,0.007223394233733416,0,-0.04588979855179787,-0.02804376557469368,0,0.001699622138403356,0.013596977107226849,0,-0.003399244276806712,0,0,0.057787153869867325,0.001699622138403356,0,-0.001699622138403356,-0.10495166480541229,0,0.005098866298794746,0.004673961084336042,0,-0.008498110808432102,-0.022519994527101517,0,0.006798488553613424,0.22689956426620483,0,-0.005098866298794746,-0.011047543957829475,0,0.1529659926891327,0.032292820513248444,0,-0.0985780879855156,-0.005098866298794746,0,0.2515440881252289,0.024219615384936333,0,-0.1580648571252823,-0.027618860825896263,0,0.0441901758313179,0.0246445219963789,0,-0.010197732597589493,-0.0038241499569267035,0,0.001699622138403356,0.005948677659034729,0,-0.023794710636138916,-0.005948677659034729,0,0.008498110808432102,0.024219615384936333,0,-0.005098866298794746,-0.011897355318069458,0,0.04588979855179787,0.005948677659034729,0,-0.013596977107226849,-0.0012747165746986866,0,0.006798488553613424,0.015296599827706814,0,-0.008498110808432102,-0.007648299913853407,0,0.020395465195178986,0.1312958151102066,0,-0.023794710636138916,-0.014446788467466831,0,0.003399244276806712,0.006798488553613424,0,-0.28383690118789673,-0.022944899275898933,0,0.025494331493973732,0.007648299913853407,0,-0.011897355318069458,-0.009772827848792076,0,0.025494331493973732,0.009772827848792076,0,-0.05608753114938736,-0.08285658061504364,0,0.01869584433734417,0.016571316868066788,0,-0.03399244323372841,-0.033142633736133575,0,0.11387468129396439,0.031018104404211044,0,-0.010197732597589493,-0.002549433149397373,0,0.10877581685781479,0.02931848168373108,0,-0.011897355318069458,-0.003399244276806712,0,0.171661838889122,0.005948677659034729,0,-0.001699622138403356,-0.016996221616864204,0,0.016996221616864204,0.008498110808432102,0,-0.015296599827706814,-0.002549433149397373,0,0.006798488553613424,0.07690790295600891,0,-0.008498110808432102,-0.06416073441505432,0,0.003399244276806712,0.126196950674057,0,-0.006798488553613424,-0.08795544505119324,0,0.06968450546264648,0.1351199597120285,0,-0.020395465195178986,-0.009772827848792076,0,0.025494331493973732,0.010622638277709484,0,0,-0.013596977107226849,0,0.07648299634456635,0.015721505507826805,0,-0.020395465195178986,-0.008498110808432102,0,0,0.02676904946565628,0,-0.010197732597589493,-0.008498110808432102,0,0.005098866298794746,0.005523771978914738,0,-0.03739168867468834,-0.005098866298794746,0,0.003399244276806712,0.011472449637949467,0,-0.010197732597589493,-0.016996221616864204,0,0.001699622138403356,0.003399244276806712,0,-0.010197732597589493,-0.14234335720539093,0,0.013596977107226849,0.019545655697584152,0,0,-0.008498110808432102,0,0.003399244276806712,0.07350865751504898,0,-0.300833135843277,-0.03484225273132324,0,0.015296599827706814,0.011047543957829475,0,-0.01869584433734417,-0.017846032977104187,0,0.003399244276806712,0.06033658608794212,0,-0.006798488553613424,-0.008498110808432102,0,0.050988662987947464,0.05736224725842476,0,-0.006798488553613424,-0.0429154597222805,0,0.005098866298794746,0.0934792160987854,0,-0.06288602203130722,-0.01232226099818945,0,0.06798488646745682,0.008923016488552094,0,-0.001699622138403356,-0.008498110808432102,0,0.006798488553613424,0.017846032977104187,0,-0.016996221616864204,-0.004673961084336042,0,0.08668073266744614,0.0029743388295173645,0,-0.006798488553613424,-0.005523771978914738,0,0.010197732597589493,0.03654187545180321,0,-0.001699622138403356,-0.011472449637949467,0,0.006798488553613424,0.050988662987947464,0,-0.010197732597589493,-0.0246445219963789,0,0.039091311395168304,0.1011275202035904,0,-0.003399244276806712,-0.049713946878910065,0,0.013596977107226849,0.011047543957829475,0,-0.08498110622167587,-0.007648299913853407,0,0.003399244276806712,0.0029743388295173645,0,-0.011897355318069458,-0.0246445219963789,0,0.015296599827706814,0.0038241499569267035,0,-0.035692065954208374,-0.006373582873493433,0,0.005098866298794746,0.01232226099818945,0,-0.04079093039035797,-0.008498110808432102,0,0.12067317217588425,0.008498110808432102,0,-0.003399244276806712,-0.0021245277021080256,0,0.001699622138403356,0.006798488553613424,0,-0.010197732597589493,-0.15636524558067322,0,0.013596977107226849,0.008498110808432102,0,-0.050988662987947464,-0.08030714839696884,0],"text":"100 POKE 56,50:CLR:DIM IN$,I,J,A,B,A$,B$,A(7),N$\n110 C4=48:C6=16:C7=7:Z2=2:Z4=254:Z5=255:Z6=256:Z7=127\n120 FA=PEEK(45)+Z6*PEEK(46):BS=PEEK(55)+Z6*PEEK(56):H$=\"0123456789ABCDEF\"\n130 R$=CHR$(13):L$=\"{LEFT}\":S$=\" \":D$=CHR$(20):Z$=CHR$(0):T$=\"{RIGHT}{RIGHT}{RIGHT}{RIGHT}{RIGHT}{RIGHT}{RIGHT}{RIGHT}{RIGHT}{RIGHT}{RIGHT}{RIGHT}{RIGHT}\"\n140 SD=54272:FOR I=SD TO SD+23:POKE I,0:NEXT:POKE SD+24,15:POKE 788,52\n150 PRINT\"{CLR}\"CHR$(142)CHR$(8):POKE 53280,15:POKE 53281,15\n160 PRINT T$\" {RED}{RVS}  {C= @}{C= @}{C= @}{C= @}{C= @}{C= @}{C= @}{C= @}  \"SPC(28)\"  {OFF}{BLU} MLX II {RED}{RVS}  \"SPC(28)\"            {BLU}\"\n170 PRINT\"{DOWN}{DOWN}{DOWN}   COMPUTE!'S MACHINE LANGUAGE EDITOR{DOWN}{DOWN}{DOWN}\"\n180 PRINT\"{BLK}STARTING ADDRESS{C= 4}\";:GOSUB300:SA=AD:GOSUB1040:IF F THEN180\n190 PRINT\"{BLK}  ENDING ADDRESS{C= 4}\";:GOSUB300:EA=AD:GOSUB1030:IF F THEN190\n200 INPUT\"{DOWN}{DOWN}{DOWN}{BLK}CLEAR WORKSPACE [Y/N]{C= 4}\";A$:IF LEFT$(A$,1)<>\"Y\"THEN220\n210 PRINT\"{DOWN}{DOWN}{BLU}WORKING...\";:FORI=BS TO BS+EA-SA+7:POKE I,0:NEXT:PRINT\"DONE\"\n220 PRINTTAB(10)\"{DOWN}{DOWN}{BLK}{RVS} MLX COMMAND MENU {DOWN}{C= 4}\":PRINT T$\"{RVS}E{OFF}NTER DATA\"\n230 PRINT T$\"{RVS}D{OFF}ISPLAY DATA\":PRINT T$\"{RVS}L{OFF}OAD FILE\"\n240 PRINT T$\"{RVS}S{OFF}AVE FILE\":PRINT T$\"{RVS}Q{OFF}UIT{DOWN}{DOWN}{BLK}\"\n250 GET A$:IF A$=N$ THEN250\n260 A=0:FOR I=1 TO 5:IF A$=MID$(\"EDLSQ\",I,1) THEN A=I:I=5\n270 NEXT:ON A GOTO420,610,690,700,280:GOSUB1060:GOTO250\n280 PRINT\"{RVS} QUIT \":INPUT\"{DOWN}{C= 4}ARE YOU SURE [Y/N]\";A$:IF LEFT$(A$,1)<>\"Y\"THEN220\n290 POKE SD+24,0:END\n300 IN$=N$:AD=0:INPUTIN$:IFLEN(IN$)<>4THENRETURN\n310 B$=IN$:GOSUB320:AD=A:B$=MID$(IN$,3):GOSUB320:AD=AD*256+A:RETURN\n320 A=0:FOR J=1 TO 2:A$=MID$(B$,J,1):B=ASC(A$)-C4+(A$>\"@\")*C7:A=A*C6+B\n330 IF B<0 OR B>15 THEN AD=0:A=-1:J=2\n340 NEXT:RETURN\n350 B=INT(A/C6):PRINT MID$(H$,B+1,1);:B=A-B*C6:PRINT MID$(H$,B+1,1);:RETURN\n360 A=INT(AD/Z6):GOSUB350:A=AD-A*Z6:GOSUB350:PRINT\":\";\n370 CK=INT(AD/Z6):CK=AD-Z4*CK+Z5*(CK>Z7):GOTO 390\n380 CK=CK*Z2+Z5*(CK>Z7)+A\n390 CK=CK+Z5*(CK>Z5):RETURN\n400 PRINT\"{DOWN}STARTING AT{C= 4}\";:GOSUB300:IF IN$<>N$ THEN GOSUB1030:IF F THEN400\n410 RETURN\n420 PRINT\"{RVS} ENTER DATA \":GOSUB400:IF IN$=N$ THEN220\n430 OPEN3,3:PRINT\n440 POKE198,0:GOSUB 360:IF F THEN PRINT IN$:PRINT\"{UP}{RIGHT}{RIGHT}{RIGHT}{RIGHT}{RIGHT}\";\n450 FOR I=0 TO 24 STEP 3:B$=S$:FOR J=1 TO 2:IF F THEN B$=MID$(IN$,I+J,1)\n460 PRINT\"{RVS}\"B$L$;:IF I<24THEN PRINT\"{OFF}\";\n470 GET A$:IF A$=N$ THEN470\n480 IF(A$>\"/\"ANDA$<\":\")OR(A$>\"@\"ANDA$<\"G\")THEN540\n485 A=-(A$=\"M\")-2*(A$=\",\")-3*(A$=\".\")-4*(A$=\"/\")-5*(A$=\"J\")-6*(A$=\"K\")\n486 A=A-7*(A$=\"L\")-8*(A$=\":\")-9*(A$=\"U\")-10*(A$=\"I\")-11*(A$=\"O\")-12*(A$=\"P\")\n487 A=A-13*(A$=S$):IF A THEN A$=MID$(\"ABCD123E456F0\",A,1):GOTO540\n490 IF A$=R$ AND((I=0)AND(J=1) OR F)THEN PRINT B$;:J=2:NEXT:I=24:GOTO550\n500 IF A$=\"{HOME}\" THEN PRINT B$:J=2:NEXT:I=24:NEXT:F=0:GOTO440\n510 IF(A$=\"{RIGHT}\")AND F THENPRINT B$L$;:GOTO540\n520 IF A$<>L$ AND A$<>D$ OR((I=0)AND(J=1))THEN GOSUB1060:GOTO470\n530 A$=L$+S$+L$:PRINT B$L$;:J=2-J:IF J THEN PRINT L$;:I=I-3\n540 PRINT A$;:NEXT J:PRINT S$;\n550 NEXT I:PRINT:PRINT\"{UP}{RIGHT}{RIGHT}{RIGHT}{RIGHT}{RIGHT}\";:INPUT#3,IN$:IF IN$=N$ THEN CLOSE3:GOTO220\n560 FOR I=1 TO 25 STEP3:B$=MID$(IN$,I):GOSUB320:IF I<25 THEN GOSUB380:A(I/3)=A\n570 NEXT:IF A<>CK THEN GOSUB1060:PRINT\"{BLK}{RVS} ERROR: REENTER LINE {C= 4}\":F=1:GOTO440\n580 GOSUB1080:B=BS+AD-SA:FOR I=0 TO 7:POKE B+I,A(I):NEXT\n590 AD=AD+8:IF AD>EA THEN CLOSE3:PRINT\"{DOWN}{BLU}** END OF ENTRY **{BLK}{DOWN}{DOWN}\":GOTO700\n600 F=0:GOTO440\n610 PRINT\"{CLR}{DOWN}{RVS} DISPLAY DATA \":GOSUB400:IF IN$=N$ THEN220\n620 PRINT\"{DOWN}{BLU}PRESS: {RVS}SPACE{OFF} TO PAUSE, {RVS}RETURN{OFF} TO BREAK{C= 4}{DOWN}\"\n630 GOSUB360:B=BS+AD-SA:FORI=B TO B+7:A=PEEK(I):GOSUB350:GOSUB380:PRINT S$;\n640 NEXT:PRINT\"{RVS}\";:A=CK:GOSUB350:PRINT\n650 F=1:AD=AD+8:IF AD>EA THENPRINT\"{DOWN}{BLU}** END OF DATA **\":GOTO220\n660 GET A$:IF A$=R$ THEN GOSUB1080:GOTO220\n670 IF A$=S$ THEN F=F+1:GOSUB1080\n680 ONFGOTO630,660,630\n690 PRINT\"{DOWN}{RVS} LOAD DATA \":OP=1:GOTO710\n700 PRINT\"{DOWN}{RVS} SAVE FILE \":OP=0\n710 IN$=N$:INPUT\"{DOWN}FILENAME{C= 4}\";IN$:IF IN$=N$ THEN220\n720 F=0:PRINT\"{DOWN}{BLK}{RVS}T{OFF}APE OR {RVS}D{OFF}ISK: {C= 4}\";\n730 GET A$:IF A$=\"T\"THEN PRINT\"T{DOWN}\":GOTO880\n740 IF A$<>\"D\"THEN730\n750 PRINT\"D{DOWN}\":OPEN15,8,15,\"I0:\":B=EA-SA:IN$=\"0:\"+IN$:IF OP THEN810\n760 OPEN 1,8,8,IN$+\",P,W\":GOSUB860:IF A THEN220\n770 AH=INT(SA/256):AL=SA-(AH*256):PRINT#1,CHR$(AL);CHR$(AH);\n780 FOR I=0 TO B:PRINT#1,CHR$(PEEK(BS+I));:IF ST THEN800\n790 NEXT:CLOSE1:CLOSE15:GOTO940\n800 GOSUB1060:PRINT\"{DOWN}{BLK}ERROR DURING SAVE:{C= 4}\":GOSUB860:GOTO220\n810 OPEN 1,8,8,IN$+\",P,R\":GOSUB860:IF A THEN220\n820 GET#1,A$,B$:AD=ASC(A$+Z$)+256*ASC(B$+Z$):IF AD<>SA THEN F=1:GOTO850\n830 FOR I=0 TO B:GET#1,A$:POKE BS+I,ASC(A$+Z$):IF (I<>B)AND ST THEN F=2:AD=I:I=B\n840 NEXT:IF ST<>64 THEN F=3\n850 CLOSE1:CLOSE15:ON ABS(F>0)+1 GOTO960,970\n860 INPUT#15,A,A$:IF A THEN CLOSE1:CLOSE15:GOSUB1060:PRINT\"{RVS}ERROR: \"A$\n870 RETURN\n880 POKE183,PEEK(FA+2):POKE187,PEEK(FA+3):POKE188,PEEK(FA+4):IFOP=0THEN920\n890 SYS 63466:IF(PEEK(783)AND1)THEN GOSUB1060:PRINT\"{DOWN}{RVS} FILE NOT FOUND \":GOTO690\n900 AD=PEEK(829)+256*PEEK(830):IF AD<>SA THEN F=1:GOTO970\n910 A=PEEK(831)+256*PEEK(832)-1:F=F-2*(A<EA)-3*(A>EA):AD=A-AD:GOTO930\n920 A=SA:B=EA+1:GOSUB1010:POKE780,3:SYS 63338\n930 A=BS:B=BS+(EA-SA)+1:GOSUB1010:ON OP GOTO950:SYS 63591\n940 GOSUB1080:PRINT\"{BLU}** SAVE COMPLETED **\":GOTO220\n950 POKE147,0:SYS 63562:IF ST>0 THEN970\n960 GOSUB1080:PRINT\"{BLU}** LOAD COMPLETED **\":GOTO220\n970 GOSUB1060:PRINT\"{BLK}{RVS}ERROR DURING LOAD:{DOWN}{C= 4}\":ON F GOSUB980,990,1000:GOTO220\n980 PRINT\"INCORRECT STARTING ADDRESS (\";:GOSUB360:PRINT\")\":RETURN\n990 PRINT\"LOAD ENDED AT \";:AD=SA+AD:GOSUB360:PRINT D$:RETURN\n1000 PRINT\"TRUNCATED AT ENDING ADDRESS\":RETURN\n1010 AH=INT(A/256):AL=A-(AH*256):POKE193,AL:POKE194,AH\n1020 AH=INT(B/256):AL=B-(AH*256):POKE174,AL:POKE175,AH:RETURN\n1030 IF AD<SA OR AD>EA THEN1050\n1040 IF(AD>511 AND AD<65280)THEN GOSUB1080:F=0:RETURN\n1050 GOSUB1060:PRINT\"{RVS} INVALID ADDRESS {DOWN}{BLK}\":F=1:RETURN\n1060 POKE SD+5,31:POKE SD+6,208:POKE SD,240:POKE SD+1,4:POKE SD+4,33\n1070 FOR S=1 TO 100:NEXT:GOTO1090\n1080 POKE SD+5,8:POKE SD+6,240:POKE SD,0:POKE SD+1,90:POKE SD+4,17\n1090 FOR S=1 TO 100:NEXT:POKE SD+4,0:POKE SD,0:POKE SD+1,0:RETURN\n","sourcePath":"external/github.com/xopowoparvo_C64-type-in-programs/Type-in utilities/MLX 2/MLX 2 - BASIC code.txt","sourceMtimeMs":1629437922000,"sourceUrl":"https://github.com/xopowoparvo/C64-type-in-programs/blob/main/MLX%202/MLX%202%20-%20BASIC%20code.txt","sourceRepoUrl":"https://github.com/xopowoparvo/C64-type-in-programs","license":"UNKNOWN","attribution":"Source: xopowoparvo/C64-type-in-programs (License unknown)"},{"name":"io/joystick.bas","language":"basic","vector":[0,0.027961773797869682,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.027961773797869682,0,0.22369419038295746,0.027961773797869682,0,0,0,0,0,0,0,-0.11184709519147873,0,0,0,0.055923547595739365,0,0,-0.055923547595739365,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.055923547595739365,0,0.22369419038295746,0.027961773797869682,0,-0.11184709519147873,0,0,0,0,0,0,-0.13980887830257416,0,0.11184709519147873,0,0,0,0,0,0.11184709519147873,0.0838853269815445,0,0,0,0,0,0,0,-0.11184709519147873,0,0,0.11184709519147873,0,0,0,-0.027961773797869682,0,0,0,0,0,0,0,0,0,0,0,-0.11184709519147873,0,0,0,0,0,0,0,0,0.11184709519147873,0,0,0,0,0,0,0,-0.22369419038295746,-0.055923547595739365,0,0,0,0,-0.11184709519147873,0,0,0,0,0,0,0,0,0,0,0,-0.11184709519147873,0,0,0,0.027961773797869682,0,-0.11184709519147873,0,0,0,0,0,0,0,0,0,0.11184709519147873,0,0,-0.055923547595739365,0,0,0,0,0,0,0,0,0.055923547595739365,0,-0.22369419038295746,-0.027961773797869682,0,0.11184709519147873,0.055923547595739365,0,0,0,0,0,0,0,0,-0.11184709519147873,0,0,0.055923547595739365,0,-0.11184709519147873,0,0,0.11184709519147873,0.027961773797869682,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.22369419038295746,0,0,0,0,0,0,0,0,0,0,0,0,-0.11184709519147873,0,0,0,0,0,-0.055923547595739365,0,0,0.055923547595739365,0,0,0,0,0.11184709519147873,0,0,0,-0.0838853269815445,0,0,0,0,-0.11184709519147873,-0.055923547595739365,0,0,0,0,0,0,0,0.11184709519147873,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11184709519147873,-0.11184709519147873,0,0,0.11184709519147873,0,0,-0.027961773797869682,0,0,0,0,-0.4473883807659149,0,0,0,0.027961773797869682,0,0,-0.055923547595739365,0,0,0.0838853269815445,0,0,0,0,0,0,0,0,-0.027961773797869682,0,0,0.027961773797869682,0,0,-0.11184709519147873,0,0,0,0,0,0,0,0,0,0,0,0,0,0.11184709519147873,0,0,0,0,0,0,0,0,0,0,0,0,0.055923547595739365,0,0,-0.055923547595739365,0,0,0,0,0,-0.0838853269815445,0,0,0,0,-0.11184709519147873,0,0,0,0.055923547595739365,0,0,-0.027961773797869682,0,0,0,0,-0.22369419038295746,-0.027961773797869682,0,0,0,0,0,-0.055923547595739365,0,0.11184709519147873,0,0,0,0,0,0,0,0,0,-0.22369419038295746,0,0,0,0,0,-0.055923547595739365,0],"text":"10 PRINT \"READING JOYSTICK PORT 2\"\n20 J=PEEK(56320)\n30 PRINT \"PORT2:\";J\n40 FOR T=1 TO 200:NEXT\n50 GOTO 20\n","sourcePath":"data/basic/examples/io/joystick.bas","sourceMtimeMs":1760978194729.3408},{"name":"video/bounce.bas","language":"basic","vector":[0,0.03185456618666649,0,0,0,0,0,0.06370913237333298,0,0,0,0,0,0,0,0,-0.015927283093333244,0,0.19112738966941833,0.07963641732931137,0,0,-0.047781847417354584,0,0,0.015927283093333244,0,-0.06370913237333298,0,0,0,0.06370913237333298,0,0,-0.03185456618666649,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.09556369483470917,0,0.06370913237333298,0,0,-0.12741826474666595,0,0,0,0,0,-0.06370913237333298,-0.047781847417354584,0,0,0,0,0,-0.03185456618666649,0,0,0.03185456618666649,0,0,0,0,0,0,0,-0.12741826474666595,0,0,0.06370913237333298,0,0,0,-0.03185456618666649,0,0.06370913237333298,0,0,0,0,0,0.06370913237333298,0,0,0,-0.03185456618666649,0,0,0.015927283093333244,0,-0.06370913237333298,0,0,0,0.11149097979068756,0,0,0,0,0.06370913237333298,0.03185456618666649,0,-0.12741826474666595,-0.03185456618666649,0,0,0,0,-0.12741826474666595,0,0,0,0.03185456618666649,0,0,-0.015927283093333244,0,0.06370913237333298,0,0,0,0,0,0,0.015927283093333244,0,-0.06370913237333298,0,0,0.06370913237333298,0,0,0,0,0,0,0.03185456618666649,0,0,-0.06370913237333298,0,0,0,0,-0.2548365294933319,-0.03185456618666649,0,0.38225477933883667,0,0,-0.44596391916275024,-0.047781847417354584,0,0,0,0,0,0,0,0,0,0,0,-0.07963641732931137,0,0,0.03185456618666649,0,-0.06370913237333298,-0.015927283093333244,0,0.06370913237333298,0.047781847417354584,0,-0.06370913237333298,0,0,0.06370913237333298,0.03185456618666649,0,0,0,0,0.12741826474666595,0,0,-0.12741826474666595,-0.03185456618666649,0,0,0,0,0,0,0,0,0.03185456618666649,0,0,-0.06370913237333298,0,0,0,0,0,-0.06370913237333298,0,0,0.047781847417354584,0,0,0,0,0,0.03185456618666649,0,0,-0.015927283093333244,0,0,0,0,-0.06370913237333298,-0.03185456618666649,0,0,0.03185456618666649,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.12741826474666595,0,0,0.19112738966941833,0,-0.12741826474666595,-0.22298195958137512,0,0,0.015927283093333244,0,0,-0.03185456618666649,0,0,0,0,-0.12741826474666595,-0.015927283093333244,0,0.06370913237333298,0,0,0,-0.03185456618666649,0,0.06370913237333298,0.03185456618666649,0,0,-0.03185456618666649,0,0.12741826474666595,0.03185456618666649,0,0,-0.03185456618666649,0,0,0.07963641732931137,0,0,-0.06370913237333298,0,0.12741826474666595,0.015927283093333244,0,-0.06370913237333298,0,0,0,0.015927283093333244,0,0,0,0,0.06370913237333298,0,0,0,-0.015927283093333244,0,0,0,0,0,0,0,0,0.015927283093333244,0,0,-0.03185456618666649,0,0,0,0,0,-0.06370913237333298,0,0,0,0,-0.19112738966941833,0,0,0,0.015927283093333244,0,0,0,0,0,0,0,-0.06370913237333298,-0.015927283093333244,0,0,0.015927283093333244,0,-0.06370913237333298,-0.06370913237333298,0,0.06370913237333298,0,0,0,0,0,0,0,0,0,-0.12741826474666595,0,0,0.12741826474666595,0,0,-0.11149097979068756,0],"text":"10 POKE 53280,0:POKE 53281,0\n20 X=10:DX=1\n30 PRINT CHR$(147)\n40 PRINT TAB(X);\"O\"\n50 X=X+DX\n60 IF X=1 OR X=38 THEN DX=-DX\n70 FOR T=1 TO 50:NEXT\n80 GOTO 30\n","sourcePath":"data/basic/examples/video/bounce.bas","sourceMtimeMs":1760978194729.2173},{"name":"video/entchen-petscii.bas","language":"basic","vector":[0,0.005575249902904034,0,0,-0.005575249902904034,0,0,0.027876250445842743,0,0,0,0,0,0,0,0,0,0,0.055752500891685486,0,0,0,-0.013938125222921371,0,0,0.008362875320017338,0,0,-0.002787624951452017,0,0,0.02508862502872944,0,-0.011150499805808067,-0.005575249902904034,0,0,0.011150499805808067,0,0,-0.005575249902904034,0,0,0,0,0,-0.002787624951452017,0,0,0,0,-0.03345150128006935,0,0,0.011150499805808067,0.011150499805808067,0,-0.011150499805808067,-0.005575249902904034,0,0.011150499805808067,0.011150499805808067,0,-0.04460199922323227,0,0,0.011150499805808067,0.005575249902904034,0,-0.03345150128006935,-0.008362875320017338,0,0,0.005575249902904034,0,0,0,0,0,0,0,-0.011150499805808067,-0.011150499805808067,0,0.7916855216026306,0.002787624951452017,0,-0.10035450011491776,-0.008362875320017338,0,0,0.005575249902904034,0,-0.011150499805808067,-0.011150499805808067,0,0.011150499805808067,0,0,0,0,0,0,0,0,0,-0.061327748000621796,0,0,0.002787624951452017,0,-0.011150499805808067,0,0,0,0.030663874000310898,0,-0.022300999611616135,0,0,0.011150499805808067,0.013938125222921371,0,-0.14495649933815002,0,0,0,0,0,-0.08920399844646454,-0.005575249902904034,0,0.011150499805808067,0,0,-0.011150499805808067,-0.002787624951452017,0,0,0.002787624951452017,0,0,0,0,0.03345150128006935,0.002787624951452017,0,0,-0.016725750640034676,0,0.011150499805808067,0.005575249902904034,0,0,-0.008362875320017338,0,0.011150499805808067,0.005575249902904034,0,0,-0.022300999611616135,0,0,0.005575249902904034,0,0,-0.016725750640034676,0,0,0.005575249902904034,0,-0.011150499805808067,-0.002787624951452017,0,0,0.005575249902904034,0,-0.022300999611616135,-0.005575249902904034,0,0,0.39863038063049316,0,0,-0.05296487361192703,0,0,0,0,0,-0.005575249902904034,0,0,0.005575249902904034,0,-0.03345150128006935,0,0,0.011150499805808067,0,0,-0.011150499805808067,-0.002787624951452017,0,0.07805349677801132,0,0,-0.022300999611616135,-0.008362875320017338,0,0.04460199922323227,0,0,0,-0.011150499805808067,0,0,0.005575249902904034,0,-0.011150499805808067,-0.07247824966907501,0,0,0,0,0,-0.04460199922323227,0,0,0.01951337419450283,0,0,-0.005575249902904034,0,0,0,0,0,0,0,0,0.016725750640034676,0,-0.011150499805808067,-0.002787624951452017,0,0.022300999611616135,0.005575249902904034,0,0,0,0,0,0.005575249902904034,0,-0.04460199922323227,0,0,0.011150499805808067,0,0,-0.011150499805808067,-0.008362875320017338,0,0.022300999611616135,0.002787624951452017,0,-0.022300999611616135,-0.008362875320017338,0,0,0.002787624951452017,0,0,-0.022300999611616135,0,0,0.002787624951452017,0,-0.24531099200248718,-0.008362875320017338,0,0.011150499805808067,0,0,0,0,0,0.011150499805808067,0,0,0,-0.01951337419450283,0,0.055752500891685486,0.20349662005901337,0,0,-0.030663874000310898,0,0,0.03902674838900566,0,0,-0.013938125222921371,0,0,0.02508862502872944,0,-0.011150499805808067,0,0,0.011150499805808067,0,0,0,-0.005575249902904034,0,0.011150499805808067,0,0,0,-0.002787624951452017,0,0,0,0,-0.011150499805808067,-0.005575249902904034,0,0,0.002787624951452017,0,0,-0.036239124834537506,0,0,0,0,0,-0.027876250445842743,0,0.022300999611616135,0.013938125222921371,0,-0.011150499805808067,-0.002787624951452017,0,0.022300999611616135,0,0,0,-0.022300999611616135,0,0.011150499805808067,0.013938125222921371,0,-0.011150499805808067,-0.005575249902904034,0,0,0.013938125222921371,0,0,-0.011150499805808067,0,0,0.002787624951452017,0,0,0,0,0,0,0,-0.011150499805808067,-0.12265549600124359,0,0,0.005575249902904034,0,-0.011150499805808067,-0.002787624951452017,0],"text":"10 REM ENTCHEN PETSCII SCENE\n20 POKE 53280,6:POKE 53281,14:REM BLUE BORDER, LIGHT BLUE BACKGROUND\n30 POKE 646,7:PRINT CHR$(147);CHR$(14):REM CLEAR SCREEN, SET YELLOW, LOWERCASE MODE\n40 PRINT \"        ~~~~~     ~~~~     ~~~~\"\n50 PRINT \"    ~~~~    ~~~~~     ~~~~     ~~~~\"\n60 PRINT \"         __           __\"\n70 PRINT \" ___<( o)___   ___(o )>___\"\n80 PRINT \"   (     )       (     )\"\n90 PRINT \"    (_____)     (_____ )\"\n100 PRINT \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\"\n110 POKE 646,1:PRINT\n120 PRINT \"ALLE MEINE ENTCHEN\"\n130 PRINT \"SCHWIMMEN AUF DEM SEE\"\n140 PRINT \"KOPFCHEN IN DAS WASSER\"\n150 PRINT \"SCHWANZCHEN IN DIE HOH'\"\n160 END\n","sourcePath":"data/basic/examples/video/entchen-petscii.bas","sourceMtimeMs":1761176783194.5342},{"name":"video/hello-world.bas","language":"basic","vector":[0,0,0,0,0,0,0,0.10862509161233902,0,0,0,0,0.10862509161233902,0,0,0,0,0,0,0.05431254580616951,0,-0.10862509161233902,0,0,0,0,0,0,0,0,0,0.05431254580616951,0,0,-0.027156272903084755,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.027156272903084755,0,0,0,0,0,0,0,0,0,0,-0.10862509161233902,0,0,0,0,0,-0.10862509161233902,-0.08146882057189941,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10862509161233902,0.027156272903084755,0,0,-0.027156272903084755,0,0,0,0,0,0,0,0,0,0,0,-0.16293764114379883,0,0,0.05431254580616951,0,0,0,0,0,0,0,0,-0.05431254580616951,0,0,0.027156272903084755,0,-0.32587528228759766,0,0,0,0,0,0,0,0,0,0.027156272903084755,0,0,0,0,0,0,0,0,0,0,0,0.027156272903084755,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.05431254580616951,0,0,0,0,0,-0.05431254580616951,0,0.10862509161233902,0,0,0,0,0,0,0,0,0,0,0,0.21725018322467804,0,0,0,-0.027156272903084755,0,0,0.05431254580616951,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.10862509161233902,0,0,0,0,0,0,0,0,0,0,0,0,-0.16293764114379883,0,0,0.027156272903084755,0,-0.10862509161233902,0,0,0,0,0,0,-0.027156272903084755,0,0,0,0,0,0,0,0,0,0,-0.10862509161233902,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10862509161233902,0.05431254580616951,0,-0.10862509161233902,0,0,0,0,0,0,-0.027156272903084755,0,0,0.10862509161233902,0,-0.6517505645751953,-0.027156272903084755,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10862509161233902,0,0,0,0,0,0,0.027156272903084755,0,0,-0.05431254580616951,0,0.10862509161233902,0,0,0,0,0,0,0,0,0,0,0,0.10862509161233902,0,0,0,-0.05431254580616951,0,0,0,0,0,0,0,0,0,0,0,-0.08146882057189941,0,0,0,0,0,-0.05431254580616951,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.10862509161233902,0,0,0,0.05431254580616951,0,0,-0.05431254580616951,0,0,0,0,0,0,0,0,0,0,0,-0.32587528228759766,0,0,0.027156272903084755,0,0,0,0],"text":"10 PRINT \"HELLO WORLD!\"\n20 PRINT \"WELCOME TO C64 PROGRAMMING\"\n30 PRINT \"FROM THE YEAR 2025!\"\n40 END","sourcePath":"data/basic/examples/video/hello-world.bas","sourceMtimeMs":1761171210714.5144},{"name":"video/wave.bas","language":"basic","vector":[0,0.03434013947844505,0,0,0,0,0,0.0686802789568901,0,0,0,0,0,0,0,0,-0.017170069739222527,0,0.0686802789568901,0.1545306295156479,0,0,-0.05151021108031273,0,0,0.017170069739222527,0,0,-0.017170069739222527,0,0,0.12019049376249313,0,0,-0.03434013947844505,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0686802789568901,0,0,0,0,0,0,-0.03434013947844505,0,0,0,0,-0.1373605579137802,0,0,0,0,0,-0.0686802789568901,-0.0686802789568901,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.34340140223503113,0,0,0.0686802789568901,0,0,0,-0.017170069739222527,0,0.0686802789568901,0,0,0,0,0,0,0,0,0,-0.03434013947844505,0,0,0.03434013947844505,0,-0.0686802789568901,0,0,0,0.05151021108031273,0,0,0,0,0,0.03434013947844505,0,-0.1373605579137802,0,0,0,0,0,-0.34340140223503113,0,0,0,0.05151021108031273,0,0,-0.017170069739222527,0,0,0,0,0,0,0,0,0.03434013947844505,0,-0.0686802789568901,-0.03434013947844505,0,0.1373605579137802,0,0,0,0,0,0,0,0,0,-0.0686802789568901,0,0,0,0,0,-0.03434013947844505,0,0.2747211158275604,0,0,-0.1373605579137802,0,0,0,0,0,0,0,0,0,0,0,0,-0.18887077271938324,0,0,0.03434013947844505,0,-0.0686802789568901,0,0,0.20604084432125092,0.03434013947844505,0,-0.0686802789568901,0,0,0.0686802789568901,0,0,-0.0686802789568901,0,0,0.20604084432125092,0,0,-0.1373605579137802,-0.03434013947844505,0,0,0,0,0,0,0,0,0,0,0,-0.0686802789568901,0,0,0,0,0,-0.17170070111751556,0,0,0.017170069739222527,0,-0.1373605579137802,0,0,0,0,0,0,0,0,0,0,0,-0.1373605579137802,-0.03434013947844505,0,0,0.0686802789568901,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.017170069739222527,0,0,0.1373605579137802,0,-0.0686802789568901,-0.0686802789568901,0,0,0,0,0,-0.03434013947844505,0,0,0,0,-0.1373605579137802,-0.017170069739222527,0,0.1373605579137802,0,0,0,-0.03434013947844505,0,0.0686802789568901,0.10302042216062546,0,0,-0.03434013947844505,0,0.1373605579137802,0.03434013947844505,0,0,-0.12019049376249313,0,0,0.12019049376249313,0,0,-0.0686802789568901,0,0.20604084432125092,0.017170069739222527,0,-0.0686802789568901,0,0,0,0,0,0,0,0,0.1373605579137802,0,0,0,-0.017170069739222527,0,0,0,0,0,-0.0686802789568901,0,0,0,0,0,-0.03434013947844505,0,0,0,0,0,-0.1545306295156479,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0686802789568901,-0.017170069739222527,0,0,0.03434013947844505,0,0,-0.03434013947844505,0,0,0,0,0,0,0,0,0,0,0,-0.0686802789568901,0,0,0.1373605579137802,0,0,-0.03434013947844505,0],"text":"10 POKE 53280,0:POKE 53281,0\n20 PRINT CHR$(147)\n30 FOR X=0 TO 39\n40 Y=10+INT(8*SIN(X/6))\n50 PRINT TAB(X);TAB(Y);\"*\"\n60 NEXT X\n70 GOTO 30\n","sourcePath":"data/basic/examples/video/wave.bas","sourceMtimeMs":1761171210714.5144}]}