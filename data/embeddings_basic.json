{"dim":384,"model":"LocalMiniHashEmbedding","records":[{"name":"demo/hello.bas","language":"basic","vector":[0,0,0,0,0,0,0,0.058321185410022736,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.11664237082004547,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4665694832801819,0,0,0,0,0,-0.23328474164009094,-0.11664237082004547,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11664237082004547,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.23328474164009094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.058321185410022736,0,-0.23328474164009094,0,0,0,0,0,0,0,0,0,0,0,0,-0.23328474164009094,0,0,0,0,0,-0.11664237082004547,0,0,0,0,0,0,0,0,0,0,0,0,0,0.23328474164009094,0,0,0,-0.058321185410022736,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11664237082004547,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11664237082004547,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11664237082004547,0,0,0.11664237082004547,0,-0.4665694832801819,-0.058321185410022736,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.23328474164009094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.058321185410022736,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.23328474164009094,-0.058321185410022736,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.23328474164009094,0,0,0,0,0,0,0],"text":"10 PRINT \"HELLO WORLD!\"\n20 GOTO 10\n","sourcePath":"data/basic_examples/demo/hello.bas","sourceMtimeMs":1760978194729.1252},{"name":"graphics/bounce.bas","language":"basic","vector":[0,0.03185456618666649,0,0,0,0,0,0.06370913237333298,0,0,0,0,0,0,0,0,-0.015927283093333244,0,0.19112738966941833,0.07963641732931137,0,0,-0.047781847417354584,0,0,0.015927283093333244,0,-0.06370913237333298,0,0,0,0.06370913237333298,0,0,-0.03185456618666649,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.09556369483470917,0,0.06370913237333298,0,0,-0.12741826474666595,0,0,0,0,0,-0.06370913237333298,-0.047781847417354584,0,0,0,0,0,-0.03185456618666649,0,0,0.03185456618666649,0,0,0,0,0,0,0,-0.12741826474666595,0,0,0.06370913237333298,0,0,0,-0.03185456618666649,0,0.06370913237333298,0,0,0,0,0,0.06370913237333298,0,0,0,-0.03185456618666649,0,0,0.015927283093333244,0,-0.06370913237333298,0,0,0,0.11149097979068756,0,0,0,0,0.06370913237333298,0.03185456618666649,0,-0.12741826474666595,-0.03185456618666649,0,0,0,0,-0.12741826474666595,0,0,0,0.03185456618666649,0,0,-0.015927283093333244,0,0.06370913237333298,0,0,0,0,0,0,0.015927283093333244,0,-0.06370913237333298,0,0,0.06370913237333298,0,0,0,0,0,0,0.03185456618666649,0,0,-0.06370913237333298,0,0,0,0,-0.2548365294933319,-0.03185456618666649,0,0.38225477933883667,0,0,-0.44596391916275024,-0.047781847417354584,0,0,0,0,0,0,0,0,0,0,0,-0.07963641732931137,0,0,0.03185456618666649,0,-0.06370913237333298,-0.015927283093333244,0,0.06370913237333298,0.047781847417354584,0,-0.06370913237333298,0,0,0.06370913237333298,0.03185456618666649,0,0,0,0,0.12741826474666595,0,0,-0.12741826474666595,-0.03185456618666649,0,0,0,0,0,0,0,0,0.03185456618666649,0,0,-0.06370913237333298,0,0,0,0,0,-0.06370913237333298,0,0,0.047781847417354584,0,0,0,0,0,0.03185456618666649,0,0,-0.015927283093333244,0,0,0,0,-0.06370913237333298,-0.03185456618666649,0,0,0.03185456618666649,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.12741826474666595,0,0,0.19112738966941833,0,-0.12741826474666595,-0.22298195958137512,0,0,0.015927283093333244,0,0,-0.03185456618666649,0,0,0,0,-0.12741826474666595,-0.015927283093333244,0,0.06370913237333298,0,0,0,-0.03185456618666649,0,0.06370913237333298,0.03185456618666649,0,0,-0.03185456618666649,0,0.12741826474666595,0.03185456618666649,0,0,-0.03185456618666649,0,0,0.07963641732931137,0,0,-0.06370913237333298,0,0.12741826474666595,0.015927283093333244,0,-0.06370913237333298,0,0,0,0.015927283093333244,0,0,0,0,0.06370913237333298,0,0,0,-0.015927283093333244,0,0,0,0,0,0,0,0,0.015927283093333244,0,0,-0.03185456618666649,0,0,0,0,0,-0.06370913237333298,0,0,0,0,-0.19112738966941833,0,0,0,0.015927283093333244,0,0,0,0,0,0,0,-0.06370913237333298,-0.015927283093333244,0,0,0.015927283093333244,0,-0.06370913237333298,-0.06370913237333298,0,0.06370913237333298,0,0,0,0,0,0,0,0,0,-0.12741826474666595,0,0,0.12741826474666595,0,0,-0.11149097979068756,0],"text":"10 POKE 53280,0:POKE 53281,0\n20 X=10:DX=1\n30 PRINT CHR$(147)\n40 PRINT TAB(X);\"O\"\n50 X=X+DX\n60 IF X=1 OR X=38 THEN DX=-DX\n70 FOR T=1 TO 50:NEXT\n80 GOTO 30\n","sourcePath":"data/basic_examples/graphics/bounce.bas","sourceMtimeMs":1760978194729.2173},{"name":"graphics/demo1/wave.bas","language":"basic","vector":[0,0.03434013947844505,0,0,0,0,0,0.0686802789568901,0,0,0,0,0,0,0,0,-0.017170069739222527,0,0.0686802789568901,0.1545306295156479,0,0,-0.05151021108031273,0,0,0.017170069739222527,0,0,-0.017170069739222527,0,0,0.12019049376249313,0,0,-0.03434013947844505,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0686802789568901,0,0,0,0,0,0,-0.03434013947844505,0,0,0,0,-0.1373605579137802,0,0,0,0,0,-0.0686802789568901,-0.0686802789568901,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.34340140223503113,0,0,0.0686802789568901,0,0,0,-0.017170069739222527,0,0.0686802789568901,0,0,0,0,0,0,0,0,0,-0.03434013947844505,0,0,0.03434013947844505,0,-0.0686802789568901,0,0,0,0.05151021108031273,0,0,0,0,0,0.03434013947844505,0,-0.1373605579137802,0,0,0,0,0,-0.34340140223503113,0,0,0,0.05151021108031273,0,0,-0.017170069739222527,0,0,0,0,0,0,0,0,0.03434013947844505,0,-0.0686802789568901,-0.03434013947844505,0,0.1373605579137802,0,0,0,0,0,0,0,0,0,-0.0686802789568901,0,0,0,0,0,-0.03434013947844505,0,0.2747211158275604,0,0,-0.1373605579137802,0,0,0,0,0,0,0,0,0,0,0,0,-0.18887077271938324,0,0,0.03434013947844505,0,-0.0686802789568901,0,0,0.20604084432125092,0.03434013947844505,0,-0.0686802789568901,0,0,0.0686802789568901,0,0,-0.0686802789568901,0,0,0.20604084432125092,0,0,-0.1373605579137802,-0.03434013947844505,0,0,0,0,0,0,0,0,0,0,0,-0.0686802789568901,0,0,0,0,0,-0.17170070111751556,0,0,0.017170069739222527,0,-0.1373605579137802,0,0,0,0,0,0,0,0,0,0,0,-0.1373605579137802,-0.03434013947844505,0,0,0.0686802789568901,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.017170069739222527,0,0,0.1373605579137802,0,-0.0686802789568901,-0.0686802789568901,0,0,0,0,0,-0.03434013947844505,0,0,0,0,-0.1373605579137802,-0.017170069739222527,0,0.1373605579137802,0,0,0,-0.03434013947844505,0,0.0686802789568901,0.10302042216062546,0,0,-0.03434013947844505,0,0.1373605579137802,0.03434013947844505,0,0,-0.12019049376249313,0,0,0.12019049376249313,0,0,-0.0686802789568901,0,0.20604084432125092,0.017170069739222527,0,-0.0686802789568901,0,0,0,0,0,0,0,0,0.1373605579137802,0,0,0,-0.017170069739222527,0,0,0,0,0,-0.0686802789568901,0,0,0,0,0,-0.03434013947844505,0,0,0,0,0,-0.1545306295156479,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0686802789568901,-0.017170069739222527,0,0,0.03434013947844505,0,0,-0.03434013947844505,0,0,0,0,0,0,0,0,0,0,0,-0.0686802789568901,0,0,0.1373605579137802,0,0,-0.03434013947844505,0],"text":"10 POKE 53280,0:POKE 53281,0\n20 PRINT CHR$(147)\n30 FOR X=0 TO 39\n40 Y=10+INT(8*SIN(X/6))\n50 PRINT TAB(X);TAB(Y);\"*\"\n60 NEXT X\n70 GOTO 30\n","sourcePath":"data/basic_examples/graphics/demo1/wave.bas","sourceMtimeMs":1760978194729.3408},{"name":"io/joystick.bas","language":"basic","vector":[0,0.027961773797869682,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.027961773797869682,0,0.22369419038295746,0.027961773797869682,0,0,0,0,0,0,0,-0.11184709519147873,0,0,0,0.055923547595739365,0,0,-0.055923547595739365,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.055923547595739365,0,0.22369419038295746,0.027961773797869682,0,-0.11184709519147873,0,0,0,0,0,0,-0.13980887830257416,0,0.11184709519147873,0,0,0,0,0,0.11184709519147873,0.0838853269815445,0,0,0,0,0,0,0,-0.11184709519147873,0,0,0.11184709519147873,0,0,0,-0.027961773797869682,0,0,0,0,0,0,0,0,0,0,0,-0.11184709519147873,0,0,0,0,0,0,0,0,0.11184709519147873,0,0,0,0,0,0,0,-0.22369419038295746,-0.055923547595739365,0,0,0,0,-0.11184709519147873,0,0,0,0,0,0,0,0,0,0,0,-0.11184709519147873,0,0,0,0.027961773797869682,0,-0.11184709519147873,0,0,0,0,0,0,0,0,0,0.11184709519147873,0,0,-0.055923547595739365,0,0,0,0,0,0,0,0,0.055923547595739365,0,-0.22369419038295746,-0.027961773797869682,0,0.11184709519147873,0.055923547595739365,0,0,0,0,0,0,0,0,-0.11184709519147873,0,0,0.055923547595739365,0,-0.11184709519147873,0,0,0.11184709519147873,0.027961773797869682,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.22369419038295746,0,0,0,0,0,0,0,0,0,0,0,0,-0.11184709519147873,0,0,0,0,0,-0.055923547595739365,0,0,0.055923547595739365,0,0,0,0,0.11184709519147873,0,0,0,-0.0838853269815445,0,0,0,0,-0.11184709519147873,-0.055923547595739365,0,0,0,0,0,0,0,0.11184709519147873,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11184709519147873,-0.11184709519147873,0,0,0.11184709519147873,0,0,-0.027961773797869682,0,0,0,0,-0.4473883807659149,0,0,0,0.027961773797869682,0,0,-0.055923547595739365,0,0,0.0838853269815445,0,0,0,0,0,0,0,0,-0.027961773797869682,0,0,0.027961773797869682,0,0,-0.11184709519147873,0,0,0,0,0,0,0,0,0,0,0,0,0,0.11184709519147873,0,0,0,0,0,0,0,0,0,0,0,0,0.055923547595739365,0,0,-0.055923547595739365,0,0,0,0,0,-0.0838853269815445,0,0,0,0,-0.11184709519147873,0,0,0,0.055923547595739365,0,0,-0.027961773797869682,0,0,0,0,-0.22369419038295746,-0.027961773797869682,0,0,0,0,0,-0.055923547595739365,0,0.11184709519147873,0,0,0,0,0,0,0,0,0,-0.22369419038295746,0,0,0,0,0,-0.055923547595739365,0],"text":"10 PRINT \"READING JOYSTICK PORT 2\"\n20 J=PEEK(56320)\n30 PRINT \"PORT2:\";J\n40 FOR T=1 TO 200:NEXT\n50 GOTO 20\n","sourcePath":"data/basic_examples/io/joystick.bas","sourceMtimeMs":1760978194729.3408},{"name":"github.com/StefanHolmes/C64-Snake/master/snake.bas","language":"basic","vector":[0.004342146683484316,0.0065132202580571175,0,-0.002171073341742158,-0.02605288103222847,0,0.002171073341742158,0.023881807923316956,0,-0.05861898139119148,-0.007598757278174162,0,0.0065132202580571175,0.0065132202580571175,0,-0.019539661705493927,-0.0227962713688612,0,0.16500158607959747,0.03365163877606392,0,-0.008684293366968632,-0.004884915426373482,0,0.02171073481440544,0.022253502160310745,0,-0.05210576206445694,-0.00271384185180068,0,0.030395029112696648,0.053191300481557846,0,-0.0065132202580571175,-0.008141525089740753,0,0,0.0032566101290285587,0,-0.015197514556348324,-0.010312599129974842,0,0.01085536740720272,0.017368586733937263,0,0,-0.01465474534779787,0,0.01085536740720272,0.00271384185180068,0,-0.03473717346787453,-0.002171073341742158,0,0.01085536740720272,0.004342146683484316,0,-0.002171073341742158,-0.03527994453907013,0,0.004342146683484316,0.04450700432062149,0,-0.0065132202580571175,-0.00271384185180068,0,0.4428989887237549,0.010312599129974842,0,-0.002171073341742158,-0.017911355942487717,0,0.004342146683484316,0.0016283050645142794,0,-0.004342146683484316,-0.0065132202580571175,0,0.002171073341742158,0.0032566101290285587,0,-0.02171073481440544,-0.009769830852746964,0,0.008684293366968632,0.0005427683354355395,0,-0.08467186242341995,-0.011940903961658478,0,0.023881807923316956,0.008141525089740753,0,-0.054276835173368454,-0.015740282833576202,0,0.0065132202580571175,0.00271384185180068,0,-0.002171073341742158,-0.002171073341742158,0,0.0911850854754448,0.007055988535284996,0,-0.05644790828227997,-0.07164542376995087,0,0.004342146683484316,0.004342146683484316,0,-0.004342146683484316,-0.011940903961658478,0,0.015197514556348324,0.08358632773160934,0,-0.002171073341742158,-0.015197514556348324,0,0.004342146683484316,0.013569208793342113,0,0,-0.028766723349690437,0,0.5666501522064209,0.01845412515103817,0,-0.07381650060415268,-0.0113981356844306,0,0.004342146683484316,0.014111977070569992,0,-0.0065132202580571175,-0.008684293366968632,0,0,0.008684293366968632,0,-0.008684293366968632,0,0,0.017368586733937263,0.014111977070569992,0,-0.017368586733937263,-0.017368586733937263,0,0.039079323410987854,0.00542768370360136,0,-0.03256610035896301,-0.004884915426373482,0,0.004342146683484316,0.007598757278174162,0,-0.019539661705493927,-0.004884915426373482,0,0,0.22253502905368805,0,-0.017368586733937263,-0.0016283050645142794,0,0.04125039651989937,0.0032566101290285587,0,-0.19539661705493927,-0.013026440516114235,0,0.017368586733937263,0.0016283050645142794,0,-0.017368586733937263,-0.01085536740720272,0,0.07381650060415268,0.007598757278174162,0,-0.008684293366968632,-0.046678077429533005,0,0,0.012483672238886356,0,-0.02605288103222847,-0.02930949069559574,0,0.02171073481440544,0.003799378639087081,0,-0.01085536740720272,-0.00271384185180068,0,0.06296113133430481,0.0455925427377224,0,-0.01085536740720272,-0.03419440612196922,0,0.14329084753990173,0.0032566101290285587,0,-0.03256610035896301,-0.007598757278174162,0,0.013026440516114235,0.008684293366968632,0,-0.01085536740720272,-0.0016283050645142794,0,0.02605288103222847,0.00271384185180068,0,-0.0455925427377224,-0.01465474534779787,0,0.002171073341742158,0.28495338559150696,0,-0.004342146683484316,-0.04179316386580467,0,0.008684293366968632,0.04342146962881088,0,-0.054276835173368454,-0.00542768370360136,0,0.17368587851524353,0.00542768370360136,0,-0.01085536740720272,-0.017368586733937263,0,0.015197514556348324,0.016283050179481506,0,-0.03690825030207634,-0.010312599129974842,0,0.002171073341742158,0.019539661705493927,0,-0.008684293366968632,-0.02008242905139923,0,0.008684293366968632,0.004884915426373482,0,-0.02605288103222847,-0.009769830852746964,0,0.002171073341742158,0.00271384185180068,0,0,-0.017368586733937263,0,0.023881807923316956,0.023339038714766502,0,-0.019539661705493927,-0.09824107587337494,0,0.002171073341742158,0.009769830852746964,0,-0.004342146683484316,-0.010312599129974842,0,0.023881807923316956,0.14763300120830536,0,-0.1693437248468399,-0.004884915426373482,0,0.004342146683484316,0.001085536670871079,0,-0.008684293366968632,-0.014111977070569992,0,0.004342146683484316,0.0113981356844306,0,-0.04342146962881088,-0.01085536740720272,0,0.01085536740720272,0.03365163877606392,0,-0.01085536740720272,-0.026595650240778923,0,0.013026440516114235,0.07761587202548981,0,-0.03256610035896301,-0.029852259904146194,0,0.05644790828227997,0.008141525089740753,0,-0.004342146683484316,-0.005970451980829239,0,0.013026440516114235,0.03582271188497543,0,0,-0.03690825030207634,0,0.03473717346787453,0.002171073341742158,0,0,-0.0032566101290285587,0,0,0.008141525089740753,0,-0.015197514556348324,-0.02768118679523468,0,0.02171073481440544,0.08792847394943237,0,-0.0065132202580571175,-0.00542768370360136,0,0.004342146683484316,0.14926129579544067,0,-0.002171073341742158,-0.03690825030207634,0,0.004342146683484316,0.002171073341742158,0,-0.04342146962881088,-0.005970451980829239,0,0.002171073341742158,0.004342146683484316,0,0,-0.015197514556348324,0,0.013026440516114235,0.00542768370360136,0,-0.017368586733937263,-0.004342146683484316,0,0.002171073341742158,0.02171073481440544,0,-0.008684293366968632,-0.017911355942487717,0,0.002171073341742158,0.002171073341742158,0,-0.0065132202580571175,-0.007055988535284996,0,0,0.011940903961658478,0,-0.023881807923316956,-0.08901400864124298,0,0.004342146683484316,0.012483672238886356,0,-0.02171073481440544,-0.053191300481557846,0],"text":"!- Open this in CMB prg Studio!\n\n0 POKE53265,PEEK(53265)AND239:POKE53281,.:POKE53280,.\n1 DIMX(255):DIMY(255):S=54276\n2 GOSUB980\n\n!- C  = Address of top left corner of playfield in colour RAM\n!- W  = Player snake body colour\n!- H  = Player snake head colour\n!- T  = Player snake end of tail colour\n!- F  = Food colour\n!- L  = Initial snake length -1\n!- N  = (1 = Need to place a random food. 0 = Do not need)\n!- G  = Game state: 1 = Playing, 2 = Game over\n!- S  = SID base address + 4\n!- P  = Points (score)\n!- A  = 600 (Y limit) - just for a minor speedup\n3 C=55548:W=13:H=7:T=9:F=4:L=4:N=1:G=1:P=.:A=600\n\n!- DX = X direction\n!- DY = Y direction (*40)\n!- X, Y = Snake head position (0,0 = top left)\n!- HP = Index into X/Y array for previous snake head position\n!- TP = Index into X/Y array for snake tail position\n!- E = Has eaten (needs to grow)?\n!- (Reenable screen after)\n4 DX=1:DY=.:X=3:Y=.:HP=L:TP=.:FORI=.TOL:X(I)=I:NEXT:E=.:POKE53265,PEEK(53265)OR16\n\n!- Input handling. Prevent doubling back, because that is an unfair way to lose\n!- THENIF is faster than AND\n5 GETk$:IFk$=\"w\"THENIFDX<>.THENDY=-40:DX=.\n6 IFk$=\"s\"THENIFDX<>.THENDY=40:DX=.\n7 IFk$=\"a\"THENIFDY<>.THENDY=.:DX=-1\n8 IFk$=\"d\"THENIFDY<>.THENDY=.:DX=1\n\n!- Try to find unoccupied space to place food. Careful of random upper bits being set in colour RAM.\n10 IFNTHENFP=C+INT(RND(.)*16)+(INT(RND(.)*16)*40):IF(PEEK(FP)AND15)=.THENN=.:POKEFP,F\n\n!- Update snake head position pointer, wrap around at snake length.\n20 X(HP)=X:Y(HP)=Y:HP=HP+1:IFHP>LTHENHP=.\n\n!- Blank the character where the end of the tail is.\n25 POKEC+X(TP)+Y(TP),.:TP=TP+1\n\n!- If tail end pointer is greater than the length, wrap around.\n!- If has eaten, decrement Eat and extend length.\n!- Update the position history array to account for growth.\n27 IFTP>LTHENTP=.:IFE>.THENL=L+1:E=E-1:X(L)=X(TP):Y(L)=Y(TP):TP=L\n\n!- Replace head with body segment. Update new head position. Wrap at border. \n30 POKEC+X+Y,W:POKEC+X(TP)+Y(TP),T:X=X+DX:IFX>15THENX=.\n35 IFX<.THENX=15\n40 Y=Y+DY:IFY>ATHENY=.\n45 IFY<.THENY=A\n\n!- Did we hit something? Was it our own body? Whoopsie.\n50 Z=PEEK(C+X+Y)AND15:IFZ<>.THENIFZ<>FTHENG=2\n\n!- Draw the head at the new position. Did we land on food? Update our score.\n55 POKEC+X+Y,H:IFINT(FP)=INT(C+X+Y)THENN=1:E=E+1:P=P+1:?\"{home}{down}{down}{down}{down}{down}{down}{down}{right}{right}{right}\";P\n65 POKES,48:POKES,49\n99 ONGGOTO5,100\n\n!- Game over. Turn the snake red starting from the tail end.\n100 FORI=1TOL:POKEC+X(TP)+Y(TP),2:TP=TP+1:IFTP>LTHENTP=0\n101 FORD=0TO9:NEXT:NEXT\n199 STOP\n\n!- Blank screen, draw, set up sound, return.\n980 ?\"{clear}{down}\",\"{right}{right}{right}{reverse on}{pink}{169}{reverse off}{yellow}{169}{right}{reverse on}{127}{right}{right}{cyan}{169}{light gray}{127}{right}{pink} {reverse off}{169}{right}{reverse on}{yellow} F\":?,\"{right}{right}{right}{reverse on}{cyan}{169}{reverse off}{purple}{169}{right}{reverse on}{yellow} {light green}{127}{right}{cyan} {light gray} {right}{purple} {127}{right}{light green} {cyan}E\"\n981 ?\"{right}{white}UC{light green}F{yellow}F{cyan}R{green}FF{light blue}CI\":?\"{right}{light green}B{right}{right}{right}{right}{right}{right}{right}{light blue}B\"\n982 ?\"{right}{yellow}H {light green}s{yellow}c{cyan}W{yellow}r{light green}e {blue}G {white}U{light green}C{yellow}F{cyan}F{pink}F{orange}R{red}RRRRRRRFF{orange}F{pink}C{yellow}I\"\n983 ?\"{right}{cyan}H{right}{right}{right}{right}{right}{right}{right}{blue}G{right}{light green}B\",,\"{left}{left}{yellow}B\":?\"{right}{green}H{right}{right}{right}{right}{right}{right}{right}{blue}G{right}{yellow}H\",,\"{left}{left}{pink}G\"\n984 ?\"{right}{green}B{right}{right}{right}{right}{right}{right}{right}{light blue}B{right}{cyan}H\",,\"{left}{left}{orange}G\":?\"{right}{light blue}JCD{blue}DED{light blue}DC{green}K{right}{pink}H\",,\"{left}{left}{red}G\"\n985 ?,\"{right}{orange}Y\",,\"{left}{left}{red}T\":FORI=.TO5:?,\"{right}Y\",,\"{left}{left}T\":NEXT\n986 ?,\"{right}Y\",,\"{left}{left}{orange}T\":?,\"{right}{red}H\",,\"{left}{left}{pink}G\":?,\"{right}{orange}H\",,\"{left}{left}{cyan}G\"\n987 ?,\"{right}{pink}H\",,\"{left}{left}{yellow}G\":?,\"{right}B\",,\"{left}{left}{light green}B\":?,\"{right}{yellow}J{pink}C{orange}D{red}DDEEEEEEE{orange}E{pink}D{cyan}D{yellow}D{light green}C{white}K\"\n988 ?\"{home}{down}{down}{down}{down}{down}{black}\":FORI=.TO15:?,\"{right}{right}QQQQQQQQQQQQQQQQ\":NEXT:?\"{white}\"\n989 POKES+20,15:POKES-4,.:POKES-3,2:POKES+1,18:POKES+2,.\n999 RETURN\n","sourcePath":"external/github.com/StefanHolmes/C64-Snake/master/snake.bas","sourceMtimeMs":1761041426705.5225}]}