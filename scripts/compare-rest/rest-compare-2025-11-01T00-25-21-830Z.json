{
  "generatedAt": "2025-11-01T00:25:21.830Z",
  "realBase": "http://192.168.1.13",
  "mockBase": "http://127.0.0.1:40443",
  "operationsDiscovered": 48,
  "scenariosExecuted": 22,
  "ignoredOperations": [
    "POST /v1/runners:modplay",
    "PUT /v1/configs:load_from_flash",
    "PUT /v1/configs:reset_to_default",
    "PUT /v1/configs:save_to_flash",
    "PUT /v1/machine:menu_button",
    "PUT /v1/machine:poweroff",
    "PUT /v1/runners:modplay"
  ],
  "missingOperations": [
    "POST /v1/drives/{drive}:load_rom",
    "POST /v1/drives/{drive}:mount",
    "POST /v1/runners:run_crt",
    "PUT /v1/drives/{drive}:load_rom",
    "PUT /v1/drives/{drive}:off",
    "PUT /v1/drives/{drive}:on",
    "PUT /v1/drives/{drive}:remove",
    "PUT /v1/files/{path}:create_d64",
    "PUT /v1/files/{path}:create_d71",
    "PUT /v1/files/{path}:create_d81",
    "PUT /v1/files/{path}:create_dnp"
  ],
  "results": [
    {
      "scenarioId": "version-get",
      "operations": [
        "GET /v1/version"
      ],
      "requestName": "success",
      "request": {
        "method": "GET",
        "path": "/v1/version"
      },
      "real": {
        "url": "http://192.168.1.13/v1/version",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "43",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "version": "0.1",
          "errors": []
        },
        "size": 43,
        "latencyMs": 13.731846999999988
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/version",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "34",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "version": "0.1-mock",
          "errors": []
        },
        "size": 34,
        "latencyMs": 1.4793850000000077
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "43",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "34",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "version": "0.1",
            "errors": []
          },
          "mock": {
            "version": "0.1-mock",
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "info-get",
      "operations": [
        "GET /v1/info"
      ],
      "requestName": "success",
      "request": {
        "method": "GET",
        "path": "/v1/info"
      },
      "real": {
        "url": "http://192.168.1.13/v1/info",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "211",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "product": "Ultimate 64 Elite",
          "firmware_version": "3.12a",
          "fpga_version": "121",
          "core_version": "1.45",
          "hostname": "Ultimate-64-Elite-F83C87",
          "unique_id": "38C1BA",
          "errors": []
        },
        "size": 211,
        "latencyMs": 20.069546000000003
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/info",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "86",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "product": "U64-MOCK",
          "firmware_version": "3.12-mock",
          "hostname": "mockc64",
          "errors": []
        },
        "size": 86,
        "latencyMs": 1.286012999999997
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "211",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "86",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "product": "Ultimate 64 Elite",
            "firmware_version": "3.12a",
            "fpga_version": "121",
            "core_version": "1.45",
            "hostname": "Ultimate-64-Elite-F83C87",
            "unique_id": "38C1BA",
            "errors": []
          },
          "mock": {
            "product": "U64-MOCK",
            "firmware_version": "3.12-mock",
            "hostname": "mockc64",
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "drives-get",
      "operations": [
        "GET /v1/drives"
      ],
      "requestName": "success",
      "request": {
        "method": "GET",
        "path": "/v1/drives"
      },
      "real": {
        "url": "http://192.168.1.13/v1/drives",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "590",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "drives": [
            {
              "a": {
                "enabled": true,
                "bus_id": 8,
                "type": "1541",
                "rom": "1541.rom",
                "image_file": "",
                "image_path": ""
              }
            },
            {
              "b": {
                "enabled": false,
                "bus_id": 9,
                "type": "1541",
                "rom": "1541.rom",
                "image_file": "",
                "image_path": ""
              }
            },
            {
              "IEC Drive": {
                "bus_id": 11,
                "enabled": false,
                "type": "DOS emulation",
                "last_error": "73,U64IEC ULTIMATE DOS V1.1,00,00",
                "partitions": [
                  {
                    "id": 0,
                    "path": "/Usb0/"
                  }
                ]
              }
            },
            {
              "Printer Emulation": {
                "bus_id": 4,
                "enabled": false
              }
            }
          ],
          "errors": []
        },
        "size": 590,
        "latencyMs": 17.055509
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/drives",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "92",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "drives": {
            "drive8": {
              "enabled": false,
              "power": "off",
              "mode": "1541",
              "image": null
            }
          },
          "errors": []
        },
        "size": 92,
        "latencyMs": 1.1615209999999934
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "590",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "92",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "drives": [
              {
                "a": {
                  "enabled": true,
                  "bus_id": 8,
                  "type": "1541",
                  "rom": "1541.rom",
                  "image_file": "",
                  "image_path": ""
                }
              },
              {
                "b": {
                  "enabled": false,
                  "bus_id": 9,
                  "type": "1541",
                  "rom": "1541.rom",
                  "image_file": "",
                  "image_path": ""
                }
              },
              {
                "IEC Drive": {
                  "bus_id": 11,
                  "enabled": false,
                  "type": "DOS emulation",
                  "last_error": "73,U64IEC ULTIMATE DOS V1.1,00,00",
                  "partitions": [
                    {
                      "id": 0,
                      "path": "/Usb0/"
                    }
                  ]
                }
              },
              {
                "Printer Emulation": {
                  "bus_id": 4,
                  "enabled": false
                }
              }
            ],
            "errors": []
          },
          "mock": {
            "drives": {
              "drive8": {
                "enabled": false,
                "power": "off",
                "mode": "1541",
                "image": null
              }
            },
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "configs-get",
      "operations": [
        "GET /v1/configs"
      ],
      "requestName": "success",
      "request": {
        "method": "GET",
        "path": "/v1/configs"
      },
      "real": {
        "url": "http://192.168.1.13/v1/configs",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "447",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "categories": [
            "Audio Mixer",
            "SID Sockets Configuration",
            "UltiSID Configuration",
            "SID Addressing",
            "U64 Specific Settings",
            "C64 and Cartridge Settings",
            "Clock Settings",
            "Network Settings",
            "Ethernet Settings",
            "WiFi settings",
            "LED Strip Settings",
            "Data Streams",
            "SoftIEC Drive Settings",
            "Printer Settings",
            "Modem Settings",
            "User Interface Settings",
            "Tape Settings",
            "Drive A Settings",
            "Drive B Settings"
          ],
          "errors": []
        },
        "size": 447,
        "latencyMs": 16.586332
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/configs",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "121",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "categories": [
            "Audio",
            "Video"
          ],
          "configs": {
            "Audio": {
              "Volume": "6",
              "Balance": "center"
            },
            "Video": {
              "Mode": "PAL"
            }
          },
          "errors": []
        },
        "size": 121,
        "latencyMs": 1.3562689999999975
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "447",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "121",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "categories": [
              "Audio Mixer",
              "SID Sockets Configuration",
              "UltiSID Configuration",
              "SID Addressing",
              "U64 Specific Settings",
              "C64 and Cartridge Settings",
              "Clock Settings",
              "Network Settings",
              "Ethernet Settings",
              "WiFi settings",
              "LED Strip Settings",
              "Data Streams",
              "SoftIEC Drive Settings",
              "Printer Settings",
              "Modem Settings",
              "User Interface Settings",
              "Tape Settings",
              "Drive A Settings",
              "Drive B Settings"
            ],
            "errors": []
          },
          "mock": {
            "categories": [
              "Audio",
              "Video"
            ],
            "configs": {
              "Audio": {
                "Volume": "6",
                "Balance": "center"
              },
              "Video": {
                "Mode": "PAL"
              }
            },
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "configs-category-get",
      "operations": [
        "GET /v1/configs/{category}"
      ],
      "requestName": "missing-category",
      "request": {
        "method": "GET",
        "path": "/v1/configs/DOES_NOT_EXIST"
      },
      "note": "Shared config category not found on both endpoints; testing error path.",
      "real": {
        "url": "http://192.168.1.13/v1/configs/DOES_NOT_EXIST",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "22",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": []
        },
        "size": 22,
        "latencyMs": 10.661611999999991
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/configs/DOES_NOT_EXIST",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "13",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": []
        },
        "size": 13,
        "latencyMs": 1.4338209999999947
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "22",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "13",
            "content-type": "application/json"
          }
        }
      ]
    },
    {
      "scenarioId": "configs-item-get",
      "operations": [
        "GET /v1/configs/{category}/{item}"
      ],
      "requestName": "missing-item",
      "request": {
        "method": "GET",
        "path": "/v1/configs/DOES_NOT_EXIST/NOPE"
      },
      "real": {
        "url": "http://192.168.1.13/v1/configs/DOES_NOT_EXIST/NOPE",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "22",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": []
        },
        "size": 22,
        "latencyMs": 9.938006000000001
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/configs/DOES_NOT_EXIST/NOPE",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "13",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": []
        },
        "size": 13,
        "latencyMs": 1.1919579999999996
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "22",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "13",
            "content-type": "application/json"
          }
        }
      ]
    },
    {
      "scenarioId": "configs-item-put",
      "operations": [
        "PUT /v1/configs/{category}/{item}"
      ],
      "requestName": "invalid-category",
      "request": {
        "method": "PUT",
        "path": "/v1/configs/DOES_NOT_EXIST/NOPE",
        "query": {
          "value": "foo"
        }
      },
      "real": {
        "url": "http://192.168.1.13/v1/configs/DOES_NOT_EXIST/NOPE?value=foo",
        "status": 404,
        "ok": false,
        "headers": {
          "content-length": "81",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": [
            "There is no config category that matches 'DOES_NOT_EXIST'"
          ]
        },
        "size": 81,
        "latencyMs": 10.481756000000019
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/configs/DOES_NOT_EXIST/NOPE?value=foo",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "88",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "updated",
          "category": "DOES_NOT_EXIST",
          "item": "NOPE",
          "value": "foo",
          "errors": []
        },
        "size": 88,
        "latencyMs": 1.0861439999999902
      },
      "diff": [
        {
          "kind": "status",
          "real": 404,
          "mock": 200
        },
        {
          "kind": "headers",
          "real": {
            "content-length": "81",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "88",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": [
              "There is no config category that matches 'DOES_NOT_EXIST'"
            ]
          },
          "mock": {
            "result": "updated",
            "category": "DOES_NOT_EXIST",
            "item": "NOPE",
            "value": "foo",
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "configs-post",
      "operations": [
        "POST /v1/configs"
      ],
      "requestName": "empty-payload",
      "request": {
        "method": "POST",
        "path": "/v1/configs",
        "body": {}
      },
      "real": {
        "url": "http://192.168.1.13/v1/configs",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "22",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": []
        },
        "size": 22,
        "latencyMs": 31.91837700000002
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/configs",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "53",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "batch_update",
          "categories": [],
          "errors": []
        },
        "size": 53,
        "latencyMs": 5.195329000000015
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "22",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "53",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": []
          },
          "mock": {
            "result": "batch_update",
            "categories": [],
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "machine-debugreg",
      "operations": [
        "GET /v1/machine:debugreg",
        "PUT /v1/machine:debugreg"
      ],
      "requestName": "read",
      "request": {
        "method": "GET",
        "path": "/v1/machine:debugreg"
      },
      "real": {
        "url": "http://192.168.1.13/v1/machine:debugreg",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "40",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "value": "AB",
          "errors": []
        },
        "size": 40,
        "latencyMs": 12.208035999999993
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/machine:debugreg",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "26",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "value": "00",
          "errors": []
        },
        "size": 26,
        "latencyMs": 5.862879000000021
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "40",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "26",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "value": "AB",
            "errors": []
          },
          "mock": {
            "value": "00",
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "machine-debugreg",
      "operations": [
        "GET /v1/machine:debugreg",
        "PUT /v1/machine:debugreg"
      ],
      "requestName": "write-ab",
      "request": {
        "method": "PUT",
        "path": "/v1/machine:debugreg",
        "query": {
          "value": "AB"
        }
      },
      "real": {
        "url": "http://192.168.1.13/v1/machine:debugreg?value=AB",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "40",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "value": "AB",
          "errors": []
        },
        "size": 40,
        "latencyMs": 12.966503999999986
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/machine:debugreg?value=AB",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "26",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "value": "AB",
          "errors": []
        },
        "size": 26,
        "latencyMs": 3.7596939999999677
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "40",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "26",
            "content-type": "application/json"
          }
        }
      ]
    },
    {
      "scenarioId": "machine-readmem",
      "operations": [
        "GET /v1/machine:readmem"
      ],
      "requestName": "read-json",
      "request": {
        "method": "GET",
        "path": "/v1/machine:readmem",
        "query": {
          "address": "0400",
          "length": 16
        }
      },
      "real": {
        "url": "http://192.168.1.13/v1/machine:readmem?address=0400&length=16",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "16",
          "content-type": "application/octet-stream"
        },
        "bodyType": "binary",
        "body": "ICAgICAgICAgICAgICAgIA==",
        "size": 16,
        "latencyMs": 14.354614000000026
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/machine:readmem?address=0400&length=16",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "47",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "data": "ElJFQURZLg0AAAAAAAAAAA==",
          "errors": []
        },
        "size": 47,
        "latencyMs": 3.723443999999972
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "16",
            "content-type": "application/octet-stream"
          },
          "mock": {
            "content-length": "47",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body-type",
          "real": "binary",
          "mock": "json"
        }
      ]
    },
    {
      "scenarioId": "machine-readmem",
      "operations": [
        "GET /v1/machine:readmem"
      ],
      "requestName": "invalid-length",
      "request": {
        "method": "GET",
        "path": "/v1/machine:readmem",
        "query": {
          "address": "ZZZZ",
          "length": 0
        }
      },
      "note": "Intentionally invalid address/length to observe error parity.",
      "real": {
        "url": "http://192.168.1.13/v1/machine:readmem?address=ZZZZ&length=0",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "0",
          "content-type": "application/octet-stream"
        },
        "bodyType": "binary",
        "body": "",
        "size": 0,
        "latencyMs": 10.394500999999991
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/machine:readmem?address=ZZZZ&length=0",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "23",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "data": "",
          "errors": []
        },
        "size": 23,
        "latencyMs": 1.6215240000000222
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "0",
            "content-type": "application/octet-stream"
          },
          "mock": {
            "content-length": "23",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body-type",
          "real": "binary",
          "mock": "json"
        }
      ]
    },
    {
      "scenarioId": "machine-writemem-put",
      "operations": [
        "PUT /v1/machine:writemem"
      ],
      "requestName": "write-hex",
      "request": {
        "method": "PUT",
        "path": "/v1/machine:writemem",
        "query": {
          "address": "C000",
          "data": "1122"
        }
      },
      "real": {
        "url": "http://192.168.1.13/v1/machine:writemem?address=C000&data=1122",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "49",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "address": "C000-C001",
          "errors": []
        },
        "size": 49,
        "latencyMs": 10.583773000000008
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/machine:writemem?address=C000&data=1122",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "57",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "wrote",
          "address": 49152,
          "length": 2,
          "errors": []
        },
        "size": 57,
        "latencyMs": 1.5539150000000177
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "49",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "57",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "address": "C000-C001",
            "errors": []
          },
          "mock": {
            "result": "wrote",
            "address": 49152,
            "length": 2,
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "machine-writemem-put",
      "operations": [
        "PUT /v1/machine:writemem"
      ],
      "requestName": "invalid-data",
      "request": {
        "method": "PUT",
        "path": "/v1/machine:writemem",
        "query": {
          "address": "C000",
          "data": "GG"
        }
      },
      "real": {
        "url": "http://192.168.1.13/v1/machine:writemem?address=C000&data=GG",
        "status": 400,
        "ok": false,
        "headers": {
          "content-length": "55",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": [
            "Invalid char 'G' at position 0."
          ]
        },
        "size": 55,
        "latencyMs": 10.780507999999998
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/machine:writemem?address=C000&data=GG",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "57",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "wrote",
          "address": 49152,
          "length": 0,
          "errors": []
        },
        "size": 57,
        "latencyMs": 1.9445179999999596
      },
      "diff": [
        {
          "kind": "status",
          "real": 400,
          "mock": 200
        },
        {
          "kind": "headers",
          "real": {
            "content-length": "55",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "57",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": [
              "Invalid char 'G' at position 0."
            ]
          },
          "mock": {
            "result": "wrote",
            "address": 49152,
            "length": 0,
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "machine-writemem-post",
      "operations": [
        "POST /v1/machine:writemem"
      ],
      "requestName": "write-binary",
      "request": {
        "method": "POST",
        "path": "/v1/machine:writemem",
        "query": {
          "address": "C100"
        },
        "body": {
          "length": 32
        }
      },
      "real": {
        "url": "http://192.168.1.13/v1/machine:writemem?address=C100",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "49",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "address": "C100-C11F",
          "errors": []
        },
        "size": 49,
        "latencyMs": 28.592206000000033
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/machine:writemem?address=C100",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "58",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "wrote",
          "address": 49408,
          "length": 32,
          "errors": []
        },
        "size": 58,
        "latencyMs": 2.0092899999999645
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "49",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "58",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "address": "C100-C11F",
            "errors": []
          },
          "mock": {
            "result": "wrote",
            "address": 49408,
            "length": 32,
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "machine-reset",
      "operations": [
        "PUT /v1/machine:reset"
      ],
      "requestName": "success",
      "request": {
        "method": "PUT",
        "path": "/v1/machine:reset"
      },
      "real": {
        "url": "http://192.168.1.13/v1/machine:reset",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "22",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": []
        },
        "size": 22,
        "latencyMs": 20.462079999999958
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/machine:reset",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "30",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "reset",
          "errors": []
        },
        "size": 30,
        "latencyMs": 1.2104700000000435
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "22",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "30",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": []
          },
          "mock": {
            "result": "reset",
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "machine-pause-resume",
      "operations": [
        "PUT /v1/machine:pause",
        "PUT /v1/machine:resume"
      ],
      "requestName": "pause",
      "request": {
        "method": "PUT",
        "path": "/v1/machine:pause"
      },
      "real": {
        "url": "http://192.168.1.13/v1/machine:pause",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "22",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": []
        },
        "size": 22,
        "latencyMs": 13.30542800000012
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/machine:pause",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "31",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "paused",
          "errors": []
        },
        "size": 31,
        "latencyMs": 2.7924819999998363
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "22",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "31",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": []
          },
          "mock": {
            "result": "paused",
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "machine-pause-resume",
      "operations": [
        "PUT /v1/machine:pause",
        "PUT /v1/machine:resume"
      ],
      "requestName": "resume",
      "request": {
        "method": "PUT",
        "path": "/v1/machine:resume"
      },
      "real": {
        "url": "http://192.168.1.13/v1/machine:resume",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "22",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": []
        },
        "size": 22,
        "latencyMs": 11.664884999999913
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/machine:resume",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "32",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "resumed",
          "errors": []
        },
        "size": 32,
        "latencyMs": 1.9521500000000742
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "22",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "32",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": []
          },
          "mock": {
            "result": "resumed",
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "runners-run_prg",
      "operations": [
        "POST /v1/runners:run_prg",
        "PUT /v1/runners:run_prg"
      ],
      "requestName": "run-basic-prg",
      "request": {
        "method": "POST",
        "path": "/v1/runners:run_prg",
        "body": {
          "length": 24
        }
      },
      "real": {
        "url": "http://192.168.1.13/v1/runners:run_prg",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "22",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": []
        },
        "size": 22,
        "latencyMs": 1779.557843
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/runners:run_prg",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "38",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "ok",
          "bytes": 24,
          "errors": []
        },
        "size": 38,
        "latencyMs": 9.802785000000085
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "22",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "38",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": []
          },
          "mock": {
            "result": "ok",
            "bytes": 24,
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "runners-run_prg",
      "operations": [
        "POST /v1/runners:run_prg",
        "PUT /v1/runners:run_prg"
      ],
      "requestName": "missing-file",
      "request": {
        "method": "PUT",
        "path": "/v1/runners:run_prg",
        "query": {
          "file": "//USB0/does-not-exist.prg"
        }
      },
      "real": {
        "url": "http://192.168.1.13/v1/runners:run_prg?file=%2F%2FUSB0%2Fdoes-not-exist.prg",
        "status": 404,
        "ok": false,
        "headers": {
          "content-length": "40",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": [
            "Cannot open file"
          ]
        },
        "size": 40,
        "latencyMs": 13.30945900000006
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/runners:run_prg?file=%2F%2FUSB0%2Fdoes-not-exist.prg",
        "status": 404,
        "ok": false,
        "headers": {
          "content-length": "0"
        },
        "bodyType": "binary",
        "body": "",
        "size": 0,
        "latencyMs": 2.866899000000103
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "40",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "0"
          }
        },
        {
          "kind": "body-type",
          "real": "json",
          "mock": "binary"
        }
      ]
    },
    {
      "scenarioId": "runners-load_prg",
      "operations": [
        "POST /v1/runners:load_prg",
        "PUT /v1/runners:load_prg"
      ],
      "requestName": "missing-file",
      "request": {
        "method": "PUT",
        "path": "/v1/runners:load_prg",
        "query": {
          "file": "//USB0/does-not-exist.prg"
        }
      },
      "real": {
        "url": "http://192.168.1.13/v1/runners:load_prg?file=%2F%2FUSB0%2Fdoes-not-exist.prg",
        "status": 404,
        "ok": false,
        "headers": {
          "content-length": "40",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": [
            "Cannot open file"
          ]
        },
        "size": 40,
        "latencyMs": 29.19256600000017
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/runners:load_prg?file=%2F%2FUSB0%2Fdoes-not-exist.prg",
        "status": 404,
        "ok": false,
        "headers": {
          "content-length": "0"
        },
        "bodyType": "binary",
        "body": "",
        "size": 0,
        "latencyMs": 3.289795999999569
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "40",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "0"
          }
        },
        {
          "kind": "body-type",
          "real": "json",
          "mock": "binary"
        }
      ]
    },
    {
      "scenarioId": "runners-load_prg",
      "operations": [
        "POST /v1/runners:load_prg",
        "PUT /v1/runners:load_prg"
      ],
      "requestName": "upload-basic",
      "request": {
        "method": "POST",
        "path": "/v1/runners:load_prg",
        "body": {
          "length": 24
        }
      },
      "note": "Uploads a small BASIC program without running it.",
      "real": {
        "url": "http://192.168.1.13/v1/runners:load_prg",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "22",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": []
        },
        "size": 22,
        "latencyMs": 413.32102299999997
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/runners:load_prg",
        "status": 404,
        "ok": false,
        "headers": {
          "content-length": "0"
        },
        "bodyType": "binary",
        "body": "",
        "size": 0,
        "latencyMs": 4.091777000000093
      },
      "diff": [
        {
          "kind": "status",
          "real": 200,
          "mock": 404
        },
        {
          "kind": "headers",
          "real": {
            "content-length": "22",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "0"
          }
        },
        {
          "kind": "body-type",
          "real": "json",
          "mock": "binary"
        }
      ]
    },
    {
      "scenarioId": "runners-run_crt",
      "operations": [
        "PUT /v1/runners:run_crt"
      ],
      "requestName": "missing-crt",
      "request": {
        "method": "PUT",
        "path": "/v1/runners:run_crt",
        "query": {
          "file": "//USB0/does-not-exist.crt"
        }
      },
      "real": {
        "url": "http://192.168.1.13/v1/runners:run_crt?file=%2F%2FUSB0%2Fdoes-not-exist.crt",
        "status": 404,
        "ok": false,
        "headers": {
          "content-length": "40",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": [
            "Cannot open file"
          ]
        },
        "size": 40,
        "latencyMs": 11.658648999999969
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/runners:run_crt?file=%2F%2FUSB0%2Fdoes-not-exist.crt",
        "status": 404,
        "ok": false,
        "headers": {
          "content-length": "0"
        },
        "bodyType": "binary",
        "body": "",
        "size": 0,
        "latencyMs": 0.6082959999994273
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "40",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "0"
          }
        },
        {
          "kind": "body-type",
          "real": "json",
          "mock": "binary"
        }
      ]
    },
    {
      "scenarioId": "runners-sidplay",
      "operations": [
        "PUT /v1/runners:sidplay",
        "POST /v1/runners:sidplay"
      ],
      "requestName": "missing-sid-file",
      "request": {
        "method": "PUT",
        "path": "/v1/runners:sidplay",
        "query": {
          "file": "//USB0/does-not-exist.sid",
          "songnr": 0
        }
      },
      "real": {
        "url": "http://192.168.1.13/v1/runners:sidplay?file=%2F%2FUSB0%2Fdoes-not-exist.sid&songnr=0",
        "status": 404,
        "ok": false,
        "headers": {
          "content-length": "40",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": [
            "Cannot open file"
          ]
        },
        "size": 40,
        "latencyMs": 28.587531000000126
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/runners:sidplay?file=%2F%2FUSB0%2Fdoes-not-exist.sid&songnr=0",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "78",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "sidplay",
          "file": "//USB0/does-not-exist.sid",
          "songnr": 0,
          "errors": []
        },
        "size": 78,
        "latencyMs": 1.4851129999997283
      },
      "diff": [
        {
          "kind": "status",
          "real": 404,
          "mock": 200
        },
        {
          "kind": "headers",
          "real": {
            "content-length": "40",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "78",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": [
              "Cannot open file"
            ]
          },
          "mock": {
            "result": "sidplay",
            "file": "//USB0/does-not-exist.sid",
            "songnr": 0,
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "runners-sidplay",
      "operations": [
        "PUT /v1/runners:sidplay",
        "POST /v1/runners:sidplay"
      ],
      "requestName": "upload-invalid-sid",
      "request": {
        "method": "POST",
        "path": "/v1/runners:sidplay",
        "query": {
          "songnr": 0
        },
        "body": {
          "length": 7
        }
      },
      "real": {
        "url": "http://192.168.1.13/v1/runners:sidplay?songnr=0",
        "status": 415,
        "ok": false,
        "headers": {
          "content-length": "53",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": [
            "Error detected in file format"
          ]
        },
        "size": 53,
        "latencyMs": 30.858664999999746
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/runners:sidplay?songnr=0",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "64",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "sidplay_attachment",
          "bytes": 7,
          "songnr": 0,
          "errors": []
        },
        "size": 64,
        "latencyMs": 1.2729319999998552
      },
      "diff": [
        {
          "kind": "status",
          "real": 415,
          "mock": 200
        },
        {
          "kind": "headers",
          "real": {
            "content-length": "53",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "64",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": [
              "Error detected in file format"
            ]
          },
          "mock": {
            "result": "sidplay_attachment",
            "bytes": 7,
            "songnr": 0,
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "streams-start-stop",
      "operations": [
        "PUT /v1/streams/{stream}:start",
        "PUT /v1/streams/{stream}:stop"
      ],
      "requestName": "start-video-invalid-ip",
      "request": {
        "method": "PUT",
        "path": "/v1/streams/video:start",
        "query": {
          "ip": "999.999.999.999"
        }
      },
      "real": {
        "url": "http://192.168.1.13/v1/streams/video:start?ip=999.999.999.999",
        "status": 404,
        "ok": false,
        "headers": {
          "content-length": "50",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": [
            "Network Host Resolve Error"
          ]
        },
        "size": 50,
        "latencyMs": 51.22103199999947
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/streams/video:start?ip=999.999.999.999",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "76",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "started",
          "stream": "video",
          "target": "999.999.999.999",
          "errors": []
        },
        "size": 76,
        "latencyMs": 5.435134999999718
      },
      "diff": [
        {
          "kind": "status",
          "real": 404,
          "mock": 200
        },
        {
          "kind": "headers",
          "real": {
            "content-length": "50",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "76",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": [
              "Network Host Resolve Error"
            ]
          },
          "mock": {
            "result": "started",
            "stream": "video",
            "target": "999.999.999.999",
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "streams-start-stop",
      "operations": [
        "PUT /v1/streams/{stream}:start",
        "PUT /v1/streams/{stream}:stop"
      ],
      "requestName": "stop-video",
      "request": {
        "method": "PUT",
        "path": "/v1/streams/video:stop"
      },
      "real": {
        "url": "http://192.168.1.13/v1/streams/video:stop",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "22",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": []
        },
        "size": 22,
        "latencyMs": 26.100201000000197
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/streams/video:stop",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "49",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "stopped",
          "stream": "video",
          "errors": []
        },
        "size": 49,
        "latencyMs": 4.120307000000139
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "22",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "49",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": []
          },
          "mock": {
            "result": "stopped",
            "stream": "video",
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "drives-operations",
      "operations": [
        "PUT /v1/drives/{drive}:mount",
        "PUT /v1/drives/{drive}:reset",
        "PUT /v1/drives/{drive}:set_mode"
      ],
      "requestName": "mount-missing-image",
      "request": {
        "method": "PUT",
        "path": "/v1/drives/drive8:mount",
        "query": {
          "image": "//USB0/does-not-exist.d64"
        }
      },
      "real": {
        "url": "http://192.168.1.13/v1/drives/drive8:mount?image=%2F%2FUSB0%2Fdoes-not-exist.d64",
        "status": 400,
        "ok": false,
        "headers": {
          "content-length": "46",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": [
            "Invalid Drive 'drive8'"
          ]
        },
        "size": 46,
        "latencyMs": 13.061549000000014
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/drives/drive8:mount?image=%2F%2FUSB0%2Fdoes-not-exist.d64",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "109",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "mounted",
          "drive": "drive8",
          "image": "//USB0/does-not-exist.d64",
          "type": null,
          "mode": null,
          "errors": []
        },
        "size": 109,
        "latencyMs": 4.411107000000811
      },
      "diff": [
        {
          "kind": "status",
          "real": 400,
          "mock": 200
        },
        {
          "kind": "headers",
          "real": {
            "content-length": "46",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "109",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": [
              "Invalid Drive 'drive8'"
            ]
          },
          "mock": {
            "result": "mounted",
            "drive": "drive8",
            "image": "//USB0/does-not-exist.d64",
            "type": null,
            "mode": null,
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "drives-operations",
      "operations": [
        "PUT /v1/drives/{drive}:mount",
        "PUT /v1/drives/{drive}:reset",
        "PUT /v1/drives/{drive}:set_mode"
      ],
      "requestName": "reset-drive",
      "request": {
        "method": "PUT",
        "path": "/v1/drives/drive8:reset"
      },
      "real": {
        "url": "http://192.168.1.13/v1/drives/drive8:reset",
        "status": 400,
        "ok": false,
        "headers": {
          "content-length": "46",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": [
            "Invalid Drive 'drive8'"
          ]
        },
        "size": 46,
        "latencyMs": 10.906342000000222
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/drives/drive8:reset",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "57",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "reset",
          "drive": "drive8",
          "count": 1,
          "errors": []
        },
        "size": 57,
        "latencyMs": 2.5490149999995992
      },
      "diff": [
        {
          "kind": "status",
          "real": 400,
          "mock": 200
        },
        {
          "kind": "headers",
          "real": {
            "content-length": "46",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "57",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": [
              "Invalid Drive 'drive8'"
            ]
          },
          "mock": {
            "result": "reset",
            "drive": "drive8",
            "count": 1,
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "drives-operations",
      "operations": [
        "PUT /v1/drives/{drive}:mount",
        "PUT /v1/drives/{drive}:reset",
        "PUT /v1/drives/{drive}:set_mode"
      ],
      "requestName": "set-mode-invalid",
      "request": {
        "method": "PUT",
        "path": "/v1/drives/drive8:set_mode",
        "query": {
          "mode": "9999"
        }
      },
      "real": {
        "url": "http://192.168.1.13/v1/drives/drive8:set_mode?mode=9999",
        "status": 400,
        "ok": false,
        "headers": {
          "content-length": "46",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": [
            "Invalid Drive 'drive8'"
          ]
        },
        "size": 46,
        "latencyMs": 26.646512000000257
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/drives/drive8:set_mode?mode=9999",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "64",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "mode_set",
          "drive": "drive8",
          "mode": "9999",
          "errors": []
        },
        "size": 64,
        "latencyMs": 2.5817559999995865
      },
      "diff": [
        {
          "kind": "status",
          "real": 400,
          "mock": 200
        },
        {
          "kind": "headers",
          "real": {
            "content-length": "46",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "64",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": [
              "Invalid Drive 'drive8'"
            ]
          },
          "mock": {
            "result": "mode_set",
            "drive": "drive8",
            "mode": "9999",
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "files-info-invalid",
      "operations": [
        "GET /v1/files/{path}:info"
      ],
      "requestName": "missing-file",
      "request": {
        "method": "GET",
        "path": "/v1/files/Usb0%2Fmissing.prg:info"
      },
      "real": {
        "url": "http://192.168.1.13/v1/files/Usb0%2Fmissing.prg:info",
        "status": 404,
        "ok": false,
        "headers": {
          "content-length": "42",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": [
            "PATH DOESN'T EXIST"
          ]
        },
        "size": 42,
        "latencyMs": 11.513906000000134
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/files/Usb0%2Fmissing.prg:info",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "65",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "path": "Usb0/missing.prg",
          "size": 4096,
          "type": "file",
          "errors": []
        },
        "size": 65,
        "latencyMs": 1.4496719999997367
      },
      "diff": [
        {
          "kind": "status",
          "real": 404,
          "mock": 200
        },
        {
          "kind": "headers",
          "real": {
            "content-length": "42",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "65",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": [
              "PATH DOESN'T EXIST"
            ]
          },
          "mock": {
            "path": "Usb0/missing.prg",
            "size": 4096,
            "type": "file",
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "machine-reboot",
      "operations": [
        "PUT /v1/machine:reboot"
      ],
      "requestName": "reboot",
      "request": {
        "method": "PUT",
        "path": "/v1/machine:reboot"
      },
      "note": "Exercises reboot endpoint; allow extra settle time after call.",
      "real": {
        "url": "http://192.168.1.13/v1/machine:reboot",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "22",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": []
        },
        "size": 22,
        "latencyMs": 148.9344430000001
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/machine:reboot",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "31",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "reboot",
          "errors": []
        },
        "size": 31,
        "latencyMs": 1.722233999999844
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "22",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "31",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": []
          },
          "mock": {
            "result": "reboot",
            "errors": []
          }
        }
      ]
    },
    {
      "scenarioId": "cleanup-reset",
      "operations": [
        "PUT /v1/machine:reset"
      ],
      "requestName": "final-reset",
      "request": {
        "method": "PUT",
        "path": "/v1/machine:reset"
      },
      "note": "Issued automatically after the comparison suite to return the device to READY.",
      "real": {
        "url": "http://192.168.1.13/v1/machine:reset",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "22",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "errors": []
        },
        "size": 22,
        "latencyMs": 33.36906100000033
      },
      "mock": {
        "url": "http://127.0.0.1:40443/v1/machine:reset",
        "status": 200,
        "ok": true,
        "headers": {
          "content-length": "30",
          "content-type": "application/json"
        },
        "bodyType": "json",
        "body": {
          "result": "reset",
          "errors": []
        },
        "size": 30,
        "latencyMs": 4.308577000000696
      },
      "diff": [
        {
          "kind": "headers",
          "real": {
            "content-length": "22",
            "content-type": "application/json"
          },
          "mock": {
            "content-length": "30",
            "content-type": "application/json"
          }
        },
        {
          "kind": "body",
          "real": {
            "errors": []
          },
          "mock": {
            "result": "reset",
            "errors": []
          }
        }
      ]
    }
  ]
}